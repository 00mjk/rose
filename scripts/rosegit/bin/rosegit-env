#!/bin/bash
#
# Purpose:
#    Configures the environment for ROSE development and either runs the specified command or invokes a shell. The environment
#    for the command or shell consists of:
#
#     ROSE_BLD: the absolute name of the top of the build directory
#     ROSE_SRC: the absolute name of the top of the source directory
#
#    Various environment variables all beginning with "ROSEGIT_" (see defaults.conf)
#     ROSEGIT_LOADED: non-empty if rosegit configuration files have been loaded
#
#    Shared library settings:
#     LD_LIBRARY_PATH includes directories from various parts of the $ROSE_BLD hierarchy.
#
# Usage: rosegit-env [SWITCHES] [COMMAND ARGS...]
#    --blddir=DIR
#         Use the specified directory as the top of the build tree rather than what's in $ROSE_BLD or guessing.
#
#    --srcdir=DIR
#         Use the specified directory as the top of the source tree rather than what's in $ROSE_SRC or guessing.
#
#    --namespace=NS
#         Use the specified three-letter namespace (lower case) to find configuration files.
#
#    --config=CONF
#         The name of a configuration file that is the last one to be loaded, or the name of a directory containing the
#         configuration files. This is ignored if the configuration appears to be loaded already.
#
# Your current working directory should be somewhere in the rose build tree.
#
source rosegit-functions.sh || exit 1

# Parse command-line arguments
config=
while [ "$#" -gt 0 ]; do
    case "$1" in
	--) shift; break;;
	--blddir=*) ROSE_BLD="${1##--blddir=}"; shift;;
	--config=*) config="${1##--config=}"; shift;;
	--namespace=*) ROSEGIT_NAMESPACE="${1##--namespace=}"; shift ;;
	--srcdir=*) ROSE_SRC="${1##--srcdir=}"; shift;;
	-*) rosegit_die "unknown switch: $1";;
	*) break;;
    esac
done

# Find build and source trees and load configurations
rosegit_preamble $config

# Run the subordinate command. If there is none then run bash instead.
if [ "$#" -eq 0 ]; then
    rosegit_show_environment
    export PS1_STACK="rose $PS1_STACK"
    exec ${SHELL:-/bin/bash}
else
    exec "$@"
fi
echo "$0: exec failed" >&2
exit 1
