#!/bin/bash
#
# This is the launcher for smgit2.  It just runs the "smgit2" perl script that it finds in the "origin/master"
# branch of the Git repository containing your current working directory.
#
# For convenience, install this launcher shell script as "smgit2" somewhere in your $PATH (I put it in ~/bin
# on my system).  Then whenever you run a command like "smgit2 status" this launcher will make sure you're
# using the most recent, fully tested version of smgit2.
####################################################################################################################


# Find top-level ROSE repo. These two functions are copied straight from smgit2.
rose=$(perl -e '
    use Cwd;
    use strict;

    # Returns true if specified directory looks like its the top of ROSE
    sub is_top_of_rose {
      my($dir) = @_;
      return unless -d $dir && -d "$dir/.git";
      return unless open MODULES, "$dir/.gitmodules";
      my $has_edg = grep {m(^\[\s*submodule\s+\"src/frontend/CxxFrontend/EDG\"\s*]\s*$)} <MODULES>;
      close MODULES;
      return $has_edg;
    }

    # Returns absolute directory name for top of ROSE repo.  Your CWD must be somewhere inside ROSE to start with.
    sub top_of_rose {
      my @comps = split /\//, getcwd;
      while (@comps) {
	my $s = join "/", @comps;
	return $s if is_top_of_rose $s;
	pop @comps;
      }
      die "cannot find top of ROSE source tree (cwd=@{[getcwd]})";
    }

    print top_of_rose, "\n";
')
[ -d "$rose" ] || exit 1

# Run smgit2 if possible
rev=$(git rev-parse origin/master:scripts/smgit2)
if [ -n "$rev" ]; then
    echo "$0: running smgit2 revision $(echo $rev |cut -c1-8)..."
    exec perl <(git show origin/master:scripts/smgit2) "$@"
    exit 1
else
    echo "$0: cannot find the real smgit2 perl script" >&2
    exit 1
fi
