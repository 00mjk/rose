#!/bin/bash

# test 1-9: normalization: YES
# test 10:  normalization: NO

TESTDIR=$1
echo "------------------------------------------------"
echo "running NORMALIZATION TESTS"
echo "------------------------------------------------"

BENCH_PASS=0
BENCH_FAIL=0

function NormalizationTests {
    testNumbers=""
    skipNumbers=""
    #testNumbers=`echo {01..39}`
    testNumbers+=`echo {01..23}`
    testNumbers+=" "
    skipNumbers+=`echo {24..26}`
    skipNumbers+=" "
    testNumbers+=`echo {27..29}`
    testNumbers+=" "
    testNumbers+=`echo {30..34}`
    testNumbers+=" "
    skipNumbers+=`echo {35..36}`
    testNumbers+=`echo {37..39}`
    echo "Skipped tests: $skipNumbers"
    echo "Scheduled tests: $testNumbers"
    for testNumber in $testNumbers; do
        benchmarkprefix=$TESTDIR/NORM${testNumber};
        for benchmark in ${benchmarkprefix}*.C; do
            benchmarkname=$(basename $benchmark)
            echo -n "Testing $benchmarkname : "
            g++ $benchmark
            ./codethorn $benchmark --normalize-all=yes --unparse=yes #> /dev/null
            if [ ! $? -eq 0 ]
            then
	            echo "FAIL"
                exit 1
            fi
            g++ rose_${benchmarkname} 
            if [ ! $? -eq 0 ]
            then
	            echo "FAIL"
                exit 1
            else
	            echo "PASS"
            fi
        done
    done
}

NormalizationTests

rm -f rose_normalization*.C
rm -f a.out

