#
# Makefile_standalone is the Makefile template for srw98 and nnh99
# to build standalone executables.
#
# To use it, call make and pass ANALYSIS=srw98 or ANALYSIS=nnh99
# 
# Author: Viktor Pavlu, 2009
#

ANALYSIS='please set ANALYSIS to nnh99 or srw98 when calling this makefile'
CARRIER=ShapeGraphSetLifted

BUILDDIR=build


.PHONY: $(ANALYSIS)shape_
.PHONY: $(ANALYSIS)clean_

# $(ANALYSIS)shape compiles and links the analysis as standalone binary.
# postprocess-main edits the newanalysis-generated main.[Ch]
# files to include common code fragments like visualisation
$(ANALYSIS)shape_: $(BUILDDIR)/$(ANALYSIS) \
	                 $(BUILDDIR)/$(ANALYSIS)/$(ANALYSIS).optla \
	                 $(BUILDDIR)/$(ANALYSIS)/main.C \
	                 $(BUILDDIR)/$(ANALYSIS)/attributes \
	                 $(BUILDDIR)/$(ANALYSIS)/ShapeAnalyzerOptions.h \
	                 $(BUILDDIR)/$(ANALYSIS)/ShapeCommandLineParser.h \
	                 $(BUILDDIR)/$(ANALYSIS)/ShapeAnalysisDriver.h \
	                 $(BUILDDIR)/$(ANALYSIS)/PagAttributes.C \
	                 $(BUILDDIR)/$(ANALYSIS)/visualisation.h \
	                 $(BUILDDIR)/$(ANALYSIS)/Makefile.custom
	$(MAKE) all -C $(BUILDDIR)/$(ANALYSIS)

$(BUILDDIR)/$(ANALYSIS):
	mkdir -p $(BUILDDIR)/$(ANALYSIS)

$(BUILDDIR)/$(ANALYSIS)/Makefile.custom: $(ANALYSIS)/Makefile.custom
	cp $(ANALYSIS)/Makefile.custom $(BUILDDIR)/$(ANALYSIS)/

$(BUILDDIR)/$(ANALYSIS)/$(ANALYSIS).optla: $(ANALYSIS)/$(ANALYSIS).code
	# include common_*.optla into $(ANALYSIS).optla, customize DFI, remove prefix
	cpp -C -P $(ANALYSIS)/$(ANALYSIS).code | sed -e 's/{DFI}/$(CARRIER)/g' | grep -v "prefix *: *$(ANALYSIS)" > $(BUILDDIR)/$(ANALYSIS)/$(ANALYSIS).optla

$(BUILDDIR)/$(ANALYSIS)/main.C: $(BUILDDIR)/$(ANALYSIS)/$(ANALYSIS).optla
	cd $(BUILDDIR); newanalysis $(ANALYSIS)
	./postprocess-main $(BUILDDIR)/$(ANALYSIS)/main.C $(ANALYSIS)

# customize carrier type in visualisation.h
$(BUILDDIR)/$(ANALYSIS)/visualisation.h: visualisation.h
	sed visualisation.h -e 's/{DFI}/o_$(CARRIER)/g' > $(BUILDDIR)/$(ANALYSIS)/visualisation.h

# copy common files to target
$(BUILDDIR)/$(ANALYSIS)/attributes: attributes
	cp attributes $(BUILDDIR)/$(ANALYSIS)/
$(BUILDDIR)/$(ANALYSIS)/ShapeAnalyzerOptions.h: ShapeAnalyzerOptions.h
	cp ShapeAnalyzerOptions.h $(BUILDDIR)/$(ANALYSIS)/
$(BUILDDIR)/$(ANALYSIS)/ShapeCommandLineParser.h: ShapeCommandLineParser.h
	cp ShapeCommandLineParser.h $(BUILDDIR)/$(ANALYSIS)/
$(BUILDDIR)/$(ANALYSIS)/ShapeAnalysisDriver.h: ShapeAnalysisDriver.h
	cp ShapeAnalysisDriver.h $(BUILDDIR)/$(ANALYSIS)/
$(BUILDDIR)/$(ANALYSIS)/PagAttributes.C: PagAttributes.C
	cp PagAttributes.C $(BUILDDIR)/$(ANALYSIS)/


$(ANALYSIS)clean_:
	test ! -e $(BUILDDIR)/$(ANALYSIS)/Makefile || $(MAKE) clean -C $(BUILDDIR)/$(ANALYSIS)
	rm -f $(BUILDDIR)/$(ANALYSIS)/$(ANALYSIS).optla $(BUILDDIR)/$(ANALYSIS)/GraphStats.h \
      $(BUILDDIR)/$(ANALYSIS)/attributes \
      $(BUILDDIR)/$(ANALYSIS)/ShapeAnalyzerOptions.h \
      $(BUILDDIR)/$(ANALYSIS)/ShapeCommandLineParser.h \
      $(BUILDDIR)/$(ANALYSIS)/ShapeAnalysisDriver.h \
      $(BUILDDIR)/$(ANALYSIS)/PagAttributes.C \
      $(BUILDDIR)/$(ANALYSIS)/visualisation.h \
      $(BUILDDIR)/$(ANALYSIS)/Makefile \
      $(BUILDDIR)/$(ANALYSIS)/Makefile.custom \
      $(BUILDDIR)/$(ANALYSIS)/main-support.[Ch] \
      $(BUILDDIR)/$(ANALYSIS)/main.[Ch] \
      $(BUILDDIR)/$(ANALYSIS)/$(ANALYSIS)_implementation.[Ch] \
      $(BUILDDIR)/$(ANALYSIS)/runtests

# vim: noexpandtab:
