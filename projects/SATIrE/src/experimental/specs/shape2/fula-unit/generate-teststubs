#!/bin/bash

#   generates the functions that perform unit tests,
#   these functions are then called by the test driver.

# Author: Viktor Pavlu, 2009

if [ "$#" -ne "2" ]; then
  echo "$0 must be executed where ./test_* are"
  echo "usage: $0 STUBSFILE CALLSFILE"
  exit 1
fi

stubsfile=$1
callsfile=$2


cat > "$stubsfile" <<EOF
// this file was generated by $0, do not edit.
// see readme if you want to add unit tests.

EOF

cat > "$callsfile" <<EOF
// this file was generated by $0, do not edit.
// see readme if you want to add unit tests.

run_unit_tests::->bool;
run_unit_tests() =
  let dummy = print("running unit tests...\n") true; in

EOF


for f in `ls test_*`; do
  echo -n "generating from $f ..."

  testdescription=`head -n 1 $f`
  [[ "$testdescription" == //* ]] || testdescription="// no description-line in $f"

  code=`cat "$f"`

  # create test function
cat >> "$stubsfile" <<EOF
fula_unit_$f::->bool;
fula_unit_$f() =
$code


EOF


  # create function call for the test function
  cat >> "$callsfile" <<EOF
  let msg = if fula_unit_$f() then "ok     " else "FAILED!" endif; in
  let dummy = print("  ") print(msg) print("  $testdescription\n") true; in

EOF


  echo " done."
done




cat >> "$callsfile" <<EOF
  true;

EOF

