/* Author: Markus Schordan
   E-mail: markus@complang.tuwien.ac.at
   Year  : 2006
*/

// -------------------------------------------------
// GARBAGE COLLECTION functions (not used currently)
// -------------------------------------------------

gc::ShapeGraph -> ShapeGraph;
gc(((EV,ES),I)) = let newev = reach({a !! (x,a) <-- EV},ES) ;
                         in let 
                              ES_ = { obj !! (x,_,y) as obj  <-- ES, 
                                             if x ? newev,
                                             if y ? newev };
                              IS_ = intersect(I , newev); 
                              in ((EV,ES_),IS_);
   
gc_up(info) = let info2 <= info;  in  lift(gc(info2));

reach(ev,es) = let newev = union({ x !! (y,_,x) <-- es, if y ? ev } , ev);
               in if ev != newev 
                     then reach(newev,es) else newev endif;
