#!/bin/bash

function usage {
  echo "$0 is called by Makefile for postprocessing on the"
  echo "generated main.C"
  echo " - visualisation code is customized to carrier type"
  echo " - custom commandline args are added"
  echo ""
  echo "Usage: $0 path/to/main.C srw98|nnh99"
}

function die {
  echo $@
  exit -1
}

if [ "$2" = '' ]; then usage; die; fi

case 1 in
  --help|-?)
    usage && exit 0
    ;;

  *)
    main="$1"
    analysis="$2"
    custom_header="#include \"$analysis-out/src/$analysis.h\""

    [ -e "$main" ] || die "file not found: $main"
    dir=`dirname "$main"`
    temp="$dir/temp.C"

    # 
    lineno_of_main=`grep -n 'int main(int argc, char \*\*argv)' "$main" | cut -d : -f 1`

    # put lines 0..<1 before main(argc,argv)> into $temp
    head -n $(( lineno_of_main - 1 )) "$main" > "$temp"
    
    # append my custom header to $temp
    cat >> "$temp" <<EOF
$custom_header
#include "visualisation.h"

#define ANALYSIS_$analysis    // is used to flag default-values in cmdline options/parser
#include "ShapeAnalysisDriver.h"

// quickfix: add a global reference to the analyzer options
// inside the driver that can be accessed from the visualisation

ShapeAnalyzerOptions *opt;

EOF
    # append the rest of the original main.C to $temp
    # but replace AnalysisDriver with ShapeAnalysisDriver
    # and set the global analyzer options reference
    tail -n +$lineno_of_main "$main" |\
      sed -e "s/AnalysisDriver analysisDriver(argc, argv);/ShapeAnalysisDriver analysisDriver(argc, argv);\n    opt = (ShapeAnalyzerOptions*)analysisDriver.getOptions();/g" \
      >> "$temp"

    # append visualisation.c to main.C with DFI replaced
    # with the actual carrier type
    case "$analysis" in
      srw98) DFI=o_ShapeGraphLifted;;
      nnh99) DFI=o_ShapeGraphSetLifted;;
      *) die unknown analysis "$analysis"
    esac
    sed visualisation.c -e "s/{DFI}/$DFI/g" >> "$temp"

    # finally, replace old main.C
    mv "$temp" "$main"
    exit 0
esac
