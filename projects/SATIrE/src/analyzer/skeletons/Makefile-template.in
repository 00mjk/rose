# -*- makefile -*-
# you do not usually need to edit this file
PAGDIR=@pagdir@
ROSE_INCLUDE=@roseinclude@
ROSE_LIB=@roselib@
SATIRE_LIB=@satirelib@
SATIRE_INCLUDE=@satireinclude@
SATIRE_DATA=@pkgdatadir@

# variable CUSTOM_CFLAGS can be in separate file; so can options from
# newcombined analysis
custommakefile = $(wildcard Makefile*)
ifneq '$(custommakefile)' 'Makefile'
include Makefile.custom
endif

# OTHERANALYSES is set by newcombinedanalysis
OTHERANALYSISLIBS = ${OTHERANALYSES:%=otheranalyses/%.a}

PAG = $(PAGDIR)/bin/pag
CXXFLAGS = -Wall -ggdb -I$(ROSE_INCLUDE) -I$(PAGDIR)/include/pag -I$(PAGDIR)/include/pag/analyzer -I$(ANALYSIS)-out/src/ -I$(SATIRE_INCLUDE)
LPATH = -L$(ROSE_LIB) -Wl,-rpath $(ROSE_LIB) -L $(PAGDIR)/lib/pag -L$(SATIRE_LIB) 
LIBS = $(ANALYSIS).a $(OTHERANALYSISLIBS) -lsatire -lsyntree -ltermite -lrose -lrt -lpag -lfl

# common macro definitions passed on the command line
D_FLAGS = -DANALYSIS=$(ANALYSIS) -DCARRIER_TYPE=$(CARRIER_TYPE) -DPREFIX=$(PREFIX) -DPREFIX_SET=$(PREFIX_SET)

.PHONY: all clean check update newanalysis

all: $(ANALYSIS)

$(ANALYSIS).a: $(ANALYSIS).set $(ANALYSIS).optla
	mkdir -p anim-out
	mkdir -p $(ANALYSIS)-out/src
	mkdir -p otheranalyses
	# call PAG to (try to) generate an analyzer
	if $(PAG) $(SATIRE_INCLUDE)/ iterate1.t $(ANALYSIS) $(ANALYSIS)-out --prefix=$(PAGDIR) 2> pag-out; then cat pag-out; else cat pag-out; false; fi
	# override syntree.o in the generated directory
	ar x $(SATIRE_LIB)/libsyntree.a syntree.o
	mv syntree.o $(ANALYSIS)-out/src/
	# override definitions for PAG data types provided by SATIrE
	ar x $(SATIRE_LIB)/libpagdatatypes.a
	mv `ar t $(SATIRE_LIB)/libpagdatatypes.a` $(ANALYSIS)-out/src/
	# make the analyzer library
	$(MAKE) CFLAGS="$(CUSTOM_CFLAGS)" -C $(ANALYSIS)-out/src/
	cp $(ANALYSIS)-out/src/$(ANALYSIS).a .

main.o: main.C
	g++ $(CXXFLAGS) $(D_FLAGS) $(CUSTOM_CFLAGS) -c main.C

main-support.o: main-support.C
	g++ $(CXXFLAGS) $(D_FLAGS) $(CUSTOM_CFLAGS) -c main-support.C

$(ANALYSIS): $(ANALYSIS).a main.o main-support.o $(OTHERANALYSISLIBS)
	g++ $(CXXFLAGS) $(D_FLAGS) $(CUSTOM_CFLAGS) main.o main-support.o -o $(ANALYSIS) $(LPATH) $(LIBS) 
	@echo
	@echo 'PAG said:'
	@cat pag-out
	@echo "nothing, because it wasn't run (the analysis specification has not changed)" > pag-out

otheranalyses/%.a:
	$(MAKE) CFLAGS="$(CUSTOM_CFLAGS)" $*.a -C $*
	cp $*/$*.a otheranalyses/

clean:
	rm -f *~ *.o *.a pig_temp* syntree* $(ANALYSIS) *.gdl pag-out
	rm -rf $(ANALYSIS)-out/
	rm -rf anim-out
	rm -f a.out
	rm -f rose_*
	for analysis in $(OTHERANALYSES); do $(MAKE) clean -C $$analysis; done
	rm -rf otheranalyses/

check:  $(ANALYSIS)
	sh runtests
