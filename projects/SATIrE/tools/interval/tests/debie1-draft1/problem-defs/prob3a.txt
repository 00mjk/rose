PROBLEM 3a: Hit Trigger interrupt handler, no ADC errors

Rationale

   The Hit Trigger ISR has a deadline for two reasons: firstly, because
   the "peak-hold" circuits in the sensors lose their values (leak) with
   time, so they must be read soon after the "hit" happens; and secondly
   to handle a certain number of hits per second.

   The Hit Trigger ISR measures several analog values with the ADC.
   After the ADC is activated to measure a channel, the ISR runs a
   polling loop until the ADC signals that conversion is finished. Thus,
   the normal number of iterations of the polling loops depends on the
   nominal conversion speed of the ADC; this problem makes a certain
   assumption (see "Other constraints").

   Theoretically, the ADC can fail to complete a conversion. The ADC
   polling loops in the ISR have a fixed maximum repetition count, after
   which they stop polling and set a flag (HIT_ADC_ERROR) in a status
   register. This error can, in principle, occur between zero and five
   (NUM_CH) times in each execution of the ISR. (The error is ignored if
   it happens in the first, dummy conversion that just switches the ADC
   into "bipolar mode.") The nominal case is zero errors and is
   addressed in this problem.

Subprogram

   HandleHitTrigger

Inputs

   END_OF_ADC
      Macro that returns the "end of conversion" flag from the ADC.
      Any value in the type, but see "Other conditions".

   GET_RESULT
      Macro that reads the result of the ADC, 8 bits at a time.
      Two consecutive readings (MSB, then LSB) are needed to get
      the whole result.
      Each read value can be 0 .. 255.

   hit_budget_left
      Statically allocated integer variable.
      Value in the range 0 .. HIT_BUDGET_DEFAULT.

   self_test_SU_number
      Statically allocated enumeration variable.
      Range 0 .. 4.

   SU_state[]
      Statically allocated state variable indexed by SU number.
      Any value in its type (SU_state_t).

   telemetry_data.hit_budget_exceedings
      Component of a statically allocated state variable.
      Value 0 .. 255.

   TRIGGER_SOURCE_0
   TRIGGER_SOURCE_1
      Macros that read interrupt source-identification bits.
      Value 0 .. 1, each.

Other constraints

   After each activation of the ADC (with the START_CONVERSION macro),
   the first invocation of END_OF_ADC returns "conversion active" and
   the second invocation returns "conversion finished".

Path-analysis results to be reported

   Upper bound on the number of invocations of END_OF_ADC.

   Upper bound on the number of executions of the statement
   "trigger |= HIT_ADC_ERROR;".

Results to be reported

   WCET of HandleHitTrigger.
