PROBLEM 4d: TC Execution task, buffer TC word

Rationale

   For the general rationale see problem 4a.

   This analysis problem addresses the special case when the SW is
   buffering a multi-word TC (a memory-patching TC). In this mode, the
   TC Execution task has a deadline of 10 ms. Problems 4b and 4c covered
   the processing of the first and second words of a multi-word TC,
   which choose between data and code memory and define the patch
   address. This Problem 4d covers the third and remaining words up to
   but not including the last word. These words define the
   (uninterpreted) binary data to be patched into memory. The last word
   in a multi-word TC executes the patch and a possible post-patch
   action; it is covered in Problem 4a.

   The main input is the TC command word that was received and accepted
   by the TC interrupt service routine. This input is set by the call of
   WaitMail at the start of HandleTelecommand. For this problem, the
   received TC word is an uninterpreted data word and has no effect on
   the control flow, so it is not listed as an "Input" below.

Subprogram

   HandleTelecommand

Inputs

   memory_buffer_index
      A statically allocated variable that shows the next free location
      in the multi-word TC buffer.
      Any value between 0 and MEM_BUFFER_SIZE - 1.

   TC_state
      A global state variable.
      Has the value memory_patch_e (set by the second TC word of the
      multi-word TC).

   TC_mail
      A statically allocated structure that holds status flags and a
      pointer to received_command.TC_word. The status flags are set by
      the call of WaitMail. Any values are possible.

Other constraints

   As in Problem 4a.

Path-analysis results to be reported

   None.

WCET-analysis results to be reported

   WCET of HandleTelecommand
