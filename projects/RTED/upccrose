#!/bin/bash

 ccacheprefix=`which ccache`

 cxx="$ccacheprefix g++"
 upc="upc"

 runtimesystem=""
 stdlib=""
 rtedlib=""
 upcflags="-O0 -g -dwarf-2-upc -DWITH_UPC=1 -Wall -Wextra"
 cxxflags="-O0 -g -DWITH_UPC=1 -Wall -Wextra"

 for var in "$@"
 do
    parameter="$var"
    if [ "$parameter" = "-o" ]; then
      remove=$parameter;
    elif [ "x$parameter" = "x-pthread" ] ; then
     remove=$parameter;
    elif [ "x$parameter" = "xCppRuntimeSystem/libCppRuntimeSystem.la" ]; then
#     newOption=$newOption" CppRuntimeSystem/.libs/libCppRuntimeSystem.so";
     remove=$parameter
    elif [ "x$parameter" = "x-Winvalid-pch" ]; then
     remove=$parameter;
    elif [ "x$parameter" = "x-fPIC" ]; then
     remove=$parameter;
    elif [ "x$parameter" = "x-rose:UPC" ]; then
     remove=$parameter;
    elif [[ $parameter == *RuntimeSystem.cpp ]]; then
     runtimesystem=$parameter
    elif [[ $parameter == *.upc ]]; then
      filename=`basename $parameter .upc`
      inpfiles="$inpfiles $parameter"
      objfiles="$objfiles $filename.o"
    elif [[ $parameter == *.bin ]]; then
      executable="-o $parameter"
    else
      newOption=$newOption" "$parameter;
    fi
#    echo "$remove";
# --------- $parameter";
 done
#echo "REMOVED :: $remove"
#echo "KEPT :: $newOption"
#echo $newOption;

# compiling with C++ and RTED runtime?
if [ "$runtimesystem" != "" ]; then
  rtedsrcdir=`dirname $runtimesystem`

  CMD="$cxx $cxxflags -c $runtimesystem"
  echo "$CMD"
  $CMD

  CMD="$upc $upcflags -c $rtedsrcdir/ParallelRTS.upc"
  echo "$CMD"
  $CMD

  rtedlib="-L./CppRuntimeSystem/.libs/ -lCppRuntimeSystem"
  objfiles="$objfiles ParallelRTS.o RuntimeSystem.o"
fi

CMD="$upc $upcflags $newOption -c $inpfiles"
echo "$CMD"
$CMD

CMD="upc++link -dwarf-2-upc $executable $objfiles $rtedlib"
echo "$CMD"
$CMD

#echo "rm $objfiles"
#rm $objfiles
