CLASSNAME::~CLASSNAME ()
   {
   }

CLASSNAME::CLASSNAME ( ROSE_Statement* stmt )
   : BASECLASSNAME (stmt)
   {
     ROSE_ASSERT (stmt != NULL);

  // setVariant ( CLASSNAME_TAG );
  // setParseError(FALSE);
     ROSE_TransformableNode::setUp (CLASSNAME_TAG,stmt);
   }

ROSE_TransformableNode* CLASSNAME::transform()
   {
  // printf ("Sorry not implemented, CLASSNAME::Tranform() \n");
  // ROSE_ABORT();

     ROSE_ASSERT (!error());

     ROSE_Statement* roseStmt = (ROSE_Statement*) getRoseSubTree();
     ROSE_ASSERT (roseStmt != NULL);
     SgStatement* stmt = (SgStatement*) roseStmt->getSageSubTree();
     ROSE_ASSERT (stmt != NULL);

     if ( (ROSE_DEBUG > 0) || (ROSE::verbose == TRUE) )
          printf ("In CLASSNAME::transform(): (file name = %s line number = %d) \n",
               ROSE::getFileName(stmt),ROSE::getLineNumber(stmt));

     return this;
   }

ROSE_Statement* CLASSNAME::getRoseStatement ()
   {
  // ROSE_ASSERT (!error());
     return (ROSE_Statement*) getRoseSubTree(); 
   }

void CLASSNAME::setRoseStatement ( ROSE_Statement* stmt )
   {
     ROSE_ASSERT (stmt != NULL);
     setRoseSubTree(stmt);
   }
