       // Special constructor for CLASSNAME
          CLASSNAME ( SgExpression* expr );

       // I think that the case of a operator= is a special case and not the same 
       // as the more general (common) binary operators (since it is a member function 
       // in A++/P++ instead of a friend function as the rest of the operators are, 
       // like +,-,*,/,%.
          void recognizeSageSubTree ( SgExpression* expr );

       // Define this function on the leaves of the tree representing our grammar
          virtual ROSE_Node* transform();

       // Member functions specific to CLASSNAME
          virtual SgExpression* getLhsSageExpression();
          virtual SgExpression* getRhsSageExpression();

          virtual void setLhsSageExpression ( SgExpression* expr );
          virtual void setRhsSageExpression ( SgExpression* expr );

       // Build the ROSE_C_Expression containing the sage assignment operator
          virtual ROSE_Node* transform ( ROSE_Expression* roseLhsExpression, ROSE_Expression* roseRhsExpression );

       // Build the Sage assignment operator
          SgExpression* buildExpression ( ROSE_Expression* node, SgExpression* sageLhsExpression, SgExpression* sageRhsExpression );

       // SgType* getType();
#if 0
     private:
          SgBinaryOp* sageBinaryOperator;
#endif
