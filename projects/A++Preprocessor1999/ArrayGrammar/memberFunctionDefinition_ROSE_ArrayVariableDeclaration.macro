CLASSNAME::~CLASSNAME()
   {
   }

CLASSNAME::CLASSNAME ( SgStatement* stmt )
   : BASECLASSNAME (stmt)
   {
     ROSE_ASSERT (stmt != NULL);
     if (stmt != NULL)
        {
       // This is an insufficient test to verify that this is a valid array declaration
#if ROSE_INTERNAL_DEBUG
          if (ROSE_DEBUG > 0)
             {
               printf ("CLASSNAME constructor has not verified that stmt is a valid root! \n");
             }
#endif

       // setVariant ( CLASSNAME_TAG );
          ROSE_Node::setUp (CLASSNAME_TAG,stmt);
          setParseError(FALSE);
        }
       else
        {
          setParseError(TRUE);
        }
   }


ROSE_Node* CLASSNAME::transform()
   {
  // printf ("Sorry not implemented, CLASSNAME::Tranform() \n");
  // ROSE_ABORT();

     ROSE_ASSERT (!error());

     SgStatement* stmt = (SgStatement*) getSageSubTree();

     if ( (ROSE_DEBUG > 0) || (ROSE::verbose == TRUE) )
          printf ("In CLASSNAME::transform(): (file name = %s line number = %d) \n",
               ROSE::getFileName(stmt),ROSE::getLineNumber(stmt));

     return NULL;
   }







