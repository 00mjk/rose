       // Special constructor for CLASSNAME;
          CLASSNAME ( SgForStatement* whereStatement );

       // Define the abstractBaseClass function
          virtual ROSE_Node* transform();

          void recognizeSageSubTree ( SgForStatement* whereStatement );

          void setRoseConditionalStatement     ( ROSE_Statement*      roseStatement );
          void setRoseElseWhereStatementBlock  ( ROSE_StatementBlock* roseStatementBlock );
          void setRoseNextElseWhereStatement   ( ROSE_ElseWhereStatement* roseStatement );

          ROSE_Statement*          getRoseConditionalStatement    ();
          ROSE_StatementBlock*     getRoseElseWhereStatementBlock ();
          ROSE_ElseWhereStatement* getRoseNextElseWhereStatement  ();

     private:
       // The different parts of a "where" statement
       // later we have to connect the where and elsewhere statements
          ROSE_Statement* roseConditionalStatement;
          ROSE_StatementBlock* roseElseWhereStatementBlock;

       // A pointer to yet another (the next one in a cascading 
       // series) ROSE_ElseWhereStatement statement block
          CLASSNAME* roseNextElseWhereStatement;
