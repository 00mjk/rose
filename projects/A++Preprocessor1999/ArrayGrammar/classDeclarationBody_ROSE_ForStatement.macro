       // Special constructor for CLASSNAME;
          CLASSNAME ( SgForStatement* forStatement );

       // Define the abstractBaseClass function
          virtual ROSE_Node* transform();

          void recognizeSageSubTree ( SgForStatement* forStatement );

       // void setRoseConditionalStatement ( ROSE_Statement*      roseStatement );
          void setRoseForStatementBlock   ( ROSE_StatementBlock* roseForStatementBlock );

       // ROSE_Statement*      getRoseConditionalStatement  ();
          ROSE_StatementBlock* getRoseForStatementBlock  ();

     private:
       // The different parts of a "for" loop statement
       // for now we only include the main body
       // ROSE_Statement* roseInitializerStatementBlock;
       // ROSE_Statement* roseConditionalStatement;
       // ROSE_Statement* roseIncrementStatementBlock;
          ROSE_StatementBlock* roseForStatementBlock;
