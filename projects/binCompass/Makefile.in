# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# These definitions are for the benefit of independent software contained
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs
bin_PROGRAMS = binCompassMain$(EXEEXT)
subdir = projects/binCompass
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/acx_libxml2.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/gcj.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/qrose.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-binary-analysis.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-fortran.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-java-jvm.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mysql.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-sqlite.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-xml.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/swig.m4 \
	$(top_srcdir)/config/use_edg_source_code.m4 \
	$(top_srcdir)/config/wave.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_binCompassMain_OBJECTS = binCompassMain.$(OBJEXT)
binCompassMain_OBJECTS = $(am_binCompassMain_OBJECTS)
binCompassMain_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
@ROSE_USE_DATABASE_TRUE@am__DEPENDENCIES_2 = @MySQL_path@/lib/mysql/libmysqlclient.a \
@ROSE_USE_DATABASE_TRUE@	@MySQL_path@/lib/libsqlplus.a
@ROSE_USE_SQLITE_DATABASE_TRUE@am__DEPENDENCIES_3 =  \
@ROSE_USE_SQLITE_DATABASE_TRUE@	@SQLite_path@/lib/libsqlite3.a
@ROSE_USE_BOOST_WAVE_TRUE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
@ROSE_USE_OPEN_FORTRAN_PARSER_TRUE@am__DEPENDENCIES_5 =  \
@ROSE_USE_OPEN_FORTRAN_PARSER_TRUE@	$(JAVA_JVM_PATH)/libjvm.so
@ROSE_USE_YICES_TRUE@am__DEPENDENCIES_6 =  \
@ROSE_USE_YICES_TRUE@	$(yices_path)/lib/libyices.a
am__DEPENDENCIES_7 = $(top_builddir)/src/librose.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_6)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(binCompassMain_SOURCES)
DIST_SOURCES = $(binCompassMain_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_LINKER = @AUX_LINKER@
AWK = @AWK@
AXXPXX_SPECIFIC_TESTS_FALSE = @AXXPXX_SPECIFIC_TESTS_FALSE@
AXXPXX_SPECIFIC_TESTS_TRUE = @AXXPXX_SPECIFIC_TESTS_TRUE@
Axx_INCLUDES = @Axx_INCLUDES@
Axx_LIBS = @Axx_LIBS@
BOOST_LIB_SUFFIX = @BOOST_LIB_SUFFIX@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_OPTIMIZE = @CXX_OPTIMIZE@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATES = @CXX_TEMPLATES@
CXX_TEMPLATE_OBJECTS = @CXX_TEMPLATE_OBJECTS@
CXX_TEMPLATE_REPOSITORY_PATH = @CXX_TEMPLATE_REPOSITORY_PATH@
CXX_WARNINGS = @CXX_WARNINGS@
CYGPATH_W = @CYGPATH_W@
C_DEBUG = @C_DEBUG@
C_OPTIMIZE = @C_OPTIMIZE@
C_WARNINGS = @C_WARNINGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DEV_LIBS_FALSE = @DEV_LIBS_FALSE@
DEV_LIBS_TRUE = @DEV_LIBS_TRUE@
DLLTOOL = @DLLTOOL@
DOT_TO_GML_TRANSLATOR_FALSE = @DOT_TO_GML_TRANSLATOR_FALSE@
DOT_TO_GML_TRANSLATOR_TRUE = @DOT_TO_GML_TRANSLATOR_TRUE@
DOXYGEN_ADDED_DIRECTORY_1 = @DOXYGEN_ADDED_DIRECTORY_1@
DOXYGEN_ADDED_DIRECTORY_2 = @DOXYGEN_ADDED_DIRECTORY_2@
DOXYGEN_ENABLED_SECTIONS = @DOXYGEN_ENABLED_SECTIONS@
DOXYGEN_EXTRACT_ALL = @DOXYGEN_EXTRACT_ALL@
DOXYGEN_EXTRACT_PRIVATE = @DOXYGEN_EXTRACT_PRIVATE@
DOXYGEN_EXTRACT_STATIC = @DOXYGEN_EXTRACT_STATIC@
DOXYGEN_HIDE_FRIEND_COMPOUNDS = @DOXYGEN_HIDE_FRIEND_COMPOUNDS@
DOXYGEN_HIDE_UNDOC_CLASSES = @DOXYGEN_HIDE_UNDOC_CLASSES@
DOXYGEN_HIDE_UNDOC_MEMBERS = @DOXYGEN_HIDE_UNDOC_MEMBERS@
DOXYGEN_INTERNAL_DOCS = @DOXYGEN_INTERNAL_DOCS@
DOXYGEN_USE_TAG_FILE = @DOXYGEN_USE_TAG_FILE@
DQ_DEVELOPER_TESTS_FALSE = @DQ_DEVELOPER_TESTS_FALSE@
DQ_DEVELOPER_TESTS_TRUE = @DQ_DEVELOPER_TESTS_TRUE@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@
EGREP = @EGREP@
ENABLE_JAVAPORT_FALSE = @ENABLE_JAVAPORT_FALSE@
ENABLE_JAVAPORT_TRUE = @ENABLE_JAVAPORT_TRUE@
EXE = @EXE@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FLTK_include_path = @FLTK_include_path@
FLTK_libs_path = @FLTK_libs_path@
GCJ = @GCJ@
GCJDEPMODE = @GCJDEPMODE@
GCJFLAGS = @GCJFLAGS@
GEN_BE = @GEN_BE@
GLUT_include_path = @GLUT_include_path@
GLUT_libs_path = @GLUT_libs_path@
GL_INCLUDES = @GL_INCLUDES@
GL_LDFLAGS = @GL_LDFLAGS@
GraphViz_include_path = @GraphViz_include_path@
GraphViz_libs_path = @GraphViz_libs_path@
HAS_SWIG_FALSE = @HAS_SWIG_FALSE@
HAS_SWIG_TRUE = @HAS_SWIG_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE_OPTIONS = @INSURE_OPTIONS@
JAVA_JVM_PATH = @JAVA_JVM_PATH@
JAVA_PATH = @JAVA_PATH@
JPEG_FALSE = @JPEG_FALSE@
JPEG_TRUE = @JPEG_TRUE@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBS_WITH_RPATH = @LIBS_WITH_RPATH@
LIBTOOL = @LIBTOOL@
LIB_GL = @LIB_GL@
LIB_IMAGES_LDFLAGS = @LIB_IMAGES_LDFLAGS@
LIB_QT = @LIB_QT@
LIB_WAVE = @LIB_WAVE@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MOC = @MOC@
MySQL_database_name = @MySQL_database_name@
MySQL_login_string = @MySQL_login_string@
MySQL_password = @MySQL_password@
MySQL_path = @MySQL_path@
MySQL_server = @MySQL_server@
MySQL_username = @MySQL_username@
OBJ = @OBJ@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPEN_FORTRAN_PARSER_PATH = @OPEN_FORTRAN_PARSER_PATH@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PNG_FALSE = @PNG_FALSE@
PNG_TRUE = @PNG_TRUE@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
Pxx_INCLUDES = @Pxx_INCLUDES@
Pxx_LIBS = @Pxx_LIBS@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic 
# libraries as the default within ROSE.
RANLIB = touch
ROSEHPCT_DEP_INCLUDES = @ROSEHPCT_DEP_INCLUDES@
ROSEHPCT_DEP_LIBS = @ROSEHPCT_DEP_LIBS@
ROSE_BUILD_ROSEHPCT_FALSE = @ROSE_BUILD_ROSEHPCT_FALSE@
ROSE_BUILD_ROSEHPCT_TRUE = @ROSE_BUILD_ROSEHPCT_TRUE@
ROSE_HOME = @ROSE_HOME@
ROSE_TAR_OPTIONS = @ROSE_TAR_OPTIONS@
ROSE_USE_BDDBDDB_FALSE = @ROSE_USE_BDDBDDB_FALSE@
ROSE_USE_BDDBDDB_TRUE = @ROSE_USE_BDDBDDB_TRUE@
ROSE_USE_BINARY_ANALYSIS_SUPPORT_FALSE = @ROSE_USE_BINARY_ANALYSIS_SUPPORT_FALSE@
ROSE_USE_BINARY_ANALYSIS_SUPPORT_TRUE = @ROSE_USE_BINARY_ANALYSIS_SUPPORT_TRUE@
ROSE_USE_BOOST_WAVE_FALSE = @ROSE_USE_BOOST_WAVE_FALSE@
ROSE_USE_BOOST_WAVE_TRUE = @ROSE_USE_BOOST_WAVE_TRUE@
ROSE_USE_DATABASE_FALSE = @ROSE_USE_DATABASE_FALSE@
ROSE_USE_DATABASE_TRUE = @ROSE_USE_DATABASE_TRUE@
ROSE_USE_EDG_SOURCE_FALSE = @ROSE_USE_EDG_SOURCE_FALSE@
ROSE_USE_EDG_SOURCE_TRUE = @ROSE_USE_EDG_SOURCE_TRUE@
ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE = @ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE@
ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE = @ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE@
ROSE_USE_MAPLE_FALSE = @ROSE_USE_MAPLE_FALSE@
ROSE_USE_MAPLE_TRUE = @ROSE_USE_MAPLE_TRUE@
ROSE_USE_OPENMP_FALSE = @ROSE_USE_OPENMP_FALSE@
ROSE_USE_OPENMP_TRUE = @ROSE_USE_OPENMP_TRUE@
ROSE_USE_OPEN_FORTRAN_PARSER_FALSE = @ROSE_USE_OPEN_FORTRAN_PARSER_FALSE@
ROSE_USE_OPEN_FORTRAN_PARSER_TRUE = @ROSE_USE_OPEN_FORTRAN_PARSER_TRUE@
ROSE_USE_QROSE_FALSE = @ROSE_USE_QROSE_FALSE@
ROSE_USE_QROSE_TRUE = @ROSE_USE_QROSE_TRUE@
ROSE_USE_SQLITE_DATABASE_FALSE = @ROSE_USE_SQLITE_DATABASE_FALSE@
ROSE_USE_SQLITE_DATABASE_TRUE = @ROSE_USE_SQLITE_DATABASE_TRUE@
ROSE_USE_VISUALIZATION_FALSE = @ROSE_USE_VISUALIZATION_FALSE@
ROSE_USE_VISUALIZATION_TRUE = @ROSE_USE_VISUALIZATION_TRUE@
ROSE_USE_XML_FALSE = @ROSE_USE_XML_FALSE@
ROSE_USE_XML_TRUE = @ROSE_USE_XML_TRUE@
ROSE_USE_YICES_FALSE = @ROSE_USE_YICES_FALSE@
ROSE_USE_YICES_TRUE = @ROSE_USE_YICES_TRUE@
RT_LIBS = @RT_LIBS@
SAGE_INCLUDES = @SAGE_INCLUDES@
SAGE_LIBS = @SAGE_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLite_path = @SQLite_path@
STRIP = @STRIP@
SWIG = @SWIG@
USE_GCJ_FALSE = @USE_GCJ_FALSE@
USE_GCJ_TRUE = @USE_GCJ_TRUE@
VERSION = @VERSION@
WAVE_INCLUDES = @WAVE_INCLUDES@
WAVE_LDFLAGS = @WAVE_LDFLAGS@
WAVE_LIBRARIES = @WAVE_LIBRARIES@
absolute_path_srcdir = @absolute_path_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__fastdepGCJ_FALSE = @am__fastdepGCJ_FALSE@
am__fastdepGCJ_TRUE = @am__fastdepGCJ_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bddbddb_path = @bddbddb_path@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
configure_date = @configure_date@
datadir = @datadir@
edg_union_struct_debugging_value = @edg_union_struct_debugging_value@
exec_prefix = @exec_prefix@
gl_includes = @gl_includes@
gl_libraries = @gl_libraries@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
insure_BIN = @insure_BIN@
insure_INCLUDES = @insure_INCLUDES@
insure_LIBS = @insure_LIBS@
insure_PREFIX = @insure_PREFIX@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
maple_path = @maple_path@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
omp_runtime_support_path = @omp_runtime_support_path@
optional_DataBase_subdirs = @optional_DataBase_subdirs@
optional_Visualization_subdirs = @optional_Visualization_subdirs@
prefix = @prefix@
program_transform_name = @program_transform_name@
purify_BIN = @purify_BIN@
purify_INCLUDES = @purify_INCLUDES@
purify_LIBS = @purify_LIBS@
purify_PREFIX = @purify_PREFIX@
python_path = @python_path@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_pwd = @top_pwd@
wave_includes = @wave_includes@
with_edg_source_code = @with_edg_source_code@
xml_path = @xml_path@
yices_path = @yices_path@

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
MAKE = gmake
@ROSE_USE_DATABASE_TRUE@ROSE_SIDEEFFECTS_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis
@ROSE_USE_DATABASE_TRUE@ROSE_SIDEEFFECTS_OBJS = $(top_builddir)/src/midend/programAnalysis/sideEffectAnalysis/*.o
@ROSE_USE_DATABASE_TRUE@ROSE_SIDEEFFECTS_LIB_NAME = sideEffect
@ROSE_USE_DATABASE_TRUE@ROSE_SIDEEFFECTS_LIB_FILE = lib$(ROSE_SIDEEFFECTS_LIB_NAME).so
@ROSE_USE_DATABASE_TRUE@ROSE_SIDEEFFECTS_LIBS_FILE_WITH_PATH = $(top_builddir)/src/midend/programAnalysis/sideEffectAnalysis/$(ROSE_SIDEEFFECTS_LIB_FILE)
@ROSE_USE_DATABASE_TRUE@ROSE_SIDEEFFECTS_LIBS = -l$(ROSE_SIDEEFFECTS_LIB_NAME)
@ROSE_USE_DATABASE_TRUE@BOOST_INCLUDE = -idirafter /home/thuerey1/local/include
@ROSE_USE_DATABASE_TRUE@ROSE_DATABASE_INCLUDE = -I$(top_srcdir)/src/roseExtensions/databaseConnection $(BOOST_INCLUDE)
@ROSE_USE_DATABASE_TRUE@ROSE_DATABASE_OBJS = $(top_builddir)/src/roseExtensions/databaseConnection/*.o
@ROSE_USE_DATABASE_TRUE@ROSE_DATABASE_LIB_NAME = rosedatabase
@ROSE_USE_DATABASE_TRUE@ROSE_DATABASE_LIB_FILE = lib$(ROSE_DATABASE_LIB_NAME).so
@ROSE_USE_DATABASE_TRUE@ROSE_DATABASE_LIBS_FILE_WITH_PATH = $(top_builddir)/src/roseExtensions/databaseConnection/lib$(ROSE_DATABASE_LIB_FILE).a
@ROSE_USE_DATABASE_TRUE@ROSE_DATABASE_LIBS = -l$(ROSE_DATABASE_LIB_NAME)
@ROSE_USE_DATABASE_TRUE@MYSQL_DATABASE_LIBS = @MySQL_path@/lib/mysql/libmysqlclient.a @MySQL_path@/lib/libsqlplus.a -lz
@ROSE_USE_DATABASE_TRUE@MYSQL_DATABASE_INCLUDE = -idirafter @MySQL_path@/include -idirafter @MySQL_path@/include/mysql

# SQLite is a simpler database to use than MySQL
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_INCLUDE = -I$(top_srcdir)/src/roseExtensions/SQLiteConnection
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_INCLUDE = -I@SQLite_path@/include
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_LIBS = @SQLite_path@/lib/libsqlite3.a
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_OBJS = $(top_builddir)/src/roseExtensions/SQLiteConnection/*.o
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLiteDatabase
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).so
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)

# Conditional support for Gabriel's QRose GUI Library 
@ROSE_USE_QROSE_TRUE@ROSE_GUI_INCLUDE = \
@ROSE_USE_QROSE_TRUE@   -I$(top_srcdir)/src/roseIndependentSupport/graphicalUserInterface/src/QRGui \
@ROSE_USE_QROSE_TRUE@   -I$(top_srcdir)/src/roseIndependentSupport/graphicalUserInterface/src/QRCodeBox \
@ROSE_USE_QROSE_TRUE@   -I$(top_srcdir)/src/roseIndependentSupport/graphicalUserInterface/src/QRTree \
@ROSE_USE_QROSE_TRUE@   -I$(top_srcdir)/src/roseIndependentSupport/graphicalUserInterface/src/QRQueryBox \
@ROSE_USE_QROSE_TRUE@   $(QT_INCLUDES)


# ROSE-HPCToolkit module
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS = -lrosehpct
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# RV (8/12/2005)
#   Replaced reference to PDFLibrary with a macro
#PDFLIB_BASE = PDFLibrary
PDFLIB_BASE = PDFlib-Lite-6.0.2rv

# DQ and AS (4/6/2006): Boost Wave CPP project
# WAVE_INCLUDES is already defined (or is left empty)
# WAVE_LIBS = $(LIB_WAVE) -lboost_filesystem-gcc
@ROSE_USE_BOOST_WAVE_TRUE@WAVE_LIBS = $(LIB_WAVE) -lboost_filesystem-@BOOST_LIB_SUFFIX@

# This usage (without rpath) assumes that that LD_LIBRARY_PATH contains 
# the path specified by $JAVA_JVM_PATH
#JAVA_JVM_LIB = -L$(JAVA_JVM_PATH) -ljvm
#JAVA_JVM_LIB = -ljvm
@ROSE_USE_OPEN_FORTRAN_PARSER_TRUE@JAVA_JVM_LIB = $(JAVA_JVM_PATH)/libjvm.so

# ROSE-YICES Package (destributed by SRI as a static library)
@ROSE_USE_YICES_TRUE@ROSE_YICES_INCLUDES = -I$(yices_path)/include
@ROSE_USE_YICES_TRUE@ROSE_YICES_LIBS = -lyices
@ROSE_USE_YICES_TRUE@ROSE_YICES_LIBS_WITH_PATH = $(yices_path)/lib/libyices.a
@ROSE_USE_YICES_TRUE@ROSE_YICES_LIB_FILE = libyices.a
ROSE_INCLUDES = \
     -I$(top_srcdir)/src \
     -I$(top_builddir)/src/frontend/SageIII \
     -I$(top_srcdir)/src/frontend/SageIII \
     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
     -I$(top_srcdir)/src/frontend/BinaryDisassembly/graph \
     -I$(top_srcdir)/src/frontend/BinaryDisassembly/analyses \
     -I$(top_srcdir)/src/frontend/BinaryDisassembly/analyses/dataflowanalyses \
     -I$(top_srcdir)/src/frontend/ObjdumpDisassembler \
     -I$(top_srcdir)/src/backend/unparser \
     -I$(top_srcdir)/src/backend/unparser/formatSupport \
     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
     -I$(top_srcdir)/src/util \
     -I$(top_srcdir)/src/util/support \
     -I$(top_srcdir)/src/util/graphs  \
     -I$(top_srcdir)/src/util/stringSupport \
     -I$(top_srcdir)/src/util/commandlineProcessing \
     -I$(top_srcdir)/src/midend/astUtil/astSupport \
     -I$(top_srcdir)/src/midend/astUtil/astInterface \
     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
     -I$(top_srcdir)/src/midend/astUtil/annotation \
     -I$(top_srcdir)/src/midend/programAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
     -I$(top_srcdir)/src/midend/astInlining \
     -I$(top_srcdir)/src/midend/astOutlining  \
     -I$(top_srcdir)/src/midend/astQuery \
     -I$(top_srcdir)/src/midend/astRewriteMechanism \
     -I$(top_srcdir)/src/midend/astProcessing \
     -I$(top_srcdir)/src/midend/astDiagnostics \
     -I$(top_srcdir)/src/midend/programAnalysis/dataflowAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
     -I$(top_srcdir)/src/midend/loopProcessing \
      $(ROSE_SIDEEFFECTS_INCLUDE) \
      $(ROSE_DATABASE_INCLUDE) \
      $(ROSE_GUI_INCLUDE) \
      $(MYSQL_DATABASE_INCLUDE) \
      $(ROSE_SQLITE_DATABASE_INCLUDE) \
      $(SQLITE_DATABASE_INCLUDE) \
     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
     -I$(top_srcdir)/src/roseSupport \
     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
\
     -I$(top_srcdir)/src/3rdPartyLibraries/$(PDFLIB_BASE)/libs/pdcore \
     -I$(top_srcdir)/src/3rdPartyLibraries/$(PDFLIB_BASE)/libs/pdflib \
     -I$(top_srcdir)/src/3rdPartyLibraries/$(PDFLIB_BASE)/libs/flate \
     -I$(top_srcdir)/src/3rdPartyLibraries/$(PDFLIB_BASE)/libs/tiff \
     -I$(top_srcdir)/src/3rdPartyLibraries/$(PDFLIB_BASE)/libs/jpeg \
     -I$(top_srcdir)/src/3rdPartyLibraries/$(PDFLIB_BASE)/libs/png \
\
     -I$(top_srcdir)/projects/dataBase \
     -I$(top_srcdir)/src/util/graphs \
     -I$(top_srcdir)/src/midend/astUtil/astInterface \
     $(WAVE_INCLUDES) \
     $(ROSE_YICES_INCLUDES)


# DQ (1/3/2008): Removed since we are no longer using the Coco parser generator.
#     -I$(top_srcdir)/src/3rdPartyLibraries/coco/cplus2

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB) $(ROSE_YICES_LIBS_WITH_PATH)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(MYSQL_DATABASE_LIBS) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)
ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(MYSQL_DATABASE_LIBS) \
    $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) \
    $(JAVA_JVM_LIB) $(RT_LIBS) $(ROSE_YICES_LIBS_WITH_PATH) 


# This ROSE_SEPERATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
ROSE_SEPERATE_LIBS = \
   $(top_builddir)/src/librose.la \
   $(ROSE_SIDEEFFECTS_LIBS) $(ROSE_DATABASE_LIBS) \
   $(MYSQL_DATABASE_LIBS) $(ROSE_SQLITE_DATABASE_LIBS) $(SQLITE_DATABASE_LIBS) \
   $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) \
   $(RT_LIBS) $(ROSE_YICES_LIBS_WITH_PATH)

SUBDIRS = analyses graphanalyses
INCLUDES = $(ROSE_INCLUDES) -I$(builddir)
LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS) -ldl
binCompassMain_SOURCES = binCompassMain.cpp 
binCompassMain_DEPENDENCIES = $(ROSE_LIBS_WITH_PATH)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  --ignore-deps projects/binCompass/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  --ignore-deps projects/binCompass/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
binCompassMain$(EXEEXT): $(binCompassMain_OBJECTS) $(binCompassMain_DEPENDENCIES) 
	@rm -f binCompassMain$(EXEEXT)
	$(CXXLINK) $(binCompassMain_LDFLAGS) $(binCompassMain_OBJECTS) $(binCompassMain_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.cpp.o:
	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../config
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@ROSE_USE_BINARY_ANALYSIS_SUPPORT_FALSE@clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


# This is control over the use of MySQL (which is complicated to use and install)
# This support for MySQL will be removed in the future.
@ROSE_USE_DATABASE_TRUE@ # The use of the side effect analysis is dependent upon the data base support
@ROSE_USE_DATABASE_TRUE@ # which is compiled optionally (see configure --help, for details)

@ROSE_USE_DATABASE_TRUE@ # Location of boost should be set in configuration (not done yet)

@ROSE_USE_DATABASE_TRUE@ # MySQL support is setup optionally at compile time (see configure --help, for details)
@ROSE_USE_DATABASE_TRUE@ # MYSQL_DATABASE_LIBS    = @MySQL_path@/lib/mysql/libmysqlclient.a @MySQL_path@/lib/libsqlplus.a -lfl -lz
@ROSE_USE_SQLITE_DATABASE_TRUE@ # SQLITE_DATABASE_INCLUDE       = -I/home/dquinlan/SQLite/sqliteCompileTree/include
@ROSE_USE_SQLITE_DATABASE_TRUE@ # SQLITE_DATABASE_LIBS          = /home/dquinlan/SQLite/sqliteCompileTree/lib/libsqlite3.a

# QY (11/2/04): removed -lastoutlining from ROSE_SEPERATE_LIBS 

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly 
# with make distcheck rule 
# -lannotationLanguageParser(appears after -lvaluePropagation)

@ROSE_USE_BINARY_ANALYSIS_SUPPORT_TRUE@binCompassMain.o: binCompassMain.cpp

@ROSE_USE_BINARY_ANALYSIS_SUPPORT_TRUE@clean:
@ROSE_USE_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f *.dot *.gml *.lo *.la *.s *.o
@ROSE_USE_BINARY_ANALYSIS_SUPPORT_TRUE@	rm -f analyses/*.la analyses/*.lo analyses/*.o graphanalyses/*.o graphanalyses/*.lo
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
