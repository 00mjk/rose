(define-fun cand ((i1 Int) (i2 Int)) Int (ite (and (distinct i1 0) (distinct i2 0)) 1 0))
(define-fun cor ((i1 Int) (i2 Int)) Int (ite (or (distinct i1 0) (distinct i2 0)) 1 0))
(define-fun cnot ((i1 Int)) Int (ite (distinct i1 0) 0 1))
(push)
(assert (= (cand 0 1) 1))
(check-sat)
(pop)
(push)
(assert (= (cand 0 0) 1))
(check-sat)
(pop)
(push)
(assert (= (cand 1 0) 1))
(check-sat)
(pop)
(push)
(assert (= (cand 1 1) 1))
(assert (= (cand 0 0) 0))
(check-sat)
(pop)
(push)
(assert (= (cor 1 1) 1))
(assert (= (cor 1 0) 1))
(assert (= (cor 0 1) 1))
(check-sat)
(pop)
(push)
(assert (= (cor 0 0) 1))
(check-sat)
(pop)
(push)
(assert (= (cnot 1) 0))
(check-sat)
(pop)
(push)
(assert (= (cnot 10) 1))
(check-sat)
(pop)
(push)
(assert (= (cnot 0) 1))
(check-sat)
(pop)
