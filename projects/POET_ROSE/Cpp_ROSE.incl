<xform get_type_decl pars=(input) >
 assert(0);
return input;
</xform>

<code IntegerType> int </code>

<code ArrayAccess pars=(array,subscript)> @array@[@subscript@] </code>

<code StmtList pars=(s:LIST(_,"\n")) > @s@ </code>

<code VarInit pars=(val)> = @val@ </code>

<code TypeInfo pars=(type, name, init) >
@type@ @name init@
</code>

<code ExpStmt pars=(exp)> @exp@; </code>
<code DeclStmt pars=(decl)> @decl@; </code>

<code Nest pars=(ctrl, body) annot="" >
@annot ctrl@ 
  @body@
</code>

<code Assign pars=(lhs, rhs) >
@lhs@ = @rhs@
</code>

<code VarRef pars=(var, op)>
@var@@op@
</code>

<code FunctionCall pars=(function, args : LIST(_,","))>
@function@(@args@)
</code>

<code ArraySubscript pars=(e:_) > [@e@] </code>

<code If pars=(condition)>
if (@condition@)
</code>

<code Else > else </code>

<code Loop pars=(i,start, stop, step) >
for (@i@=@start@; @i@<@stop@; @i@+=@step@)
</code>

<code PostIncrement pars=(ivar)>
@ivar@++
</code>
