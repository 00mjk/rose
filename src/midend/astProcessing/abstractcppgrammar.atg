/* Abstract C++ Attribute Grammar */
$CX /* Generate C++ code */

COMPILER SgNode

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

// #include "sgnodes.hpp"
#include <stdio.h>
#include <iostream>
#include <typeinfo>

#include "sage3.h"
#include "roseInternal.h"

extern SgNode* currentAstNode;

TOKENS

SgName
SgSymbolTable
SgInitializedName
SgModifierNodes
SgTypeModifier
SgPartialFunctionModifierType
SgElaboratedTypeModifier
SgConstVolatileModifier
SgStorageModifier
SgAccessModifier
SgDeclarationModifier
SgFunctionModifier
SgSpecialFunctionModifier
SgUPC_AccessModifier
SgLinkageModifier
SgBaseClassModifier
Sg_File_Info
SgFile
SgFileList
SgDirectory
SgDirectoryList
SgProject
SgOptions
SgUnparse_Info
SgBaseClass
SgTemplateParameter
SgTemplateParameterList
SgTemplateArgument
SgTemplateArgumentList
SgTypedefSeq
SgFunctionParameterTypeList
SgPragma
SgFuncDecl_attr
SgClassDecl_attr
SgFunctionTypeTable
SgExprStatement
SgLabelStatement
SgCaseOptionStmt
SgTryStmt
SgDefaultOptionStmt
SgBreakStmt
SgContinueStmt
SgReturnStmt
SgGotoStatement
SgSpawnStmt
SgPragmaDeclaration
SgForInitStatement
SgCatchStatementSeq
SgClinkageStartStatement
SgIncludeDirectiveStatement
SgDefineDirectiveStatement
SgUndefDirectiveStatement
SgIfdefDirectiveStatement
SgIfndefDirectiveStatement
SgIfDirectiveStatement
SgElseDirectiveStatement
SgElseifDirectiveStatement
SgEndifDirectiveStatement
SgLineDirectiveStatement
SgErrorDirectiveStatement
SgC_StyleCommentStatement
SgCxxStyleCommentStatement
SgVariableDeclaration
SgVariableDefinition
SgEnumDeclaration
SgAsmStmt
SgTypedefDeclaration
SgTemplateDeclaration
SgFunctionParameterList
SgCtorInitializerList
SgTemplateInstantiationDecl
SgMemberFunctionDeclaration
SgTemplateInstantiationMemberFunctionDecl
SgFunctionDeclaration
SgTemplateInstantiationFunctionDecl
SgGlobal
SgBasicBlock
SgIfStmt
SgForStatement
SgFunctionDefinition
SgWhileStmt
SgDoWhileStmt
SgSwitchStatement
SgCatchOptionStmt
SgTemplateInstantiationDefn
SgExprListExp
SgVarRefExp
SgClassNameRefExp
SgFunctionRefExp
SgMemberFunctionRefExp
SgFunctionCallExp
SgSizeOfOp
SgTypeIdOp
SgVarArgStartOp
SgVarArgStartOneOperandOp
SgVarArgOp
SgVarArgEndOp
SgVarArgCopyOp
SgConditionalExp
SgNewExp
SgDeleteExp
SgThisExp
SgRefExp
SgAggregateInitializer
SgConstructorInitializer
SgAssignInitializer
SgBoolValExp
SgStringVal
SgShortVal
SgCharVal
SgUnsignedCharVal
SgWcharVal
SgUnsignedShortVal
SgIntVal
SgEnumVal
SgUnsignedIntVal
SgLongIntVal
SgLongLongIntVal
SgUnsignedLongLongIntVal
SgUnsignedLongVal
SgFloatVal
SgDoubleVal
SgLongDoubleVal
SgComplexVal
SgArrowExp
SgDotExp
SgDotStarOp
SgArrowStarOp
SgEqualityOp
SgLessThanOp
SgGreaterThanOp
SgNotEqualOp
SgLessOrEqualOp
SgGreaterOrEqualOp
SgAddOp
SgSubtractOp
SgMultiplyOp
SgDivideOp
SgIntegerDivideOp
SgModOp
SgAndOp
SgOrOp
SgBitXorOp
SgBitAndOp
SgBitOrOp
SgCommaOpExp
SgLshiftOp
SgRshiftOp
SgPntrArrRefExp
SgScopeOp
SgAssignOp
SgPlusAssignOp
SgMinusAssignOp
SgAndAssignOp
SgIorAssignOp
SgMultAssignOp
SgDivAssignOp
SgModAssignOp
SgXorAssignOp
SgLshiftAssignOp
SgRshiftAssignOp
SgExpressionRoot
SgMinusOp
SgUnaryAddOp
SgNotOp
SgPointerDerefExp
SgAddressOfOp
SgMinusMinusOp
SgPlusPlusOp
SgBitComplementOp
SgCastExp
SgThrowOp
SgVariableSymbol
SgFunctionTypeSymbol
SgTemplateSymbol
SgEnumSymbol
SgEnumFieldSymbol
SgTypedefSymbol
SgLabelSymbol
SgDefaultSymbol
SgTemplateInstantiationSymbol
SgMemberFunctionSymbol
SgFunctionSymbol
SgNamespaceSymbol
SgTypeUnknown
SgTypeChar
SgTypeSignedChar
SgTypeUnsignedChar
SgTypeShort
SgTypeSignedShort
SgTypeUnsignedShort
SgTypeInt
SgTypeSignedInt
SgTypeUnsignedInt
SgTypeLong
SgTypeSignedLong
SgTypeUnsignedLong
SgTypeVoid
SgTypeGlobalVoid
SgTypeWchar
SgTypeFloat
SgTypeDouble
SgTypeLongLong
SgTypeUnsignedLongLong
SgTypeLongDouble
SgTypeString
SgTypeBool
SgTypeComplex
SgTypeImaginary
SgTypeDefault
SgReferenceType
SgModifierType
SgArrayType
SgTypeEllipse
SgPartialFunctionType
SgUnknownMemberFunctionType
SgEnumType
SgTypedefType
SgTemplateType
SgPointerMemberType
SgClassDeclaration
SgClassDefinition
SgNamespaceDeclarationStatement
SgNamespaceDefinitionStatement
SgNamespaceAliasDeclarationStatement
SgUsingDirectiveStatement
SgUsingDeclarationStatement
SgTemplateInstantiationDirectiveStatement
SgNullStatement
SgVariantStatement
SgNullExpression
SgVariantExpression
SgQualifiedName
SgQualifiedNameType
SgStatementExpression
SgAsmOp

SgComplexVal
SgTypeImaginary

SgAsmNode
SgAsmFile

SgAsmStatement
SgAsmInstruction
SgAsmArmInstruction
SgAsmx86Call
SgAsmx86Instruction
SgAsmx86Block
SgAsmx86Push
SgAsmx86Pop
SgAsmx86Mov
SgAsmx86Ret
SgAsmx86Sub
SgAsmx86Add
SgAsmx86Leave
SgAsmx86Lea
SgAsmx86And
SgAsmx86Shl
SgAsmx86Shr
SgAsmx86Inc

SgAsmx86CMove
SgAsmx86CMovne
SgAsmx86CMova
SgAsmx86CMovae
SgAsmx86CMovb
SgAsmx86CMovbe
SgAsmx86CMovg
SgAsmx86CMovge
SgAsmx86CMovl
SgAsmx86CMovle
SgAsmx86CMovc
SgAsmx86CMovnc
SgAsmx86CMovn
SgAsmx86CMovno
SgAsmx86CMovs
SgAsmx86CMovns
SgAsmx86CMovp
SgAsmx86CMovnp

SgAsmx86Xchg
SgAsmx86Bswap
SgAsmx86Xadd
SgAsmx86Cmpxchg
SgAsmx86Cmpxchg8b
SgAsmx86Pusha
SgAsmx86Popa
SgAsmx86Cwd
SgAsmx86Cbw
SgAsmx86Movsx
SgAsmx86Movzx

SgAsmx86Adc
SgAsmx86Sbb
SgAsmx86Mul
SgAsmx86IMul
SgAsmx86Div
SgAsmx86IDiv
SgAsmx86Dec
SgAsmx86Neg
SgAsmx86Cmp

SgAsmx86Daa
SgAsmx86Das
SgAsmx86Aaa
SgAsmx86Aas
SgAsmx86Aam
SgAsmx86Aad

SgAsmx86Or
SgAsmx86Xor
SgAsmx86Not

SgAsmx86Sar
SgAsmx86Shrd
SgAsmx86Shld
SgAsmx86Ror
SgAsmx86Rol
SgAsmx86Rcr
SgAsmx86Rcl

SgAsmx86Bt
SgAsmx86Bts
SgAsmx86Btr
SgAsmx86Btc
SgAsmx86Bsf
SgAsmx86Bsr
SgAsmx86Sete
SgAsmx86Setne
SgAsmx86Seta
SgAsmx86Setae
SgAsmx86Setb
SgAsmx86Setbe
SgAsmx86Setg
SgAsmx86Setge
SgAsmx86Setl
SgAsmx86Setle
SgAsmx86Sets
SgAsmx86Setns
SgAsmx86Seto
SgAsmx86Setno
SgAsmx86Setpe
SgAsmx86Setpo
SgAsmx86Test

SgAsmx86Jmp
SgAsmx86Je
SgAsmx86Jne
SgAsmx86Ja
SgAsmx86Jae
SgAsmx86Jb
SgAsmx86Jbe
SgAsmx86Jg
SgAsmx86Jge
SgAsmx86Jl
SgAsmx86Jle
SgAsmx86Jc
SgAsmx86Jnc
SgAsmx86Jo
SgAsmx86Jno
SgAsmx86Js
SgAsmx86Jns
SgAsmx86Jpo
SgAsmx86Jpe
SgAsmx86Jcxz
SgAsmx86Loop
SgAsmx86Loopz
SgAsmx86Loopnz
SgAsmx86IRet
SgAsmx86Int
SgAsmx86Into
SgAsmx86Bound
SgAsmx86Enter

SgAsmx86Movs
SgAsmx86Cmps
SgAsmx86Scas
SgAsmx86Lods
SgAsmx86Stos
SgAsmx86Rep
SgAsmx86Repe
SgAsmx86Repne

SgAsmx86In
SgAsmx86Out
SgAsmx86Ins
SgAsmx86Outs
SgAsmx86Nop
SgAsmx86Ud2
SgAsmx86Xlat
SgAsmx86Cpuid
SgAsmx86Rdtsc

SgAsmx86Stc
SgAsmx86Clc
SgAsmx86Cmc
SgAsmx86Cld
SgAsmx86Std
SgAsmx86Lahf
SgAsmx86Sahf
SgAsmx86Pushf
SgAsmx86Popf
SgAsmx86Sti
SgAsmx86Cli

SgAsmx86Lds
SgAsmx86Les
SgAsmx86Lfs
SgAsmx86Lgs
SgAsmx86Lss

SgAsmx86Esc
SgAsmx86Lock
SgAsmx86Wait
SgAsmx86Hlt


SgAsmDeclaration
SgAsmOperandList
SgAsmDataStructureDeclaration
SgAsmFunctionDeclaration
SgAsmFieldDeclaration

SgAsmExpression
SgAsmMemoryReferenceExpression
SgAsmRegisterReferenceExpression
SgAsmControlFlagsExpression
SgAsmCommonSubExpression
SgAsmUnaryExpression
SgAsmUnaryPlus
SgAsmUnaryMinus
SgAsmBinaryExpression
SgAsmBinaryAdd
SgAsmBinarySubtract
SgAsmBinaryMultiply
SgAsmBinaryDivide
SgAsmBinaryMod
SgAsmValueExpression
SgAsmByteValueExpression
SgAsmWordValueExpression
SgAsmDoubleWordValueExpression
SgAsmQuadWordValueExpression
SgAsmSingleFloatValueExpression
SgAsmDoubleFloatValueExpression
SgAsmVectorValueExpression

SgAsmType
SgAsmTypeByte
SgAsmTypeWord
SgAsmTypeDoubleWord
SgAsmTypeQuadWord
SgAsmTypeSingleFloat
SgAsmTypeDoubleFloat
SgAsmTypeVector

SgGraph
SgGraphNode
SgGraphEdge
SgDirectedGraph
SgDirectedGraphNode
SgDirectedGraphEdge

SgAsmArmMov 
SgAsmArmMvn 
SgAsmArmMrs 
SgAsmArmMsr 


SgAsmArmLdr 
SgAsmArmLdm 
SgAsmArmStr 
SgAsmArmStm 

SgAsmArmAdd 
SgAsmArmAdc 
SgAsmArmSub 
SgAsmArmSbc 
SgAsmArmRsb 
SgAsmArmRsc 
SgAsmArmMul 
SgAsmArmMla 
SgAsmArmUmull 
SgAsmArmUmlal 
SgAsmArmSmull 
SgAsmArmSmlal 
SgAsmArmCmp 
SgAsmArmCmn 

SgAsmArmTst 
SgAsmArmTeq 
SgAsmArmAnd 
SgAsmArmEor 
SgAsmArmOrr 
SgAsmArmBic 

SgAsmArmB 
SgAsmArmBl
SgAsmArmBx

SgAsmArmSwp 
SgAsmArmSwi 
SgAsmArmRegisterReferenceExpression


SgProgramHeaderStatement
SgProcedureHeaderStatement
SgInterfaceStatement
SgModuleStatement
SgUseStatement
SgStopOrPauseStatement
SgIOStatement
SgIOControlStatement
SgInputOutputStatement
SgOpenStatement
SgCloseStatement
SgInquireStatement
SgIOFileControlStmt
SgFortranDo
SgParameterStatement
SgCommonBlock

SgExponentiationOp
SgIntrinsicFn
SgSubscriptExpression
SgSubscriptColon
SgSubscriptAsterisk
SgColon
SgUseOnlyExpression
SgIOImpliedDo
SgIOItemExpression
SgUseRenameExpression

SgIntrinsicSymbol
SgModuleSymbol
SgInterfaceSymbol
SgCommonSymbol

SgFortranNonblockedDo

SgToken

SgDeadIfDirectiveStatement
SgEmptyDirectiveStatement
SgWarningDirectiveStatement
SgClinkageEndStatement

SgBlockDataStatement
SgImplicitStatement
SgStatementFunctionStatement
SgWhereStatement
SgElseWhereStatement
SgNullifyStatement
SgEquivalenceStatement
SgDerivedTypeStatement

SgArithmeticIfStatement
SgAssignStatement
SgComputedGotoStatement
SgAssignedGotoStatement

SgAttributeSpecificationStatement
SgAllocateStatement
SgDeallocateStatement
SgContainsStatement
SgSequenceStatement



PRODUCTIONS

SgNode = SgSupport
    | SgLocatedNode
    | SgSymbol
    .
SgSupport = SgName  "("  ")" 
    | SgSymbolTable  "("  ")" 
    | SgInitializedNameNT
    | SgModifierNodes  "("  ")" 
    | SgFileNT
    | SgDirectory
    | SgDirectoryList
    | SgFileList
    | SgProject  "(" { SgFileNT } ")" 
    | SgOptions  "("  ")" 
    | SgBaseClass  "(" SgClassDeclarationNT  ")" 
    | SgFunctionParameterTypeList  "("  ")" 
    | SgAttribute
    .

SgGlobalNT = SgGlobal "(" { SgDeclarationStatement } ")"
    .

SgFileNT = SgFile  "(" SgGlobalNT ")"
    .

SgInitializedNameNT = SgInitializedName  "(" [SgInitializedNameNT] [SgInitializer]  ")"
    .

SgAttribute = SgPragma  "("  ")" 
    | SgBitAttribute
    .
SgBitAttribute = SgFuncDecl_attr  "("  ")" 
    | SgClassDecl_attr  "("  ")" 
    .
SgLocatedNode =
      SgStatement
    | SgExpression
    .
SgStatement = SgExprStatement "(" SgExpressionRootNT ")"
    | SgLabelStatement  "("  ")" 
    | SgCaseOptionStmt  "(" SgBasicBlockNT SgExpressionRootNT  ")" 
    | SgTryStmt  "(" SgBasicBlockNT SgCatchStatementSeq  ")" 
    | SgDefaultOptionStmt  "(" SgBasicBlockNT  ")" 
    | SgBreakStmt  "("  ")" 
    | SgContinueStmt  "("  ")" 
    | SgReturnStmt  "(" SgExpressionRootNT  ")" 
    | SgGotoStatement  "(" SgLabelStatement  ")" 
    | SgSpawnStmt  "(" SgFunctionCallExpNT SgExpressionRootNT  ")" 
    | SgPragmaDeclaration  "(" SgPragma  ")"
    | SgCatchStatementSeq  "("  { SgStatement }   ")" 
    | SgClinkageStartStatement  "("  ")" 
    | SgC_PreprocessorDirectiveStatement
    | SgCommentStatement
    | SgDeclarationStatement
    | SgScopeStatement
    | SgForInitStatementNT
    .

SgForInitStatementNT = 
    SgForInitStatement "("  { SgStatement } ")" 
    .

SgC_PreprocessorDirectiveStatement = SgIncludeDirectiveStatement  "("  ")" 
    | SgDefineDirectiveStatement  "("  ")" 
    | SgUndefDirectiveStatement  "("  ")" 
    | SgIfdefDirectiveStatement  "("  ")" 
    | SgIfndefDirectiveStatement  "("  ")" 
    | SgIfDirectiveStatement  "("  ")" 
    | SgElseDirectiveStatement  "("  ")" 
    | SgElseifDirectiveStatement  "("  ")" 
    | SgEndifDirectiveStatement  "("  ")" 
    | SgLineDirectiveStatement  "("  ")" 
    | SgErrorDirectiveStatement  "("  ")" 
    .
SgCommentStatement = SgC_StyleCommentStatement  "("  ")" 
    | SgCxxStyleCommentStatement  "("  ")" 
    .

SgDeclarationStatement = SgVariableDeclaration  "("  { SgInitializedNameNT }   ")" 
    | SgVariableDefinition  "(" SgInitializedNameNT SgUnsignedLongValNT SgExpressionRootNT  ")" 
    | SgEnumDeclaration  "("  ")" 
    | SgAsmStmt  "(" SgExpressionRootNT  ")" 
    | SgTemplateDeclaration  "("  ")" 
    | SgFunctionParameterListNT
    | SgCtorInitializerListNT
    | SgClassDeclarationNT
    | SgFunctionDeclarationNT
    | SgTypedefDeclaration  "(" [SgDeclarationStatement]  ")" 
    | SgTemplateInstantiationDirectiveStatement "("  ")"
    .

SgUnsignedLongValNT = SgUnsignedLongVal "(" ")"
    .

SgCtorInitializerListNT = SgCtorInitializerList  "("  { SgInitializedNameNT }   ")"
    .

SgFunctionParameterListNT = 
    SgFunctionParameterList  "("  { SgInitializedNameNT }   ")" 
    .

SgClassDeclarationNT = SgClassDeclaration "(" [ SgClassDefinitionNT ] ")" 
    | SgTemplateInstantiationDecl  "(" SgClassDefinitionNT SgNode  ")" 
    .
SgFunctionDeclarationNT = SgFunctionDeclaration "(" SgFunctionParameterListNT [ SgFunctionDefinitionNT ] ")" 
    | SgMemberFunctionDeclaration  "(" SgFunctionParameterListNT [SgFunctionDefinitionNT] SgCtorInitializerListNT  ")" 
    .
SgScopeStatement = SgGlobal  "("  { SgDeclarationStatement }   ")" 
    | SgIfStmt  "(" SgStatement SgBasicBlockNT [SgBasicBlockNT]  ")" 
    | SgForStatement "(" SgForInitStatementNT SgExpressionRootNT SgExpressionRootNT SgBasicBlockNT ")"
    | SgWhileStmt  "(" SgStatement SgBasicBlockNT  ")" 
    | SgDoWhileStmt  "(" SgStatement SgBasicBlockNT  ")" 
    | SgSwitchStatement  "(" SgBasicBlockNT SgExpressionRootNT  ")" 
    | SgCatchOptionStmt  "(" SgVariableDeclaration SgBasicBlockNT  ")" 
    | SgClassDefinitionNT
    | SgFunctionDefinitionNT
    | SgBasicBlockNT
    .

SgBasicBlockNT =
    SgBasicBlock  "("  { SgStatement }   ")" 
    .

SgFunctionDefinitionNT =
    SgFunctionDefinition  "(" [ SgBasicBlockNT ] ")" 
    .

SgClassDefinitionNT = SgClassDefinition  "("  { SgDeclarationStatement }   ")" 
    | SgTemplateInstantiationDefn  "("  { SgDeclarationStatement }   ")" 
    .

SgExpression =
    /* SgExprListExpNT */
      SgVarRefExp  "("  ")" 
    | SgClassNameRefExp  "("  ")" 
    | SgFunctionRefExp  "("  ")" 
    | SgMemberFunctionRefExp  "("  ")" 
    | SgFunctionCallExpNT
    | SgSizeOfOp  "(" SgExpression  ")" 
    | SgVarArgStartOp  "(" SgExpression  ")" 
    | SgVarArgStartOneOperandOp  "(" SgExpression  ")" 
    | SgVarArgOp  "(" SgExpression  ")" 
    | SgVarArgEndOp  "(" SgExpression  ")" 
    | SgVarArgCopyOp  "(" SgExpression  ")" 
    | SgVarArgStartOp  "(" SgExpression  ")" 
    | SgConditionalExp  "(" SgExpression SgExpression [ SgExpression ] ")" 
    | SgNewExp  "(" [ SgExprListExpNT ] SgConstructorInitializerNT [ SgExpression ] ")" 
    | SgDeleteExp  "(" SgExpression  ")" 
    | SgThisExp  "("  ")" 
    | SgRefExp  "("  ")" 
    | SgInitializer
    | SgValueExp
    | SgBinaryOp
    | SgUnaryOp
    .

SgFunctionCallExpNT = 
    SgFunctionCallExp  "(" [ SgExpression ] [ SgExprListExpNT ] ")"
    .

SgExprListExpNT = SgExprListExp  "("  { SgExpression }   ")"
    .

SgInitializer = SgAggregateInitializer  "(" [ SgExprListExpNT ] ")" 
    | SgConstructorInitializerNT
    | SgAssignInitializer  "(" [ SgExpression ] ")" 
    .

SgConstructorInitializerNT = SgConstructorInitializer  "(" [ SgExprListExpNT ] ")"
    .

SgValueExp = SgBoolValExp  "("  ")" 
    | SgStringVal  "("  ")" 
    | SgShortVal  "("  ")" 
    | SgCharVal  "("  ")" 
    | SgUnsignedCharVal  "("  ")" 
    | SgWcharVal  "("  ")" 
    | SgUnsignedShortVal  "("  ")" 
    | SgIntVal  "("  ")" 
    | SgEnumVal  "("  ")" 
    | SgUnsignedIntVal  "("  ")" 
    | SgLongIntVal  "("  ")" 
    | SgLongLongIntVal  "("  ")" 
    | SgUnsignedLongLongIntVal  "("  ")" 
    | SgUnsignedLongVal  "("  ")" 
    | SgComplexVal  "("  ")" 
    | SgFloatVal  "("  ")" 
    | SgDoubleVal  "("  ")" 
    | SgLongDoubleVal  "("  ")" 
    .
SgBinaryOp = SgArrowExp  "(" SgExpression [ SgExpression ] ")" 
    | SgDotExp  "(" SgExpression [ SgExpression ] ")"
    | SgDotStarOp  "(" SgExpression SgExpression  ")" 
    | SgArrowStarOp  "(" SgExpression SgExpression  ")" 
    | SgEqualityOp  "(" SgExpression SgExpression  ")" 
    | SgLessThanOp  "(" SgExpression SgExpression  ")" 
    | SgGreaterThanOp  "(" SgExpression SgExpression  ")" 
    | SgNotEqualOp  "(" SgExpression SgExpression  ")" 
    | SgLessOrEqualOp  "(" SgExpression SgExpression  ")" 
    | SgGreaterOrEqualOp  "(" SgExpression SgExpression  ")" 
    | SgAddOp  "(" SgExpression SgExpression  ")" 
    | SgSubtractOp  "(" SgExpression SgExpression  ")" 
    | SgMultiplyOp  "(" SgExpression SgExpression  ")" 
    | SgDivideOp  "(" SgExpression SgExpression  ")" 
    | SgIntegerDivideOp  "(" SgExpression SgExpression  ")" 
    | SgModOp  "(" SgExpression SgExpression  ")" 
    | SgAndOp  "(" SgExpression SgExpression  ")" 
    | SgOrOp  "(" SgExpression SgExpression  ")" 
    | SgBitXorOp  "(" SgExpression SgExpression  ")" 
    | SgBitAndOp  "(" SgExpression SgExpression  ")" 
    | SgBitOrOp  "(" SgExpression SgExpression  ")" 
    | SgCommaOpExp  "(" SgExpression SgExpression  ")" 
    | SgLshiftOp  "(" SgExpression SgExpression  ")" 
    | SgRshiftOp  "(" SgExpression SgExpression  ")" 
    | SgPntrArrRefExp  "(" SgExpression SgExpression  ")" 
    | SgScopeOp  "(" SgExpression SgExpression  ")" 
    | SgAssignOp  "(" SgExpression [ SgExpression ] ")" 
    | SgPlusAssignOp  "(" SgExpression SgExpression  ")" 
    | SgMinusAssignOp  "(" SgExpression SgExpression  ")" 
    | SgAndAssignOp  "(" SgExpression SgExpression  ")" 
    | SgIorAssignOp  "(" SgExpression SgExpression  ")" 
    | SgMultAssignOp  "(" SgExpression SgExpression  ")" 
    | SgDivAssignOp  "(" SgExpression SgExpression  ")" 
    | SgModAssignOp  "(" SgExpression SgExpression  ")" 
    | SgXorAssignOp  "(" SgExpression SgExpression  ")" 
    | SgLshiftAssignOp  "(" SgExpression SgExpression  ")" 
    | SgRshiftAssignOp  "(" SgExpression SgExpression  ")" 
    .

SgExpressionRootNT =
    SgExpressionRoot  "(" [ SgExpression ] ")"
    .

SgUnaryOp = SgExpressionRootNT
    | SgMinusOp  "(" SgExpression  ")" 
    | SgUnaryAddOp  "(" SgExpression  ")" 
    | SgNotOp  "(" SgExpression  ")" 
    | SgPointerDerefExp  "(" SgExpression  ")"
    | SgAddressOfOp  "(" SgExpression  ")" 
    | SgMinusMinusOp  "(" SgExpression  ")" 
    | SgPlusPlusOp  "(" SgExpression  ")" 
    | SgBitComplementOp  "(" SgExpression  ")" 
    | SgCastExp  "(" [ SgExpression ] ")" 
    | SgThrowOp  "(" SgExpression  ")" 
    .
SgSymbol = SgVariableSymbol  "("  ")" 
    | SgTemplateSymbol  "(" SgTemplateDeclaration  ")" 
    | SgEnumSymbol  "(" SgEnumDeclaration  ")" 
    | SgEnumFieldSymbol  "("  ")" 
    | SgLabelSymbol  "(" SgLabelStatement  ")" 
    | SgDefaultSymbol  "("  ")" 
    | SgClassSymbol
    | SgFunctionSymbolNT
    | SgTypedefSymbol  "(" SgTypedefDeclaration  ")" 
    .
SgClassSymbol = SgTemplateInstantiationSymbol  "(" SgClassDeclarationNT  ")" 
    .
SgFunctionSymbolNT = SgFunctionSymbol  "(" SgFunctionDeclarationNT  ")" 
    | SgMemberFunctionSymbol  "(" SgFunctionDeclarationNT  ")" 
    .

END SgNode.

