#ifndef ROSE_X86INSTRUCTIONENUM_H
#define ROSE_X86INSTRUCTIONENUM_H

#include <string>

enum X86InstructionKind {
  x86_unknown_instruction = 0,
  x86_aaa,
  x86_aad,
  x86_aam,
  x86_aas,
  x86_adc,
  x86_add,
  x86_addpd,
  x86_addps,
  x86_addsd,
  x86_addss,
  x86_addsubpd,
  x86_addsubps,
  x86_and,
  x86_andnpd,
  x86_andnps,
  x86_andpd,
  x86_andps,
  x86_arpl,
  x86_bound,
  x86_bsf,
  x86_bsr,
  x86_bswap,
  x86_bt,
  x86_btc,
  x86_btr,
  x86_bts,
  x86_call,
  x86_cbw,
  x86_cdq,
  x86_cdqe,
  x86_clc,
  x86_cld,
  x86_clflush,
  x86_clgi,
  x86_cli,
  x86_clts,
  x86_cmc,
  x86_cmova,
  x86_cmovae,
  x86_cmovb,
  x86_cmovbe,
  x86_cmove,
  x86_cmovg,
  x86_cmovge,
  x86_cmovl,
  x86_cmovle,
  x86_cmovne,
  x86_cmovno,
  x86_cmovns,
  x86_cmovo,
  x86_cmovpe,
  x86_cmovpo,
  x86_cmovs,
  x86_cmp,
  x86_cmppd,
  x86_cmpps,
  x86_cmps,
  x86_cmpsb,
  x86_cmpsd,
  x86_cmpsq,
  x86_cmpss,
  x86_cmpsw,
  x86_cmpxchg,
  x86_cmpxchg16b,
  x86_cmpxchg8b,
  x86_comisd,
  x86_comiss,
  x86_cpuid,
  x86_cqo,
  x86_cvtdq2pd,
  x86_cvtdq2ps,
  x86_cvtpd2dq,
  x86_cvtpd2pi,
  x86_cvtpd2ps,
  x86_cvtpi2pd,
  x86_cvtpi2ps,
  x86_cvtps2dq,
  x86_cvtps2pd,
  x86_cvtps2pi,
  x86_cvtsd2si,
  x86_cvtsd2ss,
  x86_cvtsi2sd,
  x86_cvtsi2ss,
  x86_cvtss2sd,
  x86_cvtss2si,
  x86_cvttpd2dq,
  x86_cvttpd2pi,
  x86_cvttps2dq,
  x86_cvttps2pi,
  x86_cvttsd2si,
  x86_cvttss2si,
  x86_cwd,
  x86_cwde,
  x86_daa,
  x86_das,
  x86_data16,
  x86_dec,
  x86_div,
  x86_divpd,
  x86_divps,
  x86_divsd,
  x86_divss,
  x86_emms,
  x86_enter,
  x86_esc,
  x86_extrq,
  x86_f2xm1,
  x86_fabs,
  x86_fadd,
  x86_faddp,
  x86_farcall,
  x86_farjmp,
  x86_fbld,
  x86_fbstp,
  x86_fchs,
  x86_fcmovb,
  x86_fcmovbe,
  x86_fcmove,
  x86_fcmovnb,
  x86_fcmovnbe,
  x86_fcmovne,
  x86_fcmovnu,
  x86_fcmovu,
  x86_fcom,
  x86_fcomi,
  x86_fcomip,
  x86_fcomp,
  x86_fcompp,
  x86_fcos,
  x86_fdecstp,
  x86_fdiv,
  x86_fdivp,
  x86_fdivr,
  x86_fdivrp,
  x86_femms,
  x86_ffree,
  x86_fiadd,
  x86_ficom,
  x86_ficomp,
  x86_fidiv,
  x86_fidivr,
  x86_fild,
  x86_fimul,
  x86_fincstp,
  x86_fist,
  x86_fistp,
  x86_fisttp,
  x86_fisub,
  x86_fisubr,
  x86_fld,
  x86_fld1,
  x86_fldcw,
  x86_fldenv,
  x86_fldl2e,
  x86_fldl2t,
  x86_fldlg2,
  x86_fldln2,
  x86_fldpi,
  x86_fldz,
  x86_fmul,
  x86_fmulp,
  x86_fnclex,
  x86_fninit,
  x86_fnop,
  x86_fnsave,
  x86_fnstcw,
  x86_fnstenv,
  x86_fnstsw,
  x86_fpatan,
  x86_fprem,
  x86_fprem1,
  x86_fptan,
  x86_frndint,
  x86_frstor,
  x86_fsave,
  x86_fscale,
  x86_fsin,
  x86_fsincos,
  x86_fsqrt,
  x86_fst,
  x86_fstp,
  x86_fsub,
  x86_fsubp,
  x86_fsubr,
  x86_fsubrp,
  x86_ftst,
  x86_fucom,
  x86_fucomi,
  x86_fucomip,
  x86_fucomp,
  x86_fucompp,
  x86_fwait,
  x86_fxam,
  x86_fxch,
  x86_fxrstor,
  x86_fxsave,
  x86_fxtract,
  x86_fyl2x,
  x86_fyl2xp1,
  x86_getsec,
  x86_haddpd,
  x86_haddps,
  x86_hlt,
  x86_hsubpd,
  x86_hsubps,
  x86_idiv,
  x86_imul,
  x86_in,
  x86_inc,
  x86_ins,
  x86_insb,
  x86_insd,
  x86_insertq,
  x86_insw,
  x86_int,
  x86_int1,
  x86_int3,
  x86_into,
  x86_invd,
  x86_invlpg,
  x86_invlpga,
  x86_iret,
  x86_ja,
  x86_jae,
  x86_jb,
  x86_jbe,
  x86_jcxz,
  x86_je,
  x86_jecxz,
  x86_jg,
  x86_jge,
  x86_jl,
  x86_jle,
  x86_jmp,
  x86_jmpe,
  x86_jne,
  x86_jno,
  x86_jns,
  x86_jo,
  x86_jpe,
  x86_jpo,
  x86_jrcxz,
  x86_js,
  x86_lahf,
  x86_lar,
  x86_lddqu,
  x86_ldmxcsr,
  x86_lds,
  x86_lea,
  x86_leave,
  x86_les,
  x86_lfence,
  x86_lfs,
  x86_lgdt,
  x86_lgs,
  x86_lidt,
  x86_lldt,
  x86_lmsw,
  x86_lock,
  x86_lods,
  x86_lodsb,
  x86_lodsd,
  x86_lodsq,
  x86_lodsw,
  x86_loop,
  x86_loopnz,
  x86_loopz,
  x86_lsl,
  x86_lss,
  x86_ltr,
  x86_lzcnt,
  x86_maxpd,
  x86_maxps,
  x86_maxsd,
  x86_maxss,
  x86_mfence,
  x86_minpd,
  x86_minps,
  x86_minsd,
  x86_minss,
  x86_monitor,
  x86_mov,
  x86_movapd,
  x86_movaps,
  x86_movd,
  x86_movddup,
  x86_movdq2q,
  x86_movdqa,
  x86_movdqu,
  x86_movhlps,
  x86_movhpd,
  x86_movhps,
  x86_movlhps,
  x86_movlpd,
  x86_movlps,
  x86_movmskpd,
  x86_movmskps,
  x86_movntdq,
  x86_movnti,
  x86_movntpd,
  x86_movntps,
  x86_movntq,
  x86_movntsd,
  x86_movntss,
  x86_movq,
  x86_movq2dq,
  x86_movs,
  x86_movsb,
  x86_movsd,
  x86_movsd_sse,
  x86_movshdup,
  x86_movsldup,
  x86_movsq,
  x86_movss,
  x86_movsw,
  x86_movsx,
  x86_movsxd,
  x86_movupd,
  x86_movups,
  x86_movzx,
  x86_mul,
  x86_mulpd,
  x86_mulps,
  x86_mulsd,
  x86_mulss,
  x86_mwait,
  x86_neg,
  x86_nop,
  x86_not,
  x86_or,
  x86_orpd,
  x86_orps,
  x86_out,
  x86_outs,
  x86_outsb,
  x86_outsd,
  x86_outsw,
  x86_packssdw,
  x86_packsswb,
  x86_packuswb,
  x86_padd,
  x86_paddb,
  x86_paddd,
  x86_paddq,
  x86_paddsb,
  x86_paddsw,
  x86_paddus,
  x86_paddusb,
  x86_paddusw,
  x86_paddw,
  x86_pand,
  x86_pandn,
  x86_pause,
  x86_pavgb,
  x86_pavgusb,
  x86_pavgw,
  x86_pcmpeq,
  x86_pcmpeqb,
  x86_pcmpeqd,
  x86_pcmpeqw,
  x86_pcmpgtb,
  x86_pcmpgtd,
  x86_pcmpgtw,
  x86_pextrw,
  x86_pf2id,
  x86_pf2iw,
  x86_pfacc,
  x86_pfadd,
  x86_pfcmpeq,
  x86_pfcmpge,
  x86_pfcmpgt,
  x86_pfmax,
  x86_pfmin,
  x86_pfmul,
  x86_pfnacc,
  x86_pfpnacc,
  x86_pfrcp,
  x86_pfrcpit1,
  x86_pfrcpit2,
  x86_pfrsqit1,
  x86_pfrsqrt,
  x86_pfsub,
  x86_pfsubr,
  x86_pi2fd,
  x86_pi2fw,
  x86_pinsrw,
  x86_pmaddwd,
  x86_pmaxsw,
  x86_pmaxub,
  x86_pminsw,
  x86_pminub,
  x86_pmovmskb,
  x86_pmulhrw,
  x86_pmulhuw,
  x86_pmulhw,
  x86_pmullw,
  x86_pmuludq,
  x86_pop,
  x86_popa,
  x86_popad,
  x86_popcnt,
  x86_popf,
  x86_popfd,
  x86_popfq,
  x86_por,
  x86_prefetch,
  x86_prefetchnta,
  x86_prefetcht0,
  x86_prefetcht1,
  x86_prefetcht2,
  x86_prefetchw,
  x86_psadbw,
  x86_pshufd,
  x86_pshufhw,
  x86_pshuflw,
  x86_pshufw,
  x86_psll,
  x86_pslld,
  x86_pslldq,
  x86_psllq,
  x86_psllw,
  x86_psrad,
  x86_psraq,
  x86_psraw,
  x86_psrl,
  x86_psrld,
  x86_psrldq,
  x86_psrlq,
  x86_psrlw,
  x86_psub,
  x86_psubb,
  x86_psubd,
  x86_psubq,
  x86_psubsb,
  x86_psubsw,
  x86_psubus,
  x86_psubusb,
  x86_psubusw,
  x86_psubw,
  x86_pswapd,
  x86_punpckhbw,
  x86_punpckhdq,
  x86_punpckhqdq,
  x86_punpckhwd,
  x86_punpcklbw,
  x86_punpckldq,
  x86_punpcklqdq,
  x86_punpcklwd,
  x86_push,
  x86_pusha,
  x86_pushad,
  x86_pushf,
  x86_pushfd,
  x86_pushfq,
  x86_pxor,
  x86_rcl,
  x86_rcpps,
  x86_rcpss,
  x86_rcr,
  x86_rdmsr,
  x86_rdpmc,
  x86_rdtsc,
  x86_rdtscp,
  x86_repe_cmpsb,
  x86_repe_cmpsd,
  x86_repe_cmpsq,
  x86_repe_cmpsw,
  x86_repe_scasb,
  x86_repe_scasd,
  x86_repe_scasq,
  x86_repe_scasw,
  x86_rep_insb,
  x86_rep_insd,
  x86_rep_insw,
  x86_rep_lodsb,
  x86_rep_lodsd,
  x86_rep_lodsq,
  x86_rep_lodsw,
  x86_rep_movsb,
  x86_rep_movsd,
  x86_rep_movsq,
  x86_rep_movsw,
  x86_repne_cmpsb,
  x86_repne_cmpsd,
  x86_repne_cmpsq,
  x86_repne_cmpsw,
  x86_repne_scasb,
  x86_repne_scasd,
  x86_repne_scasq,
  x86_repne_scasw,
  x86_rep_outsb,
  x86_rep_outsd,
  x86_rep_outsw,
  x86_rep_stosb,
  x86_rep_stosd,
  x86_rep_stosq,
  x86_rep_stosw,
  x86_ret,
  x86_retf,
  x86_rol,
  x86_ror,
  x86_rsm,
  x86_rsqrtps,
  x86_rsqrtss,
  x86_sahf,
  x86_salc,
  x86_sar,
  x86_sbb,
  x86_scas,
  x86_scasb,
  x86_scasd,
  x86_scasq,
  x86_scasw,
  x86_seta,
  x86_setae,
  x86_setb,
  x86_setbe,
  x86_sete,
  x86_setg,
  x86_setge,
  x86_setl,
  x86_setle,
  x86_setne,
  x86_setno,
  x86_setns,
  x86_seto,
  x86_setpe,
  x86_setpo,
  x86_sets,
  x86_sfence,
  x86_sgdt,
  x86_shl,
  x86_shld,
  x86_shr,
  x86_shrd,
  x86_shufpd,
  x86_shufps,
  x86_sidt,
  x86_skinit,
  x86_sldt,
  x86_smsw,
  x86_sqrtpd,
  x86_sqrtps,
  x86_sqrtsd,
  x86_sqrtss,
  x86_stc,
  x86_std,
  x86_stgi,
  x86_sti,
  x86_stmxcsr,
  x86_stos,
  x86_stosb,
  x86_stosd,
  x86_stosq,
  x86_stosw,
  x86_str,
  x86_sub,
  x86_subpd,
  x86_subps,
  x86_subsd,
  x86_subss,
  x86_swapgs,
  x86_syscall,
  x86_sysenter,
  x86_sysexit,
  x86_sysret,
  x86_test,
  x86_ucomisd,
  x86_ucomiss,
  x86_ud2,
  x86_unpckhpd,
  x86_unpckhps,
  x86_unpcklpd,
  x86_unpcklps,
  x86_verr,
  x86_verw,
  x86_vmcall,
  x86_vmclear,
  x86_vmlaunch,
  x86_vmload,
  x86_vmmcall,
  x86_vmptrld,
  x86_vmptrst,
  x86_vmresume,
  x86_vmrun,
  x86_vmsave,
  x86_vmxoff,
  x86_vmxon,
  x86_wait,
  x86_wbinvd,
  x86_wrmsr,
  x86_xadd,
  x86_xchg,
  x86_xgetbv,
  x86_xlatb,
  x86_xor,
  x86_xorpd,
  x86_xorps,
  x86_xrstor,
  x86_xsave,
  x86_xsetbv,
  x86_last_instruction
};

enum X86SegmentRegister { // These must match numbering in object code
  x86_segreg_es,
  x86_segreg_cs,
  x86_segreg_ss,
  x86_segreg_ds,
  x86_segreg_fs,
  x86_segreg_gs,
  x86_segreg_none = 16 /* For unspecified segment overrides */
};

enum X86GeneralPurposeRegister { // These must match numbering in object code
  x86_gpr_ax,
  x86_gpr_cx,
  x86_gpr_dx,
  x86_gpr_bx,
  x86_gpr_sp,
  x86_gpr_bp,
  x86_gpr_si,
  x86_gpr_di // Not including r8..r15
};

enum X86RegisterClass {
  x86_regclass_unknown,
  x86_regclass_gpr, // Numbers are X86GeneralPurposeRegister (ax,cx,dx,bx,sp,bp,si,di,r8..r15)
  x86_regclass_segment, // Numbers are X86SegmentRegister (es,cs,ss,ds,fs,gs)
  x86_regclass_cr, // Numbers are cr0..cr15
  x86_regclass_dr, // Numbers are dr0..dr15
  x86_regclass_st, // Numbers are st0..st7
  x86_regclass_mm, // Numbers are mm0..mm7
  x86_regclass_xmm, // Numbers are xmm0..xmm15
  x86_regclass_ip, // Only value allowed is 0
  x86_regclass_st_top, // Only value allowed is 0
  x86_regclass_flags // Only value allowed is 0
};

enum X86BranchPrediction {
  x86_branch_prediction_none,
  x86_branch_prediction_taken,
  x86_branch_prediction_not_taken
};

enum X86PositionInRegister {
  x86_regpos_unknown, /*!< unknown (error or unitialized value) */
  x86_regpos_low_byte, /*!< 1st byte of register (bits 0-7), only for GPRs */
  x86_regpos_high_byte, /*!< 2nd byte of register (bits 8-15), only for ax,bx,cx,dx */
  x86_regpos_word, /*!< 16 bit part of register, only for GPRs, CR0, CR8? */
  x86_regpos_dword, /*!< lower 32 bit part of register, only for GPRs */
  x86_regpos_qword, /*!< lower 64 bit part of register, only for GPRs */
  x86_regpos_all /*!< the full register is used (default value), only value allowed for segregs and st */
};

enum X86InstructionSize {
  x86_insnsize_none,
  x86_insnsize_16,
  x86_insnsize_32,
  x86_insnsize_64
};

enum X86Flag { // These match the bit positions in rFLAGS
  x86_flag_cf = 0,
  x86_flag_1 = 1,
  x86_flag_pf = 2,
  x86_flag_3 = 3,
  x86_flag_af = 4,
  x86_flag_5 = 5,
  x86_flag_zf = 6,
  x86_flag_sf = 7,
  x86_flag_tf = 8,
  x86_flag_if = 9,
  x86_flag_df = 10,
  x86_flag_of = 11,
  x86_flag_iopl0 = 12,
  x86_flag_iopl1 = 13,
  x86_flag_nt = 14,
  x86_flag_15 = 15,
  x86_flag_rf = 16,
  x86_flag_vm = 17,
  x86_flag_ac = 18,
  x86_flag_vif = 19,
  x86_flag_vip = 20,
  x86_flag_id = 21
};

std::string toString(X86InstructionKind k);

#endif /* ROSE_X86INSTRUCTIONENUM_H */
