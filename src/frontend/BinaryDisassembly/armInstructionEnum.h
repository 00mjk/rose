#ifndef ROSE_ARMINSTRUCTIONENUM_H
#define ROSE_ARMINSTRUCTIONENUM_H

#include <string>

enum ArmInstructionKind {
  arm_unknown_instruction = 0,
  arm_adc,
  arm_adcs,
  arm_add,
  arm_adds,
  arm_and,
  arm_ands,
  arm_b,
  arm_bic,
  arm_bics,
  arm_bkpt,
  arm_bl,
  arm_blx,
  arm_bx,
  arm_bxj,
  arm_clz,
  arm_cmn,
  arm_cmp,
  arm_eor,
  arm_eors,
  arm_ldm,
  arm_ldmda,
  arm_ldmdb,
  arm_ldmia,
  arm_ldmib,
  arm_ldr,
  arm_ldrb,
  arm_ldrbt,
  arm_ldrd,
  arm_ldrsb,
  arm_ldrsh,
  arm_ldrt,
  arm_ldruh,
  arm_mla,
  arm_mlas,
  arm_mov,
  arm_movs,
  arm_mrs,
  arm_msr,
  arm_mul,
  arm_muls,
  arm_mvn,
  arm_mvns,
  arm_orr,
  arm_orrs,
  arm_qadd,
  arm_qdadd,
  arm_qdsub,
  arm_qsub,
  arm_rsb,
  arm_rsbs,
  arm_rsc,
  arm_rscs,
  arm_sbc,
  arm_sbcs,
  arm_setend,
  arm_smlabb,
  arm_smlabt,
  arm_smlal,
  arm_smlalbb,
  arm_smlalbt,
  arm_smlals,
  arm_smlaltb,
  arm_smlaltt,
  arm_smlatb,
  arm_smlatt,
  arm_smlawb,
  arm_smlawt,
  arm_smluwb,
  arm_smluwt,
  arm_smulbb,
  arm_smulbt,
  arm_smull,
  arm_smulls,
  arm_smultb,
  arm_smultt,
  arm_stm,
  arm_stmda,
  arm_stmdb,
  arm_stmia,
  arm_stmib,
  arm_str,
  arm_strb,
  arm_strbt,
  arm_strd,
  arm_strh,
  arm_strt,
  arm_sub,
  arm_subs,
  arm_swi,
  arm_swp,
  arm_teq,
  arm_tst,
  arm_umaal,
  arm_umlal,
  arm_umlals,
  arm_umull,
  arm_umulls,
  arm_undefined,
  arm_last_instruction
};

enum ArmInstructionCondition { // These are one more than the ARM condition codes in the instruction encoding, so the order is important
  arm_cond_unknown = 0,
  arm_cond_eq = 1,
  arm_cond_ne = 2,
  arm_cond_hs = 3,
  arm_cond_lo = 4,
  arm_cond_mi = 5,
  arm_cond_pl = 6,
  arm_cond_vs = 7,
  arm_cond_vc = 8,
  arm_cond_hi = 9,
  arm_cond_ls = 10,
  arm_cond_ge = 11,
  arm_cond_lt = 12,
  arm_cond_gt = 13,
  arm_cond_le = 14,
  arm_cond_al = 15,
  arm_cond_nv = 16
};

std::string toString(ArmInstructionKind k);

#endif /* ROSE_ARMINSTRUCTIONENUM_H */
