/* GENERATED FILE - DO NOT MODIFY */
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgReturnStmt
//////////////////////////////////////////////////////////////////////////
/*!
\class SgReturnStmt
\brief This class represents the concept of a C Assembler statement (untested).
\todo Check that when return (SgReturnStatement) is implicit, it should be marked as
    compiler generated.  Actually we only include returns in the AST which are explicit, so
    this is not a problem.
\sa
\ref SgReturnStmt_usage  "Example of using a SgReturnStmt object"
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgReturnStmt data members
/////////////////////////////////////////////////////////////////////////
/*! \var SgReturnStmt::p_expression_root
\brief This pointer points to the SgExpressionRoot of an expression tree.
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgReturnStmt member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*!
\fn SgReturnStmt::~SgReturnStmt()
\brief This is the destructor.
   There are a lot of things to delete, but nothing is deleted in this destructor.
*/
/*!
\fn SgReturnStmt::isSgReturnStmt (SgNode *s)
\brief Cast function (from derived class to SgReturnStmt pointer).
   This functions returns a SgReturnStmt pointer for any input of a 
pointer to an object derived from a SgReturnStmt.
\return Returns valid pointer to SgReturnStmt if input is derived from a SgLocatedNode.
*/
/*!
\fn SgReturnStmt::isSgReturnStmt (const SgNode *s)
\brief Cast function (from derived class to SgReturnStmt pointer).
   This functions returns a SgReturnStmt pointer for any input of a 
pointer to an object derived from a SgReturnStmt.
\return Returns valid pointer to SgReturnStmt if input is derived from a SgLocatedNode.
*/
/*!
\fn SgReturnStmt::get_expression_root() const
\brief Returns pointer to SgExpressionRoot (which wraps the SgExpresion).
\return Returns pointer to SgExpressionRoot.
*/
/*!
\fn SgReturnStmt::set_expression_root(SgExpressionRoot* expr)
\brief Access function for p_expression_root.
\return Returns void.
*/
/*!
\fn SgReturnStmt::get_return_expr() const
\brief Returns pointer to SgExpression (which is wrapped by the p_expression_root).
\return Returns pointer to SgExpression.
*/
/*!
\fn SgReturnStmt::set_return_expr(SgExpression* expression_root)
\brief Access function for SgExpression hidden behind p_expression_root.
\return Returns void.
*/
/*! \name Deprecated*/
//@{
/*!
\fn SgReturnStmt::SgReturnStmt(SgExpression *expression)
\brief This is the constructor.
   This constructor builds the SgReturnStmt base class.
\deprecated This constructor is likely to be deprecated.
*/
//@}
/*! \name Class Members*/
//@{
/*!\var SgExpression *SgReturnStmt::p_expression
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgReturnStmt::SgReturnStmt(const SgReturnStmtStorageClass &source)
*/
/*!\fn inline static void SgReturnStmt::operator delete(void *pointer)
*/
/*!\fn static SgReturnStmt *SgReturnStmt::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgReturnStmt::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgReturnStmt::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgReturnStmt::initializeStorageClassArray(SgReturnStmtStorageClass *storageArray)
*/
/*!\fn static void SgReturnStmt::clearMemoryPool()
*/
/*!\fn static void SgReturnStmt::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgReturnStmt::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgReturnStmt::roseRTI()
*/
/*!\fn virtual SgNode *SgReturnStmt::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgReturnStmt::~SgReturnStmt()
*/
/*!\fn virtual int SgReturnStmt::replace_expression(SgExpression *original_expression,SgExpression *new_expression)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgReturnStmt::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgReturnStmt::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgReturnStmt::cfgIndexForEnd() const
*/
/*!\fn virtual void SgReturnStmt::post_construction_initialization()
*/
/*!\fn void SgReturnStmt::set_expression(SgExpression *expression)
\brief \brief See  *expression)
expression for documentation */
/*!\fn SgExpression *SgReturnStmt::get_expression() const
\brief \brief See  const
expression for documentation */
/*!\fn virtual SgNode *SgReturnStmt::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgReturnStmt::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgReturnStmt::get_numberOfTraversalSuccessors()
\brief \brief See  SgReturnStmt::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgReturnStmt::get_traversalSuccessorContainer()
\brief \brief See  SgReturnStmt::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgReturnStmt::get_traversalSuccessorNamesContainer()
\brief \brief See  SgReturnStmt::traversalSuccessorNamesContainer for documentation */
/*!
\fn SgReturnStmt::SgReturnStmt(Sg_File_Info *startOfConstruct,SgExpression *expression=(0))
\brief This is the constructor.
   This constructor builds the SgReturnStmt base class.
\param startOfConstruct represents the position in the source code
\sa 
\ref SgReturnStmt_create "Example:create an SgReturnStmt object"
*/
//@}
int SAGE_Doxygen_Dummy_88521466132518;
