/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgInquireStatement
*/
/*! \name Class Members*/
//@{
/*!\var SgExpression *SgInquireStatement::p_access
*/
/*!\var SgExpression *SgInquireStatement::p_action
*/
/*!\var SgExpression *SgInquireStatement::p_asynchronous
*/
/*!\var SgExpression *SgInquireStatement::p_blank
*/
/*!\var SgExpression *SgInquireStatement::p_decimal
*/
/*!\var SgExpression *SgInquireStatement::p_delim
*/
/*!\var SgExpression *SgInquireStatement::p_direct
*/
/*!\var SgExpression *SgInquireStatement::p_exist
*/
/*!\var SgExpression *SgInquireStatement::p_file
*/
/*!\var SgExpression *SgInquireStatement::p_form
*/
/*!\var SgExpression *SgInquireStatement::p_formatted
*/
/*!\var SgExpression *SgInquireStatement::p_name
*/
/*!\var SgExpression *SgInquireStatement::p_named
*/
/*!\var SgExpression *SgInquireStatement::p_nextrec
*/
/*!\var SgExpression *SgInquireStatement::p_number
*/
/*!\var SgExpression *SgInquireStatement::p_opened
*/
/*!\var SgExpression *SgInquireStatement::p_pad
*/
/*!\var SgExpression *SgInquireStatement::p_position
*/
/*!\var SgExpression *SgInquireStatement::p_read
*/
/*!\var SgExpression *SgInquireStatement::p_readwrite
*/
/*!\var SgExpression *SgInquireStatement::p_recl
*/
/*!\var SgExpression *SgInquireStatement::p_sequential
*/
/*!\var SgExpression *SgInquireStatement::p_size
*/
/*!\var SgExpression *SgInquireStatement::p_stream
*/
/*!\var SgExpression *SgInquireStatement::p_unformatted
*/
/*!\var SgExpression *SgInquireStatement::p_write
*/
/*!\var SgExpression *SgInquireStatement::p_pending
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgInquireStatement::SgInquireStatement(Sg_File_Info *startOfConstruct)
*/
/*!\fn SgInquireStatement::SgInquireStatement(const SgInquireStatementStorageClass &source)
*/
/*!\fn inline static void SgInquireStatement::operator delete(void *pointer)
*/
/*!\fn static SgInquireStatement *SgInquireStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgInquireStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgInquireStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgInquireStatement::initializeStorageClassArray(SgInquireStatementStorageClass *storageArray)
*/
/*!\fn static void SgInquireStatement::clearMemoryPool()
*/
/*!\fn static void SgInquireStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgInquireStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgInquireStatement::roseRTI()
*/
/*!\fn virtual SgInquireStatement::~SgInquireStatement()
*/
/*!\fn virtual SgNode *SgInquireStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgInquireStatement::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgInquireStatement::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgInquireStatement::cfgIndexForEnd() const
*/
/*!\fn virtual void SgInquireStatement::post_construction_initialization()
*/
/*!\fn void SgInquireStatement::set_access(SgExpression *access)
\brief \brief See  *access)
access for documentation */
/*!\fn void SgInquireStatement::set_action(SgExpression *action)
\brief \brief See  *action)
action for documentation */
/*!\fn void SgInquireStatement::set_asynchronous(SgExpression *asynchronous)
\brief \brief See  *asynchronous)
asynchronous for documentation */
/*!\fn void SgInquireStatement::set_blank(SgExpression *blank)
\brief \brief See  *blank)
blank for documentation */
/*!\fn void SgInquireStatement::set_decimal(SgExpression *decimal)
\brief \brief See  *decimal)
decimal for documentation */
/*!\fn void SgInquireStatement::set_delim(SgExpression *delim)
\brief \brief See  *delim)
delim for documentation */
/*!\fn void SgInquireStatement::set_direct(SgExpression *direct)
\brief \brief See  *direct)
direct for documentation */
/*!\fn void SgInquireStatement::set_exist(SgExpression *exist)
\brief \brief See  *exist)
exist for documentation */
/*!\fn void SgInquireStatement::set_file(SgExpression *file)
\brief \brief See  *file)
file for documentation */
/*!\fn void SgInquireStatement::set_form(SgExpression *form)
\brief \brief See  *form)
form for documentation */
/*!\fn void SgInquireStatement::set_formatted(SgExpression *formatted)
\brief \brief See  *formatted)
formatted for documentation */
/*!\fn void SgInquireStatement::set_name(SgExpression *name)
\brief \brief See  *name)
name for documentation */
/*!\fn void SgInquireStatement::set_named(SgExpression *named)
\brief \brief See  *named)
named for documentation */
/*!\fn void SgInquireStatement::set_nextrec(SgExpression *nextrec)
\brief \brief See  *nextrec)
nextrec for documentation */
/*!\fn void SgInquireStatement::set_number(SgExpression *number)
\brief \brief See  *number)
number for documentation */
/*!\fn void SgInquireStatement::set_opened(SgExpression *opened)
\brief \brief See  *opened)
opened for documentation */
/*!\fn void SgInquireStatement::set_pad(SgExpression *pad)
\brief \brief See  *pad)
pad for documentation */
/*!\fn void SgInquireStatement::set_pending(SgExpression *pending)
\brief \brief See  *pending)
pending for documentation */
/*!\fn void SgInquireStatement::set_position(SgExpression *position)
\brief \brief See  *position)
position for documentation */
/*!\fn void SgInquireStatement::set_read(SgExpression *read)
\brief \brief See  *read)
read for documentation */
/*!\fn void SgInquireStatement::set_readwrite(SgExpression *readwrite)
\brief \brief See  *readwrite)
readwrite for documentation */
/*!\fn void SgInquireStatement::set_recl(SgExpression *recl)
\brief \brief See  *recl)
recl for documentation */
/*!\fn void SgInquireStatement::set_sequential(SgExpression *sequential)
\brief \brief See  *sequential)
sequential for documentation */
/*!\fn void SgInquireStatement::set_size(SgExpression *size)
\brief \brief See  *size)
size for documentation */
/*!\fn void SgInquireStatement::set_stream(SgExpression *stream)
\brief \brief See  *stream)
stream for documentation */
/*!\fn void SgInquireStatement::set_unformatted(SgExpression *unformatted)
\brief \brief See  *unformatted)
unformatted for documentation */
/*!\fn void SgInquireStatement::set_write(SgExpression *write)
\brief \brief See  *write)
write for documentation */
/*!\fn SgExpression *SgInquireStatement::get_access() const
\brief \brief See  const
access for documentation */
/*!\fn SgExpression *SgInquireStatement::get_action() const
\brief \brief See  const
action for documentation */
/*!\fn SgExpression *SgInquireStatement::get_asynchronous() const
\brief \brief See  const
asynchronous for documentation */
/*!\fn SgExpression *SgInquireStatement::get_blank() const
\brief \brief See  const
blank for documentation */
/*!\fn SgExpression *SgInquireStatement::get_decimal() const
\brief \brief See  const
decimal for documentation */
/*!\fn SgExpression *SgInquireStatement::get_delim() const
\brief \brief See  const
delim for documentation */
/*!\fn SgExpression *SgInquireStatement::get_direct() const
\brief \brief See  const
direct for documentation */
/*!\fn SgExpression *SgInquireStatement::get_exist() const
\brief \brief See  const
exist for documentation */
/*!\fn SgExpression *SgInquireStatement::get_file() const
\brief \brief See  const
file for documentation */
/*!\fn SgExpression *SgInquireStatement::get_form() const
\brief \brief See  const
form for documentation */
/*!\fn SgExpression *SgInquireStatement::get_formatted() const
\brief \brief See  const
formatted for documentation */
/*!\fn SgExpression *SgInquireStatement::get_name() const
\brief \brief See  const
name for documentation */
/*!\fn SgExpression *SgInquireStatement::get_named() const
\brief \brief See  const
named for documentation */
/*!\fn SgExpression *SgInquireStatement::get_nextrec() const
\brief \brief See  const
nextrec for documentation */
/*!\fn SgExpression *SgInquireStatement::get_number() const
\brief \brief See  const
number for documentation */
/*!\fn SgExpression *SgInquireStatement::get_opened() const
\brief \brief See  const
opened for documentation */
/*!\fn SgExpression *SgInquireStatement::get_pad() const
\brief \brief See  const
pad for documentation */
/*!\fn SgExpression *SgInquireStatement::get_pending() const
\brief \brief See  const
pending for documentation */
/*!\fn SgExpression *SgInquireStatement::get_position() const
\brief \brief See  const
position for documentation */
/*!\fn SgExpression *SgInquireStatement::get_read() const
\brief \brief See  const
read for documentation */
/*!\fn SgExpression *SgInquireStatement::get_readwrite() const
\brief \brief See  const
readwrite for documentation */
/*!\fn SgExpression *SgInquireStatement::get_recl() const
\brief \brief See  const
recl for documentation */
/*!\fn SgExpression *SgInquireStatement::get_sequential() const
\brief \brief See  const
sequential for documentation */
/*!\fn SgExpression *SgInquireStatement::get_size() const
\brief \brief See  const
size for documentation */
/*!\fn SgExpression *SgInquireStatement::get_stream() const
\brief \brief See  const
stream for documentation */
/*!\fn SgExpression *SgInquireStatement::get_unformatted() const
\brief \brief See  const
unformatted for documentation */
/*!\fn SgExpression *SgInquireStatement::get_write() const
\brief \brief See  const
write for documentation */
/*!\fn virtual SgNode *SgInquireStatement::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgInquireStatement::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgInquireStatement::get_numberOfTraversalSuccessors()
\brief \brief See  SgInquireStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgInquireStatement::get_traversalSuccessorContainer()
\brief \brief See  SgInquireStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgInquireStatement::get_traversalSuccessorNamesContainer()
\brief \brief See  SgInquireStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgInquireStatement::SgInquireStatement()
*/
//@}
extern int SAGE_Doxygen_Dummy_283035104;
