/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgIncludeDirectiveStatement
*/
/*! \name Class Members*/
//@{
/*!\var std::string SgIncludeDirectiveStatement::p_dummyString3
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgIncludeDirectiveStatement::SgIncludeDirectiveStatement(Sg_File_Info *startOfConstruct)
*/
/*!\fn SgIncludeDirectiveStatement::SgIncludeDirectiveStatement(const SgIncludeDirectiveStatementStorageClass &source)
*/
/*!\fn inline static void SgIncludeDirectiveStatement::operator delete(void *pointer)
*/
/*!\fn static SgIncludeDirectiveStatement *SgIncludeDirectiveStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgIncludeDirectiveStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgIncludeDirectiveStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgIncludeDirectiveStatement::initializeStorageClassArray(SgIncludeDirectiveStatementStorageClass *storageArray)
*/
/*!\fn static void SgIncludeDirectiveStatement::clearMemoryPool()
*/
/*!\fn static void SgIncludeDirectiveStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgIncludeDirectiveStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgIncludeDirectiveStatement::roseRTI()
*/
/*!\fn virtual SgIncludeDirectiveStatement::~SgIncludeDirectiveStatement()
*/
/*!\fn virtual SgNode *SgIncludeDirectiveStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgIncludeDirectiveStatement::post_construction_initialization()
*/
/*!\fn virtual SgNode *SgIncludeDirectiveStatement::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgIncludeDirectiveStatement::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgIncludeDirectiveStatement::get_numberOfTraversalSuccessors()
\description See  SgIncludeDirectiveStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgIncludeDirectiveStatement::get_traversalSuccessorContainer()
\description See  SgIncludeDirectiveStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgIncludeDirectiveStatement::get_traversalSuccessorNamesContainer()
\description See  SgIncludeDirectiveStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgIncludeDirectiveStatement::SgIncludeDirectiveStatement()
*/
//@}
extern int SAGE_Doxygen_Dummy_585900728;
