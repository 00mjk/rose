/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgEnumType
*/
/*! \name User Interface*/
//@{
/*!\fn SgEnumType::SgEnumType(const SgEnumType &X)
*/
/*!\fn SgEnumType::SgEnumType(const SgEnumTypeStorageClass &source)
*/
/*!\fn inline static void SgEnumType::operator delete(void *pointer)
*/
/*!\fn static SgEnumType *SgEnumType::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgEnumType::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgEnumType::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgEnumType::initializeStorageClassArray(SgEnumTypeStorageClass *storageArray)
*/
/*!\fn static void SgEnumType::clearMemoryPool()
*/
/*!\fn static void SgEnumType::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgEnumType::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgEnumType::roseRTI()
*/
/*!\fn virtual SgEnumType::~SgEnumType()
*/
/*!\fn virtual SgNode *SgEnumType::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgNode *SgEnumType::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgEnumType::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgEnumType::get_numberOfTraversalSuccessors()
\brief \brief See  SgEnumType::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgEnumType::get_traversalSuccessorContainer()
\brief \brief See  SgEnumType::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgEnumType::get_traversalSuccessorNamesContainer()
\brief \brief See  SgEnumType::traversalSuccessorNamesContainer for documentation */
/*!\fn SgEnumType::SgEnumType(SgDeclarationStatement *declaration=(0))
*/
//@}
extern int SAGE_Doxygen_Dummy_399845888;
