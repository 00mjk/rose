/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgUseRenameExpression
*/
/*! \name Class Members*/
//@{
/*!\var SgExpression *SgUseRenameExpression::p_oldname
*/
/*!\var SgExpression *SgUseRenameExpression::p_newname
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgUseRenameExpression::SgUseRenameExpression(Sg_File_Info *startOfConstruct,SgExpression *oldname=(0),SgExpression *newname=(0))
*/
/*!\fn SgUseRenameExpression::SgUseRenameExpression(const SgUseRenameExpressionStorageClass &source)
*/
/*!\fn inline static void SgUseRenameExpression::operator delete(void *pointer)
*/
/*!\fn static SgUseRenameExpression *SgUseRenameExpression::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgUseRenameExpression::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgUseRenameExpression::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgUseRenameExpression::initializeStorageClassArray(SgUseRenameExpressionStorageClass *storageArray)
*/
/*!\fn static void SgUseRenameExpression::clearMemoryPool()
*/
/*!\fn static void SgUseRenameExpression::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgUseRenameExpression::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgUseRenameExpression::roseRTI()
*/
/*!\fn virtual SgNode *SgUseRenameExpression::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgUseRenameExpression::~SgUseRenameExpression()
*/
/*!\fn virtual void SgUseRenameExpression::post_construction_initialization()
*/
/*!\fn void SgUseRenameExpression::set_newname(SgExpression *newname)
\brief \brief See  *newname)
newname for documentation */
/*!\fn void SgUseRenameExpression::set_oldname(SgExpression *oldname)
\brief \brief See  *oldname)
oldname for documentation */
/*!\fn SgExpression *SgUseRenameExpression::get_newname() const
\brief \brief See  const
newname for documentation */
/*!\fn SgExpression *SgUseRenameExpression::get_oldname() const
\brief \brief See  const
oldname for documentation */
/*!\fn virtual SgNode *SgUseRenameExpression::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual SgType *SgUseRenameExpression::get_type() const
\brief \brief See  const
type for documentation */
/*!\fn virtual size_t SgUseRenameExpression::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgUseRenameExpression::get_numberOfTraversalSuccessors()
\brief \brief See  SgUseRenameExpression::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgUseRenameExpression::get_traversalSuccessorContainer()
\brief \brief See  SgUseRenameExpression::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgUseRenameExpression::get_traversalSuccessorNamesContainer()
\brief \brief See  SgUseRenameExpression::traversalSuccessorNamesContainer for documentation */
/*!\fn SgUseRenameExpression::SgUseRenameExpression(SgExpression *oldname,SgExpression *newname)
*/
//@}
extern int SAGE_Doxygen_Dummy_1014001030;
