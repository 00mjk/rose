/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgBitAndOp
*/
/*! \name User Interface*/
//@{
/*!\fn SgBitAndOp::SgBitAndOp(Sg_File_Info *startOfConstruct,SgExpression *lhs_operand_i=(0),SgExpression *rhs_operand_i=(0),SgType *expression_type=(0))
*/
/*!\fn SgBitAndOp::SgBitAndOp(const SgBitAndOpStorageClass &source)
*/
/*!\fn inline static void SgBitAndOp::operator delete(void *pointer)
*/
/*!\fn static SgBitAndOp *SgBitAndOp::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgBitAndOp::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgBitAndOp::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgBitAndOp::initializeStorageClassArray(SgBitAndOpStorageClass *storageArray)
*/
/*!\fn static void SgBitAndOp::clearMemoryPool()
*/
/*!\fn static void SgBitAndOp::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgBitAndOp::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgBitAndOp::roseRTI()
*/
/*!\fn virtual SgBitAndOp::~SgBitAndOp()
*/
/*!\fn virtual SgNode *SgBitAndOp::copy(SgCopyHelp &help) const
*/
/*!\fn virtual inline int SgBitAndOp::precedence() const
*/
/*!\fn virtual void SgBitAndOp::post_construction_initialization()
*/
/*!\fn virtual SgNode *SgBitAndOp::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgBitAndOp::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgBitAndOp::get_numberOfTraversalSuccessors()
\brief \brief See  SgBitAndOp::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgBitAndOp::get_traversalSuccessorContainer()
\brief \brief See  SgBitAndOp::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgBitAndOp::get_traversalSuccessorNamesContainer()
\brief \brief See  SgBitAndOp::traversalSuccessorNamesContainer for documentation */
/*!\fn SgBitAndOp::SgBitAndOp(SgExpression *lhs_operand_i,SgExpression *rhs_operand_i,SgType *expression_type)
*/
//@}
extern int SAGE_Doxygen_Dummy_1228117506;
