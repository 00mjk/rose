/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgVarArgEndOp
*/
/*! \name Class Members*/
//@{
/*!\var SgExpression *SgVarArgEndOp::p_operand_expr
*/
/*!\var SgType *SgVarArgEndOp::p_expression_type
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgVarArgEndOp::SgVarArgEndOp(Sg_File_Info *startOfConstruct,SgExpression *operand_expr=(0),SgType *expression_type=(0))
*/
/*!\fn SgVarArgEndOp::SgVarArgEndOp(const SgVarArgEndOpStorageClass &source)
*/
/*!\fn inline static void SgVarArgEndOp::operator delete(void *pointer)
*/
/*!\fn static SgVarArgEndOp *SgVarArgEndOp::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgVarArgEndOp::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgVarArgEndOp::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgVarArgEndOp::initializeStorageClassArray(SgVarArgEndOpStorageClass *storageArray)
*/
/*!\fn static void SgVarArgEndOp::clearMemoryPool()
*/
/*!\fn static void SgVarArgEndOp::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgVarArgEndOp::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgVarArgEndOp::roseRTI()
*/
/*!\fn virtual SgNode *SgVarArgEndOp::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgVarArgEndOp::~SgVarArgEndOp()
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgVarArgEndOp::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgVarArgEndOp::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgVarArgEndOp::cfgIndexForEnd() const
*/
/*!\fn virtual void SgVarArgEndOp::post_construction_initialization()
*/
/*!\fn void SgVarArgEndOp::set_expression_type(SgType *expression_type)
\brief \brief See  *expression_type)
expression_type for documentation */
/*!\fn void SgVarArgEndOp::set_operand_expr(SgExpression *operand_expr)
\brief \brief See  *operand_expr)
operand_expr for documentation */
/*!\fn SgExpression *SgVarArgEndOp::get_operand_expr() const
\brief \brief See  const
operand_expr for documentation */
/*!\fn SgType *SgVarArgEndOp::get_expression_type() const
\brief \brief See  const
expression_type for documentation */
/*!\fn virtual SgNode *SgVarArgEndOp::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual SgType *SgVarArgEndOp::get_type() const
\brief \brief See  const
type for documentation */
/*!\fn virtual size_t SgVarArgEndOp::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgVarArgEndOp::get_numberOfTraversalSuccessors()
\brief \brief See  SgVarArgEndOp::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgVarArgEndOp::get_traversalSuccessorContainer()
\brief \brief See  SgVarArgEndOp::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgVarArgEndOp::get_traversalSuccessorNamesContainer()
\brief \brief See  SgVarArgEndOp::traversalSuccessorNamesContainer for documentation */
/*!\fn SgVarArgEndOp::SgVarArgEndOp(SgExpression *operand_expr,SgType *expression_type)
*/
//@}
extern int SAGE_Doxygen_Dummy_2006734241;
