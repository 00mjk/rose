/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgLabelRefExp
*/
/*! \name Class Members*/
//@{
/*!\var SgLabelSymbol *SgLabelRefExp::p_symbol
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgLabelRefExp::SgLabelRefExp(Sg_File_Info *startOfConstruct,SgLabelSymbol *symbol=(0))
*/
/*!\fn SgLabelRefExp::SgLabelRefExp(const SgLabelRefExpStorageClass &source)
*/
/*!\fn inline static void SgLabelRefExp::operator delete(void *pointer)
*/
/*!\fn static SgLabelRefExp *SgLabelRefExp::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgLabelRefExp::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgLabelRefExp::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgLabelRefExp::initializeStorageClassArray(SgLabelRefExpStorageClass *storageArray)
*/
/*!\fn static void SgLabelRefExp::clearMemoryPool()
*/
/*!\fn static void SgLabelRefExp::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgLabelRefExp::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgLabelRefExp::roseRTI()
*/
/*!\fn virtual SgLabelRefExp::~SgLabelRefExp()
*/
/*!\fn virtual SgNode *SgLabelRefExp::copy(SgCopyHelp &help) const
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgLabelRefExp::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgLabelRefExp::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgLabelRefExp::cfgIndexForEnd() const
*/
/*!\fn virtual void SgLabelRefExp::post_construction_initialization()
*/
/*!\fn void SgLabelRefExp::set_symbol(SgLabelSymbol *symbol)
\brief \brief See  *symbol)
symbol for documentation */
/*!\fn SgLabelSymbol *SgLabelRefExp::get_symbol() const
\brief \brief See  const
symbol for documentation */
/*!\fn SgName SgLabelRefExp::get_name() const
\brief \brief See  const
name for documentation */
/*!\fn int SgLabelRefExp::get_numeric_label_value() const
\brief \brief See  const
numeric_label_value for documentation */
/*!\fn virtual SgNode *SgLabelRefExp::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual SgType *SgLabelRefExp::get_type() const
\brief \brief See  const
type for documentation */
/*!\fn virtual size_t SgLabelRefExp::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgLabelRefExp::get_numberOfTraversalSuccessors()
\brief \brief See  SgLabelRefExp::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgLabelRefExp::get_traversalSuccessorContainer()
\brief \brief See  SgLabelRefExp::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgLabelRefExp::get_traversalSuccessorNamesContainer()
\brief \brief See  SgLabelRefExp::traversalSuccessorNamesContainer for documentation */
/*!\fn SgLabelRefExp::SgLabelRefExp(SgLabelSymbol *symbol)
*/
//@}
extern int SAGE_Doxygen_Dummy_1561686855;
