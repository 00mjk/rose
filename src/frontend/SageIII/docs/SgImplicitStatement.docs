/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgImplicitStatement
*/
/*! \name Class Members*/
//@{
/*!\var bool SgImplicitStatement::p_implicit_none
*/
/*!\var SgInitializedNamePtrList SgImplicitStatement::p_variables
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgImplicitStatement::SgImplicitStatement(Sg_File_Info *startOfConstruct,bool implicit_none=false)
*/
/*!\fn SgImplicitStatement::SgImplicitStatement(const SgImplicitStatementStorageClass &source)
*/
/*!\fn inline static void SgImplicitStatement::operator delete(void *pointer)
*/
/*!\fn static SgImplicitStatement *SgImplicitStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgImplicitStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgImplicitStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgImplicitStatement::initializeStorageClassArray(SgImplicitStatementStorageClass *storageArray)
*/
/*!\fn static void SgImplicitStatement::clearMemoryPool()
*/
/*!\fn static void SgImplicitStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgImplicitStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgImplicitStatement::roseRTI()
*/
/*!\fn virtual SgImplicitStatement::~SgImplicitStatement()
*/
/*!\fn virtual SgNode *SgImplicitStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgImplicitStatement::post_construction_initialization()
*/
/*!\fn void SgImplicitStatement::set_implicit_none(bool implicit_none)
\description See  implicit_none)
implicit_none for documentation */
/*!\fn SgInitializedNamePtrList &SgImplicitStatement::get_variables()
\description See  &SgImplicitStatement::variables for documentation */
/*!\fn bool SgImplicitStatement::get_implicit_none() const
\description See  const
implicit_none for documentation */
/*!\fn const SgInitializedNamePtrList &SgImplicitStatement::get_variables() const
\description See  const
variables for documentation */
/*!\fn virtual SgName SgImplicitStatement::get_mangled_name() const
\description See  const
mangled_name for documentation */
/*!\fn virtual SgNode *SgImplicitStatement::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgImplicitStatement::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgImplicitStatement::get_numberOfTraversalSuccessors()
\description See  SgImplicitStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgImplicitStatement::get_traversalSuccessorContainer()
\description See  SgImplicitStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgImplicitStatement::get_traversalSuccessorNamesContainer()
\description See  SgImplicitStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgImplicitStatement::SgImplicitStatement(bool implicit_none)
*/
//@}
extern int SAGE_Doxygen_Dummy_1206936280;
