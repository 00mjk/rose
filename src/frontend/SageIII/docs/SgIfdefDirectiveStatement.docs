/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgIfdefDirectiveStatement
*/
/*! \name Class Members*/
//@{
/*!\var std::string SgIfdefDirectiveStatement::p_dummyString6
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgIfdefDirectiveStatement::SgIfdefDirectiveStatement(Sg_File_Info *startOfConstruct)
*/
/*!\fn SgIfdefDirectiveStatement::SgIfdefDirectiveStatement(const SgIfdefDirectiveStatementStorageClass &source)
*/
/*!\fn inline static void SgIfdefDirectiveStatement::operator delete(void *pointer)
*/
/*!\fn static SgIfdefDirectiveStatement *SgIfdefDirectiveStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgIfdefDirectiveStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgIfdefDirectiveStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgIfdefDirectiveStatement::initializeStorageClassArray(SgIfdefDirectiveStatementStorageClass *storageArray)
*/
/*!\fn static void SgIfdefDirectiveStatement::clearMemoryPool()
*/
/*!\fn static void SgIfdefDirectiveStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgIfdefDirectiveStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgIfdefDirectiveStatement::roseRTI()
*/
/*!\fn virtual SgIfdefDirectiveStatement::~SgIfdefDirectiveStatement()
*/
/*!\fn virtual SgNode *SgIfdefDirectiveStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgIfdefDirectiveStatement::post_construction_initialization()
*/
/*!\fn virtual SgNode *SgIfdefDirectiveStatement::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgIfdefDirectiveStatement::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgIfdefDirectiveStatement::get_numberOfTraversalSuccessors()
\description See  SgIfdefDirectiveStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgIfdefDirectiveStatement::get_traversalSuccessorContainer()
\description See  SgIfdefDirectiveStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgIfdefDirectiveStatement::get_traversalSuccessorNamesContainer()
\description See  SgIfdefDirectiveStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgIfdefDirectiveStatement::SgIfdefDirectiveStatement()
*/
//@}
extern int SAGE_Doxygen_Dummy_1154829644;
