/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgForAllStatement
*/
/*! \name Class Members*/
//@{
/*!\var SgBasicBlock *SgForAllStatement::p_body
*/
/*!\var SgExprListExp *SgForAllStatement::p_forall_header
*/
/*!\var bool SgForAllStatement::p_has_end_statement
*/
/*!\var std::string SgForAllStatement::p_string_label
*/
/*!\var SgLabelRefExp *SgForAllStatement::p_end_numeric_label
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgForAllStatement::SgForAllStatement(Sg_File_Info *startOfConstruct,SgExprListExp *forall_header=(0),SgBasicBlock *body=(0))
*/
/*!\fn SgForAllStatement::SgForAllStatement(const SgForAllStatementStorageClass &source)
*/
/*!\fn inline static void SgForAllStatement::operator delete(void *pointer)
*/
/*!\fn static SgForAllStatement *SgForAllStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgForAllStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgForAllStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgForAllStatement::initializeStorageClassArray(SgForAllStatementStorageClass *storageArray)
*/
/*!\fn static void SgForAllStatement::clearMemoryPool()
*/
/*!\fn static void SgForAllStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgForAllStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgForAllStatement::roseRTI()
*/
/*!\fn virtual SgForAllStatement::~SgForAllStatement()
*/
/*!\fn virtual SgNode *SgForAllStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual bool SgForAllStatement::cfgIsIndexInteresting(unsigned int ) const
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgForAllStatement::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgForAllStatement::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgForAllStatement::cfgFindChildIndex(SgNode *n)
*/
/*!\fn virtual unsigned int SgForAllStatement::cfgFindNextChildIndex(SgNode *n)
*/
/*!\fn virtual unsigned int SgForAllStatement::cfgIndexForEnd() const
*/
/*!\fn virtual void SgForAllStatement::post_construction_initialization()
*/
/*!\fn virtual void SgForAllStatement::set_end_numeric_label(SgLabelRefExp *end_numeric_label)
\brief \brief See  *end_numeric_label)
end_numeric_label for documentation */
/*!\fn void SgForAllStatement::set_body(SgBasicBlock *body)
\brief \brief See  *body)
body for documentation */
/*!\fn void SgForAllStatement::set_forall_header(SgExprListExp *forall_header)
\brief \brief See  *forall_header)
forall_header for documentation */
/*!\fn void SgForAllStatement::set_has_end_statement(bool has_end_statement)
\brief \brief See  has_end_statement)
has_end_statement for documentation */
/*!\fn void SgForAllStatement::set_string_label(std::string string_label)
\brief \brief See  string_label)
string_label for documentation */
/*!\fn SgBasicBlock *SgForAllStatement::get_body() const
\brief \brief See  const
body for documentation */
/*!\fn SgExprListExp *SgForAllStatement::get_forall_header() const
\brief \brief See  const
forall_header for documentation */
/*!\fn SgLabelRefExp *SgForAllStatement::get_end_numeric_label() const
\brief \brief See  const
end_numeric_label for documentation */
/*!\fn bool SgForAllStatement::get_has_end_statement() const
\brief \brief See  const
has_end_statement for documentation */
/*!\fn std::string SgForAllStatement::get_string_label() const
\brief \brief See  const
string_label for documentation */
/*!\fn virtual SgNode *SgForAllStatement::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgForAllStatement::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgForAllStatement::get_numberOfTraversalSuccessors()
\brief \brief See  SgForAllStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgForAllStatement::get_traversalSuccessorContainer()
\brief \brief See  SgForAllStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgForAllStatement::get_traversalSuccessorNamesContainer()
\brief \brief See  SgForAllStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgForAllStatement::SgForAllStatement(SgExprListExp *forall_header,SgBasicBlock *body)
*/
//@}
extern int SAGE_Doxygen_Dummy_136055472;
