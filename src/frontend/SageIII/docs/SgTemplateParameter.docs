/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgTemplateParameter
*/
/*! \name Class Members*/
//@{
/*!\var SgExpression *SgTemplateParameter::p_defaultExpressionParameter
*/
/*!\var SgExpression *SgTemplateParameter::p_expression
*/
/*!\var SgTemplateDeclaration *SgTemplateParameter::p_templateDeclaration
*/
/*!\var SgType *SgTemplateParameter::p_defaultTypeParameter
*/
/*!\var SgType *SgTemplateParameter::p_type
*/
/*!\var enum SgTemplateParameter::template_parameter_enum SgTemplateParameter::p_parameterType
*/
/*!\var SgTemplateDeclaration *SgTemplateParameter::p_defaultTemplateDeclarationParameter
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgTemplateParameter::SgTemplateParameter(SgExpression *parameter,SgExpression *defaultParameter)
*/
/*!\fn SgTemplateParameter::SgTemplateParameter(SgTemplateDeclaration *parameter,SgTemplateDeclaration *defaultParameter)
*/
/*!\fn SgTemplateParameter::SgTemplateParameter(SgType *parameter,SgType *defaultParameter)
*/
/*!\fn SgTemplateParameter::SgTemplateParameter(const SgTemplateParameterStorageClass &source)
*/
/*!\fn inline static void SgTemplateParameter::operator delete(void *pointer)
*/
/*!\fn static SgTemplateParameter *SgTemplateParameter::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgTemplateParameter::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgTemplateParameter::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgTemplateParameter::initializeStorageClassArray(SgTemplateParameterStorageClass *storageArray)
*/
/*!\fn static void SgTemplateParameter::clearMemoryPool()
*/
/*!\fn static void SgTemplateParameter::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgTemplateParameter::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgTemplateParameter::roseRTI()
*/
/*!\fn virtual SgNode *SgTemplateParameter::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgTemplateParameter::~SgTemplateParameter()
*/
/*!\fn virtual void SgTemplateParameter::post_construction_initialization()
*/
/*!\fn void SgTemplateParameter::set_defaultExpressionParameter(SgExpression *defaultExpressionParameter)
\description See  *defaultExpressionParameter)
defaultExpressionParameter for documentation */
/*!\fn void SgTemplateParameter::set_defaultTemplateDeclarationParameter(SgTemplateDeclaration *defaultTemplateDeclarationParameter)
\description See  *defaultTemplateDeclarationParameter)
defaultTemplateDeclarationParameter for documentation */
/*!\fn void SgTemplateParameter::set_defaultTypeParameter(SgType *defaultTypeParameter)
\description See  *defaultTypeParameter)
defaultTypeParameter for documentation */
/*!\fn void SgTemplateParameter::set_expression(SgExpression *expression)
\description See  *expression)
expression for documentation */
/*!\fn void SgTemplateParameter::set_parameterType(enum SgTemplateParameter::template_parameter_enum parameterType)
\description See  parameterType)
parameterType for documentation */
/*!\fn void SgTemplateParameter::set_templateDeclaration(SgTemplateDeclaration *templateDeclaration)
\description See  *templateDeclaration)
templateDeclaration for documentation */
/*!\fn void SgTemplateParameter::set_type(SgType *type)
\description See  *type)
type for documentation */
/*!\fn SgExpression *SgTemplateParameter::get_defaultExpressionParameter() const
\description See  const
defaultExpressionParameter for documentation */
/*!\fn SgExpression *SgTemplateParameter::get_expression() const
\description See  const
expression for documentation */
/*!\fn SgTemplateDeclaration *SgTemplateParameter::get_defaultTemplateDeclarationParameter() const
\description See  const
defaultTemplateDeclarationParameter for documentation */
/*!\fn SgTemplateDeclaration *SgTemplateParameter::get_templateDeclaration() const
\description See  const
templateDeclaration for documentation */
/*!\fn SgType *SgTemplateParameter::get_defaultTypeParameter() const
\description See  const
defaultTypeParameter for documentation */
/*!\fn SgType *SgTemplateParameter::get_type() const
\description See  const
type for documentation */
/*!\fn enum SgTemplateParameter::template_parameter_enum SgTemplateParameter::get_parameterType() const
\description See  const
parameterType for documentation */
/*!\fn virtual SgNode *SgTemplateParameter::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgTemplateParameter::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgTemplateParameter::get_numberOfTraversalSuccessors()
\description See  SgTemplateParameter::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgTemplateParameter::get_traversalSuccessorContainer()
\description See  SgTemplateParameter::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgTemplateParameter::get_traversalSuccessorNamesContainer()
\description See  SgTemplateParameter::traversalSuccessorNamesContainer for documentation */
/*!\fn SgTemplateParameter::SgTemplateParameter(enum SgTemplateParameter::template_parameter_enum parameterType=SgTemplateParameter::parameter_undefined,SgType *type=(0),SgType *defaultTypeParameter=(0),SgExpression *expression=(0),SgExpression *defaultExpressionParameter=(0),SgTemplateDeclaration *templateDeclaration=(0),SgTemplateDeclaration *defaultTemplateDeclarationParameter=(0))
*/
//@}
extern int SAGE_Doxygen_Dummy_1360946976;
