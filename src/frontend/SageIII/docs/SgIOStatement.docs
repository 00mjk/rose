/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgIOStatement
*/
/*! \name Class Members*/
//@{
/*!\var SgExprListExp *SgIOStatement::p_io_stmt_list
*/
/*!\var SgExpression *SgIOStatement::p_err
*/
/*!\var SgExpression *SgIOStatement::p_iostat
*/
/*!\var SgExpression *SgIOStatement::p_unit
*/
/*!\var enum SgIOStatement::io_statement_enum SgIOStatement::p_io_statement
*/
/*!\var SgExpression *SgIOStatement::p_iomsg
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgIOStatement::SgIOStatement(Sg_File_Info *startOfConstruct)
*/
/*!\fn SgIOStatement::SgIOStatement(const SgIOStatementStorageClass &source)
*/
/*!\fn inline static void SgIOStatement::operator delete(void *pointer)
*/
/*!\fn static SgIOStatement *SgIOStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgIOStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgIOStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgIOStatement::initializeStorageClassArray(SgIOStatementStorageClass *storageArray)
*/
/*!\fn static void SgIOStatement::clearMemoryPool()
*/
/*!\fn static void SgIOStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgIOStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgIOStatement::roseRTI()
*/
/*!\fn virtual SgIOStatement::~SgIOStatement()
*/
/*!\fn virtual SgNode *SgIOStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgIOStatement::post_construction_initialization()
*/
/*!\fn void SgIOStatement::set_err(SgExpression *err)
\brief \brief See  *err)
err for documentation */
/*!\fn void SgIOStatement::set_io_statement(enum SgIOStatement::io_statement_enum io_statement)
\brief \brief See  io_statement)
io_statement for documentation */
/*!\fn void SgIOStatement::set_io_stmt_list(SgExprListExp *io_stmt_list)
\brief \brief See  *io_stmt_list)
io_stmt_list for documentation */
/*!\fn void SgIOStatement::set_iomsg(SgExpression *iomsg)
\brief \brief See  *iomsg)
iomsg for documentation */
/*!\fn void SgIOStatement::set_iostat(SgExpression *iostat)
\brief \brief See  *iostat)
iostat for documentation */
/*!\fn void SgIOStatement::set_unit(SgExpression *unit)
\brief \brief See  *unit)
unit for documentation */
/*!\fn SgExprListExp *SgIOStatement::get_io_stmt_list() const
\brief \brief See  const
io_stmt_list for documentation */
/*!\fn SgExpression *SgIOStatement::get_err() const
\brief \brief See  const
err for documentation */
/*!\fn SgExpression *SgIOStatement::get_iomsg() const
\brief \brief See  const
iomsg for documentation */
/*!\fn SgExpression *SgIOStatement::get_iostat() const
\brief \brief See  const
iostat for documentation */
/*!\fn SgExpression *SgIOStatement::get_unit() const
\brief \brief See  const
unit for documentation */
/*!\fn enum SgIOStatement::io_statement_enum SgIOStatement::get_io_statement() const
\brief \brief See  const
io_statement for documentation */
/*!\fn virtual SgNode *SgIOStatement::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgIOStatement::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgIOStatement::get_numberOfTraversalSuccessors()
\brief \brief See  SgIOStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgIOStatement::get_traversalSuccessorContainer()
\brief \brief See  SgIOStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgIOStatement::get_traversalSuccessorNamesContainer()
\brief \brief See  SgIOStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgIOStatement::SgIOStatement()
*/
//@}
extern int SAGE_Doxygen_Dummy_1794903745;
