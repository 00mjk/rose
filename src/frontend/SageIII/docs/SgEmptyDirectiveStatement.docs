/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgEmptyDirectiveStatement
*/
/*! \name Class Members*/
//@{
/*!\var std::string SgEmptyDirectiveStatement::p_dummyString15
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgEmptyDirectiveStatement::SgEmptyDirectiveStatement(Sg_File_Info *startOfConstruct)
*/
/*!\fn SgEmptyDirectiveStatement::SgEmptyDirectiveStatement(const SgEmptyDirectiveStatementStorageClass &source)
*/
/*!\fn inline static void SgEmptyDirectiveStatement::operator delete(void *pointer)
*/
/*!\fn static SgEmptyDirectiveStatement *SgEmptyDirectiveStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgEmptyDirectiveStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgEmptyDirectiveStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgEmptyDirectiveStatement::initializeStorageClassArray(SgEmptyDirectiveStatementStorageClass *storageArray)
*/
/*!\fn static void SgEmptyDirectiveStatement::clearMemoryPool()
*/
/*!\fn static void SgEmptyDirectiveStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgEmptyDirectiveStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgEmptyDirectiveStatement::roseRTI()
*/
/*!\fn virtual SgEmptyDirectiveStatement::~SgEmptyDirectiveStatement()
*/
/*!\fn virtual SgNode *SgEmptyDirectiveStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgEmptyDirectiveStatement::post_construction_initialization()
*/
/*!\fn virtual SgNode *SgEmptyDirectiveStatement::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgEmptyDirectiveStatement::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgEmptyDirectiveStatement::get_numberOfTraversalSuccessors()
\description See  SgEmptyDirectiveStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgEmptyDirectiveStatement::get_traversalSuccessorContainer()
\description See  SgEmptyDirectiveStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgEmptyDirectiveStatement::get_traversalSuccessorNamesContainer()
\description See  SgEmptyDirectiveStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgEmptyDirectiveStatement::SgEmptyDirectiveStatement()
*/
//@}
extern int SAGE_Doxygen_Dummy_365749055;
