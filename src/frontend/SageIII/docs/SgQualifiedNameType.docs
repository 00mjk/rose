/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgQualifiedNameType
*/
/*! \name Class Members*/
//@{
/*!\var SgType *SgQualifiedNameType::p_base_type
*/
/*!\var SgQualifiedNamePtrList SgQualifiedNameType::p_qualifiedNameList
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgQualifiedNameType::SgQualifiedNameType(const SgQualifiedNameTypeStorageClass &source)
*/
/*!\fn inline static void SgQualifiedNameType::operator delete(void *pointer)
*/
/*!\fn static SgQualifiedNameType *SgQualifiedNameType::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgQualifiedNameType::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgQualifiedNameType::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgQualifiedNameType::initializeStorageClassArray(SgQualifiedNameTypeStorageClass *storageArray)
*/
/*!\fn static void SgQualifiedNameType::clearMemoryPool()
*/
/*!\fn static void SgQualifiedNameType::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgQualifiedNameType::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgQualifiedNameType::roseRTI()
*/
/*!\fn virtual SgNode *SgQualifiedNameType::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgQualifiedNameType::~SgQualifiedNameType()
*/
/*!\fn void SgQualifiedNameType::set_base_type(SgType *base_type)
\brief \brief See  *base_type)
base_type for documentation */
/*!\fn void SgQualifiedNameType::set_qualifiedNameList(const SgQualifiedNamePtrList &x)
\brief \brief See  &x)
qualifiedNameList for documentation */
/*!\fn SgName SgQualifiedNameType::get_prefix() const
\brief \brief See  const
prefix for documentation */
/*!\fn SgQualifiedNamePtrList &SgQualifiedNameType::get_qualifiedNameList()
\brief \brief See  &SgQualifiedNameType::qualifiedNameList for documentation */
/*!\fn SgType *SgQualifiedNameType::get_base_type() const
\brief \brief See  const
base_type for documentation */
/*!\fn const SgQualifiedNamePtrList &SgQualifiedNameType::get_qualifiedNameList() const
\brief \brief See  const
qualifiedNameList for documentation */
/*!\fn virtual SgNode *SgQualifiedNameType::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgQualifiedNameType::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgQualifiedNameType::get_numberOfTraversalSuccessors()
\brief \brief See  SgQualifiedNameType::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgQualifiedNameType::get_traversalSuccessorContainer()
\brief \brief See  SgQualifiedNameType::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgQualifiedNameType::get_traversalSuccessorNamesContainer()
\brief \brief See  SgQualifiedNameType::traversalSuccessorNamesContainer for documentation */
/*!\fn SgQualifiedNameType::SgQualifiedNameType(SgType *base_type=(0))
*/
//@}
extern int SAGE_Doxygen_Dummy_406753731;
