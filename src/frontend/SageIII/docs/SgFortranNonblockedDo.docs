/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgFortranNonblockedDo
*/
/*! \name Class Members*/
//@{
/*!\var SgStatement *SgFortranNonblockedDo::p_end_statement
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgFortranNonblockedDo::SgFortranNonblockedDo(Sg_File_Info *startOfConstruct,SgExpression *initialization=(0),SgExpression *bound=(0),SgExpression *increment=(0),SgBasicBlock *body=(0),SgStatement *end_statement=(0))
*/
/*!\fn SgFortranNonblockedDo::SgFortranNonblockedDo(const SgFortranNonblockedDoStorageClass &source)
*/
/*!\fn inline static void SgFortranNonblockedDo::operator delete(void *pointer)
*/
/*!\fn static SgFortranNonblockedDo *SgFortranNonblockedDo::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgFortranNonblockedDo::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgFortranNonblockedDo::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgFortranNonblockedDo::initializeStorageClassArray(SgFortranNonblockedDoStorageClass *storageArray)
*/
/*!\fn static void SgFortranNonblockedDo::clearMemoryPool()
*/
/*!\fn static void SgFortranNonblockedDo::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgFortranNonblockedDo::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgFortranNonblockedDo::roseRTI()
*/
/*!\fn virtual SgFortranNonblockedDo::~SgFortranNonblockedDo()
*/
/*!\fn virtual SgNode *SgFortranNonblockedDo::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgFortranNonblockedDo::post_construction_initialization()
*/
/*!\fn void SgFortranNonblockedDo::set_end_statement(SgStatement *end_statement)
\brief \brief See  *end_statement)
end_statement for documentation */
/*!\fn SgStatement *SgFortranNonblockedDo::get_end_statement() const
\brief \brief See  const
end_statement for documentation */
/*!\fn virtual SgNode *SgFortranNonblockedDo::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgFortranNonblockedDo::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgFortranNonblockedDo::get_numberOfTraversalSuccessors()
\brief \brief See  SgFortranNonblockedDo::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgFortranNonblockedDo::get_traversalSuccessorContainer()
\brief \brief See  SgFortranNonblockedDo::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgFortranNonblockedDo::get_traversalSuccessorNamesContainer()
\brief \brief See  SgFortranNonblockedDo::traversalSuccessorNamesContainer for documentation */
/*!\fn SgFortranNonblockedDo::SgFortranNonblockedDo(SgExpression *initialization,SgExpression *bound,SgExpression *increment,SgBasicBlock *body,SgStatement *end_statement)
*/
//@}
extern int SAGE_Doxygen_Dummy_884802225;
