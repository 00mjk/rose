/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgTypeVoid
*/
/*! \name Class Members*/
//@{
/*!\var static SgTypeVoid *SgTypeVoid::p_builtin_type
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgTypeVoid::SgTypeVoid(const SgTypeVoidStorageClass &source)
*/
/*!\fn inline static void SgTypeVoid::operator delete(void *pointer)
*/
/*!\fn static SgTypeVoid *SgTypeVoid::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgTypeVoid::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgTypeVoid::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgTypeVoid::initializeStorageClassArray(SgTypeVoidStorageClass *storageArray)
*/
/*!\fn static void SgTypeVoid::clearMemoryPool()
*/
/*!\fn static void SgTypeVoid::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgTypeVoid::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgTypeVoid::roseRTI()
*/
/*!\fn virtual SgNode *SgTypeVoid::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgTypeVoid::~SgTypeVoid()
*/
/*!\fn virtual SgNode *SgTypeVoid::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgTypeVoid::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgTypeVoid::get_numberOfTraversalSuccessors()
\brief \brief See  SgTypeVoid::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgTypeVoid::get_traversalSuccessorContainer()
\brief \brief See  SgTypeVoid::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgTypeVoid::get_traversalSuccessorNamesContainer()
\brief \brief See  SgTypeVoid::traversalSuccessorNamesContainer for documentation */
/*!\fn SgTypeVoid::SgTypeVoid()
*/
//@}
extern int SAGE_Doxygen_Dummy_269759219;
