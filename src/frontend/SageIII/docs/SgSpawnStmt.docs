/* GENERATED FILE - DO NOT MODIFY */
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgSpawnStmt
//////////////////////////////////////////////////////////////////////////
/*!
\class SgSpawnStmt
\brief This class is part of the older CC++ concept. It is not a part of C or C++ (this IR
    node is not used and will be removed in a future release).
\deprecated This class is not used and will be removed in a future release.
\sa
\ref SgSpawnStmt_usage  "Example of using a SgSpawnStmt object"
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgSpawnStmt data members
/////////////////////////////////////////////////////////////////////////
/*! \var SgSpawnStmt::p_the_func_root
\brief This pointer points to a SgExpressionRoot.
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgSpawnStmt member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*
\sa 
\ref SgSpawnStmt_create "Example:create an SgSpawnStmt object"
*/
/*!
\fn SgSpawnStmt::~SgSpawnStmt()
\brief This is the destructor.
   There are a lot of things to delete, but nothing is deleted in this destructor.
*/
/*!
\fn SgSpawnStmt::isSgSpawnStmt (SgNode *s)
\brief Cast function (from derived class to SgSpawnStmt pointer).
   This functions returns a SgSpawnStmt pointer for any input of a 
pointer to an object derived from a SgSpawnStmt.
\return Returns valid pointer to SgSpawnStmt if input is derived from a SgLocatedNode.
*/
/*!
\fn SgSpawnStmt::isSgSpawnStmt (const SgNode *s)
\brief Cast function (from derived class to SgSpawnStmt pointer).
   This functions returns a SgSpawnStmt pointer for any input of a 
pointer to an object derived from a SgSpawnStmt.
\return Returns valid pointer to SgSpawnStmt if input is derived from a SgLocatedNode.
*/
/*! \name Class Members*/
//@{
/*!\var SgFunctionCallExp *SgSpawnStmt::p_the_func
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgSpawnStmt::SgSpawnStmt(Sg_File_Info *startOfConstruct,SgFunctionCallExp *the_func=(0))
*/
/*!\fn SgSpawnStmt::SgSpawnStmt(const SgSpawnStmtStorageClass &source)
*/
/*!\fn inline static void SgSpawnStmt::operator delete(void *pointer)
*/
/*!\fn static SgSpawnStmt *SgSpawnStmt::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgSpawnStmt::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgSpawnStmt::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgSpawnStmt::initializeStorageClassArray(SgSpawnStmtStorageClass *storageArray)
*/
/*!\fn static void SgSpawnStmt::clearMemoryPool()
*/
/*!\fn static void SgSpawnStmt::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgSpawnStmt::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgSpawnStmt::roseRTI()
*/
/*!\fn virtual SgNode *SgSpawnStmt::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgSpawnStmt::~SgSpawnStmt()
*/
/*!\fn virtual void SgSpawnStmt::post_construction_initialization()
*/
/*!\fn void SgSpawnStmt::set_the_func(SgFunctionCallExp *the_func)
\brief \brief See  *the_func)
the_func for documentation */
/*!\fn SgFunctionCallExp *SgSpawnStmt::get_the_func() const
\brief \brief See  const
the_func for documentation */
/*!\fn virtual SgNode *SgSpawnStmt::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgSpawnStmt::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgSpawnStmt::get_numberOfTraversalSuccessors()
\brief \brief See  SgSpawnStmt::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgSpawnStmt::get_traversalSuccessorContainer()
\brief \brief See  SgSpawnStmt::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgSpawnStmt::get_traversalSuccessorNamesContainer()
\brief \brief See  SgSpawnStmt::traversalSuccessorNamesContainer for documentation */
/*!
\fn SgSpawnStmt::SgSpawnStmt(SgFunctionCallExp *the_func)
\brief This is the constructor.
   This constructor builds the SgSpawnStmt base class.
\param startOfConstruct represents the position in the source code
*/
//@}
int SAGE_Doxygen_Dummy_138043154321674;
