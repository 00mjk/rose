/* GENERATED FILE - DO NOT MODIFY */
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgContinueStmt
//////////////////////////////////////////////////////////////////////////
/*!
\class SgContinueStmt
\brief This class represents the concept of a C or C++ continue statement.
\sa
\ref SgContinueStmt_usage  "Example of using a SgContinueStmt object"
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgContinueStmt data members
/////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgContinueStmt member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*
\sa 
\ref SgContinueStmt_create "Example:create an SgContinueStmt object"
*/
/*!
\fn SgContinueStmt::~SgContinueStmt()
\brief This is the destructor.
   There are a lot of things to delete, but nothing is deleted in this destructor.
*/
/*!
\fn SgContinueStmt::isSgContinueStmt (SgNode *s)
\brief Cast function (from derived class to SgContinueStmt pointer).
   This functions returns a SgContinueStmt pointer for any input of a 
pointer to an object derived from a SgContinueStmt.
\return Returns valid pointer to SgContinueStmt if input is derived from a SgLocatedNode.
*/
/*!
\fn SgContinueStmt::isSgContinueStmt (const SgNode *s)
\brief Cast function (from derived class to SgContinueStmt pointer).
   This functions returns a SgContinueStmt pointer for any input of a 
pointer to an object derived from a SgContinueStmt.
\return Returns valid pointer to SgContinueStmt if input is derived from a SgLocatedNode.
*/
/*! \name Class Members*/
//@{
/*!\var std::string SgContinueStmt::p_do_string_label
*/
//@}
/*! \name User Interface*/
//@{
/*!
\fn SgContinueStmt::SgContinueStmt(Sg_File_Info *startOfConstruct)
\brief This is the constructor.
   This constructor builds the SgContinueStmt base class.
\param startOfConstruct represents the position in the source code
*/
/*!\fn SgContinueStmt::SgContinueStmt(const SgContinueStmtStorageClass &source)
*/
/*!\fn inline static void SgContinueStmt::operator delete(void *pointer)
*/
/*!\fn static SgContinueStmt *SgContinueStmt::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgContinueStmt::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgContinueStmt::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgContinueStmt::initializeStorageClassArray(SgContinueStmtStorageClass *storageArray)
*/
/*!\fn static void SgContinueStmt::clearMemoryPool()
*/
/*!\fn static void SgContinueStmt::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgContinueStmt::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgContinueStmt::roseRTI()
*/
/*!\fn virtual SgContinueStmt::~SgContinueStmt()
*/
/*!\fn virtual SgNode *SgContinueStmt::copy(SgCopyHelp &help) const
*/
/*!\fn virtual bool SgContinueStmt::cfgIsIndexInteresting(unsigned int ) const
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgContinueStmt::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgContinueStmt::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgContinueStmt::cfgIndexForEnd() const
*/
/*!\fn virtual void SgContinueStmt::post_construction_initialization()
*/
/*!\fn void SgContinueStmt::set_do_string_label(std::string do_string_label)
\brief \brief See  do_string_label)
do_string_label for documentation */
/*!\fn std::string SgContinueStmt::get_do_string_label() const
\brief \brief See  const
do_string_label for documentation */
/*!\fn virtual SgNode *SgContinueStmt::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgContinueStmt::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgContinueStmt::get_numberOfTraversalSuccessors()
\brief \brief See  SgContinueStmt::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgContinueStmt::get_traversalSuccessorContainer()
\brief \brief See  SgContinueStmt::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgContinueStmt::get_traversalSuccessorNamesContainer()
\brief \brief See  SgContinueStmt::traversalSuccessorNamesContainer for documentation */
/*!\fn SgContinueStmt::SgContinueStmt()
*/
//@}
int SAGE_Doxygen_Dummy_91701092418789;
