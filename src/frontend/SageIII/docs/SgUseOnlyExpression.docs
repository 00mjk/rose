/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgUseOnlyExpression
*/
/*! \name Class Members*/
//@{
/*!\var SgExprListExp *SgUseOnlyExpression::p_access_list
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgUseOnlyExpression::SgUseOnlyExpression(Sg_File_Info *startOfConstruct,SgExprListExp *access_list=(0))
*/
/*!\fn SgUseOnlyExpression::SgUseOnlyExpression(const SgUseOnlyExpressionStorageClass &source)
*/
/*!\fn inline static void SgUseOnlyExpression::operator delete(void *pointer)
*/
/*!\fn static SgUseOnlyExpression *SgUseOnlyExpression::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgUseOnlyExpression::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgUseOnlyExpression::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgUseOnlyExpression::initializeStorageClassArray(SgUseOnlyExpressionStorageClass *storageArray)
*/
/*!\fn static void SgUseOnlyExpression::clearMemoryPool()
*/
/*!\fn static void SgUseOnlyExpression::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgUseOnlyExpression::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgUseOnlyExpression::roseRTI()
*/
/*!\fn virtual SgNode *SgUseOnlyExpression::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgUseOnlyExpression::~SgUseOnlyExpression()
*/
/*!\fn virtual void SgUseOnlyExpression::post_construction_initialization()
*/
/*!\fn void SgUseOnlyExpression::set_access_list(SgExprListExp *access_list)
\brief \brief See  *access_list)
access_list for documentation */
/*!\fn SgExprListExp *SgUseOnlyExpression::get_access_list() const
\brief \brief See  const
access_list for documentation */
/*!\fn virtual SgNode *SgUseOnlyExpression::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual SgType *SgUseOnlyExpression::get_type() const
\brief \brief See  const
type for documentation */
/*!\fn virtual size_t SgUseOnlyExpression::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgUseOnlyExpression::get_numberOfTraversalSuccessors()
\brief \brief See  SgUseOnlyExpression::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgUseOnlyExpression::get_traversalSuccessorContainer()
\brief \brief See  SgUseOnlyExpression::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgUseOnlyExpression::get_traversalSuccessorNamesContainer()
\brief \brief See  SgUseOnlyExpression::traversalSuccessorNamesContainer for documentation */
/*!\fn SgUseOnlyExpression::SgUseOnlyExpression(SgExprListExp *access_list)
*/
//@}
extern int SAGE_Doxygen_Dummy_1183051988;
