/* GENERATED FILE - DO NOT MODIFY */
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgCtorInitializerList
//////////////////////////////////////////////////////////////////////////
/*!
\class SgCtorInitializerList
\brief This class represents the concept of a contructor initializer list (used in
    constructor (member function) definitions).
    Constructors are simply member functions with a name matching the class name (or
    instantiated template name).  Constructor initialization lists (also called 
    preinitialization lists) are used only within the member function definition
    (never in the declaration).
\internal It is presently used in the SgMemberFunctionDeclaration
    but it might be that it would be better placed into the SgFunctionDefinition.
    this would at least be similar to the handling of the base class list (stored
    in the SgClassDefinition and not the SgClassDeclaration).
\sa
\ref SgCtorInitializerList_usage  "Example of using a SgCtorInitializerList object"
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgCtorInitializerList data members
/////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgCtorInitializerList member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*
\sa 
\ref SgCtorInitializerList_create "Example:create an SgCtorInitializerList object"
*/
/*!
\fn SgCtorInitializerList::~SgCtorInitializerList()
\brief This is the destructor.
   There are a lot of things to delete, but nothing is deleted in this destructor.
*/
/*!
\fn SgCtorInitializerList::isSgCtorInitializerList (SgNode *s)
\brief Cast function (from derived class to SgCtorInitializerList pointer).
   This functions returns a SgCtorInitializerList pointer for any input of a 
pointer to an object derived from a SgCtorInitializerList.
\return Returns valid pointer to SgCtorInitializerList if input is derived from a SgLocatedNode.
*/
/*!
\fn SgCtorInitializerList::isSgCtorInitializerList (const SgNode *s)
\brief Cast function (from derived class to SgCtorInitializerList pointer).
   This functions returns a SgCtorInitializerList pointer for any input of a 
pointer to an object derived from a SgCtorInitializerList.
\return Returns valid pointer to SgCtorInitializerList if input is derived from a SgLocatedNode.
*/
/*! \name Class Members*/
//@{
/*! \var SgInitializedNamePtrList SgCtorInitializerList::p_ctors
\brief This is an STL list of pointers to SgInitializedName objects.
*/
//@}
/*! \name User Interface*/
//@{
/*!
\fn SgCtorInitializerList::SgCtorInitializerList(Sg_File_Info *startOfConstruct)
\brief This is the constructor.
   This constructor builds the SgCtorInitializerList base class.
\param startOfConstruct represents the position in the source code
*/
/*!\fn SgCtorInitializerList::SgCtorInitializerList(const SgCtorInitializerListStorageClass &source)
*/
/*!\fn inline static void SgCtorInitializerList::operator delete(void *pointer)
*/
/*!\fn static SgCtorInitializerList *SgCtorInitializerList::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgCtorInitializerList::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgCtorInitializerList::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgCtorInitializerList::initializeStorageClassArray(SgCtorInitializerListStorageClass *storageArray)
*/
/*!\fn static void SgCtorInitializerList::clearMemoryPool()
*/
/*!\fn static void SgCtorInitializerList::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgCtorInitializerList::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgCtorInitializerList::roseRTI()
*/
/*!\fn virtual SgCtorInitializerList::~SgCtorInitializerList()
*/
/*!\fn virtual SgNode *SgCtorInitializerList::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgCtorInitializerList::post_construction_initialization()
*/
/*!\fn void SgCtorInitializerList::append_ctor_initializer(SgInitializedName *element)
*/
/*!\fn void SgCtorInitializerList::insert_ctor_initializer(const std::vector < SgInitializedName * , std::allocator< SgInitializedName * > > ::iterator &list,SgInitializedName *element)
*/
/*!\fn void SgCtorInitializerList::prepend_ctor_initializer(SgInitializedName *element)
*/
/*!
\fn SgInitializedNamePtrList &SgCtorInitializerList::get_ctors()
\brief Returns STL list of pointers to SgInitializedName objects.See  &SgCtorInitializerList::ctors for documentation 
\return Returns SgInitializedNamePtrList (STL list) by reference.
*/
/*!\fn const SgInitializedNamePtrList &SgCtorInitializerList::get_ctors() const
\brief \brief See  const
ctors for documentation */
/*!\fn virtual SgName SgCtorInitializerList::get_mangled_name() const
\brief \brief See  const
mangled_name for documentation */
/*!\fn virtual SgNode *SgCtorInitializerList::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgCtorInitializerList::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgCtorInitializerList::get_numberOfTraversalSuccessors()
\brief \brief See  SgCtorInitializerList::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgCtorInitializerList::get_traversalSuccessorContainer()
\brief \brief See  SgCtorInitializerList::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgCtorInitializerList::get_traversalSuccessorNamesContainer()
\brief \brief See  SgCtorInitializerList::traversalSuccessorNamesContainer for documentation */
/*!\fn SgCtorInitializerList::SgCtorInitializerList()
*/
//@}
int SAGE_Doxygen_Dummy_278162523611588;
