/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgInterfaceStatement
*/
/*! \name Class Members*/
//@{
/*!\var SgFunctionDeclaration *SgInterfaceStatement::p_function
*/
/*!\var SgName SgInterfaceStatement::p_name
*/
/*!\var SgLabelRefExp *SgInterfaceStatement::p_end_numeric_label
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgInterfaceStatement::SgInterfaceStatement(Sg_File_Info *startOfConstruct,SgName name=(""),SgFunctionDeclaration *function=(0))
*/
/*!\fn SgInterfaceStatement::SgInterfaceStatement(const SgInterfaceStatementStorageClass &source)
*/
/*!\fn inline static void SgInterfaceStatement::operator delete(void *pointer)
*/
/*!\fn static SgInterfaceStatement *SgInterfaceStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgInterfaceStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgInterfaceStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgInterfaceStatement::initializeStorageClassArray(SgInterfaceStatementStorageClass *storageArray)
*/
/*!\fn static void SgInterfaceStatement::clearMemoryPool()
*/
/*!\fn static void SgInterfaceStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgInterfaceStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgInterfaceStatement::roseRTI()
*/
/*!\fn virtual SgInterfaceStatement::~SgInterfaceStatement()
*/
/*!\fn virtual SgNode *SgInterfaceStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgInterfaceStatement::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgInterfaceStatement::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgInterfaceStatement::cfgIndexForEnd() const
*/
/*!\fn virtual void SgInterfaceStatement::post_construction_initialization()
*/
/*!\fn virtual void SgInterfaceStatement::set_end_numeric_label(SgLabelRefExp *end_numeric_label)
\brief \brief See  *end_numeric_label)
end_numeric_label for documentation */
/*!\fn void SgInterfaceStatement::set_function(SgFunctionDeclaration *function)
\brief \brief See  *function)
function for documentation */
/*!\fn void SgInterfaceStatement::set_name(SgName name)
\brief \brief See  name)
name for documentation */
/*!\fn SgFunctionDeclaration *SgInterfaceStatement::get_function() const
\brief \brief See  const
function for documentation */
/*!\fn SgLabelRefExp *SgInterfaceStatement::get_end_numeric_label() const
\brief \brief See  const
end_numeric_label for documentation */
/*!\fn SgName SgInterfaceStatement::get_name() const
\brief \brief See  const
name for documentation */
/*!\fn virtual SgName SgInterfaceStatement::get_mangled_name() const
\brief \brief See  const
mangled_name for documentation */
/*!\fn virtual SgNode *SgInterfaceStatement::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgInterfaceStatement::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgInterfaceStatement::get_numberOfTraversalSuccessors()
\brief \brief See  SgInterfaceStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgInterfaceStatement::get_traversalSuccessorContainer()
\brief \brief See  SgInterfaceStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgInterfaceStatement::get_traversalSuccessorNamesContainer()
\brief \brief See  SgInterfaceStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgInterfaceStatement::SgInterfaceStatement(SgName name,SgFunctionDeclaration *function)
*/
//@}
extern int SAGE_Doxygen_Dummy_985897211;
