/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgUseStatement
*/
/*! \name Class Members*/
//@{
/*!\var SgExprListExp *SgUseStatement::p_rename_list
*/
/*!\var SgName SgUseStatement::p_name
*/
/*!\var SgUseOnlyExpression *SgUseStatement::p_use_only
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgUseStatement::SgUseStatement(Sg_File_Info *startOfConstruct,SgName name=(""),SgExprListExp *rename_list=(0),SgUseOnlyExpression *use_only=(0))
*/
/*!\fn SgUseStatement::SgUseStatement(const SgUseStatementStorageClass &source)
*/
/*!\fn inline static void SgUseStatement::operator delete(void *pointer)
*/
/*!\fn static SgUseStatement *SgUseStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgUseStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgUseStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgUseStatement::initializeStorageClassArray(SgUseStatementStorageClass *storageArray)
*/
/*!\fn static void SgUseStatement::clearMemoryPool()
*/
/*!\fn static void SgUseStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgUseStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgUseStatement::roseRTI()
*/
/*!\fn virtual SgNode *SgUseStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgUseStatement::~SgUseStatement()
*/
/*!\fn virtual void SgUseStatement::post_construction_initialization()
*/
/*!\fn void SgUseStatement::set_name(SgName name)
\description See  name)
name for documentation */
/*!\fn void SgUseStatement::set_rename_list(SgExprListExp *rename_list)
\description See  *rename_list)
rename_list for documentation */
/*!\fn void SgUseStatement::set_use_only(SgUseOnlyExpression *use_only)
\description See  *use_only)
use_only for documentation */
/*!\fn SgExprListExp *SgUseStatement::get_rename_list() const
\description See  const
rename_list for documentation */
/*!\fn SgName SgUseStatement::get_name() const
\description See  const
name for documentation */
/*!\fn SgUseOnlyExpression *SgUseStatement::get_use_only() const
\description See  const
use_only for documentation */
/*!\fn virtual SgName SgUseStatement::get_mangled_name() const
\description See  const
mangled_name for documentation */
/*!\fn virtual SgNode *SgUseStatement::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgUseStatement::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgUseStatement::get_numberOfTraversalSuccessors()
\description See  SgUseStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgUseStatement::get_traversalSuccessorContainer()
\description See  SgUseStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgUseStatement::get_traversalSuccessorNamesContainer()
\description See  SgUseStatement::traversalSuccessorNamesContainer for documentation */
/*!\fn SgUseStatement::SgUseStatement(SgName name,SgExprListExp *rename_list,SgUseOnlyExpression *use_only)
*/
//@}
extern int SAGE_Doxygen_Dummy_124287499;
