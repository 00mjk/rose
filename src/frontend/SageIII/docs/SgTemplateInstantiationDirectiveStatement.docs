/* GENERATED FILE - DO NOT MODIFY */
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgTemplateInstantiationDirectiveStatement
//////////////////////////////////////////////////////////////////////////
/*!
\class SgTemplateInstantiationDirectiveStatement
\brief This class represents the concept of a C++ template instantiation directive.
   This statement controls the instantiation of template, forcing their explicit
instantiation.  It provides a mechanism to control the instantiation of template,
useful in large projects and libraries.
\internal Currently the declaration representing the class being instantiated is not
    traversed.  Likely it should be since this is where the instantiated member functions
    are found.  As an instantiation is should be marked as compiler-generated, however it
    is explicitly generated by a directive, no information about what forced it to be
    instantiated is made available in the AST, though it is not clear that this is needed.
\todo Consider tranversing instantated templates instantiated by an explicit
    instanntatiation directive.
\sa
\ref SgTemplateInstantiationDirectiveStatement_usage  "Example of using a SgTemplateInstantiationDirectiveStatement object"
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgTemplateInstantiationDirectiveStatement data members
/////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgTemplateInstantiationDirectiveStatement member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*
\sa 
\ref SgTemplateInstantiationDirectiveStatement_create "Example:create an SgTemplateInstantiationDirectiveStatement object"
*/
/*!
\fn SgTemplateInstantiationDirectiveStatement::~SgTemplateInstantiationDirectiveStatement()
\brief This is the destructor.
   There are a lot of things to delete, but nothing is deleted in this destructor.
*/
/*!
\fn SgTemplateInstantiationDirectiveStatement::isSgTemplateInstantiationDirectiveStatement (SgNode *s)
\brief Cast function (from derived class to SgTemplateInstantiationDirectiveStatement pointer).
   This functions returns a SgTemplateInstantiationDirectiveStatement pointer for any input of a 
pointer to an object derived from a SgTemplateInstantiationDirectiveStatement.
\return Returns valid pointer to SgTemplateInstantiationDirectiveStatement if input is derived from a SgLocatedNode.
*/
/*!
\fn SgTemplateInstantiationDirectiveStatement::isSgTemplateInstantiationDirectiveStatement (const SgNode *s)
\brief Cast function (from derived class to SgTemplateInstantiationDirectiveStatement pointer).
   This functions returns a SgTemplateInstantiationDirectiveStatement pointer for any input of a 
pointer to an object derived from a SgTemplateInstantiationDirectiveStatement.
\return Returns valid pointer to SgTemplateInstantiationDirectiveStatement if input is derived from a SgLocatedNode.
*/
/*! \name Class Members*/
//@{
/*! \var SgDeclarationStatement *SgTemplateInstantiationDirectiveStatement::p_declaration
\brief This pointer points to associated template instantiation declaration meant to be
    explicitly instantiated.
    Points to either (I think this is a complete list):
     - SgTemplateInstantiationDecl
     - SgTemplateInstantiationFunctionDecl
     - SgTemplateInstantiationMemberFunctionDecl
\internal This is a SgDeclarationStatement so that it can reference a number of different
    declaration IR nodes (but not any SgDeclaration, since many don't make sense).
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgTemplateInstantiationDirectiveStatement::SgTemplateInstantiationDirectiveStatement(Sg_File_Info *startOfConstruct,SgDeclarationStatement *declaration=(0))
*/
/*!\fn SgTemplateInstantiationDirectiveStatement::SgTemplateInstantiationDirectiveStatement(const SgTemplateInstantiationDirectiveStatementStorageClass &source)
*/
/*!\fn inline static void SgTemplateInstantiationDirectiveStatement::operator delete(void *pointer)
*/
/*!\fn static SgTemplateInstantiationDirectiveStatement *SgTemplateInstantiationDirectiveStatement::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgTemplateInstantiationDirectiveStatement::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgTemplateInstantiationDirectiveStatement::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgTemplateInstantiationDirectiveStatement::initializeStorageClassArray(SgTemplateInstantiationDirectiveStatementStorageClass *storageArray)
*/
/*!\fn static void SgTemplateInstantiationDirectiveStatement::clearMemoryPool()
*/
/*!\fn static void SgTemplateInstantiationDirectiveStatement::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgTemplateInstantiationDirectiveStatement::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgTemplateInstantiationDirectiveStatement::roseRTI()
*/
/*!\fn virtual SgNode *SgTemplateInstantiationDirectiveStatement::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgTemplateInstantiationDirectiveStatement::~SgTemplateInstantiationDirectiveStatement()
*/
/*!\fn virtual void SgTemplateInstantiationDirectiveStatement::fixupCopy_references(SgNode *copy,SgCopyHelp &help) const
*/
/*!\fn virtual void SgTemplateInstantiationDirectiveStatement::fixupCopy_scopes(SgNode *copy,SgCopyHelp &help) const
*/
/*!\fn virtual void SgTemplateInstantiationDirectiveStatement::fixupCopy_symbols(SgNode *copy,SgCopyHelp &help) const
*/
/*!\fn virtual void SgTemplateInstantiationDirectiveStatement::post_construction_initialization()
*/
/*!
\fn void SgTemplateInstantiationDirectiveStatement::set_declaration(SgDeclarationStatement *declaration)
\brief Access function for p_declaration.See  *declaration)
declaration for documentation 
\return Returns void.
*/
/*!
\fn SgDeclarationStatement *SgTemplateInstantiationDirectiveStatement::get_declaration() const
\brief Returns pointer to SgDeclarationStatement.See  const
declaration for documentation 
\return Returns pointer to SgDeclarationStatement.
*/
/*!\fn virtual SgName SgTemplateInstantiationDirectiveStatement::get_mangled_name() const
\brief \brief See  const
mangled_name for documentation */
/*!\fn virtual SgNode *SgTemplateInstantiationDirectiveStatement::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgTemplateInstantiationDirectiveStatement::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgTemplateInstantiationDirectiveStatement::get_numberOfTraversalSuccessors()
\brief \brief See  SgTemplateInstantiationDirectiveStatement::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgTemplateInstantiationDirectiveStatement::get_traversalSuccessorContainer()
\brief \brief See  SgTemplateInstantiationDirectiveStatement::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgTemplateInstantiationDirectiveStatement::get_traversalSuccessorNamesContainer()
\brief \brief See  SgTemplateInstantiationDirectiveStatement::traversalSuccessorNamesContainer for documentation */
/*!
\fn SgTemplateInstantiationDirectiveStatement::SgTemplateInstantiationDirectiveStatement(SgDeclarationStatement *declaration)
\brief This is the constructor.
   This constructor builds the SgTemplateInstantiationDirectiveStatement base class.
\param startOfConstruct represents the position in the source code
*/
//@}
int SAGE_Doxygen_Dummy_727463162123;
