/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgIntegerDivideOp
*/
/*! \name User Interface*/
//@{
/*!\fn SgIntegerDivideOp::SgIntegerDivideOp(Sg_File_Info *startOfConstruct,SgExpression *lhs_operand_i=(0),SgExpression *rhs_operand_i=(0),SgType *expression_type=(0))
*/
/*!\fn SgIntegerDivideOp::SgIntegerDivideOp(const SgIntegerDivideOpStorageClass &source)
*/
/*!\fn inline static void SgIntegerDivideOp::operator delete(void *pointer)
*/
/*!\fn static SgIntegerDivideOp *SgIntegerDivideOp::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgIntegerDivideOp::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgIntegerDivideOp::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgIntegerDivideOp::initializeStorageClassArray(SgIntegerDivideOpStorageClass *storageArray)
*/
/*!\fn static void SgIntegerDivideOp::clearMemoryPool()
*/
/*!\fn static void SgIntegerDivideOp::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgIntegerDivideOp::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgIntegerDivideOp::roseRTI()
*/
/*!\fn virtual SgIntegerDivideOp::~SgIntegerDivideOp()
*/
/*!\fn virtual SgNode *SgIntegerDivideOp::copy(SgCopyHelp &help) const
*/
/*!\fn virtual inline int SgIntegerDivideOp::precedence() const
*/
/*!\fn virtual void SgIntegerDivideOp::post_construction_initialization()
*/
/*!\fn virtual SgNode *SgIntegerDivideOp::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgIntegerDivideOp::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgIntegerDivideOp::get_numberOfTraversalSuccessors()
\brief \brief See  SgIntegerDivideOp::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgIntegerDivideOp::get_traversalSuccessorContainer()
\brief \brief See  SgIntegerDivideOp::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgIntegerDivideOp::get_traversalSuccessorNamesContainer()
\brief \brief See  SgIntegerDivideOp::traversalSuccessorNamesContainer for documentation */
/*!\fn SgIntegerDivideOp::SgIntegerDivideOp(SgExpression *lhs_operand_i,SgExpression *rhs_operand_i,SgType *expression_type)
*/
//@}
extern int SAGE_Doxygen_Dummy_393617963;
