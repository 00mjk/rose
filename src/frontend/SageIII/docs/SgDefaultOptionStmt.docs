/* GENERATED FILE - DO NOT MODIFY */
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgDefaultOptionStmt
//////////////////////////////////////////////////////////////////////////
/*!
\class SgDefaultOptionStmt
\brief This class represents the concept of a C or C++ default case within a switch
    statement.
   The default case in a switch statement is optional within C and C++, it is not 
currently a part of ROSE AST normalization to build one for each switch, though this might
be done at some point (in which case it will be marked as compiler-generated).  At
present any statement associated with the defalut case is placed into a compiler generated
SgBasicBlock, a current AST normalization.  The ROSE User Manual for details of minor AST
normalizations.
\sa
\ref SgDefaultOptionStmt_usage  "Example of using a SgDefaultOptionStmt object"
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgDefaultOptionStmt data members
/////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgDefaultOptionStmt member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*
\sa 
\ref SgDefaultOptionStmt_create "Example:create an SgDefaultOptionStmt object"
*/
/*!
\fn SgDefaultOptionStmt::~SgDefaultOptionStmt()
\brief This is the destructor.
   There are a lot of things to delete, but nothing is deleted in this destructor.
*/
/*!
\fn SgDefaultOptionStmt::isSgDefaultOptionStmt (SgNode *s)
\brief Cast function (from derived class to SgDefaultOptionStmt pointer).
   This functions returns a SgDefaultOptionStmt pointer for any input of a 
pointer to an object derived from a SgDefaultOptionStmt.
\return Returns valid pointer to SgDefaultOptionStmt if input is derived from a SgLocatedNode.
*/
/*!
\fn SgDefaultOptionStmt::isSgDefaultOptionStmt (const SgNode *s)
\brief Cast function (from derived class to SgDefaultOptionStmt pointer).
   This functions returns a SgDefaultOptionStmt pointer for any input of a 
pointer to an object derived from a SgDefaultOptionStmt.
\return Returns valid pointer to SgDefaultOptionStmt if input is derived from a SgLocatedNode.
*/
/*! \name Class Members*/
//@{
/*! \var SgBasicBlock *SgDefaultOptionStmt::p_body
\brief This pointer points to SgBasicBlock holding the statements executed for the default
    case of a switch statement.
\internal This should always be a vailid pointer (a current AST normalization).  The list
    can however be empty.
*/
//@}
/*! \name User Interface*/
//@{
/*!
\fn SgDefaultOptionStmt::SgDefaultOptionStmt(Sg_File_Info *startOfConstruct,SgBasicBlock *body=(0))
\brief This is the constructor.
   This constructor builds the SgDefaultOptionStmt base class.
\param startOfConstruct represents the position in the source code
*/
/*!\fn SgDefaultOptionStmt::SgDefaultOptionStmt(const SgDefaultOptionStmtStorageClass &source)
*/
/*!\fn inline static void SgDefaultOptionStmt::operator delete(void *pointer)
*/
/*!\fn static SgDefaultOptionStmt *SgDefaultOptionStmt::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgDefaultOptionStmt::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgDefaultOptionStmt::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgDefaultOptionStmt::initializeStorageClassArray(SgDefaultOptionStmtStorageClass *storageArray)
*/
/*!\fn static void SgDefaultOptionStmt::clearMemoryPool()
*/
/*!\fn static void SgDefaultOptionStmt::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgDefaultOptionStmt::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgDefaultOptionStmt::roseRTI()
*/
/*!\fn virtual SgDefaultOptionStmt::~SgDefaultOptionStmt()
*/
/*!\fn virtual SgNode *SgDefaultOptionStmt::copy(SgCopyHelp &help) const
*/
/*!\fn virtual bool SgDefaultOptionStmt::cfgIsIndexInteresting(unsigned int ) const
*/
/*!\fn virtual bool SgDefaultOptionStmt::replace_child(SgStatement *,SgStatement *,bool extractListFromBasicBlock=false)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgDefaultOptionStmt::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgDefaultOptionStmt::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgDefaultOptionStmt::cfgIndexForEnd() const
*/
/*!\fn virtual void SgDefaultOptionStmt::fixupCopy_references(SgNode *copy,SgCopyHelp &help) const
*/
/*!\fn virtual void SgDefaultOptionStmt::fixupCopy_scopes(SgNode *copy,SgCopyHelp &help) const
*/
/*!\fn virtual void SgDefaultOptionStmt::fixupCopy_symbols(SgNode *copy,SgCopyHelp &help) const
*/
/*!\fn virtual void SgDefaultOptionStmt::post_construction_initialization()
*/
/*!
\fn void SgDefaultOptionStmt::set_body(SgBasicBlock *body)
\brief Access function for p_body.See  *body)
body for documentation 
\return Returns void.
*/
/*!
\fn SgBasicBlock *SgDefaultOptionStmt::get_body() const
\brief Returns pointer to SgBasicBlock.See  const
body for documentation 
\return Returns pointer to SgBasicBlock.
*/
/*!\fn virtual SgNode *SgDefaultOptionStmt::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgDefaultOptionStmt::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgDefaultOptionStmt::get_numberOfTraversalSuccessors()
\brief \brief See  SgDefaultOptionStmt::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgDefaultOptionStmt::get_traversalSuccessorContainer()
\brief \brief See  SgDefaultOptionStmt::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgDefaultOptionStmt::get_traversalSuccessorNamesContainer()
\brief \brief See  SgDefaultOptionStmt::traversalSuccessorNamesContainer for documentation */
/*!\fn SgDefaultOptionStmt::SgDefaultOptionStmt(SgBasicBlock *body)
*/
//@}
int SAGE_Doxygen_Dummy_308152635126520;
