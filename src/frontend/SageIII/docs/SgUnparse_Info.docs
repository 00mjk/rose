/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgUnparse_Info
*/
/*! \name Class Members*/
//@{
/*!\var SgBitVector SgUnparse_Info::p_unparse_attribute
*/
/*!\var SgDeclarationStatement *SgUnparse_Info::p_declstatement_ptr
*/
/*!\var SgFunctionCallExp *SgUnparse_Info::p_current_function_call
*/
/*!\var SgName SgUnparse_Info::p_array_index_list
*/
/*!\var SgName SgUnparse_Info::p_var_name
*/
/*!\var SgNamedType *SgUnparse_Info::p_current_context
*/
/*!\var SgNamespaceDeclarationStatement *SgUnparse_Info::p_current_namespace
*/
/*!\var SgQualifiedNamePtrListPtr SgUnparse_Info::p_qualifiedNameList
*/
/*!\var bool SgUnparse_Info::p_outputCodeGenerationFormatDelimiters
*/
/*!\var int SgUnparse_Info::p_access_attribute
*/
/*!\var int SgUnparse_Info::p_nested_expression
*/
/*!\var static SgTypePtrList SgUnparse_Info::p_structureTagProcessingList
*/
/*!\var static bool SgUnparse_Info::p_forceDefaultConstructorToTriggerError
*/
/*!\var std::string SgUnparse_Info::p_operator_name
*/
/*!\var SgScopeStatement *SgUnparse_Info::p_current_scope
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgUnparse_Info &SgUnparse_Info::operator=(const SgUnparse_Info &X)
*/
/*!\fn SgUnparse_Info::SgUnparse_Info()
*/
/*!\fn SgUnparse_Info::SgUnparse_Info(const SgUnparse_Info &X)
*/
/*!\fn SgUnparse_Info::SgUnparse_Info(const SgUnparse_InfoStorageClass &source)
*/
/*!\fn inline static void SgUnparse_Info::operator delete(void *pointer)
*/
/*!\fn int SgUnparse_Info::AddSemiColonAfterDeclaration() const
*/
/*!\fn int SgUnparse_Info::CheckAccess() const
*/
/*!\fn int SgUnparse_Info::PrintName() const
*/
/*!\fn int SgUnparse_Info::SkipAtomic() const
*/
/*!\fn int SgUnparse_Info::SkipBaseType() const
*/
/*!\fn int SgUnparse_Info::SkipBasicBlock() const
*/
/*!\fn int SgUnparse_Info::SkipCPPDirectives() const
*/
/*!\fn int SgUnparse_Info::SkipClassDefinition() const
*/
/*!\fn int SgUnparse_Info::SkipClassSpecifier() const
*/
/*!\fn int SgUnparse_Info::SkipComments() const
*/
/*!\fn int SgUnparse_Info::SkipDefinition() const
*/
/*!\fn int SgUnparse_Info::SkipEnumDefinition() const
*/
/*!\fn int SgUnparse_Info::SkipFunctionDefinition() const
*/
/*!\fn int SgUnparse_Info::SkipFunctionQualifier() const
*/
/*!\fn int SgUnparse_Info::SkipGlobal() const
*/
/*!\fn int SgUnparse_Info::SkipInitializer() const
*/
/*!\fn int SgUnparse_Info::SkipParen() const
*/
/*!\fn int SgUnparse_Info::SkipQualifiedNames() const
*/
/*!\fn int SgUnparse_Info::SkipSemiColon() const
*/
/*!\fn int SgUnparse_Info::SkipWhitespaces() const
*/
/*!\fn int SgUnparse_Info::checkBit(enum SgUnparse_Info::unparse_type_num bit) const
*/
/*!\fn int SgUnparse_Info::forceQualifiedNames() const
*/
/*!\fn int SgUnparse_Info::inAggregateInitializer() const
*/
/*!\fn int SgUnparse_Info::inArgList() const
*/
/*!\fn int SgUnparse_Info::inConditional() const
*/
/*!\fn int SgUnparse_Info::inEmbeddedDecl() const
*/
/*!\fn int SgUnparse_Info::inEnumDecl() const
*/
/*!\fn int SgUnparse_Info::inRhsExpr() const
*/
/*!\fn int SgUnparse_Info::inTemplateList() const
*/
/*!\fn int SgUnparse_Info::inVarDecl() const
*/
/*!\fn int SgUnparse_Info::isArrayType() const
*/
/*!\fn int SgUnparse_Info::isPointerToSomething() const
*/
/*!\fn int SgUnparse_Info::isPrivateAccess() const
*/
/*!\fn int SgUnparse_Info::isProtectedAccess() const
*/
/*!\fn int SgUnparse_Info::isPublicAccess() const
*/
/*!\fn int SgUnparse_Info::isReferenceToSomething() const
*/
/*!\fn int SgUnparse_Info::isTypeFirstPart() const
*/
/*!\fn int SgUnparse_Info::isTypeSecondPart() const
*/
/*!\fn int SgUnparse_Info::isUnsetAccess() const
*/
/*!\fn int SgUnparse_Info::isWithType() const
*/
/*!\fn int SgUnparse_Info::outputClassTemplateName() const
*/
/*!\fn int SgUnparse_Info::outputCompilerGeneratedStatements() const
*/
/*!\fn int SgUnparse_Info::requiresGlobalNameQualification() const
*/
/*!\fn int SgUnparse_Info::skipCheckAccess() const
*/
/*!\fn int SgUnparse_Info::useTypeAttributes() const
*/
/*!\fn static SgUnparse_Info *SgUnparse_Info::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgUnparse_Info::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgUnparse_Info::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgUnparse_Info::initializeStorageClassArray(SgUnparse_InfoStorageClass *storageArray)
*/
/*!\fn static void SgUnparse_Info::clearMemoryPool()
*/
/*!\fn static void SgUnparse_Info::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgUnparse_Info::resetValidFreepointers()
*/
/*!\fn std::string SgUnparse_Info::displayString(const std::string &label) const
*/
/*!\fn virtual RTIReturnType SgUnparse_Info::roseRTI()
*/
/*!\fn virtual SgNode *SgUnparse_Info::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgUnparse_Info::post_construction_initialization()
*/
/*!\fn void SgUnparse_Info::addStructureTag(SgNamedType *structureTag)
*/
/*!\fn void SgUnparse_Info::display(const std::string &label=("")) const
*/
/*!\fn void SgUnparse_Info::setBit(enum SgUnparse_Info::unparse_type_num bit)
*/
/*!\fn void SgUnparse_Info::unsetBit(enum SgUnparse_Info::unparse_type_num bit)
*/
/*!\fn static void SgUnparse_Info::set_forceDefaultConstructorToTriggerError(bool forceDefaultConstructorToTriggerError)
\description See  forceDefaultConstructorToTriggerError)
forceDefaultConstructorToTriggerError for documentation */
/*!\fn void SgUnparse_Info::set_AddSemiColonAfterDeclaration()
\description See  SgUnparse_Info::AddSemiColonAfterDeclaration for documentation */
/*!\fn void SgUnparse_Info::set_CheckAccess()
\description See  SgUnparse_Info::CheckAccess for documentation */
/*!\fn void SgUnparse_Info::set_PrintName()
\description See  SgUnparse_Info::PrintName for documentation */
/*!\fn void SgUnparse_Info::set_SkipAtomic()
\description See  SgUnparse_Info::SkipAtomic for documentation */
/*!\fn void SgUnparse_Info::set_SkipBaseType()
\description See  SgUnparse_Info::SkipBaseType for documentation */
/*!\fn void SgUnparse_Info::set_SkipBasicBlock()
\description See  SgUnparse_Info::SkipBasicBlock for documentation */
/*!\fn void SgUnparse_Info::set_SkipCPPDirectives()
\description See  SgUnparse_Info::SkipCPPDirectives for documentation */
/*!\fn void SgUnparse_Info::set_SkipClassDefinition()
\description See  SgUnparse_Info::SkipClassDefinition for documentation */
/*!\fn void SgUnparse_Info::set_SkipClassSpecifier()
\description See  SgUnparse_Info::SkipClassSpecifier for documentation */
/*!\fn void SgUnparse_Info::set_SkipComments()
\description See  SgUnparse_Info::SkipComments for documentation */
/*!\fn void SgUnparse_Info::set_SkipConstantFoldedExpressions()
\description See  SgUnparse_Info::SkipConstantFoldedExpressions for documentation */
/*!\fn void SgUnparse_Info::set_SkipDefinition()
\description See  SgUnparse_Info::SkipDefinition for documentation */
/*!\fn void SgUnparse_Info::set_SkipEnumDefinition()
\description See  SgUnparse_Info::SkipEnumDefinition for documentation */
/*!\fn void SgUnparse_Info::set_SkipFunctionDefinition()
\description See  SgUnparse_Info::SkipFunctionDefinition for documentation */
/*!\fn void SgUnparse_Info::set_SkipFunctionQualifier()
\description See  SgUnparse_Info::SkipFunctionQualifier for documentation */
/*!\fn void SgUnparse_Info::set_SkipGlobal()
\description See  SgUnparse_Info::SkipGlobal for documentation */
/*!\fn void SgUnparse_Info::set_SkipInitializer()
\description See  SgUnparse_Info::SkipInitializer for documentation */
/*!\fn void SgUnparse_Info::set_SkipParen()
\description See  SgUnparse_Info::SkipParen for documentation */
/*!\fn void SgUnparse_Info::set_SkipQualifiedNames()
\description See  SgUnparse_Info::SkipQualifiedNames for documentation */
/*!\fn void SgUnparse_Info::set_SkipSemiColon()
\description See  SgUnparse_Info::SkipSemiColon for documentation */
/*!\fn void SgUnparse_Info::set_SkipWhitespaces()
\description See  SgUnparse_Info::SkipWhitespaces for documentation */
/*!\fn void SgUnparse_Info::set_access_attribute(int access_attribute)
\description See  access_attribute)
access_attribute for documentation */
/*!\fn void SgUnparse_Info::set_array_index_list(SgExpression *e,SgUnparse_Info finfo)
\description See  finfo)
array_index_list for documentation */
/*!\fn void SgUnparse_Info::set_array_index_list(SgName array_index_list)
\description See  array_index_list)
array_index_list for documentation */
/*!\fn void SgUnparse_Info::set_current_context(SgNamedType *current_context)
\description See  *current_context)
current_context for documentation */
/*!\fn void SgUnparse_Info::set_current_function_call(SgFunctionCallExp *current_function_call)
\description See  *current_function_call)
current_function_call for documentation */
/*!\fn void SgUnparse_Info::set_current_namespace(SgNamespaceDeclarationStatement *current_namespace)
\description See  *current_namespace)
current_namespace for documentation */
/*!\fn void SgUnparse_Info::set_current_scope(SgScopeStatement *current_scope)
\description See  *current_scope)
current_scope for documentation */
/*!\fn void SgUnparse_Info::set_decl_stmt(SgDeclarationStatement *stmt)
\description See  *stmt)
decl_stmt for documentation */
/*!\fn void SgUnparse_Info::set_declstatement_ptr(SgDeclarationStatement *declstatement_ptr)
\description See  *declstatement_ptr)
declstatement_ptr for documentation */
/*!\fn void SgUnparse_Info::set_forceQualifiedNames()
\description See  SgUnparse_Info::forceQualifiedNames for documentation */
/*!\fn void SgUnparse_Info::set_inAggregateInitializer()
\description See  SgUnparse_Info::inAggregateInitializer for documentation */
/*!\fn void SgUnparse_Info::set_inArgList()
\description See  SgUnparse_Info::inArgList for documentation */
/*!\fn void SgUnparse_Info::set_inConditional()
\description See  SgUnparse_Info::inConditional for documentation */
/*!\fn void SgUnparse_Info::set_inEmbeddedDecl()
\description See  SgUnparse_Info::inEmbeddedDecl for documentation */
/*!\fn void SgUnparse_Info::set_inEnumDecl()
\description See  SgUnparse_Info::inEnumDecl for documentation */
/*!\fn void SgUnparse_Info::set_inRhsExpr()
\description See  SgUnparse_Info::inRhsExpr for documentation */
/*!\fn void SgUnparse_Info::set_inTemplateList()
\description See  SgUnparse_Info::inTemplateList for documentation */
/*!\fn void SgUnparse_Info::set_inVarDecl()
\description See  SgUnparse_Info::inVarDecl for documentation */
/*!\fn void SgUnparse_Info::set_isArrayType()
\description See  SgUnparse_Info::isArrayType for documentation */
/*!\fn void SgUnparse_Info::set_isPointerToSomething()
\description See  SgUnparse_Info::isPointerToSomething for documentation */
/*!\fn void SgUnparse_Info::set_isPrivateAccess()
\description See  SgUnparse_Info::isPrivateAccess for documentation */
/*!\fn void SgUnparse_Info::set_isProtectedAccess()
\description See  SgUnparse_Info::isProtectedAccess for documentation */
/*!\fn void SgUnparse_Info::set_isPublicAccess()
\description See  SgUnparse_Info::isPublicAccess for documentation */
/*!\fn void SgUnparse_Info::set_isReferenceToSomething()
\description See  SgUnparse_Info::isReferenceToSomething for documentation */
/*!\fn void SgUnparse_Info::set_isTypeFirstPart()
\description See  SgUnparse_Info::isTypeFirstPart for documentation */
/*!\fn void SgUnparse_Info::set_isTypeSecondPart()
\description See  SgUnparse_Info::isTypeSecondPart for documentation */
/*!\fn void SgUnparse_Info::set_isUnsetAccess()
\description See  SgUnparse_Info::isUnsetAccess for documentation */
/*!\fn void SgUnparse_Info::set_isWithType()
\description See  SgUnparse_Info::isWithType for documentation */
/*!\fn void SgUnparse_Info::set_name(const SgName &name)
\description See  &name)
name for documentation */
/*!\fn void SgUnparse_Info::set_nested_expression()
\description See  SgUnparse_Info::nested_expression for documentation */
/*!\fn void SgUnparse_Info::set_operator_name(const std::string &on)
\description See  &on)
operator_name for documentation */
/*!\fn void SgUnparse_Info::set_outputClassTemplateName()
\description See  SgUnparse_Info::outputClassTemplateName for documentation */
/*!\fn void SgUnparse_Info::set_outputCodeGenerationFormatDelimiters(bool outputCodeGenerationFormatDelimiters)
\description See  outputCodeGenerationFormatDelimiters)
outputCodeGenerationFormatDelimiters for documentation */
/*!\fn void SgUnparse_Info::set_outputCompilerGeneratedStatements()
\description See  SgUnparse_Info::outputCompilerGeneratedStatements for documentation */
/*!\fn void SgUnparse_Info::set_qualifiedNameList(SgQualifiedNamePtrListPtr qualifiedNameList)
\description See  qualifiedNameList)
qualifiedNameList for documentation */
/*!\fn void SgUnparse_Info::set_requiresGlobalNameQualification()
\description See  SgUnparse_Info::requiresGlobalNameQualification for documentation */
/*!\fn void SgUnparse_Info::set_skipCheckAccess()
\description See  SgUnparse_Info::skipCheckAccess for documentation */
/*!\fn void SgUnparse_Info::set_useTypeAttributes()
\description See  SgUnparse_Info::useTypeAttributes for documentation */
/*!\fn void SgUnparse_Info::unset_AddSemiColonAfterDeclaration()
*/
/*!\fn void SgUnparse_Info::unset_CheckAccess()
*/
/*!\fn void SgUnparse_Info::unset_PrintName()
*/
/*!\fn void SgUnparse_Info::unset_SkipAtomic()
*/
/*!\fn void SgUnparse_Info::unset_SkipBaseType()
*/
/*!\fn void SgUnparse_Info::unset_SkipBasicBlock()
*/
/*!\fn void SgUnparse_Info::unset_SkipCPPDirectives()
*/
/*!\fn void SgUnparse_Info::unset_SkipClassDefinition()
*/
/*!\fn void SgUnparse_Info::unset_SkipClassSpecifier()
*/
/*!\fn void SgUnparse_Info::unset_SkipComments()
*/
/*!\fn void SgUnparse_Info::unset_SkipConstantFoldedExpressions()
*/
/*!\fn void SgUnparse_Info::unset_SkipDefinition()
*/
/*!\fn void SgUnparse_Info::unset_SkipEnumDefinition()
*/
/*!\fn void SgUnparse_Info::unset_SkipFunctionDefinition()
*/
/*!\fn void SgUnparse_Info::unset_SkipFunctionQualifier()
*/
/*!\fn void SgUnparse_Info::unset_SkipGlobal()
*/
/*!\fn void SgUnparse_Info::unset_SkipInitializer()
*/
/*!\fn void SgUnparse_Info::unset_SkipParen()
*/
/*!\fn void SgUnparse_Info::unset_SkipQualifiedNames()
*/
/*!\fn void SgUnparse_Info::unset_SkipSemiColon()
*/
/*!\fn void SgUnparse_Info::unset_SkipWhitespaces()
*/
/*!\fn void SgUnparse_Info::unset_array_index_list()
*/
/*!\fn void SgUnparse_Info::unset_current_context()
*/
/*!\fn void SgUnparse_Info::unset_decl_stmt()
*/
/*!\fn void SgUnparse_Info::unset_forceQualifiedNames()
*/
/*!\fn void SgUnparse_Info::unset_inAggregateInitializer()
*/
/*!\fn void SgUnparse_Info::unset_inArgList()
*/
/*!\fn void SgUnparse_Info::unset_inConditional()
*/
/*!\fn void SgUnparse_Info::unset_inEmbeddedDecl()
*/
/*!\fn void SgUnparse_Info::unset_inEnumDecl()
*/
/*!\fn void SgUnparse_Info::unset_inRhsExpr()
*/
/*!\fn void SgUnparse_Info::unset_inTemplateList()
*/
/*!\fn void SgUnparse_Info::unset_inVarDecl()
*/
/*!\fn void SgUnparse_Info::unset_isArrayType()
*/
/*!\fn void SgUnparse_Info::unset_isPointerToSomething()
*/
/*!\fn void SgUnparse_Info::unset_isReferenceToSomething()
*/
/*!\fn void SgUnparse_Info::unset_isTypeFirstPart()
*/
/*!\fn void SgUnparse_Info::unset_isTypeSecondPart()
*/
/*!\fn void SgUnparse_Info::unset_isWithType()
*/
/*!\fn void SgUnparse_Info::unset_name()
*/
/*!\fn void SgUnparse_Info::unset_nested_expression()
*/
/*!\fn void SgUnparse_Info::unset_outputClassTemplateName()
*/
/*!\fn void SgUnparse_Info::unset_outputCompilerGeneratedStatements()
*/
/*!\fn void SgUnparse_Info::unset_requiresGlobalNameQualification()
*/
/*!\fn void SgUnparse_Info::unset_skipCheckAccess()
*/
/*!\fn void SgUnparse_Info::unset_useTypeAttributes()
*/
/*!\fn SgDeclarationStatement *SgUnparse_Info::get_decl_stmt()
\description See  *SgUnparse_Info::decl_stmt for documentation */
/*!\fn SgDeclarationStatement *SgUnparse_Info::get_declstatement_ptr() const
\description See  const
declstatement_ptr for documentation */
/*!\fn SgFunctionCallExp *SgUnparse_Info::get_current_function_call() const
\description See  const
current_function_call for documentation */
/*!\fn SgName &SgUnparse_Info::get_name()
\description See  &SgUnparse_Info::name for documentation */
/*!\fn SgName SgUnparse_Info::get_array_index_list()
\description See  SgUnparse_Info::array_index_list for documentation */
/*!\fn SgName SgUnparse_Info::get_array_index_list() const
\description See  const
array_index_list for documentation */
/*!\fn SgNamedType *SgUnparse_Info::get_current_context() const
\description See  const
current_context for documentation */
/*!\fn SgNamespaceDeclarationStatement *SgUnparse_Info::get_current_namespace() const
\description See  const
current_namespace for documentation */
/*!\fn SgQualifiedNamePtrListPtr SgUnparse_Info::get_qualifiedNameList() const
\description See  const
qualifiedNameList for documentation */
/*!\fn SgScopeStatement *SgUnparse_Info::get_current_scope() const
\description See  const
current_scope for documentation */
/*!\fn bool SgUnparse_Info::get_outputCodeGenerationFormatDelimiters() const
\description See  const
outputCodeGenerationFormatDelimiters for documentation */
/*!\fn int SgUnparse_Info::get_access_attribute() const
\description See  const
access_attribute for documentation */
/*!\fn int SgUnparse_Info::get_nested_expression()
\description See  SgUnparse_Info::nested_expression for documentation */
/*!\fn std::string SgUnparse_Info::get_operator_name()
\description See  SgUnparse_Info::operator_name for documentation */
/*!\fn virtual SgNode *SgUnparse_Info::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgUnparse_Info::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgUnparse_Info::get_numberOfTraversalSuccessors()
\description See  SgUnparse_Info::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgUnparse_Info::get_traversalSuccessorContainer()
\description See  SgUnparse_Info::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgUnparse_Info::get_traversalSuccessorNamesContainer()
\description See  SgUnparse_Info::traversalSuccessorNamesContainer for documentation */
/*!\fn virtual SgUnparse_Info::~SgUnparse_Info()
*/
//@}
extern int SAGE_Doxygen_Dummy_1527528163;
