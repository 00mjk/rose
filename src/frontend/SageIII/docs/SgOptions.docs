/* GENERATED FILE - DO NOT MODIFY */
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgOptions
//////////////////////////////////////////////////////////////////////////
/*!
\class SgOptions
\brief This class represents an object used to initialize the unparsing.
    There are no uses of this IR nodes anywhere in the AST.
\internal This is an object used only internally.
\todo Review if we really want to keep this class.
\sa
\ref SgOptions_usage  "Example of using a SgOptions object"
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgOptions data members
/////////////////////////////////////////////////////////////////////////
/*
   There are no data members for this class.
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgOptions member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*!
\fn SgOptions::~SgOptions()
\brief This is the destructor.
   There is nothing to delete in this object.
*/
/*!
\fn SgOptions::isSgOptions (SgNode *s)
\brief Cast function (from derived class to SgOptions pointer).
   This functions returns a SgOptions pointer for any input of a 
pointer to an object derived from a SgOptions.
\return Returns valid pointer to SgOptions if input is derived from a SgLocatedNode.
*/
/*!
\fn SgOptions::isSgOptions (const SgNode *s)
\brief Cast function (from derived class to SgOptions pointer).
   This functions returns a SgOptions pointer for any input of a 
pointer to an object derived from a SgOptions.
\return Returns valid pointer to SgOptions if input is derived from a SgLocatedNode.
*/
/*! \name Class Members*/
//@{
/*!\var int SgOptions::p_debug_level
*/
/*!\var std::ostream *SgOptions::p_debug_output
*/
/*!\var std::ostream *SgOptions::p_default_output
*/
/*!\var std::ostream *SgOptions::p_error_output
*/
/*!\var std::ostream *SgOptions::p_logging_output
*/
/*!\var int SgOptions::p_logging_level
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgOptions::SgOptions(const SgOptionsStorageClass &source)
*/
/*!\fn inline int SgOptions::debug_level()
*/
/*!\fn inline int SgOptions::logging_level()
*/
/*!\fn inline static void SgOptions::operator delete(void *pointer)
*/
/*!\fn inline std::ostream &SgOptions::debug_output()
*/
/*!\fn inline std::ostream &SgOptions::default_output()
*/
/*!\fn inline std::ostream &SgOptions::error_output()
*/
/*!\fn inline std::ostream &SgOptions::logging_output()
*/
/*!\fn static SgOptions *SgOptions::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgOptions::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgOptions::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgOptions::initializeStorageClassArray(SgOptionsStorageClass *storageArray)
*/
/*!\fn static void SgOptions::clearMemoryPool()
*/
/*!\fn static void SgOptions::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgOptions::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgOptions::roseRTI()
*/
/*!\fn virtual SgNode *SgOptions::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgOptions::~SgOptions()
*/
/*!\fn inline void SgOptions::set_debug_level(int l)
\description See  l)
debug_level for documentation */
/*!\fn inline void SgOptions::set_debug_output(std::ostream &os)
\description See  &os)
debug_output for documentation */
/*!\fn inline void SgOptions::set_default_output(std::ostream &os)
\description See  &os)
default_output for documentation */
/*!\fn inline void SgOptions::set_error_output(std::ostream &os)
\description See  &os)
error_output for documentation */
/*!\fn inline void SgOptions::set_logging(std::ostream &log_file,int level)
\description See  level)
logging for documentation */
/*!\fn inline void SgOptions::set_logging_output(std::ostream &os)
\description See  &os)
logging_output for documentation */
/*!\fn virtual SgNode *SgOptions::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgOptions::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgOptions::get_numberOfTraversalSuccessors()
\description See  SgOptions::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgOptions::get_traversalSuccessorContainer()
\description See  SgOptions::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgOptions::get_traversalSuccessorNamesContainer()
\description See  SgOptions::traversalSuccessorNamesContainer for documentation */
/*!
\fn SgOptions::SgOptions()
\brief This is the constructor.
   This constructor builds the SgOptions base class.
\sa 
\ref SgOptions_create "Example:create an SgOptions object"
*/
//@}
int SAGE_Doxygen_Dummy_252601822314891;
