/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgLabelSymbol
*/
/*! \name Class Members*/
//@{
/*!\var SgLabelStatement *SgLabelSymbol::p_declaration
*/
/*!\var SgStatement *SgLabelSymbol::p_fortran_statement
*/
/*!\var int SgLabelSymbol::p_numeric_label_value
*/
/*!\var enum SgLabelSymbol::label_type_enum SgLabelSymbol::p_label_type
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgLabelSymbol::SgLabelSymbol(const SgLabelSymbolStorageClass &source)
*/
/*!\fn inline static void SgLabelSymbol::operator delete(void *pointer)
*/
/*!\fn static SgLabelSymbol *SgLabelSymbol::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgLabelSymbol::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgLabelSymbol::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgLabelSymbol::initializeStorageClassArray(SgLabelSymbolStorageClass *storageArray)
*/
/*!\fn static void SgLabelSymbol::clearMemoryPool()
*/
/*!\fn static void SgLabelSymbol::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgLabelSymbol::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgLabelSymbol::roseRTI()
*/
/*!\fn virtual SgLabelSymbol::~SgLabelSymbol()
*/
/*!\fn virtual SgNode *SgLabelSymbol::copy(SgCopyHelp &help) const
*/
/*!\fn void SgLabelSymbol::set_declaration(SgLabelStatement *declaration)
\brief \brief See  *declaration)
declaration for documentation */
/*!\fn void SgLabelSymbol::set_fortran_statement(SgStatement *fortran_statement)
\brief \brief See  *fortran_statement)
fortran_statement for documentation */
/*!\fn void SgLabelSymbol::set_label_type(enum SgLabelSymbol::label_type_enum label_type)
\brief \brief See  label_type)
label_type for documentation */
/*!\fn void SgLabelSymbol::set_numeric_label_value(int numeric_label_value)
\brief \brief See  numeric_label_value)
numeric_label_value for documentation */
/*!\fn SgLabelStatement *SgLabelSymbol::get_declaration() const
\brief \brief See  const
declaration for documentation */
/*!\fn SgStatement *SgLabelSymbol::get_fortran_statement() const
\brief \brief See  const
fortran_statement for documentation */
/*!\fn enum SgLabelSymbol::label_type_enum SgLabelSymbol::get_label_type() const
\brief \brief See  const
label_type for documentation */
/*!\fn int SgLabelSymbol::get_numeric_label_value() const
\brief \brief See  const
numeric_label_value for documentation */
/*!\fn virtual SgName SgLabelSymbol::get_name() const
\brief \brief See  const
name for documentation */
/*!\fn virtual SgNode *SgLabelSymbol::get_symbol_basis() const
\brief \brief See  const
symbol_basis for documentation */
/*!\fn virtual SgNode *SgLabelSymbol::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual SgType *SgLabelSymbol::get_type() const
\brief \brief See  const
type for documentation */
/*!\fn virtual size_t SgLabelSymbol::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgLabelSymbol::get_numberOfTraversalSuccessors()
\brief \brief See  SgLabelSymbol::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgLabelSymbol::get_traversalSuccessorContainer()
\brief \brief See  SgLabelSymbol::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgLabelSymbol::get_traversalSuccessorNamesContainer()
\brief \brief See  SgLabelSymbol::traversalSuccessorNamesContainer for documentation */
/*!\fn SgLabelSymbol::SgLabelSymbol(SgLabelStatement *declaration=(0))
*/
//@}
extern int SAGE_Doxygen_Dummy_1899425088;
