/* GENERATED FILE - DO NOT MODIFY */
/*! \name Class Members*/
//@{
/*!\var SgType *SgPointerType::p_base_type
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgPointerType::SgPointerType(const SgPointerTypeStorageClass &source)
*/
/*!\fn inline static void SgPointerType::operator delete(void *pointer)
*/
/*!\fn static SgPointerType *SgPointerType::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgPointerType::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgPointerType::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgPointerType::initializeStorageClassArray(SgPointerTypeStorageClass *storageArray)
*/
/*!\fn static void SgPointerType::clearMemoryPool()
*/
/*!\fn static void SgPointerType::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgPointerType::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgPointerType::roseRTI()
*/
/*!\fn virtual SgNode *SgPointerType::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgPointerType::~SgPointerType()
*/
/*!\fn void SgPointerType::set_base_type(SgType *base_type)
\brief \brief See  *base_type)
base_type for documentation */
/*!\fn SgType *SgPointerType::get_base_type() const
\brief \brief See  const
base_type for documentation */
/*!\fn virtual SgNode *SgPointerType::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgPointerType::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgPointerType::get_numberOfTraversalSuccessors()
\brief \brief See  SgPointerType::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgPointerType::get_traversalSuccessorContainer()
\brief \brief See  SgPointerType::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgPointerType::get_traversalSuccessorNamesContainer()
\brief \brief See  SgPointerType::traversalSuccessorNamesContainer for documentation */
/*!\fn SgPointerType::SgPointerType(SgType *base_type=(0))
*/
//@}
extern int SAGE_Doxygen_Dummy_170594847;
