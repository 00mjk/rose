/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgDivideOp
*/
/*! \name User Interface*/
//@{
/*!\fn SgDivideOp::SgDivideOp(Sg_File_Info *startOfConstruct,SgExpression *lhs_operand_i=(0),SgExpression *rhs_operand_i=(0),SgType *expression_type=(0))
*/
/*!\fn SgDivideOp::SgDivideOp(const SgDivideOpStorageClass &source)
*/
/*!\fn inline static void SgDivideOp::operator delete(void *pointer)
*/
/*!\fn static SgDivideOp *SgDivideOp::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgDivideOp::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgDivideOp::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgDivideOp::initializeStorageClassArray(SgDivideOpStorageClass *storageArray)
*/
/*!\fn static void SgDivideOp::clearMemoryPool()
*/
/*!\fn static void SgDivideOp::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgDivideOp::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgDivideOp::roseRTI()
*/
/*!\fn virtual SgDivideOp::~SgDivideOp()
*/
/*!\fn virtual SgNode *SgDivideOp::copy(SgCopyHelp &help) const
*/
/*!\fn virtual inline int SgDivideOp::precedence() const
*/
/*!\fn virtual void SgDivideOp::post_construction_initialization()
*/
/*!\fn virtual SgNode *SgDivideOp::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgDivideOp::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgDivideOp::get_numberOfTraversalSuccessors()
\description See  SgDivideOp::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgDivideOp::get_traversalSuccessorContainer()
\description See  SgDivideOp::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgDivideOp::get_traversalSuccessorNamesContainer()
\description See  SgDivideOp::traversalSuccessorNamesContainer for documentation */
/*!\fn SgDivideOp::SgDivideOp(SgExpression *lhs_operand_i,SgExpression *rhs_operand_i,SgType *expression_type)
*/
//@}
extern int SAGE_Doxygen_Dummy_1127719588;
