/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgAccessModifier
*/
/*! \name Class Members*/
//@{
/*!\var enum SgAccessModifier::access_modifier_enum SgAccessModifier::p_modifier
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgAccessModifier &SgAccessModifier::operator=(const SgAccessModifier &X)
*/
/*!\fn SgAccessModifier::SgAccessModifier(const SgAccessModifier &X)
*/
/*!\fn SgAccessModifier::SgAccessModifier(const SgAccessModifierStorageClass &source)
*/
/*!\fn bool SgAccessModifier::isDefault() const
*/
/*!\fn bool SgAccessModifier::isPrivate() const
*/
/*!\fn bool SgAccessModifier::isProtected() const
*/
/*!\fn bool SgAccessModifier::isPublic() const
*/
/*!\fn bool SgAccessModifier::isUndefined() const
*/
/*!\fn bool SgAccessModifier::isUnknown() const
*/
/*!\fn inline static void SgAccessModifier::operator delete(void *pointer)
*/
/*!\fn static SgAccessModifier *SgAccessModifier::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgAccessModifier::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgAccessModifier::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgAccessModifier::initializeStorageClassArray(SgAccessModifierStorageClass *storageArray)
*/
/*!\fn static void SgAccessModifier::clearMemoryPool()
*/
/*!\fn static void SgAccessModifier::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgAccessModifier::resetValidFreepointers()
*/
/*!\fn std::string SgAccessModifier::displayString() const
*/
/*!\fn virtual RTIReturnType SgAccessModifier::roseRTI()
*/
/*!\fn virtual SgAccessModifier::~SgAccessModifier()
*/
/*!\fn virtual SgNode *SgAccessModifier::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgAccessModifier::post_construction_initialization()
*/
/*!\fn void SgAccessModifier::display(std::string label) const
*/
/*!\fn void SgAccessModifier::reset()
*/
/*!\fn void SgAccessModifier::setDefault()
*/
/*!\fn void SgAccessModifier::setPrivate()
*/
/*!\fn void SgAccessModifier::setProtected()
*/
/*!\fn void SgAccessModifier::setPublic()
*/
/*!\fn void SgAccessModifier::setUndefined()
*/
/*!\fn void SgAccessModifier::setUnknown()
*/
/*!\fn void SgAccessModifier::set_modifier(enum SgAccessModifier::access_modifier_enum modifier)
\brief \brief See  modifier)
modifier for documentation */
/*!\fn enum SgAccessModifier::access_modifier_enum SgAccessModifier::get_modifier() const
\brief \brief See  const
modifier for documentation */
/*!\fn virtual SgNode *SgAccessModifier::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgAccessModifier::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgAccessModifier::get_numberOfTraversalSuccessors()
\brief \brief See  SgAccessModifier::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgAccessModifier::get_traversalSuccessorContainer()
\brief \brief See  SgAccessModifier::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgAccessModifier::get_traversalSuccessorNamesContainer()
\brief \brief See  SgAccessModifier::traversalSuccessorNamesContainer for documentation */
/*!\fn SgAccessModifier::SgAccessModifier()
*/
//@}
extern int SAGE_Doxygen_Dummy_766775648;
