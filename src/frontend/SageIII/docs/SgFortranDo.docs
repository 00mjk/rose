/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgFortranDo
*/
/*! \name Class Members*/
//@{
/*!\var SgBasicBlock *SgFortranDo::p_body
*/
/*!\var SgExpression *SgFortranDo::p_bound
*/
/*!\var SgExpression *SgFortranDo::p_increment
*/
/*!\var SgExpression *SgFortranDo::p_initialization
*/
/*!\var SgLabelRefExp *SgFortranDo::p_end_numeric_label
*/
/*!\var bool SgFortranDo::p_old_style
*/
/*!\var std::string SgFortranDo::p_string_label
*/
/*!\var bool SgFortranDo::p_has_end_statement
*/
//@}
/*! \name User Interface*/
//@{
/*!\fn SgFortranDo::SgFortranDo(Sg_File_Info *startOfConstruct,SgExpression *initialization=(0),SgExpression *bound=(0),SgExpression *increment=(0),SgBasicBlock *body=(0))
*/
/*!\fn SgFortranDo::SgFortranDo(const SgFortranDoStorageClass &source)
*/
/*!\fn inline static void SgFortranDo::operator delete(void *pointer)
*/
/*!\fn static SgFortranDo *SgFortranDo::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgFortranDo::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgFortranDo::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgFortranDo::initializeStorageClassArray(SgFortranDoStorageClass *storageArray)
*/
/*!\fn static void SgFortranDo::clearMemoryPool()
*/
/*!\fn static void SgFortranDo::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgFortranDo::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgFortranDo::roseRTI()
*/
/*!\fn virtual SgFortranDo::~SgFortranDo()
*/
/*!\fn virtual SgNode *SgFortranDo::copy(SgCopyHelp &help) const
*/
/*!\fn virtual bool SgFortranDo::cfgIsIndexInteresting(unsigned int ) const
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgFortranDo::cfgInEdges(unsigned int index)
*/
/*!\fn virtual std::vector< VirtualCFG::CFGEdge  , std::allocator< VirtualCFG::CFGEdge  >  > SgFortranDo::cfgOutEdges(unsigned int index)
*/
/*!\fn virtual unsigned int SgFortranDo::cfgFindChildIndex(SgNode *n)
*/
/*!\fn virtual unsigned int SgFortranDo::cfgFindNextChildIndex(SgNode *n)
*/
/*!\fn virtual unsigned int SgFortranDo::cfgIndexForEnd() const
*/
/*!\fn virtual void SgFortranDo::post_construction_initialization()
*/
/*!\fn virtual void SgFortranDo::set_end_numeric_label(SgLabelRefExp *end_numeric_label)
\brief \brief See  *end_numeric_label)
end_numeric_label for documentation */
/*!\fn void SgFortranDo::set_body(SgBasicBlock *body)
\brief \brief See  *body)
body for documentation */
/*!\fn void SgFortranDo::set_bound(SgExpression *bound)
\brief \brief See  *bound)
bound for documentation */
/*!\fn void SgFortranDo::set_has_end_statement(bool has_end_statement)
\brief \brief See  has_end_statement)
has_end_statement for documentation */
/*!\fn void SgFortranDo::set_increment(SgExpression *increment)
\brief \brief See  *increment)
increment for documentation */
/*!\fn void SgFortranDo::set_initialization(SgExpression *initialization)
\brief \brief See  *initialization)
initialization for documentation */
/*!\fn void SgFortranDo::set_old_style(bool old_style)
\brief \brief See  old_style)
old_style for documentation */
/*!\fn void SgFortranDo::set_string_label(std::string string_label)
\brief \brief See  string_label)
string_label for documentation */
/*!\fn SgBasicBlock *SgFortranDo::get_body() const
\brief \brief See  const
body for documentation */
/*!\fn SgExpression *SgFortranDo::get_bound() const
\brief \brief See  const
bound for documentation */
/*!\fn SgExpression *SgFortranDo::get_increment() const
\brief \brief See  const
increment for documentation */
/*!\fn SgExpression *SgFortranDo::get_initialization() const
\brief \brief See  const
initialization for documentation */
/*!\fn SgLabelRefExp *SgFortranDo::get_end_numeric_label() const
\brief \brief See  const
end_numeric_label for documentation */
/*!\fn bool SgFortranDo::get_has_end_statement() const
\brief \brief See  const
has_end_statement for documentation */
/*!\fn bool SgFortranDo::get_old_style() const
\brief \brief See  const
old_style for documentation */
/*!\fn std::string SgFortranDo::get_string_label() const
\brief \brief See  const
string_label for documentation */
/*!\fn virtual SgNode *SgFortranDo::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgFortranDo::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgFortranDo::get_numberOfTraversalSuccessors()
\brief \brief See  SgFortranDo::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgFortranDo::get_traversalSuccessorContainer()
\brief \brief See  SgFortranDo::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgFortranDo::get_traversalSuccessorNamesContainer()
\brief \brief See  SgFortranDo::traversalSuccessorNamesContainer for documentation */
/*!\fn SgFortranDo::SgFortranDo(SgExpression *initialization,SgExpression *bound,SgExpression *increment,SgBasicBlock *body)
*/
//@}
extern int SAGE_Doxygen_Dummy_1953414567;
