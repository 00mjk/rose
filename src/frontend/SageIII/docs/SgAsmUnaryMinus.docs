/* GENERATED FILE - DO NOT MODIFY */
/*!\class SgAsmUnaryMinus
*/
/*! \name User Interface*/
//@{
/*!\fn SgAsmUnaryMinus::SgAsmUnaryMinus(const SgAsmUnaryMinusStorageClass &source)
*/
/*!\fn inline static void SgAsmUnaryMinus::operator delete(void *pointer)
*/
/*!\fn static SgAsmUnaryMinus *SgAsmUnaryMinus::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgAsmUnaryMinus::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgAsmUnaryMinus::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgAsmUnaryMinus::initializeStorageClassArray(SgAsmUnaryMinusStorageClass *storageArray)
*/
/*!\fn static void SgAsmUnaryMinus::clearMemoryPool()
*/
/*!\fn static void SgAsmUnaryMinus::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgAsmUnaryMinus::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgAsmUnaryMinus::roseRTI()
*/
/*!\fn virtual SgAsmUnaryMinus::~SgAsmUnaryMinus()
*/
/*!\fn virtual SgNode *SgAsmUnaryMinus::copy(SgCopyHelp &help) const
*/
/*!\fn virtual SgNode *SgAsmUnaryMinus::get_traversalSuccessorByIndex(size_t idx)
\brief \brief See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual size_t SgAsmUnaryMinus::get_childIndex(SgNode *child)
\brief \brief See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgAsmUnaryMinus::get_numberOfTraversalSuccessors()
\brief \brief See  SgAsmUnaryMinus::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgAsmUnaryMinus::get_traversalSuccessorContainer()
\brief \brief See  SgAsmUnaryMinus::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgAsmUnaryMinus::get_traversalSuccessorNamesContainer()
\brief \brief See  SgAsmUnaryMinus::traversalSuccessorNamesContainer for documentation */
/*!\fn SgAsmUnaryMinus::SgAsmUnaryMinus()
*/
//@}
extern int SAGE_Doxygen_Dummy_2015478536;
