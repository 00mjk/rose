/* GENERATED FILE - DO NOT MODIFY */
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgBoolValExp
//////////////////////////////////////////////////////////////////////////
/*!
\class SgBoolValExp
\brief This class represents a boolean value (expression value).
\internal This is a base class for all value expressions.
\todo The name "SgBoolValExp" should be "SgBoolVal" to be consistant with the names of all
    other classes derived from SgValueExp.
\sa
\ref SgBoolValExp_usage  "Example of using a SgBoolValExp object"
*/
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgBoolValExp data members
/////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
// Documentation for class SgBoolValExp member functions (methods)
/////////////////////////////////////////////////////////////////////////
/*!
\fn SgBoolValExp::~SgBoolValExp()
\brief This is the destructor.
   Only the Sg_File_Info object can be deleted in this object.
*/
/*! \name Class Members*/
//@{
/*!
\var int SgBoolValExp::p_value
\brief This boolean variable marks the current expression as a 
left hand side value (lvalue).
*/
//@}
/*! \name User Interface*/
//@{
/*!
\fn SgBoolValExp::SgBoolValExp(Sg_File_Info *startOfConstruct,int value=0)
\brief This is the constructor.
   This constructor builds the SgBoolValExp base class.
\param startOfConstruct represents the position in the source code
\sa 
\ref SgBoolValExp_create "Example:create an SgBoolValExp object"
*/
/*!\fn SgBoolValExp::SgBoolValExp(const SgBoolValExpStorageClass &source)
*/
/*!\fn inline static void SgBoolValExp::operator delete(void *pointer)
*/
/*!\fn static SgBoolValExp *SgBoolValExp::getPointerFromGlobalIndex(AstSpecificDataManagingClass *astInPool,unsigned long globalIndex)
*/
/*!\fn static unsigned long SgBoolValExp::getNumberOfLastValidPointer()
*/
/*!\fn static unsigned long SgBoolValExp::getNumberOfValidNodesAndSetGlobalIndexInFreepointer(unsigned long )
*/
/*!\fn static unsigned long SgBoolValExp::initializeStorageClassArray(SgBoolValExpStorageClass *storageArray)
*/
/*!\fn static void SgBoolValExp::clearMemoryPool()
*/
/*!\fn static void SgBoolValExp::extendMemoryPoolForFileIO()
*/
/*!\fn static void SgBoolValExp::resetValidFreepointers()
*/
/*!\fn virtual RTIReturnType SgBoolValExp::roseRTI()
*/
/*!\fn virtual SgBoolValExp::~SgBoolValExp()
*/
/*!\fn virtual SgNode *SgBoolValExp::copy(SgCopyHelp &help) const
*/
/*!\fn virtual void SgBoolValExp::post_construction_initialization()
*/
/*!\fn void SgBoolValExp::set_value(int value)
\description See  value)
value for documentation */
/*!\fn int SgBoolValExp::get_value() const
\description See  const
value for documentation */
/*!\fn virtual SgNode *SgBoolValExp::get_traversalSuccessorByIndex(size_t idx)
\description See  idx)
traversalSuccessorByIndex for documentation */
/*!\fn virtual SgType *SgBoolValExp::get_type() const
\description See  const
type for documentation */
/*!\fn virtual size_t SgBoolValExp::get_childIndex(SgNode *child)
\description See  *child)
childIndex for documentation */
/*!\fn virtual size_t SgBoolValExp::get_numberOfTraversalSuccessors()
\description See  SgBoolValExp::numberOfTraversalSuccessors for documentation */
/*!\fn virtual std::vector< SgNode * , std::allocator< SgNode * >  > SgBoolValExp::get_traversalSuccessorContainer()
\description See  SgBoolValExp::traversalSuccessorContainer for documentation */
/*!\fn virtual std::vector< std::string  , std::allocator< std::string  >  > SgBoolValExp::get_traversalSuccessorNamesContainer()
\description See  SgBoolValExp::traversalSuccessorNamesContainer for documentation */
/*!\fn SgBoolValExp::SgBoolValExp(int value)
*/
//@}
int SAGE_Doxygen_Dummy_20811627111060;
