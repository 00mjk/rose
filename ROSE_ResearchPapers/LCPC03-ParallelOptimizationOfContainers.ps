%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: lcpc03.dvi
%%Pages: 15
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips lcpc03.dvi -o lcpc03.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.07.08:2009
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (lcpc03.dvi)
@start
%DVIPSBitmapFont: Fa cmmi9 9 20
/Fa 20 122 df<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C
121C5A5A126009177A8715>59 D<010FB712FCA218F8903A003FC00007170018785D1838
147F183092C8FCA25CA25C16060101020E1370040C13604A1500A20103141C5E5C16F849
B5FCA25EECF001010F130016605CA2011F14E05E5CA2013F91C8FCA25CA2137FA291CAFC
A25BA25B487EB6FCA336337DB231>70 D<03FF13180207EBE038021FEBF87891397F00FC
F802FCEB1FF0D901F0130F4948130749481303494814E0A249C71201A2013E15C0A3137E
1780A2017F91C7FC8080EB3FF014FF15F06D13FE6D6D7E6D806D80010080020F7F140015
0F6F7E150315011500A2120CA2001C5D1218A2150100385D003C14035E4B5A007E4A5A00
7F141F6D49C7FCD87BE0137C39F9FC03F839F07FFFE0D8E01F138026C003FEC8FC2D377C
B42F>83 D<B500F0903801FFFCA3D803FEC8EA3F8049ED1E00171C5F0001163017701760
5FA24C5A6D4AC7FC120016065EA25E16386D14305E6D14E05E4B5AA24BC8FCEC8006A201
3F5B5DA25D1570ECC0605DEB1FC15D02C3C9FCA214C614ECA2EB0FF8A25C5CA25C5C1307
91CAFC130636357CB22D>86 D<EB01F8EB07FE90381F071C90387C03FEEBF801EA01F000
03130048485B5B120F381F80015DEA3F00A21403485C127EA2140700FE5C5A1640020F13
60EDC0E016C0127CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7C300390F0787C7
3907FE03FE3900F800F823227EA029>97 D<133FEA1FFFA25B1200A35BA21201A25BA212
03A25BA21207A2EBE0F8EBE3FF390FEF07809038FC03C001F813E0EBF001D81FE013F013
C0138015F8123FA21300A248130315F0127EA2140700FE14E05AA2EC0FC0A2EC1F80007C
14005C147E003C137C003E5B381E01F0380F07C06CB4C7FCEA00FC1D357EB321>I<147F
903803FFC090380FC0F090383F0038137C4913F83801F0013803E0031207EA0FC0903880
01F0001F90C7FC123F90C8FCA25A127EA45AA3127C150C151C15386C147015E06CEB03C0
390F800F003807C07E3801FFF038007F801E227EA021>I<ED01F815FFA216F01507A316
E0A2150FA216C0A2151FA21680A2153FA2D901F81300EB07FE90381F077F90387C03FF49
6C5AEA01F000031300485A495B120F381F8001A2D83F005BA214035A007E5CA2140712FE
485C1640020F136016E0EDC0C0127CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7
C300390F0787C73907FE03FE3900F800F825357EB328>I<14FE903807FF8090381F03C0
90387C01E03801F800485A485A485A485A1401D83F0013C01403007EEB0F80ECFE00387F
FFF8B5128000FCC8FCA45AA415186C1438007C147015E0003CEB01C0003EEB07806CEB1E
00380F80FC3803FFE0C690C7FC1D227DA024>I<ED0F80ED3FE0ED7870913801F0F815E3
1403A2020713F0A291380FC1C0EDC000A4141F5DA4143F92C7FC011FB512805B1600D900
7FC7FC147EA414FE5CA513015CA413035CA413075CA4130F5CA45C131FA291C8FC121CEA
7F1E133EA2EAFE3C5B1278EA70F0EA3FC0EA0F8025457CB425>I<EB07E0EA03FFA25CEA
001FA35CA3133F91C8FCA35B137EA313FE9038FC0FE0EC3FF8ECF07E3901FFC03FEC001F
5B49148012035B5B153F000715005BA25D000F147E5B15FE5D121FEB8001EDF808161C00
3F01031318010013F01638020713304814E0007E1570020313E0EDE1C000FE903801E380
48903800FF000038143C26357DB32C>104 D<EB1F80EA07FF5A1400C67EA3137EA213FE
A25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25A
A2127E1304EAFE0E130C12FCA2131C131812F81338EA7C701360EA3FE0EA0F8011357DB3
17>108 D<D801E001FEEB07F03C07F803FF801FFC3C0E3E0F07E0783F001C903B3C03F1
E01F803C181F7001F3800F003801E0EBF70026303FC001FE14C01270006001805B02005B
0303141FD8E07F4A1480EA407E12000307143F01FE1700495C60030F147E1201494A13FE
F0FC04031F150E00030401130C49028013F8191C033F01031318000717F0490200143805
0113704B15E0000F933800F1C049017EEC7F80D80380011CEC1E003F227EA044>I<147F
903803FFC090380FC1F090383F00F8017C137C497F485A48487F1207485A5B001F158012
3F90C7FCED3F005A127EA25D157E5A15FE5D007C5C14014A5A5D6C495A4A5A6C49C7FC38
0F807E3807C1F83801FFE06C6CC8FC21227EA025>111 D<011F131F90397FC07FE09039
E3E1E0F09039C3E380783A01C1F7007CD981FE133CD983FC133E00035BEB03F0163FEA07
07120600025B1200010F147F167E5CA2011F14FE16FC5CA2013FEB01F8A291380003F016
E0491307ED0FC002801380ED1F009038FFC03E9038FEE0F89038FC7FE0EC1F80000190C8
FCA25BA21203A25BA21207A25BB57EA3283083A027>I<3903E003E0390FF81FF8391C7C
3C1C0018EB703E39383EE0FE38303FC0EB7F800070EB00FCEA607E157000E01400EAC0FE
EA40FC1200A212015BA312035BA312075BA3120F5BA3121F5B0007C8FC1F227EA023>
114 D<EB01FCEB0FFF90383E03C090387800E04913603901E001E014030003130713C013
E0EC03806DC7FC13FF14F014FC6C7F6C7F6D1380130F9038007FC0141F140F007E130700
FE1480A3EC0F005A00C0131E6C5B00705B383C01F0380FFFC0D803FEC7FC1B227CA024>
I<13F8D803FEEB01C0D8070FEB03E0000EEB8007121C001813C00038140FEA301F007001
8013C01260013F131F00E0130000401580C65A017E133F13FE491400A25D120149137E16
02EDFE0716064913FCA2160E0201130C9039F803F81C1618000090380F7C38D97C1C1370
90393FF81FE0903907E0078028227EA02C>117 D<01F0130ED803FC131FD8071EEB3F80
EA0E1F121C0038EB801F0030140F013F130700701300006014035BD8E07E14001240EA00
FE495B000114065BA2150E0003140C5B151C15181538491330157015606D13E04A5A0001
495A6D48C7FC3800FC1EEB3FF8EB07E021227EA025>I<13F0D803FCEB01C0D8071EEB03
E0D80E1F1307121C003813800030140F013F14C000701300126049131FD8E07E14801240
EA00FE49133F000115005BA25D0003147E5BA215FE5D5BA214015DEBF00314070001130F
3900F83FF0EB3FFBEB0FC3EB00075DA20007130FD81F805B003F495AA24AC7FCEB007E00
3E137C00385B381803F0381E07C0D807FFC8FCEA01F823317EA026>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 10 2
/Fb 2 57 df<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8FCEA01F848
5A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00F0C9FCA27E
A21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512FE010314FF
1300021F13FE283279AD37>50 D<0060161800F0163C6C167CA200781678007C16F8A200
3C16F0003E1501A26CED03E0A26C16C06D1407A2000716806D140FA26C6CEC1F00A26CB6
12FEA36C5D01F8C7127CA2017C5CA2013C5C013E1301A2011E5C011F1303A26D6C485AA2
01075CECC00FA2010391C7FC6E5AA2903801F03EA20100133CECF87CA2EC7878EC7CF8A2
EC3FF0A26E5AA36E5AA36E5A6EC8FC2E3C80B92F>56 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmtt10 10 36
/Fc 36 122 df<EB0FF890387FFF8048B512E00007804814FC391FF80FFE393FE001FF90
3880007F48C7EA3F80007E141F00FE15C0150F6C15E01507A3127E123CC8FCA2150F16C0
151F1680153F16005D15FE4A5A14034A5A4A5A4A5A4A5AECFF804948C7FC495A495A495A
EB3FE0EB7F8049C8FC485A4848EB03C04848EB07E0EA1FE0485A48B6FCB7FCA36C15C023
347CB32C>50 D<14FE497EA4497FA214EFA2130781A214C7A2010F7FA314C390381F83F0
A590383F01F8A490387E00FCA549137E90B512FEA34880A29038F8003FA34848EB1F80A4
000715C049130FD87FFEEBFFFC6D5AB514FE6C15FC497E27347EB32C>65
D<02FF13700107EBE0F84913F9013F13FD4913FFEBFF813901FE007F4848131FD807F013
0F1507485A491303485A150148C7FCA25A007EEC00F01600A212FE5AAB7E127EA3007F15
F06CEC01F8A26C7EA26C6C13036D14F06C6C130716E0D803FC131F6C6CEB3FC03A00FF81
FF806DB512006D5B010F5B6D13F00100138025357DB32C>67 D<007FB5FCB612C015F081
6C803907E003FEEC00FFED7F80153FED1FC0ED0FE0A2150716F0150316F81501A4ED00FC
ACED01F8A3150316F0A2150716E0150FED1FC0153FED7F80EDFF00EC03FE007FB55AB65A
5D15C06C91C7FC26337EB22C>I<007FB612F8B712FCA37ED803F0C7FCA716781600A515
F04A7EA490B5FCA5EBF001A46E5A92C7FCAD387FFFE0B5FC805C7E26337EB22C>70
D<007FB512F8B612FCA36C14F839000FC000B3B3A5007FB512F8B612FCA36C14F81E3379
B22C>73 D<387FFFE0B57EA36C5BD803F0C8FCB3AE16F0ED01F8A8007FB6FCB7FCA36C15
F025337DB22C>76 D<D87FF0EB7FFC486CEBFFFEA27F007FEC7FFCD807FEEB07C013DEA2
13DF13CFA2148013C714C0A213C314E0A213C114F0A213C014F8A2147CA3143EA2141E14
1FA2140F1587A2140715C7A2140315E71401A215F71400A215FFD87FFC137F487E153FA2
6C48EB1F8027337EB22C>78 D<EB7FFF0003B512E0000F14F848804880EBE003EB800048
C7127FA2007E80A300FE158048141FB3A86C143FA2007E1500A3007F5CA26C6C13FEEBF0
0790B5FC6C5C6C5C000314E0C66C90C7FC21357BB32C>I<007FB512C0B612F88115FF6C
15802603F00013C0153FED0FE0ED07F0A2150316F81501A6150316F01507A2ED0FE0ED3F
C015FF90B61280160015FC5D15C001F0C8FCB0387FFF80B57EA36C5B25337EB22C>I<EB
7FFF0003B512E0000F14F848804880EBF007EB800048C7127FA2007E80A300FE15804814
1FB3A7EB01F0EB03F800FE143F267E01FC1300A2EB00FE007F5C147FD83F8013FEEBF03F
90B5FC6C5C6C5C000314E0C67E90380007F0A26E7EA26E7EA26E7EA2157FA2153E21407B
B32C>I<90381FF80790B5EA0F804814CF000714FF5A381FF01F383FC003497E48C7FC00
7E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0EA1FFCEBFFC06C13FC00
03EBFFC06C14F06C6C7F01077F9038007FFEEC07FF02001380153FED1FC0A2ED0FE0A200
78140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE01FF90B55A5D00F914F0
D8F83F13C0D8700790C7FC23357CB32C>83 D<007FB612FCB712FEA43AFC007E007EA700
78153CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C>I<3B7FFF803FFFC0B56C48
13E0A36C496C13C03B03F00001F800B3AF6D130300015DA26D130700005D6D130F017F49
5A6D6C485AECE0FF6DB5C7FC6D5B010313F86D5B9038003F802B3480B22C>I<3801FFF0
000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8127EA3ECFF
FE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003
383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>97
D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138801F
E091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036D
EB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027337F
B22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E4848
131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE
03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7EA380EC003F
AAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC007E
80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE
6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E4880
3907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075AB7FC
A416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13
FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0FF8EC3FFE91
B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26
000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<ED03F8903907F80FFC90391F
FE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C0001300
001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7
FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001FF848
C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83FE0EB
0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C>I<13
07EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB5
12FCB612FEA36C14FC1F3479B32C>105 D<EA7FE0487EA3127F1201AA91381FFFF04A13
F8A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE90
B5FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A7FFFC0FF
FCB500E113FEA36C01C013FC27337EB22C>107 D<387FFFE0B57EA37EEA0003B3B3A500
7FB61280B712C0A36C158022337BB22C>I<3A7F83F007E09039CFFC1FF83AFFDFFE3FFC
D87FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C01380
B33B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C>I<39
7FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F
5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB07FCEB1FFF01
7F13C048B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7121F00
7EEC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C
6C485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C>I<397FF01F
E039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049EB03
F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801F
E09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27
367FA32C>I<903903FC078090391FFF0FC0017F13CF48B512EF4814FF3807FE07380FF0
0148487E49137F4848133F90C7FC48141F127E150F5AA87E007E141FA26C143F7F6C6C13
7F6D13FF380FF0033807FC0F6CB6FC6C14EF6C6C138F6D130FEB07F890C7FCAD0203B5FC
4A1480A36E140029367DA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39
003F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C
5C26247EA32C>I<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36C
EB00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC
00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000
F8148039701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FC
B1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0
232E7EAD2C>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F
3900FE03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C>I<3A7FFF01FFFCB5
14FE148314016C15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C
137CA2017E13FC013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA2
14FF6D90C7FCA26D5A147C27247EA32C>I<D87FFFEB7FFF6EB5FCB515806C16004A7ED8
07C0EB01F0A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D90
38F9E3CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA3
2C>I<3A7FFF01FFFCB5008113FE148314816C010113FC3A03E0000F806C7E151F6D1400
12005D6D133E137C017E137E013E137CA2013F13FC6D5BA2EB0F815DA2EB07C1ECC3E0A2
EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2143EA2147E147CA214FC5CA2EA0C0100
3F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C5AEA07E027367EA32C>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi10 10 11
/Fd 11 119 df<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A12
06120E5A5A5A12600A19798817>59 D<92391FE00380DBFFFC130002036D5A91390FE01F
8F91393F0007DF027EEB01FE02F81300495A4948147E177C4948143C495AA2011F153891
C8FCA3491530A28094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F
7F02037FEC003F03037F1500167F163F161FA3120C160FA2001C151F94C7FCA3003C153E
A25E003E5D127E007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF801
0F13E0D8C00190C9FC313D7CBA33>83 D<147E903803FF8090390FC1C38090391F00EFC0
017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F147E90C7FC
A215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F1330003E13
1F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA42C>97
D<EC3FC0903801FFF0903807E03C90380F800E90383F0007017E131F49137F484813FF48
5A485A120F4913FE001F143848481300A2127F90C8FCA35A5AA45AA315031507007E1406
150E003E143C003F14706C14E0390F8007C03907C03F003801FFF838003FC020267DA424
>99 D<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A485A120748
5A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5AA700
7E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF838003FC0
20267DA427>101 D<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C
4A48C7FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8
FCA45C147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC
131E12FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>I<90390F8003F090391FE00FFC90
3939F03C1F903A70F8700F80903AE0FDE007C09038C0FF80030013E00001491303018015
F05CEA038113015CA2D800031407A25CA20107140FA24A14E0A2010F141F17C05CEE3F80
131FEE7F004A137E16FE013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC90387E1F
FCEC07E001FEC9FCA25BA21201A25BA21203A25B1207B512C0A32C3583A42A>112
D<3903E001F83907F807FE390E3C1E07391C3E381F3A183F703F800038EBE07F0030EBC0
FF00705B00601500EC007E153CD8E07F90C7FCEAC07EA2120013FE5BA312015BA312035B
A312075BA3120F5BA3121F5B0007C9FC21267EA425>114 D<14FF010313C090380F80F0
90383E00380178131C153C4913FC0001130113E0A33903F000F06D13007F3801FFE014FC
14FF6C14806D13C0011F13E013039038003FF014071403001E1301127FA24814E0A348EB
03C012F800E0EB07800070EB0F006C133E001E13F83807FFE0000190C7FC1E267CA427>
I<13F8D803FE1438D8070F147C000E6D13FC121C1218003814011230D8701F5C12601503
EAE03F00C001005B5BD8007E1307A201FE5C5B150F1201495CA2151F120349EC80C0A215
3F1681EE0180A2ED7F0303FF130012014A5B3A00F8079F0E90397C0E0F1C90393FFC07F8
903907F001F02A267EA430>117 D<01F8EB03C0D803FEEB07E0D8070F130F000E018013
F0121C12180038140700301403D8701F130112601500D8E03F14E000C090C7FC5BEA007E
16C013FE5B1501000115805B150316001203495B1506150E150C151C151815385D00015C
6D485A6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx10 10 34
/Fe 34 124 df<913803FFC0027F13F00103B512FC010FEB00FED93FF8133FD97FE0EBFF
8049485A5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFFC0B8FCA4000390
C7FCB3ABB5D8FC3F13FFA4303A7EB935>12 D<B61280A819087F9620>45
D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>I<141E143E
14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779B630>49
D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F000313C05AD9
C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216E05C16C04A13
8016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A495A495A013EC7
12F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630>I<EB03FF011F
13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF001FC14F0121F7F
A56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380FFFC092C7FC15F090
380007FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1FC0487E487E487EA4
16FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713806CB61200000114
FC6C6C13F0010790C7FC27387CB630>I<B812C017FC17FF18C028007FF000037F04007F
717E717E171F84A2717EA74D5AA260173F4D5A4D5A4C13C0040F5B91B600FCC7FCA2EFFF
8002F0C713F0EF3FF8717E717E717E19807113C0A319E0A719C0A25F4D138019005FEF7F
FE4C485AB912F018C095C7FC17F03B397DB844>66 D<DB3FFCEB01C00203B5EAC003021F
ECF00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF08049
4880485B48177F4849153F4890C9FC181F485A180F123F5B1807127FA24993C7FC12FFAD
127F7FF003C0123FA27F001F1707A26C6C1780180F6C6D16006C6D5D6C173E6C6D157ED9
7FF85D6D6C4A5A6DB44A5A010701C0EB0FE06D01FCEBFF80010090B548C7FC021F14F802
0314E09126003FFEC8FC3A3B7BB945>I<B87E17F817FF18C028007FF8000713F0933800
7FF8EF1FFE717E050313807113C0A27113E0F07FF0A2F03FF8A219FC181FA219FEA419FF
AC19FEA419FC183FA219F8187F19F0F0FFE0A24D13C04D13804D1300EF1FFEEF7FFC9338
07FFF0B912C095C7FC17FC178040397DB849>I<B912C0A43A007FF800039338007FE017
1F170F1707A21703A21701A318F0EE7800A41800A216F8A21501150791B5FCA4ECF80715
011500A21678A693C8FCADB7FCA434397DB83C>70 D<B500F80403B512F06E5EA26E5ED8
007FF1E000A2D97BFF161EA201796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA2
6E6C4A5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485A
A26F6C485AA26F6C48C7FCA2923803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500
FC6D4848B612F0A2EE0F80EE070054397DB85B>77 D<EDFFF8020FEBFF80027F14F0903A
01FFC01FFC010790380007FFD91FFC010113C0D93FF06D6C7E49486E7E49486E7E48496E
7E48834890C86C7EA248486F1380A248486F13C0A2003F18E0A348486F13F0A400FF18F8
AC007F18F06D5DA3003F18E0A26D5D001F18C0A26C6C4B13806C18006E5C6C6D4A5A6C5F
6C6D4A5A6D6C4A5AD93FFC49485A6DB401075B0107D9C01F90C7FC010190B512FC6D6C14
F0020F1480020001F8C8FC3D3B7BB948>79 D<B8FC17F017FEEFFF8028007FF8000F13C0
040113E07013F0EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13
E0040F13C091B7120017FC17E002F8C9FCB3A4B612FCA438397DB841>I<D907FF130E01
3FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301
007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE
6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC007F030F13C015038181
00F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01F813039039FF801FF800
FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>83
D<003FB91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2007C1707A200
781703A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>I<B600FC011FB5
12C0A426007FF8C8381FC000725AB3B3181F013F94C7FC8060011F163E6D6C157E187C6D
6C15FC6D6D495A6D6DEB07F06D01F0EB1FE0DA7FFEEBFFC0021FB6C8FC02075C020014F0
030F1380423A7DB849>I<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F
6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380F
FE00EA3FF85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F
0003EBF80F39003FE0032A257DA42E>97 D<903801FFC0010F13FC017F13FFD9FF801380
2603FE0013C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127F
A27F123FED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13
F00101138023257DA42A>99 D<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13
FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F
123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313
012F3A7DB935>I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F
484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127F
A36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F
13FC010113E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FF
D9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512
FEA4223A7DB91D>I<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127F
A412077EB3A9B512F8A4153B7DBA1B>105 D<13FFB5FCA412077EAF92380FFFE0A49238
03FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07E04A5A141FEC7FE04A7E8181A2EC
CFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E82150F82B5D8F83F13F8A42D3A7EB932
>107 D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>I<01FED97FE0EB0FFC00FF90
2601FFFC90383FFF80020701FF90B512E0DA1F81903983F03FF0DA3C00903887801F0007
49DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B5
12F0A44C257DA451>I<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C011380
000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<90
3801FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA200
3F81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C49
5A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>I<9039FF01FF80
B5000F13F0023F13FC9138FE07FFDAF00113800007496C13C06C0180EB7FE091C713F0EE
3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEBFFC0DAF00313
809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F357EA435>I<
9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F80
ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>114 D<90383FF0383903FFFEF8
000F13FF381FC00F383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C13
FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE140700F0130114007E157E
7E157C6C14FC6C14F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>I<
130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F0
14816CEBC3E090383FFFC06D1380903803FE001D357EB425>I<B539F001FFF8A4000390
C7EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495A
A2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA2
6E5AA26E5AA292C8FCA25C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C
485A387D1F80D83FFFC9FCEA1FFCEA07F02D357EA432>121 D<003FB612C0A3D9F00313
80EB800749481300003E5C003C495A007C133F5D0078495A14FF5D495B5BC6485B92C7FC
495A131F5C495A017FEB03C0EBFFF014E04813C05AEC80074813005A49EB0F80485A003F
141F4848133F9038F001FFB7FCA322257DA42A>I<B812FEA32F03809730>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmtt8 7 66
/Ff 66 126 df<123812FEB3A4127C1200A6123812FEA51238072574A41F>33
D<EA300338F807C0EAFC0FA7EAF807A400781380A4EA700312127AA41F>I<EBE0383801
F07CA8007FB51280B612C0A36C14803903E0F800A4EA07E1EBC1F0A4007FB51280B612C0
A36C1480390F83E000A7380701C01A247EA31F>I<EA01F0EA03FC487E120F139FEA1F1F
7F121EA35BA290381E3F80391F3E7FC0137E390FFC3F809038F87C0013F0EBE0783807C0
F8120F381FE1F0123F387FF1E0EA7DF3EAFCFB48B45A137F5C90383F83C0EB1F03EB3F83
00FC13C3387CFFE7007F13FFD83FF11380D81FE01300380F803E1A267EA41F>38
D<130C133E137E13FCEA01F8EA03F0EA07E0EA0FC01380121F13005A123E127E127CA212
FCA25AA97EA2127CA2127E123E123F7E1380120F13C0EA07E0EA03F0EA01F8EA00FC137E
133E130C0F2D76A71F>40 D<126012F87E127E7EEA1F80EA0FC0EA07E0120313F0120113
F8120013FC137CA2137EA2133EA9137EA2137CA213FC13F8120113F0120313E01207EA0F
C0EA1F80EA3F00127E5A5A12600F2D7BA71F>I<1378A2137C1378A20070133800F8137C
38FE79FCEAFF7B387FFFF8001F13E0000713803801FE003807FF80001F13E0007F13F838
FF7BFCEAFE7938F8787C0070133800001300A2137C1378A216197C9D1F>I<130E131FAA
007FB51280B612C0A36C1480D8001FC7FCAA130E1A1B7E9E1F>I<121EEA3F80127F13C0
A3123F121F1207A2EA0F80121FEA7F0012FE12F812700A1076871F>I<123C127E12FFA4
127E123C080875871F>46 D<140E141FA2143F143E147E147C14FC14F8130114F0130314
E0A2130714C0130F1480131F14005B133E137E137C13FC5B12015B12035B12075BA2120F
5B121F90C7FC5A123E127E127C12FC5AA21270182D7DA71F>I<133FEBFFC0487F000713
F813E1380F807C48487EA2003E7FA248EB0F80A30078130700F814C0AA007CEB0F80A300
7E131F003E1400A26C133EEB807E6C6C5A3807E1F813FF000113E06C5B013FC7FC1A267E
A41F>I<EA01FE3807FFC04813E0003F13F8EB83FCEA7E0048137E143E143FA2141FA212
78C7FC143FA2143E147E14FE14FCEB01F8EB03F0EB07E0EB0FC0EB1F80EB3F0013FE485A
485A485A380FE00E381F801FEA3F0048B5FCB6FCA26C13FE18257DA41F>50
D<123C127E12FFA4127E123C1200A9123C127E12FFA4127E123C081975981F>58
D<121E123FEA7F80A4EA3F00121EC7FCA9121E123FEA7F80A4123F121F120FA2EA1F005A
127E5A5A1260092176981F>I<140E141F147F14FFEB03FEEB07FCEB1FF0EB3FE0EBFF80
481300EA07FC485AEA3FE0485A48C7FC5A7EEA7FC06C7EEA0FF86C7EEA01FF6C1380EB3F
E0EB1FF0EB07FCEB03FEEB00FF147F141F140E181F7DA01F>I<007FB51280B612C0A36C
1480C9FCA5007FB51280B612C0A36C14801A0F7E981F>I<127012F812FE7EEA7FC06C7E
EA0FF86C7EEA01FF6C1380EB3FE0EB1FF0EB07FCEB03FEEB00FF147F14FFEB03FEEB07FC
EB1FF0EB3FE0EBFF80481300EA07FC485AEA3FE0485A48C7FC5A12F81270181F7DA01F>
I<387FFFE0B512F8806C7F380F803F801580140FA5EC1F00A2147EEBFFFC5C8080EB803F
EC0F80EC07C0A2EC03E0A5140715C0140FEC3F80007FB5FCB6120014FC6C13F01B247FA3
1F>66 D<90381FC38090387FF7C048B5FC5AEA07F0380FC03F381F801FA2383F000F123E
007E1307127CA200FCEB038091C7FC5AA87EA2007CEB0380EC07C0127E123E003F130FEA
1F80EC1F80380FC03F3907F07F003803FFFE6C5B38007FF0EB1FC01A267EA41F>I<387F
FFC0B512F014FC6C7F380F807F80EC1F80EC0FC01407A2EC03E0A3EC01F0AAEC03E0A314
0715C0140FEC1F80143FEC7F00387FFFFEB55A5C6C13C01C2480A31F>I<007FB51280B6
12C0A27E380F8007A4EC038091C7FCA314E0EB81F0A213FFA41381A2EB80E091C7FCA415
E0EC01F0A5007FB5FCB6FCA26C14E01C247FA31F>I<007FB512C0B612E0A27E380F8003
A4EC01C091C7FCA4147014F8A213FFA41380A2147091C7FCA9EA7FF8487EA26C5A1B247F
A31F>I<B512F8A43800F800B3AAB512F8A415247BA31F>73 D<EAFFFCA4EA0F80B3A4EC
07C0A6B6FCA315801A247EA31F>76 D<397F801FE000FF14F0EBC03F007F14E0001F1480
381EE077A4EBF0F7EB70E7A31379A2EB39C7A4EB1F87A3EB0F07A21300A8397F801FE039
FFC03FF0A2397F801FE01C247FA31F>I<397FC07FE000FFEBFFF07F007FEB7FE0000FEB
0F001370A31338A3133C131CA2131EA2130E130FA21307148FA21303A214CF1301A3EB00
EFA3147FEA7FE0EAFFF080387FE03E1C247FA31F>I<3803FFC0001F13F84813FCA2387F
00FE007E137E007C133EA248131FB3A36C133F007C133EA2007E137E007F13FE383FFFFC
A26C13F8000313C018267DA41F>I<387FFFE0B512F8806C7F380F807FEC1F80140FA2EC
07C0A6EC0F80A2141FEC7F00EBFFFE5C5C14E00180C7FCAAEA7FF0487EA26C5A1A247FA3
1F>I<EA7FFFB512E0806C7F380F81FCEB807E143E143F80A45C143E147EEB81FCEBFFF8
5C5C14F81381EB80FCA2147CA5157015F8A3387FF07F38FFF83F15F0397FF01FE0C7EA07
C01D257FA31F>82 D<3801FE1C3807FFBE4813FE123F1303EA7E01EAFC00147E5A143EA2
6C131C14007E127F13E06CB4FC6C13C0000713F0000113F838003FFCEB03FEEB007E147F
143FA20070131F12F8A36C133F143E6C137E38FFC0FCEBFFF814F014E00070138018267D
A41F>I<007FB512E0B612F0A338F80F81A40070EB80E000001400B3A5EBFFF8487FA26C
5B1C247FA31F>I<397FF03FF839FFF87FFCA2397FF03FF8390F8007C0B3A5EBC00FA239
07E01F80A23903F03F006D5A3801FFFE6C5BEB3FF0EB0FC01E2580A31F>I<397FE07FE0
39FFF0FFF0A2397FE07FE0391F000F80390F801F00A43807C03EA4EBE07E0003137CA46C
6C5AA400005B13F9A4EB79E0A4EB3FC0A46D5AA21C257FA31F>I<EA7FFFB51280A21400
00F8C7FCB3B3B5FC1480A26C1300112D75A71F>91 D<127012F8A27E127C127E123E123F
7E7F120F7F1207A27F12037F12017F12007F137C137E133E133F7F1480130F14C0130714
E01303A214F0130114F8130014FC147C147E143E143F141FA2140E182D7DA71F>I<EA7F
FFB51280A27EEA000FB3B3EA7FFFB5FCA26C1300112D7EA71F>I<387FFFFEB6FCA36C13
FE18057D7E1F>95 D<EA0FFE383FFF804813E080387E03F86D7EEA3C00C7127CEB07FC13
FF1207121F383FFC7CEA7F80EAFE005A5AA26C13FCA2EA7F076CB512C06C14E06C13BF39
03FC0FC01B197D981F>97 D<EA7F80487EA2127F1207A7EBC7F0EBDFFCEBFFFEECFF8090
38FC1FC0EBF00F9038E007E0A29038C003F0A21401A5140313E0EC07E013F09038F80FC0
9038FC3F8090B512005CEBDFFC380387E01C2480A31F>I<EB7FE03801FFF8000713FC5A
EA1FC0EA3F00007E137814005AA25AA57EA2007E1338147C6C13FCEA1FC1380FFFF86C13
F0000113E038007F8016197C981F>I<EB03FC497EA21303EB003EA7137E3803FFBE4813
FE5AEA1FC3EA3F00007E137EA248133EA25AA57E147E127E14FEEA3F0113836CB512E000
0714F06C13BF3900FE1FE01C247EA31F>I<137F3801FFC0000713E04813F8EA1FC1383F
00FC007E137C147E5A143EB512FEA314FC00F8C7FC7EA2007E131C007F133E383F807E38
1FE0FE380FFFFC6C13F8000113F038007F8017197D981F>I<EB01FCEB07FF011F13805B
141F137E90387C0F0091C7FCA4387FFFFCB57EA26C5BD8007CC7FCB1383FFFF8487FA26C
5B19247FA31F>I<EC1F809038FC3FC00003B512E0120F4813F7383F87F3903803F1C039
7E01F800EA7C00A4EA7E016C485A1387EBFFE05C91C7FCEA3CFC90C8FCA2123E383FFFE0
6C13FC487F487F397C003F8048EB0FC01407481303A36C1307A2007EEB1F80387F807F39
1FFFFE006C5B000313F0C613C01B287E991F>I<EA7F80487EA2127F1207A7EBC3F8EBCF
FC90B5FCA29038FE1F8013F8EBF00F13E0A213C0AC397FFC3FF839FFFE7FFCA2397FFC3F
F81E2480A31F>I<1370EA01FCA5EA007090C7FCA5EA7FF8487EA2127FEA007CB1387FFF
FCB5FCA27E16257CA41F>I<127F487EA2127F1207A7903883FFC0018713E0A2018313C0
903880FC00EB81F8EB83F0EB87E0EB8FC0EB9F8001BFC7FCEBFF80808013F3EBE1F0EBC1
F8EB80FC147C80143F397FF87FE039FFFCFFF0A2397FF87FE01C247FA31F>107
D<EA7FFC487EA2127FEA003EB3AA007FB5FCB61280A26C140019247DA31F>I<387C7C1F
39FFFE7F8090B512C06C14E0381FCFF3EB87E1EB07C1A2001E1381AD397F87E1F839FFCF
F3FCA2397F87E1F81E1980981F>I<387F83F838FFCFFC90B5FC7E3907FE1F8013F8EBF0
0F13E0A213C0AC397FFC3FF839FFFE7FFCA2397FFC3FF81E1980981F>I<137E3803FFC0
4813E04813F0381FC3F8383F00FC007E137E007C133EA248131FA66C133F007C133EA200
7E137E6C13FC381FC3F8380FFFF06C13E06C13C038007E0018197D981F>I<387F87F038
FFDFFCEBFFFE6CEBFF803907FC1FC0EBF00F9038E007E0A29038C003F0A21401A5140313
E0EC07E013F09038F80FC09038FC3F8090B512005CEBDFFCEBC7E001C0C7FCA9EA7FFC48
7EA26C5A1C2680981F>I<EB7F0E3801FFDF000713FF5AEA1FC1EA3F8048487E007E7F5A
805AA57E5C127E5C6C5BEA1FC16CB5FC7E000113DF38007F1F1300A9903801FFF04913F8
A26D13F01D267E981F>I<387FE03F39FFF0FFC001F313E0EA7FF73801FFE714879038FE
03C091C7FC5B5BA35BA9387FFFF0B5FCA27E1B197F981F>I<3803FFE0001F13F05A5AEA
FE03EAF80112F038F800E06C1300EAFFC06CB4FC001F13C06C13E0C613F8EB07FCEA7000
00F8137C6C133CA26C137C38FF01FCEBFFF814F014C00071130016197C981F>I<13E048
7EA6387FFFFCB57EA26C5BD801F0C7FCAB1407EC0F80A2141F13F89038FC3F006CB5FC6D
5AEB3FF8EB0FE019207F9F1F>I<387F80FFD8FFC11380A2EA7FC00007130FAE141F143F
EBE07F90B512F86C14FCC6FC90387FC7F81E1980981F>I<397FF0FFE0D8FFF913F0A2D8
7FF013E03907801E00A2EBC03E0003133CA36C6C5AA36C6C5AA3EB79E0A3137F6D5AA36D
5A6DC7FC1C197F981F>I<397FE07FE039FFF0FFF0A2397FE07FE0391E000780A4001F13
0F6C1400130FEB1F8FEB3FCFA3000713CE1339A2EBB9DEA2EBF0FE00035BA33801E0781C
197F981F>I<397FE1FF80EAFFF3A2EA7FE13907C0F000EA03E13801E3E0EBF3C06CB45A
137F6DC7FC133E131E133F497E13F7EBF3C03801E1E000037F13C038078078397FE1FF80
D8FFF313C0A2D87FE113801A197E981F>I<39FFE1FFC001F313E0A201E113C0390F003C
00138012075C13C012035CEA01E0A2EBE1E0EA00F1A25C137BA2133BEB3F80A2131F91C7
FCA3131EA2133E133C1278EAFC7C5BEAF9F012FF6C5A5B001FC8FC1B267E981F>I<003F
B5FC481480A3397C007F0014FE495A383803F8C6485A495A495A495A49C7FC13FE485A48
5A3807F007390FE00F80EA1FC0EA3F80EA7F00B6FCA36C140019197E981F>I<14FEEB03
FF130FEB1FFEEB3FC01400133EAC137E13FEEA7FFC12FF13F013FC127FC67E137E133EAC
133F14C0EB1FFEEB0FFF1303EB00FE182D7DA71F>I<127012F8B3B3A71270052D73A71F>
I<EA7F80EAFFE013F86C7EEA01FEEA007E133EAC133F1480EB1FFE14FF1307131F14FEEB
3F801400133EAC137EEA01FEEA7FFC485A13E0EA7F80182D7DA71F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmti10 10 18
/Fg 18 122 df<387FFFF8A2B5FCA214F0150579941E>45 D<DB03FE130E92393FFF801E
92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB03FC
49481407494815F049481403495A5C49C813E05B485A5B000317C0485AA2485A1880485A
94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816707E17F06C5E16015F16036C
6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6CEB03C0D801FEEB0F8027007F
807EC8FC6DB45A010F13E0010090C9FC373D74BA3B>67 D<902607FFF8923807FFF0614F
13E0D9000FEFF0004F5AA2021F167FF1EFC0141DDA1CFCEC01CF023C16DF9538039F8002
38ED071FA20278ED0E3F97C7FC0270151CA202F04B5AF0707E14E0037E14E0010117FE4D
485A02C0EC0380A20103ED0701610280140EA20107ED1C0305385B14006F137049160705
E05B010EEC01C0A2011E913803800F61011CEC0700A2013C020E131F4C5C1338ED1FB801
78163F04F091C8FC01705CA201F04A5B187E00015DD807F816FEB500C09039007FFFFC15
1E150E4C397AB84A>77 D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C
5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0
A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE
03FC3901F000F0222677A42A>97 D<147F903803FFC090380FC1E090381F0070017E1378
4913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F90C8FCA35A
5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00380F81F838
03FFE0C690C7FC1D2677A426>99 D<147F903803FFC090380FC1E090383F00F0017E1378
5B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7
FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E
00380781F83803FFE0C690C7FC1D2677A426>101 D<ED07C0ED1FF0ED3E38ED7C3CEDF8
FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512C05B168090
39003F800092C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F5CA3131F5C
A391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C82BA19>I<
EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F1307D93F0013
E05B017E130F13FE4914C01201151F1203491480A2153F1207491400A25DA249137EA215
FEA25D00031301140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407A2
5DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8
FC24367CA426>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA07
1EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B12075BA200
0F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879
B619>105 D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA212
01A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0E
A212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>108
D<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0
007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F
5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E00
1FEC3C7849EB1FE00007C7EA0780292679A42F>110 D<147F903803FFC090380FC1F090
381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FC
A215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB
3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE0
3FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01
E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E
013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201
A25BA21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F38
1C7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5B
A2120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>
114 D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313
F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F14
1F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FE
C7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2
B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB
0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13
F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F
131F00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC
0EA20201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78
E090393FF03FC090390FC00F00272679A42D>I<13F0D803FCEB01C0D8071EEB03E0D80E
1F1307121C123C0038140F4914C01270A249131FD8F07E148012E013FEC648133F160012
015B5D0003147E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87F
E038007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8
EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A428>121 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmbx12 12 37
/Fh 37 123 df<ED0FFF4AB512C0020F14F0027F80903A01FFF803FC499038C000FE010F
EB00034948497E49485B5C495A4C138001FF6E13005CA3705AEE01F893C8FCA74BB51280
B9FCA5C69038E00003B3B0007FD9FFC1B6FCA538467EC53E>12 D<B612F8A91D097F9A25
>45 D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C0
38>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0007FFFD8
1F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A6C5A6C5A
C9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5A
EC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC017C1401
49140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713FF011F14
C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16C07FA66C
5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC15F815FF
16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0EA3FF048
7EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80FFEEBFFFE
6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E5D5DA25D
5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8EB01F0EB
03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A12FCB912
80A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FFEB07FF91
B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C714C001DF
14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8FC6F13F0
A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C0123E003F4A
1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01FCC7FC01
0113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F8090390FFC00
1FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE7F80EE1E
00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9F01FFC90
39FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127FA5123FA2
17F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038E01FFC6D
B55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<DCFFF01470031F01FF14
F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF
4901C0804990C87E4948814948814948167F4849163F4849161F5A4A160F485B19074890
CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F
19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D
01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7FC020715FC020115F0DA00
1F1480030001F8C8FC44467AC451>67 D<B9FC18F018FE727E19E026003FFEC7001F13F8
05017F9438003FFF060F7F727F727F727F84737E737EA2737EA2737EA21B80A2851BC0A5
1BE0AD1BC0A51B8061A21B006162193F624F5A19FF624E5B06075B4E5B063F90C7FC4DB4
5A050F13F8BA5A19C04EC8FC18F095C9FC4B447CC356>I<BA1280A419C026003FFEC712
1F1701EF007F183F181F180F180719E01803A31801A3EE01E0F000F0A419001603A31607
160F167F91B6FCA59138FE007F160F16071603A31601A693C9FCAFB712F0A53C447CC346
>70 D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>73
D<B500FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079F
A26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC
03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485A
A26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA270
5BA2705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A>77
D<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF0107
0180010313C04990C76C7FD91FFC6E6C7E49486F7E49486F7E01FF8348496F7E48496F13
80A248496F13C0A24890C96C13E0A24819F04982003F19F8A3007F19FC49177FA400FF19
FEAD007F19FC6D17FFA3003F19F8A26D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E
5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B0101
01FE90B5C7FC6D90B65A023F15F8020715C002004AC8FC030713C047467AC454>79
D<B9FC18F018FE727E19E0D8001F90C7000F7F05017F716C7E727E727E721380A21AC084
A21AE0A91AC0A24E1380A21A00604E5A4E5A4D485A050F5B92B712C096C7FC18FC18C092
CBFCB3A7B712E0A543447DC34D>I<B812F8EFFFC018F818FE727ED8001F90C7003F13E0
05037F05007F727E727E727EA28684A286A762A24E90C7FCA24E5A61187F943801FFF005
075B053F138092B7C8FC18F818E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA7
85A61B0F85A2187F73131F72141EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13
E0CC0007138050457DC354>82 D<003FBA12E0A59026FE000FEB8003D87FE09338003FF0
49171F90C71607A2007E1803007C1801A300781800A400F819F8481978A5C81700B3B3A2
0107B8FCA545437CC24E>84 D<B76C010FB512F8A526003FFEC93803E000B3B3A9011F17
076280190F6D606F151F6D95C7FC6D6D5D197E6D6D5D6D6D1403DA7FFC4A5A6EB4EC3FF0
020F9039F003FFE06E90B61280020193C8FC6E6C14FC030F14E09226007FFEC9FC4D457C
C356>I<B600FE017FB691B512FEA526007FFCC8D83FFEC9EA7C006E82013F7017788074
15F86D705F6F7014016D705FA26F7014036D64814E6D14076D646F70140F6D041E94C7FC
A26F023E6D5C6DDC3C7F151E81027F037C6D5CF0783F6F70147C023F4B6C1578A26F0101
6F13F86E4B6C5D16806E02036F485A4E7E04C0EEE0036E4A486C5DA2DCE00FEDF0076E4B
6C5D16F06E4A6F48C8FC051E7F04F8705A6E4A027F131EA2DCFC7CEDFE3E037F0178023F
133C04FE16FF033F01F85E4D8004FF17F86F496E5BA36F496E5BA26F604D80A26F90C86C
5BA36F486F90C9FCA26F48167EA30478163C6F457EC374>87 D<903801FFE0011F13FE01
7F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA
00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC01000313E0000F1380381FFE00
485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007
EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97 D<EC3FFC49B512C0010F14F0
013F14FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300
007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F
6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF8
2A2F7CAD32>99 D<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F
14CF9039FFF807FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA312
7F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314
FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC
3FF80103B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D
1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA512
7FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F00
90397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF8002
0F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0F
FCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>
I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF848
48EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D
5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F
90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77E
D83FC014074848020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD8
0FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427D
AC38>I<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FC
AAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>105 D<EB7FC0B5FCA512037EB293
387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1
FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F
7F816F7F83707E163FB60003B512F8A535457DC43B>107 D<EB7FC0B5FCA512037EB3B3
B3A3B61280A519457CC420>I<90397F8007FEB590383FFF8092B512E0028114F8913987
F03FFC91388F801F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B5
12FEA5372D7CAC3E>110 D<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FF
C0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82
A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE0
6C6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>
I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB
07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA2
4C13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C0
91C7FCED1FF092C9FCADB67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F
13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FC
A35CB3A5B612E0A5272D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF0
03383FC00049133F48C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014
FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F020313E0140000F0143F
A26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5C
D8F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F
137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F1507
90393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC0
49B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE91
38F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B6903803FF
FCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D
6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F
5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B>I<001F
B71280A49026FC001F130001E0495A5B49495A90C7485A48495B123E4A5B4A5B003C495B
A24A90C7FC4A5A4A5AC7FC4A5A495B495BA2495B499038800780491300A2495A4948130F
49481400A2485B48495B485BA248495B4890C75A48485C15034848EB1FFEB7FCA4292C7D
AB32>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmti9 9 63
/Fi 63 123 df<923803FF80031F13F092383F00F803F8133C4A48133E4A48137E17FE4A
5A17FC17384A481300A3141F92C8FCA55C143E011FB612E0A217C09039007E0007147C16
0F1780A214FC4A131F1700A301015C4A133EA3167E0103147C5C1718EEFC1CEEF83C0107
15385C1778177016F0010F15F04AEBF8E01679EE3FC0011FEC0F0093C7FC91C9FCA3133E
A21238EA7E3C137CEAFE7812FC485AEA79E0EA3FC0000FCAFC2F4582B42B>12
D<EC1F80EC7FE0902601F0F0EB0380902603C078EB07C09026078038130F90380F003C49
131C013E150749ED0380037C13074901FC140002015C0001160E01F049131EDA00705B92
C75A00035E494A5A4C5AD9E1F0130FD9EFF8497ED9FF1C137D01FCECF8F001F8903801E0
70D801F0903803C078D803E0EB0780D807F090380F0038000FEB380E9038F8781E391FBF
E01CD907C013E048C7EA1DF0151F007E140F1507923803C07800FE91C712705AA217F05F
16015F16035F4CC7FC007C5D007E151E003E5D6C5D6C6C5C6C6CEB03C06C6CEB0F80D800
FC01FEC8FC90383FFFF0010390C9FC323876B53B>38 D<EA0380EA0FE0121FA5EA076012
0013E013C0A2120113801203EA07001206120E5A5A5A5A5A0B176FB318>I<1560EC01E0
EC03C0EC0700140E5C143C5C5C495A495A13075C49C7FC5B131E5B137C137813F85B1201
5B12035B1207A25B120FA290C8FC5AA2121E123EA3123C127CA31278A212F8A35AAF1270
1278A21238A2123C121CA27EA27E6C7E12011B4A75B71F>I<14301438A28080A2140F80
1580A2140315C0A4140115E0A81403A415C0A31407A31580140FA315005CA3141E143EA2
143C147CA25CA25C13015C13035C13075C130F91C7FC131E133E133C5B5B485AA2485A48
5A48C8FC121E5A12705A5A1B4A7EB71F>I<1518153CA2157CA21578A215F8A25DA21401
A25DA21403A25DA21407A2B812F817FCA217F8C7000FC8FCA25CA2141EA2143EA2143CA2
147CA21478A214F8A25CA21301A26D5A2E2E75A93B>43 D<EA0380EA0FE0121FA5EA0760
120013E013C0A2120113801203EA07001206120E5A5A5A5A5A0B177A8718>I<B51280A4
6C1300110579911B>I<121C127F12FFA412FE12380808778718>I<EC1FC0EC7FF0903801
E0F8903807C03CEB0F00011E131E133E013C131F5B13F85B1201A2485AA20007143F5BA2
120F153E49137E121FA348C712FCA4007EEB01F8A4007CEB03F012FCA2EC07E0A24814C0
A2EC0F80A2EC1F00A2141E5C0078137C5C387C01F0383C03E0381F0F80D80FFEC7FCEA03
F8203477B127>48 D<EC01801403A21407140FEC1F005C14FF5BEB1FFEEB7FBEEB7E7E13
20EB007CA214FCA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA291C7FC
A25BA2133EA2137EA2137C13FCB512FCA3193277B127>I<EC07F0EC3FFCECF81E903803
E00F903907800780D90F0013C0011E13035B013814E0EB7980EB71C00170130701F014C0
13E0A201E1130FD9E380138090387F001F013C140090C7123E5D5D4A5AEC1FE0903807FF
804AC7FC6D7E90380007C06E7EA26E7EA514031218127EA21407485C5A00E0495AA26C49
5A007049C7FC147E00785B383C01F0381E07E03807FF80D801FCC8FC233479B127>51
D<150E151FA2153F153EA3157E157CA215FC15F8A2140115F0A2EC03E0A3EC07C0A2EC0F
80A2EC1F00A2143EA25C147814F85C1301903803E0E0ECC1F0EB0781EB0F83EC03E0131E
133CEB7C0701F813C0EA01F0EA03E03807C00FD80F801380EA1FFC383FFFCF48EBFF82D8
F00313FF3860003FC7EA1FF8EC3F00143EA3147E147CA314FC5CA4146020417DB127>I<
EC01F8EC0FFEEC3FFFECFE0F903901F80780903803E00F903807C01F90380F803FD91F00
1300133E49130E01FC90C7FC5B1201485AA2485AA2380FC1F8EBC7FF9038CE0780391FBC
03C001F07FEBE001003F8013C01380A2D87F007FA2127E4A5AA25AA214075DA25A4A5AA2
5D141F4AC7FC0078133E007C5B5C6C485A381F07E0EBFFC0000790C8FCEA01F8213477B1
27>54 D<D9E0F81338EBE3FC2601EFFE137801FF14F048EC01E09038FE0E03D807F814C0
9039F0060F80390FC0071F90398003FF00391F0001EF001EEB001E003E5C123C485C15F8
485C4813015DC712034A5AA24A5AA2141F92C7FC5C143E147EA25CA2495AA3495AA21307
5CA2130F5CA2131FA25C133FA391C8FCA2131C253476B127>I<EC07E0EC3FFC4A7E9038
01F81F903903E00F809038078007D90F0013C0491303131E5BA21507017C1480A2150F16
00017E131E017F133E6E5A6D6C5AECE1E090381FFBC06DB4C7FC6D5A6D7E497F011E7F90
387C7FE09038F01FF048486C7E3807C007EB8003380F0001001E1300123E003C1478127C
1278A215F800F85C5A6C495A007813035D007C495A003C011FC7FC003E133E381F81FC38
0FFFF0000313C0C648C8FC223479B127>I<EC0FC0EC7FF0ECFFFC903803F07E903807C0
3E49487EEB1F00013E7F017E14805BA2485AA2485A151FA212075BA2ED3F00A2485A5DA2
000714FEA21401140300035CEBE0070001131E3900F039F8EB7FF1EB0FC190380003F0A2
4A5AA25D4A5A141F003891C7FC007E133E00FE137E5C48485A48485A48485A38781F80D8
7FFFC8FCEA1FFCEA07E0213478B127>I<1370EA01FC1203A413F8EA00E01300B0121C12
7F5AA45A12380E20779F18>I<161C163CA2167C16FCA21501821503A2ED077E150F150E
151CA21538A2157015F015E0EC01C0A2913803807F82EC0700A2140E141E141C5CA25CA2
5C49B6FCA25B913880003F49C7EA1F80A2130E131E131C133C13385B13F05B12011203D8
0FF0EC3FC0D8FFFE903807FFFEA32F367BB539>65 D<DB1FF013C09238FFFC010203EBFF
03913A0FF00F878091393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE080495A
49488091C8123E137E13FE485A4848153CA2485AA248481538A2485A94C7FC123F5BA312
7F90CBFCA412FEA2EE03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F0
6C6C495A6C6CEB07C06C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC
323775B437>67 D<0107B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0
EF07E05CEF03F0147E170102FE15F8A25CA21301A25CA2130317035CA2130718F04A1407
A2130F18E04A140F18C0011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A
5A4C5A01FE4A5A047EC7FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>I<
0107B712F05B18E0903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A130E
A20101EC1E03041C13804A91C7FC163C13035E9138F001F891B5FC5B5EECE0011500130F
5E5C1707011F01015BEEC00E0280141E92C7121C133F173C91C812381778495DA2017E14
014C5A01FE14074C5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234>I<0107B7
12E05B18C0903A003F80003F170F170792C7FC17035C1880147EA214FEA25C161C0101EC
3C07043813004A91C7FCA20103147816704A13F0150349B5FCA25EECE003130F6F5A14C0
A2011F13035E1480A2013F90C9FCA291CAFCA25BA2137EA213FEA25B1201387FFFFCB5FC
A233337CB232>I<92391FE001809238FFF8030207EBFE07913A1FF01F0F0091393F8007
9F9139FE0003DFD901F86DB4FCD907F05C49481300495A4948147E49C8127C137E13FE48
5A48481578A2485AA248481570A2485A94C7FC123F5BA3127F90CBFCA400FE91383FFFFC
A25F9238003F8094C7FCA2007E5DA2167EA2007F15FE7E5E6C6C1301A26C6C495A6D1307
6C6CEB0F786C6C133E3A00FF01FC3090387FFFF0011F01C0C8FCD903FEC9FC313775B43B
>I<0107B548B512C0495CA2903C003FC0000FF0004B5CA292C75BA24A141F60147EA202
FE143F95C7FC5CA201015D177E5CA2010315FE5F5C91B6FC5B5F9138E00001A2010F1403
5F5CA2011F14075F5CA2013F140F5F91C7FCA249141F5F137EA201FE143F94C8FC5B0001
5D3B7FFFF01FFFFCB55BA23A337BB239>I<010FB51280A216009038003FC05DA292C7FC
A25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2
133FA291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>I<91381FFFFE5C
16FC9138003F80A31600A25D157EA315FE5DA314015DA314035DA314075DA3140F5DA314
1F5DA3143F92C7FCA2121C007E5B00FE137EA214FE485BEAF80100E05B495A387007E038
780FC06C48C8FCEA1FFCEA07F0273579B228>I<0107B590380FFFF05B19E09026003FC0
903803FE004B14F818E092C7485A4DC7FC4A141E177C027E5CEE01E002FE495A4C5A4A01
1FC8FC163E010114785E4A485AED07C00103495A4B7EECF03F157F903907F1FFE0ECF3E7
9138E787F0ECEF0790380FFE0302FC7FECF80114E0D91FC07F15004A7FA2013F147E167F
91C77E835B161F017E81160F13FE835B000182267FFFF090B57EB55B95C7FC3C337BB23B
>I<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301A25C
A21303A25CA21307A25CA2130FA25C17E0011F140117C05C1603013F1580160791C7FCEE
0F005B5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB230>
I<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027BED0EFC610273
151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF070301031607050E
5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE0380011E017C
5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370ED3FC001F0
EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C46337BB245>I<90
2607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B140360EC
71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103151EEE801CEC801F
A20107ECC03C030F1338140016E049010713781770010E14F01503011E15F0705A011C13
01A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC1201EA07F8267FFF
807FB5140EA23A337BB239>I<ED1FE0913801FFFC913807E03F91391F800FC091393E00
03E002F8EB01F0495A4948EB00F8494814FC4948147C49C8127E133E017E153E49153F48
5AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F01607
17E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F80
6C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8FC303775B43B>I<0107B6
12C04915F883903A003F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC0
5CA201011680173F4A1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F8
02E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0
B5FCA233337CB234>I<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7
127F835C1880147EA214FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04
FEC7FC49B512F016C09138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FE
A291C7FCA24913015E137EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0E
EE7E1CC9EA1FF8EE07E032357BB238>82 D<913901FC018091380FFF03023F13C791387E
07EF903A01F801FF0049487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A2
93C7FC137FA26D7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F
7E150FA4120EA2001E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038
C007E039F3F80FC000F0B5C8FC38E03FFC38C00FF029377AB42B>I<0003B812C05A1880
903AF800FC003F260FC001141F0180150F01005B001EEE07001403121C003C4A5BA20038
0107140E127800705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA2
5CA2147EA214FEA25CA21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374
B237>I<B500C090383FFF80A3D807F8C73807F80049EC03E05F00034B5A94C7FC5E160E
5EA25E167816705E7F00014A5A15035E4BC8FCA2150E151E151C5D7F5D000014F05D4A5A
A24A5AA24AC9FC140EA26D5A137E5C147814705CA2EB7FC0A25C91CAFCA2133EA2133C13
38313570B239>86 D<B53CC03FFFF003FFF8601480280FF00001FCC7EA7F806C484AEC3E
00193CA219386115036115074E5A030F140361031D4AC7FCA2DB38FC130EA203705C15F0
6C6C01E05C140103C05CDA038014F060DA0700130160020E4A5AA24A4AC8FCA24A140E14
7802705C5C5FD9F1C014781770D9F3805CA201F7C7EA7FC0A201FE5DA26C4892C9FCA249
147E5B167C5B1678491470453570B24D>I<902607FFFE90387FFFC0A39026001FF09038
0FF80003C014C0020F5D6F91C7FC0207141E6F5B5F02035C6F485A02015C6F485A4CC8FC
0200130EEDFE1EED7E3C5EED7FF06F5A5E5E151F82A24B7E157F1577EDE7F0EC01C7EC03
8302077FEC0F01021E7F143CEC38004A7F4A137E495A0103147F49487F49C77F131E4914
1F017C8113FC00074B7EB5D88003B57EA295C7FC3A337CB239>I<EB03F0EB0FF890383E
1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A2381F800715C0EA3F00A214
0F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FC
D83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0202278A027>97
D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EBC3E0EBCFF8380FDC
3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F1580127CA2143F00
FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0FFCEA03F01A3578B3
23>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0073807E00F13C012
0F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC03C06CEB0F80
EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0EC03FFA21680EC00
1FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB3E1DEB7C0F496C5A
EA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A007E5CA2141F12FE
4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03133C393E07BE3839
1F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB3E0F9038F8078038
01F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F8387FFFE04848C7
FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8380F03E03807
FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03E3A2EC07C316E0ED
C1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC147CA414FC5CA5
13015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238EA7E3CA2EAFE7812
FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803E1E6903807C0FF90
380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215FC12074913F8A214
01A2D80FC013F0A21403120715E01407140F141F3903E03FC00001137FEBF0FF38007FCF
90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B48485A387803E0387C0F
80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2133E
A2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8EC007849137C485A
5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0C048ECC1E0020F13
C0003E1481A2007E1483ED0380007C1407160000FC140E151E48EB07F80070EB01F02335
7BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA03FCEA0F1E120E12
1C123C1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA212035BA2000713C0EBC1
E0000F13C01381A21383EB038013071400130E131EEA07F8EA01F013337AB118>I<EB0F
C0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137EA2137CA213FCA2491378EC01FE0001
EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1C01C9038E38000D807E7C7FC13
EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F81300150C48141E151C123EA2007E143C
1538127C157800FCEB787015E048EB3FC00070EB0F8020357BB323>107
D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203A213E0A21207
A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC1C133CEAF838
A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314>I<2703C003F8137F3C0F
F00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026383FC001FC7F
D97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F8148012000001021F1303
60491400A200034A13076049013E130FF081800007027EEC83C0051F138049017C1403A2
000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF0000E6D48EB03E0
3A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE00F26383FC0
1380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F8120000015C153E5BA20003
147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578EDE070018014F016E0
001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF90381F07C090383E
03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214014814F8127E
A2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F0380F83
E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF9039F3C387C09039E3EF
03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307000313C01200
010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00017F
133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A25BA2
1207A25BB5FCA325307FA027>I<3903C00FC0390FF03FF0391E78F078391C7DE03C393C
3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812001201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>114
D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF
8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3147C00F013784813
F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA214
00A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207
A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB07005BEA0F1EEA07
F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E
133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002
031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038
F071E73A007FE0FF0090381F803C24227AA029>I<01F01338D803FC13FCEA0F1E120E12
1C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A1578000114705BA215
F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0EB1F
801E227AA023>I<D801F01538D803FC010E13FCD80F1E131E000E143E121C123C003802
7E137CD8783E137C0070163CA2017E13FCD8F07C491338EA60FCC65A0201147800014A13
7013F0A2020314F0000316E001E05BA2160117C001C013C00207EB0380A29039E00FE007
1700021F130E3A01F03DF01E3A00F878F83C90393FF03FF090390FC00FC02E227AA033>
I<011F137C90387FC1FF3A01E1E787803A03C0F703C0903880FE0FEA07004813FC000E15
80001E9038F80700001C91C7FC1301003C5B1218120013035CA31307A25C1506010F130F
150E14800038141ED87C1F131C00FC143C1538013F5B39F07FC0E03970F3C3C0393FE1FF
80260F807EC7FC22227CA023>I<13F0D803FC1307D80F1E130F000E141F121C123C0038
143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA214010003
14F013E0A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007F
EFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C
1FC7FCEA0FFCEA07F020317AA025>I<903807801C90381FE03C90383FF038017F137890
38FFF8F03901F07CE0EBE01F3903C003C09038800780EC0F00C7121E141C143C5C5C495A
EB07C0495A011EC7FC5B5B4913704913F0000114E0485A38078001390FC003C0381FF807
90383E0F80393C1FFF00127838700FFE38F007F838E001E01E227CA01F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmbx9 9 29
/Fj 29 119 df<EC07FF91B512E001078090391FFC01FC90383FE0009039FFC001FE48EB
80031400484A7E496D5AA36F5AED007093C7FCA4ED3FFFB8FCA43903FE0001B3A7277FFF
F03F13F8A42D347FB331>12 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C
7A8B19>46 D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F317A
B02C>49 D<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF48487E6D6C1380
D8FFC014C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A5A5D4A5AEC
3FC04A5A02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914C05B484813
0748B6FC5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387FFF8048B512F03903F01F
F83907C00FFE380F8007486C6C7E01F01480123F13F8A5D81FF014006C485AD803805BC7
FC4A5A4A5A4A5AECFFC0013F90C7FC14FCECFFC09038001FF0EC0FFC6E7E6E7E16806E13
C0A2000F15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC0148049481300003F5B391FF0
1FFE6CB512F8000314E0C61480D91FFCC7FC23327CB02C>I<151F5D5DA25D5C5C5C5CA2
5C143D147D14F9EB01F114E1EB03C1EB0781130FEB1F01133E133C137813F01201EA03E0
EA07C01380EA0F00121E123E5A5AB712FEA4C700031300A80103B512FEA427317EB02C>
I<000C140ED80FE013FE90B5FC5D5D5D5D5D92C7FC14FC14F091C8FC1380A6EB87FE9038
BFFFC090B512F09038FC0FF89038E003FE01C07F497E01001480000E6D13C0C8FCA216E0
A3121FEA7F807F487EA316C05B5CD87F801480D87C0014006C5B393F8007FE391FE01FFC
0007B512F06C14C0C691C7FCEB1FF823327CB02C>I<EC7FC0903803FFF0010F13FC9038
3FE07E90387F801F4848485A4848EBFF8048485A13F8120FEA1FF0A2123F6E1300484813
3C92C7FCA2142039FFE1FF8001E713E001EF13F89038FE03FC496C7E01F87F6E13805B16
C0A24914E0A5127FA5123F16C0121F6D1480000F5B01F814006C6C485A6C6C485A6CB55A
6C6C5B011F13C0D907FEC7FC23327CB02C>I<123C123F90B612F8A44815F016E016C016
8016005D007CC7127E00785C4A5A00F8495A48495A4A5A4A5AC7FC4AC7FC147E14FE5C13
015C1303A2495AA2130FA2131FA25C133FA4137FA96D5AA2010FC8FC25337BB12C>I<ED
1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F801503023F80
EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131FA249B67EA24981
A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249157FB500F0013FB5
12F0A43C347DB343>65 D<B812FCA4C69038E0001FEE03FE16011600177E173EA2171EA3
923803C01F170FA403071300A2150F153F91B5FCA4ECE03F150F1507A21503A592C8FCAB
B612F8A430337DB238>70 D<B612F8A4C601E0C8FCB3A81778A417F817F0A31601A21603
A21607160F161F167F923803FFE0B8FCA42D337DB235>76 D<B712F8EEFF8017E017F8C6
9039E0007FFCEE0FFE707E701380A27013C0A218E0A718C0A24C1380A24C13004C5AEE7F
FC91B612F017C04CC7FC02E0C9FCB3B612E0A433337DB23C>80 D<003FB812F8A4D9F003
EB801FD87F80ED03FC01001501007E1600007C177CA20078173CA400F8173E48171EA4C7
1600B3A9011FB612F0A437327DB13E>84 D<EB7FFE0003B512E04814F8390FF00FFC391F
F803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F00
0F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F00
03EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF80
01FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217E0
A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F13
809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE484848
7EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F
6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA0
27>I<ED01FC15FFA4150F1507ADEB07FE90383FFFC790B512F70003EB01FF3907FC003F
4848131F4848130F48481307A2127F5BA212FFA9127FA27F123F150F6C6C131F6C6C133F
6C6C497E2603FE03B512E0C6B512E7013F1387903807FC072B347DB331>I<903803FF80
013F13F090B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B
16F012FF150790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803FE
EB0FC03A01FF807F806C6CB51200011F13FC010313E024217EA029>I<16F890390FFC07
FE90387FFF9F48B6127F3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6
001F5CEBF003000F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512
F015FE6CECFF8016E06C15F06C15F84815FC121F393F80001F48C7EA03FE481401481400
A46C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F
13E028327EA12C>103 D<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8EA01FC12FFA4
120F1207B3A5B512C0A412357DB418>105 D<EA01FC12FFA4120F1207B3B3A6B512E0A4
13347DB318>108 D<2703F803FEEB03FE00FF903B1FFFC01FFFC0027FD9E07F7F913BF8
1FF0F81FF0903CF9E00FF9E00FF8260FFBC0EBFBC06CB4486CB4486C7E02001400495CA3
495CB2B500E0B500E0B512E0A443217CA04A>I<903803FF80011F13F090B512FE48EB01
FF3A07FC007FC0D80FF0EB1FE0001F15F049130F003F15F8491307007F15FCA300FF15FE
A8007F15FCA26D130F003F15F8001F15F06D131F6C6CEB3FE06C6CEB7FC03A01FF01FF00
6CEBFFFE013F13F80103138027217EA02C>111 D<3901FC07FC00FF90387FFF8001FDB5
12E09039FFF01FF89138C007FC000F90380003FE6C4880496D1380A26F13C0A3EE7FE0A9
EEFFC0A34B1380A26D4913006D495A9138C00FFC9138F03FF801FDB512E0D9FC7F1380DA
0FF8C7FC91C9FCABB512E0A42B307EA031>I<3901F81F8000FFEB7FF0ECFFF89038F9E3
FC9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217E
A024>114 D<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13
FCEBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F013071403
7EA26C14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<
133CA5137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038
FE078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<B539C007FFC0A4D807FE
C7EAF80000035D6D13016C5D14806C4A5AA2ECC007017F5CECE00F013F91C7FC6E5A011F
131EECF83E010F133CECFC7C01071378ECFEF801035B14FF6D5BA26D5BA26E5AA26EC8FC
A2141E2A217EA02F>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmtt9 9 24
/Fk 24 122 df<120FEA3FC013E0EA7FF0A213F8A2123FA2120F120113F01203EA07E012
1FEA7FC0EAFF8013005A12700D14738927>44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
000A0A728927>46 D<130E131FA25B5BA25B5A5A127FB5FCA213BFEA7E3F1200B3AA003F
B512805A15C01580A21A2F79AE27>49 D<EC3F804A7EA214FF5BA2EB03F7EB07E7A2EB0F
C71487131FEB3F07A2137E13FCA2EA01F813F01203EA07E0A2EA0FC0EA1F80A2EA3F0012
3E127E5AB7128016C0A36C1580C73807C000A849B5FC491480A36D1400222F7EAE27>52
D<EB01FE903807FF80011F13C0017F13E090B512F048EB03F83803FC013907F000FC390F
E01F7C9038C07FFE381F80FF1301485A393E07F1FF007E13E0397C0FC07FEC803FA2EAFC
1F00F8EB001FA800FCEB803FD87C0F133EA2ECC07E397E07E0FC003E13F1393F03FFF86C
6C13F0018013E0390FC07FC09038E01F1E3907F0003FD803FC137F3901FF03FF6CEBFFFE
6D13FC011F13F0010713C001011300202E7DAD27>64 D<007FB61280B712C0A37E3907E0
000FA6ED078092C7FCA4EC07804A7EA390B5FCA5EBE00FA36E5A91C8FCAC387FFF80B57E
A36C5B222E7EAD27>70 D<3803FFC0000F13F04813FC4813FF811380EC1FC0381F000F00
0480C71207A2EB0FFF137F0003B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F
131FEBC0FF6CB612806C15C07E000313F1C69038807F8022207C9F27>97
D<EA7FE0487EA3127F1203A914FF01F313C090B512F08181EC81FE49C67E49EB3F804913
1F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFF
FC5D5D01F313C02601E0FEC7FC232E7FAD27>I<EB0FFF017F13C048B512E04814F05A38
0FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127EA2007F14F0393F
8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0FF81D207B9F27>
I<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5FC5A5A380FF83F381FE00F383FC007EB
8003EA7F00007E1301A212FE5AA67E007E1303A2127F6C1307EB800F381FE01F380FF03F
6CB612C06C15E06C13FD38007FF9D91FE013C0232E7EAD27>I<EC1FF0ECFFF84913FC49
13FE5BEB0FF014C0011F137CEC8000A6007FB512F0B612F8A36C14F039001F8000B3A400
3FB512C04814E0A36C14C01F2E7EAD27>102 D<153F90391FC0FF80D97FF313C048B612
E05A4814EF390FF07F873A1FC01FC3C0EDC000EB800F48486C7EA66C6C485AEBC01FA239
0FF07F8090B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC15E015F84814FE4880EB80
01007EC7EA3F80007C140F00FC15C0481407A46C140F007C1580007F143F6C6CEB7F0090
38F807FF6CB55A000714F86C5CC614C0D90FFCC7FC23337EA027>I<EA7FE0487EA3127F
1203A9147F9038F1FFC001F713F090B5FC8114C1EC01FCEBFE005B5BA25BB03A7FFF83FF
E0B500C713F0A36C018313E0242E7FAD27>I<130F497E497EA46D5A6DC7FC90C8FCA738
3FFF80487FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE27>I<387FFF80B5
7EA37EEA000FB3B2007FB512F8B612FCA36C14F81E2E7CAD27>108
D<387FE07F39FFF1FFC001F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7F
FF83FFE0B500C713F0A36C018313E024207F9F27>110 D<EB1FE0EB7FF83801FFFE487F
481480390FF03FC0391FC00FE0393F8007F0EB00034814F8007E1301A248EB00FCA76C13
01007E14F8A2007F1303393F8007F0A2391FE01FE0390FF03FC06CB512806C14006C5B38
007FF8EB1FE01E207C9F27>I<90380FF03C90383FFE7E90B5FC000314FE5A380FFC1F38
1FE007EBC003383F800148C7FC127EA200FE147E5AA67E007E14FEA2007F1301EA3F80EB
C003381FE007380FF81F6CB5FC7E6C147E38007FFCEB0FF090C7FCAC91381FFFF8A24A13
FC6E13F8A226317E9F27>113 D<397FFC03FC39FFFE0FFF023F13804A13C0007F90B5FC
39007FFE1F14F89138F00F809138E002004AC7FC5CA291C8FCA2137EAD007FB57EB67EA3
6C5C22207E9F27>I<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC07806C
90C7FCEA7F8013FC383FFFF06C13FC000713FF00011480D8000F13C09038003FE0140700
78EB03F000FC1301A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707FF01C
207B9F27>I<133C137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE1518157EA415FE
6D13FC1483ECFFF86D13F06D13E0010313C0010013001F297EA827>I<397FE01FF8486C
487EA3007F131F00031300B21401A21403EBFC0F6CB612E016F07EEB3FFE90390FF87FE0
24207F9F27>I<3A7FFC0FFF80486C4813C0A36C486C13803A07C000F800EBE00100035C
A2EBF00300015CA2EBF80700005CA390387C0F80A36D48C7FCA3EB3F3FEB1F3EA214FE6D
5AA36D5AA26D5A22207E9F27>I<3A7FFC0FFF80486C4813C0A36C486C13803A07E000F8
00000313015D13F00001130301F85B1200A26D485A137CA290387E0F80133EA2011F90C7
FC5CA2130F149E14BE130714FC1303A25C1301A25CA213035CA213075C1208EA3E0F007F
5B131FD87E7FC8FCEA7FFE6C5A5B6C5AEA07C022317E9F27>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmsy9 9 6
/Fl 6 104 df<91383FFFF849B512FC1307011F14F8D93FE0C7FC01FFC8FCEA01FCEA03
F0485A485A5B48C9FC5A123E5AA21278A212F8A25AB712F816FCA216F800F0C9FC7EA212
78A2127CA27E123F7E6C7E7F6C7E6C7EEA01FC6CB4FCEB3FE06DB512F8010714FC1301D9
003F13F8262E7AA933>50 D<1630167816F8A2ED01F0A2ED03E0A2ED07C0A2ED0F80A2ED
1F00A2153EA25DA25DA24A5AA24A5AA24A5AA24A5AA24AC7FCA2143EA25CA25CA2495AA2
495AA2495AA2495AA249C8FCA2133EA25BA25BA2485AA2485AA2485AA2485AA248C9FCA2
123EA25AA25AA25A1260254675B500>54 D<EC0180EC03C0A21407EB0FE790383FFF80EB
F83F3801E00FEA03C0D8078013C0390F001FE0A24814F0001E133E003E14F8143CA248EB
7C7CA2147814F8A200FCEBF07EA21301A214E01303A214C0A21307A21480A2130FA21400
5BA2131EA2D87C3E137CA2133C137C007E14FCD83E7813F8A213F8001E14F0381FF00100
0F14E01403D807E013C00003EB0780EC0F00EBF83EEBFFFC3807CFE001C0C7FC5BA26CC8
FC1F407DB926>59 D<0060ED018000F0ED03C0B3AF6C1507A2007CED0F80A26CED1F0000
3F5D6C6C147ED80FE0495AD807F8EB07F83A01FF807FE06C90B55A013F91C7FC010F13FC
010013C02A307CAD33>91 D<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F91
C7FC137E5BEA03F8EA7FE048C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D7E
6D7EEB00FEEC3FE014071B4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F80
131FB3A580130F6D7E6D7EEB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A49
5A131F5CB3A5133F91C7FC5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr9 9 77
/Fm 77 124 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F60001
1306A40003130EEB000CA248131C00061318000E1338000C1330001C13704813E0387001
C00060138017177EB326>34 D<123C127EB4FCA21380A2127F123D1201A412031300A25A
1206120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F00130E5B133C5B
5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123E
A3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C0130012
4A79B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C13
3EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F8
5BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<156015F0B3A4007F
B812C0B912E0A26C17C0C800F0C8FCB3A4156033327CAB3C>43 D<123C127EB4FCA21380
A2127F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>I<B512F0
A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<1530157815F8A215F01401
A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814F8A25C1301
A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A2
5B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D4B
7CB726>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F0001F0
A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F80
03E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>I<13075B5B13
7FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFF
F0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14
F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C49
5A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C1470001FB512F0
5A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0F
E0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC
3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3
127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003
B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2143F147F146F
14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA0180120313001206
120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>
I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8
EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E
12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FF
F8000113E038003F801D347CB126>I<14FE903807FF80011F13E090383F00F0017C1370
3901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1F
FC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015FC1400A24814
FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E03903E00FC039
01F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC
0070C7123800601430157015E04814C01401EC0380C7EA07001406140E5C141814385CA2
5CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB
7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E1300001C14F8003C14
78A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C
13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB
07FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C14787E6C14F0390F
8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE
3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC
1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C3801F03838
007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715C0140FEC1F80
9038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E
12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>I<123C127E12FFA412
7E123C1200B0123C127E12FE12FFA3127F123F1203A412071206A3120E120C121C123812
3012701260082F7A9F15>I<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A2
6C17C033147C9C3C>61 D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7E
A202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA301066D7EA2010E8001
0FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7E
D8FFFE49B512E0A333367DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80
EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039
FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE
1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF
801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC71203
48481401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC481600AB
7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0
D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC
2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E70
7E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17
FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3
D803FCC7127F0001150FEE03E01601A21600A21760A403061330A41700150EA2151E157E
90B512FEA39038FC007E151E150EA21506170CA3171892C7FCA41738A21770A217F01601
160316070003157FB812E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE07C016
03A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA215
0CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91393FFF801C91B512E0903A
03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC712034848140100031500
5B4848157C485A173C485A171C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F
92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB
0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C
>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A
7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C5AB3B3A7487EB512FEA317
337EB21C>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FCA4EC3F805A006014000070
5B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227>I<B500FE903807FFF8A300
0190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E
5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E
6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807FF80B500FE013F13FCA3
36337EB23C>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16
FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06
FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB
0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800
FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<D8FFFE
91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0
FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07
F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2486C1400
D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFFC0903901FC07F09039
07E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7EA248486E7E000F
8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D153FA3
003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A
5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA07FCC8FC33377C
B43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA2
17F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9FCB3A2487EB512
F8A32C337DB234>I<EC07FC91387FFFC0903901FC07F0903907E000FC4948137E013FC7
EA1F80017E6E7E496E7E48486E7E00038249140148486E7E000F8249157E001F167FA248
48ED3F80A2007F17C0A390C9121F4817E0AB6C17C0A26D153FA2003F1780A26D157F001F
1700A2270FE001F013FE0007D907FC5B9039F00E0E013B03F80C0703F8000190391C0383
F03B00FC180187E0017EECCFC0013FECDF8090271F9C00FFC7FCD907EC13FC902701FE07
F013609038007FFF913807FC7091C7007813E0A2EE7C01EE7E0393387F07C0EE3FFFA218
80821800705A705AEE01F033447CB43C>I<B612FCEDFF8016F03A01FE0007FC0000EC01
FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC
9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618
B500FEEB1FE0040F1338933807F070C93801FFE09338003F8036357EB239>I<90381FE0
0390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A200788000F880A4
6C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C680013F7F01037F
9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F80A26C1500
6C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC22377CB42B
>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060160600E016
07A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE90381FFFF8A300
0190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E495A010F14
036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190C8FC35357E
B23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D151C00001618
A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA26D6C1306A2
8001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E1020F5BA2DA07
F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8F007B539800FFFF0
A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00001930836D020715706D
1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95C7FCA26ED9
607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C01011718A2913BFE
03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8EB01FC021F
EDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B141C020115
184C357FB24F>I<267FFFFC90B512C0A3000101E090381FF80026007F80EB0FC0013F6E
5A6E91C7FC6D6C130E010F140C6E5B6D6C133801035C6E13606D6C13E06D6C485A5EDA7F
83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7EA26E7E815C6F7E9138063FC0140E4A6C7E
9138180FF0EC380702707F91386003FCECC0010101804A6C7E49C77E4981010E6E7E010C
6E7E131C496E7E01786E7E13FCD807FEEC1FFEB56C90B512F8A335337EB23A>I<B500F8
ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E006D6C5C6D6C141817386D6C14305F6D
6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F801C91383FC01816389138
1FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91B512FCA337337FB2
3A>I<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4
EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F
6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA3
13071303B3B01238127C00FE13E0130714C0130F007C138038381F00EA1FFCEA07F01443
84B217>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020F
C7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114
016E7E81486CEBFF80B500C313F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA
0FF0B5FCA310347EB315>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0
903BF3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C
487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3
807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB
07F0EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E00
3E143E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C39
03F007E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038
F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716
F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC
91C8FCAA487EB512C0A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F38
07E001000F14DF48486CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F
5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA32630
7DA029>I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049
C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E
140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300
EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019
237EA11E>I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403
A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB
0FFFA30007EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFE
D907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D13
1C00011418A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2
EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801
FC003F8001F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A2
90267E01FF5B159F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC03
90C7FCA2D907FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B5
3801FFF8A32603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F83
80D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB
0C0790381C03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29
>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E
1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB
01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA
7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB
3F800070137F1500006013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A
12035B48481370485A001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I<
B712F8A22502809426>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr10 10 77
/Fn 77 125 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<121C127FEAFF80A213C0A3127F121C1200A412011380A212
0313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E
131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67E
A3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00
E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C13
3C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2
133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15
301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C09097988
17>I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C01407A215
80140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA25C13
0FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A25B12
0FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<EB03F8EB
1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2481580
A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C
6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>I<EB01C0
13031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB0FF0
EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E126012FC
B4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC14
7C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A000EC75A00
0FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C007F8
48486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F
80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2
121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E390F8003F8
3907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2140114
031407A2140F141F141B14331473146314C313011483EB030313071306130C131C131813
301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F800
AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5FC5D5D15
8092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E090388003F049
6C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E000605C127000
30495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A
7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F80
4848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC9038
07FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C0151FA290C7
13E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07
F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A316C05A16
8016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C
141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E23
3B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848137C90C7
7E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AEC
C1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801F
FF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A2
1501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B5
5A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E03903F803
F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C14
3FA27F123F001F147FA26C6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13
C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A
001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>I<121C127FEAFF80
A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80
A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A
121812385A1260093479A317>I<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063F
A2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D9
01807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA349
6E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65
D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16
035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83
707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7
FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F48
48150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A312
3F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE0
5C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D
7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E
177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F
18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397D
B83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A3170783
16C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C7
12C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787
D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A24848
1503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A212
3F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D9
03FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B6
48B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB6
48B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>
I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4C
C8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A
6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2
707E707F8484486D497FB6011FEBFF80A339397DB841>75 D<B612E0A3000101C0C8FC6C
90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D
397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7
F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C
1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3
ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED01
8045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCF
F8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED
7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1F
F6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA21706
37397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED9
3F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2
001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17
F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A
5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390
C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0
EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF00
91B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<EC03FF021F13E09138FE01FC90
3901F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7EA24848
157F0007178049153F000F17C049151F001F17E0A24848ED0FF0A3007F17F8A2491507A2
00FF17FCAC007F17F8A26D150FA2003F17F0A26C6CED1FE0A36C6CED3FC00007027C1480
4AB4FC3C03F80383807F003B01FC0701C0FEEC0E002600FE0CEBE1FC017FEC63F8D93F8C
EB77F0D91FCCEB3FE0D907EE14806DB449C7FC0100D981FC130CEC1FFF0203131C91C700
1E131C161F183CEF807CEFC0F8EE0FFFA318F08218E07013C07013809338007E00364B7B
BA41>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707E
A283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED
00FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A0401
1306933800FE0ECAEA3FFCEF07F0393B7DB83D>I<D90FF813C090383FFE0190B5128139
03F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC
1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680
013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501
A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39
E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E00
01FE130348EE01F00078160000701770A300601730A400E01738481718A4C71600B3B091
3807FF80011FB612E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8
EA1F80EF0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C
495A6D6CEB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E
>I<B500FC91387FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E1403017F
93C7FCA280013F1506A26E140E011F150C80010F5DA28001075DA26E147001031560A26D
6C5CA2806D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318
A26E6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB8
3E>I<B5D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000
010307ED03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D
5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F
485AEE6007A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3
C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B
140FA202015E4B1407A2020093C8FC4B80503B7EB855>I<B500FE91383FFFE0A3000301
E0913807FE00C649EC03F0017F6F5A606D6C5D6D6C140395C7FC6D6C1406A26D6C5C6D6C
141C17186D6C143817306D6D5B6E6C13E05F91383FE0015F91381FF003DA0FF890C8FC16
06913807FC0E160C913803FE1C913801FF185E6E13B016E0157F6F5AB3A24B7E023FB512
C0A33B397FB83E>89 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>93 D<EB1FE0EBFFFC3803E03F39
07000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EB
FE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980
063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0F
F8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A2
14E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1
913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EB
F3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486C
EB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A312
3A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F8380
3F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A348
6C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F90
39F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280
A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F
4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14
076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090
381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F
803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3
ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FF
F8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE0190387E0781
9038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA312FEAA
127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE
0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3
E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512
F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807E
A27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB
0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A27
7DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215
C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E0
00FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7
FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF800
0FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2
EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA214
7CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E0
18C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2
D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D
5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37
257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D
6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7
E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC
3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003
EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C
5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA
7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB5
12FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060137F15
0014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A0007140E5B
4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>I<B81280A2
290280962A>I<BD12C0A25202809653>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx12 14.4 26
/Fo 26 123 df<EEFFFC031FEBFF804AB612E0020781021F9038C00FF8913A7FFE0003FC
DAFFF0EB00FE4949EB03FF4901805B4990C7487F49485CA2495A4D7F013F6F5B5CA37190
C7FC715AEF01F894C9FCA90403B512C0BAFCA526003FFCC7120783B3B3A6003FB5D8FC03
B612C0A542547DD34B>12 D<B712F0AB240B7F9F2D>45 D<932601FFFCEC01C0047FD9FF
C013030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7383F
F0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F8824949824949824949824949
824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA298C7
FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C006C6D606C
6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D6C6C
6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE001FFF0020091B612C0033F93C8
FC030715FCDB007F14E0040101FCC9FC525479D261>67 D<BA7E19FCF1FF801AF01AFCD8
000701F0C7000F13FF060014C0071F7F070713F807017F737F747E747F747F86747F747F
8886888688A2757EA31D8087A21DC0A51DE0A387A963A31DC0A51D80A2631D00A3515AA2
646264505B6264505B505B5090C7FCF2FFFE4F5B07075B071F5B96B512C0060F91C8FCBB
5A1AF01AC007FCC9FC19805B527CD167>I<B812F8A5D8000701F8CAFCB3B3A91A7CA41A
FC1AF8A51901A31903A219071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0
A546527CD151>76 D<93380FFFC00303B6FC031F15E092B712FC0203D9FC0013FF020F01
C0010F13C0023F90C7000313F0DA7FFC02007F494848ED7FFE4901E0ED1FFF49496F7F49
496F7F4990C96C7F49854948707F4948707FA24849717E48864A83481B804A83481BC0A2
481BE04A83A2481BF0A348497113F8A5B51AFCAF6C1BF86E5FA46C1BF0A26E5F6C1BE0A3
6C6D4D13C0A26C6D4D1380A26C1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B5B6D6D4B5B6D
6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A6D01FF02035B023F01E0011F13F0020F01FC90
B512C0020390B7C8FC020016FC031F15E0030392C9FCDB001F13E0565479D265>79
D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F13E01B
F0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C04F13
004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C>I<91
260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801E0EB
0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F82A28412FF84
A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C16FC
6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F15C0ED007F04
0714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0A27F
6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0486C
90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>83
D<B800C00103B612FCA5D8000701F8CAEBF000F31F80B3B3B11B3FA26D97C7FC81637F1B
7E6D6D17FE505A6E7E505A6E6D15076E4D5A6E6D4B5A6E6D4B5A6E01F84B5A6E6DDA03FF
C8FC6E6CB46CEB0FFE6F9039F001FFF8030F90B65A030316C0DB007F92C9FC040F14F8DC
007F13805E537CD167>85 D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE00
0113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037F
B5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F0485B485B485B48
90C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1
EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C
387CB641>97 D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE
0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F130070
5A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C
6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49
C7FC020113E033387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F
13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F
484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C
6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101EC
FE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715
C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0
488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E0
6CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFE
EB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<ED
3FFC0203B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC
495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7
007FB512FEA52E547CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FEC
FF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D8
3FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C
6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC
91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12
074848C700031480D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D
003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB712
80010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>I<137F497E000313E0487FA2
487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B54
7BD325>105 D<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108
D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092271F
E07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780137F
DAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3
ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F003
0F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502
FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B6
12C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F4849
6D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3
003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE
011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<
903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9
FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A
0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FB
FE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<
90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013
FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612
FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307
D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15
F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F0307
13F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC
7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB6
35>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FC
A426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEB
FFF86D6C5B021F5B020313802A4D7ECB34>I<B600F00107B5FCA5000101F8C8EA7FE06C
6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F13016D5E8117036D5E6F13076D5E
6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F147C6F13FC6E5C16816E5C16C3A2
6EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F5AA26F5AA26F5AA26F5A6F5A4036
7DB447>118 D<001FB8FC1880A3912680007F130001FCC7B5FC01F0495B495D49495B49
5B4B5B48C75C5D4B5B5F003E4A90C7FC92B5FC4A5B5E4A5B5CC7485B5E4A5B5C4A5B93C8
FC91B5FC495B5D4949EB0F805B495B5D495B49151F4949140092C7FC495A485E485B5C48
5E485B4A5C48495B4815074849495A91C712FFB8FCA37E31357CB43C>122
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 760 448 a Fo(Seman)l(tic-Driv)l(en)46 b(P)l(arallelization)i
(of)d(Lo)t(ops)828 598 y(Op)t(erating)h(on)f(User-De\014ned)g(Con)l
(tainers)715 886 y Fn(Dan)27 b(Quinlan,)h(Markus)e(Sc)n(hordan,)h(Qing)
g(Yi,)h(and)f(Bronis)g(R.)g(de)h(Supinski)1167 1060 y
Fm(La)n(wrence)f(Liv)n(ermore)e(National)h(Lab)r(oratory)-6
b(,)27 b(USA)1121 1152 y Fl(f)p Fk(dquinlan,)42 b(schordan1,)g(yi4,)e
(bronis)p Fl(g)p Fk(@llnl.gov)759 1485 y Fj(Abstract.)j
Fm(W)-6 b(e)16 b(describ)r(e)i(R)n(OSE,)e(a)i(C++)f(infrastructure)h
(for)f(source-to-source)759 1576 y(translation,)33 b(that)e(pro)n
(vides)g(an)h(in)n(terface)g(for)g(programmers)f(to)h(easily)g(write)
759 1668 y(their)23 b(o)n(wn)h(translators)h(for)f(optimizing)f
(user-de\014ned)f(high-lev)n(el)h(abstractions.)759 1759
y(Utilizing)k(the)f(seman)n(tics)g(of)h(these)g(high-lev)n(el)f
(abstractions,)i(w)n(e)e(demonstrate)759 1850 y(the)e(automatic)g
(parallelization)j(of)e(lo)r(ops)g(that)f(iterate)h(o)n(v)n(er)f
(user-de\014ned)f(con-)759 1942 y(tainers)31 b(that)f(ha)n(v)n(e)g(in)n
(terfaces)i(similar)f(to)f(the)g(lists,)i(v)n(ectors)f(and)f(sets)h(in)
f(the)759 2033 y(Standard)23 b(T)-6 b(emplate)24 b(Library)f(\(STL\).)h
(The)g(parallelization)i(is)f(realized)g(in)e(t)n(w)n(o)759
2124 y(phases.)h(First,)h(w)n(e)f(insert)f(Op)r(enMP)h(directiv)n(es)g
(in)n(to)f(a)h(serial)h(program,)e(driv)n(en)759 2215
y(b)n(y)36 b(the)g(recognition)i(of)g(the)e(high-lev)n(el)h
(abstractions,)h(con)n(tainers,)g(that)e(are)759 2307
y(thread-safe.)26 b(Then,)f(w)n(e)g(translate)g(the)g(Op)r(enMP)f
(directiv)n(es)h(in)n(to)g(library)g(rou-)759 2398 y(tines)h(that)g
(explicitly)g(create)g(and)f(manage)h(parallelism.)h(By)f(pro)n(viding)
f(an)h(in-)759 2489 y(terface)21 b(for)f(the)e(programmer)h(to)g
(classify)i(the)e(seman)n(tics)g(of)h(their)f(abstractions,)759
2581 y(w)n(e)j(are)g(able)f(to)h(automatically)g(parallelize)h(op)r
(erations)g(on)e(con)n(tainers,)h(suc)n(h)f(as)759 2672
y(link)n(ed-lists,)i(without)e(resorting)i(to)f(complex)f(lo)r(op)i
(dep)r(endence)e(analysis)h(tec)n(h-)759 2763 y(niques.)k(Our)e
(approac)n(h)i(is)g(consisten)n(t)g(with)g(general)g(goals)h(within)f
Fi(telesc)l(oping)759 2855 y(languages)p Fm(.)523 3134
y Fh(1)112 b(In)m(tro)s(duction)523 3330 y Fn(In)41 b(ob)5
b(ject-orien)n(ted)40 b(languages)g(suc)n(h)h(as)f(C++,)h(abstractions)
e(are)i(a)f(k)n(ey)h(asp)r(ect)g(of)523 3430 y(library)35
b(design,)g(sharing)g(asp)r(ects)h(of)g(language)e(design,)h(whic)n(h)h
(aims)g(to)g(pro)n(vide)f(the)523 3530 y(application)g(dev)n(elop)r(er)
f(with)i(an)f(e\016cien)n(t)g(and)g(con)n(v)n(enien)n(t)f(in)n
(terface.)h(F)-7 b(or)34 b(example,)523 3629 y(the)i(C++)e(Standard)h
(T)-7 b(emplate)36 b(Library)d(\(STL\),)j(parts)f(of)g(whic)n(h)h(are)e
(standardized)523 3729 y(within)25 b(the)f(C++)f(standard)h(libraries,)
e(includes)i(a)g(collection)g(of)g(template)g(classes)f(that)523
3828 y(can)40 b(b)r(e)g(used)g(as)f(con)n(tainers)f(for)i
(user-de\014ned)f(constructs.)g(Some)h(STL)f(con)n(tainers,)523
3928 y(suc)n(h)25 b(as)g(v)n(ectors,)f(pro)n(vide)h(random)g(access)f
(to)h(their)h(elemen)n(ts)g(using)f(an)g(in)n(teger)g(index,)523
4028 y(while)i(other)e(con)n(tainers)g(suc)n(h)h(as)g(lists)g(and)h
(sets)f(pro)n(vide)f(other)h(means)g(to)g(access)f(their)523
4127 y(elemen)n(ts.)33 b(Nev)n(ertheless,)f(all)h(STL)g(con)n(tainers)f
(pro)n(vide)g(sequen)n(tial)g(elemen)n(t)i(accesses)523
4227 y(and)28 b(th)n(us)h(all)f(of)g(them)h(can)f(b)r(e)h(used)f(in)g
(the)h(co)r(de)f(fragmen)n(t)g(in)g(Figure)g(1.)g(This)g(design)523
4327 y(strategy)35 b(p)r(ermits)h(all)g(con)n(tainers)f(to)h(b)r(e)g
(used)g(in)n(terc)n(hangeably)f(in)h(algorithms)f(that)523
4426 y(pro)r(cess)26 b(a)i(sequence)f(of)g(elemen)n(ts.)648
4526 y(A)n(t)k(this)f(lev)n(el,)h(library)e(design)h(greatly)g(resem)n
(bles)f(language)g(design,)h(but)i(without)523 4625 y(increasing)e(the)
i(complexit)n(y)f(of)g(the)h(compiler.)f(The)h(term)f
Fg(telesc)l(oping)k(languages)d Fn(w)n(as)523 4725 y(coined)g(b)n(y)f
(Kennedy)h([1])g(in)g(2000.)e(Within)j(telescoping)f(languages,)e(a)h
(base)h(language)523 4825 y(is)40 b(c)n(hosen)f(and)g(domain-sp)r
(eci\014c)h(t)n(yp)r(es)f(are)g(constructed)h(en)n(tirely)f(within)h
(the)h(base)523 4924 y(language)25 b(with)i(no)f(language)e(extension.)
i(The)h(iterativ)n(e)e(progression)f(of)i(a)g(library)f(to)h(a)p
eop
%%Page: 2 2
2 1 bop 523 232 a Fm(2)523 448 y Fn(higher-lev)n(el)26
b(language)g(comes)g(only)i(with)f(compile-time)h(supp)r(ort)f(for)g
(its)h(user-de\014ned)523 548 y(t)n(yp)r(es.)38 b(The)f(telescoping)g
(asp)r(ect)g(relates)g(to)g(the)h(optional)f(use)h(of)f(the)h
(compile-time)523 648 y(optimizations,)32 b(b)r(ecause)f(the)i
(abstractions)d(are)h(de\014ned)h(fundamen)n(tally)g(as)g(a)f(library)
523 747 y(completely)c(within)g(the)g(base)f(language.)f(The)i(idea)f
(of)h(higher-lev)n(el)e(languages)g(driving)523 847 y(the)31
b(generation)f(of)g(lo)n(w)n(er-lev)n(el)f(C++)h(co)r(de)h(w)n(as)e
(originally)h(discussed)g(b)n(y)h(Stroustrup)523 946
y(in)26 b(1994)e([2])i(\(page)f(204\).)g(The)h(tec)n(hniques)f(presen)n
(ted)g(in)i(this)f(pap)r(er)f(are)g(a)g(sp)r(ecial)h(case)523
1046 y(of)e(compiler)g(supp)r(ort)g(for)g(high-lev)n(el)g(abstractions)
f(suc)n(h)h(as)f(those)i(de\014ned)f(in)h(the)g(STL.)523
1146 y(Sp)r(eci\014cally)k(in)g(this)g(pap)r(er)g(w)n(e)f(utilize)i
(the)f(seman)n(tics)f(of)h(the)h(high-lev)n(el)e(abstractions)523
1245 y(and)f(generate)g(lo)n(w-lev)n(el)f(C++)h(co)r(de.)677
1499 y Ff(MyContainer)j(myContainer;)677 1565 y(MyContainer::iterator)f
(p;)677 1631 y(for)i(\(p)g(=)f(myContainer.begin\(\);)f(p)h(!=)h
(myContainer.end\(\);)e(++p\))h({)739 1698 y(foo\(*p\);)677
1764 y(})797 2028 y Fj(Fig.)14 b(1.)26 b Fm(Example:)f(a)h(co)r(de)g
(fragmen)n(t)f(pro)r(cessing)j(a)e(user-de\014ned)e(con)n(tainer)648
2328 y Fn(Due)h(to)g(the)g(increasing)f(p)r(opularit)n(y)g(of)h(the)g
(STL)g(library)-7 b(,)24 b(more)g(and)h(more)f(libraries)523
2427 y(pro)n(vide)32 b(con)n(tainers)f(that)i(conform)f(to)h(the)h(STL)
e(in)n(terface.)h(Since)g(the)g(library)f(dev)n(el-)523
2527 y(op)r(er)27 b(kno)n(ws)g(the)i(seman)n(tics)e(of)h(the)g
(library's)f(con)n(tainers)f(and)i(of)g(eac)n(h)f(elemen)n(t)h(in)h
(the)523 2627 y(con)n(tainers,)d(he)h(can)g(write)g(a)g
Fg(sour)l(c)l(e-to-sour)l(c)l(e)i(tr)l(anslator)e Fn(that)h(optimizes)f
(the)h(p)r(erfor-)523 2726 y(mance)k(of)g(ev)n(ery)f(program)f(that)j
(uses)f(his)g(library)-7 b(.)31 b(F)-7 b(or)32 b(example,)g(in)g
(Figure)g(1,)g(if)h(the)523 2826 y(library)d(writer)h(kno)n(ws)g(that)h
(none)f(of)h(the)g(elemen)n(ts)f(in)h Fg(MyContainer)i
Fn(can)d(b)r(e)h(aliased)523 2925 y(and)f(that)h(the)f(function)h
Fg(fo)l(o)g Fn(is)f(side-e\013ect)h(free)f(\(i.e.,)g(it)h(do)r(es)f
(not)g(mo)r(dify)h(an)n(y)e(global)523 3025 y(v)-5 b(ariables\),)23
b(he)h(can)f(safely)g(parallelize)f(the)i(surrounding)f(lo)r(op)g(and)h
(th)n(us)f(ac)n(hiev)n(e)g(b)r(etter)523 3125 y(p)r(erformance)g(for)h
(the)h(user's)f(application.)g(Due)g(to)h(the)g(undecidabilit)n(y)f(of)
g(precise)g(alias)523 3224 y(and)i(con)n(trol-\015o)n(w)d(analysis,)i
(it)h(could)g(b)r(e)g(imp)r(ossible)g(for)f(a)g(compiler)g(to)h
(automatically)523 3324 y(\014gure)35 b(out)g(this)h(seman)n(tic)e
(information.)h(Th)n(us,)g(our)g(approac)n(h)e(can)i(b)r(etter)h
(optimize)523 3424 y(an)n(y)30 b(application)g(co)r(de)h(that)g(uses)f
(the)h(library)f(since)g(w)n(e)h(allo)n(w)e(the)j(library)d(dev)n(elop)
r(er)523 3523 y(to)38 b(comm)n(unicate)g(this)h(seman)n(tic)e
(information)h(to)g(the)h(source-to-source)c(translator.)523
3623 y(The)28 b(application)f(dev)n(elop)r(er)f(sees)h(only)g(an)h
(automated)f(pro)r(cess.)648 3729 y(W)-7 b(e)27 b(presen)n(t)f(R)n
(OSE,)g(a)g(C++)g(source-to-source)d(infrastructure)j(esp)r(ecially)g
(for)h(this)523 3828 y(purp)r(ose)19 b([3,)13 b(4].)19
b(In)h(addition)f(to)g(b)r(eing)h(a)f(general)e(source-to-source)f
(compiler)j(infrastruc-)523 3928 y(ture,)32 b(R)n(OSE)f(pro)n(vides)g
(sev)n(eral)f(mec)n(hanisms,)h(including)h(a)g(v)n(ery)f(high)h(lev)n
(el)f(Abstract)523 4028 y(Syn)n(tax)h(T)-7 b(ree)32 b(\(AST\))h(that)g
(main)n(tains)f(the)h(original)e(structure)h(of)g(the)h(user)f
(program,)523 4127 y(tra)n(v)n(ersal)h(facilities)j(for)g(mo)r(difying)
g(the)g(AST,)h(and)f(a)f(string)h(in)n(terface)f(for)h(inserting)523
4227 y(new)d(C++)f(co)r(de)h(fragmen)n(ts)e(\(whic)n(h)i(are)f
(represen)n(ted)g(as)g(strings\))g(in)n(to)h(the)g(AST)g(di-)523
4327 y(rectly)-7 b(.)34 b(Since)g(w)n(e)f(ha)n(v)n(e)g(not)g(only)h
(the)g(syn)n(tax)f(of)h(the)g(original)e(program)g(but)i(also)f(its)523
4426 y(full)25 b(t)n(yp)r(e)g(resolution)f(within)h(the)g(R)n(OSE)f
(AST,)h(w)n(e)f(can)h(use)f(sp)r(eci\014c)h(user-de\014ned)f(t)n(yp)r
(e)523 4526 y(information)38 b(as)f(a)h(basis)g(for)g(optimizing)g(an)g
(application.)g(Th)n(us,)g(the)h(compiler)f(has)523 4625
y(fundamen)n(tally)27 b(more)g(information,)g(enabling)f(greater)g(lev)
n(els)h(of)g(optimization.)g(In)h(the)523 4725 y(case)i(of)h
(parallelizing)e(user-de\014ned)h(con)n(tainers,)f(for)h(example,)h(w)n
(e)f(can)g(automate)h(the)523 4825 y(in)n(tro)r(duction)22
b(of)g(Op)r(enMP)g(directiv)n(es)f(in)n(to)h(otherwise)g(serial)f(co)r
(de)h(b)r(ecause)g(the)g(library)523 4924 y(writer)29
b(guaran)n(tees)e(the)j(required)e(seman)n(tics.)h(Based)f(on)h(the)h
(additional)f(seman)n(tics)f(of)p eop
%%Page: 3 3
3 2 bop 3367 232 a Fm(3)523 448 y Fn(user-de\014ned)28
b(abstractions,)f(this)i(approac)n(h)e(p)r(ermits)i(parallel)f
(execution)g(of)h(appropri-)523 548 y(ate)37 b(fundamen)n(tally)g
(serial)e(co)r(de.)i(Section)g(2)g(presen)n(ts)f(the)h(R)n(OSE)f
(infrastructure)g(in)523 648 y(more)27 b(detail.)648
747 y(Using)18 b(the)g(R)n(OSE)g(approac)n(h)e(for)i(pro)r(cessing)f
(user-de\014ned)h(abstractions,)f(w)n(e)h(presen)n(t)523
847 y(a)29 b(source-to-source)e(translator)h(that)i(automatically)e(in)
n(tro)r(duces)h(Op)r(enMP)h(directiv)n(es)523 946 y(in)e(lo)r(op)f
(computations)g(on)g(STL-lik)n(e)g(con)n(tainer)f(classes)g(suc)n(h)h
(as)g(the)h(one)f(in)h(Figure)e(1.)523 1046 y(The)32
b(only)f(additional)g(information)g(that)h(needs)f(to)h(b)r(e)g(pro)n
(vided)e(b)n(y)i(the)g(library)e(pro-)523 1146 y(grammer)i(is)h(the)h
(set)f(of)g(con)n(tainer)f(classes)g(that)i(disallo)n(w)e(aliased)g
(elemen)n(ts)h(and)h(the)523 1245 y(side-e\013ects)23
b(of)g(library)f(functions.)i(W)-7 b(e)24 b(then)f(in)n(v)n(ok)n(e)f
(another)g(translator)g(within)i(R)n(OSE)523 1345 y(to)36
b(recognize)e(sp)r(eci\014c)h(Op)r(enMP)h(pragma)e(directiv)n(es)g(and)
i(to)f(translate)g(these)h(direc-)523 1445 y(tiv)n(es)28
b(\(along)g(with)h(their)g(asso)r(ciated)f(co)r(de)g(fragmen)n(ts\).)g
(The)h(\014nal)g(result)f(is)h(a)f(parallel)523 1544
y(program)e(that)h(explicitly)h(creates)f(and)g(manages)f(parallelism.)
523 1807 y Fh(2)112 b(Infrastructure)523 2003 y Fn(The)30
b(R)n(OSE)e(infrastructure)h(o\013ers)g(sev)n(eral)f(comp)r(onen)n(ts)h
(to)g(build)h(a)f(source-to-source)523 2102 y(translator.)41
b(A)i(complete)f(C++)g(fron)n(tend)g(is)g(a)n(v)-5 b(ailable)42
b(that)g(generates)f(an)i(ob)5 b(ject-)523 2202 y(orien)n(ted)33
b(annotated)g(abstract)f(syn)n(tax)h(tree)g(\(AST\))i(as)e(an)g(in)n
(termediate)g(represen)n(ta-)523 2302 y(tion.)19 b(Sev)n(eral)f
(di\013eren)n(t)h(comp)r(onen)n(ts)g(can)g(b)r(e)h(used)f(to)g(build)h
(the)f(midend)h(of)f(a)g(translator)523 2401 y(that)28
b(op)r(erates)f(on)h(the)g(AST)g(to)g(implemen)n(t)g(transformations:)e
(a)i(prede\014ned)g(tra)n(v)n(ersal)523 2501 y(mec)n(hanism;)23
b(a)f(restructuring)g(mec)n(hanism;)h(and)g(an)g(attribute)g(ev)-5
b(aluation)22 b(mec)n(hanism.)523 2601 y(Other)31 b(features)g(include)
h(parsing)e(of)h(Op)r(enMP)h(directiv)n(es)e(and)h(in)n(tegrating)g
(these)g(di-)523 2700 y(rectiv)n(es)i(in)n(to)g(the)h(AST.)g(A)g(C++)f
(bac)n(k)n(end)g(can)g(b)r(e)h(used)g(to)f(unparse)g(the)h(AST)g(and)
523 2800 y(generate)26 b(C++)h(co)r(de)h(\(see)f(Figure)g(2\).)523
3757 y
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 523 3757 a @beginspecial 0 @llx 0 @lly 776 @urx
159 @ury 3458 @rwi 899 @rhi @setspecial
%%BeginDocument: ROSEinfrastructure.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ROSEinfrastructure.fig
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Tue Jul  8 20:09:11 2003
%%For: dquinlan@tux49.llnl.gov (Daniel J. Quinlan)
%%BoundingBox: 0 0 776 159
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 159 moveto 0 0 lineto 776 0 lineto 776 159 lineto closepath clip newpath
-8.3 187.2 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 1200 1200 m 3600 1200 l 3600 2400 l 1200 2400 l
 cp gs col0 s gr 
% Polyline
n 5400 1200 m 7800 1200 l 7800 2400 l 5400 2400 l
 cp gs col0 s gr 
% Polyline
n 9600 1200 m 12000 1200 l 12000 2400 l 9600 2400 l
 cp gs col0 s gr 
% Polyline
gs  clippath
1215 1875 m 1215 1725 l 967 1725 l 1177 1800 l 967 1875 l cp
eoclip
n 150 1800 m
 1200 1800 l gs col0 s gr gr

% arrowhead
15.000 slw
n 967 1875 m 1177 1800 l 967 1725 l 967 1875 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
7425 2385 m 7275 2385 l 7275 2633 l 7350 2423 l 7425 2633 l cp
eoclip
n 10050 2400 m 10050 2850 l 7350 2850 l
 7350 2400 l gs col0 s gr gr

% arrowhead
15.000 slw
n 7425 2633 m 7350 2423 l 7275 2633 l 7425 2633 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
3075 1215 m 3225 1215 l 3225 967 l 3150 1177 l 3075 967 l cp
eoclip
n 5850 1200 m 5850 750 l 3150 750 l
 3150 1200 l gs col0 s gr gr

% arrowhead
15.000 slw
n 3075 967 m 3150 1177 l 3225 967 l 3075 967 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
5415 1875 m 5415 1725 l 5167 1725 l 5377 1800 l 5167 1875 l cp
eoclip
n 3600 1800 m
 5400 1800 l gs col0 s gr gr

% arrowhead
15.000 slw
n 5167 1875 m 5377 1800 l 5167 1725 l 5167 1875 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
9615 1875 m 9615 1725 l 9367 1725 l 9577 1800 l 9367 1875 l cp
eoclip
n 7800 1800 m
 9600 1800 l gs col0 s gr gr

% arrowhead
15.000 slw
n 9367 1875 m 9577 1800 l 9367 1725 l 9367 1875 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
13065 1875 m 13065 1725 l 12817 1725 l 13027 1800 l 12817 1875 l cp
eoclip
n 12000 1800 m
 13050 1800 l gs col0 s gr gr

% arrowhead
15.000 slw
n 12817 1875 m 13027 1800 l 12817 1725 l 12817 1875 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
 [60] 0 sd
n 6300 1200 m 6300 1500 l
 7800 1500 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 5475 2100 m 7080 2100 l
 7080 2400 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
5925 2385 m 5775 2385 l 5775 2633 l 5850 2423 l 5925 2633 l cp
eoclip
n 5850 2400 m 5850 2850 l 6600 2850 l
 6600 2400 l gs col0 s gr gr

% arrowhead
15.000 slw
n 5925 2633 m 5850 2423 l 5775 2633 l 5925 2633 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
gs  clippath
6525 1215 m 6675 1215 l 6675 967 l 6600 1177 l 6525 967 l cp
eoclip
n 6600 1200 m 6600 750 l 7350 750 l
 7350 1200 l gs col0 s gr gr

% arrowhead
15.000 slw
n 6525 967 m 6600 1177 l 6675 967 l 6525 967 l  cp gs 0.00 setgray ef gr  col0 s
/Helvetica-Bold ff 300.00 scf sf
1875 1875 m
gs 1 -1 sc (frontend) col0 sh gr
/Helvetica-Bold ff 300.00 scf sf
6075 1875 m
gs 1 -1 sc (midend) col0 sh gr
/Helvetica-Bold ff 300.00 scf sf
10275 1875 m
gs 1 -1 sc (backend) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
7800 3075 m
gs 1 -1 sc (unparsed AST fragment) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
8400 1650 m
gs 1 -1 sc (AST) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
225 1575 m
gs 1 -1 sc (C++ source) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
4350 1650 m
gs 1 -1 sc (AST) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
12075 1650 m
gs 1 -1 sc (C++ source) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
6330 1410 m
gs 1 -1 sc (attribute evaluation) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
5445 2295 m
gs 1 -1 sc (restructure operators) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
6090 3075 m
gs 1 -1 sc (AST) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
6855 615 m
gs 1 -1 sc (AST) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
3450 600 m
gs 1 -1 sc (\(completed\) source fragment) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 3405 3757 a
 currentpoint grestore moveto
 3405 3757 a 570 3932 a Fj(Fig.)15
b(2.)25 b Fm(R)n(OSE)g(Source-T)-6 b(o-Source)25 b(infrastructure)h
(with)g(fron)n(tend/bac)n(k)n(end)f(rein)n(v)n(o)r(cation)523
4363 y Fe(2.1)95 b(F)-8 b(ron)m(tend)523 4526 y Fn(W)h(e)30
b(use)f(the)h(Edison)e(Design)h(Group)g(C++)g(fron)n(tend)g(\(EDG\))h
([5])f(to)g(parse)g(C++)f(pro-)523 4625 y(grams.)e(The)h(EDG)g(fron)n
(tend)f(p)r(erforms)g(a)h(full)g(t)n(yp)r(e)h(ev)-5 b(aluation)26
b(of)h(the)g(C++)f(program)523 4725 y(and)37 b(then)h(generates)e(an)h
(AST,)h(whic)n(h)f(is)h(represen)n(ted)e(as)g(a)h(C)h(data)f
(structure.)g(W)-7 b(e)523 4825 y(translate)25 b(this)h(data)g
(structure)f(in)n(to)h(an)g(ob)5 b(ject-orien)n(ted)24
b(abstract)h(syn)n(tax)g(tree)h(\(AST\))523 4924 y(whic)n(h)g(is)g
(used)f(b)n(y)h(the)g(midend)h(as)e(an)h(in)n(termediate)f(represen)n
(tation.)f(W)-7 b(e)27 b(use)e(Sage)g(I)r(I)r(I)p eop
%%Page: 4 4
4 3 bop 523 232 a Fm(4)523 448 y Fn(as)26 b(an)h(in)n(termediate)f
(represen)n(tation,)g(whic)n(h)h(w)n(e)f(ha)n(v)n(e)g(dev)n(elop)r(ed)g
(as)h(a)f(revision)g(of)h(the)523 548 y(Sage)g(I)r(I)h([6])f(AST)h
(restructuring)e(to)r(ol.)523 824 y Fe(2.2)95 b(Midend)523
1017 y Fn(The)28 b(midend)g(supp)r(orts)f(restructuring)g(of)g(the)h
(AST.)g(The)g(programmer)d(can)j(add)f(co)r(de)523 1117
y(to)g(the)g(AST)h(b)n(y)f(sp)r(ecifying)g(a)f(source)g(string)h(using)
f(C++)h(syn)n(tax,)f(or)g(b)n(y)h(constructing)523 1216
y(subtrees)33 b(no)r(de)h(b)n(y)g(no)r(de.)g(A)g(program)e
(transformation)g(consists)h(of)h(a)f(series)g(of)h(AST)523
1316 y(restructuring)27 b(op)r(erations,)h(eac)n(h)g(of)g(whic)n(h)h
(sp)r(eci\014es)f(a)g(lo)r(cation)g(in)h(the)g(AST)g(where)f(a)523
1416 y(co)r(de)f(fragmen)n(t)g(\(sp)r(eci\014ed)h(as)e(a)h(C++)g
(source)f(string)h(or)f(as)h(an)g(AST)h(subtree\).)f(should)523
1515 y(b)r(e)h(inserted,)f(deleted,)h(or)f(replaced.)648
1620 y(The)d(order)f(of)h(the)h(restructuring)e(op)r(erations)g(is)i
(based)f(on)g(a)g(pre-de\014ned)g(tra)n(v)n(ersal.)523
1720 y(A)37 b(transformation)e(tra)n(v)n(erses)f(the)j(AST)g(and)f(in)n
(v)n(ok)n(es)f(m)n(ultiple)i(restructuring)e(op)r(er-)523
1820 y(ations)40 b(on)g(the)g(AST.)h(T)-7 b(o)40 b(address)f(the)i
(problem)f(of)g(restructuring)f(the)i(AST)g(while)523
1919 y(tra)n(v)n(ersing)20 b(it,)k(w)n(e)f(mak)n(e)f(restructuring)f
(op)r(erations)h(side-e\013ect)h(free)g(functions)g(that)g(de-)523
2019 y(\014ne)f(a)f(mapping)g(from)h(one)f(subtree)g(of)h(the)g(AST)g
(to)f(another)g(subtree.)g(The)h(new)f(subtree)523 2119
y(is)k(not)g(inserted)g(un)n(til)h(after)e(the)i(complete)f(tra)n(v)n
(ersal)e(of)i(the)g(original)f(subtree.)h(W)-7 b(e)25
b(pro-)523 2218 y(vide)f(in)n(terfaces)f(for)g(in)n(v)n(oking)f
(restructuring)g(op)r(erations)h(that)h(bu\013er)g(these)f(op)r
(erations)523 2318 y(to)28 b(ensure)e(that)i(no)g(subtrees)f(are)f
(replaced)h(while)h(they)g(are)e(b)r(eing)i(tra)n(v)n(ersed.)648
2423 y(The)39 b(midend)h(also)e(pro)n(vides)g(an)h(attribute)g(ev)-5
b(aluation)39 b(mec)n(hanism)g(that)g(allo)n(ws)523 2522
y(the)g(computation)f(of)g(arbitrary)e(attribute)i(v)-5
b(alues)38 b(for)g(AST)g(no)r(des.)g(During)g(tra)n(v)n(er-)523
2622 y(sal,)33 b(con)n(text)h(information)f(can)h(b)r(e)g(passed)f(do)n
(wn)h(the)g(AST)h(as)e(inherited)h(attributes,)523 2722
y(and)c(results)g(of)h(transforming)e(a)h(subtree)g(can)g(b)r(e)h
(passed)f(up)h(the)g(tree)f(as)g(syn)n(thesized)523 2821
y(attributes.)j(Examples)f(for)g(inherited)h(and)g(syn)n(thesized)f
(attributes)h(include)h(the)f(t)n(yp)r(e)523 2921 y(information)h(of)h
(ob)5 b(jects,)34 b(the)h(sizes)f(of)h(arra)n(ys,)d(the)j(nesting)g
(lev)n(els)e(of)i(lo)r(ops)f(and)h(the)523 3021 y(scop)r(es)d(of)g
(asso)r(ciated)f(pragma)g(statemen)n(ts.)h(These)g(attributes)g(can)g
(then)h(b)r(e)g(used)f(to)523 3120 y(compute)j(constrain)n(ts)f(on)h
(transformations)e(|)i(for)f(example,)h(to)g(decide)g(whether)g(to)523
3220 y(apply)27 b(a)h(restructuring)e(op)r(eration)g(on)i(a)f
(particular)f(AST)i(no)r(de.)648 3325 y(Our)35 b(infrastructure)h(supp)
r(orts)f(the)i(use)f(of)h(C++)e(source)g(strings)g(to)i(de\014ne)f(co)r
(de)523 3425 y(fragmen)n(ts.)26 b(An)n(y)h(source)f(string)g(that)i
(represen)n(ts)d(a)i(v)-5 b(alid)27 b(declaration,)f(statemen)n(t)h
(list,)523 3524 y(or)19 b(expression)f(can)h(sp)r(ecify)h(a)g(co)r(de)f
(pattern)h(to)f(b)r(e)i(inserted)e(in)n(to)g(the)i(AST.)f(The)f
(transla-)523 3624 y(tion)k(of)f(a)g(source)g(co)r(de)g(string,)g
Fd(s)p Fn(,)h(in)n(to)f(an)g(AST)h(fragmen)n(t,)f(is)h(p)r(erformed)f
(b)n(y)g(rein)n(v)n(oking)523 3723 y(the)29 b(fron)n(tend.)f(Our)g
(system)h(extends)f Fd(s)h Fn(to)f(form)h(a)f(complete)g(program,)f
(whic)n(h)h(it)h(then)523 3823 y(parses)20 b(in)n(to)g(an)h(AST)h(b)n
(y)e(rein)n(v)n(oking)f(the)j(fron)n(tend.)e(F)-7 b(rom)21
b(this)g(AST,)h(it)f(\014nally)g(extracts)523 3923 y(the)j(AST)g
(fragmen)n(t)f(that)h(corresp)r(onds)d(to)j Fd(s)p Fn(.)f(This)h(AST)g
(fragmen)n(t)f(is)g(inserted)g(in)n(to)h(the)523 4022
y(AST)k(of)g(the)g(original)e(program.)648 4127 y(F)-7
b(urther,)38 b(w)n(e)g(pro)n(vide)f(an)i(abstract)e(C++)h(grammar)e
(whic)n(h)j(co)n(v)n(ers)d(all)i(of)h(C++)523 4227 y(and)26
b(de\014nes)h(the)g(set)g(of)f(all)g(abstract)g(syn)n(tax)g(trees.)g(W)
-7 b(e)27 b(ha)n(v)n(e)e(in)n(tegrated)h(an)g(attribute)523
4327 y(grammar)g(to)r(ol)i(whic)n(h)g(allo)n(ws)f(the)i(sp)r
(eci\014cation)e(of)i(attribute)f(ev)-5 b(aluations)27
b(on)h(the)h(ab-)523 4426 y(stract)36 b(C++)g(grammar.)e(The)j(grammar)
e(is)h(abstract)g(with)h(resp)r(ect)f(to)h(the)g(concrete)523
4526 y(C++)28 b(grammar)e(and)i(do)r(es)h(not)f(con)n(tain)g(an)n(y)f
(C++)h(syn)n(tax.)g(Similar)g(to)g(our)g(tra)n(v)n(ersal)523
4625 y(mec)n(hanism,)22 b(source-strings)d(and)j(restructure)e(op)r
(erators)g(can)i(b)r(e)g(used)g(in)g(the)h(seman)n(tic)523
4725 y(actions)28 b(of)g(the)h(attribute)f(grammar.)f(In)i(section)f
(3.3)f(w)n(e)h(sho)n(w)g(ho)n(w)g(a)g(transformation)523
4825 y(can)19 b(b)r(e)h(sp)r(eci\014ed)g(using)f(the)g(abstract)g
(grammar,)e(source-strings,)g(and)i(AST)h(restructure)523
4924 y(op)r(erations.)p eop
%%Page: 5 5
5 4 bop 3367 232 a Fm(5)523 448 y Fe(2.3)95 b(Bac)m(k)m(end)523
656 y Fn(The)32 b(bac)n(k)n(end)e(unparses)h(the)g(AST)h(and)g
(generates)e(C++)g(source)h(co)r(de.)g(It)h(can)f(either)523
756 y(unparse)23 b(all)g(included)h(\(header\))g(\014les)f(or)g(the)h
(source)e(\014le\(s\))i(sp)r(eci\014ed)g(on)f(the)h(command)523
855 y(line)29 b(only)-7 b(.)28 b(This)g(feature)g(is)g(imp)r(ortan)n(t)
g(when)h(transforming)e(user-de\014ned)g(data)h(t)n(yp)r(es,)523
955 y(for)i(example,)g(when)h(adding)f(compiler-generated)e(metho)r
(ds.)j(Using)g(this)f(feature)h(pre-)523 1055 y(serv)n(es)22
b(all)h(C)h(prepro)r(cessor)d(\(cpp\))k(con)n(trol)d(structures)h
(\(including)h(commen)n(ts\).)f(Output)523 1154 y(co)r(de)h(from)h(the)
f(bac)n(k)n(end)g(app)r(ears)f(nearly)h(indistinguishable)g(from)g
(input)i(co)r(de,)e(except)523 1254 y(for)j(transformations,)f(to)h
(simplify)h(acceptance)f(b)n(y)g(users.)648 1362 y(The)40
b(bac)n(k)n(end)f(can)g(also)g(b)r(e)h(in)n(v)n(ok)n(ed)f(during)g(a)h
(transformation,)e(to)i(obtain)g(the)523 1462 y(source)28
b(co)r(de)g(string)g(that)h(corresp)r(onds)e(to)i(a)f(subtree)g(of)h
(the)g(AST.)g(Suc)n(h)g(a)f(string)g(can)523 1561 y(b)r(e)33
b(com)n(bined)g(with)h(new)f(co)r(de)f(\(also)h(represen)n(ted)e(as)i
(a)f(source)g(string\))g(and)h(inserted)523 1661 y(in)n(to)27
b(the)h(AST.)648 1769 y(Both)i(phases,)h(the)g(in)n(tro)r(duction)g(of)
f(Op)r(enMP)h(directiv)n(es)f(and)h(the)g(translation)f(of)523
1868 y(Op)r(enMP)21 b(directiv)n(es,)f(can)g(b)r(e)h(automated)g(using)
f(the)h(ab)r(o)n(v)n(e)f(mec)n(hanisms,)g(as)g(describ)r(ed)523
1968 y(in)28 b(the)g(follo)n(wing)e(sections.)523 2276
y Fh(3)112 b(P)m(arallelizing)34 b(User-De\014ned)39
b(Con)m(tainers)e(Using)g(Op)s(enMP)523 2517 y Fn(Most)e(mo)r(dern)g
(mac)n(hines)g(ha)n(v)n(e)f(a)h(parallel)f(arc)n(hitecture)g(that)i
(requires)e(applications)523 2616 y(to)25 b(b)r(e)g(e\016cien)n(tly)g
(parallelized)e(in)i(order)f(to)g(ac)n(hiev)n(e)g(high)h(p)r
(erformance.)e(The)i(Op)r(enMP)523 2716 y(standard)d(pro)n(vides)f(a)i
(con)n(v)n(enien)n(t)e(mec)n(hanism)i(to)f(parallelize)g(applications.)
g(It)h(extends)523 2815 y(the)37 b(traditional)e(sequen)n(tial)h
(languages)f(F)-7 b(ortran,)35 b(C)h(and)h(C++)e(to)h(in)n(tro)r(duce)h
(paral-)523 2915 y(lelism)26 b(without)g(requiring)e(the)i(programmer)d
(to)j(manage)e(threads)h(or)g(comm)n(unications)523 3015
y(explicitly)-7 b(.)34 b(Ho)n(w)n(ev)n(er,)e(in)n(tro)r(ducing)h(Op)r
(enMP)g(directiv)n(es)g(in)n(to)h(a)f(sequen)n(tial)g(program)523
3114 y(still)23 b(requires)f(a)g(signi\014can)n(t)h(amoun)n(t)f(of)h(w)
n(ork,)e(although)i(substan)n(tially)f(less)g(than)h(using)523
3214 y(distributed)28 b(memory)f(programming)e(mo)r(dels)j(lik)n(e)f
(MPI.)648 3322 y(In)37 b(addition,)g(curren)n(t)f(use)g(of)h
(distributed)h(memory)e(programming)f(mo)r(dels)h(only)523
3422 y(extends)31 b(to)g(a)f(subset)h(of)g(the)g(n)n(um)n(b)r(er)g(of)f
(pro)r(cessors)f(a)n(v)-5 b(ailable)30 b(on)g(IBM)h(mac)n(hines)f(at)
523 3521 y(LLNL.)c(Sp)r(eci\014cally)-7 b(,)25 b(the)h(limit)h(on)e
(the)h(n)n(um)n(b)r(er)f(of)h(MPI)f(tasks)g(requires)f(a)h(h)n(ybrid)g
(pro-)523 3621 y(gramming)j(mo)r(del)i(that)f(com)n(bines)g(message)f
(passing)g(and)h(shared)g(memory)f(program-)523 3720
y(ming)d(in)h(order)e(to)i(use)f(all)g(of)g(the)h(mac)n(hine's)f(pro)r
(cessors.)e(These)i(h)n(ybrid)g(programming)523 3820
y(mo)r(dels)31 b(signi\014can)n(tly)g(increase)f(the)i(complexit)n(y)f
(of)h(the)f(already)g(di\016cult)h(task)f(of)g(de-)523
3920 y(v)n(eloping)26 b(scien)n(ti\014c)i(applications)f(that)g
(include)h(adv)-5 b(anced)27 b(n)n(umerical)g(algorithms)f(and)523
4019 y(ph)n(ysics,)g(and)h(non-trivial)f(geometrics)g(domains.)g(Th)n
(us,)h(our)f(approac)n(h)g(is)g(particularly)523 4119
y(useful)j(in)f(extending)h(existing)f(distributed)g(memory)g
(applications)f(to)i(use)f(these)g(mo)r(d-)523 4219 y(ern)36
b(computer)g(arc)n(hitectures)f(e\013ectiv)n(ely)-7 b(.)36
b(The)h(automated/simpli\014ed)e(in)n(tro)r(duction)523
4318 y(of)c(parallelism)f(to)h(lev)n(erage)e(the)i(shared)f(memory)g
(no)r(des)h(and,)g(th)n(us,)g(a)f(larger)g(part)g(of)523
4418 y(these)i(mac)n(hines)f(can)g(signi\014can)n(tly)g(impro)n(v)n(e)g
(programmer)e(pro)r(ductivit)n(y)-7 b(.)32 b(The)f(use)h(of)523
4517 y(dual)k(shared)e(memory)h(and)h(distributed)g(memory)f
(programming)e(mo)r(dels)j(is)g(a)f(more)523 4617 y(general)24
b(issue)g(within)i(cluster)f(computing)g(\(using)g(a)g(connected)g(set)
g(of)g(shared)f(memory)523 4717 y(no)r(des\).)648 4825
y(Most)32 b(C++)g(programs,)f(including)i(man)n(y)f(scien)n(ti\014c)h
(applications,)f(use)h(high-lev)n(el)523 4924 y(abstractions)d(that)i
(tailor)f(the)h(user-en)n(vironmen)n(t)e(to)i(a)f(sp)r(eci\014c)h
(application)f(domain.)p eop
%%Page: 6 6
6 5 bop 523 232 a Fm(6)523 448 y Fn(Th)n(us,)28 b(ob)5
b(ject-orien)n(ted)28 b(design)g(creates)f(a)h(programming)f(en)n
(vironmen)n(t)g(that)i(is)g(essen-)523 548 y(tially)d(a)g(programming)e
(language)g(that)i(is)g(more)g(domain-sp)r(eci\014c)f(than)h(a)g
(general)e(pur-)523 648 y(p)r(ose)j(language)f(could)i(allo)n(w,)e
(thereb)n(y)h(impro)n(ving)f(programmer)g(pro)r(ductivit)n(y)-7
b(.)648 754 y(The)35 b(R)n(OSE)g(infrastructure)g(pro)n(vides)f(supp)r
(ort)i(for)f(generating)f(source-to-source)523 853 y(translators)23
b(that)j(essen)n(tially)e(act)i(as)e(compilers)h(for)g(these)g
(domain-sp)r(eci\014c)g(languages.)523 953 y(The)30 b(designer)g(of)g
(the)h(high-lev)n(el)e(abstractions)g(captures)g(the)i(seman)n(tics)e
(of)i(those)f(ab-)523 1053 y(stractions)19 b(so)h(that)g(the)h
(source-to-source)c(translators)h(can)i(generate)f(high)h(p)r
(erformance)523 1152 y(co)r(de)26 b(for)g(the)h(user)e(of)i(the)f
(domain-sp)r(eci\014c)g(language.)f(Generally)-7 b(,)25
b(the)i(designer)e(of)i(the)523 1252 y(abstractions)36
b(will)i(b)r(e)g(a)f(library)f(writer,)h(although)f(nothing)i(prev)n
(en)n(ts)e(the)i(end)g(user)523 1352 y(from)29 b(designing)g(clean)h
(in)n(terfaces)e(and)i(capturing)f(the)h(seman)n(tics)f(for)g(his)h(sp)
r(eci\014c)g(ab-)523 1451 y(stractions.)648 1557 y(In)23
b(this)h(section,)g(w)n(e)f(presen)n(t)g(a)h(mec)n(hanism)f(to)g
(automatically)g(in)n(tro)r(duce)g(Op)r(enMP)523 1657
y(directiv)n(es)34 b(for)g(user-de\014ned)g(STL-lik)n(e)g(con)n
(tainers,)f(whic)n(h)i(is)f(one)g(of)h(the)g(most)g(com-)523
1757 y(monly)27 b(used)h(user-de\014ned)f(abstractions)f(in)i(ob)5
b(ject-orien)n(ted)26 b(programming.)523 2039 y Fe(3.1)95
b(User-De\014ned)31 b(Con)m(tainers)523 2238 y Fn(Scien)n(ti\014c)g
(applications)f(are)g(increasingly)f(using)h(STL,)h(but)g(at)g(presen)n
(t)f(with)h(no)g(path)523 2338 y(a)n(v)-5 b(ailable)29
b(to)n(w)n(ard)f(automated)h(shared)g(memory)g(parallelization.)f
(Clearly)h(our)g(goal)g(in)523 2437 y(addressing)39 b(the)h
(optimization)g(\(parallelization\))f(of)h(user-de\014ned)f(con)n
(tainer)g(classes)523 2537 y(includes)i(ev)n(en)n(tually)f(pro)r
(cessing)f(STL)h(con)n(tainers.)g(Suc)n(h)g(w)n(ork)f(w)n(ould)i(ha)n
(v)n(e)e(broad)523 2637 y(impact)28 b(on)f(ho)n(w)g(STL)h(could)f(b)r
(e)h(used)g(within)g(scien)n(ti\014c)f(programming.)648
2743 y(A)n(t)k(presen)n(t,)g(the)h(R)n(OSE)f(infrastructure)f(do)r(es)i
(not)f(handle)g(templates)h(su\016cien)n(tly)523 2842
y(w)n(ell)f(to)g(address)e(STL)i(optimization)g(directly)-7
b(.)31 b(Figure)f(3)h(presen)n(ts)f(a)h(compromise,)e(an)523
2942 y(example)34 b(con)n(tainer)e(class)i(that)g(is)g(similar)f(to)h
(the)h(STL)f(list)g(class.)f(It)i(has)e(an)h(iden)n(ti-)523
3042 y(cal)d(iterator)e(in)n(terface,)i(but)h(do)r(es)e(not)h(use)g
(templates.)h(The)f(example)f(list)i(class)e(accu-)523
3141 y(rately)23 b(repro)r(duces)g(the)h(same)f(iterator)g(in)n
(terface)g(as)h(is)f(used)h(in)h(STL)f(and)f(more)g(general)523
3241 y(user-de\014ned)31 b(con)n(tainers.)e(The)j(exact)e(details)h(of)
h(the)f(iterator)f(in)n(terface)h(are)f(not)h(par-)523
3341 y(ticularly)26 b(imp)r(ortan)n(t;)g(our)f(approac)n(h)f(could)i(b)
r(e)h(used)f(to)g(parallelize)f(alternativ)n(e)g(meth-)523
3440 y(o)r(ds)33 b(of)g(tra)n(v)n(ersing)e(the)j(elemen)n(ts)f(of)g
(con)n(tainers.)f(F)-7 b(urther,)33 b(the)h(easy)f(construction)f(of)
523 3540 y(compile-time)23 b(transformations)f(with)i(R)n(OSE)f(could)g
(use)g(ev)n(en)g(more)g(precise)g(seman)n(tics)523 3639
y(of)28 b(domain-sp)r(eci\014c)f(con)n(tainers)f(if)i(necessary)-7
b(.)648 3746 y(Figure)37 b(4)g(de\014nes)g(a)g(class)g(to)h(supp)r(ort)
f(the)h(automated)f(transformation)f(of)h(iter-)523 3845
y(ation)44 b(on)h(user-de\014ned)f(con)n(tainers.)f(The)h(automated)h
(transformation)e(pro)r(cess)g(in-)523 3945 y(tro)r(duces)e(new)g(co)r
(de)f(that)i(uses)e(this)i(supp)r(orting)e(class)g(in)n(to)h(the)h
(application.)e(The)523 4045 y Fc(SupportingOmpCon)o(tai)o(ne)o(r)p
1493 4045 27 4 v 25 w(list)c Fn(class)h(builds)h(an)f(arra)n(y)e(of)j
(\014xed)f(size,)h(in)n(ternally)-7 b(,)523 4144 y(con)n(taining)30
b(p)r(oin)n(ters)g(to)h(the)g(con)n(tainer's)f(elemen)n(ts.)g(Using)h
(this)g(arra)n(y)e(the)i(class)f(pro-)523 4244 y(vides)d(indexed)h
(access)e(for)i(the)g(Op)r(enMP)f Fc(parallel)40 b(for)27
b Fn(lo)r(op.)523 4526 y Fe(3.2)95 b(Safet)m(y)33 b(of)e(P)m
(arallelization)523 4725 y Fn(Our)f(goal)f(is)h(to)g(parallelize)f(lo)r
(ops)h(that)g(iterate)g(o)n(v)n(er)f(user-de\014ned)g(con)n(tainers.)g
(Giv)n(en)523 4825 y(a)k(candidate)h(lo)r(op,)f(w)n(e)h(m)n(ust)f
(ensure)h(that)g(it)g(is)g(safe)f(to)h(parallelize,)e(that)i(is,)g(dep)
r(en-)523 4924 y(dences)24 b(m)n(ust)g(not)g(exist)g(b)r(et)n(w)n(een)g
(di\013eren)n(t)h(iterations)e(of)h(the)h(lo)r(op)e(b)r(o)r(dy)49
b([7].)24 b(Figure)f(5)p eop
%%Page: 7 7
7 6 bop 3367 232 a Fm(7)616 865 y Ff(class)30 b(list)g({)677
932 y(//)h(List)f(class)h(defined)f(similarly)f(to)i(STL)g(List)f
(class)g(\(but)g(without)g(templates\))677 1065 y(public:)739
1131 y(//)h(fixed)f(element)g(type)g(for)h(list)f(class)h(\(to)f(avoid)
g(templates\))832 1197 y(typedef)g(int)g(elementType;)677
1330 y(protected:)832 1397 y(struct)g(list_node)g({)986
1463 y(list_node*)g(next;)986 1530 y(list_node*)g(prev;)986
1596 y(elementType)g(data;)924 1662 y(};)832 1795 y(typedef)g
(elementType*)f(pointer;)832 1862 y(typedef)h(elementType&)f
(reference;)832 1995 y(typedef)h(list_node*)f(link_type;)832
2061 y(typedef)h(size_t)g(size_type;)677 2194 y(protected:)832
2260 y(link_type)g(first;)832 2327 y(link_type)g(last;)832
2459 y(size_type)g(length;)677 2592 y(public:)832 2659
y(class)g(iterator)924 2725 y({)986 2792 y(friend)g(class)h(list;)986
2858 y(protected:)1141 2924 y(link_type)e(node;)1141
2991 y(iterator\(link_type)f(x\);)986 3124 y(public:)1141
3190 y(iterator\(\);)1141 3256 y(bool)i(operator==\(const)f(iterator&)g
(x\))i(const;)1141 3323 y(bool)f(operator!=\(const)f(iterator&)g(x\))i
(const;)1141 3389 y(reference)e(operator*\(\))h(const;)1141
3456 y(iterator&)f(operator++\(\);)1141 3522 y(iterator)g
(operator++\(int\);)924 3589 y(};)832 3721 y(list\(\);)832
3854 y(iterator)h(begin\(\);)832 3921 y(iterator)g(end\(\);)832
4053 y(unsigned)g(int)g(size\(\);)832 4120 y(void)g(push_back\(const)f
(reference)h(x\);)616 4186 y(};)823 4450 y Fj(Fig.)15
b(3.)25 b Fm(Example:)h(Co)r(de)g(fragmen)n(t)g(sho)n(wing)g
Fk(list)h Fm(class)g(using)f(iterators.)p eop
%%Page: 8 8
8 7 bop 523 232 a Fm(8)523 406 y Ff(class)30 b
(SupportingOmpContainer_list)e({)677 472 y(//)j(This)f(class)h(is)f
(used)h(to)f(support)g(the)h(transformation)e(of)h(iterations)g(over)g
(STL)677 538 y(//)h(containers)f(to)g(a)h(form)f(with)h(which)f(we)h
(can)f(use)h(OpenMP)f(to)g(parallelize)g(the)g(execution.)677
671 y(public:)832 738 y(typedef)g(list::elementType)f(elementType;)832
804 y(list::elementType**)f(dataPointer;)832 871 y(unsigned)i(int)g
(length;)677 1003 y(public:)832 1070 y
(SupportingOmpContainer_list\(list)d(&)j(l\))h({)986
1136 y(length)f(=)h(l.size\(\);)986 1203 y(dataPointer)f(=)g(new)h
(list::elementType*)d([length];)986 1269 y(assert)i(\(dataPointer)g(!=)
g(NULL\);)986 1402 y(list::iterator)f(p;)986 1468 y(int)i(i)f(=)h(0;)
986 1535 y(for)g(\(p)f(=)h(l.begin\(\);)f(p)g(!=)h(l.end\(\);)f(p++\))g
({)1141 1601 y(dataPointer[i++])e(=)j(&\(*p\);)986 1668
y(})832 1734 y(})832 1867 y(unsigned)f(int)g(size\(\))g({)h(return)f
(length;)g(})832 1933 y(elementType&)f(operator[]\(int)g(i\))i({)924
2000 y(return)g(*dataPointer[i];)832 2066 y(})523 2133
y(};)523 2396 y Fj(Fig.)15 b(4.)j Fm(Example:)g(Co)r(de)i(fragmen)n(t)e
(sho)n(wing)i(the)e(implemen)n(tation)g(of)h(supp)r(orting)g
(abstraction)523 2488 y(for)27 b(Op)r(enMP)e(translation.)523
2771 y Fn(presen)n(ts)34 b(our)g(algorithm)f(for)h(this)h(analysis,)f
(where)g Fc(TestParallelLoo)o(p)29 b Fn(is)34 b(the)h(top-)523
2871 y(lev)n(el)d(function,)g(and)g(function)h Fc(get)p
1702 2871 27 4 v 30 w(modified)p 2084 2871 V 28 w(vars)e
Fn(is)h(in)n(v)n(ok)n(ed)e(to)i(compute)h(the)f(set)523
2970 y(of)c(v)-5 b(ariables)26 b(mo)r(di\014ed)i(b)n(y)f(a)g(list)h(of)
g(arbitrary)d(statemen)n(ts.)648 3070 y(Our)k(algorithm)f(is)i
(di\013eren)n(t)g(from)f(traditional)g(dep)r(endence-based)g(approac)n
(hes)f(in)523 3170 y(that)22 b(the)f(library)f(dev)n(elop)r(er)g
(supplies)i(domain-sp)r(eci\014c)e(information)h(to)g(driv)n(e)f(the)i
(anal-)523 3269 y(ysis.)g(This)g(information)f(allo)n(ws)g(us)h(to)g
(recognize)e(opp)r(ortunities)i(of)g(lo)r(op)g(parallelization)523
3369 y(without)34 b(ha)n(ving)e(to)h(p)r(erform)f(aliasing)g(or)g(in)n
(terpro)r(cedural)f(dep)r(endence)j(analysis.)e(In)523
3468 y(Figure)21 b(5,)g(this)g(information)g(is)g(represen)n(ted)f(as)g
(the)i Fd(user)r(S)5 b(pec)20 b Fn(input)i(parameter,)e(whic)n(h)523
3568 y(con)n(tains)31 b(the)i(follo)n(wing)e(information)g(from)h
(pre-sp)r(eci\014ed)f(inputs)i(b)n(y)f(the)g(library)f(de-)523
3668 y(v)n(elop)r(er.)575 3830 y Fe({)41 b Fc(known)p
889 3830 V 29 w(containers)p Fn(\()p Fd(user)r(S)5 b(pec)p
Fn(\))20 b(A)25 b(set)g(of)f(user-de\014ned)g(con)n(tainers)f(for)h
(whic)n(h)h(the)664 3930 y(library)j(writer)h(guaran)n(tees)e(elemen)n
(t)j(uniqueness,)f(i.e.,)h(the)g(instances)f(of)g(the)h(con-)664
4029 y(tainer)25 b(class)f(do)h(not)g(include)g(duplicated)h(elemen)n
(ts.)f(All)g(of)g(these)g(con)n(tainers)f(m)n(ust)664
4129 y(ha)n(v)n(e)f(an)h(iterator)e(in)n(terface)i(that)g(is)g(similar)
f(to)h(Figure)g(1.)f(Since)h(the)h(elemen)n(ts)f(can-)664
4228 y(not)29 b(b)r(e)f(aliased)g(to)g(eac)n(h)g(other,)g(our)f
(analysis)g(can)h(safely)g(conclude)h(that)f(it)h(is)f(safe)664
4328 y(to)33 b(parallelize)e(a)h(lo)r(op)h(that)g(iterates)f(o)n(v)n
(er)e(the)j(con)n(tainer)f(if)h(the)g(lo)r(op)f(b)r(o)r(dy)h(do)r(es)
664 4428 y(not)28 b(con)n(tain)f(cross-iteration)e(dep)r(endences.)575
4527 y Fe({)41 b Fc(known)p 889 4527 V 29 w(functions)p
Fn(\()p Fd(user)r(S)5 b(pec)p Fn(\))28 b(A)33 b(set)e(of)h
(user-de\014ned)g(functions)g(whose)f(side)h(ef-)664
4626 y(fects)21 b(are)f(kno)n(wn)f(to)i(the)g(library)e(writer.)h
(These)g(functions)h(can)f(include)h(b)r(oth)g(global)664
4726 y(functions)28 b(and)g(the)g(mem)n(b)r(er)f(functions)h(of)f
(user-de\014ned)g(abstractions.)575 4825 y Fe({)41 b
Fc(side)p 845 4825 V 30 w(effects)p Fn(\()p Fd(f)t(;)14
b(user)r(S)5 b(pec)p Fn(\))27 b Fb(8)p Fd(f)37 b Fb(2)29
b Fc(known)p 2123 4825 25 4 v 28 w(functions)l Fn(\()p
Fd(user)r(S)5 b(pec)p Fn(\))31 b(The)g(side)g(ef-)664
4924 y(fects)g(of)g(eac)n(h)f(function)h Fd(f)39 b Fn(de\014ned)31
b(in)g Fd(user)r(S)5 b(pec)p Fn(.)30 b(Sp)r(eci\014cally)-7
b(,)30 b(for)h(eac)n(h)e(function)p eop
%%Page: 9 9
9 8 bop 3367 232 a Fm(9)523 429 y Fj(T)-7 b(estP)n(arallelLo)r(op)p
Fm(\()p Fa(l)q(;)15 b(user)r(S)t(pec)p Fm(\))583 521
y Fa(l)q Fm(:)26 b(lo)r(op)g(to)g(b)r(e)g(parallelized;)583
612 y Fa(user)r(S)t(pec)p Fm(:)f(info.)i(from)e(programmer)583
703 y(return:)g(whether)h(lo)r(op)g Fa(l)h Fm(can)f(b)r(e)f
(parallelized)523 795 y Fa(header)i Fm(=)e(get)p 974
795 24 4 v 28 w(lo)r(op)p 1144 795 V 29 w(header\()p
Fa(l)q Fm(\))523 886 y Fa(body)j Fm(=)d(get)p 891 886
V 28 w(lo)r(op)p 1061 886 V 29 w(b)r(o)r(dy\()p Fa(l)q
Fm(\))523 977 y(if)h(\()p Fa(header)h Fm(iterates)g(o)n(v)n(er)e(a)h
(con)n(tainer)g Fa(c)g Fm(and)642 1068 y Fa(c)c Fl(2)p
Fm(kno)n(wn)p 971 1068 V 28 w(con)n(tainers\()p Fa(user)r(S)t(pec)p
Fm(\))j(\))583 1160 y Fa(cur)p 702 1160 V 30 w(el)q(em)f
Fm(=)i(get)p 1106 1160 V 28 w(curren)n(t)p 1376 1160
V 27 w(elemen)n(t\()p Fa(c)p Fm(\))583 1251 y Fa(l)q(ocal)p
747 1251 V 29 w(v)s(ar)r(s)f Fm(=)g(get)p 1141 1251 V
28 w(lo)r(cal)p 1323 1251 V 29 w(de\014ned)p 1592 1251
V 27 w(v)l(ars\()p Fa(body)s Fm(\))583 1342 y Fa(mod)g
Fm(=)g(get)p 945 1342 V 28 w(mo)r(di\014ed)p 1262 1342
V 27 w(v)l(ars\()p Fa(body)s(;)12 b(user)r(S)t(pec)p
Fm(\))583 1434 y(if)26 b(\()p Fa(mod)21 b Fm(==UNKNO)n(WN\))h(return)j
(false;)583 1525 y(for)h(\(eac)n(h)g(v)l(ariable)g Fa(v)s(ar)d
Fl(2)e Fa(mod)p Fm(\))642 1616 y(if)27 b(\()p Fa(v)s(ar)c
Fl(62)e Fa(l)q(ocal)p 1118 1616 V 29 w(v)s(ar)r(s)k Fm(and)g
Fa(v)s(ar)e Fl(6)p Fm(=)e Fa(cur)p 1808 1616 V 30 w(el)q(em)p
Fm(\))743 1708 y(return)k(false;)583 1799 y(return)g(true;)523
1890 y(return)g(false;)2050 566 y Fj(get)p 2174 566 27
4 v 32 w(mo)r(di\014ed)p 2538 566 V 32 w(v)-5 b(ars)p
Fm(\()p Fa(body)s Fm(,)26 b Fa(user)r(S)t(pec)p Fm(\))2169
658 y Fa(body)s Fm(:)f(statemen)n(ts)g(to)h(b)r(e)g(examined;)2169
749 y Fa(user)r(S)t(pec)p Fm(:)f(info.)i(from)e(programmer)2169
840 y(return:)g(v)l(ariables)i(mo)r(di\014ed)e(b)n(y)f
Fa(body)2109 932 y(F)37 b Fm(=)25 b(get)p 2387 932 24
4 v 28 w(function)p 2690 932 V 28 w(calls\()p Fa(body)s
Fm(\);)2109 1023 y Fa(modV)17 b(ar)r(s)j Fm(=)i Fl(;)p
Fm(;)2109 1114 y(for)27 b(\(eac)n(h)f(function)f(call)i
Fa(f)j Fl(2)21 b Fa(F)11 b Fm(\))2169 1205 y(if)27 b(\()p
Fa(f)i Fl(2)p Fm(kno)n(wn)p 2610 1205 V 28 w(functions\()p
Fa(user)r(S)t(pec)p Fm(\))24 b(\))2229 1297 y Fa(modV)16
b(ar)r(s)25 b Fm(=)g Fa(modV)17 b(ar)r(s)p Fl([)2289
1388 y Fm(side)p 2422 1388 V 28 w(e\013ect\()p Fa(f)t(;)c(user)r(S)t
(pec)p Fm(\);)2169 1479 y(else)27 b(return)e(UNKNO)n(WN)2109
1571 y Fa(modV)17 b(ar)r(s)j Fm(=)26 b Fa(modV)16 b(ar)r(s)p
Fl([)2536 1662 y Fm(get)p 2643 1662 V 28 w(lo)r(cal)p
2825 1662 V 29 w(mo)r(d)p 3002 1662 V 27 w(v)l(ars\()p
Fa(body)s Fm(\);)2109 1753 y(return)25 b Fa(modV)17 b(ar)r(s)1057
2061 y Fj(Fig.)d(5.)26 b Fm(Algorithm)f(for)h(safet)n(y)g(analysis)h
(of)g(parallelization)664 2353 y Fd(f)49 b Fb(2)41 b
Fc(known)p 1075 2353 25 4 v 27 w(functions)m Fn(\()p
Fd(user)r(S)5 b(pec)p Fn(\),)37 b(it)i(de\014nes)e(whic)n(h)h
(parameters)e(and)i(global)664 2453 y(v)-5 b(ariables)29
b(can)h(b)r(e)g(mo)r(di\014ed)h(b)n(y)e Fd(f)9 b Fn(.)30
b(This)g(information)g(allo)n(ws)e(us)i(to)g(compute)h(the)664
2552 y(set)41 b(of)g(v)-5 b(ariables)40 b(mo)r(di\014ed)h(b)n(y)g(an)g
(arbitrary)e(statemen)n(t)h(without)i(resorting)d(to)664
2652 y(in)n(ter-pro)r(cedural)26 b(side)h(e\013ect)h(analysis.)648
2827 y(In)g(Figure)f(5,)g(the)h(function)h Fc(get)p 1712
2827 27 4 v 30 w(modified)p 2094 2827 V 28 w(vars)d Fn(uses)h(the)h
(seman)n(tic)g(information)523 2926 y(of)j(user-de\014ned)g(functions)h
(to)f(help)h(determine)f(the)h(side)f(e\013ects)h(at)f(eac)n(h)f
(iteration)h(of)523 3026 y(the)h(lo)r(op)g(b)r(o)r(dy:)h(for)e(eac)n(h)
g(statemen)n(t)h(within)h(the)g(lo)r(op)e(b)r(o)r(dy)i(and)f(for)f(eac)
n(h)g(function)523 3125 y(in)n(v)n(o)r(cation)24 b Fd(f)34
b Fn(within)26 b(the)f(statemen)n(t,)h(if)f(the)h(function)g(do)r(es)f
(not)g(b)r(elong)g(to)g(the)h(kno)n(wn)523 3225 y(functions)i(in)h
Fd(user)r(S)5 b(pec)p Fn(,)27 b(w)n(e)g(assume)g(that)i(the)f(function)
h(could)e(induce)i(unkno)n(wn)e(side)523 3325 y(e\013ects)41
b(and)g(th)n(us)g(conserv)-5 b(ativ)n(ely)39 b(disallo)n(w)g(the)i(lo)r
(op)g(parallelization.)e(In)i(addition,)523 3424 y(the)30
b(v)-5 b(ariables)28 b(lo)r(cally)h(mo)r(di\014ed)h(b)n(y)g(eac)n(h)e
(statemen)n(t)i(is)f(also)g(returned)g(as)g(part)g(of)h(the)523
3524 y(complete)e(side)f(e\013ect)h(of)g(the)g(lo)r(op)f(b)r(o)r(dy)-7
b(.)648 3626 y(The)24 b(function)g Fc(TestParallelLoop)17
b Fn(uses)24 b(b)r(oth)g(the)g(kno)n(wn)g(con)n(tainers)e(and)i(kno)n
(wn)523 3726 y(functions)29 b(from)g Fd(user)r(S)5 b(pec)28
b Fn(to)g(iden)n(tify)i(opp)r(ortunities)e(of)h(lo)r(op)g
(parallelization.)e(First,)523 3826 y(w)n(e)c(examine)f(the)i
(candidate)f(lo)r(op)f(to)h(see)g(if)h(it)f(iterates)g(o)n(v)n(er)e(a)i
(con)n(tainer)e(that)j(is)f(kno)n(wn)523 3925 y(to)28
b(b)r(e)g(safe)g(to)g(b)r(e)h(parallelized.)e(W)-7 b(e)28
b(then)h(in)n(v)n(ok)n(e)d Fc(get)p 2307 3925 V 30 w(modified)p
2689 3925 V 28 w(vars)h Fn(to)h(summarize)523 4025 y(the)20
b(complete)g(side)f(e\013ect)h(of)g(the)g(lo)r(op)f(b)r(o)r(dy)-7
b(.)20 b(T)-7 b(o)20 b(determine)f(the)h(dep)r(endence)h(pattern)e(of)
523 4125 y(the)24 b(lo)r(op)f(b)r(o)r(dy)-7 b(,)24 b(for)f(ev)n(ery)g
(v)-5 b(ariable)22 b Fd(v)s(ar)27 b Fn(mo)r(di\014ed)d(b)n(y)f(the)h
(lo)r(op)f(b)r(o)r(dy)-7 b(,)24 b(if)h Fd(v)s(ar)h Fn(is)e(exactly)523
4224 y(the)e(elemen)n(t)h(of)e(the)i(con)n(tainer)e(b)r(eing)h
(accessed)e(b)n(y)i(the)h(curren)n(t)e(iteration,)g(or)g(if)i
Fd(v)s(ar)i Fn(is)c(a)523 4324 y(lo)r(cal)k(v)-5 b(ariable)24
b(de\014ned)i(within)g(the)f(lo)r(op)g(b)r(o)r(dy)-7
b(,)26 b(w)n(e)f(kno)n(w)g(that)g(the)h(v)-5 b(ariable)24
b(is)h(priv)-5 b(ate)523 4423 y(to)29 b(the)g(curren)n(t)f(iteration)h
(and)f(th)n(us)h(cannot)g(in)n(tro)r(duce)f(cross-iteration)f(dep)r
(endences;)523 4523 y(otherwise,)e(w)n(e)h(assume)f(that)h(the)g(v)-5
b(ariable)25 b(could)h(b)r(e)g(aliased)f(to)h(a)g(global)e(v)-5
b(ariable)25 b(and)523 4623 y(disallo)n(w)h(the)i(parallelization.)648
4725 y(Note)f(that)g(although)f(the)i(algorithm)e(in)h(Figure)g(5)f(is)
h(more)f(conserv)-5 b(ativ)n(e)26 b(than)h(tra-)523 4825
y(ditional)i(dep)r(endence-based)g(approac)n(hes,)f(it)i(pro)n(vides)e
(a)h(w)n(a)n(y)f(to)i(utilize)g(user-de\014ned)523 4924
y(seman)n(tic)f(information)f(that)i(migh)n(t)f(not)g(b)r(e)g(a)n(v)-5
b(ailable)28 b(to)h(the)h(other)e(systems.)h(F)-7 b(or)29
b(ex-)p eop
%%Page: 10 10
10 9 bop 523 232 a Fm(10)523 448 y Fn(ample,)22 b(ev)n(en)g(the)g(most)
g(aggressiv)n(e)d(parallelizing)i(compilers)g(ma)n(y)g(not)h(b)r(e)h
(able)f(to)g(\014gure)523 548 y(out)e(that)h(the)g(elemen)n(ts)f(of)g
(a)g(user-de\014ned)g(p)r(oin)n(ter-con)n(tainer)e(can)i(nev)n(er)f(b)r
(e)i(aliased.)e(By)523 648 y(con\014guring)j(our)i(system)f(with)h
(general,)f(user-de\014ned)g(t)n(yp)r(e)h(information,)f(w)n(e)h
(therefore)523 747 y(are)j(able)g(to)g(optimize)h(user-de\014ned)f(ob)5
b(jects)27 b(more)g(e\013ectiv)n(ely)g(in)h(v)-5 b(arious)27
b(cases.)523 1022 y Fe(3.3)95 b(Op)s(enMP)30 b(T)-8 b(ransformation)523
1213 y Fn(Op)r(enMP)27 b(transformations)e(are)i(sp)r(eci\014ed)g(as)g
(source-to-source)d(translations.)i(The)h(in-)523 1313
y(put)42 b(program)e(is)h(a)g(sequen)n(tial)g(C++)f(program)g(in)i
(whic)n(h)f(w)n(e)g(in)n(tro)r(duce)g(Op)r(enMP)523 1412
y(pragmas)35 b(and)h(transform)f(parts)h(of)g(the)h(program)d(in)n(to)i
(a)g(canonical)f(Op)r(enMP)h(form)523 1512 y(if)28 b(necessary)-7
b(.)648 1616 y(A)27 b(transformation)e(is)i(sp)r(eci\014ed)g(as)f
(seman)n(tic)h(actions)f(of)h(an)g(abstract)e(C++)i(gram-)523
1716 y(mar.)g(The)h(grammar)e(is)i(abstract)e(with)j(resp)r(ect)e(to)h
(the)g(concrete)f(C++)g(grammar)f(and)523 1816 y(do)r(es)k(not)h
(include)g(an)n(y)f(concrete)g(C++)f(syn)n(tax.)h(The)h(abstract)e
(grammar)g(de\014nes)i(the)523 1915 y(set)20 b(of)f(all)h(abstract)e
(syn)n(tax)h(trees)g(\(ASTs\))h(and)g(co)n(v)n(ers)d(full)j(C++.)f
(Computations)g(on)h(the)523 2015 y(abstract)j(grammar)f(can)i(b)r(e)g
(sp)r(eci\014ed)h(as)e(attribute)h(ev)-5 b(aluations.)23
b(A)n(ttributes)i(can)f(b)r(e)g(of)523 2115 y(arbitrary)e(t)n(yp)r(e,)i
(including)h(source)e(strings.)g(The)h(source-strings)d(sp)r(ecify)k
(new)f(program)523 2214 y(fragmen)n(ts)33 b(for)h(whic)n(h)g(the)g
(corresp)r(onding)f(AST)h(fragmen)n(t)g(can)f(alw)n(a)n(ys)g(b)r(e)h
(obtained)523 2314 y(and)f(inserted)g(in)n(to)g(an)g(existing)g(AST.)h
(T)-7 b(o)33 b(allo)n(w)f(seman)n(tics)h(based)g(transformations,)523
2413 y(whic)n(h)f(require)g(the)h(full)g(t)n(yp)r(e)f(information)g(of)
g(a)g(giv)n(en)g(program,)e(w)n(e)i(mak)n(e)g(the)h(t)n(yp)r(e)523
2513 y(information)22 b(of)g(the)h(program)d(a)n(v)-5
b(ailable)21 b(as)h(annotations)f(of)h(the)h(AST.)g(The)f(a)n(v)-5
b(ailabilit)n(y)523 2613 y(of)29 b(the)h(full)f(t)n(yp)r(e)h
(information)e(is)h(crucial)f(to)h(allo)n(w)f(seman)n(tics)g(based)h
(transformations)523 2712 y(as)e(w)n(e)g(shall)g(demonstrate)g(in)h
(the)g(follo)n(wing)f(example.)648 2817 y(The)39 b(abstract)g(grammar)e
(describ)r(es)i(the)h(set)g(of)g(all)f(ASTs.)h(Because)e(w)n(e)i(do)f
(not)523 2917 y(use)26 b(m)n(ultiple)h(inheritance,)f(the)g(class)g
(hierarc)n(h)n(y)e(of)i(the)g(ob)5 b(ject-orien)n(ted)25
b(AST)i(forms)e(a)523 3016 y(tree.)i(The)h(abstract)e(grammar)f(is)i
(designed)g(suc)n(h)g(that)h(it)g(directly)f(corresp)r(onds)e(to)j(the)
523 3116 y(class)f(hierarc)n(h)n(y)f(and)i(the)g(successor)e
(information)h(of)h(AST)h(no)r(des.)e(Inner)h(no)r(des)g(of)g(the)523
3216 y(class)g(hierarc)n(h)n(y)e(tree)i(corresp)r(ond)f(to)h
(non-terminals)f(in)i(the)g(grammar)d(whereas)i(outer)523
3315 y(no)r(des)36 b(\(leafs\))g(corresp)r(ond)e(to)i(terminals)f(in)h
(the)g(grammar.)e(The)i(corresp)r(ondence)e(is)523 3415
y(made)22 b(explicit)g(b)n(y)g(using)g(the)h(class)e(names)h(as)f
(names)h(for)f(terminals)h(and)g(non-terminals)523 3514
y(resp)r(ectiv)n(ely)-7 b(.)648 3619 y(Our)31 b(presen)n(t)h(v)n
(ersion)f(of)h(the)h(default)g(abstract)e(grammar)g(for)h(full)h(C++)f
(has)f(165)523 3719 y(rules.)18 b(All)i(annotated)e(AST)i(information)e
(gathered)g(b)n(y)h(the)g(fron)n(tend)g(at)f(eac)n(h)h(AST)g(no)r(de)
523 3818 y(is)29 b(a)n(v)-5 b(ailable)27 b(through)h(a)g(v)-5
b(ariable)28 b Fc(astNode)p Fn(.)d(The)k(v)-5 b(ariable)28
b(alw)n(a)n(ys)e(holds)j(a)f(p)r(oin)n(ter)g(to)523 3918
y(the)f(corresp)r(onding)d(AST)j(no)r(de)f(of)g(a)g(parsed)f(terminal.)
h(Information)g(a)n(v)-5 b(ailable)25 b(is)h(t)n(yp)r(e)523
4018 y(information)31 b(for)h(ev)n(ery)f(expression)g(and)h
(declaration,)e(line)j(and)f(column)g(information)523
4117 y(of)c(the)g(original)e(program,)f(etc.)648 4222
y(In)d(the)h(follo)n(wing)e(example)h(w)n(e)g(sho)n(w)g(ho)n(w)f(the)i
(attribute)g(grammar)d(in)j(com)n(bination)523 4322 y(with)g(the)g(use)
f(of)h(source-strings)d(and)i(AST)h(replacemen)n(t)f(op)r(erations,)f
(allo)n(ws)g(to)i(sp)r(ecify)523 4421 y(the)38 b(in)n(tro)r(duction)f
(of)h(Op)r(enMP)f(pragmas)f(and)h(the)h(transformation)e(of)h(for-lo)r
(ops)f(to)523 4521 y(conform)27 b(to)g(the)h(required)f(canonical)f
(form)i(of)f(an)g(omp)h(parallel)e(for.)648 4625 y(In)31
b(the)g(example)g(source)f(in)h(\014g.)g(6)f(w)n(e)h(sho)n(w)f(an)h
(iteration)f(on)h(a)f(user-de\014ned)h(con-)523 4725
y(tainer)38 b(with)g(an)g(iterator.)f(This)h(pattern)g(is)g(frequen)n
(tly)g(used)g(in)g(applications)f(using)523 4825 y(C++98)17
b(standard)i(con)n(tainer)e(classes.)h(The)i(ob)5 b(ject)18
b Fc(f)h Fn(is)g(an)g(instance)g(of)g(the)h(user-de\014ned)523
4924 y(class)i Fc(Foo)p Fn(.)f(The)i(transformation)e(w)n(e)h(presen)n
(t)g(tak)n(es)g(in)n(to)g(accoun)n(t)g(the)h(seman)n(tics)f(of)h(the)p
eop
%%Page: 11 11
11 10 bop 3328 232 a Fm(11)523 417 y(Before)27 b(transformation)677
550 y Ff(Foo)k(f;)g(list)f(l;)677 616 y(...)677 683 y(for)h
(\(list::iterator)e(i)i(=)f(l.begin\(\);)g(i)h(!=)f(l.end\(\);)g(i++\))
h({)739 749 y(f.foo\(*i\);)677 816 y(})523 949 y Fm(After)26
b(transformation)677 1081 y Ff(Foo)31 b(f;)g(list)f(l;)677
1148 y(...)677 1281 y(//)h(Build)f(the)h(supporting)e(container)677
1347 y(SupportingOmpContainer_list)f(l2)j(\(l\);)677
1480 y(#pragma)f(omp)h(parallel)f(for)677 1546 y(for)h(\(int)f(i)h(=)g
(0;)f(i)h(<)g(l2.size\(\);)f(i++\))g({)739 1613 y(f.foobar\()g(l2[i])g
(\);)677 1679 y(})523 1920 y Fj(Fig.)15 b(6.)27 b Fm(An)g(iteration)i
(on)f(a)g(user-de\014ned)f(con)n(tainer)h Fk(l)g Fm(that)g(pro)n(vides)
g(an)g(iterator)h(in)n(terface.)523 2011 y(The)e(ob)t(ject)h
Fk(f)f Fm(is)h(an)e(instance)i(of)g(the)e(user-de\014ned)g(class)i
Fk(Foo)p Fm(.)g(Ob)t(ject)f Fk(l)g Fm(is)h(of)f(t)n(yp)r(e)f
Fk(list)p Fm(.)j(In)523 2103 y(the)24 b(optimization)i(the)e(iterator)i
(is)f(replaced)g(b)n(y)f(co)r(de)i(conforming)f(to)g(the)f(required)g
(canonical)523 2194 y(form)i(of)g(an)g(Op)r(enMP)f(parallel)i(for.)523
2498 y Fn(t)n(yp)r(e)20 b Fc(Foo)f Fn(and)i(the)f(seman)n(tics)g(of)g
(class)f Fc(list)p Fn(.)g(The)h(transformation)e(is)j(therefore)e(sp)r
(eci\014c)523 2598 y(to)28 b(these)f(classes)f(and)i(its)g(seman)n
(tics.)648 2706 y(F)-7 b(or)18 b(the)i(t)n(yp)r(e)g Fc(list)e
Fn(w)n(e)h(kno)n(w)g(that)g(the)h(t)n(yp)r(e)g Fc(iterator)c
Fn(de\014ned)k(in)g(the)g(class)e(follo)n(ws)523 2806
y(the)37 b(iterator)e(pattern)h(as)g(used)g(in)h(the)g(STL.)f(F)-7
b(or)36 b(the)h(t)n(yp)r(e)f Fc(Foo)f Fn(w)n(e)h(kno)n(w)g(that)h(the)
523 2905 y(metho)r(d)27 b Fc(f)e Fn(is)i(thread)e(safe.)h(W)-7
b(e)27 b(sho)n(w)e(the)h(core)f(of)h(a)g(transformation)f(to)h
(transform)f(the)523 3005 y(co)r(de)f(in)n(to)h(the)g(canonical)e(form)
i(of)f(a)g(for-lo)r(op)g(as)g(required)f(b)n(y)i(the)g(Op)r(enMP)f
(standard.)523 3105 y(W)-7 b(e)34 b(also)e(in)n(tro)r(duce)h(the)h(Op)r
(enMP)f(pragma)e(directiv)n(e.)i(Note)g(that)h(the)g(v)-5
b(ariable)32 b Fc(i)h Fn(in)523 3204 y(the)h(transformed)e(co)r(de)h
(is)g(implicitly)g(priv)-5 b(ate)33 b(according)f(to)h(the)g(Op)r(enMP)
g(standard)523 3304 y(2.0)27 b(.)648 3412 y(The)18 b(test,)h
Fc(isUserDefIterato)o(rF)o(or)o(Sta)o(te)o(men)o(t)p
Fn(,)12 b(to)18 b(determine)h(whether)f(the)h(trans-)523
3512 y(formation)27 b(can)h(b)r(e)g(applied,)g(is)g(conserv)-5
b(ativ)n(e.)26 b(It)i(migh)n(t)g(not)g(alw)n(a)n(ys)e(allo)n(w)h(to)h
(p)r(erform)523 3612 y(the)k(optimization)f(although)g(it)h(w)n(ould)f
(b)r(e)h(correct)e(but)i(it)g(is)g(nev)n(er)e(applied)i(when)f(w)n(e)
523 3711 y(cannot)c(ensure)g(that)h(the)g(transformed)e(co)r(de)i(w)n
(ould)f(b)r(e)h(correct.)648 3820 y(In)19 b(the)h(example)f(in)h
(\014g.)f(7)h(the)f(grammar)f(rule)h(of)h Fc(SgScopeStatemen)o(t)14
b Fn(is)19 b(sho)n(wn.)g(The)523 3919 y(terminal)f Fc(SgForStatement)13
b Fn(in)18 b(the)h(example)f(corresp)r(onds)f(to)h(the)h(class)e
Fc(SgForStatement)p Fn(.)523 4019 y(The)27 b(seman)n(tic)f(actions)g
(asso)r(ciated)f(with)i(this)g(rule)g(are)f(executed)g(whenev)n(er)g(a)
g(no)r(de)h(of)523 4119 y(t)n(yp)r(e)e(SgF)-7 b(orStatemen)n(t)24
b(is)h(parsed.)f(The)h(v)-5 b(ariable)23 b Fc(astNode)f
Fn(is)j(a)g(p)r(oin)n(ter)f(to)h(the)g(resp)r(ec-)523
4218 y(tiv)n(e)h(AST)g(no)r(de)f(of)h(the)g(terminal)g(and)f(assigned)g
(b)n(y)g(our)g(supp)r(orting)g(system)h(when)g(the)523
4318 y(scanner)36 b(accesses)f(the)i(tok)n(en)f(stream.)h(Note)f(that)i
(ev)n(ery)d(terminal)i(in)g(the)g(grammar)523 4417 y(corresp)r(onds)26
b(to)h(a)g(no)r(de)h(in)g(the)g(AST,)g(except)g(the)g(paren)n(theses.)
648 4526 y(Metho)r(ds)d(of)f(the)h(ob)5 b(ject)25 b Fc(subst)e
Fn(allo)n(w)g(to)i(insert)g(new)f(source)g(co)r(de)h(and)f(delete)h
(sub-)523 4625 y(trees)h(in)i(the)f(AST.)g(The)h(substitution)f(ob)5
b(ject)27 b Fc(subst)e Fn(bu\013ers)i(pairs)f(of)h(target)f(lo)r
(cation)523 4725 y(and)38 b(string.)f(The)i(substitution)f(is)g(not)g
(p)r(erformed)g(b)r(efore)g(the)g(seman)n(tic)g(actions)f(of)523
4825 y(all)32 b(subtrees)f(of)h(the)g(target)f(lo)r(cation)g(no)r(de)h
(ha)n(v)n(e)f(b)r(een)h(p)r(erformed.)g(This)f(mec)n(hanism)523
4924 y(allo)n(ws)c(to)h(c)n(hec)n(k)f(whether)h(substitutions)g(w)n
(ould)g(op)r(erate)f(on)h(o)n(v)n(erlapping)e(subtrees)h(of)p
eop
%%Page: 12 12
12 11 bop 523 232 a Fm(12)523 448 y Fn(the)30 b(AST)g(\(in)h(the)f
(same)f(attribute)h(ev)-5 b(aluation\).)30 b(In)g(case)f(of)h(o)n(v)n
(erlapping)d(subtrees)i(an)523 548 y(error)d(is)h(rep)r(orted.)648
649 y(The)d(ob)5 b(ject)25 b Fc(query)e Fn(is)i(of)g(t)n(yp)r(e)g
Fc(AstQuery)c Fn(and)k(pro)n(vides)e(frequen)n(tly)i(used)g(metho)r(ds)
523 749 y(for)i(obtaining)f(information)g(stored)h(in)g(annotations)f
(of)h(the)g(AST.)h(These)f(metho)r(ds)g(are)523 849 y(also)g(implemen)n
(ted)h(as)f(attribute)g(ev)-5 b(aluations.)523 1093 y
Ff(SgScopeStatement<bool)28 b(isOmpFor>)585 1160 y(=)j(SgForStatement)
708 1226 y(\(.)770 1292 y(isOmpFor)770 1359 y(=)g
(ompTransUtil.isUserDefIteratorForStatement\(astNode)o(,isOmpFo)o(r\);)
708 1425 y(.\))647 1492 y("\(")f(SgForInitStatementNT<isOmpFor>)d
(SgExpressionRootNT)770 1558 y(SgExpressionRootNT)i
(SgBasicBlockNT<isOmpFor>)647 1624 y("\)")708 1691 y(\(.)770
1757 y(if\(isOmpFor\))g({)832 1824 y(string)h(iVarName)g(=)h
(query.iteratorVariableName\(astNode\);)832 1890 y(string)f(iContName)g
(=)g(query.iteratorContainerName\(astNode\);)832 1957
y(string)g(iContType)g(=)g(query.iteratorContainerType\(astNode\);)832
2023 y(string)g(parTypeName)f(=)i
(ompTransUtil.supportingParType\(astNode,iContType\);)832
2089 y(string)f(parContName)f(=)i
(ompTransUtil.uniqueVarName\(astNode,iContName\);)832
2156 y(string)f(modifiedBodyString)1048 2222 y(=)h
(ompTransUtil.derefToIndexBody\(astNode,iVarName,iC)o(ontName\))o(;)832
2289 y(string)f(support)g(=)h(parTypeName+")e
("+parContName+"\("+iContName+"\);\\n";)832 2355 y(string)h
(beforeForStmt)1048 2421 y(=)h("#pragma)f(omp)g(parallel)g(for\\n";)832
2488 y(string)g(newForStmt)g(=)g("for\()h(int)f("+iVarName+"=0;")1449
2554 y(+)h(iVarName+"<"+parContName+".size\(\);")1449
2621 y(+)g(iVarName+"++)e(\))i("+modifiedBodyString;)832
2687 y(subst.replace\(astNode,support)c(+)k(beforeForStmt)e(+)i
(newForStmt\);)770 2754 y(})708 2820 y(.\))585 2886 y(|)g(...)523
3144 y Fj(Fig.)15 b(7.)k Fm(A)f(part)i(of)g(the)f(grammar)f(rule)i(of)g
(SgScop)r(eStatemen)n(t)e(of)i(the)f(abstract)h(C++)f(grammar)523
3235 y(with)26 b(the)f(seman)n(tic)h(action)g(sp)r(ecifying)h(the)e
(transformation)h(of)h(a)f(SgF)-6 b(orStatemen)n(t.)648
3526 y Fn(The)28 b(inherited)g(attribute)g Fc(isOmpFor)d
Fn(is)j(used)g(to)g(handle)g(the)h(nesting)e(of)i(for-lo)r(ops.)523
3625 y(It)34 b(dep)r(ends)h(on)f(ho)n(w)f(an)h(Op)r(enMP)f(compiler)h
(supp)r(orts)f(nested)h(parallelism)f(whether)523 3725
y(w)n(e)e(w)n(an)n(t)g(to)g(parallelize)f(inner)h(for)g(statemen)n(ts)g
(or)g(only)g(the)h(outer)e(for)h(statemen)n(t.)h(In)523
3825 y(future)22 b(this)g(decision)f(will)h(b)r(e)g(made)f(more)g(sp)r
(eci\014c)h(to)g(Op)r(enMP)f(compilers)g(on)g(di\013eren)n(t)523
3924 y(platforms)d(and)h(the)h(b)r(o)r(olean)e(attribute)i(will)f(b)r
(e)g(replaced)g(b)n(y)f(an)h(ob)5 b(ject)19 b(to)g(pro)n(vide)f(more)
523 4024 y(information)27 b(ab)r(out)h(the)f(con)n(text)h(of)f(Op)r
(enMP)h(for-lo)r(ops.)648 4125 y(The)33 b(ob)5 b(ject)33
b Fc(query)f Fn(of)h(t)n(yp)r(e)h Fc(AstQuery)c Fn(o\013ers)i(metho)r
(ds)i(to)f(pro)n(vide)g(information)523 4225 y(on)d(subtrees)f(that)i
(ha)n(v)n(e)e(b)r(een)h(pro)n(v)n(en)f(to)h(b)r(e)g(useful)h(in)f
(di\013eren)n(t)h(transformations.)d(In)523 4325 y(the)k(example)e(w)n
(e)h(use)g(it)h(to)f(obtain)f(v)-5 b(ariable)31 b(names)f(and)h(t)n(yp)
r(e)g(names.)g(The)g(example)523 4424 y(sho)n(ws)23 b(ho)n(w)h(w)n(e)g
(can)f(decomp)r(ose)h(di\013eren)n(t)g(asp)r(ects)g(of)g(a)g
(transformation)e(in)n(to)i(separate)523 4524 y(attribute)c(ev)-5
b(aluations.)19 b(The)h(metho)r(ds)h(of)f(the)g(query)f(ob)5
b(ject)20 b(are)f(implemen)n(ted)i(b)n(y)e(using)523
4624 y(the)28 b(attribute)g(ev)-5 b(aluation.)648 4725
y(After)24 b(a)g(prepro)r(cessing)f(step)h(of)h(the)g(grammar)d
(\014le,)j(w)n(e)f(use)g(a)g(successor)f(of)h(Co)r(co/R)523
4825 y([8],)36 b(the)g(C/C++)f(v)n(ersion)g(p)r(orted)g(b)n(y)h(F)-7
b(rankie)36 b(Arzu)g(to)f(generate)g(the)i(parser)d(co)r(de.)523
4924 y(Co)r(co/R)29 b(is)g(a)g(compiler)g(generator)f(whic)n(h)h(allo)n
(ws)g(to)g(sp)r(ecify)h(a)f(scanner)g(and)g(a)h(parser)p
eop
%%Page: 13 13
13 12 bop 3328 232 a Fm(13)523 448 y Fn(in)26 b(EBNF)f(for)g(con)n
(text)h(free)f(languages.)f(The)h(grammar)f(has)h(to)h(b)r(e)g
(LL\(1\).)f(W)-7 b(e)26 b(use)g(this)523 548 y(to)r(ol)h(to)g(op)r
(erate)f(on)g(the)i(tok)n(en)e(stream)g(of)h(AST)g(no)r(des.)g
(Therefore)f(w)n(e)g(do)h(not)g(use)g(the)523 648 y(scanner)d
(generator)f(capabilities)i(of)g(Co)r(co/R)g(and)g(implemen)n(ted)h(a)f
(scanner)f(to)h(op)r(erate)523 747 y(on)f(the)h(tok)n(en)f(stream)f(of)
i(AST)g(no)r(des.)f(The)g(stream)g(is)g(de\014ned)h(b)n(y)f(a)g
(\014xed)h(tra)n(v)n(ersal)c(on)523 847 y(the)h(AST.)g(The)g(in)n
(tegration)e(of)i(this)g(parsing)e(to)r(ol)i(allo)n(w)n(ed)e(us)i(to)f
(lev)n(erage)f(the)i(attribute)523 946 y(ev)-5 b(aluation)27
b(capabilities)g(of)h(parsing)e(to)r(ols.)648 1046 y(In)20
b(\014g.)h(6)f(the)h(generated)f(co)r(de)g(is)h(sho)n(wn.)f(The)h
(access)e(uses)h(the)i(notation)e(for)g(random)523 1146
y(access)32 b(iterators.)f(The)j Fc(SupportingOmpCo)o(nt)o(ain)o(er)p
2281 1146 27 4 v 25 w(list)d Fn(class)h(is)h(used)g(to)g(generate)523
1245 y(an)e(arra)n(y)e(of)j(p)r(oin)n(ters)e(to)i(all)f(elemen)n(ts)g
(of)g(the)h(list)g(to)f(ac)n(hiev)n(e)f(a)h(complexit)n(y)g(of)g
(O\(1\))523 1345 y(for)36 b(the)g(elemen)n(t)g(access.)f(The)h(list)h
(of)f(p)r(oin)n(ters)f(is)h(generated)f(when)h(the)g(supp)r(orting)523
1445 y(con)n(tainer)25 b Fc(l2)h Fn(is)g(created.)g(When)h(the)f
(generated)g(co)r(de)g(is)g(compiled)g(with)h(an)f(Op)r(enMP)523
1544 y(compiler)h(the)h(b)r(o)r(dy)g(is)f(executed)h(in)g(parallel.)648
1644 y(Note)37 b(that)h(the)g(generated)e(source)g(co)r(de)h(can)g(ha)n
(v)n(e)f(a)h(sligh)n(tly)g(di\013eren)n(t)h(format-)523
1743 y(ting)29 b(b)r(ecause)g(the)h(format)f(of)g(the)h(source)e(co)r
(de)h(is)g(a)g(b)r(eauti\014ed)h(v)n(ersion)d(of)j(the)f(source)523
1843 y(corresp)r(onding)d(to)h(the)h(transformed)f(AST.)523
2099 y Fh(4)112 b(T)-9 b(ranslation)37 b(of)g(Op)s(enMP)h(Directiv)m
(es)523 2288 y Fn(T)-7 b(o)31 b(generate)e(co)r(de)i(that)h(explicitly)
f(manages)e(parallelism,)h(w)n(e)h(use)g(R)n(OSE)f(to)h(build)g(a)523
2387 y(sp)r(ecialized)d(source-to-source)c(translator)i(that)i
(transforms)e(Op)r(enMP)i Fc(parallel)40 b(for)523 2487
y Fn(directiv)n(es)23 b(in)n(to)h(explicit)h(calls)e(to)h(an)g(Op)r
(enMP)g(run)n(time)g(library)f([9].)h(F)-7 b(or)23 b(our)h(w)n(ork,)e
(w)n(e)523 2587 y(ha)n(v)n(e)k(selected)g(the)i(Nanos)e(Op)r(enMP)g
(run)n(time)h(library)f([10].)g(W)-7 b(e)27 b(are)f(in)h(the)g(pro)r
(cess)f(of)523 2686 y(adding)j(supp)r(ort)g(for)g(additional)g(Op)r
(enMP)h(constructs)e(to)i(our)f(infrastructure.)f(Alter-)523
2786 y(nativ)n(ely)-7 b(,)30 b(w)n(e)f(can)h(unparse)f(the)i(original)e
(source)f(co)r(de)i(with)h(Op)r(enMP)f(directiv)n(es)f(and)523
2886 y(use)e(the)g(resulting)g(source)e(co)r(de)i(as)g(input)g(to)g(a)g
(commercial)f(Op)r(enMP)g(C++)h(compiler)523 2985 y(to)h(generate)e
(parallel)g(co)r(de)i([11{14].)523 3241 y Fh(5)112 b(Related)37
b(W)-9 b(ork)523 3430 y Fn(The)25 b(researc)n(h)d(comm)n(unit)n(y)i
(has)h(dev)n(elop)r(ed)f(man)n(y)g(automatic)g(parallelizing)f
(compilers.)523 3530 y(Examples)36 b(of)g(these)h(researc)n(h)e
(compilers)h(include)h(the)g(DSystem)h([15],)e(the)h(Fx)g(com-)523
3629 y(piler)f([16],)f(the)h(Vienna)g(F)-7 b(ortran)35
b(Compiler)h([17],)f(the)h(P)n(aradigm)e(compiler)h([18],)h(the)523
3729 y(P)n(olaris)d(compiler)i([19],)g(and)g(the)h(SUIF)g(compiler)f
([20].)f(Ho)n(w)n(ev)n(er,)g(except)h(for)g(SUIF,)523
3828 y(whic)n(h)28 b(has)g(fron)n(tends)g(for)g(F)-7
b(ortran,)27 b(C,)h(and)h(C++;)e(the)i(others)e(listed)i(ab)r(o)n(v)n
(e)e(optimize)523 3928 y(only)34 b(F)-7 b(ortran)32 b(applications.)i
(By)f(pro)n(viding)g(a)h(C++)f(fron)n(tend)h(for)f(automatic)h(paral-)
523 4028 y(lelization,)40 b(w)n(e)f(complemen)n(t)h(previous)f(researc)
n(h)f(in)i(pro)n(viding)f(supp)r(ort)h(for)f(higher-)523
4127 y(lev)n(el)32 b(ob)5 b(ject-orien)n(ted)32 b(languages.)f(In)i
(addition,)g(w)n(e)g(extend)g(previous)f(tec)n(hniques)g(b)n(y)523
4227 y(utilizing)f(the)g(seman)n(tic)g(information)f(of)h
(user-de\014ned)f(con)n(tainers)f(and)i(th)n(us)f(allo)n(wing)523
4327 y(user-de\014ned)d(abstractions)f(to)h(b)r(e)h(treated)g(as)f
(part)g(of)g(a)g(domain-sp)r(eci\014c)g(language.)648
4426 y(As)k(more)f(and)h(more)f(programmers)f(are)h(using)g(Op)r(enMP)h
(to)g(express)f(parallelism,)523 4526 y(man)n(y)35 b(Op)r(enMP)g(supp)r
(orting)g(compilers)f(w)n(ere)h(dev)n(elop)r(ed,)g(including)g(b)r(oth)
h(researc)n(h)523 4625 y(pro)5 b(jects)27 b([10,)13 b(21{23])25
b(and)j(commercial)e(compilers)h([11{14].)f(In)h(addition)h(to)g(Op)r
(enMP-)523 4725 y(directiv)n(e)42 b(translation,)g(man)n(y)h(researc)n
(h)d(compiler)j(infrastructures)e(also)h(in)n(v)n(estigate)523
4825 y(tec)n(hniques)36 b(to)g(automatically)f(generate)g(Op)r(enMP)h
(directiv)n(es)f(and)h(to)g(optimize)h(the)523 4924 y(parallel)32
b(execution)h(of)g(Op)r(enMP)g(applications.)g(Ho)n(w)n(ev)n(er,)e
(these)j(researc)n(h)d(compilers)p eop
%%Page: 14 14
14 13 bop 523 232 a Fm(14)523 448 y Fn(only)22 b(supp)r(ort)h
(applications)f(written)h(in)g(C)g(or)f(F)n(OR)-7 b(TRAN,)23
b(while)g(existing)f(commercial)523 548 y(C++)h(compilers)f(target)h
(only)g(sp)r(eci\014c)h(mac)n(hine)f(arc)n(hitectures)f(and)h(do)g(not)
h(pro)n(vide)e(an)523 648 y(op)r(en)27 b(source-to-source)d
(transformation)i(in)n(terface)g(to)h(the)h(outside)f(w)n(orld.)f(By)h
(pro)n(vid-)523 747 y(ing)33 b(a)f(\015exible)h(source-to-source)d
(translator,)h(w)n(e)i(complemen)n(t)g(previous)e(researc)n(h)g(b)n(y)
523 847 y(presen)n(ting)g(an)g(op)r(en)g(researc)n(h)e(infrastructure)i
(for)g(optimizing)g(C++)g(constructs)f(and)523 946 y(Op)r(enMP)d
(directiv)n(es.)523 1215 y Fh(6)112 b(Conclusions)37
b(and)h(F)-9 b(uture)38 b(W)-9 b(ork)523 1418 y Fn(This)27
b(pap)r(er)g(presen)n(ts)f(a)g(C++)h(infrastructure)f(for)g(seman)n
(tic-driv)n(en)g(parallelization)f(of)523 1518 y(computations)h(that)g
(op)r(erate)g(on)g(user-de\014ned)f(con)n(tainers)g(that)i(ha)n(v)n(e)e
(an)h(access)f(in)n(ter-)523 1617 y(face)i(similar)g(to)g(that)h(pro)n
(vided)f(b)n(y)g(the)h(Standard)f(T)-7 b(emplate)27 b(Library)f(in)i
(C++.)f(First,)523 1717 y(w)n(e)h(pro)n(vide)f(an)g(in)n(terface)h(for)
f(library)g(dev)n(elop)r(ers)g(to)h(inform)g(our)f(compiler)h(ab)r(out)
g(the)523 1816 y(seman)n(tics)21 b(of)h(their)g(con)n(tainers)e(and)i
(the)g(side-e\013ects)g(of)g(their)g(library)e(functions.)j(Then,)523
1916 y(w)n(e)g(use)h(this)g(information)f(to)g(parallelize)f(lo)r(ops)h
(that)h(iterate)f(o)n(v)n(er)f(these)i(con)n(tainers)e(au-)523
2016 y(tomatically)27 b(when)h(it)g(is)f(safe)g(to)h(do)f(so.)648
2116 y(Our)32 b(analysis)g(algorithm)g(conserv)-5 b(ativ)n(ely)32
b(disallo)n(ws)g(the)i(parallelization)d(of)j(lo)r(ops)523
2216 y(that)26 b(mo)r(dify)g(non-lo)r(cal)f(memory)f(lo)r(cations,)h
(that)h(is,)g(memory)f(lo)r(cations)f(that)i(are)f(not)523
2315 y(elemen)n(ts)e(of)h(the)g(user-de\014ned)e(con)n(tainer)h(and)g
(are)f(de\014ned)i(outside)g(of)f(the)h(lo)r(op.)f(In)h(the)523
2415 y(future,)k(w)n(e)e(will)i(extend)f(our)g(algorithm)f(to)h(b)r(e)g
(more)g(precise)f(b)n(y)h(incorp)r(orating)e(global)523
2514 y(alias)h(analysis)g(and)h(arra)n(y)e(dep)r(endence)j(analysis)e
(tec)n(hniques)h([7].)g(This)g(more)g(sophisti-)523 2614
y(cated)e(algorithm)e(will)i(b)r(e)g(as)f(precise)g(as)h(those)f(used)h
(b)n(y)f(other)g(automatic)h(parallelizing)523 2714 y(compilers)g
([15{20],)e(while)i(still)h(b)r(eing)g(more)e(aggressiv)n(e)f(for)i
(user-de\014ned)g(abstractions)523 2813 y(b)n(y)i(optimizing)h(them)g
(as)f(part)g(of)h(a)f(domain-sp)r(eci\014c)g(language.)523
3082 y Fh(References)561 3277 y Fm(1.)43 b(Co)r(op)r(er)35
b(K.)f(Dongarra)g(J.)h(F)-6 b(o)n(wler)35 b(R.)e(Gannon)h(D.)g
(Johnsson)g(L.)h(Kennedy)d(K.)i(Mellor-)663 3368 y(Crummey)15
b(J.)k(T)-6 b(orczon)19 b(L.)f(Bro)r(om,)g(B.)k(T)-6
b(elescoping)20 b(languages:)f(A)f(strategy)g(for)h(automatic)663
3459 y(generation)26 b(of)g(scien)n(ti\014c)g(problem-solving)g
(systems)e(from)i(annotated)f(libraries.)36 b Fi(Journal)663
3551 y(of)27 b(Par)l(al)t(lel)g(and)h(Distribute)l(d)h(Computing)p
Fm(,)e(2000.)561 3643 y(2.)43 b(Bjarne)26 b(Stroustrup.)34
b Fi(The)28 b(Design)g(and)g(Evolution)g(of)f(C++)p Fm(.)34
b(Addison-W)-6 b(esley)g(,)24 b(1994.)561 3735 y(3.)43
b(Daniel)34 b(Quinlan,)g(Brian)g(Miller,)h(Bobb)n(y)f(Philip,)g(and)f
(Markus)h(Sc)n(hordan.)58 b(T)-6 b(reating)35 b(a)663
3826 y(user-de\014ned)28 b(parallel)i(library)g(as)g(a)f(domain-sp)r
(eci\014c)g(language.)46 b(In)29 b Fi(16th)j(International)663
3917 y(Par)l(al)t(lel)21 b(and)h(Distribute)l(d)h(Pr)l(o)l(c)l(essing)h
(Symp)l(osium)e(\(IPDPS,)f(IPPS,)f(SPDP\))p Fm(,)g(pages)g(105{)663
4008 y(114.)27 b(IEEE,)f(April)g(2002.)561 4100 y(4.)43
b(Daniel)23 b(Quinlan,)f(Markus)h(Sc)n(hordan,)f(Brian)i(Miller,)g(and)
e(Markus)h(Ko)n(w)n(arsc)n(hik.)30 b(P)n(arallel)663
4192 y(ob)t(ject-orien)n(ted)k(framew)n(ork)g(optimization.)58
b Fi(Sp)l(e)l(cial)36 b(Issue)f(of)g(Concurr)l(ency:)h(Pr)l(actic)l(e)
663 4283 y(and)28 b(Exp)l(erienc)l(e)p Fm(,)g(2003,)f(to)f(app)r(ear.)
561 4375 y(5.)43 b(Edison)26 b(Design)g(Group.)34 b(h)n
(ttp://www.edg.com.)561 4467 y(6.)43 b(F)-6 b(rancois)60
b(Bo)r(din,)f(P)n(eter)h(Bec)n(kman,)e(Dennis)h(Gannon,)g(Jacob)h(Got)n
(w)n(als,)h(Sriniv)l(as)663 4558 y(Nara)n(y)n(ana,)39
b(Suresh)f(Sriniv)l(as,)g(and)h(Beata)g(Winnic)n(k)l(a.)73
b(Sage++:)39 b(An)e(ob)t(ject-orien)n(ted)663 4650 y(to)r(olkit)g(and)g
(class)h(library)f(for)g(building)g(fortran)g(and)g(C++)f
(restructuring)h(to)r(ols.)69 b(In)663 4741 y Fi(Pr)l(o)l(c)l(e)l(e)l
(dings.)29 b(OONSKI)e('94)p Fm(,)f(Oregon,)g(1994.)561
4833 y(7.)43 b(R.)22 b(Allen)g(and)f(Ken)h(Kennedy)-6
b(.)26 b Fi(Optimizing)e(Compilers)g(for)h(Mo)l(dern)g(A)n(r)l(chite)l
(ctur)l(es)p Fm(.)32 b(Mor-)663 4924 y(gan)26 b(Kaufmann,)f(San)g(F)-6
b(rancisco,)27 b(Octob)r(er)f(2001.)p eop
%%Page: 15 15
15 14 bop 3328 232 a Fm(15)561 448 y(8.)43 b(Hansp)r(eter)23
b(Mo)r(essen)n(b)r(o)r(ec)n(k.)32 b(Co)r(co/R)25 b(-)e(A)g(generator)h
(for)g(pro)r(duction)f(qualit)n(y)g(compilers.)663 540
y(In)i Fi(LNCS477,)i(Springer)p Fm(,)h(1991.)561 631
y(9.)43 b(Daniel)37 b(Quinlan,)g(Markus)g(Sc)n(hordan,)f(Qing)h(Yi,)g
(and)g(Bronis)g(de)g(Supinski.)67 b(A)36 b(C++)663 722
y(infrastructure)31 b(for)h(automatic)g(in)n(tro)r(duction)f(and)g
(translation)h(of)g(Op)r(enMP)f(directiv)n(es.)663 814
y(In)h Fi(WOMP)-6 b(A)g(T'03:)32 b(Op)l(enMP)j(Shar)l(e)l(d)g(Memory)f
(Par)l(al)t(lel)g(Pr)l(o)l(gr)l(amming,)h(International)663
905 y(Workshop)f(on)f(Op)l(enMP)g(Applic)l(ations)g(and)h(T)-6
b(o)l(ols)p Fm(,)32 b(v)n(olume)e(2716)j(of)f Fi(L)l(e)l(ctur)l(e)j
(Notes)f(in)663 996 y(Computer)28 b(Scienc)l(e)p Fm(,)f(pages)g(13{25.)
h(Springer)d(V)-6 b(erlag,)27 b(June)e(2003.)523 1088
y(10.)43 b(Eduard)26 b(Ayguade,)g(Marc)h(Gonzalez,)i(and)d(Jesus)h
(Labarta.)38 b(Nanoscompiler:)27 b(A)f(researc)n(h)663
1179 y(platform)g(for)h(op)r(enMP)g(extensions.)36 b(In)25
b Fi(Eur)l(op)l(e)l(an)30 b(Workshop)g(on)e(Op)l(enMP)p
Fm(,)f(Septem)n(b)r(er)663 1270 y(1999.)523 1362 y(11.)43
b(Silican)38 b(Graphics)h(Inc.)70 b Fi(Optimizing)38
b(Compilers)h(for)f(High-Performanc)l(e)j(Computing)p
Fm(.)663 1453 y(www.sgi.com/dev)n(elop)r(ers/devto)r(ols/languages/)q
(mipspro.h)n(tml.)523 1544 y(12.)i(IBM.)271 b Fi(VisualA)l(ge)101
b(C++)f(Pr)l(ofessional)h(for)g(AIX)f(V6.0)p Fm(.)271
b(www-)663 1636 y(1.ibm.com/serv)n(ers/eserv)n(er/ecatalog/us/soft)n(w)
n(are/61)q(46)q(.h)n(tml.)523 1727 y(13.)43 b(Xinmin)26
b(Tian,)j(Aart)e(Bik,)i(Milind)f(Girk)l(ar,)h(P)n(aul)f(Grey)-6
b(,)27 b(Hideki)h(Saito,)g(and)g(Ernesto)g(Su.)663 1818
y(In)n(tel)d(op)r(enMP)i(C++/Fortran)g(compiler)g(for)g(h)n(yp)r
(er-threading)e(tec)n(hnology:)i(Implemen-)663 1910 y(tation)f(and)f(p)
r(erformance.)35 b Fi(Intel)27 b(T)-6 b(e)l(chnolo)l(gy)29
b(Journal)p Fm(,)e(6\(1\):36{46,)i(2002.)523 2001 y(14.)43
b(F)-6 b(ujitsu.)392 b Fi(F)-6 b(ortr)l(an)140 b(&)d(C)h(Packages)i
(for)d(SP)-6 b(AR)n(C)138 b(Solaris)p Fm(.)663 2092 y
(www.fr.fse.fujitsu.com/devuk/solaris.sh)n(tml.)523 2183
y(15.)43 b(V.)27 b(Adv)n(e,)g(G.)h(Jin,)g(J.)g(Mellor-Crummey)-6
b(,)26 b(and)h(Q.)h(Yi.)40 b(High)27 b(p)r(erformance)h(fortran)g(com-)
663 2275 y(pilation)f(tec)n(hniques)e(for)i(parallelizing)i(scien)n
(ti\014c)e(co)r(des.)36 b(In)26 b Fi(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)e
(SC98:)g(High)663 2366 y(Performanc)l(e)h(Computing)f(and)g(Networking)
p Fm(,)f(No)n(v)e(1998.)523 2457 y(16.)43 b(J.)28 b(Subhlok,)f(J.)h
(Stic)n(hnoth,)f(D.)h(O'Hallaron,)h(and)e(T.)h(Gross.)41
b(Exploiting)29 b(task)e(and)h(data)663 2549 y(parallelism)c(on)f(a)g
(m)n(ulticomputer.)k(In)c Fi(Pr)l(o)l(c.)i(of)g(the)g(Sixth)h(A)n(CM)f
(SIGPLAN)g(Symp)l(osium)663 2640 y(on)36 b(Principles)f(and)i(Pr)l
(actic)l(e)g(of)e(Par)l(al)t(lel)g(Pr)l(o)l(gr)l(amming)i(\(PPoPP\))p
Fm(,)f(San)e(Diego,)i(Ma)n(y)663 2731 y(1993.)523 2823
y(17.)43 b(S.)25 b(Benkner.)34 b(Vfc:)26 b(The)g(vienna)g(fortran)g
(compiler.)523 2914 y(18.)43 b(P)-6 b(.)25 b(Banerjee,)i(J.)e(A.)g
(Chandy)-6 b(,)25 b(M.)g(Gupta,)g(J.)h(G.)g(Holm,)e(A.)h(Lain,)h(D.)f
(J.)h(P)n(alermo,)f(S.)g(Ra-)663 3005 y(masw)n(am)n(y)-6
b(,)33 b(and)h(E.)h(Su.)60 b(The)35 b(paradigm)g(compiler)f(for)h
(distributed-memory)d(message)663 3097 y(passing)24 b(m)n
(ulticomputers.)29 b(In)23 b Fi(in)i(Pr)l(o)l(c)l(e)l(e)l(dings)j(of)d
(the)i(First)f(International)h(Workshop)g(on)663 3188
y(Par)l(al)t(lel)g(Pr)l(o)l(c)l(essing)p Fm(,)h(Bangalore,India,)g(Dec)
e(1994.)523 3279 y(19.)43 b(D.)29 b(P)n(adua,)h(R.)f(Eigenmann,)g(J.)g
(Ho)r(e\015inger,)h(P)-6 b(.)30 b(P)n(etersen,)g(P)-6
b(.)29 b(T)-6 b(u,)29 b(S.)g(W)-6 b(eatherford,)30 b(and)663
3371 y(K.)c(F)-6 b(aigin".)38 b(P)n(olaris:)29 b(A)d(new-generation)h
(parallelizing)i(compiler)d(for)i(mpp's.)35 b(T)-6 b(ec)n(hnical)663
3462 y(Rep)r(ort)27 b(1306,)j(Univ.)d(of)i(Illinois)g(at)f
(Urbana-Champaign,)g(Cen)n(ter)g(for)g(Sup)r(ercomputing)663
3553 y(Res.)e(and)f(Dev.,)h(june)f(1993.)523 3645 y(20.)43
b(M.)21 b(S.)g(Lam)f(S.)g(P)-6 b(.)21 b(Amarasinghe,)g(J.)h(M.)f
(Anderson)f(and)h(C.)g(W.)g(Tseng.)27 b(The)21 b(suif)h(compiler)663
3736 y(for)27 b(scalable)h(parallel)f(mac)n(hines.)36
b(In)26 b Fi(in)h(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)c(the)i(Seventh)h
(SIAM)d(Confer)l(enc)l(e)663 3827 y(on)g(Par)l(al)t(lel)h(Pr)l(o)l(c)l
(essing)h(for)f(Scienti\014c)g(Computing)p Fm(,)f(F)-6
b(eb)25 b(1995.)523 3919 y(21.)43 b(Christian)25 b(Brunsc)n(hen)g(and)f
(Mats)h(Brorsson.)35 b(OdinMP/CCp)25 b(-)g(a)g(p)r(ortable)g(implemen)n
(ta-)663 4010 y(tion)h(of)g(op)r(enMP)g(for)h(c.)34 b(In)25
b Fi(Eur)l(op)l(e)l(an)k(Workshop)g(on)f(Op)l(enMP)p
Fm(,)e(Septem)n(b)r(er)e(1999.)523 4101 y(22.)43 b(Mitsuhisa)32
b(Sato,)g(Shigehisa)h(Satoh,)e(Kazuhiro)h(Kusano,)g(and)f(Y)-6
b(oshio)32 b(T)-6 b(anak)l(a.)51 b(Design)663 4193 y(of)36
b(op)r(enMP)g(compiler)f(for)i(an)e(SMP)h(cluster.)64
b(In)34 b Fi(Eur)l(op)l(e)l(an)39 b(Workshop)f(on)e(Op)l(enMP)p
Fm(,)663 4284 y(Septem)n(b)r(er)24 b(1999.)523 4375 y(23.)43
b(Seung)19 b(Jai)i(Min,)g(Seon)e(W)-6 b(o)r(ok)20 b(Kim,)g(Mic)n(hael)h
(V)-6 b(oss,)20 b(Sang)g(Ik)f(Lee,)i(and)e(Rudolf)h(Eighmann.)663
4467 y(P)n(ortable)j(compilers)f(for)h(op)r(enMP.)29
b(In)22 b Fi(Workshop)j(on)g(Op)l(enMP)f(Applic)l(ations)h(and)g(T)-6
b(o)l(ols)p Fm(,)663 4558 y(July)25 b(2001.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
