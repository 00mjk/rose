# Test configuration file (see "scripts/rth_run.pl --help" for details)

title = ${TITLE}
disabled = ${DISABLED}
subdir = yes

# This is the main command we're testing
cmd = ${VALGRIND} ${blddir}/injectSnippet \
      --test:snippet=${SNIPPET} \
      --test:ipoint-function=${IPOINT} \
      --test:insert-mechanism=${INSERT_MECHANISM} \
      --test:locdecls-position=${LOCDECLS_POSITION} \
      --test:recursive=${RECURSIVE_INSERTION} \
      --test:copy-definitions=${COPY_DEFINITIONS} \
      --test:copy-related-things=${COPY_RELATED_THINGS} -DCOPY_RELATED_THINGS=COPY_RELATED_THINGS_${COPY_RELATED_THINGS} \
      -rose:skipfinalCompileStep \
      -I${srcdir} \
      ${srcdir}/${SPECIMEN}

# Indent ROSE's output to be more readable if "indent" works.
cmd = indent <rose_${SPECIMEN} >${SPECIMEN} || cp rose_${SPECIMEN} ${SPECIMEN}
cmd = cat -n ${SPECIMEN}

# Make sure it compiles.
# FIXME: We don't have to do this unless we're using -rose:skipfinalCompileStep, which we use because otherwise backend()
#        will try to compile the snippet file along with the files provided to frontend(). Dan has a one-line fix for this
#        on one of his branches, so this can be removed soon. [RPM 2014-03-04].
cmd = gcc -I${srcdir} -DCOPY_RELATED_THINGS=COPY_RELATED_THINGS_${COPY_RELATED_THINGS} ${SPECIMEN}
