=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
registers:
    ax      = { v31317[32] }
    cx      = { v31318[32] }
    dx      = { v31319[32] }
    bx      = { v31320[32] }
    sp      = { v31321-0x4[32] }
    bp      = { v31322[32] }
    si      = { v31323[32] }
    di      = { v31324[32] }
    es      = { v31325[16] }
    cs      = { v31326[16] }
    ss      = { v31327[16] }
    ds      = { v31328[16] }
    fs      = { v31329[16] }
    gs      = { v31330[16] }
    cf      = { v31331[1] }
    ?1      = { v31332[1] }
    pf      = { v31333[1] }
    ?3      = { v31334[1] }
    af      = { v31335[1] }
    ?5      = { v31336[1] }
    zf      = { v31337[1] }
    sf      = { v31338[1] }
    tf      = { v31339[1] }
    if      = { v31340[1] }
    df      = { v31341[1] }
    of      = { v31342[1] }
    iopl0   = { v31343[1] }
    iopl1   = { v31344[1] }
    nt      = { v31345[1] }
    ?15     = { v31346[1] }
    rf      = { v31347[1] }
    vm      = { v31348[1] }
    ac      = { v31349[1] }
    vif     = { v31350[1] }
    vip     = { v31351[1] }
    id      = { v31352[1] }
    ?22     = { v31353[1] }
    ?23     = { v31354[1] }
    ?24     = { v31355[1] }
    ?25     = { v31356[1] }
    ?26     = { v31357[1] }
    ?27     = { v31358[1] }
    ?28     = { v31359[1] }
    ?29     = { v31360[1] }
    ?30     = { v31361[1] }
    ?31     = { v31362[1] }
    ip      = { 0x80482c9[32] }
memory:
    address = { v31321-0x4[32] }
      value = { v31322[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v48[32] }
    cx      = { defs={} expr=v49[32] }
    dx      = { defs={} expr=v50[32] }
    bx      = { defs={} expr=v51[32] }
    sp      = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
    bp      = { defs={} expr=v53[32] }
    si      = { defs={} expr=v54[32] }
    di      = { defs={} expr=v55[32] }
    es      = { defs={} expr=v56[16] }
    cs      = { defs={} expr=v57[16] }
    ss      = { defs={} expr=v58[16] }
    ds      = { defs={} expr=v59[16] }
    fs      = { defs={} expr=v60[16] }
    gs      = { defs={} expr=v61[16] }
    cf      = { defs={} expr=v62[1] }
    ?1      = { defs={} expr=v63[1] }
    pf      = { defs={} expr=v64[1] }
    ?3      = { defs={} expr=v65[1] }
    af      = { defs={} expr=v66[1] }
    ?5      = { defs={} expr=v67[1] }
    zf      = { defs={} expr=v68[1] }
    sf      = { defs={} expr=v69[1] }
    tf      = { defs={} expr=v70[1] }
    if      = { defs={} expr=v71[1] }
    df      = { defs={} expr=v72[1] }
    of      = { defs={} expr=v73[1] }
    iopl0   = { defs={} expr=v74[1] }
    iopl1   = { defs={} expr=v75[1] }
    nt      = { defs={} expr=v76[1] }
    ?15     = { defs={} expr=v77[1] }
    rf      = { defs={} expr=v78[1] }
    vm      = { defs={} expr=v79[1] }
    ac      = { defs={} expr=v80[1] }
    vif     = { defs={} expr=v81[1] }
    vip     = { defs={} expr=v82[1] }
    id      = { defs={} expr=v83[1] }
    ?22     = { defs={} expr=v84[1] }
    ?23     = { defs={} expr=v85[1] }
    ?24     = { defs={} expr=v86[1] }
    ?25     = { defs={} expr=v87[1] }
    ?26     = { defs={} expr=v88[1] }
    ?27     = { defs={} expr=v89[1] }
    ?28     = { defs={} expr=v90[1] }
    ?29     = { defs={} expr=v91[1] }
    ?30     = { defs={} expr=v92[1] }
    ?31     = { defs={} expr=v93[1] }
    ip      = { defs={0x080482c8} expr=0x080482c9[32] }
memory:
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 3[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 24[32] 32[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 2[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 16[32] 24[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 1[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 8[32] 16[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 0[32] 8[32] v53[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482c9[32] }
memory:
null state
0x80482c9:mov    ebp, esp
registers:
    ax      = { v31317[32] }
    cx      = { v31318[32] }
    dx      = { v31319[32] }
    bx      = { v31320[32] }
    sp      = { v31321-0x4[32] }
    bp      = { v31321-0x4[32] }
    si      = { v31323[32] }
    di      = { v31324[32] }
    es      = { v31325[16] }
    cs      = { v31326[16] }
    ss      = { v31327[16] }
    ds      = { v31328[16] }
    fs      = { v31329[16] }
    gs      = { v31330[16] }
    cf      = { v31331[1] }
    ?1      = { v31332[1] }
    pf      = { v31333[1] }
    ?3      = { v31334[1] }
    af      = { v31335[1] }
    ?5      = { v31336[1] }
    zf      = { v31337[1] }
    sf      = { v31338[1] }
    tf      = { v31339[1] }
    if      = { v31340[1] }
    df      = { v31341[1] }
    of      = { v31342[1] }
    iopl0   = { v31343[1] }
    iopl1   = { v31344[1] }
    nt      = { v31345[1] }
    ?15     = { v31346[1] }
    rf      = { v31347[1] }
    vm      = { v31348[1] }
    ac      = { v31349[1] }
    vif     = { v31350[1] }
    vip     = { v31351[1] }
    id      = { v31352[1] }
    ?22     = { v31353[1] }
    ?23     = { v31354[1] }
    ?24     = { v31355[1] }
    ?25     = { v31356[1] }
    ?26     = { v31357[1] }
    ?27     = { v31358[1] }
    ?28     = { v31359[1] }
    ?29     = { v31360[1] }
    ?30     = { v31361[1] }
    ?31     = { v31362[1] }
    ip      = { 0x80482cb[32] }
memory:
    address = { v31321-0x4[32] }
      value = { v31322[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v48[32] }
    cx      = { defs={} expr=v49[32] }
    dx      = { defs={} expr=v50[32] }
    bx      = { defs={} expr=v51[32] }
    sp      = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
    bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
    si      = { defs={} expr=v54[32] }
    di      = { defs={} expr=v55[32] }
    es      = { defs={} expr=v56[16] }
    cs      = { defs={} expr=v57[16] }
    ss      = { defs={} expr=v58[16] }
    ds      = { defs={} expr=v59[16] }
    fs      = { defs={} expr=v60[16] }
    gs      = { defs={} expr=v61[16] }
    cf      = { defs={} expr=v62[1] }
    ?1      = { defs={} expr=v63[1] }
    pf      = { defs={} expr=v64[1] }
    ?3      = { defs={} expr=v65[1] }
    af      = { defs={} expr=v66[1] }
    ?5      = { defs={} expr=v67[1] }
    zf      = { defs={} expr=v68[1] }
    sf      = { defs={} expr=v69[1] }
    tf      = { defs={} expr=v70[1] }
    if      = { defs={} expr=v71[1] }
    df      = { defs={} expr=v72[1] }
    of      = { defs={} expr=v73[1] }
    iopl0   = { defs={} expr=v74[1] }
    iopl1   = { defs={} expr=v75[1] }
    nt      = { defs={} expr=v76[1] }
    ?15     = { defs={} expr=v77[1] }
    rf      = { defs={} expr=v78[1] }
    vm      = { defs={} expr=v79[1] }
    ac      = { defs={} expr=v80[1] }
    vif     = { defs={} expr=v81[1] }
    vip     = { defs={} expr=v82[1] }
    id      = { defs={} expr=v83[1] }
    ?22     = { defs={} expr=v84[1] }
    ?23     = { defs={} expr=v85[1] }
    ?24     = { defs={} expr=v86[1] }
    ?25     = { defs={} expr=v87[1] }
    ?26     = { defs={} expr=v88[1] }
    ?27     = { defs={} expr=v89[1] }
    ?28     = { defs={} expr=v90[1] }
    ?29     = { defs={} expr=v91[1] }
    ?30     = { defs={} expr=v92[1] }
    ?31     = { defs={} expr=v93[1] }
    ip      = { defs={0x080482c8,0x080482c9} expr=0x080482cb[32] }
memory:
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 3[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 24[32] 32[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 2[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 16[32] 24[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 1[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 8[32] 16[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 0[32] 8[32] v53[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482cb[32] }
memory:
null state
0x80482cb:sub    esp, 0x08
registers:
    ax      = { v31317[32] }
    cx      = { v31318[32] }
    dx      = { v31319[32] }
    bx      = { v31320[32] }
    sp      = { v31321-0xc[32] }
    bp      = { v31321-0x4[32] }
    si      = { v31323[32] }
    di      = { v31324[32] }
    es      = { v31325[16] }
    cs      = { v31326[16] }
    ss      = { v31327[16] }
    ds      = { v31328[16] }
    fs      = { v31329[16] }
    gs      = { v31330[16] }
    cf      = { -v31428+0x1[1] }
    ?1      = { v31332[1] }
    pf      = { -v31418+0x1[1] }
    ?3      = { v31334[1] }
    af      = { -v31425+0x1[1] }
    ?5      = { v31336[1] }
    zf      = { v31423[1] }
    sf      = { v31421[1] }
    tf      = { v31339[1] }
    if      = { v31340[1] }
    df      = { v31341[1] }
    of      = { v31435[1] }
    iopl0   = { v31343[1] }
    iopl1   = { v31344[1] }
    nt      = { v31345[1] }
    ?15     = { v31346[1] }
    rf      = { v31347[1] }
    vm      = { v31348[1] }
    ac      = { v31349[1] }
    vif     = { v31350[1] }
    vip     = { v31351[1] }
    id      = { v31352[1] }
    ?22     = { v31353[1] }
    ?23     = { v31354[1] }
    ?24     = { v31355[1] }
    ?25     = { v31356[1] }
    ?26     = { v31357[1] }
    ?27     = { v31358[1] }
    ?28     = { v31359[1] }
    ?29     = { v31360[1] }
    ?30     = { v31361[1] }
    ?31     = { v31362[1] }
    ip      = { 0x80482ce[32] }
memory:
    address = { v31321-0x4[32] }
      value = { v31322[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v48[32] }
    cx      = { defs={} expr=v49[32] }
    dx      = { defs={} expr=v50[32] }
    bx      = { defs={} expr=v51[32] }
    sp      = { defs={0x080482c8,0x080482cb} expr=(add[32] (add[32] v52[32] -4[32]) -8[32]) }
    bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
    si      = { defs={} expr=v54[32] }
    di      = { defs={} expr=v55[32] }
    es      = { defs={} expr=v56[16] }
    cs      = { defs={} expr=v57[16] }
    ss      = { defs={} expr=v58[16] }
    ds      = { defs={} expr=v59[16] }
    fs      = { defs={} expr=v60[16] }
    gs      = { defs={} expr=v61[16] }
    cf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v63[1] }
    pf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v65[1] }
    af      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v67[1] }
    zf      = { defs={0x080482c8,0x080482cb} expr=(zerop[1] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
    sf      = { defs={0x080482c8,0x080482cb} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v70[1] }
    if      = { defs={} expr=v71[1] }
    df      = { defs={} expr=v72[1] }
    of      = { defs={0x080482c8,0x080482cb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v74[1] }
    iopl1   = { defs={} expr=v75[1] }
    nt      = { defs={} expr=v76[1] }
    ?15     = { defs={} expr=v77[1] }
    rf      = { defs={} expr=v78[1] }
    vm      = { defs={} expr=v79[1] }
    ac      = { defs={} expr=v80[1] }
    vif     = { defs={} expr=v81[1] }
    vip     = { defs={} expr=v82[1] }
    id      = { defs={} expr=v83[1] }
    ?22     = { defs={} expr=v84[1] }
    ?23     = { defs={} expr=v85[1] }
    ?24     = { defs={} expr=v86[1] }
    ?25     = { defs={} expr=v87[1] }
    ?26     = { defs={} expr=v88[1] }
    ?27     = { defs={} expr=v89[1] }
    ?28     = { defs={} expr=v90[1] }
    ?29     = { defs={} expr=v91[1] }
    ?30     = { defs={} expr=v92[1] }
    ?31     = { defs={} expr=v93[1] }
    ip      = { defs={0x080482c8,0x080482c9,0x080482cb} expr=0x080482ce[32] }
memory:
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 3[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 24[32] 32[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 2[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 16[32] 24[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 1[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 8[32] 16[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 0[32] 8[32] v53[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482ce[32] }
memory:
null state
0x80482ce:call   0x08048364<call_gmon_start>
registers:
    ax      = { v31317[32] }
    cx      = { v31318[32] }
    dx      = { v31319[32] }
    bx      = { v31320[32] }
    sp      = { v31321-0x10[32] }
    bp      = { v31321-0x4[32] }
    si      = { v31323[32] }
    di      = { v31324[32] }
    es      = { v31325[16] }
    cs      = { v31326[16] }
    ss      = { v31327[16] }
    ds      = { v31328[16] }
    fs      = { v31329[16] }
    gs      = { v31330[16] }
    cf      = { -v31428+0x1[1] }
    ?1      = { v31332[1] }
    pf      = { -v31418+0x1[1] }
    ?3      = { v31334[1] }
    af      = { -v31425+0x1[1] }
    ?5      = { v31336[1] }
    zf      = { v31423[1] }
    sf      = { v31421[1] }
    tf      = { v31339[1] }
    if      = { v31340[1] }
    df      = { v31341[1] }
    of      = { v31435[1] }
    iopl0   = { v31343[1] }
    iopl1   = { v31344[1] }
    nt      = { v31345[1] }
    ?15     = { v31346[1] }
    rf      = { v31347[1] }
    vm      = { v31348[1] }
    ac      = { v31349[1] }
    vif     = { v31350[1] }
    vip     = { v31351[1] }
    id      = { v31352[1] }
    ?22     = { v31353[1] }
    ?23     = { v31354[1] }
    ?24     = { v31355[1] }
    ?25     = { v31356[1] }
    ?26     = { v31357[1] }
    ?27     = { v31358[1] }
    ?28     = { v31359[1] }
    ?29     = { v31360[1] }
    ?30     = { v31361[1] }
    ?31     = { v31362[1] }
    ip      = { 0x8048364[32] }
memory:
    address = { v31321-0x4[32] }
      value = { v31322[32] }
      flags = { size=4 }
    address = { v31321-0x10[32] }
      value = { 0x80482d3[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v48[32] }
    cx      = { defs={} expr=v49[32] }
    dx      = { defs={} expr=v50[32] }
    bx      = { defs={} expr=v51[32] }
    sp      = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) }
    bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v52[32] -4[32]) }
    si      = { defs={} expr=v54[32] }
    di      = { defs={} expr=v55[32] }
    es      = { defs={} expr=v56[16] }
    cs      = { defs={} expr=v57[16] }
    ss      = { defs={} expr=v58[16] }
    ds      = { defs={} expr=v59[16] }
    fs      = { defs={} expr=v60[16] }
    gs      = { defs={} expr=v61[16] }
    cf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v63[1] }
    pf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v52[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v65[1] }
    af      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v67[1] }
    zf      = { defs={0x080482c8,0x080482cb} expr=(zerop[1] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
    sf      = { defs={0x080482c8,0x080482cb} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v52[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v70[1] }
    if      = { defs={} expr=v71[1] }
    df      = { defs={} expr=v72[1] }
    of      = { defs={0x080482c8,0x080482cb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v52[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v74[1] }
    iopl1   = { defs={} expr=v75[1] }
    nt      = { defs={} expr=v76[1] }
    ?15     = { defs={} expr=v77[1] }
    rf      = { defs={} expr=v78[1] }
    vm      = { defs={} expr=v79[1] }
    ac      = { defs={} expr=v80[1] }
    vif     = { defs={} expr=v81[1] }
    vip     = { defs={} expr=v82[1] }
    id      = { defs={} expr=v83[1] }
    ?22     = { defs={} expr=v84[1] }
    ?23     = { defs={} expr=v85[1] }
    ?24     = { defs={} expr=v86[1] }
    ?25     = { defs={} expr=v87[1] }
    ?26     = { defs={} expr=v88[1] }
    ?27     = { defs={} expr=v89[1] }
    ?28     = { defs={} expr=v90[1] }
    ?29     = { defs={} expr=v91[1] }
    ?30     = { defs={} expr=v92[1] }
    ?31     = { defs={} expr=v93[1] }
    ip      = { defs={0x080482ce} expr=0x08048364[32] }
memory:
    address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) 3[32]) }
      value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=8[8] }
      flags = { }
    address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) 2[32]) }
      value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=4[8] }
      flags = { }
    address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) 1[32]) }
      value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=-126[8] }
      flags = { }
    address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] v52[32] -4[32]) -8[32]) -4[32]) }
      value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=-45[8] }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 3[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 24[32] 32[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 2[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 16[32] 24[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] (add[32] v52[32] -4[32]) 1[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 8[32] 16[32] v53[32]) }
      flags = { }
    address = { defs={0x080482c8} expr=(add[32] v52[32] -4[32]) }
      value = { defs={0x080482c8} expr=(extract[8] 0[32] 8[32] v53[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048364[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0<frame_dummy>
registers:
    ax      = { v31495[32] }
    cx      = { v31496[32] }
    dx      = { v31497[32] }
    bx      = { v31498[32] }
    sp      = { v31499-0x4[32] }
    bp      = { v31500[32] }
    si      = { v31501[32] }
    di      = { v31502[32] }
    es      = { v31503[16] }
    cs      = { v31504[16] }
    ss      = { v31505[16] }
    ds      = { v31506[16] }
    fs      = { v31507[16] }
    gs      = { v31508[16] }
    cf      = { v31509[1] }
    ?1      = { v31510[1] }
    pf      = { v31511[1] }
    ?3      = { v31512[1] }
    af      = { v31513[1] }
    ?5      = { v31514[1] }
    zf      = { v31515[1] }
    sf      = { v31516[1] }
    tf      = { v31517[1] }
    if      = { v31518[1] }
    df      = { v31519[1] }
    of      = { v31520[1] }
    iopl0   = { v31521[1] }
    iopl1   = { v31522[1] }
    nt      = { v31523[1] }
    ?15     = { v31524[1] }
    rf      = { v31525[1] }
    vm      = { v31526[1] }
    ac      = { v31527[1] }
    vif     = { v31528[1] }
    vip     = { v31529[1] }
    id      = { v31530[1] }
    ?22     = { v31531[1] }
    ?23     = { v31532[1] }
    ?24     = { v31533[1] }
    ?25     = { v31534[1] }
    ?26     = { v31535[1] }
    ?27     = { v31536[1] }
    ?28     = { v31537[1] }
    ?29     = { v31538[1] }
    ?30     = { v31539[1] }
    ?31     = { v31540[1] }
    ip      = { 0x80483d0[32] }
memory:
    address = { v31499-0x4[32] }
      value = { 0x80482d8[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v296[32] }
    cx      = { defs={} expr=v297[32] }
    dx      = { defs={} expr=v298[32] }
    bx      = { defs={} expr=v299[32] }
    sp      = { defs={0x080482d3} expr=(add[32] v300[32] -4[32]) }
    bp      = { defs={} expr=v301[32] }
    si      = { defs={} expr=v302[32] }
    di      = { defs={} expr=v303[32] }
    es      = { defs={} expr=v304[16] }
    cs      = { defs={} expr=v305[16] }
    ss      = { defs={} expr=v306[16] }
    ds      = { defs={} expr=v307[16] }
    fs      = { defs={} expr=v308[16] }
    gs      = { defs={} expr=v309[16] }
    cf      = { defs={} expr=v310[1] }
    ?1      = { defs={} expr=v311[1] }
    pf      = { defs={} expr=v312[1] }
    ?3      = { defs={} expr=v313[1] }
    af      = { defs={} expr=v314[1] }
    ?5      = { defs={} expr=v315[1] }
    zf      = { defs={} expr=v316[1] }
    sf      = { defs={} expr=v317[1] }
    tf      = { defs={} expr=v318[1] }
    if      = { defs={} expr=v319[1] }
    df      = { defs={} expr=v320[1] }
    of      = { defs={} expr=v321[1] }
    iopl0   = { defs={} expr=v322[1] }
    iopl1   = { defs={} expr=v323[1] }
    nt      = { defs={} expr=v324[1] }
    ?15     = { defs={} expr=v325[1] }
    rf      = { defs={} expr=v326[1] }
    vm      = { defs={} expr=v327[1] }
    ac      = { defs={} expr=v328[1] }
    vif     = { defs={} expr=v329[1] }
    vip     = { defs={} expr=v330[1] }
    id      = { defs={} expr=v331[1] }
    ?22     = { defs={} expr=v332[1] }
    ?23     = { defs={} expr=v333[1] }
    ?24     = { defs={} expr=v334[1] }
    ?25     = { defs={} expr=v335[1] }
    ?26     = { defs={} expr=v336[1] }
    ?27     = { defs={} expr=v337[1] }
    ?28     = { defs={} expr=v338[1] }
    ?29     = { defs={} expr=v339[1] }
    ?30     = { defs={} expr=v340[1] }
    ?31     = { defs={} expr=v341[1] }
    ip      = { defs={0x080482d3} expr=0x080483d0[32] }
memory:
    address = { defs={0x080482d3} expr=(add[32] (add[32] v300[32] -4[32]) 3[32]) }
      value = { defs={0x080482d3} expr=8[8] }
      flags = { }
    address = { defs={0x080482d3} expr=(add[32] (add[32] v300[32] -4[32]) 2[32]) }
      value = { defs={0x080482d3} expr=4[8] }
      flags = { }
    address = { defs={0x080482d3} expr=(add[32] (add[32] v300[32] -4[32]) 1[32]) }
      value = { defs={0x080482d3} expr=-126[8] }
      flags = { }
    address = { defs={0x080482d3} expr=(add[32] v300[32] -4[32]) }
      value = { defs={0x080482d3} expr=-40[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483d0[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580<__do_global_ctors_aux>
registers:
    ax      = { v31600[32] }
    cx      = { v31601[32] }
    dx      = { v31602[32] }
    bx      = { v31603[32] }
    sp      = { v31604-0x4[32] }
    bp      = { v31605[32] }
    si      = { v31606[32] }
    di      = { v31607[32] }
    es      = { v31608[16] }
    cs      = { v31609[16] }
    ss      = { v31610[16] }
    ds      = { v31611[16] }
    fs      = { v31612[16] }
    gs      = { v31613[16] }
    cf      = { v31614[1] }
    ?1      = { v31615[1] }
    pf      = { v31616[1] }
    ?3      = { v31617[1] }
    af      = { v31618[1] }
    ?5      = { v31619[1] }
    zf      = { v31620[1] }
    sf      = { v31621[1] }
    tf      = { v31622[1] }
    if      = { v31623[1] }
    df      = { v31624[1] }
    of      = { v31625[1] }
    iopl0   = { v31626[1] }
    iopl1   = { v31627[1] }
    nt      = { v31628[1] }
    ?15     = { v31629[1] }
    rf      = { v31630[1] }
    vm      = { v31631[1] }
    ac      = { v31632[1] }
    vif     = { v31633[1] }
    vip     = { v31634[1] }
    id      = { v31635[1] }
    ?22     = { v31636[1] }
    ?23     = { v31637[1] }
    ?24     = { v31638[1] }
    ?25     = { v31639[1] }
    ?26     = { v31640[1] }
    ?27     = { v31641[1] }
    ?28     = { v31642[1] }
    ?29     = { v31643[1] }
    ?30     = { v31644[1] }
    ?31     = { v31645[1] }
    ip      = { 0x8048580[32] }
memory:
    address = { v31604-0x4[32] }
      value = { 0x80482dd[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v418[32] }
    cx      = { defs={} expr=v419[32] }
    dx      = { defs={} expr=v420[32] }
    bx      = { defs={} expr=v421[32] }
    sp      = { defs={0x080482d8} expr=(add[32] v422[32] -4[32]) }
    bp      = { defs={} expr=v423[32] }
    si      = { defs={} expr=v424[32] }
    di      = { defs={} expr=v425[32] }
    es      = { defs={} expr=v426[16] }
    cs      = { defs={} expr=v427[16] }
    ss      = { defs={} expr=v428[16] }
    ds      = { defs={} expr=v429[16] }
    fs      = { defs={} expr=v430[16] }
    gs      = { defs={} expr=v431[16] }
    cf      = { defs={} expr=v432[1] }
    ?1      = { defs={} expr=v433[1] }
    pf      = { defs={} expr=v434[1] }
    ?3      = { defs={} expr=v435[1] }
    af      = { defs={} expr=v436[1] }
    ?5      = { defs={} expr=v437[1] }
    zf      = { defs={} expr=v438[1] }
    sf      = { defs={} expr=v439[1] }
    tf      = { defs={} expr=v440[1] }
    if      = { defs={} expr=v441[1] }
    df      = { defs={} expr=v442[1] }
    of      = { defs={} expr=v443[1] }
    iopl0   = { defs={} expr=v444[1] }
    iopl1   = { defs={} expr=v445[1] }
    nt      = { defs={} expr=v446[1] }
    ?15     = { defs={} expr=v447[1] }
    rf      = { defs={} expr=v448[1] }
    vm      = { defs={} expr=v449[1] }
    ac      = { defs={} expr=v450[1] }
    vif     = { defs={} expr=v451[1] }
    vip     = { defs={} expr=v452[1] }
    id      = { defs={} expr=v453[1] }
    ?22     = { defs={} expr=v454[1] }
    ?23     = { defs={} expr=v455[1] }
    ?24     = { defs={} expr=v456[1] }
    ?25     = { defs={} expr=v457[1] }
    ?26     = { defs={} expr=v458[1] }
    ?27     = { defs={} expr=v459[1] }
    ?28     = { defs={} expr=v460[1] }
    ?29     = { defs={} expr=v461[1] }
    ?30     = { defs={} expr=v462[1] }
    ?31     = { defs={} expr=v463[1] }
    ip      = { defs={0x080482d8} expr=0x08048580[32] }
memory:
    address = { defs={0x080482d8} expr=(add[32] (add[32] v422[32] -4[32]) 3[32]) }
      value = { defs={0x080482d8} expr=8[8] }
      flags = { }
    address = { defs={0x080482d8} expr=(add[32] (add[32] v422[32] -4[32]) 2[32]) }
      value = { defs={0x080482d8} expr=4[8] }
      flags = { }
    address = { defs={0x080482d8} expr=(add[32] (add[32] v422[32] -4[32]) 1[32]) }
      value = { defs={0x080482d8} expr=-126[8] }
      flags = { }
    address = { defs={0x080482d8} expr=(add[32] v422[32] -4[32]) }
      value = { defs={0x080482d8} expr=-35[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048580[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
registers:
    ax      = { v31705[32] }
    cx      = { v31706[32] }
    dx      = { v31707[32] }
    bx      = { v31708[32] }
    sp      = { v31710+0x4[32] }
    bp      = { v31761[32] }
    si      = { v31711[32] }
    di      = { v31712[32] }
    es      = { v31713[16] }
    cs      = { v31714[16] }
    ss      = { v31715[16] }
    ds      = { v31716[16] }
    fs      = { v31717[16] }
    gs      = { v31718[16] }
    cf      = { v31719[1] }
    ?1      = { v31720[1] }
    pf      = { v31721[1] }
    ?3      = { v31722[1] }
    af      = { v31723[1] }
    ?5      = { v31724[1] }
    zf      = { v31725[1] }
    sf      = { v31726[1] }
    tf      = { v31727[1] }
    if      = { v31728[1] }
    df      = { v31729[1] }
    of      = { v31730[1] }
    iopl0   = { v31731[1] }
    iopl1   = { v31732[1] }
    nt      = { v31733[1] }
    ?15     = { v31734[1] }
    rf      = { v31735[1] }
    vm      = { v31736[1] }
    ac      = { v31737[1] }
    vif     = { v31738[1] }
    vip     = { v31739[1] }
    id      = { v31740[1] }
    ?22     = { v31741[1] }
    ?23     = { v31742[1] }
    ?24     = { v31743[1] }
    ?25     = { v31744[1] }
    ?26     = { v31745[1] }
    ?27     = { v31746[1] }
    ?28     = { v31747[1] }
    ?29     = { v31748[1] }
    ?30     = { v31749[1] }
    ?31     = { v31750[1] }
    ip      = { 0x80482de[32] }
memory:
    address = { v31710[32] }
      value = { v31761[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v540[32] }
    cx      = { defs={} expr=v541[32] }
    dx      = { defs={} expr=v542[32] }
    bx      = { defs={} expr=v543[32] }
    sp      = { defs={0x080482dd} expr=(add[32] v545[32] 4[32]) }
    bp      = { defs={0x080482dd} expr=v604[32] }
    si      = { defs={} expr=v546[32] }
    di      = { defs={} expr=v547[32] }
    es      = { defs={} expr=v548[16] }
    cs      = { defs={} expr=v549[16] }
    ss      = { defs={} expr=v550[16] }
    ds      = { defs={} expr=v551[16] }
    fs      = { defs={} expr=v552[16] }
    gs      = { defs={} expr=v553[16] }
    cf      = { defs={} expr=v554[1] }
    ?1      = { defs={} expr=v555[1] }
    pf      = { defs={} expr=v556[1] }
    ?3      = { defs={} expr=v557[1] }
    af      = { defs={} expr=v558[1] }
    ?5      = { defs={} expr=v559[1] }
    zf      = { defs={} expr=v560[1] }
    sf      = { defs={} expr=v561[1] }
    tf      = { defs={} expr=v562[1] }
    if      = { defs={} expr=v563[1] }
    df      = { defs={} expr=v564[1] }
    of      = { defs={} expr=v565[1] }
    iopl0   = { defs={} expr=v566[1] }
    iopl1   = { defs={} expr=v567[1] }
    nt      = { defs={} expr=v568[1] }
    ?15     = { defs={} expr=v569[1] }
    rf      = { defs={} expr=v570[1] }
    vm      = { defs={} expr=v571[1] }
    ac      = { defs={} expr=v572[1] }
    vif     = { defs={} expr=v573[1] }
    vip     = { defs={} expr=v574[1] }
    id      = { defs={} expr=v575[1] }
    ?22     = { defs={} expr=v576[1] }
    ?23     = { defs={} expr=v577[1] }
    ?24     = { defs={} expr=v578[1] }
    ?25     = { defs={} expr=v579[1] }
    ?26     = { defs={} expr=v580[1] }
    ?27     = { defs={} expr=v581[1] }
    ?28     = { defs={} expr=v582[1] }
    ?29     = { defs={} expr=v583[1] }
    ?30     = { defs={} expr=v584[1] }
    ?31     = { defs={} expr=v585[1] }
    ip      = { defs={0x080482dd} expr=0x080482de[32] }
memory:
init mem:
    address = { defs={0x080482dd} expr=(add[32] v545[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v604[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=(add[32] v545[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v604[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=(add[32] v545[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v604[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=v545[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v604[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482de[32] }
memory:
null state
0x80482de:ret    
registers:
    ax      = { v31705[32] }
    cx      = { v31706[32] }
    dx      = { v31707[32] }
    bx      = { v31708[32] }
    sp      = { v31710+0x8[32] }
    bp      = { v31761[32] }
    si      = { v31711[32] }
    di      = { v31712[32] }
    es      = { v31713[16] }
    cs      = { v31714[16] }
    ss      = { v31715[16] }
    ds      = { v31716[16] }
    fs      = { v31717[16] }
    gs      = { v31718[16] }
    cf      = { v31719[1] }
    ?1      = { v31720[1] }
    pf      = { v31721[1] }
    ?3      = { v31722[1] }
    af      = { v31723[1] }
    ?5      = { v31724[1] }
    zf      = { v31725[1] }
    sf      = { v31726[1] }
    tf      = { v31727[1] }
    if      = { v31728[1] }
    df      = { v31729[1] }
    of      = { v31730[1] }
    iopl0   = { v31731[1] }
    iopl1   = { v31732[1] }
    nt      = { v31733[1] }
    ?15     = { v31734[1] }
    rf      = { v31735[1] }
    vm      = { v31736[1] }
    ac      = { v31737[1] }
    vif     = { v31738[1] }
    vip     = { v31739[1] }
    id      = { v31740[1] }
    ?22     = { v31741[1] }
    ?23     = { v31742[1] }
    ?24     = { v31743[1] }
    ?25     = { v31744[1] }
    ?26     = { v31745[1] }
    ?27     = { v31746[1] }
    ?28     = { v31747[1] }
    ?29     = { v31748[1] }
    ?30     = { v31749[1] }
    ?31     = { v31750[1] }
    ip      = { v31773[32] }
memory:
    address = { v31710[32] }
      value = { v31761[32] }
      flags = { size=4; read-only }
    address = { v31710+0x4[32] }
      value = { v31773[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v540[32] }
    cx      = { defs={} expr=v541[32] }
    dx      = { defs={} expr=v542[32] }
    bx      = { defs={} expr=v543[32] }
    sp      = { defs={0x080482dd,0x080482de} expr=(add[32] (add[32] v545[32] 4[32]) 4[32]) }
    bp      = { defs={0x080482dd} expr=v604[32] }
    si      = { defs={} expr=v546[32] }
    di      = { defs={} expr=v547[32] }
    es      = { defs={} expr=v548[16] }
    cs      = { defs={} expr=v549[16] }
    ss      = { defs={} expr=v550[16] }
    ds      = { defs={} expr=v551[16] }
    fs      = { defs={} expr=v552[16] }
    gs      = { defs={} expr=v553[16] }
    cf      = { defs={} expr=v554[1] }
    ?1      = { defs={} expr=v555[1] }
    pf      = { defs={} expr=v556[1] }
    ?3      = { defs={} expr=v557[1] }
    af      = { defs={} expr=v558[1] }
    ?5      = { defs={} expr=v559[1] }
    zf      = { defs={} expr=v560[1] }
    sf      = { defs={} expr=v561[1] }
    tf      = { defs={} expr=v562[1] }
    if      = { defs={} expr=v563[1] }
    df      = { defs={} expr=v564[1] }
    of      = { defs={} expr=v565[1] }
    iopl0   = { defs={} expr=v566[1] }
    iopl1   = { defs={} expr=v567[1] }
    nt      = { defs={} expr=v568[1] }
    ?15     = { defs={} expr=v569[1] }
    rf      = { defs={} expr=v570[1] }
    vm      = { defs={} expr=v571[1] }
    ac      = { defs={} expr=v572[1] }
    vif     = { defs={} expr=v573[1] }
    vip     = { defs={} expr=v574[1] }
    id      = { defs={} expr=v575[1] }
    ?22     = { defs={} expr=v576[1] }
    ?23     = { defs={} expr=v577[1] }
    ?24     = { defs={} expr=v578[1] }
    ?25     = { defs={} expr=v579[1] }
    ?26     = { defs={} expr=v580[1] }
    ?27     = { defs={} expr=v581[1] }
    ?28     = { defs={} expr=v582[1] }
    ?29     = { defs={} expr=v583[1] }
    ?30     = { defs={} expr=v584[1] }
    ?31     = { defs={} expr=v585[1] }
    ip      = { defs={0x080482de} expr=v635[32] }
memory:
init mem:
    address = { defs={0x080482dd} expr=(add[32] (add[32] v545[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v635[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=(add[32] (add[32] v545[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v635[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=(add[32] (add[32] v545[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v635[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=(add[32] v545[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v635[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=(add[32] v545[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v604[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=(add[32] v545[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v604[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=(add[32] v545[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v604[32]) }
      flags = { rdonly }
    address = { defs={0x080482dd} expr=v545[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v604[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]
registers:
    ax      = { v31824[32] }
    cx      = { v31825[32] }
    dx      = { v31826[32] }
    bx      = { v31827[32] }
    sp      = { v31828[32] }
    bp      = { v31829[32] }
    si      = { v31830[32] }
    di      = { v31831[32] }
    es      = { v31832[16] }
    cs      = { v31833[16] }
    ss      = { v31834[16] }
    ds      = { v31835[16] }
    fs      = { v31836[16] }
    gs      = { v31837[16] }
    cf      = { v31838[1] }
    ?1      = { v31839[1] }
    pf      = { v31840[1] }
    ?3      = { v31841[1] }
    af      = { v31842[1] }
    ?5      = { v31843[1] }
    zf      = { v31844[1] }
    sf      = { v31845[1] }
    tf      = { v31846[1] }
    if      = { v31847[1] }
    df      = { v31848[1] }
    of      = { v31849[1] }
    iopl0   = { v31850[1] }
    iopl1   = { v31851[1] }
    nt      = { v31852[1] }
    ?15     = { v31853[1] }
    rf      = { v31854[1] }
    vm      = { v31855[1] }
    ac      = { v31856[1] }
    vif     = { v31857[1] }
    vip     = { v31858[1] }
    id      = { v31859[1] }
    ?22     = { v31860[1] }
    ?23     = { v31861[1] }
    ?24     = { v31862[1] }
    ?25     = { v31863[1] }
    ?26     = { v31864[1] }
    ?27     = { v31865[1] }
    ?28     = { v31866[1] }
    ?29     = { v31867[1] }
    ?30     = { v31868[1] }
    ?31     = { v31869[1] }
    ip      = { v31877[32] }
memory:
    address = { 0x80496d4[32] }
      value = { v31877[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v699[32] }
    cx      = { defs={} expr=v700[32] }
    dx      = { defs={} expr=v701[32] }
    bx      = { defs={} expr=v702[32] }
    sp      = { defs={} expr=v703[32] }
    bp      = { defs={} expr=v704[32] }
    si      = { defs={} expr=v705[32] }
    di      = { defs={} expr=v706[32] }
    es      = { defs={} expr=v707[16] }
    cs      = { defs={} expr=v708[16] }
    ss      = { defs={} expr=v709[16] }
    ds      = { defs={} expr=v710[16] }
    fs      = { defs={} expr=v711[16] }
    gs      = { defs={} expr=v712[16] }
    cf      = { defs={} expr=v713[1] }
    ?1      = { defs={} expr=v714[1] }
    pf      = { defs={} expr=v715[1] }
    ?3      = { defs={} expr=v716[1] }
    af      = { defs={} expr=v717[1] }
    ?5      = { defs={} expr=v718[1] }
    zf      = { defs={} expr=v719[1] }
    sf      = { defs={} expr=v720[1] }
    tf      = { defs={} expr=v721[1] }
    if      = { defs={} expr=v722[1] }
    df      = { defs={} expr=v723[1] }
    of      = { defs={} expr=v724[1] }
    iopl0   = { defs={} expr=v725[1] }
    iopl1   = { defs={} expr=v726[1] }
    nt      = { defs={} expr=v727[1] }
    ?15     = { defs={} expr=v728[1] }
    rf      = { defs={} expr=v729[1] }
    vm      = { defs={} expr=v730[1] }
    ac      = { defs={} expr=v731[1] }
    vif     = { defs={} expr=v732[1] }
    vip     = { defs={} expr=v733[1] }
    id      = { defs={} expr=v734[1] }
    ?22     = { defs={} expr=v735[1] }
    ?23     = { defs={} expr=v736[1] }
    ?24     = { defs={} expr=v737[1] }
    ?25     = { defs={} expr=v738[1] }
    ?26     = { defs={} expr=v739[1] }
    ?27     = { defs={} expr=v740[1] }
    ?28     = { defs={} expr=v741[1] }
    ?29     = { defs={} expr=v742[1] }
    ?30     = { defs={} expr=v743[1] }
    ?31     = { defs={} expr=v744[1] }
    ip      = { defs={0x080482f0} expr=v756[32] }
memory:
init mem:
    address = { defs={0x080482f0} expr=0x080496d7[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v756[32]) }
      flags = { rdonly }
    address = { defs={0x080482f0} expr=0x080496d6[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v756[32]) }
      flags = { rdonly }
    address = { defs={0x080482f0} expr=0x080496d5[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v756[32]) }
      flags = { rdonly }
    address = { defs={0x080482f0} expr=0x080496d4[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v756[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]
registers:
    ax      = { v31928[32] }
    cx      = { v31929[32] }
    dx      = { v31930[32] }
    bx      = { v31931[32] }
    sp      = { v31932[32] }
    bp      = { v31933[32] }
    si      = { v31934[32] }
    di      = { v31935[32] }
    es      = { v31936[16] }
    cs      = { v31937[16] }
    ss      = { v31938[16] }
    ds      = { v31939[16] }
    fs      = { v31940[16] }
    gs      = { v31941[16] }
    cf      = { v31942[1] }
    ?1      = { v31943[1] }
    pf      = { v31944[1] }
    ?3      = { v31945[1] }
    af      = { v31946[1] }
    ?5      = { v31947[1] }
    zf      = { v31948[1] }
    sf      = { v31949[1] }
    tf      = { v31950[1] }
    if      = { v31951[1] }
    df      = { v31952[1] }
    of      = { v31953[1] }
    iopl0   = { v31954[1] }
    iopl1   = { v31955[1] }
    nt      = { v31956[1] }
    ?15     = { v31957[1] }
    rf      = { v31958[1] }
    vm      = { v31959[1] }
    ac      = { v31960[1] }
    vif     = { v31961[1] }
    vip     = { v31962[1] }
    id      = { v31963[1] }
    ?22     = { v31964[1] }
    ?23     = { v31965[1] }
    ?24     = { v31966[1] }
    ?25     = { v31967[1] }
    ?26     = { v31968[1] }
    ?27     = { v31969[1] }
    ?28     = { v31970[1] }
    ?29     = { v31971[1] }
    ?30     = { v31972[1] }
    ?31     = { v31973[1] }
    ip      = { v31981[32] }
memory:
    address = { 0x80496d8[32] }
      value = { v31981[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v819[32] }
    cx      = { defs={} expr=v820[32] }
    dx      = { defs={} expr=v821[32] }
    bx      = { defs={} expr=v822[32] }
    sp      = { defs={} expr=v823[32] }
    bp      = { defs={} expr=v824[32] }
    si      = { defs={} expr=v825[32] }
    di      = { defs={} expr=v826[32] }
    es      = { defs={} expr=v827[16] }
    cs      = { defs={} expr=v828[16] }
    ss      = { defs={} expr=v829[16] }
    ds      = { defs={} expr=v830[16] }
    fs      = { defs={} expr=v831[16] }
    gs      = { defs={} expr=v832[16] }
    cf      = { defs={} expr=v833[1] }
    ?1      = { defs={} expr=v834[1] }
    pf      = { defs={} expr=v835[1] }
    ?3      = { defs={} expr=v836[1] }
    af      = { defs={} expr=v837[1] }
    ?5      = { defs={} expr=v838[1] }
    zf      = { defs={} expr=v839[1] }
    sf      = { defs={} expr=v840[1] }
    tf      = { defs={} expr=v841[1] }
    if      = { defs={} expr=v842[1] }
    df      = { defs={} expr=v843[1] }
    of      = { defs={} expr=v844[1] }
    iopl0   = { defs={} expr=v845[1] }
    iopl1   = { defs={} expr=v846[1] }
    nt      = { defs={} expr=v847[1] }
    ?15     = { defs={} expr=v848[1] }
    rf      = { defs={} expr=v849[1] }
    vm      = { defs={} expr=v850[1] }
    ac      = { defs={} expr=v851[1] }
    vif     = { defs={} expr=v852[1] }
    vip     = { defs={} expr=v853[1] }
    id      = { defs={} expr=v854[1] }
    ?22     = { defs={} expr=v855[1] }
    ?23     = { defs={} expr=v856[1] }
    ?24     = { defs={} expr=v857[1] }
    ?25     = { defs={} expr=v858[1] }
    ?26     = { defs={} expr=v859[1] }
    ?27     = { defs={} expr=v860[1] }
    ?28     = { defs={} expr=v861[1] }
    ?29     = { defs={} expr=v862[1] }
    ?30     = { defs={} expr=v863[1] }
    ?31     = { defs={} expr=v864[1] }
    ip      = { defs={0x08048300} expr=v876[32] }
memory:
init mem:
    address = { defs={0x08048300} expr=0x080496db[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v876[32]) }
      flags = { rdonly }
    address = { defs={0x08048300} expr=0x080496da[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v876[32]) }
      flags = { rdonly }
    address = { defs={0x08048300} expr=0x080496d9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v876[32]) }
      flags = { rdonly }
    address = { defs={0x08048300} expr=0x080496d8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v876[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]
registers:
    ax      = { v32032[32] }
    cx      = { v32033[32] }
    dx      = { v32034[32] }
    bx      = { v32035[32] }
    sp      = { v32036[32] }
    bp      = { v32037[32] }
    si      = { v32038[32] }
    di      = { v32039[32] }
    es      = { v32040[16] }
    cs      = { v32041[16] }
    ss      = { v32042[16] }
    ds      = { v32043[16] }
    fs      = { v32044[16] }
    gs      = { v32045[16] }
    cf      = { v32046[1] }
    ?1      = { v32047[1] }
    pf      = { v32048[1] }
    ?3      = { v32049[1] }
    af      = { v32050[1] }
    ?5      = { v32051[1] }
    zf      = { v32052[1] }
    sf      = { v32053[1] }
    tf      = { v32054[1] }
    if      = { v32055[1] }
    df      = { v32056[1] }
    of      = { v32057[1] }
    iopl0   = { v32058[1] }
    iopl1   = { v32059[1] }
    nt      = { v32060[1] }
    ?15     = { v32061[1] }
    rf      = { v32062[1] }
    vm      = { v32063[1] }
    ac      = { v32064[1] }
    vif     = { v32065[1] }
    vip     = { v32066[1] }
    id      = { v32067[1] }
    ?22     = { v32068[1] }
    ?23     = { v32069[1] }
    ?24     = { v32070[1] }
    ?25     = { v32071[1] }
    ?26     = { v32072[1] }
    ?27     = { v32073[1] }
    ?28     = { v32074[1] }
    ?29     = { v32075[1] }
    ?30     = { v32076[1] }
    ?31     = { v32077[1] }
    ip      = { v32085[32] }
memory:
    address = { 0x80496dc[32] }
      value = { v32085[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v939[32] }
    cx      = { defs={} expr=v940[32] }
    dx      = { defs={} expr=v941[32] }
    bx      = { defs={} expr=v942[32] }
    sp      = { defs={} expr=v943[32] }
    bp      = { defs={} expr=v944[32] }
    si      = { defs={} expr=v945[32] }
    di      = { defs={} expr=v946[32] }
    es      = { defs={} expr=v947[16] }
    cs      = { defs={} expr=v948[16] }
    ss      = { defs={} expr=v949[16] }
    ds      = { defs={} expr=v950[16] }
    fs      = { defs={} expr=v951[16] }
    gs      = { defs={} expr=v952[16] }
    cf      = { defs={} expr=v953[1] }
    ?1      = { defs={} expr=v954[1] }
    pf      = { defs={} expr=v955[1] }
    ?3      = { defs={} expr=v956[1] }
    af      = { defs={} expr=v957[1] }
    ?5      = { defs={} expr=v958[1] }
    zf      = { defs={} expr=v959[1] }
    sf      = { defs={} expr=v960[1] }
    tf      = { defs={} expr=v961[1] }
    if      = { defs={} expr=v962[1] }
    df      = { defs={} expr=v963[1] }
    of      = { defs={} expr=v964[1] }
    iopl0   = { defs={} expr=v965[1] }
    iopl1   = { defs={} expr=v966[1] }
    nt      = { defs={} expr=v967[1] }
    ?15     = { defs={} expr=v968[1] }
    rf      = { defs={} expr=v969[1] }
    vm      = { defs={} expr=v970[1] }
    ac      = { defs={} expr=v971[1] }
    vif     = { defs={} expr=v972[1] }
    vip     = { defs={} expr=v973[1] }
    id      = { defs={} expr=v974[1] }
    ?22     = { defs={} expr=v975[1] }
    ?23     = { defs={} expr=v976[1] }
    ?24     = { defs={} expr=v977[1] }
    ?25     = { defs={} expr=v978[1] }
    ?26     = { defs={} expr=v979[1] }
    ?27     = { defs={} expr=v980[1] }
    ?28     = { defs={} expr=v981[1] }
    ?29     = { defs={} expr=v982[1] }
    ?30     = { defs={} expr=v983[1] }
    ?31     = { defs={} expr=v984[1] }
    ip      = { defs={0x08048310} expr=v996[32] }
memory:
init mem:
    address = { defs={0x08048310} expr=0x080496df[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v996[32]) }
      flags = { rdonly }
    address = { defs={0x08048310} expr=0x080496de[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v996[32]) }
      flags = { rdonly }
    address = { defs={0x08048310} expr=0x080496dd[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v996[32]) }
      flags = { rdonly }
    address = { defs={0x08048310} expr=0x080496dc[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v996[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]
registers:
    ax      = { v32136[32] }
    cx      = { v32137[32] }
    dx      = { v32138[32] }
    bx      = { v32139[32] }
    sp      = { v32140[32] }
    bp      = { v32141[32] }
    si      = { v32142[32] }
    di      = { v32143[32] }
    es      = { v32144[16] }
    cs      = { v32145[16] }
    ss      = { v32146[16] }
    ds      = { v32147[16] }
    fs      = { v32148[16] }
    gs      = { v32149[16] }
    cf      = { v32150[1] }
    ?1      = { v32151[1] }
    pf      = { v32152[1] }
    ?3      = { v32153[1] }
    af      = { v32154[1] }
    ?5      = { v32155[1] }
    zf      = { v32156[1] }
    sf      = { v32157[1] }
    tf      = { v32158[1] }
    if      = { v32159[1] }
    df      = { v32160[1] }
    of      = { v32161[1] }
    iopl0   = { v32162[1] }
    iopl1   = { v32163[1] }
    nt      = { v32164[1] }
    ?15     = { v32165[1] }
    rf      = { v32166[1] }
    vm      = { v32167[1] }
    ac      = { v32168[1] }
    vif     = { v32169[1] }
    vip     = { v32170[1] }
    id      = { v32171[1] }
    ?22     = { v32172[1] }
    ?23     = { v32173[1] }
    ?24     = { v32174[1] }
    ?25     = { v32175[1] }
    ?26     = { v32176[1] }
    ?27     = { v32177[1] }
    ?28     = { v32178[1] }
    ?29     = { v32179[1] }
    ?30     = { v32180[1] }
    ?31     = { v32181[1] }
    ip      = { v32189[32] }
memory:
    address = { 0x80496e0[32] }
      value = { v32189[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v1059[32] }
    cx      = { defs={} expr=v1060[32] }
    dx      = { defs={} expr=v1061[32] }
    bx      = { defs={} expr=v1062[32] }
    sp      = { defs={} expr=v1063[32] }
    bp      = { defs={} expr=v1064[32] }
    si      = { defs={} expr=v1065[32] }
    di      = { defs={} expr=v1066[32] }
    es      = { defs={} expr=v1067[16] }
    cs      = { defs={} expr=v1068[16] }
    ss      = { defs={} expr=v1069[16] }
    ds      = { defs={} expr=v1070[16] }
    fs      = { defs={} expr=v1071[16] }
    gs      = { defs={} expr=v1072[16] }
    cf      = { defs={} expr=v1073[1] }
    ?1      = { defs={} expr=v1074[1] }
    pf      = { defs={} expr=v1075[1] }
    ?3      = { defs={} expr=v1076[1] }
    af      = { defs={} expr=v1077[1] }
    ?5      = { defs={} expr=v1078[1] }
    zf      = { defs={} expr=v1079[1] }
    sf      = { defs={} expr=v1080[1] }
    tf      = { defs={} expr=v1081[1] }
    if      = { defs={} expr=v1082[1] }
    df      = { defs={} expr=v1083[1] }
    of      = { defs={} expr=v1084[1] }
    iopl0   = { defs={} expr=v1085[1] }
    iopl1   = { defs={} expr=v1086[1] }
    nt      = { defs={} expr=v1087[1] }
    ?15     = { defs={} expr=v1088[1] }
    rf      = { defs={} expr=v1089[1] }
    vm      = { defs={} expr=v1090[1] }
    ac      = { defs={} expr=v1091[1] }
    vif     = { defs={} expr=v1092[1] }
    vip     = { defs={} expr=v1093[1] }
    id      = { defs={} expr=v1094[1] }
    ?22     = { defs={} expr=v1095[1] }
    ?23     = { defs={} expr=v1096[1] }
    ?24     = { defs={} expr=v1097[1] }
    ?25     = { defs={} expr=v1098[1] }
    ?26     = { defs={} expr=v1099[1] }
    ?27     = { defs={} expr=v1100[1] }
    ?28     = { defs={} expr=v1101[1] }
    ?29     = { defs={} expr=v1102[1] }
    ?30     = { defs={} expr=v1103[1] }
    ?31     = { defs={} expr=v1104[1] }
    ip      = { defs={0x08048320} expr=v1116[32] }
memory:
init mem:
    address = { defs={0x08048320} expr=0x080496e3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1116[32]) }
      flags = { rdonly }
    address = { defs={0x08048320} expr=0x080496e2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1116[32]) }
      flags = { rdonly }
    address = { defs={0x08048320} expr=0x080496e1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1116[32]) }
      flags = { rdonly }
    address = { defs={0x08048320} expr=0x080496e0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1116[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]
registers:
    ax      = { v32240[32] }
    cx      = { v32241[32] }
    dx      = { v32242[32] }
    bx      = { v32243[32] }
    sp      = { v32244[32] }
    bp      = { v32245[32] }
    si      = { v32246[32] }
    di      = { v32247[32] }
    es      = { v32248[16] }
    cs      = { v32249[16] }
    ss      = { v32250[16] }
    ds      = { v32251[16] }
    fs      = { v32252[16] }
    gs      = { v32253[16] }
    cf      = { v32254[1] }
    ?1      = { v32255[1] }
    pf      = { v32256[1] }
    ?3      = { v32257[1] }
    af      = { v32258[1] }
    ?5      = { v32259[1] }
    zf      = { v32260[1] }
    sf      = { v32261[1] }
    tf      = { v32262[1] }
    if      = { v32263[1] }
    df      = { v32264[1] }
    of      = { v32265[1] }
    iopl0   = { v32266[1] }
    iopl1   = { v32267[1] }
    nt      = { v32268[1] }
    ?15     = { v32269[1] }
    rf      = { v32270[1] }
    vm      = { v32271[1] }
    ac      = { v32272[1] }
    vif     = { v32273[1] }
    vip     = { v32274[1] }
    id      = { v32275[1] }
    ?22     = { v32276[1] }
    ?23     = { v32277[1] }
    ?24     = { v32278[1] }
    ?25     = { v32279[1] }
    ?26     = { v32280[1] }
    ?27     = { v32281[1] }
    ?28     = { v32282[1] }
    ?29     = { v32283[1] }
    ?30     = { v32284[1] }
    ?31     = { v32285[1] }
    ip      = { v32293[32] }
memory:
    address = { 0x80496e4[32] }
      value = { v32293[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v1179[32] }
    cx      = { defs={} expr=v1180[32] }
    dx      = { defs={} expr=v1181[32] }
    bx      = { defs={} expr=v1182[32] }
    sp      = { defs={} expr=v1183[32] }
    bp      = { defs={} expr=v1184[32] }
    si      = { defs={} expr=v1185[32] }
    di      = { defs={} expr=v1186[32] }
    es      = { defs={} expr=v1187[16] }
    cs      = { defs={} expr=v1188[16] }
    ss      = { defs={} expr=v1189[16] }
    ds      = { defs={} expr=v1190[16] }
    fs      = { defs={} expr=v1191[16] }
    gs      = { defs={} expr=v1192[16] }
    cf      = { defs={} expr=v1193[1] }
    ?1      = { defs={} expr=v1194[1] }
    pf      = { defs={} expr=v1195[1] }
    ?3      = { defs={} expr=v1196[1] }
    af      = { defs={} expr=v1197[1] }
    ?5      = { defs={} expr=v1198[1] }
    zf      = { defs={} expr=v1199[1] }
    sf      = { defs={} expr=v1200[1] }
    tf      = { defs={} expr=v1201[1] }
    if      = { defs={} expr=v1202[1] }
    df      = { defs={} expr=v1203[1] }
    of      = { defs={} expr=v1204[1] }
    iopl0   = { defs={} expr=v1205[1] }
    iopl1   = { defs={} expr=v1206[1] }
    nt      = { defs={} expr=v1207[1] }
    ?15     = { defs={} expr=v1208[1] }
    rf      = { defs={} expr=v1209[1] }
    vm      = { defs={} expr=v1210[1] }
    ac      = { defs={} expr=v1211[1] }
    vif     = { defs={} expr=v1212[1] }
    vip     = { defs={} expr=v1213[1] }
    id      = { defs={} expr=v1214[1] }
    ?22     = { defs={} expr=v1215[1] }
    ?23     = { defs={} expr=v1216[1] }
    ?24     = { defs={} expr=v1217[1] }
    ?25     = { defs={} expr=v1218[1] }
    ?26     = { defs={} expr=v1219[1] }
    ?27     = { defs={} expr=v1220[1] }
    ?28     = { defs={} expr=v1221[1] }
    ?29     = { defs={} expr=v1222[1] }
    ?30     = { defs={} expr=v1223[1] }
    ?31     = { defs={} expr=v1224[1] }
    ip      = { defs={0x08048330} expr=v1236[32] }
memory:
init mem:
    address = { defs={0x08048330} expr=0x080496e7[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1236[32]) }
      flags = { rdonly }
    address = { defs={0x08048330} expr=0x080496e6[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1236[32]) }
      flags = { rdonly }
    address = { defs={0x08048330} expr=0x080496e5[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1236[32]) }
      flags = { rdonly }
    address = { defs={0x08048330} expr=0x080496e4[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1236[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
registers:
    ax      = { v32344[32] }
    cx      = { v32345[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32348[32] }
    bp      = { 0x0[32] }
    si      = { v32350[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { 0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32418[1] }
    ?5      = { v32363[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048342[32] }
memory:
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={} expr=v1300[32] }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={} expr=v1303[32] }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={} expr=v1305[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048340} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048340} expr=1[1] }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048340} expr=v1406[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048340} expr=1[1] }
    sf      = { defs={0x08048340} expr=0[1] }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048340} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340} expr=0x08048342[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048342[32] }
memory:
null state
0x8048342:pop    esi
registers:
    ax      = { v32344[32] }
    cx      = { v32345[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32348+0x4[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { 0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32418[1] }
    ?5      = { v32363[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048343[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={} expr=v1300[32] }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342} expr=(add[32] v1303[32] 4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048340} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048340} expr=1[1] }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048340} expr=v1406[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048340} expr=1[1] }
    sf      = { defs={0x08048340} expr=0[1] }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048340} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342} expr=0x08048343[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048343[32] }
memory:
null state
0x8048343:mov    ecx, esp
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32348+0x4[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { 0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32418[1] }
    ?5      = { v32363[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048345[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342} expr=(add[32] v1303[32] 4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048340} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048340} expr=1[1] }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048340} expr=v1406[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048340} expr=1[1] }
    sf      = { defs={0x08048340} expr=0[1] }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048340} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343} expr=0x08048345[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048345[32] }
memory:
null state
0x8048345:and    esp, 0xf0<-0x10>
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048348[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345} expr=(bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345} expr=0x08048348[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048348[32] }
memory:
null state
0x8048348:push   eax
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0x4[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048349[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348} expr=0x08048349[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffffc[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048349[32] }
memory:
null state
0x8048349:push   esp
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0x8[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x804834a[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
    address = { v32442-0x8[32] }
      value = { v32442-0x4[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349} expr=0x0804834a[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffff8[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804834a[32] }
memory:
null state
0x804834a:push   edx
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0xc[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x804834b[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
    address = { v32442-0x8[32] }
      value = { v32442-0x4[32] }
      flags = { size=4 }
    address = { v32442-0xc[32] }
      value = { v32346[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a} expr=0x0804834b[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffff4[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804834b[32] }
memory:
null state
0x804834b:push   0x08048520<__libc_csu_fini>
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0x10[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048350[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
    address = { v32442-0x8[32] }
      value = { v32442-0x4[32] }
      flags = { size=4 }
    address = { v32442-0xc[32] }
      value = { v32346[32] }
      flags = { size=4 }
    address = { v32442-0x10[32] }
      value = { 0x8048520[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=0x08048350[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834b} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834b} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834b} expr=-123[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834b} expr=32[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffff0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048350[32] }
memory:
null state
0x8048350:push   0x080484b0<__libc_csu_init>
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0x14[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048355[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
    address = { v32442-0x8[32] }
      value = { v32442-0x4[32] }
      flags = { size=4 }
    address = { v32442-0xc[32] }
      value = { v32346[32] }
      flags = { size=4 }
    address = { v32442-0x10[32] }
      value = { 0x8048520[32] }
      flags = { size=4 }
    address = { v32442-0x14[32] }
      value = { 0x80484b0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=0x08048355[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048350} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048350} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048350} expr=-124[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048350} expr=-80[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834b} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834b} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834b} expr=-123[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834b} expr=32[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffec[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048355[32] }
memory:
null state
0x8048355:push   ecx
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0x18[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048356[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
    address = { v32442-0x8[32] }
      value = { v32442-0x4[32] }
      flags = { size=4 }
    address = { v32442-0xc[32] }
      value = { v32346[32] }
      flags = { size=4 }
    address = { v32442-0x10[32] }
      value = { 0x8048520[32] }
      flags = { size=4 }
    address = { v32442-0x14[32] }
      value = { 0x80484b0[32] }
      flags = { size=4 }
    address = { v32442-0x18[32] }
      value = { v32348+0x4[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=0x08048356[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 24[32] 32[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 16[32] 24[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 8[32] 16[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 0[32] 8[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048350} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048350} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048350} expr=-124[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048350} expr=-80[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834b} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834b} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834b} expr=-123[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834b} expr=32[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffe8[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048356[32] }
memory:
null state
0x8048356:push   esi
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0x1c[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048357[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
    address = { v32442-0x8[32] }
      value = { v32442-0x4[32] }
      flags = { size=4 }
    address = { v32442-0xc[32] }
      value = { v32346[32] }
      flags = { size=4 }
    address = { v32442-0x10[32] }
      value = { 0x8048520[32] }
      flags = { size=4 }
    address = { v32442-0x14[32] }
      value = { 0x80484b0[32] }
      flags = { size=4 }
    address = { v32442-0x18[32] }
      value = { v32348+0x4[32] }
      flags = { size=4 }
    address = { v32442-0x1c[32] }
      value = { v32429[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=0x08048357[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 24[32] 32[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 16[32] 24[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 8[32] 16[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 0[32] 8[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048350} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048350} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048350} expr=-124[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048350} expr=-80[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834b} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834b} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834b} expr=-123[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834b} expr=32[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffe4[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048357[32] }
memory:
null state
0x8048357:push   0x08048410<main>
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0x20[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x804835c[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
    address = { v32442-0x8[32] }
      value = { v32442-0x4[32] }
      flags = { size=4 }
    address = { v32442-0xc[32] }
      value = { v32346[32] }
      flags = { size=4 }
    address = { v32442-0x10[32] }
      value = { 0x8048520[32] }
      flags = { size=4 }
    address = { v32442-0x14[32] }
      value = { 0x80484b0[32] }
      flags = { size=4 }
    address = { v32442-0x18[32] }
      value = { v32348+0x4[32] }
      flags = { size=4 }
    address = { v32442-0x1c[32] }
      value = { v32429[32] }
      flags = { size=4 }
    address = { v32442-0x20[32] }
      value = { 0x8048410[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=0x0804835c[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048357} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048357} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048357} expr=-124[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048357} expr=16[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 24[32] 32[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 16[32] 24[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 8[32] 16[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 0[32] 8[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048350} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048350} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048350} expr=-124[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048350} expr=-80[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834b} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834b} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834b} expr=-123[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834b} expr=32[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffe0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804835c[32] }
memory:
null state
0x804835c:call   0x08048310<__libc_start_main@plt>
registers:
    ax      = { v32344[32] }
    cx      = { v32348+0x4[32] }
    dx      = { v32346[32] }
    bx      = { v32347[32] }
    sp      = { v32442-0x24[32] }
    bp      = { 0x0[32] }
    si      = { v32429[32] }
    di      = { v32351[32] }
    es      = { v32352[16] }
    cs      = { v32353[16] }
    ss      = { v32354[16] }
    ds      = { v32355[16] }
    fs      = { v32356[16] }
    gs      = { v32357[16] }
    cf      = { 0x0[1] }
    ?1      = { v32359[1] }
    pf      = { -v32472+0x1[1] }
    ?3      = { v32361[1] }
    af      = { v32480[1] }
    ?5      = { v32363[1] }
    zf      = { v32477[1] }
    sf      = { v32475[1] }
    tf      = { v32366[1] }
    if      = { v32367[1] }
    df      = { v32368[1] }
    of      = { 0x0[1] }
    iopl0   = { v32370[1] }
    iopl1   = { v32371[1] }
    nt      = { v32372[1] }
    ?15     = { v32373[1] }
    rf      = { v32374[1] }
    vm      = { v32375[1] }
    ac      = { v32376[1] }
    vif     = { v32377[1] }
    vip     = { v32378[1] }
    id      = { v32379[1] }
    ?22     = { v32380[1] }
    ?23     = { v32381[1] }
    ?24     = { v32382[1] }
    ?25     = { v32383[1] }
    ?26     = { v32384[1] }
    ?27     = { v32385[1] }
    ?28     = { v32386[1] }
    ?29     = { v32387[1] }
    ?30     = { v32388[1] }
    ?31     = { v32389[1] }
    ip      = { 0x8048310[32] }
memory:
    address = { v32348[32] }
      value = { v32429[32] }
      flags = { size=4; read-only; clobbered }
    address = { v32442-0x4[32] }
      value = { v32344[32] }
      flags = { size=4 }
    address = { v32442-0x8[32] }
      value = { v32442-0x4[32] }
      flags = { size=4 }
    address = { v32442-0xc[32] }
      value = { v32346[32] }
      flags = { size=4 }
    address = { v32442-0x10[32] }
      value = { 0x8048520[32] }
      flags = { size=4 }
    address = { v32442-0x14[32] }
      value = { 0x80484b0[32] }
      flags = { size=4 }
    address = { v32442-0x18[32] }
      value = { v32348+0x4[32] }
      flags = { size=4 }
    address = { v32442-0x1c[32] }
      value = { v32429[32] }
      flags = { size=4 }
    address = { v32442-0x20[32] }
      value = { 0x8048410[32] }
      flags = { size=4 }
    address = { v32442-0x24[32] }
      value = { 0x8048361[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1299[32] }
    cx      = { defs={0x08048342,0x08048343} expr=(add[32] v1303[32] 4[32]) }
    dx      = { defs={} expr=v1301[32] }
    bx      = { defs={} expr=v1302[32] }
    sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048340} expr=0[32] }
    si      = { defs={0x08048342} expr=v1426[32] }
    di      = { defs={} expr=v1306[32] }
    es      = { defs={} expr=v1307[16] }
    cs      = { defs={} expr=v1308[16] }
    ss      = { defs={} expr=v1309[16] }
    ds      = { defs={} expr=v1310[16] }
    fs      = { defs={} expr=v1311[16] }
    gs      = { defs={} expr=v1312[16] }
    cf      = { defs={0x08048345} expr=0[1] }
    ?1      = { defs={} expr=v1314[1] }
    pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v1316[1] }
    af      = { defs={0x08048345} expr=v1509[1] }
    ?5      = { defs={} expr=v1318[1] }
    zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32])) }
    tf      = { defs={} expr=v1321[1] }
    if      = { defs={} expr=v1322[1] }
    df      = { defs={} expr=v1323[1] }
    of      = { defs={0x08048345} expr=0[1] }
    iopl0   = { defs={} expr=v1325[1] }
    iopl1   = { defs={} expr=v1326[1] }
    nt      = { defs={} expr=v1327[1] }
    ?15     = { defs={} expr=v1328[1] }
    rf      = { defs={} expr=v1329[1] }
    vm      = { defs={} expr=v1330[1] }
    ac      = { defs={} expr=v1331[1] }
    vif     = { defs={} expr=v1332[1] }
    vip     = { defs={} expr=v1333[1] }
    id      = { defs={} expr=v1334[1] }
    ?22     = { defs={} expr=v1335[1] }
    ?23     = { defs={} expr=v1336[1] }
    ?24     = { defs={} expr=v1337[1] }
    ?25     = { defs={} expr=v1338[1] }
    ?26     = { defs={} expr=v1339[1] }
    ?27     = { defs={} expr=v1340[1] }
    ?28     = { defs={} expr=v1341[1] }
    ?29     = { defs={} expr=v1342[1] }
    ?30     = { defs={} expr=v1343[1] }
    ?31     = { defs={} expr=v1344[1] }
    ip      = { defs={0x0804835c} expr=0x08048310[32] }
memory:
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=-125[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=97[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048357} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048357} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048357} expr=-124[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048357} expr=16[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048356} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 24[32] 32[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 16[32] 24[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 8[32] 16[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048343,0x08048355} expr=(extract[8] 0[32] 8[32] (add[32] v1303[32] 4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048350} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048350} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048350} expr=-124[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048350} expr=-80[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834b} expr=8[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834b} expr=4[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834b} expr=-123[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834b} expr=32[8] }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 24[32] 32[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 16[32] 24[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 8[32] 16[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x0804834a} expr=(extract[8] 0[32] 8[32] v1301[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) -4[32]) }
      value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32])) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048348} expr=(extract[8] 24[32] 32[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048348} expr=(extract[8] 16[32] 24[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048348} expr=(extract[8] 8[32] 16[32] v1299[32]) }
      flags = { }
    address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v1303[32] 4[32]) -16[32]) -4[32]) }
      value = { defs={0x08048348} expr=(extract[8] 0[32] 8[32] v1299[32]) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v1303[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v1303[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v1426[32]) }
      flags = { rdonly }
    address = { defs={} expr=v1303[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v1426[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffdc[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048310[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
registers:
    ax      = { v32613[32] }
    cx      = { v32614[32] }
    dx      = { v32615[32] }
    bx      = { v32616[32] }
    sp      = { v32617[32] }
    bp      = { v32618[32] }
    si      = { v32619[32] }
    di      = { v32620[32] }
    es      = { v32621[16] }
    cs      = { v32622[16] }
    ss      = { v32623[16] }
    ds      = { v32624[16] }
    fs      = { v32625[16] }
    gs      = { v32626[16] }
    cf      = { v32627[1] }
    ?1      = { v32628[1] }
    pf      = { v32629[1] }
    ?3      = { v32630[1] }
    af      = { v32631[1] }
    ?5      = { v32632[1] }
    zf      = { v32633[1] }
    sf      = { v32634[1] }
    tf      = { v32635[1] }
    if      = { v32636[1] }
    df      = { v32637[1] }
    of      = { v32638[1] }
    iopl0   = { v32639[1] }
    iopl1   = { v32640[1] }
    nt      = { v32641[1] }
    ?15     = { v32642[1] }
    rf      = { v32643[1] }
    vm      = { v32644[1] }
    ac      = { v32645[1] }
    vif     = { v32646[1] }
    vip     = { v32647[1] }
    id      = { v32648[1] }
    ?22     = { v32649[1] }
    ?23     = { v32650[1] }
    ?24     = { v32651[1] }
    ?25     = { v32652[1] }
    ?26     = { v32653[1] }
    ?27     = { v32654[1] }
    ?28     = { v32655[1] }
    ?29     = { v32656[1] }
    ?30     = { v32657[1] }
    ?31     = { v32658[1] }
    ip      = { 0x8048361[32] }
memory:
registers:
    ax      = { defs={} expr=v1786[32] }
    cx      = { defs={} expr=v1787[32] }
    dx      = { defs={} expr=v1788[32] }
    bx      = { defs={} expr=v1789[32] }
    sp      = { defs={} expr=v1790[32] }
    bp      = { defs={} expr=v1791[32] }
    si      = { defs={} expr=v1792[32] }
    di      = { defs={} expr=v1793[32] }
    es      = { defs={} expr=v1794[16] }
    cs      = { defs={} expr=v1795[16] }
    ss      = { defs={} expr=v1796[16] }
    ds      = { defs={} expr=v1797[16] }
    fs      = { defs={} expr=v1798[16] }
    gs      = { defs={} expr=v1799[16] }
    cf      = { defs={} expr=v1800[1] }
    ?1      = { defs={} expr=v1801[1] }
    pf      = { defs={} expr=v1802[1] }
    ?3      = { defs={} expr=v1803[1] }
    af      = { defs={} expr=v1804[1] }
    ?5      = { defs={} expr=v1805[1] }
    zf      = { defs={} expr=v1806[1] }
    sf      = { defs={} expr=v1807[1] }
    tf      = { defs={} expr=v1808[1] }
    if      = { defs={} expr=v1809[1] }
    df      = { defs={} expr=v1810[1] }
    of      = { defs={} expr=v1811[1] }
    iopl0   = { defs={} expr=v1812[1] }
    iopl1   = { defs={} expr=v1813[1] }
    nt      = { defs={} expr=v1814[1] }
    ?15     = { defs={} expr=v1815[1] }
    rf      = { defs={} expr=v1816[1] }
    vm      = { defs={} expr=v1817[1] }
    ac      = { defs={} expr=v1818[1] }
    vif     = { defs={} expr=v1819[1] }
    vip     = { defs={} expr=v1820[1] }
    id      = { defs={} expr=v1821[1] }
    ?22     = { defs={} expr=v1822[1] }
    ?23     = { defs={} expr=v1823[1] }
    ?24     = { defs={} expr=v1824[1] }
    ?25     = { defs={} expr=v1825[1] }
    ?26     = { defs={} expr=v1826[1] }
    ?27     = { defs={} expr=v1827[1] }
    ?28     = { defs={} expr=v1828[1] }
    ?29     = { defs={} expr=v1829[1] }
    ?30     = { defs={} expr=v1830[1] }
    ?31     = { defs={} expr=v1831[1] }
    ip      = { defs={0x08048361} expr=0x08048361[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048361[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
registers:
    ax      = { v32712[32] }
    cx      = { v32713[32] }
    dx      = { v32714[32] }
    bx      = { v32715[32] }
    sp      = { v32716-0x4[32] }
    bp      = { v32717[32] }
    si      = { v32718[32] }
    di      = { v32719[32] }
    es      = { v32720[16] }
    cs      = { v32721[16] }
    ss      = { v32722[16] }
    ds      = { v32723[16] }
    fs      = { v32724[16] }
    gs      = { v32725[16] }
    cf      = { v32726[1] }
    ?1      = { v32727[1] }
    pf      = { v32728[1] }
    ?3      = { v32729[1] }
    af      = { v32730[1] }
    ?5      = { v32731[1] }
    zf      = { v32732[1] }
    sf      = { v32733[1] }
    tf      = { v32734[1] }
    if      = { v32735[1] }
    df      = { v32736[1] }
    of      = { v32737[1] }
    iopl0   = { v32738[1] }
    iopl1   = { v32739[1] }
    nt      = { v32740[1] }
    ?15     = { v32741[1] }
    rf      = { v32742[1] }
    vm      = { v32743[1] }
    ac      = { v32744[1] }
    vif     = { v32745[1] }
    vip     = { v32746[1] }
    id      = { v32747[1] }
    ?22     = { v32748[1] }
    ?23     = { v32749[1] }
    ?24     = { v32750[1] }
    ?25     = { v32751[1] }
    ?26     = { v32752[1] }
    ?27     = { v32753[1] }
    ?28     = { v32754[1] }
    ?29     = { v32755[1] }
    ?30     = { v32756[1] }
    ?31     = { v32757[1] }
    ip      = { 0x8048365[32] }
memory:
    address = { v32716-0x4[32] }
      value = { v32717[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1891[32] }
    cx      = { defs={} expr=v1892[32] }
    dx      = { defs={} expr=v1893[32] }
    bx      = { defs={} expr=v1894[32] }
    sp      = { defs={0x08048364} expr=(add[32] v1895[32] -4[32]) }
    bp      = { defs={} expr=v1896[32] }
    si      = { defs={} expr=v1897[32] }
    di      = { defs={} expr=v1898[32] }
    es      = { defs={} expr=v1899[16] }
    cs      = { defs={} expr=v1900[16] }
    ss      = { defs={} expr=v1901[16] }
    ds      = { defs={} expr=v1902[16] }
    fs      = { defs={} expr=v1903[16] }
    gs      = { defs={} expr=v1904[16] }
    cf      = { defs={} expr=v1905[1] }
    ?1      = { defs={} expr=v1906[1] }
    pf      = { defs={} expr=v1907[1] }
    ?3      = { defs={} expr=v1908[1] }
    af      = { defs={} expr=v1909[1] }
    ?5      = { defs={} expr=v1910[1] }
    zf      = { defs={} expr=v1911[1] }
    sf      = { defs={} expr=v1912[1] }
    tf      = { defs={} expr=v1913[1] }
    if      = { defs={} expr=v1914[1] }
    df      = { defs={} expr=v1915[1] }
    of      = { defs={} expr=v1916[1] }
    iopl0   = { defs={} expr=v1917[1] }
    iopl1   = { defs={} expr=v1918[1] }
    nt      = { defs={} expr=v1919[1] }
    ?15     = { defs={} expr=v1920[1] }
    rf      = { defs={} expr=v1921[1] }
    vm      = { defs={} expr=v1922[1] }
    ac      = { defs={} expr=v1923[1] }
    vif     = { defs={} expr=v1924[1] }
    vip     = { defs={} expr=v1925[1] }
    id      = { defs={} expr=v1926[1] }
    ?22     = { defs={} expr=v1927[1] }
    ?23     = { defs={} expr=v1928[1] }
    ?24     = { defs={} expr=v1929[1] }
    ?25     = { defs={} expr=v1930[1] }
    ?26     = { defs={} expr=v1931[1] }
    ?27     = { defs={} expr=v1932[1] }
    ?28     = { defs={} expr=v1933[1] }
    ?29     = { defs={} expr=v1934[1] }
    ?30     = { defs={} expr=v1935[1] }
    ?31     = { defs={} expr=v1936[1] }
    ip      = { defs={0x08048364} expr=0x08048365[32] }
memory:
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 3[32]) }
      value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 2[32]) }
      value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 1[32]) }
      value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] v1895[32] -4[32]) }
      value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1896[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048365[32] }
memory:
null state
0x8048365:mov    ebp, esp
registers:
    ax      = { v32712[32] }
    cx      = { v32713[32] }
    dx      = { v32714[32] }
    bx      = { v32715[32] }
    sp      = { v32716-0x4[32] }
    bp      = { v32716-0x4[32] }
    si      = { v32718[32] }
    di      = { v32719[32] }
    es      = { v32720[16] }
    cs      = { v32721[16] }
    ss      = { v32722[16] }
    ds      = { v32723[16] }
    fs      = { v32724[16] }
    gs      = { v32725[16] }
    cf      = { v32726[1] }
    ?1      = { v32727[1] }
    pf      = { v32728[1] }
    ?3      = { v32729[1] }
    af      = { v32730[1] }
    ?5      = { v32731[1] }
    zf      = { v32732[1] }
    sf      = { v32733[1] }
    tf      = { v32734[1] }
    if      = { v32735[1] }
    df      = { v32736[1] }
    of      = { v32737[1] }
    iopl0   = { v32738[1] }
    iopl1   = { v32739[1] }
    nt      = { v32740[1] }
    ?15     = { v32741[1] }
    rf      = { v32742[1] }
    vm      = { v32743[1] }
    ac      = { v32744[1] }
    vif     = { v32745[1] }
    vip     = { v32746[1] }
    id      = { v32747[1] }
    ?22     = { v32748[1] }
    ?23     = { v32749[1] }
    ?24     = { v32750[1] }
    ?25     = { v32751[1] }
    ?26     = { v32752[1] }
    ?27     = { v32753[1] }
    ?28     = { v32754[1] }
    ?29     = { v32755[1] }
    ?30     = { v32756[1] }
    ?31     = { v32757[1] }
    ip      = { 0x8048367[32] }
memory:
    address = { v32716-0x4[32] }
      value = { v32717[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1891[32] }
    cx      = { defs={} expr=v1892[32] }
    dx      = { defs={} expr=v1893[32] }
    bx      = { defs={} expr=v1894[32] }
    sp      = { defs={0x08048364} expr=(add[32] v1895[32] -4[32]) }
    bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1895[32] -4[32]) }
    si      = { defs={} expr=v1897[32] }
    di      = { defs={} expr=v1898[32] }
    es      = { defs={} expr=v1899[16] }
    cs      = { defs={} expr=v1900[16] }
    ss      = { defs={} expr=v1901[16] }
    ds      = { defs={} expr=v1902[16] }
    fs      = { defs={} expr=v1903[16] }
    gs      = { defs={} expr=v1904[16] }
    cf      = { defs={} expr=v1905[1] }
    ?1      = { defs={} expr=v1906[1] }
    pf      = { defs={} expr=v1907[1] }
    ?3      = { defs={} expr=v1908[1] }
    af      = { defs={} expr=v1909[1] }
    ?5      = { defs={} expr=v1910[1] }
    zf      = { defs={} expr=v1911[1] }
    sf      = { defs={} expr=v1912[1] }
    tf      = { defs={} expr=v1913[1] }
    if      = { defs={} expr=v1914[1] }
    df      = { defs={} expr=v1915[1] }
    of      = { defs={} expr=v1916[1] }
    iopl0   = { defs={} expr=v1917[1] }
    iopl1   = { defs={} expr=v1918[1] }
    nt      = { defs={} expr=v1919[1] }
    ?15     = { defs={} expr=v1920[1] }
    rf      = { defs={} expr=v1921[1] }
    vm      = { defs={} expr=v1922[1] }
    ac      = { defs={} expr=v1923[1] }
    vif     = { defs={} expr=v1924[1] }
    vip     = { defs={} expr=v1925[1] }
    id      = { defs={} expr=v1926[1] }
    ?22     = { defs={} expr=v1927[1] }
    ?23     = { defs={} expr=v1928[1] }
    ?24     = { defs={} expr=v1929[1] }
    ?25     = { defs={} expr=v1930[1] }
    ?26     = { defs={} expr=v1931[1] }
    ?27     = { defs={} expr=v1932[1] }
    ?28     = { defs={} expr=v1933[1] }
    ?29     = { defs={} expr=v1934[1] }
    ?30     = { defs={} expr=v1935[1] }
    ?31     = { defs={} expr=v1936[1] }
    ip      = { defs={0x08048364,0x08048365} expr=0x08048367[32] }
memory:
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 3[32]) }
      value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 2[32]) }
      value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 1[32]) }
      value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] v1895[32] -4[32]) }
      value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1896[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048367[32] }
memory:
null state
0x8048367:push   ebx
registers:
    ax      = { v32712[32] }
    cx      = { v32713[32] }
    dx      = { v32714[32] }
    bx      = { v32715[32] }
    sp      = { v32716-0x8[32] }
    bp      = { v32716-0x4[32] }
    si      = { v32718[32] }
    di      = { v32719[32] }
    es      = { v32720[16] }
    cs      = { v32721[16] }
    ss      = { v32722[16] }
    ds      = { v32723[16] }
    fs      = { v32724[16] }
    gs      = { v32725[16] }
    cf      = { v32726[1] }
    ?1      = { v32727[1] }
    pf      = { v32728[1] }
    ?3      = { v32729[1] }
    af      = { v32730[1] }
    ?5      = { v32731[1] }
    zf      = { v32732[1] }
    sf      = { v32733[1] }
    tf      = { v32734[1] }
    if      = { v32735[1] }
    df      = { v32736[1] }
    of      = { v32737[1] }
    iopl0   = { v32738[1] }
    iopl1   = { v32739[1] }
    nt      = { v32740[1] }
    ?15     = { v32741[1] }
    rf      = { v32742[1] }
    vm      = { v32743[1] }
    ac      = { v32744[1] }
    vif     = { v32745[1] }
    vip     = { v32746[1] }
    id      = { v32747[1] }
    ?22     = { v32748[1] }
    ?23     = { v32749[1] }
    ?24     = { v32750[1] }
    ?25     = { v32751[1] }
    ?26     = { v32752[1] }
    ?27     = { v32753[1] }
    ?28     = { v32754[1] }
    ?29     = { v32755[1] }
    ?30     = { v32756[1] }
    ?31     = { v32757[1] }
    ip      = { 0x8048368[32] }
memory:
    address = { v32716-0x4[32] }
      value = { v32717[32] }
      flags = { size=4 }
    address = { v32716-0x8[32] }
      value = { v32715[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1891[32] }
    cx      = { defs={} expr=v1892[32] }
    dx      = { defs={} expr=v1893[32] }
    bx      = { defs={} expr=v1894[32] }
    sp      = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1895[32] -4[32]) -4[32]) }
    bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1895[32] -4[32]) }
    si      = { defs={} expr=v1897[32] }
    di      = { defs={} expr=v1898[32] }
    es      = { defs={} expr=v1899[16] }
    cs      = { defs={} expr=v1900[16] }
    ss      = { defs={} expr=v1901[16] }
    ds      = { defs={} expr=v1902[16] }
    fs      = { defs={} expr=v1903[16] }
    gs      = { defs={} expr=v1904[16] }
    cf      = { defs={} expr=v1905[1] }
    ?1      = { defs={} expr=v1906[1] }
    pf      = { defs={} expr=v1907[1] }
    ?3      = { defs={} expr=v1908[1] }
    af      = { defs={} expr=v1909[1] }
    ?5      = { defs={} expr=v1910[1] }
    zf      = { defs={} expr=v1911[1] }
    sf      = { defs={} expr=v1912[1] }
    tf      = { defs={} expr=v1913[1] }
    if      = { defs={} expr=v1914[1] }
    df      = { defs={} expr=v1915[1] }
    of      = { defs={} expr=v1916[1] }
    iopl0   = { defs={} expr=v1917[1] }
    iopl1   = { defs={} expr=v1918[1] }
    nt      = { defs={} expr=v1919[1] }
    ?15     = { defs={} expr=v1920[1] }
    rf      = { defs={} expr=v1921[1] }
    vm      = { defs={} expr=v1922[1] }
    ac      = { defs={} expr=v1923[1] }
    vif     = { defs={} expr=v1924[1] }
    vip     = { defs={} expr=v1925[1] }
    id      = { defs={} expr=v1926[1] }
    ?22     = { defs={} expr=v1927[1] }
    ?23     = { defs={} expr=v1928[1] }
    ?24     = { defs={} expr=v1929[1] }
    ?25     = { defs={} expr=v1930[1] }
    ?26     = { defs={} expr=v1931[1] }
    ?27     = { defs={} expr=v1932[1] }
    ?28     = { defs={} expr=v1933[1] }
    ?29     = { defs={} expr=v1934[1] }
    ?30     = { defs={} expr=v1935[1] }
    ?31     = { defs={} expr=v1936[1] }
    ip      = { defs={0x08048364,0x08048365,0x08048367} expr=0x08048368[32] }
memory:
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048367} expr=(extract[8] 24[32] 32[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048367} expr=(extract[8] 16[32] 24[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048367} expr=(extract[8] 8[32] 16[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1895[32] -4[32]) -4[32]) }
      value = { defs={0x08048367} expr=(extract[8] 0[32] 8[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 3[32]) }
      value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 2[32]) }
      value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 1[32]) }
      value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] v1895[32] -4[32]) }
      value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1896[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048368[32] }
memory:
null state
0x8048368:push   ecx
registers:
    ax      = { v32712[32] }
    cx      = { v32713[32] }
    dx      = { v32714[32] }
    bx      = { v32715[32] }
    sp      = { v32716-0xc[32] }
    bp      = { v32716-0x4[32] }
    si      = { v32718[32] }
    di      = { v32719[32] }
    es      = { v32720[16] }
    cs      = { v32721[16] }
    ss      = { v32722[16] }
    ds      = { v32723[16] }
    fs      = { v32724[16] }
    gs      = { v32725[16] }
    cf      = { v32726[1] }
    ?1      = { v32727[1] }
    pf      = { v32728[1] }
    ?3      = { v32729[1] }
    af      = { v32730[1] }
    ?5      = { v32731[1] }
    zf      = { v32732[1] }
    sf      = { v32733[1] }
    tf      = { v32734[1] }
    if      = { v32735[1] }
    df      = { v32736[1] }
    of      = { v32737[1] }
    iopl0   = { v32738[1] }
    iopl1   = { v32739[1] }
    nt      = { v32740[1] }
    ?15     = { v32741[1] }
    rf      = { v32742[1] }
    vm      = { v32743[1] }
    ac      = { v32744[1] }
    vif     = { v32745[1] }
    vip     = { v32746[1] }
    id      = { v32747[1] }
    ?22     = { v32748[1] }
    ?23     = { v32749[1] }
    ?24     = { v32750[1] }
    ?25     = { v32751[1] }
    ?26     = { v32752[1] }
    ?27     = { v32753[1] }
    ?28     = { v32754[1] }
    ?29     = { v32755[1] }
    ?30     = { v32756[1] }
    ?31     = { v32757[1] }
    ip      = { 0x8048369[32] }
memory:
    address = { v32716-0x4[32] }
      value = { v32717[32] }
      flags = { size=4 }
    address = { v32716-0x8[32] }
      value = { v32715[32] }
      flags = { size=4 }
    address = { v32716-0xc[32] }
      value = { v32713[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1891[32] }
    cx      = { defs={} expr=v1892[32] }
    dx      = { defs={} expr=v1893[32] }
    bx      = { defs={} expr=v1894[32] }
    sp      = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1895[32] -4[32]) }
    si      = { defs={} expr=v1897[32] }
    di      = { defs={} expr=v1898[32] }
    es      = { defs={} expr=v1899[16] }
    cs      = { defs={} expr=v1900[16] }
    ss      = { defs={} expr=v1901[16] }
    ds      = { defs={} expr=v1902[16] }
    fs      = { defs={} expr=v1903[16] }
    gs      = { defs={} expr=v1904[16] }
    cf      = { defs={} expr=v1905[1] }
    ?1      = { defs={} expr=v1906[1] }
    pf      = { defs={} expr=v1907[1] }
    ?3      = { defs={} expr=v1908[1] }
    af      = { defs={} expr=v1909[1] }
    ?5      = { defs={} expr=v1910[1] }
    zf      = { defs={} expr=v1911[1] }
    sf      = { defs={} expr=v1912[1] }
    tf      = { defs={} expr=v1913[1] }
    if      = { defs={} expr=v1914[1] }
    df      = { defs={} expr=v1915[1] }
    of      = { defs={} expr=v1916[1] }
    iopl0   = { defs={} expr=v1917[1] }
    iopl1   = { defs={} expr=v1918[1] }
    nt      = { defs={} expr=v1919[1] }
    ?15     = { defs={} expr=v1920[1] }
    rf      = { defs={} expr=v1921[1] }
    vm      = { defs={} expr=v1922[1] }
    ac      = { defs={} expr=v1923[1] }
    vif     = { defs={} expr=v1924[1] }
    vip     = { defs={} expr=v1925[1] }
    id      = { defs={} expr=v1926[1] }
    ?22     = { defs={} expr=v1927[1] }
    ?23     = { defs={} expr=v1928[1] }
    ?24     = { defs={} expr=v1929[1] }
    ?25     = { defs={} expr=v1930[1] }
    ?26     = { defs={} expr=v1931[1] }
    ?27     = { defs={} expr=v1932[1] }
    ?28     = { defs={} expr=v1933[1] }
    ?29     = { defs={} expr=v1934[1] }
    ?30     = { defs={} expr=v1935[1] }
    ?31     = { defs={} expr=v1936[1] }
    ip      = { defs={0x08048364,0x08048365,0x08048367,0x08048368} expr=0x08048369[32] }
memory:
    address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048368} expr=(extract[8] 24[32] 32[32] v1892[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048368} expr=(extract[8] 16[32] 24[32] v1892[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048368} expr=(extract[8] 8[32] 16[32] v1892[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048368} expr=(extract[8] 0[32] 8[32] v1892[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048367} expr=(extract[8] 24[32] 32[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048367} expr=(extract[8] 16[32] 24[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048367} expr=(extract[8] 8[32] 16[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1895[32] -4[32]) -4[32]) }
      value = { defs={0x08048367} expr=(extract[8] 0[32] 8[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 3[32]) }
      value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 2[32]) }
      value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 1[32]) }
      value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] v1895[32] -4[32]) }
      value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1896[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048369[32] }
memory:
null state
0x8048369:call   0x0804836e<<Insn>>
registers:
    ax      = { v32712[32] }
    cx      = { v32713[32] }
    dx      = { v32714[32] }
    bx      = { v32715[32] }
    sp      = { v32716-0x10[32] }
    bp      = { v32716-0x4[32] }
    si      = { v32718[32] }
    di      = { v32719[32] }
    es      = { v32720[16] }
    cs      = { v32721[16] }
    ss      = { v32722[16] }
    ds      = { v32723[16] }
    fs      = { v32724[16] }
    gs      = { v32725[16] }
    cf      = { v32726[1] }
    ?1      = { v32727[1] }
    pf      = { v32728[1] }
    ?3      = { v32729[1] }
    af      = { v32730[1] }
    ?5      = { v32731[1] }
    zf      = { v32732[1] }
    sf      = { v32733[1] }
    tf      = { v32734[1] }
    if      = { v32735[1] }
    df      = { v32736[1] }
    of      = { v32737[1] }
    iopl0   = { v32738[1] }
    iopl1   = { v32739[1] }
    nt      = { v32740[1] }
    ?15     = { v32741[1] }
    rf      = { v32742[1] }
    vm      = { v32743[1] }
    ac      = { v32744[1] }
    vif     = { v32745[1] }
    vip     = { v32746[1] }
    id      = { v32747[1] }
    ?22     = { v32748[1] }
    ?23     = { v32749[1] }
    ?24     = { v32750[1] }
    ?25     = { v32751[1] }
    ?26     = { v32752[1] }
    ?27     = { v32753[1] }
    ?28     = { v32754[1] }
    ?29     = { v32755[1] }
    ?30     = { v32756[1] }
    ?31     = { v32757[1] }
    ip      = { 0x804836e[32] }
memory:
    address = { v32716-0x4[32] }
      value = { v32717[32] }
      flags = { size=4 }
    address = { v32716-0x8[32] }
      value = { v32715[32] }
      flags = { size=4 }
    address = { v32716-0xc[32] }
      value = { v32713[32] }
      flags = { size=4 }
    address = { v32716-0x10[32] }
      value = { 0x804836e[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v1891[32] }
    cx      = { defs={} expr=v1892[32] }
    dx      = { defs={} expr=v1893[32] }
    bx      = { defs={} expr=v1894[32] }
    sp      = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048364,0x08048365} expr=(add[32] v1895[32] -4[32]) }
    si      = { defs={} expr=v1897[32] }
    di      = { defs={} expr=v1898[32] }
    es      = { defs={} expr=v1899[16] }
    cs      = { defs={} expr=v1900[16] }
    ss      = { defs={} expr=v1901[16] }
    ds      = { defs={} expr=v1902[16] }
    fs      = { defs={} expr=v1903[16] }
    gs      = { defs={} expr=v1904[16] }
    cf      = { defs={} expr=v1905[1] }
    ?1      = { defs={} expr=v1906[1] }
    pf      = { defs={} expr=v1907[1] }
    ?3      = { defs={} expr=v1908[1] }
    af      = { defs={} expr=v1909[1] }
    ?5      = { defs={} expr=v1910[1] }
    zf      = { defs={} expr=v1911[1] }
    sf      = { defs={} expr=v1912[1] }
    tf      = { defs={} expr=v1913[1] }
    if      = { defs={} expr=v1914[1] }
    df      = { defs={} expr=v1915[1] }
    of      = { defs={} expr=v1916[1] }
    iopl0   = { defs={} expr=v1917[1] }
    iopl1   = { defs={} expr=v1918[1] }
    nt      = { defs={} expr=v1919[1] }
    ?15     = { defs={} expr=v1920[1] }
    rf      = { defs={} expr=v1921[1] }
    vm      = { defs={} expr=v1922[1] }
    ac      = { defs={} expr=v1923[1] }
    vif     = { defs={} expr=v1924[1] }
    vip     = { defs={} expr=v1925[1] }
    id      = { defs={} expr=v1926[1] }
    ?22     = { defs={} expr=v1927[1] }
    ?23     = { defs={} expr=v1928[1] }
    ?24     = { defs={} expr=v1929[1] }
    ?25     = { defs={} expr=v1930[1] }
    ?26     = { defs={} expr=v1931[1] }
    ?27     = { defs={} expr=v1932[1] }
    ?28     = { defs={} expr=v1933[1] }
    ?29     = { defs={} expr=v1934[1] }
    ?30     = { defs={} expr=v1935[1] }
    ?31     = { defs={} expr=v1936[1] }
    ip      = { defs={0x08048369} expr=0x0804836e[32] }
memory:
    address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=8[8] }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=4[8] }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=-125[8] }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=110[8] }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048368} expr=(extract[8] 24[32] 32[32] v1892[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048368} expr=(extract[8] 16[32] 24[32] v1892[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048368} expr=(extract[8] 8[32] 16[32] v1892[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048368} expr=(extract[8] 0[32] 8[32] v1892[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048367} expr=(extract[8] 24[32] 32[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048367} expr=(extract[8] 16[32] 24[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] (add[32] v1895[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048367} expr=(extract[8] 8[32] 16[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v1895[32] -4[32]) -4[32]) }
      value = { defs={0x08048367} expr=(extract[8] 0[32] 8[32] v1894[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 3[32]) }
      value = { defs={0x08048364} expr=(extract[8] 24[32] 32[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 2[32]) }
      value = { defs={0x08048364} expr=(extract[8] 16[32] 24[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] (add[32] v1895[32] -4[32]) 1[32]) }
      value = { defs={0x08048364} expr=(extract[8] 8[32] 16[32] v1896[32]) }
      flags = { }
    address = { defs={0x08048364} expr=(add[32] v1895[32] -4[32]) }
      value = { defs={0x08048364} expr=(extract[8] 0[32] 8[32] v1896[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804836e[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
registers:
    ax      = { v32849[32] }
    cx      = { v32850[32] }
    dx      = { v32851[32] }
    bx      = { v32904[32] }
    sp      = { v32853+0x4[32] }
    bp      = { v32854[32] }
    si      = { v32855[32] }
    di      = { v32856[32] }
    es      = { v32857[16] }
    cs      = { v32858[16] }
    ss      = { v32859[16] }
    ds      = { v32860[16] }
    fs      = { v32861[16] }
    gs      = { v32862[16] }
    cf      = { v32863[1] }
    ?1      = { v32864[1] }
    pf      = { v32865[1] }
    ?3      = { v32866[1] }
    af      = { v32867[1] }
    ?5      = { v32868[1] }
    zf      = { v32869[1] }
    sf      = { v32870[1] }
    tf      = { v32871[1] }
    if      = { v32872[1] }
    df      = { v32873[1] }
    of      = { v32874[1] }
    iopl0   = { v32875[1] }
    iopl1   = { v32876[1] }
    nt      = { v32877[1] }
    ?15     = { v32878[1] }
    rf      = { v32879[1] }
    vm      = { v32880[1] }
    ac      = { v32881[1] }
    vif     = { v32882[1] }
    vip     = { v32883[1] }
    id      = { v32884[1] }
    ?22     = { v32885[1] }
    ?23     = { v32886[1] }
    ?24     = { v32887[1] }
    ?25     = { v32888[1] }
    ?26     = { v32889[1] }
    ?27     = { v32890[1] }
    ?28     = { v32891[1] }
    ?29     = { v32892[1] }
    ?30     = { v32893[1] }
    ?31     = { v32894[1] }
    ip      = { 0x804836f[32] }
memory:
    address = { v32853[32] }
      value = { v32904[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v2099[32] }
    cx      = { defs={} expr=v2100[32] }
    dx      = { defs={} expr=v2101[32] }
    bx      = { defs={0x0804836e} expr=v2161[32] }
    sp      = { defs={0x0804836e} expr=(add[32] v2103[32] 4[32]) }
    bp      = { defs={} expr=v2104[32] }
    si      = { defs={} expr=v2105[32] }
    di      = { defs={} expr=v2106[32] }
    es      = { defs={} expr=v2107[16] }
    cs      = { defs={} expr=v2108[16] }
    ss      = { defs={} expr=v2109[16] }
    ds      = { defs={} expr=v2110[16] }
    fs      = { defs={} expr=v2111[16] }
    gs      = { defs={} expr=v2112[16] }
    cf      = { defs={} expr=v2113[1] }
    ?1      = { defs={} expr=v2114[1] }
    pf      = { defs={} expr=v2115[1] }
    ?3      = { defs={} expr=v2116[1] }
    af      = { defs={} expr=v2117[1] }
    ?5      = { defs={} expr=v2118[1] }
    zf      = { defs={} expr=v2119[1] }
    sf      = { defs={} expr=v2120[1] }
    tf      = { defs={} expr=v2121[1] }
    if      = { defs={} expr=v2122[1] }
    df      = { defs={} expr=v2123[1] }
    of      = { defs={} expr=v2124[1] }
    iopl0   = { defs={} expr=v2125[1] }
    iopl1   = { defs={} expr=v2126[1] }
    nt      = { defs={} expr=v2127[1] }
    ?15     = { defs={} expr=v2128[1] }
    rf      = { defs={} expr=v2129[1] }
    vm      = { defs={} expr=v2130[1] }
    ac      = { defs={} expr=v2131[1] }
    vif     = { defs={} expr=v2132[1] }
    vip     = { defs={} expr=v2133[1] }
    id      = { defs={} expr=v2134[1] }
    ?22     = { defs={} expr=v2135[1] }
    ?23     = { defs={} expr=v2136[1] }
    ?24     = { defs={} expr=v2137[1] }
    ?25     = { defs={} expr=v2138[1] }
    ?26     = { defs={} expr=v2139[1] }
    ?27     = { defs={} expr=v2140[1] }
    ?28     = { defs={} expr=v2141[1] }
    ?29     = { defs={} expr=v2142[1] }
    ?30     = { defs={} expr=v2143[1] }
    ?31     = { defs={} expr=v2144[1] }
    ip      = { defs={0x0804836e} expr=0x0804836f[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v2103[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2103[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2161[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804836f[32] }
memory:
null state
0x804836f:add    ebx, 0x0000135a
registers:
    ax      = { v32849[32] }
    cx      = { v32850[32] }
    dx      = { v32851[32] }
    bx      = { v32904+0x135a[32] }
    sp      = { v32853+0x4[32] }
    bp      = { v32854[32] }
    si      = { v32855[32] }
    di      = { v32856[32] }
    es      = { v32857[16] }
    cs      = { v32858[16] }
    ss      = { v32859[16] }
    ds      = { v32860[16] }
    fs      = { v32861[16] }
    gs      = { v32862[16] }
    cf      = { v32953[1] }
    ?1      = { v32864[1] }
    pf      = { -v32944+0x1[1] }
    ?3      = { v32866[1] }
    af      = { v32951[1] }
    ?5      = { v32868[1] }
    zf      = { v32949[1] }
    sf      = { v32947[1] }
    tf      = { v32871[1] }
    if      = { v32872[1] }
    df      = { v32873[1] }
    of      = { v32959[1] }
    iopl0   = { v32875[1] }
    iopl1   = { v32876[1] }
    nt      = { v32877[1] }
    ?15     = { v32878[1] }
    rf      = { v32879[1] }
    vm      = { v32880[1] }
    ac      = { v32881[1] }
    vif     = { v32882[1] }
    vip     = { v32883[1] }
    id      = { v32884[1] }
    ?22     = { v32885[1] }
    ?23     = { v32886[1] }
    ?24     = { v32887[1] }
    ?25     = { v32888[1] }
    ?26     = { v32889[1] }
    ?27     = { v32890[1] }
    ?28     = { v32891[1] }
    ?29     = { v32892[1] }
    ?30     = { v32893[1] }
    ?31     = { v32894[1] }
    ip      = { 0x8048375[32] }
memory:
    address = { v32853[32] }
      value = { v32904[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v2099[32] }
    cx      = { defs={} expr=v2100[32] }
    dx      = { defs={} expr=v2101[32] }
    bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v2161[32] 4954[32]) }
    sp      = { defs={0x0804836e} expr=(add[32] v2103[32] 4[32]) }
    bp      = { defs={} expr=v2104[32] }
    si      = { defs={} expr=v2105[32] }
    di      = { defs={} expr=v2106[32] }
    es      = { defs={} expr=v2107[16] }
    cs      = { defs={} expr=v2108[16] }
    ss      = { defs={} expr=v2109[16] }
    ds      = { defs={} expr=v2110[16] }
    fs      = { defs={} expr=v2111[16] }
    gs      = { defs={} expr=v2112[16] }
    cf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2161[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v2161[32]) 4954[33]))))) }
    ?1      = { defs={} expr=v2114[1] }
    pf      = { defs={0x0804836e,0x0804836f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))))))) }
    ?3      = { defs={} expr=v2116[1] }
    af      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2161[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v2161[32]) 4954[33]))))) }
    ?5      = { defs={} expr=v2118[1] }
    zf      = { defs={0x0804836e,0x0804836f} expr=(zerop[1] (add[32] v2161[32] 4954[32])) }
    sf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (add[32] v2161[32] 4954[32])) }
    tf      = { defs={} expr=v2121[1] }
    if      = { defs={} expr=v2122[1] }
    df      = { defs={} expr=v2123[1] }
    of      = { defs={0x0804836e,0x0804836f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2161[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v2161[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2161[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v2161[32]) 4954[33])))))) }
    iopl0   = { defs={} expr=v2125[1] }
    iopl1   = { defs={} expr=v2126[1] }
    nt      = { defs={} expr=v2127[1] }
    ?15     = { defs={} expr=v2128[1] }
    rf      = { defs={} expr=v2129[1] }
    vm      = { defs={} expr=v2130[1] }
    ac      = { defs={} expr=v2131[1] }
    vif     = { defs={} expr=v2132[1] }
    vip     = { defs={} expr=v2133[1] }
    id      = { defs={} expr=v2134[1] }
    ?22     = { defs={} expr=v2135[1] }
    ?23     = { defs={} expr=v2136[1] }
    ?24     = { defs={} expr=v2137[1] }
    ?25     = { defs={} expr=v2138[1] }
    ?26     = { defs={} expr=v2139[1] }
    ?27     = { defs={} expr=v2140[1] }
    ?28     = { defs={} expr=v2141[1] }
    ?29     = { defs={} expr=v2142[1] }
    ?30     = { defs={} expr=v2143[1] }
    ?31     = { defs={} expr=v2144[1] }
    ip      = { defs={0x0804836e,0x0804836f} expr=0x08048375[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v2103[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2103[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2161[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048375[32] }
memory:
null state
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
registers:
    ax      = { v32849[32] }
    cx      = { v32850[32] }
    dx      = { v32969[32] }
    bx      = { v32904+0x135a[32] }
    sp      = { v32853+0x4[32] }
    bp      = { v32854[32] }
    si      = { v32855[32] }
    di      = { v32856[32] }
    es      = { v32857[16] }
    cs      = { v32858[16] }
    ss      = { v32859[16] }
    ds      = { v32860[16] }
    fs      = { v32861[16] }
    gs      = { v32862[16] }
    cf      = { v32953[1] }
    ?1      = { v32864[1] }
    pf      = { -v32944+0x1[1] }
    ?3      = { v32866[1] }
    af      = { v32951[1] }
    ?5      = { v32868[1] }
    zf      = { v32949[1] }
    sf      = { v32947[1] }
    tf      = { v32871[1] }
    if      = { v32872[1] }
    df      = { v32873[1] }
    of      = { v32959[1] }
    iopl0   = { v32875[1] }
    iopl1   = { v32876[1] }
    nt      = { v32877[1] }
    ?15     = { v32878[1] }
    rf      = { v32879[1] }
    vm      = { v32880[1] }
    ac      = { v32881[1] }
    vif     = { v32882[1] }
    vip     = { v32883[1] }
    id      = { v32884[1] }
    ?22     = { v32885[1] }
    ?23     = { v32886[1] }
    ?24     = { v32887[1] }
    ?25     = { v32888[1] }
    ?26     = { v32889[1] }
    ?27     = { v32890[1] }
    ?28     = { v32891[1] }
    ?29     = { v32892[1] }
    ?30     = { v32893[1] }
    ?31     = { v32894[1] }
    ip      = { 0x804837b[32] }
memory:
    address = { v32853[32] }
      value = { v32904[32] }
      flags = { size=4; read-only }
    address = { v32904+0x1356[32] }
      value = { v32969[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v2099[32] }
    cx      = { defs={} expr=v2100[32] }
    dx      = { defs={0x08048375} expr=v2270[32] }
    bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v2161[32] 4954[32]) }
    sp      = { defs={0x0804836e} expr=(add[32] v2103[32] 4[32]) }
    bp      = { defs={} expr=v2104[32] }
    si      = { defs={} expr=v2105[32] }
    di      = { defs={} expr=v2106[32] }
    es      = { defs={} expr=v2107[16] }
    cs      = { defs={} expr=v2108[16] }
    ss      = { defs={} expr=v2109[16] }
    ds      = { defs={} expr=v2110[16] }
    fs      = { defs={} expr=v2111[16] }
    gs      = { defs={} expr=v2112[16] }
    cf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2161[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v2161[32]) 4954[33]))))) }
    ?1      = { defs={} expr=v2114[1] }
    pf      = { defs={0x0804836e,0x0804836f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2161[32] 4954[32]))))))) }
    ?3      = { defs={} expr=v2116[1] }
    af      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2161[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v2161[32]) 4954[33]))))) }
    ?5      = { defs={} expr=v2118[1] }
    zf      = { defs={0x0804836e,0x0804836f} expr=(zerop[1] (add[32] v2161[32] 4954[32])) }
    sf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (add[32] v2161[32] 4954[32])) }
    tf      = { defs={} expr=v2121[1] }
    if      = { defs={} expr=v2122[1] }
    df      = { defs={} expr=v2123[1] }
    of      = { defs={0x0804836e,0x0804836f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2161[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v2161[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2161[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v2161[32]) 4954[33])))))) }
    iopl0   = { defs={} expr=v2125[1] }
    iopl1   = { defs={} expr=v2126[1] }
    nt      = { defs={} expr=v2127[1] }
    ?15     = { defs={} expr=v2128[1] }
    rf      = { defs={} expr=v2129[1] }
    vm      = { defs={} expr=v2130[1] }
    ac      = { defs={} expr=v2131[1] }
    vif     = { defs={} expr=v2132[1] }
    vip     = { defs={} expr=v2133[1] }
    id      = { defs={} expr=v2134[1] }
    ?22     = { defs={} expr=v2135[1] }
    ?23     = { defs={} expr=v2136[1] }
    ?24     = { defs={} expr=v2137[1] }
    ?25     = { defs={} expr=v2138[1] }
    ?26     = { defs={} expr=v2139[1] }
    ?27     = { defs={} expr=v2140[1] }
    ?28     = { defs={} expr=v2141[1] }
    ?29     = { defs={} expr=v2142[1] }
    ?30     = { defs={} expr=v2143[1] }
    ?31     = { defs={} expr=v2144[1] }
    ip      = { defs={0x0804836e,0x0804836f,0x08048375} expr=0x0804837b[32] }
memory:
init mem:
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v2161[32] 4954[32]) -4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2103[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2161[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804837b[32] }
memory:
null state
0x804837b:test   edx, edx
registers:
    ax      = { v32849[32] }
    cx      = { v32850[32] }
    dx      = { v32969[32] }
    bx      = { v32904+0x135a[32] }
    sp      = { v32853+0x4[32] }
    bp      = { v32854[32] }
    si      = { v32855[32] }
    di      = { v32856[32] }
    es      = { v32857[16] }
    cs      = { v32858[16] }
    ss      = { v32859[16] }
    ds      = { v32860[16] }
    fs      = { v32861[16] }
    gs      = { v32862[16] }
    cf      = { 0x0[1] }
    ?1      = { v32864[1] }
    pf      = { -v33007+0x1[1] }
    ?3      = { v32866[1] }
    af      = { v33015[1] }
    ?5      = { v32868[1] }
    zf      = { v33012[1] }
    sf      = { v33010[1] }
    tf      = { v32871[1] }
    if      = { v32872[1] }
    df      = { v32873[1] }
    of      = { 0x0[1] }
    iopl0   = { v32875[1] }
    iopl1   = { v32876[1] }
    nt      = { v32877[1] }
    ?15     = { v32878[1] }
    rf      = { v32879[1] }
    vm      = { v32880[1] }
    ac      = { v32881[1] }
    vif     = { v32882[1] }
    vip     = { v32883[1] }
    id      = { v32884[1] }
    ?22     = { v32885[1] }
    ?23     = { v32886[1] }
    ?24     = { v32887[1] }
    ?25     = { v32888[1] }
    ?26     = { v32889[1] }
    ?27     = { v32890[1] }
    ?28     = { v32891[1] }
    ?29     = { v32892[1] }
    ?30     = { v32893[1] }
    ?31     = { v32894[1] }
    ip      = { 0x804837d[32] }
memory:
    address = { v32853[32] }
      value = { v32904[32] }
      flags = { size=4; read-only }
    address = { v32904+0x1356[32] }
      value = { v32969[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v2099[32] }
    cx      = { defs={} expr=v2100[32] }
    dx      = { defs={0x08048375} expr=v2270[32] }
    bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v2161[32] 4954[32]) }
    sp      = { defs={0x0804836e} expr=(add[32] v2103[32] 4[32]) }
    bp      = { defs={} expr=v2104[32] }
    si      = { defs={} expr=v2105[32] }
    di      = { defs={} expr=v2106[32] }
    es      = { defs={} expr=v2107[16] }
    cs      = { defs={} expr=v2108[16] }
    ss      = { defs={} expr=v2109[16] }
    ds      = { defs={} expr=v2110[16] }
    fs      = { defs={} expr=v2111[16] }
    gs      = { defs={} expr=v2112[16] }
    cf      = { defs={0x0804837b} expr=0[1] }
    ?1      = { defs={} expr=v2114[1] }
    pf      = { defs={0x08048375,0x0804837b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))))))) }
    ?3      = { defs={} expr=v2116[1] }
    af      = { defs={0x0804837b} expr=v2342[1] }
    ?5      = { defs={} expr=v2118[1] }
    zf      = { defs={0x08048375,0x0804837b} expr=(zerop[1] (bv-and[32] v2270[32] v2270[32])) }
    sf      = { defs={0x08048375,0x0804837b} expr=(extract[1] 31[32] 32[32] (bv-and[32] v2270[32] v2270[32])) }
    tf      = { defs={} expr=v2121[1] }
    if      = { defs={} expr=v2122[1] }
    df      = { defs={} expr=v2123[1] }
    of      = { defs={0x0804837b} expr=0[1] }
    iopl0   = { defs={} expr=v2125[1] }
    iopl1   = { defs={} expr=v2126[1] }
    nt      = { defs={} expr=v2127[1] }
    ?15     = { defs={} expr=v2128[1] }
    rf      = { defs={} expr=v2129[1] }
    vm      = { defs={} expr=v2130[1] }
    ac      = { defs={} expr=v2131[1] }
    vif     = { defs={} expr=v2132[1] }
    vip     = { defs={} expr=v2133[1] }
    id      = { defs={} expr=v2134[1] }
    ?22     = { defs={} expr=v2135[1] }
    ?23     = { defs={} expr=v2136[1] }
    ?24     = { defs={} expr=v2137[1] }
    ?25     = { defs={} expr=v2138[1] }
    ?26     = { defs={} expr=v2139[1] }
    ?27     = { defs={} expr=v2140[1] }
    ?28     = { defs={} expr=v2141[1] }
    ?29     = { defs={} expr=v2142[1] }
    ?30     = { defs={} expr=v2143[1] }
    ?31     = { defs={} expr=v2144[1] }
    ip      = { defs={0x0804836e,0x0804836f,0x08048375,0x0804837b} expr=0x0804837d[32] }
memory:
init mem:
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v2161[32] 4954[32]) -4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2103[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2161[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804837d[32] }
memory:
null state
0x804837d:je     0x08048384<<Insn>>
registers:
    ax      = { v32849[32] }
    cx      = { v32850[32] }
    dx      = { v32969[32] }
    bx      = { v32904+0x135a[32] }
    sp      = { v32853+0x4[32] }
    bp      = { v32854[32] }
    si      = { v32855[32] }
    di      = { v32856[32] }
    es      = { v32857[16] }
    cs      = { v32858[16] }
    ss      = { v32859[16] }
    ds      = { v32860[16] }
    fs      = { v32861[16] }
    gs      = { v32862[16] }
    cf      = { 0x0[1] }
    ?1      = { v32864[1] }
    pf      = { -v33007+0x1[1] }
    ?3      = { v32866[1] }
    af      = { v33015[1] }
    ?5      = { v32868[1] }
    zf      = { v33012[1] }
    sf      = { v33010[1] }
    tf      = { v32871[1] }
    if      = { v32872[1] }
    df      = { v32873[1] }
    of      = { 0x0[1] }
    iopl0   = { v32875[1] }
    iopl1   = { v32876[1] }
    nt      = { v32877[1] }
    ?15     = { v32878[1] }
    rf      = { v32879[1] }
    vm      = { v32880[1] }
    ac      = { v32881[1] }
    vif     = { v32882[1] }
    vip     = { v32883[1] }
    id      = { v32884[1] }
    ?22     = { v32885[1] }
    ?23     = { v32886[1] }
    ?24     = { v32887[1] }
    ?25     = { v32888[1] }
    ?26     = { v32889[1] }
    ?27     = { v32890[1] }
    ?28     = { v32891[1] }
    ?29     = { v32892[1] }
    ?30     = { v32893[1] }
    ?31     = { v32894[1] }
    ip      = { v33025[32] }
memory:
    address = { v32853[32] }
      value = { v32904[32] }
      flags = { size=4; read-only }
    address = { v32904+0x1356[32] }
      value = { v32969[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v2099[32] }
    cx      = { defs={} expr=v2100[32] }
    dx      = { defs={0x08048375} expr=v2270[32] }
    bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v2161[32] 4954[32]) }
    sp      = { defs={0x0804836e} expr=(add[32] v2103[32] 4[32]) }
    bp      = { defs={} expr=v2104[32] }
    si      = { defs={} expr=v2105[32] }
    di      = { defs={} expr=v2106[32] }
    es      = { defs={} expr=v2107[16] }
    cs      = { defs={} expr=v2108[16] }
    ss      = { defs={} expr=v2109[16] }
    ds      = { defs={} expr=v2110[16] }
    fs      = { defs={} expr=v2111[16] }
    gs      = { defs={} expr=v2112[16] }
    cf      = { defs={0x0804837b} expr=0[1] }
    ?1      = { defs={} expr=v2114[1] }
    pf      = { defs={0x08048375,0x0804837b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v2270[32] v2270[32]))))))) }
    ?3      = { defs={} expr=v2116[1] }
    af      = { defs={0x0804837b} expr=v2342[1] }
    ?5      = { defs={} expr=v2118[1] }
    zf      = { defs={0x08048375,0x0804837b} expr=(zerop[1] (bv-and[32] v2270[32] v2270[32])) }
    sf      = { defs={0x08048375,0x0804837b} expr=(extract[1] 31[32] 32[32] (bv-and[32] v2270[32] v2270[32])) }
    tf      = { defs={} expr=v2121[1] }
    if      = { defs={} expr=v2122[1] }
    df      = { defs={} expr=v2123[1] }
    of      = { defs={0x0804837b} expr=0[1] }
    iopl0   = { defs={} expr=v2125[1] }
    iopl1   = { defs={} expr=v2126[1] }
    nt      = { defs={} expr=v2127[1] }
    ?15     = { defs={} expr=v2128[1] }
    rf      = { defs={} expr=v2129[1] }
    vm      = { defs={} expr=v2130[1] }
    ac      = { defs={} expr=v2131[1] }
    vif     = { defs={} expr=v2132[1] }
    vip     = { defs={} expr=v2133[1] }
    id      = { defs={} expr=v2134[1] }
    ?22     = { defs={} expr=v2135[1] }
    ?23     = { defs={} expr=v2136[1] }
    ?24     = { defs={} expr=v2137[1] }
    ?25     = { defs={} expr=v2138[1] }
    ?26     = { defs={} expr=v2139[1] }
    ?27     = { defs={} expr=v2140[1] }
    ?28     = { defs={} expr=v2141[1] }
    ?29     = { defs={} expr=v2142[1] }
    ?30     = { defs={} expr=v2143[1] }
    ?31     = { defs={} expr=v2144[1] }
    ip      = { defs={0x0804836e,0x0804836f,0x08048375,0x0804837b,0x0804837d} expr=(ite[32] (zerop[1] (bv-and[32] v2270[32] v2270[32])) 0x08048384[32] 0x0804837f[32]) }
memory:
init mem:
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] (add[32] v2161[32] 4954[32]) -4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v2161[32] 4954[32]) -4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2270[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2103[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2161[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2103[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2161[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048384[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330<__gmon_start__@plt>
registers:
    ax      = { v33075[32] }
    cx      = { v33076[32] }
    dx      = { v33077[32] }
    bx      = { v33078[32] }
    sp      = { v33079-0x4[32] }
    bp      = { v33080[32] }
    si      = { v33081[32] }
    di      = { v33082[32] }
    es      = { v33083[16] }
    cs      = { v33084[16] }
    ss      = { v33085[16] }
    ds      = { v33086[16] }
    fs      = { v33087[16] }
    gs      = { v33088[16] }
    cf      = { v33089[1] }
    ?1      = { v33090[1] }
    pf      = { v33091[1] }
    ?3      = { v33092[1] }
    af      = { v33093[1] }
    ?5      = { v33094[1] }
    zf      = { v33095[1] }
    sf      = { v33096[1] }
    tf      = { v33097[1] }
    if      = { v33098[1] }
    df      = { v33099[1] }
    of      = { v33100[1] }
    iopl0   = { v33101[1] }
    iopl1   = { v33102[1] }
    nt      = { v33103[1] }
    ?15     = { v33104[1] }
    rf      = { v33105[1] }
    vm      = { v33106[1] }
    ac      = { v33107[1] }
    vif     = { v33108[1] }
    vip     = { v33109[1] }
    id      = { v33110[1] }
    ?22     = { v33111[1] }
    ?23     = { v33112[1] }
    ?24     = { v33113[1] }
    ?25     = { v33114[1] }
    ?26     = { v33115[1] }
    ?27     = { v33116[1] }
    ?28     = { v33117[1] }
    ?29     = { v33118[1] }
    ?30     = { v33119[1] }
    ?31     = { v33120[1] }
    ip      = { 0x8048330[32] }
memory:
    address = { v33079-0x4[32] }
      value = { 0x8048384[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v2412[32] }
    cx      = { defs={} expr=v2413[32] }
    dx      = { defs={} expr=v2414[32] }
    bx      = { defs={} expr=v2415[32] }
    sp      = { defs={0x0804837f} expr=(add[32] v2416[32] -4[32]) }
    bp      = { defs={} expr=v2417[32] }
    si      = { defs={} expr=v2418[32] }
    di      = { defs={} expr=v2419[32] }
    es      = { defs={} expr=v2420[16] }
    cs      = { defs={} expr=v2421[16] }
    ss      = { defs={} expr=v2422[16] }
    ds      = { defs={} expr=v2423[16] }
    fs      = { defs={} expr=v2424[16] }
    gs      = { defs={} expr=v2425[16] }
    cf      = { defs={} expr=v2426[1] }
    ?1      = { defs={} expr=v2427[1] }
    pf      = { defs={} expr=v2428[1] }
    ?3      = { defs={} expr=v2429[1] }
    af      = { defs={} expr=v2430[1] }
    ?5      = { defs={} expr=v2431[1] }
    zf      = { defs={} expr=v2432[1] }
    sf      = { defs={} expr=v2433[1] }
    tf      = { defs={} expr=v2434[1] }
    if      = { defs={} expr=v2435[1] }
    df      = { defs={} expr=v2436[1] }
    of      = { defs={} expr=v2437[1] }
    iopl0   = { defs={} expr=v2438[1] }
    iopl1   = { defs={} expr=v2439[1] }
    nt      = { defs={} expr=v2440[1] }
    ?15     = { defs={} expr=v2441[1] }
    rf      = { defs={} expr=v2442[1] }
    vm      = { defs={} expr=v2443[1] }
    ac      = { defs={} expr=v2444[1] }
    vif     = { defs={} expr=v2445[1] }
    vip     = { defs={} expr=v2446[1] }
    id      = { defs={} expr=v2447[1] }
    ?22     = { defs={} expr=v2448[1] }
    ?23     = { defs={} expr=v2449[1] }
    ?24     = { defs={} expr=v2450[1] }
    ?25     = { defs={} expr=v2451[1] }
    ?26     = { defs={} expr=v2452[1] }
    ?27     = { defs={} expr=v2453[1] }
    ?28     = { defs={} expr=v2454[1] }
    ?29     = { defs={} expr=v2455[1] }
    ?30     = { defs={} expr=v2456[1] }
    ?31     = { defs={} expr=v2457[1] }
    ip      = { defs={0x0804837f} expr=0x08048330[32] }
memory:
    address = { defs={0x0804837f} expr=(add[32] (add[32] v2416[32] -4[32]) 3[32]) }
      value = { defs={0x0804837f} expr=8[8] }
      flags = { }
    address = { defs={0x0804837f} expr=(add[32] (add[32] v2416[32] -4[32]) 2[32]) }
      value = { defs={0x0804837f} expr=4[8] }
      flags = { }
    address = { defs={0x0804837f} expr=(add[32] (add[32] v2416[32] -4[32]) 1[32]) }
      value = { defs={0x0804837f} expr=-125[8] }
      flags = { }
    address = { defs={0x0804837f} expr=(add[32] v2416[32] -4[32]) }
      value = { defs={0x0804837f} expr=-124[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048330[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
registers:
    ax      = { v33235[32] }
    cx      = { v33181[32] }
    dx      = { v33182[32] }
    bx      = { v33183[32] }
    sp      = { v33184+0x4[32] }
    bp      = { v33185[32] }
    si      = { v33186[32] }
    di      = { v33187[32] }
    es      = { v33188[16] }
    cs      = { v33189[16] }
    ss      = { v33190[16] }
    ds      = { v33191[16] }
    fs      = { v33192[16] }
    gs      = { v33193[16] }
    cf      = { v33194[1] }
    ?1      = { v33195[1] }
    pf      = { v33196[1] }
    ?3      = { v33197[1] }
    af      = { v33198[1] }
    ?5      = { v33199[1] }
    zf      = { v33200[1] }
    sf      = { v33201[1] }
    tf      = { v33202[1] }
    if      = { v33203[1] }
    df      = { v33204[1] }
    of      = { v33205[1] }
    iopl0   = { v33206[1] }
    iopl1   = { v33207[1] }
    nt      = { v33208[1] }
    ?15     = { v33209[1] }
    rf      = { v33210[1] }
    vm      = { v33211[1] }
    ac      = { v33212[1] }
    vif     = { v33213[1] }
    vip     = { v33214[1] }
    id      = { v33215[1] }
    ?22     = { v33216[1] }
    ?23     = { v33217[1] }
    ?24     = { v33218[1] }
    ?25     = { v33219[1] }
    ?26     = { v33220[1] }
    ?27     = { v33221[1] }
    ?28     = { v33222[1] }
    ?29     = { v33223[1] }
    ?30     = { v33224[1] }
    ?31     = { v33225[1] }
    ip      = { 0x8048385[32] }
memory:
    address = { v33184[32] }
      value = { v33235[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x08048384} expr=v2596[32] }
    cx      = { defs={} expr=v2535[32] }
    dx      = { defs={} expr=v2536[32] }
    bx      = { defs={} expr=v2537[32] }
    sp      = { defs={0x08048384} expr=(add[32] v2538[32] 4[32]) }
    bp      = { defs={} expr=v2539[32] }
    si      = { defs={} expr=v2540[32] }
    di      = { defs={} expr=v2541[32] }
    es      = { defs={} expr=v2542[16] }
    cs      = { defs={} expr=v2543[16] }
    ss      = { defs={} expr=v2544[16] }
    ds      = { defs={} expr=v2545[16] }
    fs      = { defs={} expr=v2546[16] }
    gs      = { defs={} expr=v2547[16] }
    cf      = { defs={} expr=v2548[1] }
    ?1      = { defs={} expr=v2549[1] }
    pf      = { defs={} expr=v2550[1] }
    ?3      = { defs={} expr=v2551[1] }
    af      = { defs={} expr=v2552[1] }
    ?5      = { defs={} expr=v2553[1] }
    zf      = { defs={} expr=v2554[1] }
    sf      = { defs={} expr=v2555[1] }
    tf      = { defs={} expr=v2556[1] }
    if      = { defs={} expr=v2557[1] }
    df      = { defs={} expr=v2558[1] }
    of      = { defs={} expr=v2559[1] }
    iopl0   = { defs={} expr=v2560[1] }
    iopl1   = { defs={} expr=v2561[1] }
    nt      = { defs={} expr=v2562[1] }
    ?15     = { defs={} expr=v2563[1] }
    rf      = { defs={} expr=v2564[1] }
    vm      = { defs={} expr=v2565[1] }
    ac      = { defs={} expr=v2566[1] }
    vif     = { defs={} expr=v2567[1] }
    vip     = { defs={} expr=v2568[1] }
    id      = { defs={} expr=v2569[1] }
    ?22     = { defs={} expr=v2570[1] }
    ?23     = { defs={} expr=v2571[1] }
    ?24     = { defs={} expr=v2572[1] }
    ?25     = { defs={} expr=v2573[1] }
    ?26     = { defs={} expr=v2574[1] }
    ?27     = { defs={} expr=v2575[1] }
    ?28     = { defs={} expr=v2576[1] }
    ?29     = { defs={} expr=v2577[1] }
    ?30     = { defs={} expr=v2578[1] }
    ?31     = { defs={} expr=v2579[1] }
    ip      = { defs={0x08048384} expr=0x08048385[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v2538[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2538[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2596[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048385[32] }
memory:
null state
0x8048385:pop    ebx
registers:
    ax      = { v33235[32] }
    cx      = { v33181[32] }
    dx      = { v33182[32] }
    bx      = { v33245[32] }
    sp      = { v33184+0x8[32] }
    bp      = { v33185[32] }
    si      = { v33186[32] }
    di      = { v33187[32] }
    es      = { v33188[16] }
    cs      = { v33189[16] }
    ss      = { v33190[16] }
    ds      = { v33191[16] }
    fs      = { v33192[16] }
    gs      = { v33193[16] }
    cf      = { v33194[1] }
    ?1      = { v33195[1] }
    pf      = { v33196[1] }
    ?3      = { v33197[1] }
    af      = { v33198[1] }
    ?5      = { v33199[1] }
    zf      = { v33200[1] }
    sf      = { v33201[1] }
    tf      = { v33202[1] }
    if      = { v33203[1] }
    df      = { v33204[1] }
    of      = { v33205[1] }
    iopl0   = { v33206[1] }
    iopl1   = { v33207[1] }
    nt      = { v33208[1] }
    ?15     = { v33209[1] }
    rf      = { v33210[1] }
    vm      = { v33211[1] }
    ac      = { v33212[1] }
    vif     = { v33213[1] }
    vip     = { v33214[1] }
    id      = { v33215[1] }
    ?22     = { v33216[1] }
    ?23     = { v33217[1] }
    ?24     = { v33218[1] }
    ?25     = { v33219[1] }
    ?26     = { v33220[1] }
    ?27     = { v33221[1] }
    ?28     = { v33222[1] }
    ?29     = { v33223[1] }
    ?30     = { v33224[1] }
    ?31     = { v33225[1] }
    ip      = { 0x8048386[32] }
memory:
    address = { v33184[32] }
      value = { v33235[32] }
      flags = { size=4; read-only }
    address = { v33184+0x4[32] }
      value = { v33245[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x08048384} expr=v2596[32] }
    cx      = { defs={} expr=v2535[32] }
    dx      = { defs={} expr=v2536[32] }
    bx      = { defs={0x08048385} expr=v2624[32] }
    sp      = { defs={0x08048384,0x08048385} expr=(add[32] (add[32] v2538[32] 4[32]) 4[32]) }
    bp      = { defs={} expr=v2539[32] }
    si      = { defs={} expr=v2540[32] }
    di      = { defs={} expr=v2541[32] }
    es      = { defs={} expr=v2542[16] }
    cs      = { defs={} expr=v2543[16] }
    ss      = { defs={} expr=v2544[16] }
    ds      = { defs={} expr=v2545[16] }
    fs      = { defs={} expr=v2546[16] }
    gs      = { defs={} expr=v2547[16] }
    cf      = { defs={} expr=v2548[1] }
    ?1      = { defs={} expr=v2549[1] }
    pf      = { defs={} expr=v2550[1] }
    ?3      = { defs={} expr=v2551[1] }
    af      = { defs={} expr=v2552[1] }
    ?5      = { defs={} expr=v2553[1] }
    zf      = { defs={} expr=v2554[1] }
    sf      = { defs={} expr=v2555[1] }
    tf      = { defs={} expr=v2556[1] }
    if      = { defs={} expr=v2557[1] }
    df      = { defs={} expr=v2558[1] }
    of      = { defs={} expr=v2559[1] }
    iopl0   = { defs={} expr=v2560[1] }
    iopl1   = { defs={} expr=v2561[1] }
    nt      = { defs={} expr=v2562[1] }
    ?15     = { defs={} expr=v2563[1] }
    rf      = { defs={} expr=v2564[1] }
    vm      = { defs={} expr=v2565[1] }
    ac      = { defs={} expr=v2566[1] }
    vif     = { defs={} expr=v2567[1] }
    vip     = { defs={} expr=v2568[1] }
    id      = { defs={} expr=v2569[1] }
    ?22     = { defs={} expr=v2570[1] }
    ?23     = { defs={} expr=v2571[1] }
    ?24     = { defs={} expr=v2572[1] }
    ?25     = { defs={} expr=v2573[1] }
    ?26     = { defs={} expr=v2574[1] }
    ?27     = { defs={} expr=v2575[1] }
    ?28     = { defs={} expr=v2576[1] }
    ?29     = { defs={} expr=v2577[1] }
    ?30     = { defs={} expr=v2578[1] }
    ?31     = { defs={} expr=v2579[1] }
    ip      = { defs={0x08048384,0x08048385} expr=0x08048386[32] }
memory:
init mem:
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] v2538[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2538[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2596[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048386[32] }
memory:
null state
0x8048386:leave  
registers:
    ax      = { v33235[32] }
    cx      = { v33181[32] }
    dx      = { v33182[32] }
    bx      = { v33245[32] }
    sp      = { v33185+0x4[32] }
    bp      = { v33256[32] }
    si      = { v33186[32] }
    di      = { v33187[32] }
    es      = { v33188[16] }
    cs      = { v33189[16] }
    ss      = { v33190[16] }
    ds      = { v33191[16] }
    fs      = { v33192[16] }
    gs      = { v33193[16] }
    cf      = { v33194[1] }
    ?1      = { v33195[1] }
    pf      = { v33196[1] }
    ?3      = { v33197[1] }
    af      = { v33198[1] }
    ?5      = { v33199[1] }
    zf      = { v33200[1] }
    sf      = { v33201[1] }
    tf      = { v33202[1] }
    if      = { v33203[1] }
    df      = { v33204[1] }
    of      = { v33205[1] }
    iopl0   = { v33206[1] }
    iopl1   = { v33207[1] }
    nt      = { v33208[1] }
    ?15     = { v33209[1] }
    rf      = { v33210[1] }
    vm      = { v33211[1] }
    ac      = { v33212[1] }
    vif     = { v33213[1] }
    vip     = { v33214[1] }
    id      = { v33215[1] }
    ?22     = { v33216[1] }
    ?23     = { v33217[1] }
    ?24     = { v33218[1] }
    ?25     = { v33219[1] }
    ?26     = { v33220[1] }
    ?27     = { v33221[1] }
    ?28     = { v33222[1] }
    ?29     = { v33223[1] }
    ?30     = { v33224[1] }
    ?31     = { v33225[1] }
    ip      = { 0x8048387[32] }
memory:
    address = { v33184[32] }
      value = { v33235[32] }
      flags = { size=4; read-only }
    address = { v33184+0x4[32] }
      value = { v33245[32] }
      flags = { size=4; read-only }
    address = { v33185[32] }
      value = { v33256[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x08048384} expr=v2596[32] }
    cx      = { defs={} expr=v2535[32] }
    dx      = { defs={} expr=v2536[32] }
    bx      = { defs={0x08048385} expr=v2624[32] }
    sp      = { defs={0x08048386} expr=(add[32] v2539[32] 4[32]) }
    bp      = { defs={0x08048386} expr=v2654[32] }
    si      = { defs={} expr=v2540[32] }
    di      = { defs={} expr=v2541[32] }
    es      = { defs={} expr=v2542[16] }
    cs      = { defs={} expr=v2543[16] }
    ss      = { defs={} expr=v2544[16] }
    ds      = { defs={} expr=v2545[16] }
    fs      = { defs={} expr=v2546[16] }
    gs      = { defs={} expr=v2547[16] }
    cf      = { defs={} expr=v2548[1] }
    ?1      = { defs={} expr=v2549[1] }
    pf      = { defs={} expr=v2550[1] }
    ?3      = { defs={} expr=v2551[1] }
    af      = { defs={} expr=v2552[1] }
    ?5      = { defs={} expr=v2553[1] }
    zf      = { defs={} expr=v2554[1] }
    sf      = { defs={} expr=v2555[1] }
    tf      = { defs={} expr=v2556[1] }
    if      = { defs={} expr=v2557[1] }
    df      = { defs={} expr=v2558[1] }
    of      = { defs={} expr=v2559[1] }
    iopl0   = { defs={} expr=v2560[1] }
    iopl1   = { defs={} expr=v2561[1] }
    nt      = { defs={} expr=v2562[1] }
    ?15     = { defs={} expr=v2563[1] }
    rf      = { defs={} expr=v2564[1] }
    vm      = { defs={} expr=v2565[1] }
    ac      = { defs={} expr=v2566[1] }
    vif     = { defs={} expr=v2567[1] }
    vip     = { defs={} expr=v2568[1] }
    id      = { defs={} expr=v2569[1] }
    ?22     = { defs={} expr=v2570[1] }
    ?23     = { defs={} expr=v2571[1] }
    ?24     = { defs={} expr=v2572[1] }
    ?25     = { defs={} expr=v2573[1] }
    ?26     = { defs={} expr=v2574[1] }
    ?27     = { defs={} expr=v2575[1] }
    ?28     = { defs={} expr=v2576[1] }
    ?29     = { defs={} expr=v2577[1] }
    ?30     = { defs={} expr=v2578[1] }
    ?31     = { defs={} expr=v2579[1] }
    ip      = { defs={0x08048384,0x08048385,0x08048386} expr=0x08048387[32] }
memory:
init mem:
    address = { defs={0x08048386} expr=(add[32] v2539[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2654[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=(add[32] v2539[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2654[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=(add[32] v2539[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2654[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=v2539[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2654[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] v2538[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2538[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2596[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048387[32] }
memory:
null state
0x8048387:ret    
registers:
    ax      = { v33235[32] }
    cx      = { v33181[32] }
    dx      = { v33182[32] }
    bx      = { v33245[32] }
    sp      = { v33185+0x8[32] }
    bp      = { v33256[32] }
    si      = { v33186[32] }
    di      = { v33187[32] }
    es      = { v33188[16] }
    cs      = { v33189[16] }
    ss      = { v33190[16] }
    ds      = { v33191[16] }
    fs      = { v33192[16] }
    gs      = { v33193[16] }
    cf      = { v33194[1] }
    ?1      = { v33195[1] }
    pf      = { v33196[1] }
    ?3      = { v33197[1] }
    af      = { v33198[1] }
    ?5      = { v33199[1] }
    zf      = { v33200[1] }
    sf      = { v33201[1] }
    tf      = { v33202[1] }
    if      = { v33203[1] }
    df      = { v33204[1] }
    of      = { v33205[1] }
    iopl0   = { v33206[1] }
    iopl1   = { v33207[1] }
    nt      = { v33208[1] }
    ?15     = { v33209[1] }
    rf      = { v33210[1] }
    vm      = { v33211[1] }
    ac      = { v33212[1] }
    vif     = { v33213[1] }
    vip     = { v33214[1] }
    id      = { v33215[1] }
    ?22     = { v33216[1] }
    ?23     = { v33217[1] }
    ?24     = { v33218[1] }
    ?25     = { v33219[1] }
    ?26     = { v33220[1] }
    ?27     = { v33221[1] }
    ?28     = { v33222[1] }
    ?29     = { v33223[1] }
    ?30     = { v33224[1] }
    ?31     = { v33225[1] }
    ip      = { v33268[32] }
memory:
    address = { v33184[32] }
      value = { v33235[32] }
      flags = { size=4; read-only }
    address = { v33184+0x4[32] }
      value = { v33245[32] }
      flags = { size=4; read-only }
    address = { v33185[32] }
      value = { v33256[32] }
      flags = { size=4; read-only }
    address = { v33185+0x4[32] }
      value = { v33268[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x08048384} expr=v2596[32] }
    cx      = { defs={} expr=v2535[32] }
    dx      = { defs={} expr=v2536[32] }
    bx      = { defs={0x08048385} expr=v2624[32] }
    sp      = { defs={0x08048386,0x08048387} expr=(add[32] (add[32] v2539[32] 4[32]) 4[32]) }
    bp      = { defs={0x08048386} expr=v2654[32] }
    si      = { defs={} expr=v2540[32] }
    di      = { defs={} expr=v2541[32] }
    es      = { defs={} expr=v2542[16] }
    cs      = { defs={} expr=v2543[16] }
    ss      = { defs={} expr=v2544[16] }
    ds      = { defs={} expr=v2545[16] }
    fs      = { defs={} expr=v2546[16] }
    gs      = { defs={} expr=v2547[16] }
    cf      = { defs={} expr=v2548[1] }
    ?1      = { defs={} expr=v2549[1] }
    pf      = { defs={} expr=v2550[1] }
    ?3      = { defs={} expr=v2551[1] }
    af      = { defs={} expr=v2552[1] }
    ?5      = { defs={} expr=v2553[1] }
    zf      = { defs={} expr=v2554[1] }
    sf      = { defs={} expr=v2555[1] }
    tf      = { defs={} expr=v2556[1] }
    if      = { defs={} expr=v2557[1] }
    df      = { defs={} expr=v2558[1] }
    of      = { defs={} expr=v2559[1] }
    iopl0   = { defs={} expr=v2560[1] }
    iopl1   = { defs={} expr=v2561[1] }
    nt      = { defs={} expr=v2562[1] }
    ?15     = { defs={} expr=v2563[1] }
    rf      = { defs={} expr=v2564[1] }
    vm      = { defs={} expr=v2565[1] }
    ac      = { defs={} expr=v2566[1] }
    vif     = { defs={} expr=v2567[1] }
    vip     = { defs={} expr=v2568[1] }
    id      = { defs={} expr=v2569[1] }
    ?22     = { defs={} expr=v2570[1] }
    ?23     = { defs={} expr=v2571[1] }
    ?24     = { defs={} expr=v2572[1] }
    ?25     = { defs={} expr=v2573[1] }
    ?26     = { defs={} expr=v2574[1] }
    ?27     = { defs={} expr=v2575[1] }
    ?28     = { defs={} expr=v2576[1] }
    ?29     = { defs={} expr=v2577[1] }
    ?30     = { defs={} expr=v2578[1] }
    ?31     = { defs={} expr=v2579[1] }
    ip      = { defs={0x08048387} expr=v2685[32] }
memory:
init mem:
    address = { defs={0x08048386} expr=(add[32] (add[32] v2539[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2685[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=(add[32] (add[32] v2539[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2685[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=(add[32] (add[32] v2539[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2685[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=(add[32] v2539[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2685[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=(add[32] v2539[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2654[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=(add[32] v2539[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2654[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=(add[32] v2539[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2654[32]) }
      flags = { rdonly }
    address = { defs={0x08048386} expr=v2539[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2654[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] (add[32] v2538[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={0x08048384} expr=(add[32] v2538[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2624[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v2538[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v2596[32]) }
      flags = { rdonly }
    address = { defs={} expr=v2538[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2596[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
registers:
    ax      = { v33319[32] }
    cx      = { v33320[32] }
    dx      = { v33321[32] }
    bx      = { v33322[32] }
    sp      = { v33323-0x4[32] }
    bp      = { v33324[32] }
    si      = { v33325[32] }
    di      = { v33326[32] }
    es      = { v33327[16] }
    cs      = { v33328[16] }
    ss      = { v33329[16] }
    ds      = { v33330[16] }
    fs      = { v33331[16] }
    gs      = { v33332[16] }
    cf      = { v33333[1] }
    ?1      = { v33334[1] }
    pf      = { v33335[1] }
    ?3      = { v33336[1] }
    af      = { v33337[1] }
    ?5      = { v33338[1] }
    zf      = { v33339[1] }
    sf      = { v33340[1] }
    tf      = { v33341[1] }
    if      = { v33342[1] }
    df      = { v33343[1] }
    of      = { v33344[1] }
    iopl0   = { v33345[1] }
    iopl1   = { v33346[1] }
    nt      = { v33347[1] }
    ?15     = { v33348[1] }
    rf      = { v33349[1] }
    vm      = { v33350[1] }
    ac      = { v33351[1] }
    vif     = { v33352[1] }
    vip     = { v33353[1] }
    id      = { v33354[1] }
    ?22     = { v33355[1] }
    ?23     = { v33356[1] }
    ?24     = { v33357[1] }
    ?25     = { v33358[1] }
    ?26     = { v33359[1] }
    ?27     = { v33360[1] }
    ?28     = { v33361[1] }
    ?29     = { v33362[1] }
    ?30     = { v33363[1] }
    ?31     = { v33364[1] }
    ip      = { 0x8048391[32] }
memory:
    address = { v33323-0x4[32] }
      value = { v33324[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v2749[32] }
    cx      = { defs={} expr=v2750[32] }
    dx      = { defs={} expr=v2751[32] }
    bx      = { defs={} expr=v2752[32] }
    sp      = { defs={0x08048390} expr=(add[32] v2753[32] -4[32]) }
    bp      = { defs={} expr=v2754[32] }
    si      = { defs={} expr=v2755[32] }
    di      = { defs={} expr=v2756[32] }
    es      = { defs={} expr=v2757[16] }
    cs      = { defs={} expr=v2758[16] }
    ss      = { defs={} expr=v2759[16] }
    ds      = { defs={} expr=v2760[16] }
    fs      = { defs={} expr=v2761[16] }
    gs      = { defs={} expr=v2762[16] }
    cf      = { defs={} expr=v2763[1] }
    ?1      = { defs={} expr=v2764[1] }
    pf      = { defs={} expr=v2765[1] }
    ?3      = { defs={} expr=v2766[1] }
    af      = { defs={} expr=v2767[1] }
    ?5      = { defs={} expr=v2768[1] }
    zf      = { defs={} expr=v2769[1] }
    sf      = { defs={} expr=v2770[1] }
    tf      = { defs={} expr=v2771[1] }
    if      = { defs={} expr=v2772[1] }
    df      = { defs={} expr=v2773[1] }
    of      = { defs={} expr=v2774[1] }
    iopl0   = { defs={} expr=v2775[1] }
    iopl1   = { defs={} expr=v2776[1] }
    nt      = { defs={} expr=v2777[1] }
    ?15     = { defs={} expr=v2778[1] }
    rf      = { defs={} expr=v2779[1] }
    vm      = { defs={} expr=v2780[1] }
    ac      = { defs={} expr=v2781[1] }
    vif     = { defs={} expr=v2782[1] }
    vip     = { defs={} expr=v2783[1] }
    id      = { defs={} expr=v2784[1] }
    ?22     = { defs={} expr=v2785[1] }
    ?23     = { defs={} expr=v2786[1] }
    ?24     = { defs={} expr=v2787[1] }
    ?25     = { defs={} expr=v2788[1] }
    ?26     = { defs={} expr=v2789[1] }
    ?27     = { defs={} expr=v2790[1] }
    ?28     = { defs={} expr=v2791[1] }
    ?29     = { defs={} expr=v2792[1] }
    ?30     = { defs={} expr=v2793[1] }
    ?31     = { defs={} expr=v2794[1] }
    ip      = { defs={0x08048390} expr=0x08048391[32] }
memory:
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 3[32]) }
      value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 2[32]) }
      value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 1[32]) }
      value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] v2753[32] -4[32]) }
      value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2754[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048391[32] }
memory:
null state
0x8048391:mov    ebp, esp
registers:
    ax      = { v33319[32] }
    cx      = { v33320[32] }
    dx      = { v33321[32] }
    bx      = { v33322[32] }
    sp      = { v33323-0x4[32] }
    bp      = { v33323-0x4[32] }
    si      = { v33325[32] }
    di      = { v33326[32] }
    es      = { v33327[16] }
    cs      = { v33328[16] }
    ss      = { v33329[16] }
    ds      = { v33330[16] }
    fs      = { v33331[16] }
    gs      = { v33332[16] }
    cf      = { v33333[1] }
    ?1      = { v33334[1] }
    pf      = { v33335[1] }
    ?3      = { v33336[1] }
    af      = { v33337[1] }
    ?5      = { v33338[1] }
    zf      = { v33339[1] }
    sf      = { v33340[1] }
    tf      = { v33341[1] }
    if      = { v33342[1] }
    df      = { v33343[1] }
    of      = { v33344[1] }
    iopl0   = { v33345[1] }
    iopl1   = { v33346[1] }
    nt      = { v33347[1] }
    ?15     = { v33348[1] }
    rf      = { v33349[1] }
    vm      = { v33350[1] }
    ac      = { v33351[1] }
    vif     = { v33352[1] }
    vip     = { v33353[1] }
    id      = { v33354[1] }
    ?22     = { v33355[1] }
    ?23     = { v33356[1] }
    ?24     = { v33357[1] }
    ?25     = { v33358[1] }
    ?26     = { v33359[1] }
    ?27     = { v33360[1] }
    ?28     = { v33361[1] }
    ?29     = { v33362[1] }
    ?30     = { v33363[1] }
    ?31     = { v33364[1] }
    ip      = { 0x8048393[32] }
memory:
    address = { v33323-0x4[32] }
      value = { v33324[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v2749[32] }
    cx      = { defs={} expr=v2750[32] }
    dx      = { defs={} expr=v2751[32] }
    bx      = { defs={} expr=v2752[32] }
    sp      = { defs={0x08048390} expr=(add[32] v2753[32] -4[32]) }
    bp      = { defs={0x08048390,0x08048391} expr=(add[32] v2753[32] -4[32]) }
    si      = { defs={} expr=v2755[32] }
    di      = { defs={} expr=v2756[32] }
    es      = { defs={} expr=v2757[16] }
    cs      = { defs={} expr=v2758[16] }
    ss      = { defs={} expr=v2759[16] }
    ds      = { defs={} expr=v2760[16] }
    fs      = { defs={} expr=v2761[16] }
    gs      = { defs={} expr=v2762[16] }
    cf      = { defs={} expr=v2763[1] }
    ?1      = { defs={} expr=v2764[1] }
    pf      = { defs={} expr=v2765[1] }
    ?3      = { defs={} expr=v2766[1] }
    af      = { defs={} expr=v2767[1] }
    ?5      = { defs={} expr=v2768[1] }
    zf      = { defs={} expr=v2769[1] }
    sf      = { defs={} expr=v2770[1] }
    tf      = { defs={} expr=v2771[1] }
    if      = { defs={} expr=v2772[1] }
    df      = { defs={} expr=v2773[1] }
    of      = { defs={} expr=v2774[1] }
    iopl0   = { defs={} expr=v2775[1] }
    iopl1   = { defs={} expr=v2776[1] }
    nt      = { defs={} expr=v2777[1] }
    ?15     = { defs={} expr=v2778[1] }
    rf      = { defs={} expr=v2779[1] }
    vm      = { defs={} expr=v2780[1] }
    ac      = { defs={} expr=v2781[1] }
    vif     = { defs={} expr=v2782[1] }
    vip     = { defs={} expr=v2783[1] }
    id      = { defs={} expr=v2784[1] }
    ?22     = { defs={} expr=v2785[1] }
    ?23     = { defs={} expr=v2786[1] }
    ?24     = { defs={} expr=v2787[1] }
    ?25     = { defs={} expr=v2788[1] }
    ?26     = { defs={} expr=v2789[1] }
    ?27     = { defs={} expr=v2790[1] }
    ?28     = { defs={} expr=v2791[1] }
    ?29     = { defs={} expr=v2792[1] }
    ?30     = { defs={} expr=v2793[1] }
    ?31     = { defs={} expr=v2794[1] }
    ip      = { defs={0x08048390,0x08048391} expr=0x08048393[32] }
memory:
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 3[32]) }
      value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 2[32]) }
      value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 1[32]) }
      value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] v2753[32] -4[32]) }
      value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2754[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048393[32] }
memory:
null state
0x8048393:sub    esp, 0x08
registers:
    ax      = { v33319[32] }
    cx      = { v33320[32] }
    dx      = { v33321[32] }
    bx      = { v33322[32] }
    sp      = { v33323-0xc[32] }
    bp      = { v33323-0x4[32] }
    si      = { v33325[32] }
    di      = { v33326[32] }
    es      = { v33327[16] }
    cs      = { v33328[16] }
    ss      = { v33329[16] }
    ds      = { v33330[16] }
    fs      = { v33331[16] }
    gs      = { v33332[16] }
    cf      = { -v33430+0x1[1] }
    ?1      = { v33334[1] }
    pf      = { -v33420+0x1[1] }
    ?3      = { v33336[1] }
    af      = { -v33427+0x1[1] }
    ?5      = { v33338[1] }
    zf      = { v33425[1] }
    sf      = { v33423[1] }
    tf      = { v33341[1] }
    if      = { v33342[1] }
    df      = { v33343[1] }
    of      = { v33437[1] }
    iopl0   = { v33345[1] }
    iopl1   = { v33346[1] }
    nt      = { v33347[1] }
    ?15     = { v33348[1] }
    rf      = { v33349[1] }
    vm      = { v33350[1] }
    ac      = { v33351[1] }
    vif     = { v33352[1] }
    vip     = { v33353[1] }
    id      = { v33354[1] }
    ?22     = { v33355[1] }
    ?23     = { v33356[1] }
    ?24     = { v33357[1] }
    ?25     = { v33358[1] }
    ?26     = { v33359[1] }
    ?27     = { v33360[1] }
    ?28     = { v33361[1] }
    ?29     = { v33362[1] }
    ?30     = { v33363[1] }
    ?31     = { v33364[1] }
    ip      = { 0x8048396[32] }
memory:
    address = { v33323-0x4[32] }
      value = { v33324[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v2749[32] }
    cx      = { defs={} expr=v2750[32] }
    dx      = { defs={} expr=v2751[32] }
    bx      = { defs={} expr=v2752[32] }
    sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v2753[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048390,0x08048391} expr=(add[32] v2753[32] -4[32]) }
    si      = { defs={} expr=v2755[32] }
    di      = { defs={} expr=v2756[32] }
    es      = { defs={} expr=v2757[16] }
    cs      = { defs={} expr=v2758[16] }
    ss      = { defs={} expr=v2759[16] }
    ds      = { defs={} expr=v2760[16] }
    fs      = { defs={} expr=v2761[16] }
    gs      = { defs={} expr=v2762[16] }
    cf      = { defs={0x08048390,0x08048393} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2753[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2753[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v2764[1] }
    pf      = { defs={0x08048390,0x08048393} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2753[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2753[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2753[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2753[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2753[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2753[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2753[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2753[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v2766[1] }
    af      = { defs={0x08048390,0x08048393} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2753[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2753[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v2768[1] }
    zf      = { defs={0x08048390,0x08048393} expr=(zerop[1] (add[32] (add[32] v2753[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048390,0x08048393} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2753[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v2771[1] }
    if      = { defs={} expr=v2772[1] }
    df      = { defs={} expr=v2773[1] }
    of      = { defs={0x08048390,0x08048393} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2753[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2753[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2753[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v2753[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v2775[1] }
    iopl1   = { defs={} expr=v2776[1] }
    nt      = { defs={} expr=v2777[1] }
    ?15     = { defs={} expr=v2778[1] }
    rf      = { defs={} expr=v2779[1] }
    vm      = { defs={} expr=v2780[1] }
    ac      = { defs={} expr=v2781[1] }
    vif     = { defs={} expr=v2782[1] }
    vip     = { defs={} expr=v2783[1] }
    id      = { defs={} expr=v2784[1] }
    ?22     = { defs={} expr=v2785[1] }
    ?23     = { defs={} expr=v2786[1] }
    ?24     = { defs={} expr=v2787[1] }
    ?25     = { defs={} expr=v2788[1] }
    ?26     = { defs={} expr=v2789[1] }
    ?27     = { defs={} expr=v2790[1] }
    ?28     = { defs={} expr=v2791[1] }
    ?29     = { defs={} expr=v2792[1] }
    ?30     = { defs={} expr=v2793[1] }
    ?31     = { defs={} expr=v2794[1] }
    ip      = { defs={0x08048390,0x08048391,0x08048393} expr=0x08048396[32] }
memory:
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 3[32]) }
      value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 2[32]) }
      value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 1[32]) }
      value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] v2753[32] -4[32]) }
      value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2754[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048396[32] }
memory:
null state
0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00
registers:
    ax      = { v33319[32] }
    cx      = { v33320[32] }
    dx      = { v33321[32] }
    bx      = { v33322[32] }
    sp      = { v33323-0xc[32] }
    bp      = { v33323-0x4[32] }
    si      = { v33325[32] }
    di      = { v33326[32] }
    es      = { v33327[16] }
    cs      = { v33328[16] }
    ss      = { v33329[16] }
    ds      = { v33330[16] }
    fs      = { v33331[16] }
    gs      = { v33332[16] }
    cf      = { -v33492+0x1[1] }
    ?1      = { v33334[1] }
    pf      = { -v33482+0x1[1] }
    ?3      = { v33336[1] }
    af      = { -v33489+0x1[1] }
    ?5      = { v33338[1] }
    zf      = { v33487[1] }
    sf      = { v33485[1] }
    tf      = { v33341[1] }
    if      = { v33342[1] }
    df      = { v33343[1] }
    of      = { v33499[1] }
    iopl0   = { v33345[1] }
    iopl1   = { v33346[1] }
    nt      = { v33347[1] }
    ?15     = { v33348[1] }
    rf      = { v33349[1] }
    vm      = { v33350[1] }
    ac      = { v33351[1] }
    vif     = { v33352[1] }
    vip     = { v33353[1] }
    id      = { v33354[1] }
    ?22     = { v33355[1] }
    ?23     = { v33356[1] }
    ?24     = { v33357[1] }
    ?25     = { v33358[1] }
    ?26     = { v33359[1] }
    ?27     = { v33360[1] }
    ?28     = { v33361[1] }
    ?29     = { v33362[1] }
    ?30     = { v33363[1] }
    ?31     = { v33364[1] }
    ip      = { 0x804839d[32] }
memory:
    address = { v33323-0x4[32] }
      value = { v33324[32] }
      flags = { size=4 }
    address = { 0x80496f4[32] }
      value = { v33448[32] }
      flags = { size=1; read-only }
registers:
    ax      = { defs={} expr=v2749[32] }
    cx      = { defs={} expr=v2750[32] }
    dx      = { defs={} expr=v2751[32] }
    bx      = { defs={} expr=v2752[32] }
    sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v2753[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048390,0x08048391} expr=(add[32] v2753[32] -4[32]) }
    si      = { defs={} expr=v2755[32] }
    di      = { defs={} expr=v2756[32] }
    es      = { defs={} expr=v2757[16] }
    cs      = { defs={} expr=v2758[16] }
    ss      = { defs={} expr=v2759[16] }
    ds      = { defs={} expr=v2760[16] }
    fs      = { defs={} expr=v2761[16] }
    gs      = { defs={} expr=v2762[16] }
    cf      = { defs={0x08048396} expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) -256[9])))))) }
    ?1      = { defs={} expr=v2764[1] }
    pf      = { defs={0x08048396} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] v2936[8])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] v2936[8]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] v2936[8])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] v2936[8])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] v2936[8])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] v2936[8]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] v2936[8])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v2936[8])))))) }
    ?3      = { defs={} expr=v2766[1] }
    af      = { defs={0x08048396} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) -256[9])))))) }
    ?5      = { defs={} expr=v2768[1] }
    zf      = { defs={0x08048396} expr=(zerop[1] (extract[8] 0[32] 8[32] v2936[8])) }
    sf      = { defs={0x08048396} expr=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v2936[8])) }
    tf      = { defs={} expr=v2771[1] }
    if      = { defs={} expr=v2772[1] }
    df      = { defs={} expr=v2773[1] }
    of      = { defs={0x08048396} expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) -256[9])))))) }
    iopl0   = { defs={} expr=v2775[1] }
    iopl1   = { defs={} expr=v2776[1] }
    nt      = { defs={} expr=v2777[1] }
    ?15     = { defs={} expr=v2778[1] }
    rf      = { defs={} expr=v2779[1] }
    vm      = { defs={} expr=v2780[1] }
    ac      = { defs={} expr=v2781[1] }
    vif     = { defs={} expr=v2782[1] }
    vip     = { defs={} expr=v2783[1] }
    id      = { defs={} expr=v2784[1] }
    ?22     = { defs={} expr=v2785[1] }
    ?23     = { defs={} expr=v2786[1] }
    ?24     = { defs={} expr=v2787[1] }
    ?25     = { defs={} expr=v2788[1] }
    ?26     = { defs={} expr=v2789[1] }
    ?27     = { defs={} expr=v2790[1] }
    ?28     = { defs={} expr=v2791[1] }
    ?29     = { defs={} expr=v2792[1] }
    ?30     = { defs={} expr=v2793[1] }
    ?31     = { defs={} expr=v2794[1] }
    ip      = { defs={0x08048390,0x08048391,0x08048393,0x08048396} expr=0x0804839d[32] }
memory:
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 3[32]) }
      value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 2[32]) }
      value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 1[32]) }
      value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] v2753[32] -4[32]) }
      value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2754[32]) }
      flags = { }
init mem:
    address = { defs={0x08048396} expr=0x080496f4[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2936[8]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804839d[32] }
memory:
null state
0x804839d:jne    0x080483cc<<Insn>>
registers:
    ax      = { v33319[32] }
    cx      = { v33320[32] }
    dx      = { v33321[32] }
    bx      = { v33322[32] }
    sp      = { v33323-0xc[32] }
    bp      = { v33323-0x4[32] }
    si      = { v33325[32] }
    di      = { v33326[32] }
    es      = { v33327[16] }
    cs      = { v33328[16] }
    ss      = { v33329[16] }
    ds      = { v33330[16] }
    fs      = { v33331[16] }
    gs      = { v33332[16] }
    cf      = { -v33492+0x1[1] }
    ?1      = { v33334[1] }
    pf      = { -v33482+0x1[1] }
    ?3      = { v33336[1] }
    af      = { -v33489+0x1[1] }
    ?5      = { v33338[1] }
    zf      = { v33487[1] }
    sf      = { v33485[1] }
    tf      = { v33341[1] }
    if      = { v33342[1] }
    df      = { v33343[1] }
    of      = { v33499[1] }
    iopl0   = { v33345[1] }
    iopl1   = { v33346[1] }
    nt      = { v33347[1] }
    ?15     = { v33348[1] }
    rf      = { v33349[1] }
    vm      = { v33350[1] }
    ac      = { v33351[1] }
    vif     = { v33352[1] }
    vip     = { v33353[1] }
    id      = { v33354[1] }
    ?22     = { v33355[1] }
    ?23     = { v33356[1] }
    ?24     = { v33357[1] }
    ?25     = { v33358[1] }
    ?26     = { v33359[1] }
    ?27     = { v33360[1] }
    ?28     = { v33361[1] }
    ?29     = { v33362[1] }
    ?30     = { v33363[1] }
    ?31     = { v33364[1] }
    ip      = { v33509[32] }
memory:
    address = { v33323-0x4[32] }
      value = { v33324[32] }
      flags = { size=4 }
    address = { 0x80496f4[32] }
      value = { v33448[32] }
      flags = { size=1; read-only }
registers:
    ax      = { defs={} expr=v2749[32] }
    cx      = { defs={} expr=v2750[32] }
    dx      = { defs={} expr=v2751[32] }
    bx      = { defs={} expr=v2752[32] }
    sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v2753[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048390,0x08048391} expr=(add[32] v2753[32] -4[32]) }
    si      = { defs={} expr=v2755[32] }
    di      = { defs={} expr=v2756[32] }
    es      = { defs={} expr=v2757[16] }
    cs      = { defs={} expr=v2758[16] }
    ss      = { defs={} expr=v2759[16] }
    ds      = { defs={} expr=v2760[16] }
    fs      = { defs={} expr=v2761[16] }
    gs      = { defs={} expr=v2762[16] }
    cf      = { defs={0x08048396} expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) -256[9])))))) }
    ?1      = { defs={} expr=v2764[1] }
    pf      = { defs={0x08048396} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] v2936[8])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] v2936[8]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] v2936[8])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] v2936[8])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] v2936[8])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] v2936[8]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] v2936[8])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v2936[8])))))) }
    ?3      = { defs={} expr=v2766[1] }
    af      = { defs={0x08048396} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) -256[9])))))) }
    ?5      = { defs={} expr=v2768[1] }
    zf      = { defs={0x08048396} expr=(zerop[1] (extract[8] 0[32] 8[32] v2936[8])) }
    sf      = { defs={0x08048396} expr=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v2936[8])) }
    tf      = { defs={} expr=v2771[1] }
    if      = { defs={} expr=v2772[1] }
    df      = { defs={} expr=v2773[1] }
    of      = { defs={0x08048396} expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v2936[8])) -256[9])))))) }
    iopl0   = { defs={} expr=v2775[1] }
    iopl1   = { defs={} expr=v2776[1] }
    nt      = { defs={} expr=v2777[1] }
    ?15     = { defs={} expr=v2778[1] }
    rf      = { defs={} expr=v2779[1] }
    vm      = { defs={} expr=v2780[1] }
    ac      = { defs={} expr=v2781[1] }
    vif     = { defs={} expr=v2782[1] }
    vip     = { defs={} expr=v2783[1] }
    id      = { defs={} expr=v2784[1] }
    ?22     = { defs={} expr=v2785[1] }
    ?23     = { defs={} expr=v2786[1] }
    ?24     = { defs={} expr=v2787[1] }
    ?25     = { defs={} expr=v2788[1] }
    ?26     = { defs={} expr=v2789[1] }
    ?27     = { defs={} expr=v2790[1] }
    ?28     = { defs={} expr=v2791[1] }
    ?29     = { defs={} expr=v2792[1] }
    ?30     = { defs={} expr=v2793[1] }
    ?31     = { defs={} expr=v2794[1] }
    ip      = { defs={0x08048390,0x08048391,0x08048393,0x08048396,0x0804839d} expr=(ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] v2936[8]))) 0x080483cc[32] 0x0804839f[32]) }
memory:
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 3[32]) }
      value = { defs={0x08048390} expr=(extract[8] 24[32] 32[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 2[32]) }
      value = { defs={0x08048390} expr=(extract[8] 16[32] 24[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] (add[32] v2753[32] -4[32]) 1[32]) }
      value = { defs={0x08048390} expr=(extract[8] 8[32] 16[32] v2754[32]) }
      flags = { }
    address = { defs={0x08048390} expr=(add[32] v2753[32] -4[32]) }
      value = { defs={0x08048390} expr=(extract[8] 0[32] 8[32] v2754[32]) }
      flags = { }
init mem:
    address = { defs={0x08048396} expr=0x080496f4[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v2936[8]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804839f, 0x080483cc[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
registers:
    ax      = { v33612[32] }
    cx      = { v33560[32] }
    dx      = { v33561[32] }
    bx      = { v33562[32] }
    sp      = { v33563[32] }
    bp      = { v33564[32] }
    si      = { v33565[32] }
    di      = { v33566[32] }
    es      = { v33567[16] }
    cs      = { v33568[16] }
    ss      = { v33569[16] }
    ds      = { v33570[16] }
    fs      = { v33571[16] }
    gs      = { v33572[16] }
    cf      = { v33573[1] }
    ?1      = { v33574[1] }
    pf      = { v33575[1] }
    ?3      = { v33576[1] }
    af      = { v33577[1] }
    ?5      = { v33578[1] }
    zf      = { v33579[1] }
    sf      = { v33580[1] }
    tf      = { v33581[1] }
    if      = { v33582[1] }
    df      = { v33583[1] }
    of      = { v33584[1] }
    iopl0   = { v33585[1] }
    iopl1   = { v33586[1] }
    nt      = { v33587[1] }
    ?15     = { v33588[1] }
    rf      = { v33589[1] }
    vm      = { v33590[1] }
    ac      = { v33591[1] }
    vif     = { v33592[1] }
    vip     = { v33593[1] }
    id      = { v33594[1] }
    ?22     = { v33595[1] }
    ?23     = { v33596[1] }
    ?24     = { v33597[1] }
    ?25     = { v33598[1] }
    ?26     = { v33599[1] }
    ?27     = { v33600[1] }
    ?28     = { v33601[1] }
    ?29     = { v33602[1] }
    ?30     = { v33603[1] }
    ?31     = { v33604[1] }
    ip      = { 0x80483a4[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33612[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804839f} expr=v3142[32] }
    cx      = { defs={} expr=v3086[32] }
    dx      = { defs={} expr=v3087[32] }
    bx      = { defs={} expr=v3088[32] }
    sp      = { defs={} expr=v3089[32] }
    bp      = { defs={} expr=v3090[32] }
    si      = { defs={} expr=v3091[32] }
    di      = { defs={} expr=v3092[32] }
    es      = { defs={} expr=v3093[16] }
    cs      = { defs={} expr=v3094[16] }
    ss      = { defs={} expr=v3095[16] }
    ds      = { defs={} expr=v3096[16] }
    fs      = { defs={} expr=v3097[16] }
    gs      = { defs={} expr=v3098[16] }
    cf      = { defs={} expr=v3099[1] }
    ?1      = { defs={} expr=v3100[1] }
    pf      = { defs={} expr=v3101[1] }
    ?3      = { defs={} expr=v3102[1] }
    af      = { defs={} expr=v3103[1] }
    ?5      = { defs={} expr=v3104[1] }
    zf      = { defs={} expr=v3105[1] }
    sf      = { defs={} expr=v3106[1] }
    tf      = { defs={} expr=v3107[1] }
    if      = { defs={} expr=v3108[1] }
    df      = { defs={} expr=v3109[1] }
    of      = { defs={} expr=v3110[1] }
    iopl0   = { defs={} expr=v3111[1] }
    iopl1   = { defs={} expr=v3112[1] }
    nt      = { defs={} expr=v3113[1] }
    ?15     = { defs={} expr=v3114[1] }
    rf      = { defs={} expr=v3115[1] }
    vm      = { defs={} expr=v3116[1] }
    ac      = { defs={} expr=v3117[1] }
    vif     = { defs={} expr=v3118[1] }
    vip     = { defs={} expr=v3119[1] }
    id      = { defs={} expr=v3120[1] }
    ?22     = { defs={} expr=v3121[1] }
    ?23     = { defs={} expr=v3122[1] }
    ?24     = { defs={} expr=v3123[1] }
    ?25     = { defs={} expr=v3124[1] }
    ?26     = { defs={} expr=v3125[1] }
    ?27     = { defs={} expr=v3126[1] }
    ?28     = { defs={} expr=v3127[1] }
    ?29     = { defs={} expr=v3128[1] }
    ?30     = { defs={} expr=v3129[1] }
    ?31     = { defs={} expr=v3130[1] }
    ip      = { defs={0x0804839f} expr=0x080483a4[32] }
memory:
init mem:
    address = { defs={0x0804839f} expr=0x080496f3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3142[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483a4[32] }
memory:
null state
0x80483a4:mov    edx, DWORD PTR ds:[eax]
registers:
    ax      = { v33612[32] }
    cx      = { v33560[32] }
    dx      = { v33620[32] }
    bx      = { v33562[32] }
    sp      = { v33563[32] }
    bp      = { v33564[32] }
    si      = { v33565[32] }
    di      = { v33566[32] }
    es      = { v33567[16] }
    cs      = { v33568[16] }
    ss      = { v33569[16] }
    ds      = { v33570[16] }
    fs      = { v33571[16] }
    gs      = { v33572[16] }
    cf      = { v33573[1] }
    ?1      = { v33574[1] }
    pf      = { v33575[1] }
    ?3      = { v33576[1] }
    af      = { v33577[1] }
    ?5      = { v33578[1] }
    zf      = { v33579[1] }
    sf      = { v33580[1] }
    tf      = { v33581[1] }
    if      = { v33582[1] }
    df      = { v33583[1] }
    of      = { v33584[1] }
    iopl0   = { v33585[1] }
    iopl1   = { v33586[1] }
    nt      = { v33587[1] }
    ?15     = { v33588[1] }
    rf      = { v33589[1] }
    vm      = { v33590[1] }
    ac      = { v33591[1] }
    vif     = { v33592[1] }
    vip     = { v33593[1] }
    id      = { v33594[1] }
    ?22     = { v33595[1] }
    ?23     = { v33596[1] }
    ?24     = { v33597[1] }
    ?25     = { v33598[1] }
    ?26     = { v33599[1] }
    ?27     = { v33600[1] }
    ?28     = { v33601[1] }
    ?29     = { v33602[1] }
    ?30     = { v33603[1] }
    ?31     = { v33604[1] }
    ip      = { 0x80483a6[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33612[32] }
      flags = { size=4; read-only }
    address = { v33612[32] }
      value = { v33620[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804839f} expr=v3142[32] }
    cx      = { defs={} expr=v3086[32] }
    dx      = { defs={0x080483a4} expr=v3166[32] }
    bx      = { defs={} expr=v3088[32] }
    sp      = { defs={} expr=v3089[32] }
    bp      = { defs={} expr=v3090[32] }
    si      = { defs={} expr=v3091[32] }
    di      = { defs={} expr=v3092[32] }
    es      = { defs={} expr=v3093[16] }
    cs      = { defs={} expr=v3094[16] }
    ss      = { defs={} expr=v3095[16] }
    ds      = { defs={} expr=v3096[16] }
    fs      = { defs={} expr=v3097[16] }
    gs      = { defs={} expr=v3098[16] }
    cf      = { defs={} expr=v3099[1] }
    ?1      = { defs={} expr=v3100[1] }
    pf      = { defs={} expr=v3101[1] }
    ?3      = { defs={} expr=v3102[1] }
    af      = { defs={} expr=v3103[1] }
    ?5      = { defs={} expr=v3104[1] }
    zf      = { defs={} expr=v3105[1] }
    sf      = { defs={} expr=v3106[1] }
    tf      = { defs={} expr=v3107[1] }
    if      = { defs={} expr=v3108[1] }
    df      = { defs={} expr=v3109[1] }
    of      = { defs={} expr=v3110[1] }
    iopl0   = { defs={} expr=v3111[1] }
    iopl1   = { defs={} expr=v3112[1] }
    nt      = { defs={} expr=v3113[1] }
    ?15     = { defs={} expr=v3114[1] }
    rf      = { defs={} expr=v3115[1] }
    vm      = { defs={} expr=v3116[1] }
    ac      = { defs={} expr=v3117[1] }
    vif     = { defs={} expr=v3118[1] }
    vip     = { defs={} expr=v3119[1] }
    id      = { defs={} expr=v3120[1] }
    ?22     = { defs={} expr=v3121[1] }
    ?23     = { defs={} expr=v3122[1] }
    ?24     = { defs={} expr=v3123[1] }
    ?25     = { defs={} expr=v3124[1] }
    ?26     = { defs={} expr=v3125[1] }
    ?27     = { defs={} expr=v3126[1] }
    ?28     = { defs={} expr=v3127[1] }
    ?29     = { defs={} expr=v3128[1] }
    ?30     = { defs={} expr=v3129[1] }
    ?31     = { defs={} expr=v3130[1] }
    ip      = { defs={0x0804839f,0x080483a4} expr=0x080483a6[32] }
memory:
init mem:
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=v3142[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3142[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483a6[32] }
memory:
null state
0x80483a6:test   edx, edx
registers:
    ax      = { v33612[32] }
    cx      = { v33560[32] }
    dx      = { v33620[32] }
    bx      = { v33562[32] }
    sp      = { v33563[32] }
    bp      = { v33564[32] }
    si      = { v33565[32] }
    di      = { v33566[32] }
    es      = { v33567[16] }
    cs      = { v33568[16] }
    ss      = { v33569[16] }
    ds      = { v33570[16] }
    fs      = { v33571[16] }
    gs      = { v33572[16] }
    cf      = { 0x0[1] }
    ?1      = { v33574[1] }
    pf      = { -v33658+0x1[1] }
    ?3      = { v33576[1] }
    af      = { v33666[1] }
    ?5      = { v33578[1] }
    zf      = { v33663[1] }
    sf      = { v33661[1] }
    tf      = { v33581[1] }
    if      = { v33582[1] }
    df      = { v33583[1] }
    of      = { 0x0[1] }
    iopl0   = { v33585[1] }
    iopl1   = { v33586[1] }
    nt      = { v33587[1] }
    ?15     = { v33588[1] }
    rf      = { v33589[1] }
    vm      = { v33590[1] }
    ac      = { v33591[1] }
    vif     = { v33592[1] }
    vip     = { v33593[1] }
    id      = { v33594[1] }
    ?22     = { v33595[1] }
    ?23     = { v33596[1] }
    ?24     = { v33597[1] }
    ?25     = { v33598[1] }
    ?26     = { v33599[1] }
    ?27     = { v33600[1] }
    ?28     = { v33601[1] }
    ?29     = { v33602[1] }
    ?30     = { v33603[1] }
    ?31     = { v33604[1] }
    ip      = { 0x80483a8[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33612[32] }
      flags = { size=4; read-only }
    address = { v33612[32] }
      value = { v33620[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804839f} expr=v3142[32] }
    cx      = { defs={} expr=v3086[32] }
    dx      = { defs={0x080483a4} expr=v3166[32] }
    bx      = { defs={} expr=v3088[32] }
    sp      = { defs={} expr=v3089[32] }
    bp      = { defs={} expr=v3090[32] }
    si      = { defs={} expr=v3091[32] }
    di      = { defs={} expr=v3092[32] }
    es      = { defs={} expr=v3093[16] }
    cs      = { defs={} expr=v3094[16] }
    ss      = { defs={} expr=v3095[16] }
    ds      = { defs={} expr=v3096[16] }
    fs      = { defs={} expr=v3097[16] }
    gs      = { defs={} expr=v3098[16] }
    cf      = { defs={0x080483a6} expr=0[1] }
    ?1      = { defs={} expr=v3100[1] }
    pf      = { defs={0x080483a4,0x080483a6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))))))) }
    ?3      = { defs={} expr=v3102[1] }
    af      = { defs={0x080483a6} expr=v3238[1] }
    ?5      = { defs={} expr=v3104[1] }
    zf      = { defs={0x080483a4,0x080483a6} expr=(zerop[1] (bv-and[32] v3166[32] v3166[32])) }
    sf      = { defs={0x080483a4,0x080483a6} expr=(extract[1] 31[32] 32[32] (bv-and[32] v3166[32] v3166[32])) }
    tf      = { defs={} expr=v3107[1] }
    if      = { defs={} expr=v3108[1] }
    df      = { defs={} expr=v3109[1] }
    of      = { defs={0x080483a6} expr=0[1] }
    iopl0   = { defs={} expr=v3111[1] }
    iopl1   = { defs={} expr=v3112[1] }
    nt      = { defs={} expr=v3113[1] }
    ?15     = { defs={} expr=v3114[1] }
    rf      = { defs={} expr=v3115[1] }
    vm      = { defs={} expr=v3116[1] }
    ac      = { defs={} expr=v3117[1] }
    vif     = { defs={} expr=v3118[1] }
    vip     = { defs={} expr=v3119[1] }
    id      = { defs={} expr=v3120[1] }
    ?22     = { defs={} expr=v3121[1] }
    ?23     = { defs={} expr=v3122[1] }
    ?24     = { defs={} expr=v3123[1] }
    ?25     = { defs={} expr=v3124[1] }
    ?26     = { defs={} expr=v3125[1] }
    ?27     = { defs={} expr=v3126[1] }
    ?28     = { defs={} expr=v3127[1] }
    ?29     = { defs={} expr=v3128[1] }
    ?30     = { defs={} expr=v3129[1] }
    ?31     = { defs={} expr=v3130[1] }
    ip      = { defs={0x0804839f,0x080483a4,0x080483a6} expr=0x080483a8[32] }
memory:
init mem:
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=v3142[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3142[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483a8[32] }
memory:
null state
0x80483a8:je     0x080483c5<<Insn>>
registers:
    ax      = { v33612[32] }
    cx      = { v33560[32] }
    dx      = { v33620[32] }
    bx      = { v33562[32] }
    sp      = { v33563[32] }
    bp      = { v33564[32] }
    si      = { v33565[32] }
    di      = { v33566[32] }
    es      = { v33567[16] }
    cs      = { v33568[16] }
    ss      = { v33569[16] }
    ds      = { v33570[16] }
    fs      = { v33571[16] }
    gs      = { v33572[16] }
    cf      = { 0x0[1] }
    ?1      = { v33574[1] }
    pf      = { -v33658+0x1[1] }
    ?3      = { v33576[1] }
    af      = { v33666[1] }
    ?5      = { v33578[1] }
    zf      = { v33663[1] }
    sf      = { v33661[1] }
    tf      = { v33581[1] }
    if      = { v33582[1] }
    df      = { v33583[1] }
    of      = { 0x0[1] }
    iopl0   = { v33585[1] }
    iopl1   = { v33586[1] }
    nt      = { v33587[1] }
    ?15     = { v33588[1] }
    rf      = { v33589[1] }
    vm      = { v33590[1] }
    ac      = { v33591[1] }
    vif     = { v33592[1] }
    vip     = { v33593[1] }
    id      = { v33594[1] }
    ?22     = { v33595[1] }
    ?23     = { v33596[1] }
    ?24     = { v33597[1] }
    ?25     = { v33598[1] }
    ?26     = { v33599[1] }
    ?27     = { v33600[1] }
    ?28     = { v33601[1] }
    ?29     = { v33602[1] }
    ?30     = { v33603[1] }
    ?31     = { v33604[1] }
    ip      = { v33676[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33612[32] }
      flags = { size=4; read-only }
    address = { v33612[32] }
      value = { v33620[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804839f} expr=v3142[32] }
    cx      = { defs={} expr=v3086[32] }
    dx      = { defs={0x080483a4} expr=v3166[32] }
    bx      = { defs={} expr=v3088[32] }
    sp      = { defs={} expr=v3089[32] }
    bp      = { defs={} expr=v3090[32] }
    si      = { defs={} expr=v3091[32] }
    di      = { defs={} expr=v3092[32] }
    es      = { defs={} expr=v3093[16] }
    cs      = { defs={} expr=v3094[16] }
    ss      = { defs={} expr=v3095[16] }
    ds      = { defs={} expr=v3096[16] }
    fs      = { defs={} expr=v3097[16] }
    gs      = { defs={} expr=v3098[16] }
    cf      = { defs={0x080483a6} expr=0[1] }
    ?1      = { defs={} expr=v3100[1] }
    pf      = { defs={0x080483a4,0x080483a6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v3166[32] v3166[32]))))))) }
    ?3      = { defs={} expr=v3102[1] }
    af      = { defs={0x080483a6} expr=v3238[1] }
    ?5      = { defs={} expr=v3104[1] }
    zf      = { defs={0x080483a4,0x080483a6} expr=(zerop[1] (bv-and[32] v3166[32] v3166[32])) }
    sf      = { defs={0x080483a4,0x080483a6} expr=(extract[1] 31[32] 32[32] (bv-and[32] v3166[32] v3166[32])) }
    tf      = { defs={} expr=v3107[1] }
    if      = { defs={} expr=v3108[1] }
    df      = { defs={} expr=v3109[1] }
    of      = { defs={0x080483a6} expr=0[1] }
    iopl0   = { defs={} expr=v3111[1] }
    iopl1   = { defs={} expr=v3112[1] }
    nt      = { defs={} expr=v3113[1] }
    ?15     = { defs={} expr=v3114[1] }
    rf      = { defs={} expr=v3115[1] }
    vm      = { defs={} expr=v3116[1] }
    ac      = { defs={} expr=v3117[1] }
    vif     = { defs={} expr=v3118[1] }
    vip     = { defs={} expr=v3119[1] }
    id      = { defs={} expr=v3120[1] }
    ?22     = { defs={} expr=v3121[1] }
    ?23     = { defs={} expr=v3122[1] }
    ?24     = { defs={} expr=v3123[1] }
    ?25     = { defs={} expr=v3124[1] }
    ?26     = { defs={} expr=v3125[1] }
    ?27     = { defs={} expr=v3126[1] }
    ?28     = { defs={} expr=v3127[1] }
    ?29     = { defs={} expr=v3128[1] }
    ?30     = { defs={} expr=v3129[1] }
    ?31     = { defs={} expr=v3130[1] }
    ip      = { defs={0x0804839f,0x080483a4,0x080483a6,0x080483a8} expr=(ite[32] (zerop[1] (bv-and[32] v3166[32] v3166[32])) 0x080483c5[32] 0x080483aa[32]) }
memory:
init mem:
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=(add[32] v3142[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=v3142[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3166[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3142[32]) }
      flags = { rdonly }
    address = { defs={0x0804839f} expr=0x080496f0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3142[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483c5[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
registers:
    ax      = { v33726[32] }
    cx      = { v33727[32] }
    dx      = { v33728[32] }
    bx      = { v33729[32] }
    sp      = { v33730[32] }
    bp      = { v33731[32] }
    si      = { v33732[32] }
    di      = { v33733[32] }
    es      = { v33734[16] }
    cs      = { v33735[16] }
    ss      = { v33736[16] }
    ds      = { v33737[16] }
    fs      = { v33738[16] }
    gs      = { v33739[16] }
    cf      = { v33740[1] }
    ?1      = { v33741[1] }
    pf      = { v33742[1] }
    ?3      = { v33743[1] }
    af      = { v33744[1] }
    ?5      = { v33745[1] }
    zf      = { v33746[1] }
    sf      = { v33747[1] }
    tf      = { v33748[1] }
    if      = { v33749[1] }
    df      = { v33750[1] }
    of      = { v33751[1] }
    iopl0   = { v33752[1] }
    iopl1   = { v33753[1] }
    nt      = { v33754[1] }
    ?15     = { v33755[1] }
    rf      = { v33756[1] }
    vm      = { v33757[1] }
    ac      = { v33758[1] }
    vif     = { v33759[1] }
    vip     = { v33760[1] }
    id      = { v33761[1] }
    ?22     = { v33762[1] }
    ?23     = { v33763[1] }
    ?24     = { v33764[1] }
    ?25     = { v33765[1] }
    ?26     = { v33766[1] }
    ?27     = { v33767[1] }
    ?28     = { v33768[1] }
    ?29     = { v33769[1] }
    ?30     = { v33770[1] }
    ?31     = { v33771[1] }
    ip      = { 0x80483b0[32] }
memory:
registers:
    ax      = { defs={} expr=v3308[32] }
    cx      = { defs={} expr=v3309[32] }
    dx      = { defs={} expr=v3310[32] }
    bx      = { defs={} expr=v3311[32] }
    sp      = { defs={} expr=v3312[32] }
    bp      = { defs={} expr=v3313[32] }
    si      = { defs={0x080483aa} expr=v3314[32] }
    di      = { defs={} expr=v3315[32] }
    es      = { defs={} expr=v3316[16] }
    cs      = { defs={} expr=v3317[16] }
    ss      = { defs={} expr=v3318[16] }
    ds      = { defs={} expr=v3319[16] }
    fs      = { defs={} expr=v3320[16] }
    gs      = { defs={} expr=v3321[16] }
    cf      = { defs={} expr=v3322[1] }
    ?1      = { defs={} expr=v3323[1] }
    pf      = { defs={} expr=v3324[1] }
    ?3      = { defs={} expr=v3325[1] }
    af      = { defs={} expr=v3326[1] }
    ?5      = { defs={} expr=v3327[1] }
    zf      = { defs={} expr=v3328[1] }
    sf      = { defs={} expr=v3329[1] }
    tf      = { defs={} expr=v3330[1] }
    if      = { defs={} expr=v3331[1] }
    df      = { defs={} expr=v3332[1] }
    of      = { defs={} expr=v3333[1] }
    iopl0   = { defs={} expr=v3334[1] }
    iopl1   = { defs={} expr=v3335[1] }
    nt      = { defs={} expr=v3336[1] }
    ?15     = { defs={} expr=v3337[1] }
    rf      = { defs={} expr=v3338[1] }
    vm      = { defs={} expr=v3339[1] }
    ac      = { defs={} expr=v3340[1] }
    vif     = { defs={} expr=v3341[1] }
    vip     = { defs={} expr=v3342[1] }
    id      = { defs={} expr=v3343[1] }
    ?22     = { defs={} expr=v3344[1] }
    ?23     = { defs={} expr=v3345[1] }
    ?24     = { defs={} expr=v3346[1] }
    ?25     = { defs={} expr=v3347[1] }
    ?26     = { defs={} expr=v3348[1] }
    ?27     = { defs={} expr=v3349[1] }
    ?28     = { defs={} expr=v3350[1] }
    ?29     = { defs={} expr=v3351[1] }
    ?30     = { defs={} expr=v3352[1] }
    ?31     = { defs={} expr=v3353[1] }
    ip      = { defs={0x080483aa} expr=0x080483b0[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483b0[32] }
memory:
null state
0x80483b0:add    eax, 0x04
registers:
    ax      = { v33726+0x4[32] }
    cx      = { v33727[32] }
    dx      = { v33728[32] }
    bx      = { v33729[32] }
    sp      = { v33730[32] }
    bp      = { v33731[32] }
    si      = { v33732[32] }
    di      = { v33733[32] }
    es      = { v33734[16] }
    cs      = { v33735[16] }
    ss      = { v33736[16] }
    ds      = { v33737[16] }
    fs      = { v33738[16] }
    gs      = { v33739[16] }
    cf      = { v33827[1] }
    ?1      = { v33741[1] }
    pf      = { -v33818+0x1[1] }
    ?3      = { v33743[1] }
    af      = { v33825[1] }
    ?5      = { v33745[1] }
    zf      = { v33823[1] }
    sf      = { v33821[1] }
    tf      = { v33748[1] }
    if      = { v33749[1] }
    df      = { v33750[1] }
    of      = { v33833[1] }
    iopl0   = { v33752[1] }
    iopl1   = { v33753[1] }
    nt      = { v33754[1] }
    ?15     = { v33755[1] }
    rf      = { v33756[1] }
    vm      = { v33757[1] }
    ac      = { v33758[1] }
    vif     = { v33759[1] }
    vip     = { v33760[1] }
    id      = { v33761[1] }
    ?22     = { v33762[1] }
    ?23     = { v33763[1] }
    ?24     = { v33764[1] }
    ?25     = { v33765[1] }
    ?26     = { v33766[1] }
    ?27     = { v33767[1] }
    ?28     = { v33768[1] }
    ?29     = { v33769[1] }
    ?30     = { v33770[1] }
    ?31     = { v33771[1] }
    ip      = { 0x80483b3[32] }
memory:
registers:
    ax      = { defs={0x080483b0} expr=(add[32] v3308[32] 4[32]) }
    cx      = { defs={} expr=v3309[32] }
    dx      = { defs={} expr=v3310[32] }
    bx      = { defs={} expr=v3311[32] }
    sp      = { defs={} expr=v3312[32] }
    bp      = { defs={} expr=v3313[32] }
    si      = { defs={0x080483aa} expr=v3314[32] }
    di      = { defs={} expr=v3315[32] }
    es      = { defs={} expr=v3316[16] }
    cs      = { defs={} expr=v3317[16] }
    ss      = { defs={} expr=v3318[16] }
    ds      = { defs={} expr=v3319[16] }
    fs      = { defs={} expr=v3320[16] }
    gs      = { defs={} expr=v3321[16] }
    cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) }
    ?1      = { defs={} expr=v3323[1] }
    pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))))))) }
    ?3      = { defs={} expr=v3325[1] }
    af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) }
    ?5      = { defs={} expr=v3327[1] }
    zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v3308[32] 4[32])) }
    sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v3308[32] 4[32])) }
    tf      = { defs={} expr=v3330[1] }
    if      = { defs={} expr=v3331[1] }
    df      = { defs={} expr=v3332[1] }
    of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33])))))) }
    iopl0   = { defs={} expr=v3334[1] }
    iopl1   = { defs={} expr=v3335[1] }
    nt      = { defs={} expr=v3336[1] }
    ?15     = { defs={} expr=v3337[1] }
    rf      = { defs={} expr=v3338[1] }
    vm      = { defs={} expr=v3339[1] }
    ac      = { defs={} expr=v3340[1] }
    vif     = { defs={} expr=v3341[1] }
    vip     = { defs={} expr=v3342[1] }
    id      = { defs={} expr=v3343[1] }
    ?22     = { defs={} expr=v3344[1] }
    ?23     = { defs={} expr=v3345[1] }
    ?24     = { defs={} expr=v3346[1] }
    ?25     = { defs={} expr=v3347[1] }
    ?26     = { defs={} expr=v3348[1] }
    ?27     = { defs={} expr=v3349[1] }
    ?28     = { defs={} expr=v3350[1] }
    ?29     = { defs={} expr=v3351[1] }
    ?30     = { defs={} expr=v3352[1] }
    ?31     = { defs={} expr=v3353[1] }
    ip      = { defs={0x080483aa,0x080483b0} expr=0x080483b3[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483b3[32] }
memory:
null state
0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax
registers:
    ax      = { v33726+0x4[32] }
    cx      = { v33727[32] }
    dx      = { v33728[32] }
    bx      = { v33729[32] }
    sp      = { v33730[32] }
    bp      = { v33731[32] }
    si      = { v33732[32] }
    di      = { v33733[32] }
    es      = { v33734[16] }
    cs      = { v33735[16] }
    ss      = { v33736[16] }
    ds      = { v33737[16] }
    fs      = { v33738[16] }
    gs      = { v33739[16] }
    cf      = { v33827[1] }
    ?1      = { v33741[1] }
    pf      = { -v33818+0x1[1] }
    ?3      = { v33743[1] }
    af      = { v33825[1] }
    ?5      = { v33745[1] }
    zf      = { v33823[1] }
    sf      = { v33821[1] }
    tf      = { v33748[1] }
    if      = { v33749[1] }
    df      = { v33750[1] }
    of      = { v33833[1] }
    iopl0   = { v33752[1] }
    iopl1   = { v33753[1] }
    nt      = { v33754[1] }
    ?15     = { v33755[1] }
    rf      = { v33756[1] }
    vm      = { v33757[1] }
    ac      = { v33758[1] }
    vif     = { v33759[1] }
    vip     = { v33760[1] }
    id      = { v33761[1] }
    ?22     = { v33762[1] }
    ?23     = { v33763[1] }
    ?24     = { v33764[1] }
    ?25     = { v33765[1] }
    ?26     = { v33766[1] }
    ?27     = { v33767[1] }
    ?28     = { v33768[1] }
    ?29     = { v33769[1] }
    ?30     = { v33770[1] }
    ?31     = { v33771[1] }
    ip      = { 0x80483b8[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33726+0x4[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x080483b0} expr=(add[32] v3308[32] 4[32]) }
    cx      = { defs={} expr=v3309[32] }
    dx      = { defs={} expr=v3310[32] }
    bx      = { defs={} expr=v3311[32] }
    sp      = { defs={} expr=v3312[32] }
    bp      = { defs={} expr=v3313[32] }
    si      = { defs={0x080483aa} expr=v3314[32] }
    di      = { defs={} expr=v3315[32] }
    es      = { defs={} expr=v3316[16] }
    cs      = { defs={} expr=v3317[16] }
    ss      = { defs={} expr=v3318[16] }
    ds      = { defs={} expr=v3319[16] }
    fs      = { defs={} expr=v3320[16] }
    gs      = { defs={} expr=v3321[16] }
    cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) }
    ?1      = { defs={} expr=v3323[1] }
    pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))))))) }
    ?3      = { defs={} expr=v3325[1] }
    af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) }
    ?5      = { defs={} expr=v3327[1] }
    zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v3308[32] 4[32])) }
    sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v3308[32] 4[32])) }
    tf      = { defs={} expr=v3330[1] }
    if      = { defs={} expr=v3331[1] }
    df      = { defs={} expr=v3332[1] }
    of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33])))))) }
    iopl0   = { defs={} expr=v3334[1] }
    iopl1   = { defs={} expr=v3335[1] }
    nt      = { defs={} expr=v3336[1] }
    ?15     = { defs={} expr=v3337[1] }
    rf      = { defs={} expr=v3338[1] }
    vm      = { defs={} expr=v3339[1] }
    ac      = { defs={} expr=v3340[1] }
    vif     = { defs={} expr=v3341[1] }
    vip     = { defs={} expr=v3342[1] }
    id      = { defs={} expr=v3343[1] }
    ?22     = { defs={} expr=v3344[1] }
    ?23     = { defs={} expr=v3345[1] }
    ?24     = { defs={} expr=v3346[1] }
    ?25     = { defs={} expr=v3347[1] }
    ?26     = { defs={} expr=v3348[1] }
    ?27     = { defs={} expr=v3349[1] }
    ?28     = { defs={} expr=v3350[1] }
    ?29     = { defs={} expr=v3351[1] }
    ?30     = { defs={} expr=v3352[1] }
    ?31     = { defs={} expr=v3353[1] }
    ip      = { defs={0x080483aa,0x080483b0,0x080483b3} expr=0x080483b8[32] }
memory:
    address = { defs={0x080483b3} expr=0x080496f3[32] }
      value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 24[32] 32[32] (add[32] v3308[32] 4[32])) }
      flags = { }
    address = { defs={0x080483b3} expr=0x080496f2[32] }
      value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 16[32] 24[32] (add[32] v3308[32] 4[32])) }
      flags = { }
    address = { defs={0x080483b3} expr=0x080496f1[32] }
      value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 8[32] 16[32] (add[32] v3308[32] 4[32])) }
      flags = { }
    address = { defs={0x080483b3} expr=0x080496f0[32] }
      value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32])) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483b8[32] }
memory:
null state
0x80483b8:call   edx
registers:
    ax      = { v33726+0x4[32] }
    cx      = { v33727[32] }
    dx      = { v33728[32] }
    bx      = { v33729[32] }
    sp      = { v33730-0x4[32] }
    bp      = { v33731[32] }
    si      = { v33732[32] }
    di      = { v33733[32] }
    es      = { v33734[16] }
    cs      = { v33735[16] }
    ss      = { v33736[16] }
    ds      = { v33737[16] }
    fs      = { v33738[16] }
    gs      = { v33739[16] }
    cf      = { v33827[1] }
    ?1      = { v33741[1] }
    pf      = { -v33818+0x1[1] }
    ?3      = { v33743[1] }
    af      = { v33825[1] }
    ?5      = { v33745[1] }
    zf      = { v33823[1] }
    sf      = { v33821[1] }
    tf      = { v33748[1] }
    if      = { v33749[1] }
    df      = { v33750[1] }
    of      = { v33833[1] }
    iopl0   = { v33752[1] }
    iopl1   = { v33753[1] }
    nt      = { v33754[1] }
    ?15     = { v33755[1] }
    rf      = { v33756[1] }
    vm      = { v33757[1] }
    ac      = { v33758[1] }
    vif     = { v33759[1] }
    vip     = { v33760[1] }
    id      = { v33761[1] }
    ?22     = { v33762[1] }
    ?23     = { v33763[1] }
    ?24     = { v33764[1] }
    ?25     = { v33765[1] }
    ?26     = { v33766[1] }
    ?27     = { v33767[1] }
    ?28     = { v33768[1] }
    ?29     = { v33769[1] }
    ?30     = { v33770[1] }
    ?31     = { v33771[1] }
    ip      = { v33728[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33726+0x4[32] }
      flags = { size=4; clobbered }
    address = { v33730-0x4[32] }
      value = { 0x80483ba[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x080483b0} expr=(add[32] v3308[32] 4[32]) }
    cx      = { defs={} expr=v3309[32] }
    dx      = { defs={} expr=v3310[32] }
    bx      = { defs={} expr=v3311[32] }
    sp      = { defs={0x080483b8} expr=(add[32] v3312[32] -4[32]) }
    bp      = { defs={} expr=v3313[32] }
    si      = { defs={0x080483aa} expr=v3314[32] }
    di      = { defs={} expr=v3315[32] }
    es      = { defs={} expr=v3316[16] }
    cs      = { defs={} expr=v3317[16] }
    ss      = { defs={} expr=v3318[16] }
    ds      = { defs={} expr=v3319[16] }
    fs      = { defs={} expr=v3320[16] }
    gs      = { defs={} expr=v3321[16] }
    cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) }
    ?1      = { defs={} expr=v3323[1] }
    pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32]))))))) }
    ?3      = { defs={} expr=v3325[1] }
    af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) }
    ?5      = { defs={} expr=v3327[1] }
    zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v3308[32] 4[32])) }
    sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v3308[32] 4[32])) }
    tf      = { defs={} expr=v3330[1] }
    if      = { defs={} expr=v3331[1] }
    df      = { defs={} expr=v3332[1] }
    of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v3308[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v3308[32]) 4[33])))))) }
    iopl0   = { defs={} expr=v3334[1] }
    iopl1   = { defs={} expr=v3335[1] }
    nt      = { defs={} expr=v3336[1] }
    ?15     = { defs={} expr=v3337[1] }
    rf      = { defs={} expr=v3338[1] }
    vm      = { defs={} expr=v3339[1] }
    ac      = { defs={} expr=v3340[1] }
    vif     = { defs={} expr=v3341[1] }
    vip     = { defs={} expr=v3342[1] }
    id      = { defs={} expr=v3343[1] }
    ?22     = { defs={} expr=v3344[1] }
    ?23     = { defs={} expr=v3345[1] }
    ?24     = { defs={} expr=v3346[1] }
    ?25     = { defs={} expr=v3347[1] }
    ?26     = { defs={} expr=v3348[1] }
    ?27     = { defs={} expr=v3349[1] }
    ?28     = { defs={} expr=v3350[1] }
    ?29     = { defs={} expr=v3351[1] }
    ?30     = { defs={} expr=v3352[1] }
    ?31     = { defs={} expr=v3353[1] }
    ip      = { defs={0x080483b8} expr=v3310[32] }
memory:
    address = { defs={0x080483b8} expr=(add[32] (add[32] v3312[32] -4[32]) 3[32]) }
      value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=8[8] }
      flags = { }
    address = { defs={0x080483b8} expr=(add[32] (add[32] v3312[32] -4[32]) 2[32]) }
      value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=4[8] }
      flags = { }
    address = { defs={0x080483b8} expr=(add[32] (add[32] v3312[32] -4[32]) 1[32]) }
      value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=-125[8] }
      flags = { }
    address = { defs={0x080483b8} expr=(add[32] v3312[32] -4[32]) }
      value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=-70[8] }
      flags = { }
    address = { defs={0x080483b3} expr=0x080496f3[32] }
      value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 24[32] 32[32] (add[32] v3308[32] 4[32])) }
      flags = { }
    address = { defs={0x080483b3} expr=0x080496f2[32] }
      value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 16[32] 24[32] (add[32] v3308[32] 4[32])) }
      flags = { }
    address = { defs={0x080483b3} expr=0x080496f1[32] }
      value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 8[32] 16[32] (add[32] v3308[32] 4[32])) }
      flags = { }
    address = { defs={0x080483b3} expr=0x080496f0[32] }
      value = { defs={0x080483b0,0x080483b3} expr=(extract[8] 0[32] 8[32] (add[32] v3308[32] 4[32])) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
registers:
    ax      = { v33953[32] }
    cx      = { v33901[32] }
    dx      = { v33902[32] }
    bx      = { v33903[32] }
    sp      = { v33904[32] }
    bp      = { v33905[32] }
    si      = { v33906[32] }
    di      = { v33907[32] }
    es      = { v33908[16] }
    cs      = { v33909[16] }
    ss      = { v33910[16] }
    ds      = { v33911[16] }
    fs      = { v33912[16] }
    gs      = { v33913[16] }
    cf      = { v33914[1] }
    ?1      = { v33915[1] }
    pf      = { v33916[1] }
    ?3      = { v33917[1] }
    af      = { v33918[1] }
    ?5      = { v33919[1] }
    zf      = { v33920[1] }
    sf      = { v33921[1] }
    tf      = { v33922[1] }
    if      = { v33923[1] }
    df      = { v33924[1] }
    of      = { v33925[1] }
    iopl0   = { v33926[1] }
    iopl1   = { v33927[1] }
    nt      = { v33928[1] }
    ?15     = { v33929[1] }
    rf      = { v33930[1] }
    vm      = { v33931[1] }
    ac      = { v33932[1] }
    vif     = { v33933[1] }
    vip     = { v33934[1] }
    id      = { v33935[1] }
    ?22     = { v33936[1] }
    ?23     = { v33937[1] }
    ?24     = { v33938[1] }
    ?25     = { v33939[1] }
    ?26     = { v33940[1] }
    ?27     = { v33941[1] }
    ?28     = { v33942[1] }
    ?29     = { v33943[1] }
    ?30     = { v33944[1] }
    ?31     = { v33945[1] }
    ip      = { 0x80483bf[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33953[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483ba} expr=v3604[32] }
    cx      = { defs={} expr=v3548[32] }
    dx      = { defs={} expr=v3549[32] }
    bx      = { defs={} expr=v3550[32] }
    sp      = { defs={} expr=v3551[32] }
    bp      = { defs={} expr=v3552[32] }
    si      = { defs={} expr=v3553[32] }
    di      = { defs={} expr=v3554[32] }
    es      = { defs={} expr=v3555[16] }
    cs      = { defs={} expr=v3556[16] }
    ss      = { defs={} expr=v3557[16] }
    ds      = { defs={} expr=v3558[16] }
    fs      = { defs={} expr=v3559[16] }
    gs      = { defs={} expr=v3560[16] }
    cf      = { defs={} expr=v3561[1] }
    ?1      = { defs={} expr=v3562[1] }
    pf      = { defs={} expr=v3563[1] }
    ?3      = { defs={} expr=v3564[1] }
    af      = { defs={} expr=v3565[1] }
    ?5      = { defs={} expr=v3566[1] }
    zf      = { defs={} expr=v3567[1] }
    sf      = { defs={} expr=v3568[1] }
    tf      = { defs={} expr=v3569[1] }
    if      = { defs={} expr=v3570[1] }
    df      = { defs={} expr=v3571[1] }
    of      = { defs={} expr=v3572[1] }
    iopl0   = { defs={} expr=v3573[1] }
    iopl1   = { defs={} expr=v3574[1] }
    nt      = { defs={} expr=v3575[1] }
    ?15     = { defs={} expr=v3576[1] }
    rf      = { defs={} expr=v3577[1] }
    vm      = { defs={} expr=v3578[1] }
    ac      = { defs={} expr=v3579[1] }
    vif     = { defs={} expr=v3580[1] }
    vip     = { defs={} expr=v3581[1] }
    id      = { defs={} expr=v3582[1] }
    ?22     = { defs={} expr=v3583[1] }
    ?23     = { defs={} expr=v3584[1] }
    ?24     = { defs={} expr=v3585[1] }
    ?25     = { defs={} expr=v3586[1] }
    ?26     = { defs={} expr=v3587[1] }
    ?27     = { defs={} expr=v3588[1] }
    ?28     = { defs={} expr=v3589[1] }
    ?29     = { defs={} expr=v3590[1] }
    ?30     = { defs={} expr=v3591[1] }
    ?31     = { defs={} expr=v3592[1] }
    ip      = { defs={0x080483ba} expr=0x080483bf[32] }
memory:
init mem:
    address = { defs={0x080483ba} expr=0x080496f3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3604[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483bf[32] }
memory:
null state
0x80483bf:mov    edx, DWORD PTR ds:[eax]
registers:
    ax      = { v33953[32] }
    cx      = { v33901[32] }
    dx      = { v33961[32] }
    bx      = { v33903[32] }
    sp      = { v33904[32] }
    bp      = { v33905[32] }
    si      = { v33906[32] }
    di      = { v33907[32] }
    es      = { v33908[16] }
    cs      = { v33909[16] }
    ss      = { v33910[16] }
    ds      = { v33911[16] }
    fs      = { v33912[16] }
    gs      = { v33913[16] }
    cf      = { v33914[1] }
    ?1      = { v33915[1] }
    pf      = { v33916[1] }
    ?3      = { v33917[1] }
    af      = { v33918[1] }
    ?5      = { v33919[1] }
    zf      = { v33920[1] }
    sf      = { v33921[1] }
    tf      = { v33922[1] }
    if      = { v33923[1] }
    df      = { v33924[1] }
    of      = { v33925[1] }
    iopl0   = { v33926[1] }
    iopl1   = { v33927[1] }
    nt      = { v33928[1] }
    ?15     = { v33929[1] }
    rf      = { v33930[1] }
    vm      = { v33931[1] }
    ac      = { v33932[1] }
    vif     = { v33933[1] }
    vip     = { v33934[1] }
    id      = { v33935[1] }
    ?22     = { v33936[1] }
    ?23     = { v33937[1] }
    ?24     = { v33938[1] }
    ?25     = { v33939[1] }
    ?26     = { v33940[1] }
    ?27     = { v33941[1] }
    ?28     = { v33942[1] }
    ?29     = { v33943[1] }
    ?30     = { v33944[1] }
    ?31     = { v33945[1] }
    ip      = { 0x80483c1[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33953[32] }
      flags = { size=4; read-only }
    address = { v33953[32] }
      value = { v33961[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483ba} expr=v3604[32] }
    cx      = { defs={} expr=v3548[32] }
    dx      = { defs={0x080483bf} expr=v3628[32] }
    bx      = { defs={} expr=v3550[32] }
    sp      = { defs={} expr=v3551[32] }
    bp      = { defs={} expr=v3552[32] }
    si      = { defs={} expr=v3553[32] }
    di      = { defs={} expr=v3554[32] }
    es      = { defs={} expr=v3555[16] }
    cs      = { defs={} expr=v3556[16] }
    ss      = { defs={} expr=v3557[16] }
    ds      = { defs={} expr=v3558[16] }
    fs      = { defs={} expr=v3559[16] }
    gs      = { defs={} expr=v3560[16] }
    cf      = { defs={} expr=v3561[1] }
    ?1      = { defs={} expr=v3562[1] }
    pf      = { defs={} expr=v3563[1] }
    ?3      = { defs={} expr=v3564[1] }
    af      = { defs={} expr=v3565[1] }
    ?5      = { defs={} expr=v3566[1] }
    zf      = { defs={} expr=v3567[1] }
    sf      = { defs={} expr=v3568[1] }
    tf      = { defs={} expr=v3569[1] }
    if      = { defs={} expr=v3570[1] }
    df      = { defs={} expr=v3571[1] }
    of      = { defs={} expr=v3572[1] }
    iopl0   = { defs={} expr=v3573[1] }
    iopl1   = { defs={} expr=v3574[1] }
    nt      = { defs={} expr=v3575[1] }
    ?15     = { defs={} expr=v3576[1] }
    rf      = { defs={} expr=v3577[1] }
    vm      = { defs={} expr=v3578[1] }
    ac      = { defs={} expr=v3579[1] }
    vif     = { defs={} expr=v3580[1] }
    vip     = { defs={} expr=v3581[1] }
    id      = { defs={} expr=v3582[1] }
    ?22     = { defs={} expr=v3583[1] }
    ?23     = { defs={} expr=v3584[1] }
    ?24     = { defs={} expr=v3585[1] }
    ?25     = { defs={} expr=v3586[1] }
    ?26     = { defs={} expr=v3587[1] }
    ?27     = { defs={} expr=v3588[1] }
    ?28     = { defs={} expr=v3589[1] }
    ?29     = { defs={} expr=v3590[1] }
    ?30     = { defs={} expr=v3591[1] }
    ?31     = { defs={} expr=v3592[1] }
    ip      = { defs={0x080483ba,0x080483bf} expr=0x080483c1[32] }
memory:
init mem:
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=v3604[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3604[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483c1[32] }
memory:
null state
0x80483c1:test   edx, edx
registers:
    ax      = { v33953[32] }
    cx      = { v33901[32] }
    dx      = { v33961[32] }
    bx      = { v33903[32] }
    sp      = { v33904[32] }
    bp      = { v33905[32] }
    si      = { v33906[32] }
    di      = { v33907[32] }
    es      = { v33908[16] }
    cs      = { v33909[16] }
    ss      = { v33910[16] }
    ds      = { v33911[16] }
    fs      = { v33912[16] }
    gs      = { v33913[16] }
    cf      = { 0x0[1] }
    ?1      = { v33915[1] }
    pf      = { -v33999+0x1[1] }
    ?3      = { v33917[1] }
    af      = { v34007[1] }
    ?5      = { v33919[1] }
    zf      = { v34004[1] }
    sf      = { v34002[1] }
    tf      = { v33922[1] }
    if      = { v33923[1] }
    df      = { v33924[1] }
    of      = { 0x0[1] }
    iopl0   = { v33926[1] }
    iopl1   = { v33927[1] }
    nt      = { v33928[1] }
    ?15     = { v33929[1] }
    rf      = { v33930[1] }
    vm      = { v33931[1] }
    ac      = { v33932[1] }
    vif     = { v33933[1] }
    vip     = { v33934[1] }
    id      = { v33935[1] }
    ?22     = { v33936[1] }
    ?23     = { v33937[1] }
    ?24     = { v33938[1] }
    ?25     = { v33939[1] }
    ?26     = { v33940[1] }
    ?27     = { v33941[1] }
    ?28     = { v33942[1] }
    ?29     = { v33943[1] }
    ?30     = { v33944[1] }
    ?31     = { v33945[1] }
    ip      = { 0x80483c3[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33953[32] }
      flags = { size=4; read-only }
    address = { v33953[32] }
      value = { v33961[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483ba} expr=v3604[32] }
    cx      = { defs={} expr=v3548[32] }
    dx      = { defs={0x080483bf} expr=v3628[32] }
    bx      = { defs={} expr=v3550[32] }
    sp      = { defs={} expr=v3551[32] }
    bp      = { defs={} expr=v3552[32] }
    si      = { defs={} expr=v3553[32] }
    di      = { defs={} expr=v3554[32] }
    es      = { defs={} expr=v3555[16] }
    cs      = { defs={} expr=v3556[16] }
    ss      = { defs={} expr=v3557[16] }
    ds      = { defs={} expr=v3558[16] }
    fs      = { defs={} expr=v3559[16] }
    gs      = { defs={} expr=v3560[16] }
    cf      = { defs={0x080483c1} expr=0[1] }
    ?1      = { defs={} expr=v3562[1] }
    pf      = { defs={0x080483bf,0x080483c1} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))))))) }
    ?3      = { defs={} expr=v3564[1] }
    af      = { defs={0x080483c1} expr=v3700[1] }
    ?5      = { defs={} expr=v3566[1] }
    zf      = { defs={0x080483bf,0x080483c1} expr=(zerop[1] (bv-and[32] v3628[32] v3628[32])) }
    sf      = { defs={0x080483bf,0x080483c1} expr=(extract[1] 31[32] 32[32] (bv-and[32] v3628[32] v3628[32])) }
    tf      = { defs={} expr=v3569[1] }
    if      = { defs={} expr=v3570[1] }
    df      = { defs={} expr=v3571[1] }
    of      = { defs={0x080483c1} expr=0[1] }
    iopl0   = { defs={} expr=v3573[1] }
    iopl1   = { defs={} expr=v3574[1] }
    nt      = { defs={} expr=v3575[1] }
    ?15     = { defs={} expr=v3576[1] }
    rf      = { defs={} expr=v3577[1] }
    vm      = { defs={} expr=v3578[1] }
    ac      = { defs={} expr=v3579[1] }
    vif     = { defs={} expr=v3580[1] }
    vip     = { defs={} expr=v3581[1] }
    id      = { defs={} expr=v3582[1] }
    ?22     = { defs={} expr=v3583[1] }
    ?23     = { defs={} expr=v3584[1] }
    ?24     = { defs={} expr=v3585[1] }
    ?25     = { defs={} expr=v3586[1] }
    ?26     = { defs={} expr=v3587[1] }
    ?27     = { defs={} expr=v3588[1] }
    ?28     = { defs={} expr=v3589[1] }
    ?29     = { defs={} expr=v3590[1] }
    ?30     = { defs={} expr=v3591[1] }
    ?31     = { defs={} expr=v3592[1] }
    ip      = { defs={0x080483ba,0x080483bf,0x080483c1} expr=0x080483c3[32] }
memory:
init mem:
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=v3604[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3604[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483c3[32] }
memory:
null state
0x80483c3:jne    0x080483b0<<Insn>>
registers:
    ax      = { v33953[32] }
    cx      = { v33901[32] }
    dx      = { v33961[32] }
    bx      = { v33903[32] }
    sp      = { v33904[32] }
    bp      = { v33905[32] }
    si      = { v33906[32] }
    di      = { v33907[32] }
    es      = { v33908[16] }
    cs      = { v33909[16] }
    ss      = { v33910[16] }
    ds      = { v33911[16] }
    fs      = { v33912[16] }
    gs      = { v33913[16] }
    cf      = { 0x0[1] }
    ?1      = { v33915[1] }
    pf      = { -v33999+0x1[1] }
    ?3      = { v33917[1] }
    af      = { v34007[1] }
    ?5      = { v33919[1] }
    zf      = { v34004[1] }
    sf      = { v34002[1] }
    tf      = { v33922[1] }
    if      = { v33923[1] }
    df      = { v33924[1] }
    of      = { 0x0[1] }
    iopl0   = { v33926[1] }
    iopl1   = { v33927[1] }
    nt      = { v33928[1] }
    ?15     = { v33929[1] }
    rf      = { v33930[1] }
    vm      = { v33931[1] }
    ac      = { v33932[1] }
    vif     = { v33933[1] }
    vip     = { v33934[1] }
    id      = { v33935[1] }
    ?22     = { v33936[1] }
    ?23     = { v33937[1] }
    ?24     = { v33938[1] }
    ?25     = { v33939[1] }
    ?26     = { v33940[1] }
    ?27     = { v33941[1] }
    ?28     = { v33942[1] }
    ?29     = { v33943[1] }
    ?30     = { v33944[1] }
    ?31     = { v33945[1] }
    ip      = { v34018[32] }
memory:
    address = { 0x80496f0[32] }
      value = { v33953[32] }
      flags = { size=4; read-only }
    address = { v33953[32] }
      value = { v33961[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483ba} expr=v3604[32] }
    cx      = { defs={} expr=v3548[32] }
    dx      = { defs={0x080483bf} expr=v3628[32] }
    bx      = { defs={} expr=v3550[32] }
    sp      = { defs={} expr=v3551[32] }
    bp      = { defs={} expr=v3552[32] }
    si      = { defs={} expr=v3553[32] }
    di      = { defs={} expr=v3554[32] }
    es      = { defs={} expr=v3555[16] }
    cs      = { defs={} expr=v3556[16] }
    ss      = { defs={} expr=v3557[16] }
    ds      = { defs={} expr=v3558[16] }
    fs      = { defs={} expr=v3559[16] }
    gs      = { defs={} expr=v3560[16] }
    cf      = { defs={0x080483c1} expr=0[1] }
    ?1      = { defs={} expr=v3562[1] }
    pf      = { defs={0x080483bf,0x080483c1} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v3628[32] v3628[32]))))))) }
    ?3      = { defs={} expr=v3564[1] }
    af      = { defs={0x080483c1} expr=v3700[1] }
    ?5      = { defs={} expr=v3566[1] }
    zf      = { defs={0x080483bf,0x080483c1} expr=(zerop[1] (bv-and[32] v3628[32] v3628[32])) }
    sf      = { defs={0x080483bf,0x080483c1} expr=(extract[1] 31[32] 32[32] (bv-and[32] v3628[32] v3628[32])) }
    tf      = { defs={} expr=v3569[1] }
    if      = { defs={} expr=v3570[1] }
    df      = { defs={} expr=v3571[1] }
    of      = { defs={0x080483c1} expr=0[1] }
    iopl0   = { defs={} expr=v3573[1] }
    iopl1   = { defs={} expr=v3574[1] }
    nt      = { defs={} expr=v3575[1] }
    ?15     = { defs={} expr=v3576[1] }
    rf      = { defs={} expr=v3577[1] }
    vm      = { defs={} expr=v3578[1] }
    ac      = { defs={} expr=v3579[1] }
    vif     = { defs={} expr=v3580[1] }
    vip     = { defs={} expr=v3581[1] }
    id      = { defs={} expr=v3582[1] }
    ?22     = { defs={} expr=v3583[1] }
    ?23     = { defs={} expr=v3584[1] }
    ?24     = { defs={} expr=v3585[1] }
    ?25     = { defs={} expr=v3586[1] }
    ?26     = { defs={} expr=v3587[1] }
    ?27     = { defs={} expr=v3588[1] }
    ?28     = { defs={} expr=v3589[1] }
    ?29     = { defs={} expr=v3590[1] }
    ?30     = { defs={} expr=v3591[1] }
    ?31     = { defs={} expr=v3592[1] }
    ip      = { defs={0x080483ba,0x080483bf,0x080483c1,0x080483c3} expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v3628[32] v3628[32]))) 0x080483b0[32] 0x080483c5[32]) }
memory:
init mem:
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=(add[32] v3604[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=v3604[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3628[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f3[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f2[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f1[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3604[32]) }
      flags = { rdonly }
    address = { defs={0x080483ba} expr=0x080496f0[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3604[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483c5[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01
registers:
    ax      = { v34068[32] }
    cx      = { v34069[32] }
    dx      = { v34070[32] }
    bx      = { v34071[32] }
    sp      = { v34072[32] }
    bp      = { v34073[32] }
    si      = { v34074[32] }
    di      = { v34075[32] }
    es      = { v34076[16] }
    cs      = { v34077[16] }
    ss      = { v34078[16] }
    ds      = { v34079[16] }
    fs      = { v34080[16] }
    gs      = { v34081[16] }
    cf      = { v34082[1] }
    ?1      = { v34083[1] }
    pf      = { v34084[1] }
    ?3      = { v34085[1] }
    af      = { v34086[1] }
    ?5      = { v34087[1] }
    zf      = { v34088[1] }
    sf      = { v34089[1] }
    tf      = { v34090[1] }
    if      = { v34091[1] }
    df      = { v34092[1] }
    of      = { v34093[1] }
    iopl0   = { v34094[1] }
    iopl1   = { v34095[1] }
    nt      = { v34096[1] }
    ?15     = { v34097[1] }
    rf      = { v34098[1] }
    vm      = { v34099[1] }
    ac      = { v34100[1] }
    vif     = { v34101[1] }
    vip     = { v34102[1] }
    id      = { v34103[1] }
    ?22     = { v34104[1] }
    ?23     = { v34105[1] }
    ?24     = { v34106[1] }
    ?25     = { v34107[1] }
    ?26     = { v34108[1] }
    ?27     = { v34109[1] }
    ?28     = { v34110[1] }
    ?29     = { v34111[1] }
    ?30     = { v34112[1] }
    ?31     = { v34113[1] }
    ip      = { 0x80483cc[32] }
memory:
    address = { 0x80496f4[32] }
      value = { 0x1[32] }
      flags = { size=1 }
registers:
    ax      = { defs={} expr=v3772[32] }
    cx      = { defs={} expr=v3773[32] }
    dx      = { defs={} expr=v3774[32] }
    bx      = { defs={} expr=v3775[32] }
    sp      = { defs={} expr=v3776[32] }
    bp      = { defs={} expr=v3777[32] }
    si      = { defs={} expr=v3778[32] }
    di      = { defs={} expr=v3779[32] }
    es      = { defs={} expr=v3780[16] }
    cs      = { defs={} expr=v3781[16] }
    ss      = { defs={} expr=v3782[16] }
    ds      = { defs={} expr=v3783[16] }
    fs      = { defs={} expr=v3784[16] }
    gs      = { defs={} expr=v3785[16] }
    cf      = { defs={} expr=v3786[1] }
    ?1      = { defs={} expr=v3787[1] }
    pf      = { defs={} expr=v3788[1] }
    ?3      = { defs={} expr=v3789[1] }
    af      = { defs={} expr=v3790[1] }
    ?5      = { defs={} expr=v3791[1] }
    zf      = { defs={} expr=v3792[1] }
    sf      = { defs={} expr=v3793[1] }
    tf      = { defs={} expr=v3794[1] }
    if      = { defs={} expr=v3795[1] }
    df      = { defs={} expr=v3796[1] }
    of      = { defs={} expr=v3797[1] }
    iopl0   = { defs={} expr=v3798[1] }
    iopl1   = { defs={} expr=v3799[1] }
    nt      = { defs={} expr=v3800[1] }
    ?15     = { defs={} expr=v3801[1] }
    rf      = { defs={} expr=v3802[1] }
    vm      = { defs={} expr=v3803[1] }
    ac      = { defs={} expr=v3804[1] }
    vif     = { defs={} expr=v3805[1] }
    vip     = { defs={} expr=v3806[1] }
    id      = { defs={} expr=v3807[1] }
    ?22     = { defs={} expr=v3808[1] }
    ?23     = { defs={} expr=v3809[1] }
    ?24     = { defs={} expr=v3810[1] }
    ?25     = { defs={} expr=v3811[1] }
    ?26     = { defs={} expr=v3812[1] }
    ?27     = { defs={} expr=v3813[1] }
    ?28     = { defs={} expr=v3814[1] }
    ?29     = { defs={} expr=v3815[1] }
    ?30     = { defs={} expr=v3816[1] }
    ?31     = { defs={} expr=v3817[1] }
    ip      = { defs={0x080483c5} expr=0x080483cc[32] }
memory:
    address = { defs={0x080483c5} expr=0x080496f4[32] }
      value = { defs={0x080483c5} expr=1[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483cc[32] }
memory:
null state
0x80483cc:leave  
registers:
    ax      = { v34068[32] }
    cx      = { v34069[32] }
    dx      = { v34070[32] }
    bx      = { v34071[32] }
    sp      = { v34073+0x4[32] }
    bp      = { v34131[32] }
    si      = { v34074[32] }
    di      = { v34075[32] }
    es      = { v34076[16] }
    cs      = { v34077[16] }
    ss      = { v34078[16] }
    ds      = { v34079[16] }
    fs      = { v34080[16] }
    gs      = { v34081[16] }
    cf      = { v34082[1] }
    ?1      = { v34083[1] }
    pf      = { v34084[1] }
    ?3      = { v34085[1] }
    af      = { v34086[1] }
    ?5      = { v34087[1] }
    zf      = { v34088[1] }
    sf      = { v34089[1] }
    tf      = { v34090[1] }
    if      = { v34091[1] }
    df      = { v34092[1] }
    of      = { v34093[1] }
    iopl0   = { v34094[1] }
    iopl1   = { v34095[1] }
    nt      = { v34096[1] }
    ?15     = { v34097[1] }
    rf      = { v34098[1] }
    vm      = { v34099[1] }
    ac      = { v34100[1] }
    vif     = { v34101[1] }
    vip     = { v34102[1] }
    id      = { v34103[1] }
    ?22     = { v34104[1] }
    ?23     = { v34105[1] }
    ?24     = { v34106[1] }
    ?25     = { v34107[1] }
    ?26     = { v34108[1] }
    ?27     = { v34109[1] }
    ?28     = { v34110[1] }
    ?29     = { v34111[1] }
    ?30     = { v34112[1] }
    ?31     = { v34113[1] }
    ip      = { 0x80483cd[32] }
memory:
    address = { 0x80496f4[32] }
      value = { 0x1[32] }
      flags = { size=1 }
    address = { v34073[32] }
      value = { v34131[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v3772[32] }
    cx      = { defs={} expr=v3773[32] }
    dx      = { defs={} expr=v3774[32] }
    bx      = { defs={} expr=v3775[32] }
    sp      = { defs={0x080483cc} expr=(add[32] v3777[32] 4[32]) }
    bp      = { defs={0x080483cc} expr=v3849[32] }
    si      = { defs={} expr=v3778[32] }
    di      = { defs={} expr=v3779[32] }
    es      = { defs={} expr=v3780[16] }
    cs      = { defs={} expr=v3781[16] }
    ss      = { defs={} expr=v3782[16] }
    ds      = { defs={} expr=v3783[16] }
    fs      = { defs={} expr=v3784[16] }
    gs      = { defs={} expr=v3785[16] }
    cf      = { defs={} expr=v3786[1] }
    ?1      = { defs={} expr=v3787[1] }
    pf      = { defs={} expr=v3788[1] }
    ?3      = { defs={} expr=v3789[1] }
    af      = { defs={} expr=v3790[1] }
    ?5      = { defs={} expr=v3791[1] }
    zf      = { defs={} expr=v3792[1] }
    sf      = { defs={} expr=v3793[1] }
    tf      = { defs={} expr=v3794[1] }
    if      = { defs={} expr=v3795[1] }
    df      = { defs={} expr=v3796[1] }
    of      = { defs={} expr=v3797[1] }
    iopl0   = { defs={} expr=v3798[1] }
    iopl1   = { defs={} expr=v3799[1] }
    nt      = { defs={} expr=v3800[1] }
    ?15     = { defs={} expr=v3801[1] }
    rf      = { defs={} expr=v3802[1] }
    vm      = { defs={} expr=v3803[1] }
    ac      = { defs={} expr=v3804[1] }
    vif     = { defs={} expr=v3805[1] }
    vip     = { defs={} expr=v3806[1] }
    id      = { defs={} expr=v3807[1] }
    ?22     = { defs={} expr=v3808[1] }
    ?23     = { defs={} expr=v3809[1] }
    ?24     = { defs={} expr=v3810[1] }
    ?25     = { defs={} expr=v3811[1] }
    ?26     = { defs={} expr=v3812[1] }
    ?27     = { defs={} expr=v3813[1] }
    ?28     = { defs={} expr=v3814[1] }
    ?29     = { defs={} expr=v3815[1] }
    ?30     = { defs={} expr=v3816[1] }
    ?31     = { defs={} expr=v3817[1] }
    ip      = { defs={0x080483c5,0x080483cc} expr=0x080483cd[32] }
memory:
    address = { defs={0x080483c5} expr=0x080496f4[32] }
      value = { defs={0x080483c5} expr=1[8] }
      flags = { }
init mem:
    address = { defs={0x080483cc} expr=(add[32] v3777[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3849[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=(add[32] v3777[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3849[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=(add[32] v3777[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3849[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=v3777[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3849[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483cd[32] }
memory:
null state
0x80483cd:ret    
registers:
    ax      = { v34068[32] }
    cx      = { v34069[32] }
    dx      = { v34070[32] }
    bx      = { v34071[32] }
    sp      = { v34073+0x8[32] }
    bp      = { v34131[32] }
    si      = { v34074[32] }
    di      = { v34075[32] }
    es      = { v34076[16] }
    cs      = { v34077[16] }
    ss      = { v34078[16] }
    ds      = { v34079[16] }
    fs      = { v34080[16] }
    gs      = { v34081[16] }
    cf      = { v34082[1] }
    ?1      = { v34083[1] }
    pf      = { v34084[1] }
    ?3      = { v34085[1] }
    af      = { v34086[1] }
    ?5      = { v34087[1] }
    zf      = { v34088[1] }
    sf      = { v34089[1] }
    tf      = { v34090[1] }
    if      = { v34091[1] }
    df      = { v34092[1] }
    of      = { v34093[1] }
    iopl0   = { v34094[1] }
    iopl1   = { v34095[1] }
    nt      = { v34096[1] }
    ?15     = { v34097[1] }
    rf      = { v34098[1] }
    vm      = { v34099[1] }
    ac      = { v34100[1] }
    vif     = { v34101[1] }
    vip     = { v34102[1] }
    id      = { v34103[1] }
    ?22     = { v34104[1] }
    ?23     = { v34105[1] }
    ?24     = { v34106[1] }
    ?25     = { v34107[1] }
    ?26     = { v34108[1] }
    ?27     = { v34109[1] }
    ?28     = { v34110[1] }
    ?29     = { v34111[1] }
    ?30     = { v34112[1] }
    ?31     = { v34113[1] }
    ip      = { v34143[32] }
memory:
    address = { 0x80496f4[32] }
      value = { 0x1[32] }
      flags = { size=1 }
    address = { v34073[32] }
      value = { v34131[32] }
      flags = { size=4; read-only }
    address = { v34073+0x4[32] }
      value = { v34143[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v3772[32] }
    cx      = { defs={} expr=v3773[32] }
    dx      = { defs={} expr=v3774[32] }
    bx      = { defs={} expr=v3775[32] }
    sp      = { defs={0x080483cc,0x080483cd} expr=(add[32] (add[32] v3777[32] 4[32]) 4[32]) }
    bp      = { defs={0x080483cc} expr=v3849[32] }
    si      = { defs={} expr=v3778[32] }
    di      = { defs={} expr=v3779[32] }
    es      = { defs={} expr=v3780[16] }
    cs      = { defs={} expr=v3781[16] }
    ss      = { defs={} expr=v3782[16] }
    ds      = { defs={} expr=v3783[16] }
    fs      = { defs={} expr=v3784[16] }
    gs      = { defs={} expr=v3785[16] }
    cf      = { defs={} expr=v3786[1] }
    ?1      = { defs={} expr=v3787[1] }
    pf      = { defs={} expr=v3788[1] }
    ?3      = { defs={} expr=v3789[1] }
    af      = { defs={} expr=v3790[1] }
    ?5      = { defs={} expr=v3791[1] }
    zf      = { defs={} expr=v3792[1] }
    sf      = { defs={} expr=v3793[1] }
    tf      = { defs={} expr=v3794[1] }
    if      = { defs={} expr=v3795[1] }
    df      = { defs={} expr=v3796[1] }
    of      = { defs={} expr=v3797[1] }
    iopl0   = { defs={} expr=v3798[1] }
    iopl1   = { defs={} expr=v3799[1] }
    nt      = { defs={} expr=v3800[1] }
    ?15     = { defs={} expr=v3801[1] }
    rf      = { defs={} expr=v3802[1] }
    vm      = { defs={} expr=v3803[1] }
    ac      = { defs={} expr=v3804[1] }
    vif     = { defs={} expr=v3805[1] }
    vip     = { defs={} expr=v3806[1] }
    id      = { defs={} expr=v3807[1] }
    ?22     = { defs={} expr=v3808[1] }
    ?23     = { defs={} expr=v3809[1] }
    ?24     = { defs={} expr=v3810[1] }
    ?25     = { defs={} expr=v3811[1] }
    ?26     = { defs={} expr=v3812[1] }
    ?27     = { defs={} expr=v3813[1] }
    ?28     = { defs={} expr=v3814[1] }
    ?29     = { defs={} expr=v3815[1] }
    ?30     = { defs={} expr=v3816[1] }
    ?31     = { defs={} expr=v3817[1] }
    ip      = { defs={0x080483cd} expr=v3880[32] }
memory:
    address = { defs={0x080483c5} expr=0x080496f4[32] }
      value = { defs={0x080483c5} expr=1[8] }
      flags = { }
init mem:
    address = { defs={0x080483cc} expr=(add[32] (add[32] v3777[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3880[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=(add[32] (add[32] v3777[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3880[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=(add[32] (add[32] v3777[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3880[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=(add[32] v3777[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3880[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=(add[32] v3777[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v3849[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=(add[32] v3777[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v3849[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=(add[32] v3777[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v3849[32]) }
      flags = { rdonly }
    address = { defs={0x080483cc} expr=v3777[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v3849[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
registers:
    ax      = { v34194[32] }
    cx      = { v34195[32] }
    dx      = { v34196[32] }
    bx      = { v34197[32] }
    sp      = { v34198-0x4[32] }
    bp      = { v34199[32] }
    si      = { v34200[32] }
    di      = { v34201[32] }
    es      = { v34202[16] }
    cs      = { v34203[16] }
    ss      = { v34204[16] }
    ds      = { v34205[16] }
    fs      = { v34206[16] }
    gs      = { v34207[16] }
    cf      = { v34208[1] }
    ?1      = { v34209[1] }
    pf      = { v34210[1] }
    ?3      = { v34211[1] }
    af      = { v34212[1] }
    ?5      = { v34213[1] }
    zf      = { v34214[1] }
    sf      = { v34215[1] }
    tf      = { v34216[1] }
    if      = { v34217[1] }
    df      = { v34218[1] }
    of      = { v34219[1] }
    iopl0   = { v34220[1] }
    iopl1   = { v34221[1] }
    nt      = { v34222[1] }
    ?15     = { v34223[1] }
    rf      = { v34224[1] }
    vm      = { v34225[1] }
    ac      = { v34226[1] }
    vif     = { v34227[1] }
    vip     = { v34228[1] }
    id      = { v34229[1] }
    ?22     = { v34230[1] }
    ?23     = { v34231[1] }
    ?24     = { v34232[1] }
    ?25     = { v34233[1] }
    ?26     = { v34234[1] }
    ?27     = { v34235[1] }
    ?28     = { v34236[1] }
    ?29     = { v34237[1] }
    ?30     = { v34238[1] }
    ?31     = { v34239[1] }
    ip      = { 0x80483d1[32] }
memory:
    address = { v34198-0x4[32] }
      value = { v34199[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v3944[32] }
    cx      = { defs={} expr=v3945[32] }
    dx      = { defs={} expr=v3946[32] }
    bx      = { defs={} expr=v3947[32] }
    sp      = { defs={0x080483d0} expr=(add[32] v3948[32] -4[32]) }
    bp      = { defs={} expr=v3949[32] }
    si      = { defs={} expr=v3950[32] }
    di      = { defs={} expr=v3951[32] }
    es      = { defs={} expr=v3952[16] }
    cs      = { defs={} expr=v3953[16] }
    ss      = { defs={} expr=v3954[16] }
    ds      = { defs={} expr=v3955[16] }
    fs      = { defs={} expr=v3956[16] }
    gs      = { defs={} expr=v3957[16] }
    cf      = { defs={} expr=v3958[1] }
    ?1      = { defs={} expr=v3959[1] }
    pf      = { defs={} expr=v3960[1] }
    ?3      = { defs={} expr=v3961[1] }
    af      = { defs={} expr=v3962[1] }
    ?5      = { defs={} expr=v3963[1] }
    zf      = { defs={} expr=v3964[1] }
    sf      = { defs={} expr=v3965[1] }
    tf      = { defs={} expr=v3966[1] }
    if      = { defs={} expr=v3967[1] }
    df      = { defs={} expr=v3968[1] }
    of      = { defs={} expr=v3969[1] }
    iopl0   = { defs={} expr=v3970[1] }
    iopl1   = { defs={} expr=v3971[1] }
    nt      = { defs={} expr=v3972[1] }
    ?15     = { defs={} expr=v3973[1] }
    rf      = { defs={} expr=v3974[1] }
    vm      = { defs={} expr=v3975[1] }
    ac      = { defs={} expr=v3976[1] }
    vif     = { defs={} expr=v3977[1] }
    vip     = { defs={} expr=v3978[1] }
    id      = { defs={} expr=v3979[1] }
    ?22     = { defs={} expr=v3980[1] }
    ?23     = { defs={} expr=v3981[1] }
    ?24     = { defs={} expr=v3982[1] }
    ?25     = { defs={} expr=v3983[1] }
    ?26     = { defs={} expr=v3984[1] }
    ?27     = { defs={} expr=v3985[1] }
    ?28     = { defs={} expr=v3986[1] }
    ?29     = { defs={} expr=v3987[1] }
    ?30     = { defs={} expr=v3988[1] }
    ?31     = { defs={} expr=v3989[1] }
    ip      = { defs={0x080483d0} expr=0x080483d1[32] }
memory:
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 3[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 2[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 1[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] v3948[32] -4[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3949[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483d1[32] }
memory:
null state
0x80483d1:mov    ebp, esp
registers:
    ax      = { v34194[32] }
    cx      = { v34195[32] }
    dx      = { v34196[32] }
    bx      = { v34197[32] }
    sp      = { v34198-0x4[32] }
    bp      = { v34198-0x4[32] }
    si      = { v34200[32] }
    di      = { v34201[32] }
    es      = { v34202[16] }
    cs      = { v34203[16] }
    ss      = { v34204[16] }
    ds      = { v34205[16] }
    fs      = { v34206[16] }
    gs      = { v34207[16] }
    cf      = { v34208[1] }
    ?1      = { v34209[1] }
    pf      = { v34210[1] }
    ?3      = { v34211[1] }
    af      = { v34212[1] }
    ?5      = { v34213[1] }
    zf      = { v34214[1] }
    sf      = { v34215[1] }
    tf      = { v34216[1] }
    if      = { v34217[1] }
    df      = { v34218[1] }
    of      = { v34219[1] }
    iopl0   = { v34220[1] }
    iopl1   = { v34221[1] }
    nt      = { v34222[1] }
    ?15     = { v34223[1] }
    rf      = { v34224[1] }
    vm      = { v34225[1] }
    ac      = { v34226[1] }
    vif     = { v34227[1] }
    vip     = { v34228[1] }
    id      = { v34229[1] }
    ?22     = { v34230[1] }
    ?23     = { v34231[1] }
    ?24     = { v34232[1] }
    ?25     = { v34233[1] }
    ?26     = { v34234[1] }
    ?27     = { v34235[1] }
    ?28     = { v34236[1] }
    ?29     = { v34237[1] }
    ?30     = { v34238[1] }
    ?31     = { v34239[1] }
    ip      = { 0x80483d3[32] }
memory:
    address = { v34198-0x4[32] }
      value = { v34199[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v3944[32] }
    cx      = { defs={} expr=v3945[32] }
    dx      = { defs={} expr=v3946[32] }
    bx      = { defs={} expr=v3947[32] }
    sp      = { defs={0x080483d0} expr=(add[32] v3948[32] -4[32]) }
    bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3948[32] -4[32]) }
    si      = { defs={} expr=v3950[32] }
    di      = { defs={} expr=v3951[32] }
    es      = { defs={} expr=v3952[16] }
    cs      = { defs={} expr=v3953[16] }
    ss      = { defs={} expr=v3954[16] }
    ds      = { defs={} expr=v3955[16] }
    fs      = { defs={} expr=v3956[16] }
    gs      = { defs={} expr=v3957[16] }
    cf      = { defs={} expr=v3958[1] }
    ?1      = { defs={} expr=v3959[1] }
    pf      = { defs={} expr=v3960[1] }
    ?3      = { defs={} expr=v3961[1] }
    af      = { defs={} expr=v3962[1] }
    ?5      = { defs={} expr=v3963[1] }
    zf      = { defs={} expr=v3964[1] }
    sf      = { defs={} expr=v3965[1] }
    tf      = { defs={} expr=v3966[1] }
    if      = { defs={} expr=v3967[1] }
    df      = { defs={} expr=v3968[1] }
    of      = { defs={} expr=v3969[1] }
    iopl0   = { defs={} expr=v3970[1] }
    iopl1   = { defs={} expr=v3971[1] }
    nt      = { defs={} expr=v3972[1] }
    ?15     = { defs={} expr=v3973[1] }
    rf      = { defs={} expr=v3974[1] }
    vm      = { defs={} expr=v3975[1] }
    ac      = { defs={} expr=v3976[1] }
    vif     = { defs={} expr=v3977[1] }
    vip     = { defs={} expr=v3978[1] }
    id      = { defs={} expr=v3979[1] }
    ?22     = { defs={} expr=v3980[1] }
    ?23     = { defs={} expr=v3981[1] }
    ?24     = { defs={} expr=v3982[1] }
    ?25     = { defs={} expr=v3983[1] }
    ?26     = { defs={} expr=v3984[1] }
    ?27     = { defs={} expr=v3985[1] }
    ?28     = { defs={} expr=v3986[1] }
    ?29     = { defs={} expr=v3987[1] }
    ?30     = { defs={} expr=v3988[1] }
    ?31     = { defs={} expr=v3989[1] }
    ip      = { defs={0x080483d0,0x080483d1} expr=0x080483d3[32] }
memory:
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 3[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 2[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 1[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] v3948[32] -4[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3949[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483d3[32] }
memory:
null state
0x80483d3:sub    esp, 0x08
registers:
    ax      = { v34194[32] }
    cx      = { v34195[32] }
    dx      = { v34196[32] }
    bx      = { v34197[32] }
    sp      = { v34198-0xc[32] }
    bp      = { v34198-0x4[32] }
    si      = { v34200[32] }
    di      = { v34201[32] }
    es      = { v34202[16] }
    cs      = { v34203[16] }
    ss      = { v34204[16] }
    ds      = { v34205[16] }
    fs      = { v34206[16] }
    gs      = { v34207[16] }
    cf      = { -v34305+0x1[1] }
    ?1      = { v34209[1] }
    pf      = { -v34295+0x1[1] }
    ?3      = { v34211[1] }
    af      = { -v34302+0x1[1] }
    ?5      = { v34213[1] }
    zf      = { v34300[1] }
    sf      = { v34298[1] }
    tf      = { v34216[1] }
    if      = { v34217[1] }
    df      = { v34218[1] }
    of      = { v34312[1] }
    iopl0   = { v34220[1] }
    iopl1   = { v34221[1] }
    nt      = { v34222[1] }
    ?15     = { v34223[1] }
    rf      = { v34224[1] }
    vm      = { v34225[1] }
    ac      = { v34226[1] }
    vif     = { v34227[1] }
    vip     = { v34228[1] }
    id      = { v34229[1] }
    ?22     = { v34230[1] }
    ?23     = { v34231[1] }
    ?24     = { v34232[1] }
    ?25     = { v34233[1] }
    ?26     = { v34234[1] }
    ?27     = { v34235[1] }
    ?28     = { v34236[1] }
    ?29     = { v34237[1] }
    ?30     = { v34238[1] }
    ?31     = { v34239[1] }
    ip      = { 0x80483d6[32] }
memory:
    address = { v34198-0x4[32] }
      value = { v34199[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v3944[32] }
    cx      = { defs={} expr=v3945[32] }
    dx      = { defs={} expr=v3946[32] }
    bx      = { defs={} expr=v3947[32] }
    sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v3948[32] -4[32]) -8[32]) }
    bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3948[32] -4[32]) }
    si      = { defs={} expr=v3950[32] }
    di      = { defs={} expr=v3951[32] }
    es      = { defs={} expr=v3952[16] }
    cs      = { defs={} expr=v3953[16] }
    ss      = { defs={} expr=v3954[16] }
    ds      = { defs={} expr=v3955[16] }
    fs      = { defs={} expr=v3956[16] }
    gs      = { defs={} expr=v3957[16] }
    cf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v3959[1] }
    pf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v3961[1] }
    af      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v3963[1] }
    zf      = { defs={0x080483d0,0x080483d3} expr=(zerop[1] (add[32] (add[32] v3948[32] -4[32]) -8[32])) }
    sf      = { defs={0x080483d0,0x080483d3} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v3948[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v3966[1] }
    if      = { defs={} expr=v3967[1] }
    df      = { defs={} expr=v3968[1] }
    of      = { defs={0x080483d0,0x080483d3} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v3970[1] }
    iopl1   = { defs={} expr=v3971[1] }
    nt      = { defs={} expr=v3972[1] }
    ?15     = { defs={} expr=v3973[1] }
    rf      = { defs={} expr=v3974[1] }
    vm      = { defs={} expr=v3975[1] }
    ac      = { defs={} expr=v3976[1] }
    vif     = { defs={} expr=v3977[1] }
    vip     = { defs={} expr=v3978[1] }
    id      = { defs={} expr=v3979[1] }
    ?22     = { defs={} expr=v3980[1] }
    ?23     = { defs={} expr=v3981[1] }
    ?24     = { defs={} expr=v3982[1] }
    ?25     = { defs={} expr=v3983[1] }
    ?26     = { defs={} expr=v3984[1] }
    ?27     = { defs={} expr=v3985[1] }
    ?28     = { defs={} expr=v3986[1] }
    ?29     = { defs={} expr=v3987[1] }
    ?30     = { defs={} expr=v3988[1] }
    ?31     = { defs={} expr=v3989[1] }
    ip      = { defs={0x080483d0,0x080483d1,0x080483d3} expr=0x080483d6[32] }
memory:
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 3[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 2[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 1[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] v3948[32] -4[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3949[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483d6[32] }
memory:
null state
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]
registers:
    ax      = { v34320[32] }
    cx      = { v34195[32] }
    dx      = { v34196[32] }
    bx      = { v34197[32] }
    sp      = { v34198-0xc[32] }
    bp      = { v34198-0x4[32] }
    si      = { v34200[32] }
    di      = { v34201[32] }
    es      = { v34202[16] }
    cs      = { v34203[16] }
    ss      = { v34204[16] }
    ds      = { v34205[16] }
    fs      = { v34206[16] }
    gs      = { v34207[16] }
    cf      = { -v34305+0x1[1] }
    ?1      = { v34209[1] }
    pf      = { -v34295+0x1[1] }
    ?3      = { v34211[1] }
    af      = { -v34302+0x1[1] }
    ?5      = { v34213[1] }
    zf      = { v34300[1] }
    sf      = { v34298[1] }
    tf      = { v34216[1] }
    if      = { v34217[1] }
    df      = { v34218[1] }
    of      = { v34312[1] }
    iopl0   = { v34220[1] }
    iopl1   = { v34221[1] }
    nt      = { v34222[1] }
    ?15     = { v34223[1] }
    rf      = { v34224[1] }
    vm      = { v34225[1] }
    ac      = { v34226[1] }
    vif     = { v34227[1] }
    vip     = { v34228[1] }
    id      = { v34229[1] }
    ?22     = { v34230[1] }
    ?23     = { v34231[1] }
    ?24     = { v34232[1] }
    ?25     = { v34233[1] }
    ?26     = { v34234[1] }
    ?27     = { v34235[1] }
    ?28     = { v34236[1] }
    ?29     = { v34237[1] }
    ?30     = { v34238[1] }
    ?31     = { v34239[1] }
    ip      = { 0x80483db[32] }
memory:
    address = { v34198-0x4[32] }
      value = { v34199[32] }
      flags = { size=4 }
    address = { 0x80495f8[32] }
      value = { v34320[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483d6} expr=v4127[32] }
    cx      = { defs={} expr=v3945[32] }
    dx      = { defs={} expr=v3946[32] }
    bx      = { defs={} expr=v3947[32] }
    sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v3948[32] -4[32]) -8[32]) }
    bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3948[32] -4[32]) }
    si      = { defs={} expr=v3950[32] }
    di      = { defs={} expr=v3951[32] }
    es      = { defs={} expr=v3952[16] }
    cs      = { defs={} expr=v3953[16] }
    ss      = { defs={} expr=v3954[16] }
    ds      = { defs={} expr=v3955[16] }
    fs      = { defs={} expr=v3956[16] }
    gs      = { defs={} expr=v3957[16] }
    cf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v3959[1] }
    pf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v3948[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v3961[1] }
    af      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v3963[1] }
    zf      = { defs={0x080483d0,0x080483d3} expr=(zerop[1] (add[32] (add[32] v3948[32] -4[32]) -8[32])) }
    sf      = { defs={0x080483d0,0x080483d3} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v3948[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v3966[1] }
    if      = { defs={} expr=v3967[1] }
    df      = { defs={} expr=v3968[1] }
    of      = { defs={0x080483d0,0x080483d3} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v3948[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v3970[1] }
    iopl1   = { defs={} expr=v3971[1] }
    nt      = { defs={} expr=v3972[1] }
    ?15     = { defs={} expr=v3973[1] }
    rf      = { defs={} expr=v3974[1] }
    vm      = { defs={} expr=v3975[1] }
    ac      = { defs={} expr=v3976[1] }
    vif     = { defs={} expr=v3977[1] }
    vip     = { defs={} expr=v3978[1] }
    id      = { defs={} expr=v3979[1] }
    ?22     = { defs={} expr=v3980[1] }
    ?23     = { defs={} expr=v3981[1] }
    ?24     = { defs={} expr=v3982[1] }
    ?25     = { defs={} expr=v3983[1] }
    ?26     = { defs={} expr=v3984[1] }
    ?27     = { defs={} expr=v3985[1] }
    ?28     = { defs={} expr=v3986[1] }
    ?29     = { defs={} expr=v3987[1] }
    ?30     = { defs={} expr=v3988[1] }
    ?31     = { defs={} expr=v3989[1] }
    ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6} expr=0x080483db[32] }
memory:
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 3[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 2[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 1[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] v3948[32] -4[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3949[32]) }
      flags = { }
init mem:
    address = { defs={0x080483d6} expr=0x080495fb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495fa[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495f9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495f8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v4127[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483db[32] }
memory:
null state
0x80483db:test   eax, eax
registers:
    ax      = { v34320[32] }
    cx      = { v34195[32] }
    dx      = { v34196[32] }
    bx      = { v34197[32] }
    sp      = { v34198-0xc[32] }
    bp      = { v34198-0x4[32] }
    si      = { v34200[32] }
    di      = { v34201[32] }
    es      = { v34202[16] }
    cs      = { v34203[16] }
    ss      = { v34204[16] }
    ds      = { v34205[16] }
    fs      = { v34206[16] }
    gs      = { v34207[16] }
    cf      = { 0x0[1] }
    ?1      = { v34209[1] }
    pf      = { -v34358+0x1[1] }
    ?3      = { v34211[1] }
    af      = { v34366[1] }
    ?5      = { v34213[1] }
    zf      = { v34363[1] }
    sf      = { v34361[1] }
    tf      = { v34216[1] }
    if      = { v34217[1] }
    df      = { v34218[1] }
    of      = { 0x0[1] }
    iopl0   = { v34220[1] }
    iopl1   = { v34221[1] }
    nt      = { v34222[1] }
    ?15     = { v34223[1] }
    rf      = { v34224[1] }
    vm      = { v34225[1] }
    ac      = { v34226[1] }
    vif     = { v34227[1] }
    vip     = { v34228[1] }
    id      = { v34229[1] }
    ?22     = { v34230[1] }
    ?23     = { v34231[1] }
    ?24     = { v34232[1] }
    ?25     = { v34233[1] }
    ?26     = { v34234[1] }
    ?27     = { v34235[1] }
    ?28     = { v34236[1] }
    ?29     = { v34237[1] }
    ?30     = { v34238[1] }
    ?31     = { v34239[1] }
    ip      = { 0x80483dd[32] }
memory:
    address = { v34198-0x4[32] }
      value = { v34199[32] }
      flags = { size=4 }
    address = { 0x80495f8[32] }
      value = { v34320[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483d6} expr=v4127[32] }
    cx      = { defs={} expr=v3945[32] }
    dx      = { defs={} expr=v3946[32] }
    bx      = { defs={} expr=v3947[32] }
    sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v3948[32] -4[32]) -8[32]) }
    bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3948[32] -4[32]) }
    si      = { defs={} expr=v3950[32] }
    di      = { defs={} expr=v3951[32] }
    es      = { defs={} expr=v3952[16] }
    cs      = { defs={} expr=v3953[16] }
    ss      = { defs={} expr=v3954[16] }
    ds      = { defs={} expr=v3955[16] }
    fs      = { defs={} expr=v3956[16] }
    gs      = { defs={} expr=v3957[16] }
    cf      = { defs={0x080483db} expr=0[1] }
    ?1      = { defs={} expr=v3959[1] }
    pf      = { defs={0x080483d6,0x080483db} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))))))) }
    ?3      = { defs={} expr=v3961[1] }
    af      = { defs={0x080483db} expr=v4199[1] }
    ?5      = { defs={} expr=v3963[1] }
    zf      = { defs={0x080483d6,0x080483db} expr=(zerop[1] (bv-and[32] v4127[32] v4127[32])) }
    sf      = { defs={0x080483d6,0x080483db} expr=(extract[1] 31[32] 32[32] (bv-and[32] v4127[32] v4127[32])) }
    tf      = { defs={} expr=v3966[1] }
    if      = { defs={} expr=v3967[1] }
    df      = { defs={} expr=v3968[1] }
    of      = { defs={0x080483db} expr=0[1] }
    iopl0   = { defs={} expr=v3970[1] }
    iopl1   = { defs={} expr=v3971[1] }
    nt      = { defs={} expr=v3972[1] }
    ?15     = { defs={} expr=v3973[1] }
    rf      = { defs={} expr=v3974[1] }
    vm      = { defs={} expr=v3975[1] }
    ac      = { defs={} expr=v3976[1] }
    vif     = { defs={} expr=v3977[1] }
    vip     = { defs={} expr=v3978[1] }
    id      = { defs={} expr=v3979[1] }
    ?22     = { defs={} expr=v3980[1] }
    ?23     = { defs={} expr=v3981[1] }
    ?24     = { defs={} expr=v3982[1] }
    ?25     = { defs={} expr=v3983[1] }
    ?26     = { defs={} expr=v3984[1] }
    ?27     = { defs={} expr=v3985[1] }
    ?28     = { defs={} expr=v3986[1] }
    ?29     = { defs={} expr=v3987[1] }
    ?30     = { defs={} expr=v3988[1] }
    ?31     = { defs={} expr=v3989[1] }
    ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db} expr=0x080483dd[32] }
memory:
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 3[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 2[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 1[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] v3948[32] -4[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3949[32]) }
      flags = { }
init mem:
    address = { defs={0x080483d6} expr=0x080495fb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495fa[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495f9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495f8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v4127[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483dd[32] }
memory:
null state
0x80483dd:je     0x08048400<<Insn>>
registers:
    ax      = { v34320[32] }
    cx      = { v34195[32] }
    dx      = { v34196[32] }
    bx      = { v34197[32] }
    sp      = { v34198-0xc[32] }
    bp      = { v34198-0x4[32] }
    si      = { v34200[32] }
    di      = { v34201[32] }
    es      = { v34202[16] }
    cs      = { v34203[16] }
    ss      = { v34204[16] }
    ds      = { v34205[16] }
    fs      = { v34206[16] }
    gs      = { v34207[16] }
    cf      = { 0x0[1] }
    ?1      = { v34209[1] }
    pf      = { -v34358+0x1[1] }
    ?3      = { v34211[1] }
    af      = { v34366[1] }
    ?5      = { v34213[1] }
    zf      = { v34363[1] }
    sf      = { v34361[1] }
    tf      = { v34216[1] }
    if      = { v34217[1] }
    df      = { v34218[1] }
    of      = { 0x0[1] }
    iopl0   = { v34220[1] }
    iopl1   = { v34221[1] }
    nt      = { v34222[1] }
    ?15     = { v34223[1] }
    rf      = { v34224[1] }
    vm      = { v34225[1] }
    ac      = { v34226[1] }
    vif     = { v34227[1] }
    vip     = { v34228[1] }
    id      = { v34229[1] }
    ?22     = { v34230[1] }
    ?23     = { v34231[1] }
    ?24     = { v34232[1] }
    ?25     = { v34233[1] }
    ?26     = { v34234[1] }
    ?27     = { v34235[1] }
    ?28     = { v34236[1] }
    ?29     = { v34237[1] }
    ?30     = { v34238[1] }
    ?31     = { v34239[1] }
    ip      = { v34376[32] }
memory:
    address = { v34198-0x4[32] }
      value = { v34199[32] }
      flags = { size=4 }
    address = { 0x80495f8[32] }
      value = { v34320[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483d6} expr=v4127[32] }
    cx      = { defs={} expr=v3945[32] }
    dx      = { defs={} expr=v3946[32] }
    bx      = { defs={} expr=v3947[32] }
    sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v3948[32] -4[32]) -8[32]) }
    bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v3948[32] -4[32]) }
    si      = { defs={} expr=v3950[32] }
    di      = { defs={} expr=v3951[32] }
    es      = { defs={} expr=v3952[16] }
    cs      = { defs={} expr=v3953[16] }
    ss      = { defs={} expr=v3954[16] }
    ds      = { defs={} expr=v3955[16] }
    fs      = { defs={} expr=v3956[16] }
    gs      = { defs={} expr=v3957[16] }
    cf      = { defs={0x080483db} expr=0[1] }
    ?1      = { defs={} expr=v3959[1] }
    pf      = { defs={0x080483d6,0x080483db} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v4127[32] v4127[32]))))))) }
    ?3      = { defs={} expr=v3961[1] }
    af      = { defs={0x080483db} expr=v4199[1] }
    ?5      = { defs={} expr=v3963[1] }
    zf      = { defs={0x080483d6,0x080483db} expr=(zerop[1] (bv-and[32] v4127[32] v4127[32])) }
    sf      = { defs={0x080483d6,0x080483db} expr=(extract[1] 31[32] 32[32] (bv-and[32] v4127[32] v4127[32])) }
    tf      = { defs={} expr=v3966[1] }
    if      = { defs={} expr=v3967[1] }
    df      = { defs={} expr=v3968[1] }
    of      = { defs={0x080483db} expr=0[1] }
    iopl0   = { defs={} expr=v3970[1] }
    iopl1   = { defs={} expr=v3971[1] }
    nt      = { defs={} expr=v3972[1] }
    ?15     = { defs={} expr=v3973[1] }
    rf      = { defs={} expr=v3974[1] }
    vm      = { defs={} expr=v3975[1] }
    ac      = { defs={} expr=v3976[1] }
    vif     = { defs={} expr=v3977[1] }
    vip     = { defs={} expr=v3978[1] }
    id      = { defs={} expr=v3979[1] }
    ?22     = { defs={} expr=v3980[1] }
    ?23     = { defs={} expr=v3981[1] }
    ?24     = { defs={} expr=v3982[1] }
    ?25     = { defs={} expr=v3983[1] }
    ?26     = { defs={} expr=v3984[1] }
    ?27     = { defs={} expr=v3985[1] }
    ?28     = { defs={} expr=v3986[1] }
    ?29     = { defs={} expr=v3987[1] }
    ?30     = { defs={} expr=v3988[1] }
    ?31     = { defs={} expr=v3989[1] }
    ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db,0x080483dd} expr=(ite[32] (zerop[1] (bv-and[32] v4127[32] v4127[32])) 0x08048400[32] 0x080483df[32]) }
memory:
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 3[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 24[32] 32[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 2[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 16[32] 24[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] (add[32] v3948[32] -4[32]) 1[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 8[32] 16[32] v3949[32]) }
      flags = { }
    address = { defs={0x080483d0} expr=(add[32] v3948[32] -4[32]) }
      value = { defs={0x080483d0} expr=(extract[8] 0[32] 8[32] v3949[32]) }
      flags = { }
init mem:
    address = { defs={0x080483d6} expr=0x080495fb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495fa[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495f9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v4127[32]) }
      flags = { rdonly }
    address = { defs={0x080483d6} expr=0x080495f8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v4127[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048400[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
registers:
    ax      = { 0x0[32] }
    cx      = { v34427[32] }
    dx      = { v34428[32] }
    bx      = { v34429[32] }
    sp      = { v34430[32] }
    bp      = { v34431[32] }
    si      = { v34432[32] }
    di      = { v34433[32] }
    es      = { v34434[16] }
    cs      = { v34435[16] }
    ss      = { v34436[16] }
    ds      = { v34437[16] }
    fs      = { v34438[16] }
    gs      = { v34439[16] }
    cf      = { v34440[1] }
    ?1      = { v34441[1] }
    pf      = { v34442[1] }
    ?3      = { v34443[1] }
    af      = { v34444[1] }
    ?5      = { v34445[1] }
    zf      = { v34446[1] }
    sf      = { v34447[1] }
    tf      = { v34448[1] }
    if      = { v34449[1] }
    df      = { v34450[1] }
    of      = { v34451[1] }
    iopl0   = { v34452[1] }
    iopl1   = { v34453[1] }
    nt      = { v34454[1] }
    ?15     = { v34455[1] }
    rf      = { v34456[1] }
    vm      = { v34457[1] }
    ac      = { v34458[1] }
    vif     = { v34459[1] }
    vip     = { v34460[1] }
    id      = { v34461[1] }
    ?22     = { v34462[1] }
    ?23     = { v34463[1] }
    ?24     = { v34464[1] }
    ?25     = { v34465[1] }
    ?26     = { v34466[1] }
    ?27     = { v34467[1] }
    ?28     = { v34468[1] }
    ?29     = { v34469[1] }
    ?30     = { v34470[1] }
    ?31     = { v34471[1] }
    ip      = { 0x80483e4[32] }
memory:
registers:
    ax      = { defs={0x080483df} expr=0[32] }
    cx      = { defs={} expr=v4270[32] }
    dx      = { defs={} expr=v4271[32] }
    bx      = { defs={} expr=v4272[32] }
    sp      = { defs={} expr=v4273[32] }
    bp      = { defs={} expr=v4274[32] }
    si      = { defs={} expr=v4275[32] }
    di      = { defs={} expr=v4276[32] }
    es      = { defs={} expr=v4277[16] }
    cs      = { defs={} expr=v4278[16] }
    ss      = { defs={} expr=v4279[16] }
    ds      = { defs={} expr=v4280[16] }
    fs      = { defs={} expr=v4281[16] }
    gs      = { defs={} expr=v4282[16] }
    cf      = { defs={} expr=v4283[1] }
    ?1      = { defs={} expr=v4284[1] }
    pf      = { defs={} expr=v4285[1] }
    ?3      = { defs={} expr=v4286[1] }
    af      = { defs={} expr=v4287[1] }
    ?5      = { defs={} expr=v4288[1] }
    zf      = { defs={} expr=v4289[1] }
    sf      = { defs={} expr=v4290[1] }
    tf      = { defs={} expr=v4291[1] }
    if      = { defs={} expr=v4292[1] }
    df      = { defs={} expr=v4293[1] }
    of      = { defs={} expr=v4294[1] }
    iopl0   = { defs={} expr=v4295[1] }
    iopl1   = { defs={} expr=v4296[1] }
    nt      = { defs={} expr=v4297[1] }
    ?15     = { defs={} expr=v4298[1] }
    rf      = { defs={} expr=v4299[1] }
    vm      = { defs={} expr=v4300[1] }
    ac      = { defs={} expr=v4301[1] }
    vif     = { defs={} expr=v4302[1] }
    vip     = { defs={} expr=v4303[1] }
    id      = { defs={} expr=v4304[1] }
    ?22     = { defs={} expr=v4305[1] }
    ?23     = { defs={} expr=v4306[1] }
    ?24     = { defs={} expr=v4307[1] }
    ?25     = { defs={} expr=v4308[1] }
    ?26     = { defs={} expr=v4309[1] }
    ?27     = { defs={} expr=v4310[1] }
    ?28     = { defs={} expr=v4311[1] }
    ?29     = { defs={} expr=v4312[1] }
    ?30     = { defs={} expr=v4313[1] }
    ?31     = { defs={} expr=v4314[1] }
    ip      = { defs={0x080483df} expr=0x080483e4[32] }
memory:
init mem:
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483e4[32] }
memory:
null state
0x80483e4:test   eax, eax
registers:
    ax      = { 0x0[32] }
    cx      = { v34427[32] }
    dx      = { v34428[32] }
    bx      = { v34429[32] }
    sp      = { v34430[32] }
    bp      = { v34431[32] }
    si      = { v34432[32] }
    di      = { v34433[32] }
    es      = { v34434[16] }
    cs      = { v34435[16] }
    ss      = { v34436[16] }
    ds      = { v34437[16] }
    fs      = { v34438[16] }
    gs      = { v34439[16] }
    cf      = { 0x0[1] }
    ?1      = { v34441[1] }
    pf      = { 0x1[1] }
    ?3      = { v34443[1] }
    af      = { v34505[1] }
    ?5      = { v34445[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v34448[1] }
    if      = { v34449[1] }
    df      = { v34450[1] }
    of      = { 0x0[1] }
    iopl0   = { v34452[1] }
    iopl1   = { v34453[1] }
    nt      = { v34454[1] }
    ?15     = { v34455[1] }
    rf      = { v34456[1] }
    vm      = { v34457[1] }
    ac      = { v34458[1] }
    vif     = { v34459[1] }
    vip     = { v34460[1] }
    id      = { v34461[1] }
    ?22     = { v34462[1] }
    ?23     = { v34463[1] }
    ?24     = { v34464[1] }
    ?25     = { v34465[1] }
    ?26     = { v34466[1] }
    ?27     = { v34467[1] }
    ?28     = { v34468[1] }
    ?29     = { v34469[1] }
    ?30     = { v34470[1] }
    ?31     = { v34471[1] }
    ip      = { 0x80483e6[32] }
memory:
registers:
    ax      = { defs={0x080483df} expr=0[32] }
    cx      = { defs={} expr=v4270[32] }
    dx      = { defs={} expr=v4271[32] }
    bx      = { defs={} expr=v4272[32] }
    sp      = { defs={} expr=v4273[32] }
    bp      = { defs={} expr=v4274[32] }
    si      = { defs={} expr=v4275[32] }
    di      = { defs={} expr=v4276[32] }
    es      = { defs={} expr=v4277[16] }
    cs      = { defs={} expr=v4278[16] }
    ss      = { defs={} expr=v4279[16] }
    ds      = { defs={} expr=v4280[16] }
    fs      = { defs={} expr=v4281[16] }
    gs      = { defs={} expr=v4282[16] }
    cf      = { defs={0x080483e4} expr=0[1] }
    ?1      = { defs={} expr=v4284[1] }
    pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    ?3      = { defs={} expr=v4286[1] }
    af      = { defs={0x080483e4} expr=v4385[1] }
    ?5      = { defs={} expr=v4288[1] }
    zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
    tf      = { defs={} expr=v4291[1] }
    if      = { defs={} expr=v4292[1] }
    df      = { defs={} expr=v4293[1] }
    of      = { defs={0x080483e4} expr=0[1] }
    iopl0   = { defs={} expr=v4295[1] }
    iopl1   = { defs={} expr=v4296[1] }
    nt      = { defs={} expr=v4297[1] }
    ?15     = { defs={} expr=v4298[1] }
    rf      = { defs={} expr=v4299[1] }
    vm      = { defs={} expr=v4300[1] }
    ac      = { defs={} expr=v4301[1] }
    vif     = { defs={} expr=v4302[1] }
    vip     = { defs={} expr=v4303[1] }
    id      = { defs={} expr=v4304[1] }
    ?22     = { defs={} expr=v4305[1] }
    ?23     = { defs={} expr=v4306[1] }
    ?24     = { defs={} expr=v4307[1] }
    ?25     = { defs={} expr=v4308[1] }
    ?26     = { defs={} expr=v4309[1] }
    ?27     = { defs={} expr=v4310[1] }
    ?28     = { defs={} expr=v4311[1] }
    ?29     = { defs={} expr=v4312[1] }
    ?30     = { defs={} expr=v4313[1] }
    ?31     = { defs={} expr=v4314[1] }
    ip      = { defs={0x080483df,0x080483e4} expr=0x080483e6[32] }
memory:
init mem:
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483e6[32] }
memory:
null state
0x80483e6:je     0x08048400<<Insn>>
registers:
    ax      = { 0x0[32] }
    cx      = { v34427[32] }
    dx      = { v34428[32] }
    bx      = { v34429[32] }
    sp      = { v34430[32] }
    bp      = { v34431[32] }
    si      = { v34432[32] }
    di      = { v34433[32] }
    es      = { v34434[16] }
    cs      = { v34435[16] }
    ss      = { v34436[16] }
    ds      = { v34437[16] }
    fs      = { v34438[16] }
    gs      = { v34439[16] }
    cf      = { 0x0[1] }
    ?1      = { v34441[1] }
    pf      = { 0x1[1] }
    ?3      = { v34443[1] }
    af      = { v34505[1] }
    ?5      = { v34445[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v34448[1] }
    if      = { v34449[1] }
    df      = { v34450[1] }
    of      = { 0x0[1] }
    iopl0   = { v34452[1] }
    iopl1   = { v34453[1] }
    nt      = { v34454[1] }
    ?15     = { v34455[1] }
    rf      = { v34456[1] }
    vm      = { v34457[1] }
    ac      = { v34458[1] }
    vif     = { v34459[1] }
    vip     = { v34460[1] }
    id      = { v34461[1] }
    ?22     = { v34462[1] }
    ?23     = { v34463[1] }
    ?24     = { v34464[1] }
    ?25     = { v34465[1] }
    ?26     = { v34466[1] }
    ?27     = { v34467[1] }
    ?28     = { v34468[1] }
    ?29     = { v34469[1] }
    ?30     = { v34470[1] }
    ?31     = { v34471[1] }
    ip      = { 0x8048400[32] }
memory:
registers:
    ax      = { defs={0x080483df} expr=0[32] }
    cx      = { defs={} expr=v4270[32] }
    dx      = { defs={} expr=v4271[32] }
    bx      = { defs={} expr=v4272[32] }
    sp      = { defs={} expr=v4273[32] }
    bp      = { defs={} expr=v4274[32] }
    si      = { defs={} expr=v4275[32] }
    di      = { defs={} expr=v4276[32] }
    es      = { defs={} expr=v4277[16] }
    cs      = { defs={} expr=v4278[16] }
    ss      = { defs={} expr=v4279[16] }
    ds      = { defs={} expr=v4280[16] }
    fs      = { defs={} expr=v4281[16] }
    gs      = { defs={} expr=v4282[16] }
    cf      = { defs={0x080483e4} expr=0[1] }
    ?1      = { defs={} expr=v4284[1] }
    pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    ?3      = { defs={} expr=v4286[1] }
    af      = { defs={0x080483e4} expr=v4385[1] }
    ?5      = { defs={} expr=v4288[1] }
    zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
    tf      = { defs={} expr=v4291[1] }
    if      = { defs={} expr=v4292[1] }
    df      = { defs={} expr=v4293[1] }
    of      = { defs={0x080483e4} expr=0[1] }
    iopl0   = { defs={} expr=v4295[1] }
    iopl1   = { defs={} expr=v4296[1] }
    nt      = { defs={} expr=v4297[1] }
    ?15     = { defs={} expr=v4298[1] }
    rf      = { defs={} expr=v4299[1] }
    vm      = { defs={} expr=v4300[1] }
    ac      = { defs={} expr=v4301[1] }
    vif     = { defs={} expr=v4302[1] }
    vip     = { defs={} expr=v4303[1] }
    id      = { defs={} expr=v4304[1] }
    ?22     = { defs={} expr=v4305[1] }
    ?23     = { defs={} expr=v4306[1] }
    ?24     = { defs={} expr=v4307[1] }
    ?25     = { defs={} expr=v4308[1] }
    ?26     = { defs={} expr=v4309[1] }
    ?27     = { defs={} expr=v4310[1] }
    ?28     = { defs={} expr=v4311[1] }
    ?29     = { defs={} expr=v4312[1] }
    ?30     = { defs={} expr=v4313[1] }
    ?31     = { defs={} expr=v4314[1] }
    ip      = { defs={0x080483df,0x080483e4,0x080483e6} expr=0x08048400[32] }
memory:
init mem:
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048400[32] }
memory:
null state
0x8048400:mov    esp, ebp
registers:
    ax      = { 0x0[32] }
    cx      = { v34427[32] }
    dx      = { v34428[32] }
    bx      = { v34429[32] }
    sp      = { v34431[32] }
    bp      = { v34431[32] }
    si      = { v34432[32] }
    di      = { v34433[32] }
    es      = { v34434[16] }
    cs      = { v34435[16] }
    ss      = { v34436[16] }
    ds      = { v34437[16] }
    fs      = { v34438[16] }
    gs      = { v34439[16] }
    cf      = { 0x0[1] }
    ?1      = { v34441[1] }
    pf      = { 0x1[1] }
    ?3      = { v34443[1] }
    af      = { v34505[1] }
    ?5      = { v34445[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v34448[1] }
    if      = { v34449[1] }
    df      = { v34450[1] }
    of      = { 0x0[1] }
    iopl0   = { v34452[1] }
    iopl1   = { v34453[1] }
    nt      = { v34454[1] }
    ?15     = { v34455[1] }
    rf      = { v34456[1] }
    vm      = { v34457[1] }
    ac      = { v34458[1] }
    vif     = { v34459[1] }
    vip     = { v34460[1] }
    id      = { v34461[1] }
    ?22     = { v34462[1] }
    ?23     = { v34463[1] }
    ?24     = { v34464[1] }
    ?25     = { v34465[1] }
    ?26     = { v34466[1] }
    ?27     = { v34467[1] }
    ?28     = { v34468[1] }
    ?29     = { v34469[1] }
    ?30     = { v34470[1] }
    ?31     = { v34471[1] }
    ip      = { 0x8048402[32] }
memory:
registers:
    ax      = { defs={0x080483df} expr=0[32] }
    cx      = { defs={} expr=v4270[32] }
    dx      = { defs={} expr=v4271[32] }
    bx      = { defs={} expr=v4272[32] }
    sp      = { defs={0x08048400} expr=v4274[32] }
    bp      = { defs={} expr=v4274[32] }
    si      = { defs={} expr=v4275[32] }
    di      = { defs={} expr=v4276[32] }
    es      = { defs={} expr=v4277[16] }
    cs      = { defs={} expr=v4278[16] }
    ss      = { defs={} expr=v4279[16] }
    ds      = { defs={} expr=v4280[16] }
    fs      = { defs={} expr=v4281[16] }
    gs      = { defs={} expr=v4282[16] }
    cf      = { defs={0x080483e4} expr=0[1] }
    ?1      = { defs={} expr=v4284[1] }
    pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    ?3      = { defs={} expr=v4286[1] }
    af      = { defs={0x080483e4} expr=v4385[1] }
    ?5      = { defs={} expr=v4288[1] }
    zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
    tf      = { defs={} expr=v4291[1] }
    if      = { defs={} expr=v4292[1] }
    df      = { defs={} expr=v4293[1] }
    of      = { defs={0x080483e4} expr=0[1] }
    iopl0   = { defs={} expr=v4295[1] }
    iopl1   = { defs={} expr=v4296[1] }
    nt      = { defs={} expr=v4297[1] }
    ?15     = { defs={} expr=v4298[1] }
    rf      = { defs={} expr=v4299[1] }
    vm      = { defs={} expr=v4300[1] }
    ac      = { defs={} expr=v4301[1] }
    vif     = { defs={} expr=v4302[1] }
    vip     = { defs={} expr=v4303[1] }
    id      = { defs={} expr=v4304[1] }
    ?22     = { defs={} expr=v4305[1] }
    ?23     = { defs={} expr=v4306[1] }
    ?24     = { defs={} expr=v4307[1] }
    ?25     = { defs={} expr=v4308[1] }
    ?26     = { defs={} expr=v4309[1] }
    ?27     = { defs={} expr=v4310[1] }
    ?28     = { defs={} expr=v4311[1] }
    ?29     = { defs={} expr=v4312[1] }
    ?30     = { defs={} expr=v4313[1] }
    ?31     = { defs={} expr=v4314[1] }
    ip      = { defs={0x080483df,0x080483e4,0x080483e6,0x08048400} expr=0x08048402[32] }
memory:
init mem:
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048402[32] }
memory:
null state
0x8048402:pop    ebp
registers:
    ax      = { 0x0[32] }
    cx      = { v34427[32] }
    dx      = { v34428[32] }
    bx      = { v34429[32] }
    sp      = { v34431+0x4[32] }
    bp      = { v34529[32] }
    si      = { v34432[32] }
    di      = { v34433[32] }
    es      = { v34434[16] }
    cs      = { v34435[16] }
    ss      = { v34436[16] }
    ds      = { v34437[16] }
    fs      = { v34438[16] }
    gs      = { v34439[16] }
    cf      = { 0x0[1] }
    ?1      = { v34441[1] }
    pf      = { 0x1[1] }
    ?3      = { v34443[1] }
    af      = { v34505[1] }
    ?5      = { v34445[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v34448[1] }
    if      = { v34449[1] }
    df      = { v34450[1] }
    of      = { 0x0[1] }
    iopl0   = { v34452[1] }
    iopl1   = { v34453[1] }
    nt      = { v34454[1] }
    ?15     = { v34455[1] }
    rf      = { v34456[1] }
    vm      = { v34457[1] }
    ac      = { v34458[1] }
    vif     = { v34459[1] }
    vip     = { v34460[1] }
    id      = { v34461[1] }
    ?22     = { v34462[1] }
    ?23     = { v34463[1] }
    ?24     = { v34464[1] }
    ?25     = { v34465[1] }
    ?26     = { v34466[1] }
    ?27     = { v34467[1] }
    ?28     = { v34468[1] }
    ?29     = { v34469[1] }
    ?30     = { v34470[1] }
    ?31     = { v34471[1] }
    ip      = { 0x8048403[32] }
memory:
    address = { v34431[32] }
      value = { v34529[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483df} expr=0[32] }
    cx      = { defs={} expr=v4270[32] }
    dx      = { defs={} expr=v4271[32] }
    bx      = { defs={} expr=v4272[32] }
    sp      = { defs={0x08048400,0x08048402} expr=(add[32] v4274[32] 4[32]) }
    bp      = { defs={0x08048402} expr=v4432[32] }
    si      = { defs={} expr=v4275[32] }
    di      = { defs={} expr=v4276[32] }
    es      = { defs={} expr=v4277[16] }
    cs      = { defs={} expr=v4278[16] }
    ss      = { defs={} expr=v4279[16] }
    ds      = { defs={} expr=v4280[16] }
    fs      = { defs={} expr=v4281[16] }
    gs      = { defs={} expr=v4282[16] }
    cf      = { defs={0x080483e4} expr=0[1] }
    ?1      = { defs={} expr=v4284[1] }
    pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    ?3      = { defs={} expr=v4286[1] }
    af      = { defs={0x080483e4} expr=v4385[1] }
    ?5      = { defs={} expr=v4288[1] }
    zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
    tf      = { defs={} expr=v4291[1] }
    if      = { defs={} expr=v4292[1] }
    df      = { defs={} expr=v4293[1] }
    of      = { defs={0x080483e4} expr=0[1] }
    iopl0   = { defs={} expr=v4295[1] }
    iopl1   = { defs={} expr=v4296[1] }
    nt      = { defs={} expr=v4297[1] }
    ?15     = { defs={} expr=v4298[1] }
    rf      = { defs={} expr=v4299[1] }
    vm      = { defs={} expr=v4300[1] }
    ac      = { defs={} expr=v4301[1] }
    vif     = { defs={} expr=v4302[1] }
    vip     = { defs={} expr=v4303[1] }
    id      = { defs={} expr=v4304[1] }
    ?22     = { defs={} expr=v4305[1] }
    ?23     = { defs={} expr=v4306[1] }
    ?24     = { defs={} expr=v4307[1] }
    ?25     = { defs={} expr=v4308[1] }
    ?26     = { defs={} expr=v4309[1] }
    ?27     = { defs={} expr=v4310[1] }
    ?28     = { defs={} expr=v4311[1] }
    ?29     = { defs={} expr=v4312[1] }
    ?30     = { defs={} expr=v4313[1] }
    ?31     = { defs={} expr=v4314[1] }
    ip      = { defs={0x080483df,0x080483e4,0x080483e6,0x08048400,0x08048402} expr=0x08048403[32] }
memory:
init mem:
    address = { defs={0x08048400} expr=(add[32] v4274[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v4432[32]) }
      flags = { rdonly }
    address = { defs={0x08048400} expr=(add[32] v4274[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v4432[32]) }
      flags = { rdonly }
    address = { defs={0x08048400} expr=(add[32] v4274[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v4432[32]) }
      flags = { rdonly }
    address = { defs={0x08048400} expr=v4274[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v4432[32]) }
      flags = { rdonly }
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048403[32] }
memory:
null state
0x8048403:ret    
registers:
    ax      = { 0x0[32] }
    cx      = { v34427[32] }
    dx      = { v34428[32] }
    bx      = { v34429[32] }
    sp      = { v34431+0x8[32] }
    bp      = { v34529[32] }
    si      = { v34432[32] }
    di      = { v34433[32] }
    es      = { v34434[16] }
    cs      = { v34435[16] }
    ss      = { v34436[16] }
    ds      = { v34437[16] }
    fs      = { v34438[16] }
    gs      = { v34439[16] }
    cf      = { 0x0[1] }
    ?1      = { v34441[1] }
    pf      = { 0x1[1] }
    ?3      = { v34443[1] }
    af      = { v34505[1] }
    ?5      = { v34445[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v34448[1] }
    if      = { v34449[1] }
    df      = { v34450[1] }
    of      = { 0x0[1] }
    iopl0   = { v34452[1] }
    iopl1   = { v34453[1] }
    nt      = { v34454[1] }
    ?15     = { v34455[1] }
    rf      = { v34456[1] }
    vm      = { v34457[1] }
    ac      = { v34458[1] }
    vif     = { v34459[1] }
    vip     = { v34460[1] }
    id      = { v34461[1] }
    ?22     = { v34462[1] }
    ?23     = { v34463[1] }
    ?24     = { v34464[1] }
    ?25     = { v34465[1] }
    ?26     = { v34466[1] }
    ?27     = { v34467[1] }
    ?28     = { v34468[1] }
    ?29     = { v34469[1] }
    ?30     = { v34470[1] }
    ?31     = { v34471[1] }
    ip      = { v34541[32] }
memory:
    address = { v34431[32] }
      value = { v34529[32] }
      flags = { size=4; read-only }
    address = { v34431+0x4[32] }
      value = { v34541[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080483df} expr=0[32] }
    cx      = { defs={} expr=v4270[32] }
    dx      = { defs={} expr=v4271[32] }
    bx      = { defs={} expr=v4272[32] }
    sp      = { defs={0x08048400,0x08048402,0x08048403} expr=(add[32] (add[32] v4274[32] 4[32]) 4[32]) }
    bp      = { defs={0x08048402} expr=v4432[32] }
    si      = { defs={} expr=v4275[32] }
    di      = { defs={} expr=v4276[32] }
    es      = { defs={} expr=v4277[16] }
    cs      = { defs={} expr=v4278[16] }
    ss      = { defs={} expr=v4279[16] }
    ds      = { defs={} expr=v4280[16] }
    fs      = { defs={} expr=v4281[16] }
    gs      = { defs={} expr=v4282[16] }
    cf      = { defs={0x080483e4} expr=0[1] }
    ?1      = { defs={} expr=v4284[1] }
    pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    ?3      = { defs={} expr=v4286[1] }
    af      = { defs={0x080483e4} expr=v4385[1] }
    ?5      = { defs={} expr=v4288[1] }
    zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
    sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
    tf      = { defs={} expr=v4291[1] }
    if      = { defs={} expr=v4292[1] }
    df      = { defs={} expr=v4293[1] }
    of      = { defs={0x080483e4} expr=0[1] }
    iopl0   = { defs={} expr=v4295[1] }
    iopl1   = { defs={} expr=v4296[1] }
    nt      = { defs={} expr=v4297[1] }
    ?15     = { defs={} expr=v4298[1] }
    rf      = { defs={} expr=v4299[1] }
    vm      = { defs={} expr=v4300[1] }
    ac      = { defs={} expr=v4301[1] }
    vif     = { defs={} expr=v4302[1] }
    vip     = { defs={} expr=v4303[1] }
    id      = { defs={} expr=v4304[1] }
    ?22     = { defs={} expr=v4305[1] }
    ?23     = { defs={} expr=v4306[1] }
    ?24     = { defs={} expr=v4307[1] }
    ?25     = { defs={} expr=v4308[1] }
    ?26     = { defs={} expr=v4309[1] }
    ?27     = { defs={} expr=v4310[1] }
    ?28     = { defs={} expr=v4311[1] }
    ?29     = { defs={} expr=v4312[1] }
    ?30     = { defs={} expr=v4313[1] }
    ?31     = { defs={} expr=v4314[1] }
    ip      = { defs={0x08048403} expr=v4462[32] }
memory:
init mem:
    address = { defs={0x08048400,0x08048402} expr=(add[32] (add[32] v4274[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v4462[32]) }
      flags = { rdonly }
    address = { defs={0x08048400,0x08048402} expr=(add[32] (add[32] v4274[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v4462[32]) }
      flags = { rdonly }
    address = { defs={0x08048400,0x08048402} expr=(add[32] (add[32] v4274[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v4462[32]) }
      flags = { rdonly }
    address = { defs={0x08048400,0x08048402} expr=(add[32] v4274[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v4462[32]) }
      flags = { rdonly }
    address = { defs={0x08048400} expr=(add[32] v4274[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v4432[32]) }
      flags = { rdonly }
    address = { defs={0x08048400} expr=(add[32] v4274[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v4432[32]) }
      flags = { rdonly }
    address = { defs={0x08048400} expr=(add[32] v4274[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v4432[32]) }
      flags = { rdonly }
    address = { defs={0x08048400} expr=v4274[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v4432[32]) }
      flags = { rdonly }
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>
registers:
    ax      = { v34592[32] }
    cx      = { v34593[32] }
    dx      = { v34594[32] }
    bx      = { v34595[32] }
    sp      = { v34596[32] }
    bp      = { v34597[32] }
    si      = { v34598[32] }
    di      = { v34599[32] }
    es      = { v34600[16] }
    cs      = { v34601[16] }
    ss      = { v34602[16] }
    ds      = { v34603[16] }
    fs      = { v34604[16] }
    gs      = { v34605[16] }
    cf      = { v34606[1] }
    ?1      = { v34607[1] }
    pf      = { v34608[1] }
    ?3      = { v34609[1] }
    af      = { v34610[1] }
    ?5      = { v34611[1] }
    zf      = { v34612[1] }
    sf      = { v34613[1] }
    tf      = { v34614[1] }
    if      = { v34615[1] }
    df      = { v34616[1] }
    of      = { v34617[1] }
    iopl0   = { v34618[1] }
    iopl1   = { v34619[1] }
    nt      = { v34620[1] }
    ?15     = { v34621[1] }
    rf      = { v34622[1] }
    vm      = { v34623[1] }
    ac      = { v34624[1] }
    vif     = { v34625[1] }
    vip     = { v34626[1] }
    id      = { v34627[1] }
    ?22     = { v34628[1] }
    ?23     = { v34629[1] }
    ?24     = { v34630[1] }
    ?25     = { v34631[1] }
    ?26     = { v34632[1] }
    ?27     = { v34633[1] }
    ?28     = { v34634[1] }
    ?29     = { v34635[1] }
    ?30     = { v34636[1] }
    ?31     = { v34637[1] }
    ip      = { 0x80483ef[32] }
memory:
    address = { v34596[32] }
      value = { 0x80495f8[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4526[32] }
    cx      = { defs={} expr=v4527[32] }
    dx      = { defs={} expr=v4528[32] }
    bx      = { defs={} expr=v4529[32] }
    sp      = { defs={} expr=v4530[32] }
    bp      = { defs={} expr=v4531[32] }
    si      = { defs={} expr=v4532[32] }
    di      = { defs={} expr=v4533[32] }
    es      = { defs={} expr=v4534[16] }
    cs      = { defs={} expr=v4535[16] }
    ss      = { defs={} expr=v4536[16] }
    ds      = { defs={} expr=v4537[16] }
    fs      = { defs={} expr=v4538[16] }
    gs      = { defs={} expr=v4539[16] }
    cf      = { defs={} expr=v4540[1] }
    ?1      = { defs={} expr=v4541[1] }
    pf      = { defs={} expr=v4542[1] }
    ?3      = { defs={} expr=v4543[1] }
    af      = { defs={} expr=v4544[1] }
    ?5      = { defs={} expr=v4545[1] }
    zf      = { defs={} expr=v4546[1] }
    sf      = { defs={} expr=v4547[1] }
    tf      = { defs={} expr=v4548[1] }
    if      = { defs={} expr=v4549[1] }
    df      = { defs={} expr=v4550[1] }
    of      = { defs={} expr=v4551[1] }
    iopl0   = { defs={} expr=v4552[1] }
    iopl1   = { defs={} expr=v4553[1] }
    nt      = { defs={} expr=v4554[1] }
    ?15     = { defs={} expr=v4555[1] }
    rf      = { defs={} expr=v4556[1] }
    vm      = { defs={} expr=v4557[1] }
    ac      = { defs={} expr=v4558[1] }
    vif     = { defs={} expr=v4559[1] }
    vip     = { defs={} expr=v4560[1] }
    id      = { defs={} expr=v4561[1] }
    ?22     = { defs={} expr=v4562[1] }
    ?23     = { defs={} expr=v4563[1] }
    ?24     = { defs={} expr=v4564[1] }
    ?25     = { defs={} expr=v4565[1] }
    ?26     = { defs={} expr=v4566[1] }
    ?27     = { defs={} expr=v4567[1] }
    ?28     = { defs={} expr=v4568[1] }
    ?29     = { defs={} expr=v4569[1] }
    ?30     = { defs={} expr=v4570[1] }
    ?31     = { defs={} expr=v4571[1] }
    ip      = { defs={0x080483e8} expr=0x080483ef[32] }
memory:
    address = { defs={} expr=(add[32] v4530[32] 3[32]) }
      value = { defs={0x080483e8} expr=8[8] }
      flags = { }
    address = { defs={} expr=(add[32] v4530[32] 2[32]) }
      value = { defs={0x080483e8} expr=4[8] }
      flags = { }
    address = { defs={} expr=(add[32] v4530[32] 1[32]) }
      value = { defs={0x080483e8} expr=-107[8] }
      flags = { }
    address = { defs={} expr=v4530[32] }
      value = { defs={0x080483e8} expr=-8[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483ef[32] }
memory:
null state
0x80483ef:call   0x00000000
registers:
    ax      = { v34592[32] }
    cx      = { v34593[32] }
    dx      = { v34594[32] }
    bx      = { v34595[32] }
    sp      = { v34596-0x4[32] }
    bp      = { v34597[32] }
    si      = { v34598[32] }
    di      = { v34599[32] }
    es      = { v34600[16] }
    cs      = { v34601[16] }
    ss      = { v34602[16] }
    ds      = { v34603[16] }
    fs      = { v34604[16] }
    gs      = { v34605[16] }
    cf      = { v34606[1] }
    ?1      = { v34607[1] }
    pf      = { v34608[1] }
    ?3      = { v34609[1] }
    af      = { v34610[1] }
    ?5      = { v34611[1] }
    zf      = { v34612[1] }
    sf      = { v34613[1] }
    tf      = { v34614[1] }
    if      = { v34615[1] }
    df      = { v34616[1] }
    of      = { v34617[1] }
    iopl0   = { v34618[1] }
    iopl1   = { v34619[1] }
    nt      = { v34620[1] }
    ?15     = { v34621[1] }
    rf      = { v34622[1] }
    vm      = { v34623[1] }
    ac      = { v34624[1] }
    vif     = { v34625[1] }
    vip     = { v34626[1] }
    id      = { v34627[1] }
    ?22     = { v34628[1] }
    ?23     = { v34629[1] }
    ?24     = { v34630[1] }
    ?25     = { v34631[1] }
    ?26     = { v34632[1] }
    ?27     = { v34633[1] }
    ?28     = { v34634[1] }
    ?29     = { v34635[1] }
    ?30     = { v34636[1] }
    ?31     = { v34637[1] }
    ip      = { 0x0[32] }
memory:
    address = { v34596[32] }
      value = { 0x80495f8[32] }
      flags = { size=4 }
    address = { v34596-0x4[32] }
      value = { 0x80483f4[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4526[32] }
    cx      = { defs={} expr=v4527[32] }
    dx      = { defs={} expr=v4528[32] }
    bx      = { defs={} expr=v4529[32] }
    sp      = { defs={0x080483ef} expr=(add[32] v4530[32] -4[32]) }
    bp      = { defs={} expr=v4531[32] }
    si      = { defs={} expr=v4532[32] }
    di      = { defs={} expr=v4533[32] }
    es      = { defs={} expr=v4534[16] }
    cs      = { defs={} expr=v4535[16] }
    ss      = { defs={} expr=v4536[16] }
    ds      = { defs={} expr=v4537[16] }
    fs      = { defs={} expr=v4538[16] }
    gs      = { defs={} expr=v4539[16] }
    cf      = { defs={} expr=v4540[1] }
    ?1      = { defs={} expr=v4541[1] }
    pf      = { defs={} expr=v4542[1] }
    ?3      = { defs={} expr=v4543[1] }
    af      = { defs={} expr=v4544[1] }
    ?5      = { defs={} expr=v4545[1] }
    zf      = { defs={} expr=v4546[1] }
    sf      = { defs={} expr=v4547[1] }
    tf      = { defs={} expr=v4548[1] }
    if      = { defs={} expr=v4549[1] }
    df      = { defs={} expr=v4550[1] }
    of      = { defs={} expr=v4551[1] }
    iopl0   = { defs={} expr=v4552[1] }
    iopl1   = { defs={} expr=v4553[1] }
    nt      = { defs={} expr=v4554[1] }
    ?15     = { defs={} expr=v4555[1] }
    rf      = { defs={} expr=v4556[1] }
    vm      = { defs={} expr=v4557[1] }
    ac      = { defs={} expr=v4558[1] }
    vif     = { defs={} expr=v4559[1] }
    vip     = { defs={} expr=v4560[1] }
    id      = { defs={} expr=v4561[1] }
    ?22     = { defs={} expr=v4562[1] }
    ?23     = { defs={} expr=v4563[1] }
    ?24     = { defs={} expr=v4564[1] }
    ?25     = { defs={} expr=v4565[1] }
    ?26     = { defs={} expr=v4566[1] }
    ?27     = { defs={} expr=v4567[1] }
    ?28     = { defs={} expr=v4568[1] }
    ?29     = { defs={} expr=v4569[1] }
    ?30     = { defs={} expr=v4570[1] }
    ?31     = { defs={} expr=v4571[1] }
    ip      = { defs={0x080483ef} expr=0[32] }
memory:
    address = { defs={0x080483ef} expr=(add[32] (add[32] v4530[32] -4[32]) 3[32]) }
      value = { defs={0x080483e8,0x080483ef} expr=8[8] }
      flags = { }
    address = { defs={0x080483ef} expr=(add[32] (add[32] v4530[32] -4[32]) 2[32]) }
      value = { defs={0x080483e8,0x080483ef} expr=4[8] }
      flags = { }
    address = { defs={0x080483ef} expr=(add[32] (add[32] v4530[32] -4[32]) 1[32]) }
      value = { defs={0x080483e8,0x080483ef} expr=-125[8] }
      flags = { }
    address = { defs={0x080483ef} expr=(add[32] v4530[32] -4[32]) }
      value = { defs={0x080483e8,0x080483ef} expr=-12[8] }
      flags = { }
    address = { defs={} expr=(add[32] v4530[32] 3[32]) }
      value = { defs={0x080483e8} expr=8[8] }
      flags = { }
    address = { defs={} expr=(add[32] v4530[32] 2[32]) }
      value = { defs={0x080483e8} expr=4[8] }
      flags = { }
    address = { defs={} expr=(add[32] v4530[32] 1[32]) }
      value = { defs={0x080483e8} expr=-107[8] }
      flags = { }
    address = { defs={} expr=v4530[32] }
      value = { defs={0x080483e8} expr=-8[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
registers:
    ax      = { v34704[32] }
    cx      = { v34705[32] }
    dx      = { v34706[32] }
    bx      = { v34707[32] }
    sp      = { v34708[32] }
    bp      = { v34709[32] }
    si      = { v34710[32] }
    di      = { v34711[32] }
    es      = { v34712[16] }
    cs      = { v34713[16] }
    ss      = { v34714[16] }
    ds      = { v34715[16] }
    fs      = { v34716[16] }
    gs      = { v34717[16] }
    cf      = { v34718[1] }
    ?1      = { v34719[1] }
    pf      = { v34720[1] }
    ?3      = { v34721[1] }
    af      = { v34722[1] }
    ?5      = { v34723[1] }
    zf      = { v34724[1] }
    sf      = { v34725[1] }
    tf      = { v34726[1] }
    if      = { v34727[1] }
    df      = { v34728[1] }
    of      = { v34729[1] }
    iopl0   = { v34730[1] }
    iopl1   = { v34731[1] }
    nt      = { v34732[1] }
    ?15     = { v34733[1] }
    rf      = { v34734[1] }
    vm      = { v34735[1] }
    ac      = { v34736[1] }
    vif     = { v34737[1] }
    vip     = { v34738[1] }
    id      = { v34739[1] }
    ?22     = { v34740[1] }
    ?23     = { v34741[1] }
    ?24     = { v34742[1] }
    ?25     = { v34743[1] }
    ?26     = { v34744[1] }
    ?27     = { v34745[1] }
    ?28     = { v34746[1] }
    ?29     = { v34747[1] }
    ?30     = { v34748[1] }
    ?31     = { v34749[1] }
    ip      = { 0x80483fa[32] }
memory:
registers:
    ax      = { defs={} expr=v4668[32] }
    cx      = { defs={} expr=v4669[32] }
    dx      = { defs={} expr=v4670[32] }
    bx      = { defs={} expr=v4671[32] }
    sp      = { defs={} expr=v4672[32] }
    bp      = { defs={} expr=v4673[32] }
    si      = { defs={0x080483f4} expr=v4674[32] }
    di      = { defs={} expr=v4675[32] }
    es      = { defs={} expr=v4676[16] }
    cs      = { defs={} expr=v4677[16] }
    ss      = { defs={} expr=v4678[16] }
    ds      = { defs={} expr=v4679[16] }
    fs      = { defs={} expr=v4680[16] }
    gs      = { defs={} expr=v4681[16] }
    cf      = { defs={} expr=v4682[1] }
    ?1      = { defs={} expr=v4683[1] }
    pf      = { defs={} expr=v4684[1] }
    ?3      = { defs={} expr=v4685[1] }
    af      = { defs={} expr=v4686[1] }
    ?5      = { defs={} expr=v4687[1] }
    zf      = { defs={} expr=v4688[1] }
    sf      = { defs={} expr=v4689[1] }
    tf      = { defs={} expr=v4690[1] }
    if      = { defs={} expr=v4691[1] }
    df      = { defs={} expr=v4692[1] }
    of      = { defs={} expr=v4693[1] }
    iopl0   = { defs={} expr=v4694[1] }
    iopl1   = { defs={} expr=v4695[1] }
    nt      = { defs={} expr=v4696[1] }
    ?15     = { defs={} expr=v4697[1] }
    rf      = { defs={} expr=v4698[1] }
    vm      = { defs={} expr=v4699[1] }
    ac      = { defs={} expr=v4700[1] }
    vif     = { defs={} expr=v4701[1] }
    vip     = { defs={} expr=v4702[1] }
    id      = { defs={} expr=v4703[1] }
    ?22     = { defs={} expr=v4704[1] }
    ?23     = { defs={} expr=v4705[1] }
    ?24     = { defs={} expr=v4706[1] }
    ?25     = { defs={} expr=v4707[1] }
    ?26     = { defs={} expr=v4708[1] }
    ?27     = { defs={} expr=v4709[1] }
    ?28     = { defs={} expr=v4710[1] }
    ?29     = { defs={} expr=v4711[1] }
    ?30     = { defs={} expr=v4712[1] }
    ?31     = { defs={} expr=v4713[1] }
    ip      = { defs={0x080483f4} expr=0x080483fa[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483fa[32] }
memory:
null state
0x80483fa:lea    edi, [edi + 0x00000000]
registers:
    ax      = { v34704[32] }
    cx      = { v34705[32] }
    dx      = { v34706[32] }
    bx      = { v34707[32] }
    sp      = { v34708[32] }
    bp      = { v34709[32] }
    si      = { v34710[32] }
    di      = { v34711[32] }
    es      = { v34712[16] }
    cs      = { v34713[16] }
    ss      = { v34714[16] }
    ds      = { v34715[16] }
    fs      = { v34716[16] }
    gs      = { v34717[16] }
    cf      = { v34718[1] }
    ?1      = { v34719[1] }
    pf      = { v34720[1] }
    ?3      = { v34721[1] }
    af      = { v34722[1] }
    ?5      = { v34723[1] }
    zf      = { v34724[1] }
    sf      = { v34725[1] }
    tf      = { v34726[1] }
    if      = { v34727[1] }
    df      = { v34728[1] }
    of      = { v34729[1] }
    iopl0   = { v34730[1] }
    iopl1   = { v34731[1] }
    nt      = { v34732[1] }
    ?15     = { v34733[1] }
    rf      = { v34734[1] }
    vm      = { v34735[1] }
    ac      = { v34736[1] }
    vif     = { v34737[1] }
    vip     = { v34738[1] }
    id      = { v34739[1] }
    ?22     = { v34740[1] }
    ?23     = { v34741[1] }
    ?24     = { v34742[1] }
    ?25     = { v34743[1] }
    ?26     = { v34744[1] }
    ?27     = { v34745[1] }
    ?28     = { v34746[1] }
    ?29     = { v34747[1] }
    ?30     = { v34748[1] }
    ?31     = { v34749[1] }
    ip      = { 0x8048400[32] }
memory:
registers:
    ax      = { defs={} expr=v4668[32] }
    cx      = { defs={} expr=v4669[32] }
    dx      = { defs={} expr=v4670[32] }
    bx      = { defs={} expr=v4671[32] }
    sp      = { defs={} expr=v4672[32] }
    bp      = { defs={} expr=v4673[32] }
    si      = { defs={0x080483f4} expr=v4674[32] }
    di      = { defs={0x080483fa} expr=v4675[32] }
    es      = { defs={} expr=v4676[16] }
    cs      = { defs={} expr=v4677[16] }
    ss      = { defs={} expr=v4678[16] }
    ds      = { defs={} expr=v4679[16] }
    fs      = { defs={} expr=v4680[16] }
    gs      = { defs={} expr=v4681[16] }
    cf      = { defs={} expr=v4682[1] }
    ?1      = { defs={} expr=v4683[1] }
    pf      = { defs={} expr=v4684[1] }
    ?3      = { defs={} expr=v4685[1] }
    af      = { defs={} expr=v4686[1] }
    ?5      = { defs={} expr=v4687[1] }
    zf      = { defs={} expr=v4688[1] }
    sf      = { defs={} expr=v4689[1] }
    tf      = { defs={} expr=v4690[1] }
    if      = { defs={} expr=v4691[1] }
    df      = { defs={} expr=v4692[1] }
    of      = { defs={} expr=v4693[1] }
    iopl0   = { defs={} expr=v4694[1] }
    iopl1   = { defs={} expr=v4695[1] }
    nt      = { defs={} expr=v4696[1] }
    ?15     = { defs={} expr=v4697[1] }
    rf      = { defs={} expr=v4698[1] }
    vm      = { defs={} expr=v4699[1] }
    ac      = { defs={} expr=v4700[1] }
    vif     = { defs={} expr=v4701[1] }
    vip     = { defs={} expr=v4702[1] }
    id      = { defs={} expr=v4703[1] }
    ?22     = { defs={} expr=v4704[1] }
    ?23     = { defs={} expr=v4705[1] }
    ?24     = { defs={} expr=v4706[1] }
    ?25     = { defs={} expr=v4707[1] }
    ?26     = { defs={} expr=v4708[1] }
    ?27     = { defs={} expr=v4709[1] }
    ?28     = { defs={} expr=v4710[1] }
    ?29     = { defs={} expr=v4711[1] }
    ?30     = { defs={} expr=v4712[1] }
    ?31     = { defs={} expr=v4713[1] }
    ip      = { defs={0x080483f4,0x080483fa} expr=0x08048400[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048400[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
registers:
    ax      = { v34813[32] }
    cx      = { v34814[32] }
    dx      = { v34815[32] }
    bx      = { v34816[32] }
    sp      = { v34817-0x4[32] }
    bp      = { v34818[32] }
    si      = { v34819[32] }
    di      = { v34820[32] }
    es      = { v34821[16] }
    cs      = { v34822[16] }
    ss      = { v34823[16] }
    ds      = { v34824[16] }
    fs      = { v34825[16] }
    gs      = { v34826[16] }
    cf      = { v34827[1] }
    ?1      = { v34828[1] }
    pf      = { v34829[1] }
    ?3      = { v34830[1] }
    af      = { v34831[1] }
    ?5      = { v34832[1] }
    zf      = { v34833[1] }
    sf      = { v34834[1] }
    tf      = { v34835[1] }
    if      = { v34836[1] }
    df      = { v34837[1] }
    of      = { v34838[1] }
    iopl0   = { v34839[1] }
    iopl1   = { v34840[1] }
    nt      = { v34841[1] }
    ?15     = { v34842[1] }
    rf      = { v34843[1] }
    vm      = { v34844[1] }
    ac      = { v34845[1] }
    vif     = { v34846[1] }
    vip     = { v34847[1] }
    id      = { v34848[1] }
    ?22     = { v34849[1] }
    ?23     = { v34850[1] }
    ?24     = { v34851[1] }
    ?25     = { v34852[1] }
    ?26     = { v34853[1] }
    ?27     = { v34854[1] }
    ?28     = { v34855[1] }
    ?29     = { v34856[1] }
    ?30     = { v34857[1] }
    ?31     = { v34858[1] }
    ip      = { 0x8048411[32] }
memory:
    address = { v34817-0x4[32] }
      value = { v34818[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4792[32] }
    cx      = { defs={} expr=v4793[32] }
    dx      = { defs={} expr=v4794[32] }
    bx      = { defs={} expr=v4795[32] }
    sp      = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
    bp      = { defs={} expr=v4797[32] }
    si      = { defs={} expr=v4798[32] }
    di      = { defs={} expr=v4799[32] }
    es      = { defs={} expr=v4800[16] }
    cs      = { defs={} expr=v4801[16] }
    ss      = { defs={} expr=v4802[16] }
    ds      = { defs={} expr=v4803[16] }
    fs      = { defs={} expr=v4804[16] }
    gs      = { defs={} expr=v4805[16] }
    cf      = { defs={} expr=v4806[1] }
    ?1      = { defs={} expr=v4807[1] }
    pf      = { defs={} expr=v4808[1] }
    ?3      = { defs={} expr=v4809[1] }
    af      = { defs={} expr=v4810[1] }
    ?5      = { defs={} expr=v4811[1] }
    zf      = { defs={} expr=v4812[1] }
    sf      = { defs={} expr=v4813[1] }
    tf      = { defs={} expr=v4814[1] }
    if      = { defs={} expr=v4815[1] }
    df      = { defs={} expr=v4816[1] }
    of      = { defs={} expr=v4817[1] }
    iopl0   = { defs={} expr=v4818[1] }
    iopl1   = { defs={} expr=v4819[1] }
    nt      = { defs={} expr=v4820[1] }
    ?15     = { defs={} expr=v4821[1] }
    rf      = { defs={} expr=v4822[1] }
    vm      = { defs={} expr=v4823[1] }
    ac      = { defs={} expr=v4824[1] }
    vif     = { defs={} expr=v4825[1] }
    vip     = { defs={} expr=v4826[1] }
    id      = { defs={} expr=v4827[1] }
    ?22     = { defs={} expr=v4828[1] }
    ?23     = { defs={} expr=v4829[1] }
    ?24     = { defs={} expr=v4830[1] }
    ?25     = { defs={} expr=v4831[1] }
    ?26     = { defs={} expr=v4832[1] }
    ?27     = { defs={} expr=v4833[1] }
    ?28     = { defs={} expr=v4834[1] }
    ?29     = { defs={} expr=v4835[1] }
    ?30     = { defs={} expr=v4836[1] }
    ?31     = { defs={} expr=v4837[1] }
    ip      = { defs={0x08048410} expr=0x08048411[32] }
memory:
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 3[32]) }
      value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 2[32]) }
      value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 1[32]) }
      value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
      value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v4797[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048411[32] }
memory:
null state
0x8048411:mov    edx, 0x08048480<handler>
registers:
    ax      = { v34813[32] }
    cx      = { v34814[32] }
    dx      = { 0x8048480[32] }
    bx      = { v34816[32] }
    sp      = { v34817-0x4[32] }
    bp      = { v34818[32] }
    si      = { v34819[32] }
    di      = { v34820[32] }
    es      = { v34821[16] }
    cs      = { v34822[16] }
    ss      = { v34823[16] }
    ds      = { v34824[16] }
    fs      = { v34825[16] }
    gs      = { v34826[16] }
    cf      = { v34827[1] }
    ?1      = { v34828[1] }
    pf      = { v34829[1] }
    ?3      = { v34830[1] }
    af      = { v34831[1] }
    ?5      = { v34832[1] }
    zf      = { v34833[1] }
    sf      = { v34834[1] }
    tf      = { v34835[1] }
    if      = { v34836[1] }
    df      = { v34837[1] }
    of      = { v34838[1] }
    iopl0   = { v34839[1] }
    iopl1   = { v34840[1] }
    nt      = { v34841[1] }
    ?15     = { v34842[1] }
    rf      = { v34843[1] }
    vm      = { v34844[1] }
    ac      = { v34845[1] }
    vif     = { v34846[1] }
    vip     = { v34847[1] }
    id      = { v34848[1] }
    ?22     = { v34849[1] }
    ?23     = { v34850[1] }
    ?24     = { v34851[1] }
    ?25     = { v34852[1] }
    ?26     = { v34853[1] }
    ?27     = { v34854[1] }
    ?28     = { v34855[1] }
    ?29     = { v34856[1] }
    ?30     = { v34857[1] }
    ?31     = { v34858[1] }
    ip      = { 0x8048416[32] }
memory:
    address = { v34817-0x4[32] }
      value = { v34818[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4792[32] }
    cx      = { defs={} expr=v4793[32] }
    dx      = { defs={0x08048411} expr=0x08048480[32] }
    bx      = { defs={} expr=v4795[32] }
    sp      = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
    bp      = { defs={} expr=v4797[32] }
    si      = { defs={} expr=v4798[32] }
    di      = { defs={} expr=v4799[32] }
    es      = { defs={} expr=v4800[16] }
    cs      = { defs={} expr=v4801[16] }
    ss      = { defs={} expr=v4802[16] }
    ds      = { defs={} expr=v4803[16] }
    fs      = { defs={} expr=v4804[16] }
    gs      = { defs={} expr=v4805[16] }
    cf      = { defs={} expr=v4806[1] }
    ?1      = { defs={} expr=v4807[1] }
    pf      = { defs={} expr=v4808[1] }
    ?3      = { defs={} expr=v4809[1] }
    af      = { defs={} expr=v4810[1] }
    ?5      = { defs={} expr=v4811[1] }
    zf      = { defs={} expr=v4812[1] }
    sf      = { defs={} expr=v4813[1] }
    tf      = { defs={} expr=v4814[1] }
    if      = { defs={} expr=v4815[1] }
    df      = { defs={} expr=v4816[1] }
    of      = { defs={} expr=v4817[1] }
    iopl0   = { defs={} expr=v4818[1] }
    iopl1   = { defs={} expr=v4819[1] }
    nt      = { defs={} expr=v4820[1] }
    ?15     = { defs={} expr=v4821[1] }
    rf      = { defs={} expr=v4822[1] }
    vm      = { defs={} expr=v4823[1] }
    ac      = { defs={} expr=v4824[1] }
    vif     = { defs={} expr=v4825[1] }
    vip     = { defs={} expr=v4826[1] }
    id      = { defs={} expr=v4827[1] }
    ?22     = { defs={} expr=v4828[1] }
    ?23     = { defs={} expr=v4829[1] }
    ?24     = { defs={} expr=v4830[1] }
    ?25     = { defs={} expr=v4831[1] }
    ?26     = { defs={} expr=v4832[1] }
    ?27     = { defs={} expr=v4833[1] }
    ?28     = { defs={} expr=v4834[1] }
    ?29     = { defs={} expr=v4835[1] }
    ?30     = { defs={} expr=v4836[1] }
    ?31     = { defs={} expr=v4837[1] }
    ip      = { defs={0x08048410,0x08048411} expr=0x08048416[32] }
memory:
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 3[32]) }
      value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 2[32]) }
      value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 1[32]) }
      value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
      value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v4797[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048416[32] }
memory:
null state
0x8048416:mov    ebp, esp
registers:
    ax      = { v34813[32] }
    cx      = { v34814[32] }
    dx      = { 0x8048480[32] }
    bx      = { v34816[32] }
    sp      = { v34817-0x4[32] }
    bp      = { v34817-0x4[32] }
    si      = { v34819[32] }
    di      = { v34820[32] }
    es      = { v34821[16] }
    cs      = { v34822[16] }
    ss      = { v34823[16] }
    ds      = { v34824[16] }
    fs      = { v34825[16] }
    gs      = { v34826[16] }
    cf      = { v34827[1] }
    ?1      = { v34828[1] }
    pf      = { v34829[1] }
    ?3      = { v34830[1] }
    af      = { v34831[1] }
    ?5      = { v34832[1] }
    zf      = { v34833[1] }
    sf      = { v34834[1] }
    tf      = { v34835[1] }
    if      = { v34836[1] }
    df      = { v34837[1] }
    of      = { v34838[1] }
    iopl0   = { v34839[1] }
    iopl1   = { v34840[1] }
    nt      = { v34841[1] }
    ?15     = { v34842[1] }
    rf      = { v34843[1] }
    vm      = { v34844[1] }
    ac      = { v34845[1] }
    vif     = { v34846[1] }
    vip     = { v34847[1] }
    id      = { v34848[1] }
    ?22     = { v34849[1] }
    ?23     = { v34850[1] }
    ?24     = { v34851[1] }
    ?25     = { v34852[1] }
    ?26     = { v34853[1] }
    ?27     = { v34854[1] }
    ?28     = { v34855[1] }
    ?29     = { v34856[1] }
    ?30     = { v34857[1] }
    ?31     = { v34858[1] }
    ip      = { 0x8048418[32] }
memory:
    address = { v34817-0x4[32] }
      value = { v34818[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4792[32] }
    cx      = { defs={} expr=v4793[32] }
    dx      = { defs={0x08048411} expr=0x08048480[32] }
    bx      = { defs={} expr=v4795[32] }
    sp      = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
    bp      = { defs={0x08048410,0x08048416} expr=(add[32] v4796[32] -4[32]) }
    si      = { defs={} expr=v4798[32] }
    di      = { defs={} expr=v4799[32] }
    es      = { defs={} expr=v4800[16] }
    cs      = { defs={} expr=v4801[16] }
    ss      = { defs={} expr=v4802[16] }
    ds      = { defs={} expr=v4803[16] }
    fs      = { defs={} expr=v4804[16] }
    gs      = { defs={} expr=v4805[16] }
    cf      = { defs={} expr=v4806[1] }
    ?1      = { defs={} expr=v4807[1] }
    pf      = { defs={} expr=v4808[1] }
    ?3      = { defs={} expr=v4809[1] }
    af      = { defs={} expr=v4810[1] }
    ?5      = { defs={} expr=v4811[1] }
    zf      = { defs={} expr=v4812[1] }
    sf      = { defs={} expr=v4813[1] }
    tf      = { defs={} expr=v4814[1] }
    if      = { defs={} expr=v4815[1] }
    df      = { defs={} expr=v4816[1] }
    of      = { defs={} expr=v4817[1] }
    iopl0   = { defs={} expr=v4818[1] }
    iopl1   = { defs={} expr=v4819[1] }
    nt      = { defs={} expr=v4820[1] }
    ?15     = { defs={} expr=v4821[1] }
    rf      = { defs={} expr=v4822[1] }
    vm      = { defs={} expr=v4823[1] }
    ac      = { defs={} expr=v4824[1] }
    vif     = { defs={} expr=v4825[1] }
    vip     = { defs={} expr=v4826[1] }
    id      = { defs={} expr=v4827[1] }
    ?22     = { defs={} expr=v4828[1] }
    ?23     = { defs={} expr=v4829[1] }
    ?24     = { defs={} expr=v4830[1] }
    ?25     = { defs={} expr=v4831[1] }
    ?26     = { defs={} expr=v4832[1] }
    ?27     = { defs={} expr=v4833[1] }
    ?28     = { defs={} expr=v4834[1] }
    ?29     = { defs={} expr=v4835[1] }
    ?30     = { defs={} expr=v4836[1] }
    ?31     = { defs={} expr=v4837[1] }
    ip      = { defs={0x08048410,0x08048411,0x08048416} expr=0x08048418[32] }
memory:
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 3[32]) }
      value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 2[32]) }
      value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 1[32]) }
      value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
      value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v4797[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048418[32] }
memory:
null state
0x8048418:sub    esp, 0x08
registers:
    ax      = { v34813[32] }
    cx      = { v34814[32] }
    dx      = { 0x8048480[32] }
    bx      = { v34816[32] }
    sp      = { v34817-0xc[32] }
    bp      = { v34817-0x4[32] }
    si      = { v34819[32] }
    di      = { v34820[32] }
    es      = { v34821[16] }
    cs      = { v34822[16] }
    ss      = { v34823[16] }
    ds      = { v34824[16] }
    fs      = { v34825[16] }
    gs      = { v34826[16] }
    cf      = { -v34929+0x1[1] }
    ?1      = { v34828[1] }
    pf      = { -v34919+0x1[1] }
    ?3      = { v34830[1] }
    af      = { -v34926+0x1[1] }
    ?5      = { v34832[1] }
    zf      = { v34924[1] }
    sf      = { v34922[1] }
    tf      = { v34835[1] }
    if      = { v34836[1] }
    df      = { v34837[1] }
    of      = { v34936[1] }
    iopl0   = { v34839[1] }
    iopl1   = { v34840[1] }
    nt      = { v34841[1] }
    ?15     = { v34842[1] }
    rf      = { v34843[1] }
    vm      = { v34844[1] }
    ac      = { v34845[1] }
    vif     = { v34846[1] }
    vip     = { v34847[1] }
    id      = { v34848[1] }
    ?22     = { v34849[1] }
    ?23     = { v34850[1] }
    ?24     = { v34851[1] }
    ?25     = { v34852[1] }
    ?26     = { v34853[1] }
    ?27     = { v34854[1] }
    ?28     = { v34855[1] }
    ?29     = { v34856[1] }
    ?30     = { v34857[1] }
    ?31     = { v34858[1] }
    ip      = { 0x804841b[32] }
memory:
    address = { v34817-0x4[32] }
      value = { v34818[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4792[32] }
    cx      = { defs={} expr=v4793[32] }
    dx      = { defs={0x08048411} expr=0x08048480[32] }
    bx      = { defs={} expr=v4795[32] }
    sp      = { defs={0x08048410,0x08048418} expr=(add[32] (add[32] v4796[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048410,0x08048416} expr=(add[32] v4796[32] -4[32]) }
    si      = { defs={} expr=v4798[32] }
    di      = { defs={} expr=v4799[32] }
    es      = { defs={} expr=v4800[16] }
    cs      = { defs={} expr=v4801[16] }
    ss      = { defs={} expr=v4802[16] }
    ds      = { defs={} expr=v4803[16] }
    fs      = { defs={} expr=v4804[16] }
    gs      = { defs={} expr=v4805[16] }
    cf      = { defs={0x08048410,0x08048418} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4796[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4796[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v4807[1] }
    pf      = { defs={0x08048410,0x08048418} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4796[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4796[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v4809[1] }
    af      = { defs={0x08048410,0x08048418} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4796[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4796[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v4811[1] }
    zf      = { defs={0x08048410,0x08048418} expr=(zerop[1] (add[32] (add[32] v4796[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048410,0x08048418} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v4796[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v4814[1] }
    if      = { defs={} expr=v4815[1] }
    df      = { defs={} expr=v4816[1] }
    of      = { defs={0x08048410,0x08048418} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4796[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4796[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v4796[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v4796[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v4818[1] }
    iopl1   = { defs={} expr=v4819[1] }
    nt      = { defs={} expr=v4820[1] }
    ?15     = { defs={} expr=v4821[1] }
    rf      = { defs={} expr=v4822[1] }
    vm      = { defs={} expr=v4823[1] }
    ac      = { defs={} expr=v4824[1] }
    vif     = { defs={} expr=v4825[1] }
    vip     = { defs={} expr=v4826[1] }
    id      = { defs={} expr=v4827[1] }
    ?22     = { defs={} expr=v4828[1] }
    ?23     = { defs={} expr=v4829[1] }
    ?24     = { defs={} expr=v4830[1] }
    ?25     = { defs={} expr=v4831[1] }
    ?26     = { defs={} expr=v4832[1] }
    ?27     = { defs={} expr=v4833[1] }
    ?28     = { defs={} expr=v4834[1] }
    ?29     = { defs={} expr=v4835[1] }
    ?30     = { defs={} expr=v4836[1] }
    ?31     = { defs={} expr=v4837[1] }
    ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418} expr=0x0804841b[32] }
memory:
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 3[32]) }
      value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 2[32]) }
      value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 1[32]) }
      value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
      value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v4797[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804841b[32] }
memory:
null state
0x804841b:and    esp, 0xf0<-0x10>
registers:
    ax      = { v34813[32] }
    cx      = { v34814[32] }
    dx      = { 0x8048480[32] }
    bx      = { v34816[32] }
    sp      = { v34944[32] }
    bp      = { v34817-0x4[32] }
    si      = { v34819[32] }
    di      = { v34820[32] }
    es      = { v34821[16] }
    cs      = { v34822[16] }
    ss      = { v34823[16] }
    ds      = { v34824[16] }
    fs      = { v34825[16] }
    gs      = { v34826[16] }
    cf      = { 0x0[1] }
    ?1      = { v34828[1] }
    pf      = { -v34974+0x1[1] }
    ?3      = { v34830[1] }
    af      = { v34982[1] }
    ?5      = { v34832[1] }
    zf      = { v34979[1] }
    sf      = { v34977[1] }
    tf      = { v34835[1] }
    if      = { v34836[1] }
    df      = { v34837[1] }
    of      = { 0x0[1] }
    iopl0   = { v34839[1] }
    iopl1   = { v34840[1] }
    nt      = { v34841[1] }
    ?15     = { v34842[1] }
    rf      = { v34843[1] }
    vm      = { v34844[1] }
    ac      = { v34845[1] }
    vif     = { v34846[1] }
    vip     = { v34847[1] }
    id      = { v34848[1] }
    ?22     = { v34849[1] }
    ?23     = { v34850[1] }
    ?24     = { v34851[1] }
    ?25     = { v34852[1] }
    ?26     = { v34853[1] }
    ?27     = { v34854[1] }
    ?28     = { v34855[1] }
    ?29     = { v34856[1] }
    ?30     = { v34857[1] }
    ?31     = { v34858[1] }
    ip      = { 0x804841e[32] }
memory:
    address = { v34817-0x4[32] }
      value = { v34818[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4792[32] }
    cx      = { defs={} expr=v4793[32] }
    dx      = { defs={0x08048411} expr=0x08048480[32] }
    bx      = { defs={} expr=v4795[32] }
    sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) }
    bp      = { defs={0x08048410,0x08048416} expr=(add[32] v4796[32] -4[32]) }
    si      = { defs={} expr=v4798[32] }
    di      = { defs={} expr=v4799[32] }
    es      = { defs={} expr=v4800[16] }
    cs      = { defs={} expr=v4801[16] }
    ss      = { defs={} expr=v4802[16] }
    ds      = { defs={} expr=v4803[16] }
    fs      = { defs={} expr=v4804[16] }
    gs      = { defs={} expr=v4805[16] }
    cf      = { defs={0x0804841b} expr=0[1] }
    ?1      = { defs={} expr=v4807[1] }
    pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v4809[1] }
    af      = { defs={0x0804841b} expr=v5034[1] }
    ?5      = { defs={} expr=v4811[1] }
    zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])) }
    sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])) }
    tf      = { defs={} expr=v4814[1] }
    if      = { defs={} expr=v4815[1] }
    df      = { defs={} expr=v4816[1] }
    of      = { defs={0x0804841b} expr=0[1] }
    iopl0   = { defs={} expr=v4818[1] }
    iopl1   = { defs={} expr=v4819[1] }
    nt      = { defs={} expr=v4820[1] }
    ?15     = { defs={} expr=v4821[1] }
    rf      = { defs={} expr=v4822[1] }
    vm      = { defs={} expr=v4823[1] }
    ac      = { defs={} expr=v4824[1] }
    vif     = { defs={} expr=v4825[1] }
    vip     = { defs={} expr=v4826[1] }
    id      = { defs={} expr=v4827[1] }
    ?22     = { defs={} expr=v4828[1] }
    ?23     = { defs={} expr=v4829[1] }
    ?24     = { defs={} expr=v4830[1] }
    ?25     = { defs={} expr=v4831[1] }
    ?26     = { defs={} expr=v4832[1] }
    ?27     = { defs={} expr=v4833[1] }
    ?28     = { defs={} expr=v4834[1] }
    ?29     = { defs={} expr=v4835[1] }
    ?30     = { defs={} expr=v4836[1] }
    ?31     = { defs={} expr=v4837[1] }
    ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b} expr=0x0804841e[32] }
memory:
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 3[32]) }
      value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 2[32]) }
      value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 1[32]) }
      value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
      value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v4797[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { 0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804841e[32] }
memory:
null state
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
registers:
    ax      = { v34813[32] }
    cx      = { v34814[32] }
    dx      = { 0x8048480[32] }
    bx      = { v34816[32] }
    sp      = { v34944[32] }
    bp      = { v34817-0x4[32] }
    si      = { v34819[32] }
    di      = { v34820[32] }
    es      = { v34821[16] }
    cs      = { v34822[16] }
    ss      = { v34823[16] }
    ds      = { v34824[16] }
    fs      = { v34825[16] }
    gs      = { v34826[16] }
    cf      = { 0x0[1] }
    ?1      = { v34828[1] }
    pf      = { -v34974+0x1[1] }
    ?3      = { v34830[1] }
    af      = { v34982[1] }
    ?5      = { v34832[1] }
    zf      = { v34979[1] }
    sf      = { v34977[1] }
    tf      = { v34835[1] }
    if      = { v34836[1] }
    df      = { v34837[1] }
    of      = { 0x0[1] }
    iopl0   = { v34839[1] }
    iopl1   = { v34840[1] }
    nt      = { v34841[1] }
    ?15     = { v34842[1] }
    rf      = { v34843[1] }
    vm      = { v34844[1] }
    ac      = { v34845[1] }
    vif     = { v34846[1] }
    vip     = { v34847[1] }
    id      = { v34848[1] }
    ?22     = { v34849[1] }
    ?23     = { v34850[1] }
    ?24     = { v34851[1] }
    ?25     = { v34852[1] }
    ?26     = { v34853[1] }
    ?27     = { v34854[1] }
    ?28     = { v34855[1] }
    ?29     = { v34856[1] }
    ?30     = { v34857[1] }
    ?31     = { v34858[1] }
    ip      = { 0x8048422[32] }
memory:
    address = { v34817-0x4[32] }
      value = { v34818[32] }
      flags = { size=4; clobbered }
    address = { v34944+0x4[32] }
      value = { 0x8048480[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4792[32] }
    cx      = { defs={} expr=v4793[32] }
    dx      = { defs={0x08048411} expr=0x08048480[32] }
    bx      = { defs={} expr=v4795[32] }
    sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) }
    bp      = { defs={0x08048410,0x08048416} expr=(add[32] v4796[32] -4[32]) }
    si      = { defs={} expr=v4798[32] }
    di      = { defs={} expr=v4799[32] }
    es      = { defs={} expr=v4800[16] }
    cs      = { defs={} expr=v4801[16] }
    ss      = { defs={} expr=v4802[16] }
    ds      = { defs={} expr=v4803[16] }
    fs      = { defs={} expr=v4804[16] }
    gs      = { defs={} expr=v4805[16] }
    cf      = { defs={0x0804841b} expr=0[1] }
    ?1      = { defs={} expr=v4807[1] }
    pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v4809[1] }
    af      = { defs={0x0804841b} expr=v5034[1] }
    ?5      = { defs={} expr=v4811[1] }
    zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])) }
    sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])) }
    tf      = { defs={} expr=v4814[1] }
    if      = { defs={} expr=v4815[1] }
    df      = { defs={} expr=v4816[1] }
    of      = { defs={0x0804841b} expr=0[1] }
    iopl0   = { defs={} expr=v4818[1] }
    iopl1   = { defs={} expr=v4819[1] }
    nt      = { defs={} expr=v4820[1] }
    ?15     = { defs={} expr=v4821[1] }
    rf      = { defs={} expr=v4822[1] }
    vm      = { defs={} expr=v4823[1] }
    ac      = { defs={} expr=v4824[1] }
    vif     = { defs={} expr=v4825[1] }
    vip     = { defs={} expr=v4826[1] }
    id      = { defs={} expr=v4827[1] }
    ?22     = { defs={} expr=v4828[1] }
    ?23     = { defs={} expr=v4829[1] }
    ?24     = { defs={} expr=v4830[1] }
    ?25     = { defs={} expr=v4831[1] }
    ?26     = { defs={} expr=v4832[1] }
    ?27     = { defs={} expr=v4833[1] }
    ?28     = { defs={} expr=v4834[1] }
    ?29     = { defs={} expr=v4835[1] }
    ?30     = { defs={} expr=v4836[1] }
    ?31     = { defs={} expr=v4837[1] }
    ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e} expr=0x08048422[32] }
memory:
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32]) }
      value = { defs={0x08048411,0x0804841e} expr=8[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32]) }
      value = { defs={0x08048411,0x0804841e} expr=4[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32]) }
      value = { defs={0x08048411,0x0804841e} expr=-124[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) }
      value = { defs={0x08048411,0x0804841e} expr=-128[8] }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 3[32]) }
      value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 2[32]) }
      value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 1[32]) }
      value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
      value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v4797[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { 0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048422[32] }
memory:
null state
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
registers:
    ax      = { v34813[32] }
    cx      = { v34814[32] }
    dx      = { 0x8048480[32] }
    bx      = { v34816[32] }
    sp      = { v34944[32] }
    bp      = { v34817-0x4[32] }
    si      = { v34819[32] }
    di      = { v34820[32] }
    es      = { v34821[16] }
    cs      = { v34822[16] }
    ss      = { v34823[16] }
    ds      = { v34824[16] }
    fs      = { v34825[16] }
    gs      = { v34826[16] }
    cf      = { 0x0[1] }
    ?1      = { v34828[1] }
    pf      = { -v34974+0x1[1] }
    ?3      = { v34830[1] }
    af      = { v34982[1] }
    ?5      = { v34832[1] }
    zf      = { v34979[1] }
    sf      = { v34977[1] }
    tf      = { v34835[1] }
    if      = { v34836[1] }
    df      = { v34837[1] }
    of      = { 0x0[1] }
    iopl0   = { v34839[1] }
    iopl1   = { v34840[1] }
    nt      = { v34841[1] }
    ?15     = { v34842[1] }
    rf      = { v34843[1] }
    vm      = { v34844[1] }
    ac      = { v34845[1] }
    vif     = { v34846[1] }
    vip     = { v34847[1] }
    id      = { v34848[1] }
    ?22     = { v34849[1] }
    ?23     = { v34850[1] }
    ?24     = { v34851[1] }
    ?25     = { v34852[1] }
    ?26     = { v34853[1] }
    ?27     = { v34854[1] }
    ?28     = { v34855[1] }
    ?29     = { v34856[1] }
    ?30     = { v34857[1] }
    ?31     = { v34858[1] }
    ip      = { 0x8048429[32] }
memory:
    address = { v34817-0x4[32] }
      value = { v34818[32] }
      flags = { size=4; clobbered }
    address = { v34944+0x4[32] }
      value = { 0x8048480[32] }
      flags = { size=4 }
    address = { v34944[32] }
      value = { 0xa[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4792[32] }
    cx      = { defs={} expr=v4793[32] }
    dx      = { defs={0x08048411} expr=0x08048480[32] }
    bx      = { defs={} expr=v4795[32] }
    sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) }
    bp      = { defs={0x08048410,0x08048416} expr=(add[32] v4796[32] -4[32]) }
    si      = { defs={} expr=v4798[32] }
    di      = { defs={} expr=v4799[32] }
    es      = { defs={} expr=v4800[16] }
    cs      = { defs={} expr=v4801[16] }
    ss      = { defs={} expr=v4802[16] }
    ds      = { defs={} expr=v4803[16] }
    fs      = { defs={} expr=v4804[16] }
    gs      = { defs={} expr=v4805[16] }
    cf      = { defs={0x0804841b} expr=0[1] }
    ?1      = { defs={} expr=v4807[1] }
    pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v4809[1] }
    af      = { defs={0x0804841b} expr=v5034[1] }
    ?5      = { defs={} expr=v4811[1] }
    zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])) }
    sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])) }
    tf      = { defs={} expr=v4814[1] }
    if      = { defs={} expr=v4815[1] }
    df      = { defs={} expr=v4816[1] }
    of      = { defs={0x0804841b} expr=0[1] }
    iopl0   = { defs={} expr=v4818[1] }
    iopl1   = { defs={} expr=v4819[1] }
    nt      = { defs={} expr=v4820[1] }
    ?15     = { defs={} expr=v4821[1] }
    rf      = { defs={} expr=v4822[1] }
    vm      = { defs={} expr=v4823[1] }
    ac      = { defs={} expr=v4824[1] }
    vif     = { defs={} expr=v4825[1] }
    vip     = { defs={} expr=v4826[1] }
    id      = { defs={} expr=v4827[1] }
    ?22     = { defs={} expr=v4828[1] }
    ?23     = { defs={} expr=v4829[1] }
    ?24     = { defs={} expr=v4830[1] }
    ?25     = { defs={} expr=v4831[1] }
    ?26     = { defs={} expr=v4832[1] }
    ?27     = { defs={} expr=v4833[1] }
    ?28     = { defs={} expr=v4834[1] }
    ?29     = { defs={} expr=v4835[1] }
    ?30     = { defs={} expr=v4836[1] }
    ?31     = { defs={} expr=v4837[1] }
    ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422} expr=0x08048429[32] }
memory:
    address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 3[32]) }
      value = { defs={0x08048422} expr=0[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 2[32]) }
      value = { defs={0x08048422} expr=0[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 1[32]) }
      value = { defs={0x08048422} expr=0[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) }
      value = { defs={0x08048422} expr=10[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32]) }
      value = { defs={0x08048411,0x0804841e} expr=8[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32]) }
      value = { defs={0x08048411,0x0804841e} expr=4[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32]) }
      value = { defs={0x08048411,0x0804841e} expr=-124[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) }
      value = { defs={0x08048411,0x0804841e} expr=-128[8] }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 3[32]) }
      value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 2[32]) }
      value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 1[32]) }
      value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
      value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v4797[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { 0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048429[32] }
memory:
null state
0x8048429:call   0x080482f0<signal@plt>
registers:
    ax      = { v34813[32] }
    cx      = { v34814[32] }
    dx      = { 0x8048480[32] }
    bx      = { v34816[32] }
    sp      = { v34944-0x4[32] }
    bp      = { v34817-0x4[32] }
    si      = { v34819[32] }
    di      = { v34820[32] }
    es      = { v34821[16] }
    cs      = { v34822[16] }
    ss      = { v34823[16] }
    ds      = { v34824[16] }
    fs      = { v34825[16] }
    gs      = { v34826[16] }
    cf      = { 0x0[1] }
    ?1      = { v34828[1] }
    pf      = { -v34974+0x1[1] }
    ?3      = { v34830[1] }
    af      = { v34982[1] }
    ?5      = { v34832[1] }
    zf      = { v34979[1] }
    sf      = { v34977[1] }
    tf      = { v34835[1] }
    if      = { v34836[1] }
    df      = { v34837[1] }
    of      = { 0x0[1] }
    iopl0   = { v34839[1] }
    iopl1   = { v34840[1] }
    nt      = { v34841[1] }
    ?15     = { v34842[1] }
    rf      = { v34843[1] }
    vm      = { v34844[1] }
    ac      = { v34845[1] }
    vif     = { v34846[1] }
    vip     = { v34847[1] }
    id      = { v34848[1] }
    ?22     = { v34849[1] }
    ?23     = { v34850[1] }
    ?24     = { v34851[1] }
    ?25     = { v34852[1] }
    ?26     = { v34853[1] }
    ?27     = { v34854[1] }
    ?28     = { v34855[1] }
    ?29     = { v34856[1] }
    ?30     = { v34857[1] }
    ?31     = { v34858[1] }
    ip      = { 0x80482f0[32] }
memory:
    address = { v34817-0x4[32] }
      value = { v34818[32] }
      flags = { size=4; clobbered }
    address = { v34944+0x4[32] }
      value = { 0x8048480[32] }
      flags = { size=4 }
    address = { v34944[32] }
      value = { 0xa[32] }
      flags = { size=4 }
    address = { v34944-0x4[32] }
      value = { 0x804842e[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v4792[32] }
    cx      = { defs={} expr=v4793[32] }
    dx      = { defs={0x08048411} expr=0x08048480[32] }
    bx      = { defs={} expr=v4795[32] }
    sp      = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) -4[32]) }
    bp      = { defs={0x08048410,0x08048416} expr=(add[32] v4796[32] -4[32]) }
    si      = { defs={} expr=v4798[32] }
    di      = { defs={} expr=v4799[32] }
    es      = { defs={} expr=v4800[16] }
    cs      = { defs={} expr=v4801[16] }
    ss      = { defs={} expr=v4802[16] }
    ds      = { defs={} expr=v4803[16] }
    fs      = { defs={} expr=v4804[16] }
    gs      = { defs={} expr=v4805[16] }
    cf      = { defs={0x0804841b} expr=0[1] }
    ?1      = { defs={} expr=v4807[1] }
    pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]))))))) }
    ?3      = { defs={} expr=v4809[1] }
    af      = { defs={0x0804841b} expr=v5034[1] }
    ?5      = { defs={} expr=v4811[1] }
    zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])) }
    sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32])) }
    tf      = { defs={} expr=v4814[1] }
    if      = { defs={} expr=v4815[1] }
    df      = { defs={} expr=v4816[1] }
    of      = { defs={0x0804841b} expr=0[1] }
    iopl0   = { defs={} expr=v4818[1] }
    iopl1   = { defs={} expr=v4819[1] }
    nt      = { defs={} expr=v4820[1] }
    ?15     = { defs={} expr=v4821[1] }
    rf      = { defs={} expr=v4822[1] }
    vm      = { defs={} expr=v4823[1] }
    ac      = { defs={} expr=v4824[1] }
    vif     = { defs={} expr=v4825[1] }
    vip     = { defs={} expr=v4826[1] }
    id      = { defs={} expr=v4827[1] }
    ?22     = { defs={} expr=v4828[1] }
    ?23     = { defs={} expr=v4829[1] }
    ?24     = { defs={} expr=v4830[1] }
    ?25     = { defs={} expr=v4831[1] }
    ?26     = { defs={} expr=v4832[1] }
    ?27     = { defs={} expr=v4833[1] }
    ?28     = { defs={} expr=v4834[1] }
    ?29     = { defs={} expr=v4835[1] }
    ?30     = { defs={} expr=v4836[1] }
    ?31     = { defs={} expr=v4837[1] }
    ip      = { defs={0x08048429} expr=0x080482f0[32] }
memory:
    address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) -4[32]) 3[32]) }
      value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=8[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) -4[32]) 2[32]) }
      value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=4[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) -4[32]) 1[32]) }
      value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=-124[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) -4[32]) }
      value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=46[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 3[32]) }
      value = { defs={0x08048422} expr=0[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 2[32]) }
      value = { defs={0x08048422} expr=0[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 1[32]) }
      value = { defs={0x08048422} expr=0[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) }
      value = { defs={0x08048422} expr=10[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32]) }
      value = { defs={0x08048411,0x0804841e} expr=8[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32]) }
      value = { defs={0x08048411,0x0804841e} expr=4[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32]) }
      value = { defs={0x08048411,0x0804841e} expr=-124[8] }
      flags = { }
    address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v4796[32] -4[32]) -8[32]) -16[32]) 4[32]) }
      value = { defs={0x08048411,0x0804841e} expr=-128[8] }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 3[32]) }
      value = { defs={0x08048410} expr=(extract[8] 24[32] 32[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 2[32]) }
      value = { defs={0x08048410} expr=(extract[8] 16[32] 24[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] (add[32] v4796[32] -4[32]) 1[32]) }
      value = { defs={0x08048410} expr=(extract[8] 8[32] 16[32] v4797[32]) }
      flags = { }
    address = { defs={0x08048410} expr=(add[32] v4796[32] -4[32]) }
      value = { defs={0x08048410} expr=(extract[8] 0[32] 8[32] v4797[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffffc[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482f0[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
registers:
    ax      = { v35059[32] }
    cx      = { v35060[32] }
    dx      = { v35061[32] }
    bx      = { v35062[32] }
    sp      = { v35064[32] }
    bp      = { v35064[32] }
    si      = { v35065[32] }
    di      = { v35066[32] }
    es      = { v35067[16] }
    cs      = { v35068[16] }
    ss      = { v35069[16] }
    ds      = { v35070[16] }
    fs      = { v35071[16] }
    gs      = { v35072[16] }
    cf      = { v35073[1] }
    ?1      = { v35074[1] }
    pf      = { v35075[1] }
    ?3      = { v35076[1] }
    af      = { v35077[1] }
    ?5      = { v35078[1] }
    zf      = { v35079[1] }
    sf      = { v35080[1] }
    tf      = { v35081[1] }
    if      = { v35082[1] }
    df      = { v35083[1] }
    of      = { v35084[1] }
    iopl0   = { v35085[1] }
    iopl1   = { v35086[1] }
    nt      = { v35087[1] }
    ?15     = { v35088[1] }
    rf      = { v35089[1] }
    vm      = { v35090[1] }
    ac      = { v35091[1] }
    vif     = { v35092[1] }
    vip     = { v35093[1] }
    id      = { v35094[1] }
    ?22     = { v35095[1] }
    ?23     = { v35096[1] }
    ?24     = { v35097[1] }
    ?25     = { v35098[1] }
    ?26     = { v35099[1] }
    ?27     = { v35100[1] }
    ?28     = { v35101[1] }
    ?29     = { v35102[1] }
    ?30     = { v35103[1] }
    ?31     = { v35104[1] }
    ip      = { 0x8048430[32] }
memory:
registers:
    ax      = { defs={} expr=v5158[32] }
    cx      = { defs={} expr=v5159[32] }
    dx      = { defs={} expr=v5160[32] }
    bx      = { defs={} expr=v5161[32] }
    sp      = { defs={0x0804842e} expr=v5163[32] }
    bp      = { defs={} expr=v5163[32] }
    si      = { defs={} expr=v5164[32] }
    di      = { defs={} expr=v5165[32] }
    es      = { defs={} expr=v5166[16] }
    cs      = { defs={} expr=v5167[16] }
    ss      = { defs={} expr=v5168[16] }
    ds      = { defs={} expr=v5169[16] }
    fs      = { defs={} expr=v5170[16] }
    gs      = { defs={} expr=v5171[16] }
    cf      = { defs={} expr=v5172[1] }
    ?1      = { defs={} expr=v5173[1] }
    pf      = { defs={} expr=v5174[1] }
    ?3      = { defs={} expr=v5175[1] }
    af      = { defs={} expr=v5176[1] }
    ?5      = { defs={} expr=v5177[1] }
    zf      = { defs={} expr=v5178[1] }
    sf      = { defs={} expr=v5179[1] }
    tf      = { defs={} expr=v5180[1] }
    if      = { defs={} expr=v5181[1] }
    df      = { defs={} expr=v5182[1] }
    of      = { defs={} expr=v5183[1] }
    iopl0   = { defs={} expr=v5184[1] }
    iopl1   = { defs={} expr=v5185[1] }
    nt      = { defs={} expr=v5186[1] }
    ?15     = { defs={} expr=v5187[1] }
    rf      = { defs={} expr=v5188[1] }
    vm      = { defs={} expr=v5189[1] }
    ac      = { defs={} expr=v5190[1] }
    vif     = { defs={} expr=v5191[1] }
    vip     = { defs={} expr=v5192[1] }
    id      = { defs={} expr=v5193[1] }
    ?22     = { defs={} expr=v5194[1] }
    ?23     = { defs={} expr=v5195[1] }
    ?24     = { defs={} expr=v5196[1] }
    ?25     = { defs={} expr=v5197[1] }
    ?26     = { defs={} expr=v5198[1] }
    ?27     = { defs={} expr=v5199[1] }
    ?28     = { defs={} expr=v5200[1] }
    ?29     = { defs={} expr=v5201[1] }
    ?30     = { defs={} expr=v5202[1] }
    ?31     = { defs={} expr=v5203[1] }
    ip      = { defs={0x0804842e} expr=0x08048430[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048430[32] }
memory:
null state
0x8048430:xor    eax, eax
registers:
    ax      = { 0x0[32] }
    cx      = { v35060[32] }
    dx      = { v35061[32] }
    bx      = { v35062[32] }
    sp      = { v35064[32] }
    bp      = { v35064[32] }
    si      = { v35065[32] }
    di      = { v35066[32] }
    es      = { v35067[16] }
    cs      = { v35068[16] }
    ss      = { v35069[16] }
    ds      = { v35070[16] }
    fs      = { v35071[16] }
    gs      = { v35072[16] }
    cf      = { 0x0[1] }
    ?1      = { v35074[1] }
    pf      = { 0x1[1] }
    ?3      = { v35076[1] }
    af      = { v35138[1] }
    ?5      = { v35078[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v35081[1] }
    if      = { v35082[1] }
    df      = { v35083[1] }
    of      = { 0x0[1] }
    iopl0   = { v35085[1] }
    iopl1   = { v35086[1] }
    nt      = { v35087[1] }
    ?15     = { v35088[1] }
    rf      = { v35089[1] }
    vm      = { v35090[1] }
    ac      = { v35091[1] }
    vif     = { v35092[1] }
    vip     = { v35093[1] }
    id      = { v35094[1] }
    ?22     = { v35095[1] }
    ?23     = { v35096[1] }
    ?24     = { v35097[1] }
    ?25     = { v35098[1] }
    ?26     = { v35099[1] }
    ?27     = { v35100[1] }
    ?28     = { v35101[1] }
    ?29     = { v35102[1] }
    ?30     = { v35103[1] }
    ?31     = { v35104[1] }
    ip      = { 0x8048432[32] }
memory:
registers:
    ax      = { defs={0x08048430} expr=0[32] }
    cx      = { defs={} expr=v5159[32] }
    dx      = { defs={} expr=v5160[32] }
    bx      = { defs={} expr=v5161[32] }
    sp      = { defs={0x0804842e} expr=v5163[32] }
    bp      = { defs={} expr=v5163[32] }
    si      = { defs={} expr=v5164[32] }
    di      = { defs={} expr=v5165[32] }
    es      = { defs={} expr=v5166[16] }
    cs      = { defs={} expr=v5167[16] }
    ss      = { defs={} expr=v5168[16] }
    ds      = { defs={} expr=v5169[16] }
    fs      = { defs={} expr=v5170[16] }
    gs      = { defs={} expr=v5171[16] }
    cf      = { defs={0x08048430} expr=0[1] }
    ?1      = { defs={} expr=v5173[1] }
    pf      = { defs={0x08048430} expr=1[1] }
    ?3      = { defs={} expr=v5175[1] }
    af      = { defs={0x08048430} expr=v5276[1] }
    ?5      = { defs={} expr=v5177[1] }
    zf      = { defs={0x08048430} expr=1[1] }
    sf      = { defs={0x08048430} expr=0[1] }
    tf      = { defs={} expr=v5180[1] }
    if      = { defs={} expr=v5181[1] }
    df      = { defs={} expr=v5182[1] }
    of      = { defs={0x08048430} expr=0[1] }
    iopl0   = { defs={} expr=v5184[1] }
    iopl1   = { defs={} expr=v5185[1] }
    nt      = { defs={} expr=v5186[1] }
    ?15     = { defs={} expr=v5187[1] }
    rf      = { defs={} expr=v5188[1] }
    vm      = { defs={} expr=v5189[1] }
    ac      = { defs={} expr=v5190[1] }
    vif     = { defs={} expr=v5191[1] }
    vip     = { defs={} expr=v5192[1] }
    id      = { defs={} expr=v5193[1] }
    ?22     = { defs={} expr=v5194[1] }
    ?23     = { defs={} expr=v5195[1] }
    ?24     = { defs={} expr=v5196[1] }
    ?25     = { defs={} expr=v5197[1] }
    ?26     = { defs={} expr=v5198[1] }
    ?27     = { defs={} expr=v5199[1] }
    ?28     = { defs={} expr=v5200[1] }
    ?29     = { defs={} expr=v5201[1] }
    ?30     = { defs={} expr=v5202[1] }
    ?31     = { defs={} expr=v5203[1] }
    ip      = { defs={0x0804842e,0x08048430} expr=0x08048432[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048432[32] }
memory:
null state
0x8048432:pop    ebp
registers:
    ax      = { 0x0[32] }
    cx      = { v35060[32] }
    dx      = { v35061[32] }
    bx      = { v35062[32] }
    sp      = { v35064+0x4[32] }
    bp      = { v35149[32] }
    si      = { v35065[32] }
    di      = { v35066[32] }
    es      = { v35067[16] }
    cs      = { v35068[16] }
    ss      = { v35069[16] }
    ds      = { v35070[16] }
    fs      = { v35071[16] }
    gs      = { v35072[16] }
    cf      = { 0x0[1] }
    ?1      = { v35074[1] }
    pf      = { 0x1[1] }
    ?3      = { v35076[1] }
    af      = { v35138[1] }
    ?5      = { v35078[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v35081[1] }
    if      = { v35082[1] }
    df      = { v35083[1] }
    of      = { 0x0[1] }
    iopl0   = { v35085[1] }
    iopl1   = { v35086[1] }
    nt      = { v35087[1] }
    ?15     = { v35088[1] }
    rf      = { v35089[1] }
    vm      = { v35090[1] }
    ac      = { v35091[1] }
    vif     = { v35092[1] }
    vip     = { v35093[1] }
    id      = { v35094[1] }
    ?22     = { v35095[1] }
    ?23     = { v35096[1] }
    ?24     = { v35097[1] }
    ?25     = { v35098[1] }
    ?26     = { v35099[1] }
    ?27     = { v35100[1] }
    ?28     = { v35101[1] }
    ?29     = { v35102[1] }
    ?30     = { v35103[1] }
    ?31     = { v35104[1] }
    ip      = { 0x8048433[32] }
memory:
    address = { v35064[32] }
      value = { v35149[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x08048430} expr=0[32] }
    cx      = { defs={} expr=v5159[32] }
    dx      = { defs={} expr=v5160[32] }
    bx      = { defs={} expr=v5161[32] }
    sp      = { defs={0x0804842e,0x08048432} expr=(add[32] v5163[32] 4[32]) }
    bp      = { defs={0x08048432} expr=v5296[32] }
    si      = { defs={} expr=v5164[32] }
    di      = { defs={} expr=v5165[32] }
    es      = { defs={} expr=v5166[16] }
    cs      = { defs={} expr=v5167[16] }
    ss      = { defs={} expr=v5168[16] }
    ds      = { defs={} expr=v5169[16] }
    fs      = { defs={} expr=v5170[16] }
    gs      = { defs={} expr=v5171[16] }
    cf      = { defs={0x08048430} expr=0[1] }
    ?1      = { defs={} expr=v5173[1] }
    pf      = { defs={0x08048430} expr=1[1] }
    ?3      = { defs={} expr=v5175[1] }
    af      = { defs={0x08048430} expr=v5276[1] }
    ?5      = { defs={} expr=v5177[1] }
    zf      = { defs={0x08048430} expr=1[1] }
    sf      = { defs={0x08048430} expr=0[1] }
    tf      = { defs={} expr=v5180[1] }
    if      = { defs={} expr=v5181[1] }
    df      = { defs={} expr=v5182[1] }
    of      = { defs={0x08048430} expr=0[1] }
    iopl0   = { defs={} expr=v5184[1] }
    iopl1   = { defs={} expr=v5185[1] }
    nt      = { defs={} expr=v5186[1] }
    ?15     = { defs={} expr=v5187[1] }
    rf      = { defs={} expr=v5188[1] }
    vm      = { defs={} expr=v5189[1] }
    ac      = { defs={} expr=v5190[1] }
    vif     = { defs={} expr=v5191[1] }
    vip     = { defs={} expr=v5192[1] }
    id      = { defs={} expr=v5193[1] }
    ?22     = { defs={} expr=v5194[1] }
    ?23     = { defs={} expr=v5195[1] }
    ?24     = { defs={} expr=v5196[1] }
    ?25     = { defs={} expr=v5197[1] }
    ?26     = { defs={} expr=v5198[1] }
    ?27     = { defs={} expr=v5199[1] }
    ?28     = { defs={} expr=v5200[1] }
    ?29     = { defs={} expr=v5201[1] }
    ?30     = { defs={} expr=v5202[1] }
    ?31     = { defs={} expr=v5203[1] }
    ip      = { defs={0x0804842e,0x08048430,0x08048432} expr=0x08048433[32] }
memory:
init mem:
    address = { defs={0x0804842e} expr=(add[32] v5163[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v5296[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e} expr=(add[32] v5163[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v5296[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e} expr=(add[32] v5163[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v5296[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e} expr=v5163[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v5296[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048433[32] }
memory:
null state
0x8048433:ret    
registers:
    ax      = { 0x0[32] }
    cx      = { v35060[32] }
    dx      = { v35061[32] }
    bx      = { v35062[32] }
    sp      = { v35064+0x8[32] }
    bp      = { v35149[32] }
    si      = { v35065[32] }
    di      = { v35066[32] }
    es      = { v35067[16] }
    cs      = { v35068[16] }
    ss      = { v35069[16] }
    ds      = { v35070[16] }
    fs      = { v35071[16] }
    gs      = { v35072[16] }
    cf      = { 0x0[1] }
    ?1      = { v35074[1] }
    pf      = { 0x1[1] }
    ?3      = { v35076[1] }
    af      = { v35138[1] }
    ?5      = { v35078[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v35081[1] }
    if      = { v35082[1] }
    df      = { v35083[1] }
    of      = { 0x0[1] }
    iopl0   = { v35085[1] }
    iopl1   = { v35086[1] }
    nt      = { v35087[1] }
    ?15     = { v35088[1] }
    rf      = { v35089[1] }
    vm      = { v35090[1] }
    ac      = { v35091[1] }
    vif     = { v35092[1] }
    vip     = { v35093[1] }
    id      = { v35094[1] }
    ?22     = { v35095[1] }
    ?23     = { v35096[1] }
    ?24     = { v35097[1] }
    ?25     = { v35098[1] }
    ?26     = { v35099[1] }
    ?27     = { v35100[1] }
    ?28     = { v35101[1] }
    ?29     = { v35102[1] }
    ?30     = { v35103[1] }
    ?31     = { v35104[1] }
    ip      = { v35161[32] }
memory:
    address = { v35064[32] }
      value = { v35149[32] }
      flags = { size=4; read-only }
    address = { v35064+0x4[32] }
      value = { v35161[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x08048430} expr=0[32] }
    cx      = { defs={} expr=v5159[32] }
    dx      = { defs={} expr=v5160[32] }
    bx      = { defs={} expr=v5161[32] }
    sp      = { defs={0x0804842e,0x08048432,0x08048433} expr=(add[32] (add[32] v5163[32] 4[32]) 4[32]) }
    bp      = { defs={0x08048432} expr=v5296[32] }
    si      = { defs={} expr=v5164[32] }
    di      = { defs={} expr=v5165[32] }
    es      = { defs={} expr=v5166[16] }
    cs      = { defs={} expr=v5167[16] }
    ss      = { defs={} expr=v5168[16] }
    ds      = { defs={} expr=v5169[16] }
    fs      = { defs={} expr=v5170[16] }
    gs      = { defs={} expr=v5171[16] }
    cf      = { defs={0x08048430} expr=0[1] }
    ?1      = { defs={} expr=v5173[1] }
    pf      = { defs={0x08048430} expr=1[1] }
    ?3      = { defs={} expr=v5175[1] }
    af      = { defs={0x08048430} expr=v5276[1] }
    ?5      = { defs={} expr=v5177[1] }
    zf      = { defs={0x08048430} expr=1[1] }
    sf      = { defs={0x08048430} expr=0[1] }
    tf      = { defs={} expr=v5180[1] }
    if      = { defs={} expr=v5181[1] }
    df      = { defs={} expr=v5182[1] }
    of      = { defs={0x08048430} expr=0[1] }
    iopl0   = { defs={} expr=v5184[1] }
    iopl1   = { defs={} expr=v5185[1] }
    nt      = { defs={} expr=v5186[1] }
    ?15     = { defs={} expr=v5187[1] }
    rf      = { defs={} expr=v5188[1] }
    vm      = { defs={} expr=v5189[1] }
    ac      = { defs={} expr=v5190[1] }
    vif     = { defs={} expr=v5191[1] }
    vip     = { defs={} expr=v5192[1] }
    id      = { defs={} expr=v5193[1] }
    ?22     = { defs={} expr=v5194[1] }
    ?23     = { defs={} expr=v5195[1] }
    ?24     = { defs={} expr=v5196[1] }
    ?25     = { defs={} expr=v5197[1] }
    ?26     = { defs={} expr=v5198[1] }
    ?27     = { defs={} expr=v5199[1] }
    ?28     = { defs={} expr=v5200[1] }
    ?29     = { defs={} expr=v5201[1] }
    ?30     = { defs={} expr=v5202[1] }
    ?31     = { defs={} expr=v5203[1] }
    ip      = { defs={0x08048433} expr=v5326[32] }
memory:
init mem:
    address = { defs={0x0804842e,0x08048432} expr=(add[32] (add[32] v5163[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v5326[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e,0x08048432} expr=(add[32] (add[32] v5163[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v5326[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e,0x08048432} expr=(add[32] (add[32] v5163[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v5326[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e,0x08048432} expr=(add[32] v5163[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v5326[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e} expr=(add[32] v5163[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v5296[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e} expr=(add[32] v5163[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v5296[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e} expr=(add[32] v5163[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v5296[32]) }
      flags = { rdonly }
    address = { defs={0x0804842e} expr=v5163[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v5296[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
registers:
    ax      = { v35212[32] }
    cx      = { v35213[32] }
    dx      = { v35214[32] }
    bx      = { v35215[32] }
    sp      = { v35216-0x4[32] }
    bp      = { v35217[32] }
    si      = { v35218[32] }
    di      = { v35219[32] }
    es      = { v35220[16] }
    cs      = { v35221[16] }
    ss      = { v35222[16] }
    ds      = { v35223[16] }
    fs      = { v35224[16] }
    gs      = { v35225[16] }
    cf      = { v35226[1] }
    ?1      = { v35227[1] }
    pf      = { v35228[1] }
    ?3      = { v35229[1] }
    af      = { v35230[1] }
    ?5      = { v35231[1] }
    zf      = { v35232[1] }
    sf      = { v35233[1] }
    tf      = { v35234[1] }
    if      = { v35235[1] }
    df      = { v35236[1] }
    of      = { v35237[1] }
    iopl0   = { v35238[1] }
    iopl1   = { v35239[1] }
    nt      = { v35240[1] }
    ?15     = { v35241[1] }
    rf      = { v35242[1] }
    vm      = { v35243[1] }
    ac      = { v35244[1] }
    vif     = { v35245[1] }
    vip     = { v35246[1] }
    id      = { v35247[1] }
    ?22     = { v35248[1] }
    ?23     = { v35249[1] }
    ?24     = { v35250[1] }
    ?25     = { v35251[1] }
    ?26     = { v35252[1] }
    ?27     = { v35253[1] }
    ?28     = { v35254[1] }
    ?29     = { v35255[1] }
    ?30     = { v35256[1] }
    ?31     = { v35257[1] }
    ip      = { 0x8048441[32] }
memory:
    address = { v35216-0x4[32] }
      value = { v35217[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5390[32] }
    cx      = { defs={} expr=v5391[32] }
    dx      = { defs={} expr=v5392[32] }
    bx      = { defs={} expr=v5393[32] }
    sp      = { defs={0x08048440} expr=(add[32] v5394[32] -4[32]) }
    bp      = { defs={} expr=v5395[32] }
    si      = { defs={} expr=v5396[32] }
    di      = { defs={} expr=v5397[32] }
    es      = { defs={} expr=v5398[16] }
    cs      = { defs={} expr=v5399[16] }
    ss      = { defs={} expr=v5400[16] }
    ds      = { defs={} expr=v5401[16] }
    fs      = { defs={} expr=v5402[16] }
    gs      = { defs={} expr=v5403[16] }
    cf      = { defs={} expr=v5404[1] }
    ?1      = { defs={} expr=v5405[1] }
    pf      = { defs={} expr=v5406[1] }
    ?3      = { defs={} expr=v5407[1] }
    af      = { defs={} expr=v5408[1] }
    ?5      = { defs={} expr=v5409[1] }
    zf      = { defs={} expr=v5410[1] }
    sf      = { defs={} expr=v5411[1] }
    tf      = { defs={} expr=v5412[1] }
    if      = { defs={} expr=v5413[1] }
    df      = { defs={} expr=v5414[1] }
    of      = { defs={} expr=v5415[1] }
    iopl0   = { defs={} expr=v5416[1] }
    iopl1   = { defs={} expr=v5417[1] }
    nt      = { defs={} expr=v5418[1] }
    ?15     = { defs={} expr=v5419[1] }
    rf      = { defs={} expr=v5420[1] }
    vm      = { defs={} expr=v5421[1] }
    ac      = { defs={} expr=v5422[1] }
    vif     = { defs={} expr=v5423[1] }
    vip     = { defs={} expr=v5424[1] }
    id      = { defs={} expr=v5425[1] }
    ?22     = { defs={} expr=v5426[1] }
    ?23     = { defs={} expr=v5427[1] }
    ?24     = { defs={} expr=v5428[1] }
    ?25     = { defs={} expr=v5429[1] }
    ?26     = { defs={} expr=v5430[1] }
    ?27     = { defs={} expr=v5431[1] }
    ?28     = { defs={} expr=v5432[1] }
    ?29     = { defs={} expr=v5433[1] }
    ?30     = { defs={} expr=v5434[1] }
    ?31     = { defs={} expr=v5435[1] }
    ip      = { defs={0x08048440} expr=0x08048441[32] }
memory:
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 3[32]) }
      value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 2[32]) }
      value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 1[32]) }
      value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] v5394[32] -4[32]) }
      value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v5395[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048441[32] }
memory:
null state
0x8048441:mov    ebp, esp
registers:
    ax      = { v35212[32] }
    cx      = { v35213[32] }
    dx      = { v35214[32] }
    bx      = { v35215[32] }
    sp      = { v35216-0x4[32] }
    bp      = { v35216-0x4[32] }
    si      = { v35218[32] }
    di      = { v35219[32] }
    es      = { v35220[16] }
    cs      = { v35221[16] }
    ss      = { v35222[16] }
    ds      = { v35223[16] }
    fs      = { v35224[16] }
    gs      = { v35225[16] }
    cf      = { v35226[1] }
    ?1      = { v35227[1] }
    pf      = { v35228[1] }
    ?3      = { v35229[1] }
    af      = { v35230[1] }
    ?5      = { v35231[1] }
    zf      = { v35232[1] }
    sf      = { v35233[1] }
    tf      = { v35234[1] }
    if      = { v35235[1] }
    df      = { v35236[1] }
    of      = { v35237[1] }
    iopl0   = { v35238[1] }
    iopl1   = { v35239[1] }
    nt      = { v35240[1] }
    ?15     = { v35241[1] }
    rf      = { v35242[1] }
    vm      = { v35243[1] }
    ac      = { v35244[1] }
    vif     = { v35245[1] }
    vip     = { v35246[1] }
    id      = { v35247[1] }
    ?22     = { v35248[1] }
    ?23     = { v35249[1] }
    ?24     = { v35250[1] }
    ?25     = { v35251[1] }
    ?26     = { v35252[1] }
    ?27     = { v35253[1] }
    ?28     = { v35254[1] }
    ?29     = { v35255[1] }
    ?30     = { v35256[1] }
    ?31     = { v35257[1] }
    ip      = { 0x8048443[32] }
memory:
    address = { v35216-0x4[32] }
      value = { v35217[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5390[32] }
    cx      = { defs={} expr=v5391[32] }
    dx      = { defs={} expr=v5392[32] }
    bx      = { defs={} expr=v5393[32] }
    sp      = { defs={0x08048440} expr=(add[32] v5394[32] -4[32]) }
    bp      = { defs={0x08048440,0x08048441} expr=(add[32] v5394[32] -4[32]) }
    si      = { defs={} expr=v5396[32] }
    di      = { defs={} expr=v5397[32] }
    es      = { defs={} expr=v5398[16] }
    cs      = { defs={} expr=v5399[16] }
    ss      = { defs={} expr=v5400[16] }
    ds      = { defs={} expr=v5401[16] }
    fs      = { defs={} expr=v5402[16] }
    gs      = { defs={} expr=v5403[16] }
    cf      = { defs={} expr=v5404[1] }
    ?1      = { defs={} expr=v5405[1] }
    pf      = { defs={} expr=v5406[1] }
    ?3      = { defs={} expr=v5407[1] }
    af      = { defs={} expr=v5408[1] }
    ?5      = { defs={} expr=v5409[1] }
    zf      = { defs={} expr=v5410[1] }
    sf      = { defs={} expr=v5411[1] }
    tf      = { defs={} expr=v5412[1] }
    if      = { defs={} expr=v5413[1] }
    df      = { defs={} expr=v5414[1] }
    of      = { defs={} expr=v5415[1] }
    iopl0   = { defs={} expr=v5416[1] }
    iopl1   = { defs={} expr=v5417[1] }
    nt      = { defs={} expr=v5418[1] }
    ?15     = { defs={} expr=v5419[1] }
    rf      = { defs={} expr=v5420[1] }
    vm      = { defs={} expr=v5421[1] }
    ac      = { defs={} expr=v5422[1] }
    vif     = { defs={} expr=v5423[1] }
    vip     = { defs={} expr=v5424[1] }
    id      = { defs={} expr=v5425[1] }
    ?22     = { defs={} expr=v5426[1] }
    ?23     = { defs={} expr=v5427[1] }
    ?24     = { defs={} expr=v5428[1] }
    ?25     = { defs={} expr=v5429[1] }
    ?26     = { defs={} expr=v5430[1] }
    ?27     = { defs={} expr=v5431[1] }
    ?28     = { defs={} expr=v5432[1] }
    ?29     = { defs={} expr=v5433[1] }
    ?30     = { defs={} expr=v5434[1] }
    ?31     = { defs={} expr=v5435[1] }
    ip      = { defs={0x08048440,0x08048441} expr=0x08048443[32] }
memory:
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 3[32]) }
      value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 2[32]) }
      value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 1[32]) }
      value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] v5394[32] -4[32]) }
      value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v5395[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048443[32] }
memory:
null state
0x8048443:sub    esp, 0x08
registers:
    ax      = { v35212[32] }
    cx      = { v35213[32] }
    dx      = { v35214[32] }
    bx      = { v35215[32] }
    sp      = { v35216-0xc[32] }
    bp      = { v35216-0x4[32] }
    si      = { v35218[32] }
    di      = { v35219[32] }
    es      = { v35220[16] }
    cs      = { v35221[16] }
    ss      = { v35222[16] }
    ds      = { v35223[16] }
    fs      = { v35224[16] }
    gs      = { v35225[16] }
    cf      = { -v35323+0x1[1] }
    ?1      = { v35227[1] }
    pf      = { -v35313+0x1[1] }
    ?3      = { v35229[1] }
    af      = { -v35320+0x1[1] }
    ?5      = { v35231[1] }
    zf      = { v35318[1] }
    sf      = { v35316[1] }
    tf      = { v35234[1] }
    if      = { v35235[1] }
    df      = { v35236[1] }
    of      = { v35330[1] }
    iopl0   = { v35238[1] }
    iopl1   = { v35239[1] }
    nt      = { v35240[1] }
    ?15     = { v35241[1] }
    rf      = { v35242[1] }
    vm      = { v35243[1] }
    ac      = { v35244[1] }
    vif     = { v35245[1] }
    vip     = { v35246[1] }
    id      = { v35247[1] }
    ?22     = { v35248[1] }
    ?23     = { v35249[1] }
    ?24     = { v35250[1] }
    ?25     = { v35251[1] }
    ?26     = { v35252[1] }
    ?27     = { v35253[1] }
    ?28     = { v35254[1] }
    ?29     = { v35255[1] }
    ?30     = { v35256[1] }
    ?31     = { v35257[1] }
    ip      = { 0x8048446[32] }
memory:
    address = { v35216-0x4[32] }
      value = { v35217[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5390[32] }
    cx      = { defs={} expr=v5391[32] }
    dx      = { defs={} expr=v5392[32] }
    bx      = { defs={} expr=v5393[32] }
    sp      = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v5394[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048440,0x08048441} expr=(add[32] v5394[32] -4[32]) }
    si      = { defs={} expr=v5396[32] }
    di      = { defs={} expr=v5397[32] }
    es      = { defs={} expr=v5398[16] }
    cs      = { defs={} expr=v5399[16] }
    ss      = { defs={} expr=v5400[16] }
    ds      = { defs={} expr=v5401[16] }
    fs      = { defs={} expr=v5402[16] }
    gs      = { defs={} expr=v5403[16] }
    cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v5405[1] }
    pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v5407[1] }
    af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v5409[1] }
    zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v5394[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v5412[1] }
    if      = { defs={} expr=v5413[1] }
    df      = { defs={} expr=v5414[1] }
    of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v5416[1] }
    iopl1   = { defs={} expr=v5417[1] }
    nt      = { defs={} expr=v5418[1] }
    ?15     = { defs={} expr=v5419[1] }
    rf      = { defs={} expr=v5420[1] }
    vm      = { defs={} expr=v5421[1] }
    ac      = { defs={} expr=v5422[1] }
    vif     = { defs={} expr=v5423[1] }
    vip     = { defs={} expr=v5424[1] }
    id      = { defs={} expr=v5425[1] }
    ?22     = { defs={} expr=v5426[1] }
    ?23     = { defs={} expr=v5427[1] }
    ?24     = { defs={} expr=v5428[1] }
    ?25     = { defs={} expr=v5429[1] }
    ?26     = { defs={} expr=v5430[1] }
    ?27     = { defs={} expr=v5431[1] }
    ?28     = { defs={} expr=v5432[1] }
    ?29     = { defs={} expr=v5433[1] }
    ?30     = { defs={} expr=v5434[1] }
    ?31     = { defs={} expr=v5435[1] }
    ip      = { defs={0x08048440,0x08048441,0x08048443} expr=0x08048446[32] }
memory:
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 3[32]) }
      value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 2[32]) }
      value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 1[32]) }
      value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] v5394[32] -4[32]) }
      value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v5395[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048446[32] }
memory:
null state
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
    ax      = { v35212[32] }
    cx      = { v35213[32] }
    dx      = { v35214[32] }
    bx      = { v35215[32] }
    sp      = { v35216-0xc[32] }
    bp      = { v35216-0x4[32] }
    si      = { v35218[32] }
    di      = { v35219[32] }
    es      = { v35220[16] }
    cs      = { v35221[16] }
    ss      = { v35222[16] }
    ds      = { v35223[16] }
    fs      = { v35224[16] }
    gs      = { v35225[16] }
    cf      = { -v35323+0x1[1] }
    ?1      = { v35227[1] }
    pf      = { -v35313+0x1[1] }
    ?3      = { v35229[1] }
    af      = { -v35320+0x1[1] }
    ?5      = { v35231[1] }
    zf      = { v35318[1] }
    sf      = { v35316[1] }
    tf      = { v35234[1] }
    if      = { v35235[1] }
    df      = { v35236[1] }
    of      = { v35330[1] }
    iopl0   = { v35238[1] }
    iopl1   = { v35239[1] }
    nt      = { v35240[1] }
    ?15     = { v35241[1] }
    rf      = { v35242[1] }
    vm      = { v35243[1] }
    ac      = { v35244[1] }
    vif     = { v35245[1] }
    vip     = { v35246[1] }
    id      = { v35247[1] }
    ?22     = { v35248[1] }
    ?23     = { v35249[1] }
    ?24     = { v35250[1] }
    ?25     = { v35251[1] }
    ?26     = { v35252[1] }
    ?27     = { v35253[1] }
    ?28     = { v35254[1] }
    ?29     = { v35255[1] }
    ?30     = { v35256[1] }
    ?31     = { v35257[1] }
    ip      = { 0x804844d[32] }
memory:
    address = { v35216-0x4[32] }
      value = { v35217[32] }
      flags = { size=4 }
    address = { v35216-0xc[32] }
      value = { 0x80485d4[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5390[32] }
    cx      = { defs={} expr=v5391[32] }
    dx      = { defs={} expr=v5392[32] }
    bx      = { defs={} expr=v5393[32] }
    sp      = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v5394[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048440,0x08048441} expr=(add[32] v5394[32] -4[32]) }
    si      = { defs={} expr=v5396[32] }
    di      = { defs={} expr=v5397[32] }
    es      = { defs={} expr=v5398[16] }
    cs      = { defs={} expr=v5399[16] }
    ss      = { defs={} expr=v5400[16] }
    ds      = { defs={} expr=v5401[16] }
    fs      = { defs={} expr=v5402[16] }
    gs      = { defs={} expr=v5403[16] }
    cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v5405[1] }
    pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v5407[1] }
    af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v5409[1] }
    zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v5394[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v5412[1] }
    if      = { defs={} expr=v5413[1] }
    df      = { defs={} expr=v5414[1] }
    of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v5416[1] }
    iopl1   = { defs={} expr=v5417[1] }
    nt      = { defs={} expr=v5418[1] }
    ?15     = { defs={} expr=v5419[1] }
    rf      = { defs={} expr=v5420[1] }
    vm      = { defs={} expr=v5421[1] }
    ac      = { defs={} expr=v5422[1] }
    vif     = { defs={} expr=v5423[1] }
    vip     = { defs={} expr=v5424[1] }
    id      = { defs={} expr=v5425[1] }
    ?22     = { defs={} expr=v5426[1] }
    ?23     = { defs={} expr=v5427[1] }
    ?24     = { defs={} expr=v5428[1] }
    ?25     = { defs={} expr=v5429[1] }
    ?26     = { defs={} expr=v5430[1] }
    ?27     = { defs={} expr=v5431[1] }
    ?28     = { defs={} expr=v5432[1] }
    ?29     = { defs={} expr=v5433[1] }
    ?30     = { defs={} expr=v5434[1] }
    ?31     = { defs={} expr=v5435[1] }
    ip      = { defs={0x08048440,0x08048441,0x08048443,0x08048446} expr=0x0804844d[32] }
memory:
    address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) 3[32]) }
      value = { defs={0x08048446} expr=8[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) 2[32]) }
      value = { defs={0x08048446} expr=4[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) 1[32]) }
      value = { defs={0x08048446} expr=-123[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v5394[32] -4[32]) -8[32]) }
      value = { defs={0x08048446} expr=-44[8] }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 3[32]) }
      value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 2[32]) }
      value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 1[32]) }
      value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] v5394[32] -4[32]) }
      value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v5395[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804844d[32] }
memory:
null state
0x804844d:call   0x08048300<puts@plt>
registers:
    ax      = { v35212[32] }
    cx      = { v35213[32] }
    dx      = { v35214[32] }
    bx      = { v35215[32] }
    sp      = { v35216-0x10[32] }
    bp      = { v35216-0x4[32] }
    si      = { v35218[32] }
    di      = { v35219[32] }
    es      = { v35220[16] }
    cs      = { v35221[16] }
    ss      = { v35222[16] }
    ds      = { v35223[16] }
    fs      = { v35224[16] }
    gs      = { v35225[16] }
    cf      = { -v35323+0x1[1] }
    ?1      = { v35227[1] }
    pf      = { -v35313+0x1[1] }
    ?3      = { v35229[1] }
    af      = { -v35320+0x1[1] }
    ?5      = { v35231[1] }
    zf      = { v35318[1] }
    sf      = { v35316[1] }
    tf      = { v35234[1] }
    if      = { v35235[1] }
    df      = { v35236[1] }
    of      = { v35330[1] }
    iopl0   = { v35238[1] }
    iopl1   = { v35239[1] }
    nt      = { v35240[1] }
    ?15     = { v35241[1] }
    rf      = { v35242[1] }
    vm      = { v35243[1] }
    ac      = { v35244[1] }
    vif     = { v35245[1] }
    vip     = { v35246[1] }
    id      = { v35247[1] }
    ?22     = { v35248[1] }
    ?23     = { v35249[1] }
    ?24     = { v35250[1] }
    ?25     = { v35251[1] }
    ?26     = { v35252[1] }
    ?27     = { v35253[1] }
    ?28     = { v35254[1] }
    ?29     = { v35255[1] }
    ?30     = { v35256[1] }
    ?31     = { v35257[1] }
    ip      = { 0x8048300[32] }
memory:
    address = { v35216-0x4[32] }
      value = { v35217[32] }
      flags = { size=4 }
    address = { v35216-0xc[32] }
      value = { 0x80485d4[32] }
      flags = { size=4 }
    address = { v35216-0x10[32] }
      value = { 0x8048452[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5390[32] }
    cx      = { defs={} expr=v5391[32] }
    dx      = { defs={} expr=v5392[32] }
    bx      = { defs={} expr=v5393[32] }
    sp      = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) -4[32]) }
    bp      = { defs={0x08048440,0x08048441} expr=(add[32] v5394[32] -4[32]) }
    si      = { defs={} expr=v5396[32] }
    di      = { defs={} expr=v5397[32] }
    es      = { defs={} expr=v5398[16] }
    cs      = { defs={} expr=v5399[16] }
    ss      = { defs={} expr=v5400[16] }
    ds      = { defs={} expr=v5401[16] }
    fs      = { defs={} expr=v5402[16] }
    gs      = { defs={} expr=v5403[16] }
    cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v5405[1] }
    pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v5407[1] }
    af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v5409[1] }
    zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v5394[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v5394[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v5412[1] }
    if      = { defs={} expr=v5413[1] }
    df      = { defs={} expr=v5414[1] }
    of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5394[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v5416[1] }
    iopl1   = { defs={} expr=v5417[1] }
    nt      = { defs={} expr=v5418[1] }
    ?15     = { defs={} expr=v5419[1] }
    rf      = { defs={} expr=v5420[1] }
    vm      = { defs={} expr=v5421[1] }
    ac      = { defs={} expr=v5422[1] }
    vif     = { defs={} expr=v5423[1] }
    vip     = { defs={} expr=v5424[1] }
    id      = { defs={} expr=v5425[1] }
    ?22     = { defs={} expr=v5426[1] }
    ?23     = { defs={} expr=v5427[1] }
    ?24     = { defs={} expr=v5428[1] }
    ?25     = { defs={} expr=v5429[1] }
    ?26     = { defs={} expr=v5430[1] }
    ?27     = { defs={} expr=v5431[1] }
    ?28     = { defs={} expr=v5432[1] }
    ?29     = { defs={} expr=v5433[1] }
    ?30     = { defs={} expr=v5434[1] }
    ?31     = { defs={} expr=v5435[1] }
    ip      = { defs={0x0804844d} expr=0x08048300[32] }
memory:
    address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) -4[32]) 3[32]) }
      value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=8[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) -4[32]) 2[32]) }
      value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=4[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) -4[32]) 1[32]) }
      value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=-124[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) -4[32]) }
      value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=82[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) 3[32]) }
      value = { defs={0x08048446} expr=8[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) 2[32]) }
      value = { defs={0x08048446} expr=4[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] (add[32] v5394[32] -4[32]) -8[32]) 1[32]) }
      value = { defs={0x08048446} expr=-123[8] }
      flags = { }
    address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v5394[32] -4[32]) -8[32]) }
      value = { defs={0x08048446} expr=-44[8] }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 3[32]) }
      value = { defs={0x08048440} expr=(extract[8] 24[32] 32[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 2[32]) }
      value = { defs={0x08048440} expr=(extract[8] 16[32] 24[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] (add[32] v5394[32] -4[32]) 1[32]) }
      value = { defs={0x08048440} expr=(extract[8] 8[32] 16[32] v5395[32]) }
      flags = { }
    address = { defs={0x08048440} expr=(add[32] v5394[32] -4[32]) }
      value = { defs={0x08048440} expr=(extract[8] 0[32] 8[32] v5395[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048300[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
registers:
    ax      = { v35397[32] }
    cx      = { v35398[32] }
    dx      = { v35399[32] }
    bx      = { v35400[32] }
    sp      = { v35402[32] }
    bp      = { v35402[32] }
    si      = { v35403[32] }
    di      = { v35404[32] }
    es      = { v35405[16] }
    cs      = { v35406[16] }
    ss      = { v35407[16] }
    ds      = { v35408[16] }
    fs      = { v35409[16] }
    gs      = { v35410[16] }
    cf      = { v35411[1] }
    ?1      = { v35412[1] }
    pf      = { v35413[1] }
    ?3      = { v35414[1] }
    af      = { v35415[1] }
    ?5      = { v35416[1] }
    zf      = { v35417[1] }
    sf      = { v35418[1] }
    tf      = { v35419[1] }
    if      = { v35420[1] }
    df      = { v35421[1] }
    of      = { v35422[1] }
    iopl0   = { v35423[1] }
    iopl1   = { v35424[1] }
    nt      = { v35425[1] }
    ?15     = { v35426[1] }
    rf      = { v35427[1] }
    vm      = { v35428[1] }
    ac      = { v35429[1] }
    vif     = { v35430[1] }
    vip     = { v35431[1] }
    id      = { v35432[1] }
    ?22     = { v35433[1] }
    ?23     = { v35434[1] }
    ?24     = { v35435[1] }
    ?25     = { v35436[1] }
    ?26     = { v35437[1] }
    ?27     = { v35438[1] }
    ?28     = { v35439[1] }
    ?29     = { v35440[1] }
    ?30     = { v35441[1] }
    ?31     = { v35442[1] }
    ip      = { 0x8048454[32] }
memory:
registers:
    ax      = { defs={} expr=v5658[32] }
    cx      = { defs={} expr=v5659[32] }
    dx      = { defs={} expr=v5660[32] }
    bx      = { defs={} expr=v5661[32] }
    sp      = { defs={0x08048452} expr=v5663[32] }
    bp      = { defs={} expr=v5663[32] }
    si      = { defs={} expr=v5664[32] }
    di      = { defs={} expr=v5665[32] }
    es      = { defs={} expr=v5666[16] }
    cs      = { defs={} expr=v5667[16] }
    ss      = { defs={} expr=v5668[16] }
    ds      = { defs={} expr=v5669[16] }
    fs      = { defs={} expr=v5670[16] }
    gs      = { defs={} expr=v5671[16] }
    cf      = { defs={} expr=v5672[1] }
    ?1      = { defs={} expr=v5673[1] }
    pf      = { defs={} expr=v5674[1] }
    ?3      = { defs={} expr=v5675[1] }
    af      = { defs={} expr=v5676[1] }
    ?5      = { defs={} expr=v5677[1] }
    zf      = { defs={} expr=v5678[1] }
    sf      = { defs={} expr=v5679[1] }
    tf      = { defs={} expr=v5680[1] }
    if      = { defs={} expr=v5681[1] }
    df      = { defs={} expr=v5682[1] }
    of      = { defs={} expr=v5683[1] }
    iopl0   = { defs={} expr=v5684[1] }
    iopl1   = { defs={} expr=v5685[1] }
    nt      = { defs={} expr=v5686[1] }
    ?15     = { defs={} expr=v5687[1] }
    rf      = { defs={} expr=v5688[1] }
    vm      = { defs={} expr=v5689[1] }
    ac      = { defs={} expr=v5690[1] }
    vif     = { defs={} expr=v5691[1] }
    vip     = { defs={} expr=v5692[1] }
    id      = { defs={} expr=v5693[1] }
    ?22     = { defs={} expr=v5694[1] }
    ?23     = { defs={} expr=v5695[1] }
    ?24     = { defs={} expr=v5696[1] }
    ?25     = { defs={} expr=v5697[1] }
    ?26     = { defs={} expr=v5698[1] }
    ?27     = { defs={} expr=v5699[1] }
    ?28     = { defs={} expr=v5700[1] }
    ?29     = { defs={} expr=v5701[1] }
    ?30     = { defs={} expr=v5702[1] }
    ?31     = { defs={} expr=v5703[1] }
    ip      = { defs={0x08048452} expr=0x08048454[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048454[32] }
memory:
null state
0x8048454:pop    ebp
registers:
    ax      = { v35397[32] }
    cx      = { v35398[32] }
    dx      = { v35399[32] }
    bx      = { v35400[32] }
    sp      = { v35402+0x4[32] }
    bp      = { v35457[32] }
    si      = { v35403[32] }
    di      = { v35404[32] }
    es      = { v35405[16] }
    cs      = { v35406[16] }
    ss      = { v35407[16] }
    ds      = { v35408[16] }
    fs      = { v35409[16] }
    gs      = { v35410[16] }
    cf      = { v35411[1] }
    ?1      = { v35412[1] }
    pf      = { v35413[1] }
    ?3      = { v35414[1] }
    af      = { v35415[1] }
    ?5      = { v35416[1] }
    zf      = { v35417[1] }
    sf      = { v35418[1] }
    tf      = { v35419[1] }
    if      = { v35420[1] }
    df      = { v35421[1] }
    of      = { v35422[1] }
    iopl0   = { v35423[1] }
    iopl1   = { v35424[1] }
    nt      = { v35425[1] }
    ?15     = { v35426[1] }
    rf      = { v35427[1] }
    vm      = { v35428[1] }
    ac      = { v35429[1] }
    vif     = { v35430[1] }
    vip     = { v35431[1] }
    id      = { v35432[1] }
    ?22     = { v35433[1] }
    ?23     = { v35434[1] }
    ?24     = { v35435[1] }
    ?25     = { v35436[1] }
    ?26     = { v35437[1] }
    ?27     = { v35438[1] }
    ?28     = { v35439[1] }
    ?29     = { v35440[1] }
    ?30     = { v35441[1] }
    ?31     = { v35442[1] }
    ip      = { 0x8048455[32] }
memory:
    address = { v35402[32] }
      value = { v35457[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v5658[32] }
    cx      = { defs={} expr=v5659[32] }
    dx      = { defs={} expr=v5660[32] }
    bx      = { defs={} expr=v5661[32] }
    sp      = { defs={0x08048452,0x08048454} expr=(add[32] v5663[32] 4[32]) }
    bp      = { defs={0x08048454} expr=v5731[32] }
    si      = { defs={} expr=v5664[32] }
    di      = { defs={} expr=v5665[32] }
    es      = { defs={} expr=v5666[16] }
    cs      = { defs={} expr=v5667[16] }
    ss      = { defs={} expr=v5668[16] }
    ds      = { defs={} expr=v5669[16] }
    fs      = { defs={} expr=v5670[16] }
    gs      = { defs={} expr=v5671[16] }
    cf      = { defs={} expr=v5672[1] }
    ?1      = { defs={} expr=v5673[1] }
    pf      = { defs={} expr=v5674[1] }
    ?3      = { defs={} expr=v5675[1] }
    af      = { defs={} expr=v5676[1] }
    ?5      = { defs={} expr=v5677[1] }
    zf      = { defs={} expr=v5678[1] }
    sf      = { defs={} expr=v5679[1] }
    tf      = { defs={} expr=v5680[1] }
    if      = { defs={} expr=v5681[1] }
    df      = { defs={} expr=v5682[1] }
    of      = { defs={} expr=v5683[1] }
    iopl0   = { defs={} expr=v5684[1] }
    iopl1   = { defs={} expr=v5685[1] }
    nt      = { defs={} expr=v5686[1] }
    ?15     = { defs={} expr=v5687[1] }
    rf      = { defs={} expr=v5688[1] }
    vm      = { defs={} expr=v5689[1] }
    ac      = { defs={} expr=v5690[1] }
    vif     = { defs={} expr=v5691[1] }
    vip     = { defs={} expr=v5692[1] }
    id      = { defs={} expr=v5693[1] }
    ?22     = { defs={} expr=v5694[1] }
    ?23     = { defs={} expr=v5695[1] }
    ?24     = { defs={} expr=v5696[1] }
    ?25     = { defs={} expr=v5697[1] }
    ?26     = { defs={} expr=v5698[1] }
    ?27     = { defs={} expr=v5699[1] }
    ?28     = { defs={} expr=v5700[1] }
    ?29     = { defs={} expr=v5701[1] }
    ?30     = { defs={} expr=v5702[1] }
    ?31     = { defs={} expr=v5703[1] }
    ip      = { defs={0x08048452,0x08048454} expr=0x08048455[32] }
memory:
init mem:
    address = { defs={0x08048452} expr=(add[32] v5663[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v5731[32]) }
      flags = { rdonly }
    address = { defs={0x08048452} expr=(add[32] v5663[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v5731[32]) }
      flags = { rdonly }
    address = { defs={0x08048452} expr=(add[32] v5663[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v5731[32]) }
      flags = { rdonly }
    address = { defs={0x08048452} expr=v5663[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v5731[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048455[32] }
memory:
null state
0x8048455:ret    
registers:
    ax      = { v35397[32] }
    cx      = { v35398[32] }
    dx      = { v35399[32] }
    bx      = { v35400[32] }
    sp      = { v35402+0x8[32] }
    bp      = { v35457[32] }
    si      = { v35403[32] }
    di      = { v35404[32] }
    es      = { v35405[16] }
    cs      = { v35406[16] }
    ss      = { v35407[16] }
    ds      = { v35408[16] }
    fs      = { v35409[16] }
    gs      = { v35410[16] }
    cf      = { v35411[1] }
    ?1      = { v35412[1] }
    pf      = { v35413[1] }
    ?3      = { v35414[1] }
    af      = { v35415[1] }
    ?5      = { v35416[1] }
    zf      = { v35417[1] }
    sf      = { v35418[1] }
    tf      = { v35419[1] }
    if      = { v35420[1] }
    df      = { v35421[1] }
    of      = { v35422[1] }
    iopl0   = { v35423[1] }
    iopl1   = { v35424[1] }
    nt      = { v35425[1] }
    ?15     = { v35426[1] }
    rf      = { v35427[1] }
    vm      = { v35428[1] }
    ac      = { v35429[1] }
    vif     = { v35430[1] }
    vip     = { v35431[1] }
    id      = { v35432[1] }
    ?22     = { v35433[1] }
    ?23     = { v35434[1] }
    ?24     = { v35435[1] }
    ?25     = { v35436[1] }
    ?26     = { v35437[1] }
    ?27     = { v35438[1] }
    ?28     = { v35439[1] }
    ?29     = { v35440[1] }
    ?30     = { v35441[1] }
    ?31     = { v35442[1] }
    ip      = { v35469[32] }
memory:
    address = { v35402[32] }
      value = { v35457[32] }
      flags = { size=4; read-only }
    address = { v35402+0x4[32] }
      value = { v35469[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v5658[32] }
    cx      = { defs={} expr=v5659[32] }
    dx      = { defs={} expr=v5660[32] }
    bx      = { defs={} expr=v5661[32] }
    sp      = { defs={0x08048452,0x08048454,0x08048455} expr=(add[32] (add[32] v5663[32] 4[32]) 4[32]) }
    bp      = { defs={0x08048454} expr=v5731[32] }
    si      = { defs={} expr=v5664[32] }
    di      = { defs={} expr=v5665[32] }
    es      = { defs={} expr=v5666[16] }
    cs      = { defs={} expr=v5667[16] }
    ss      = { defs={} expr=v5668[16] }
    ds      = { defs={} expr=v5669[16] }
    fs      = { defs={} expr=v5670[16] }
    gs      = { defs={} expr=v5671[16] }
    cf      = { defs={} expr=v5672[1] }
    ?1      = { defs={} expr=v5673[1] }
    pf      = { defs={} expr=v5674[1] }
    ?3      = { defs={} expr=v5675[1] }
    af      = { defs={} expr=v5676[1] }
    ?5      = { defs={} expr=v5677[1] }
    zf      = { defs={} expr=v5678[1] }
    sf      = { defs={} expr=v5679[1] }
    tf      = { defs={} expr=v5680[1] }
    if      = { defs={} expr=v5681[1] }
    df      = { defs={} expr=v5682[1] }
    of      = { defs={} expr=v5683[1] }
    iopl0   = { defs={} expr=v5684[1] }
    iopl1   = { defs={} expr=v5685[1] }
    nt      = { defs={} expr=v5686[1] }
    ?15     = { defs={} expr=v5687[1] }
    rf      = { defs={} expr=v5688[1] }
    vm      = { defs={} expr=v5689[1] }
    ac      = { defs={} expr=v5690[1] }
    vif     = { defs={} expr=v5691[1] }
    vip     = { defs={} expr=v5692[1] }
    id      = { defs={} expr=v5693[1] }
    ?22     = { defs={} expr=v5694[1] }
    ?23     = { defs={} expr=v5695[1] }
    ?24     = { defs={} expr=v5696[1] }
    ?25     = { defs={} expr=v5697[1] }
    ?26     = { defs={} expr=v5698[1] }
    ?27     = { defs={} expr=v5699[1] }
    ?28     = { defs={} expr=v5700[1] }
    ?29     = { defs={} expr=v5701[1] }
    ?30     = { defs={} expr=v5702[1] }
    ?31     = { defs={} expr=v5703[1] }
    ip      = { defs={0x08048455} expr=v5761[32] }
memory:
init mem:
    address = { defs={0x08048452,0x08048454} expr=(add[32] (add[32] v5663[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v5761[32]) }
      flags = { rdonly }
    address = { defs={0x08048452,0x08048454} expr=(add[32] (add[32] v5663[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v5761[32]) }
      flags = { rdonly }
    address = { defs={0x08048452,0x08048454} expr=(add[32] (add[32] v5663[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v5761[32]) }
      flags = { rdonly }
    address = { defs={0x08048452,0x08048454} expr=(add[32] v5663[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v5761[32]) }
      flags = { rdonly }
    address = { defs={0x08048452} expr=(add[32] v5663[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v5731[32]) }
      flags = { rdonly }
    address = { defs={0x08048452} expr=(add[32] v5663[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v5731[32]) }
      flags = { rdonly }
    address = { defs={0x08048452} expr=(add[32] v5663[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v5731[32]) }
      flags = { rdonly }
    address = { defs={0x08048452} expr=v5663[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v5731[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
registers:
    ax      = { v35520[32] }
    cx      = { v35521[32] }
    dx      = { v35522[32] }
    bx      = { v35523[32] }
    sp      = { v35524-0x4[32] }
    bp      = { v35525[32] }
    si      = { v35526[32] }
    di      = { v35527[32] }
    es      = { v35528[16] }
    cs      = { v35529[16] }
    ss      = { v35530[16] }
    ds      = { v35531[16] }
    fs      = { v35532[16] }
    gs      = { v35533[16] }
    cf      = { v35534[1] }
    ?1      = { v35535[1] }
    pf      = { v35536[1] }
    ?3      = { v35537[1] }
    af      = { v35538[1] }
    ?5      = { v35539[1] }
    zf      = { v35540[1] }
    sf      = { v35541[1] }
    tf      = { v35542[1] }
    if      = { v35543[1] }
    df      = { v35544[1] }
    of      = { v35545[1] }
    iopl0   = { v35546[1] }
    iopl1   = { v35547[1] }
    nt      = { v35548[1] }
    ?15     = { v35549[1] }
    rf      = { v35550[1] }
    vm      = { v35551[1] }
    ac      = { v35552[1] }
    vif     = { v35553[1] }
    vip     = { v35554[1] }
    id      = { v35555[1] }
    ?22     = { v35556[1] }
    ?23     = { v35557[1] }
    ?24     = { v35558[1] }
    ?25     = { v35559[1] }
    ?26     = { v35560[1] }
    ?27     = { v35561[1] }
    ?28     = { v35562[1] }
    ?29     = { v35563[1] }
    ?30     = { v35564[1] }
    ?31     = { v35565[1] }
    ip      = { 0x8048461[32] }
memory:
    address = { v35524-0x4[32] }
      value = { v35525[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5825[32] }
    cx      = { defs={} expr=v5826[32] }
    dx      = { defs={} expr=v5827[32] }
    bx      = { defs={} expr=v5828[32] }
    sp      = { defs={0x08048460} expr=(add[32] v5829[32] -4[32]) }
    bp      = { defs={} expr=v5830[32] }
    si      = { defs={} expr=v5831[32] }
    di      = { defs={} expr=v5832[32] }
    es      = { defs={} expr=v5833[16] }
    cs      = { defs={} expr=v5834[16] }
    ss      = { defs={} expr=v5835[16] }
    ds      = { defs={} expr=v5836[16] }
    fs      = { defs={} expr=v5837[16] }
    gs      = { defs={} expr=v5838[16] }
    cf      = { defs={} expr=v5839[1] }
    ?1      = { defs={} expr=v5840[1] }
    pf      = { defs={} expr=v5841[1] }
    ?3      = { defs={} expr=v5842[1] }
    af      = { defs={} expr=v5843[1] }
    ?5      = { defs={} expr=v5844[1] }
    zf      = { defs={} expr=v5845[1] }
    sf      = { defs={} expr=v5846[1] }
    tf      = { defs={} expr=v5847[1] }
    if      = { defs={} expr=v5848[1] }
    df      = { defs={} expr=v5849[1] }
    of      = { defs={} expr=v5850[1] }
    iopl0   = { defs={} expr=v5851[1] }
    iopl1   = { defs={} expr=v5852[1] }
    nt      = { defs={} expr=v5853[1] }
    ?15     = { defs={} expr=v5854[1] }
    rf      = { defs={} expr=v5855[1] }
    vm      = { defs={} expr=v5856[1] }
    ac      = { defs={} expr=v5857[1] }
    vif     = { defs={} expr=v5858[1] }
    vip     = { defs={} expr=v5859[1] }
    id      = { defs={} expr=v5860[1] }
    ?22     = { defs={} expr=v5861[1] }
    ?23     = { defs={} expr=v5862[1] }
    ?24     = { defs={} expr=v5863[1] }
    ?25     = { defs={} expr=v5864[1] }
    ?26     = { defs={} expr=v5865[1] }
    ?27     = { defs={} expr=v5866[1] }
    ?28     = { defs={} expr=v5867[1] }
    ?29     = { defs={} expr=v5868[1] }
    ?30     = { defs={} expr=v5869[1] }
    ?31     = { defs={} expr=v5870[1] }
    ip      = { defs={0x08048460} expr=0x08048461[32] }
memory:
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 3[32]) }
      value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 2[32]) }
      value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 1[32]) }
      value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] v5829[32] -4[32]) }
      value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v5830[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048461[32] }
memory:
null state
0x8048461:mov    ebp, esp
registers:
    ax      = { v35520[32] }
    cx      = { v35521[32] }
    dx      = { v35522[32] }
    bx      = { v35523[32] }
    sp      = { v35524-0x4[32] }
    bp      = { v35524-0x4[32] }
    si      = { v35526[32] }
    di      = { v35527[32] }
    es      = { v35528[16] }
    cs      = { v35529[16] }
    ss      = { v35530[16] }
    ds      = { v35531[16] }
    fs      = { v35532[16] }
    gs      = { v35533[16] }
    cf      = { v35534[1] }
    ?1      = { v35535[1] }
    pf      = { v35536[1] }
    ?3      = { v35537[1] }
    af      = { v35538[1] }
    ?5      = { v35539[1] }
    zf      = { v35540[1] }
    sf      = { v35541[1] }
    tf      = { v35542[1] }
    if      = { v35543[1] }
    df      = { v35544[1] }
    of      = { v35545[1] }
    iopl0   = { v35546[1] }
    iopl1   = { v35547[1] }
    nt      = { v35548[1] }
    ?15     = { v35549[1] }
    rf      = { v35550[1] }
    vm      = { v35551[1] }
    ac      = { v35552[1] }
    vif     = { v35553[1] }
    vip     = { v35554[1] }
    id      = { v35555[1] }
    ?22     = { v35556[1] }
    ?23     = { v35557[1] }
    ?24     = { v35558[1] }
    ?25     = { v35559[1] }
    ?26     = { v35560[1] }
    ?27     = { v35561[1] }
    ?28     = { v35562[1] }
    ?29     = { v35563[1] }
    ?30     = { v35564[1] }
    ?31     = { v35565[1] }
    ip      = { 0x8048463[32] }
memory:
    address = { v35524-0x4[32] }
      value = { v35525[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5825[32] }
    cx      = { defs={} expr=v5826[32] }
    dx      = { defs={} expr=v5827[32] }
    bx      = { defs={} expr=v5828[32] }
    sp      = { defs={0x08048460} expr=(add[32] v5829[32] -4[32]) }
    bp      = { defs={0x08048460,0x08048461} expr=(add[32] v5829[32] -4[32]) }
    si      = { defs={} expr=v5831[32] }
    di      = { defs={} expr=v5832[32] }
    es      = { defs={} expr=v5833[16] }
    cs      = { defs={} expr=v5834[16] }
    ss      = { defs={} expr=v5835[16] }
    ds      = { defs={} expr=v5836[16] }
    fs      = { defs={} expr=v5837[16] }
    gs      = { defs={} expr=v5838[16] }
    cf      = { defs={} expr=v5839[1] }
    ?1      = { defs={} expr=v5840[1] }
    pf      = { defs={} expr=v5841[1] }
    ?3      = { defs={} expr=v5842[1] }
    af      = { defs={} expr=v5843[1] }
    ?5      = { defs={} expr=v5844[1] }
    zf      = { defs={} expr=v5845[1] }
    sf      = { defs={} expr=v5846[1] }
    tf      = { defs={} expr=v5847[1] }
    if      = { defs={} expr=v5848[1] }
    df      = { defs={} expr=v5849[1] }
    of      = { defs={} expr=v5850[1] }
    iopl0   = { defs={} expr=v5851[1] }
    iopl1   = { defs={} expr=v5852[1] }
    nt      = { defs={} expr=v5853[1] }
    ?15     = { defs={} expr=v5854[1] }
    rf      = { defs={} expr=v5855[1] }
    vm      = { defs={} expr=v5856[1] }
    ac      = { defs={} expr=v5857[1] }
    vif     = { defs={} expr=v5858[1] }
    vip     = { defs={} expr=v5859[1] }
    id      = { defs={} expr=v5860[1] }
    ?22     = { defs={} expr=v5861[1] }
    ?23     = { defs={} expr=v5862[1] }
    ?24     = { defs={} expr=v5863[1] }
    ?25     = { defs={} expr=v5864[1] }
    ?26     = { defs={} expr=v5865[1] }
    ?27     = { defs={} expr=v5866[1] }
    ?28     = { defs={} expr=v5867[1] }
    ?29     = { defs={} expr=v5868[1] }
    ?30     = { defs={} expr=v5869[1] }
    ?31     = { defs={} expr=v5870[1] }
    ip      = { defs={0x08048460,0x08048461} expr=0x08048463[32] }
memory:
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 3[32]) }
      value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 2[32]) }
      value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 1[32]) }
      value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] v5829[32] -4[32]) }
      value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v5830[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048463[32] }
memory:
null state
0x8048463:sub    esp, 0x08
registers:
    ax      = { v35520[32] }
    cx      = { v35521[32] }
    dx      = { v35522[32] }
    bx      = { v35523[32] }
    sp      = { v35524-0xc[32] }
    bp      = { v35524-0x4[32] }
    si      = { v35526[32] }
    di      = { v35527[32] }
    es      = { v35528[16] }
    cs      = { v35529[16] }
    ss      = { v35530[16] }
    ds      = { v35531[16] }
    fs      = { v35532[16] }
    gs      = { v35533[16] }
    cf      = { -v35631+0x1[1] }
    ?1      = { v35535[1] }
    pf      = { -v35621+0x1[1] }
    ?3      = { v35537[1] }
    af      = { -v35628+0x1[1] }
    ?5      = { v35539[1] }
    zf      = { v35626[1] }
    sf      = { v35624[1] }
    tf      = { v35542[1] }
    if      = { v35543[1] }
    df      = { v35544[1] }
    of      = { v35638[1] }
    iopl0   = { v35546[1] }
    iopl1   = { v35547[1] }
    nt      = { v35548[1] }
    ?15     = { v35549[1] }
    rf      = { v35550[1] }
    vm      = { v35551[1] }
    ac      = { v35552[1] }
    vif     = { v35553[1] }
    vip     = { v35554[1] }
    id      = { v35555[1] }
    ?22     = { v35556[1] }
    ?23     = { v35557[1] }
    ?24     = { v35558[1] }
    ?25     = { v35559[1] }
    ?26     = { v35560[1] }
    ?27     = { v35561[1] }
    ?28     = { v35562[1] }
    ?29     = { v35563[1] }
    ?30     = { v35564[1] }
    ?31     = { v35565[1] }
    ip      = { 0x8048466[32] }
memory:
    address = { v35524-0x4[32] }
      value = { v35525[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5825[32] }
    cx      = { defs={} expr=v5826[32] }
    dx      = { defs={} expr=v5827[32] }
    bx      = { defs={} expr=v5828[32] }
    sp      = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v5829[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048460,0x08048461} expr=(add[32] v5829[32] -4[32]) }
    si      = { defs={} expr=v5831[32] }
    di      = { defs={} expr=v5832[32] }
    es      = { defs={} expr=v5833[16] }
    cs      = { defs={} expr=v5834[16] }
    ss      = { defs={} expr=v5835[16] }
    ds      = { defs={} expr=v5836[16] }
    fs      = { defs={} expr=v5837[16] }
    gs      = { defs={} expr=v5838[16] }
    cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v5840[1] }
    pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v5842[1] }
    af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v5844[1] }
    zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v5829[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v5847[1] }
    if      = { defs={} expr=v5848[1] }
    df      = { defs={} expr=v5849[1] }
    of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v5851[1] }
    iopl1   = { defs={} expr=v5852[1] }
    nt      = { defs={} expr=v5853[1] }
    ?15     = { defs={} expr=v5854[1] }
    rf      = { defs={} expr=v5855[1] }
    vm      = { defs={} expr=v5856[1] }
    ac      = { defs={} expr=v5857[1] }
    vif     = { defs={} expr=v5858[1] }
    vip     = { defs={} expr=v5859[1] }
    id      = { defs={} expr=v5860[1] }
    ?22     = { defs={} expr=v5861[1] }
    ?23     = { defs={} expr=v5862[1] }
    ?24     = { defs={} expr=v5863[1] }
    ?25     = { defs={} expr=v5864[1] }
    ?26     = { defs={} expr=v5865[1] }
    ?27     = { defs={} expr=v5866[1] }
    ?28     = { defs={} expr=v5867[1] }
    ?29     = { defs={} expr=v5868[1] }
    ?30     = { defs={} expr=v5869[1] }
    ?31     = { defs={} expr=v5870[1] }
    ip      = { defs={0x08048460,0x08048461,0x08048463} expr=0x08048466[32] }
memory:
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 3[32]) }
      value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 2[32]) }
      value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 1[32]) }
      value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] v5829[32] -4[32]) }
      value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v5830[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048466[32] }
memory:
null state
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
    ax      = { v35520[32] }
    cx      = { v35521[32] }
    dx      = { v35522[32] }
    bx      = { v35523[32] }
    sp      = { v35524-0xc[32] }
    bp      = { v35524-0x4[32] }
    si      = { v35526[32] }
    di      = { v35527[32] }
    es      = { v35528[16] }
    cs      = { v35529[16] }
    ss      = { v35530[16] }
    ds      = { v35531[16] }
    fs      = { v35532[16] }
    gs      = { v35533[16] }
    cf      = { -v35631+0x1[1] }
    ?1      = { v35535[1] }
    pf      = { -v35621+0x1[1] }
    ?3      = { v35537[1] }
    af      = { -v35628+0x1[1] }
    ?5      = { v35539[1] }
    zf      = { v35626[1] }
    sf      = { v35624[1] }
    tf      = { v35542[1] }
    if      = { v35543[1] }
    df      = { v35544[1] }
    of      = { v35638[1] }
    iopl0   = { v35546[1] }
    iopl1   = { v35547[1] }
    nt      = { v35548[1] }
    ?15     = { v35549[1] }
    rf      = { v35550[1] }
    vm      = { v35551[1] }
    ac      = { v35552[1] }
    vif     = { v35553[1] }
    vip     = { v35554[1] }
    id      = { v35555[1] }
    ?22     = { v35556[1] }
    ?23     = { v35557[1] }
    ?24     = { v35558[1] }
    ?25     = { v35559[1] }
    ?26     = { v35560[1] }
    ?27     = { v35561[1] }
    ?28     = { v35562[1] }
    ?29     = { v35563[1] }
    ?30     = { v35564[1] }
    ?31     = { v35565[1] }
    ip      = { 0x804846d[32] }
memory:
    address = { v35524-0x4[32] }
      value = { v35525[32] }
      flags = { size=4 }
    address = { v35524-0xc[32] }
      value = { 0x80485d4[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5825[32] }
    cx      = { defs={} expr=v5826[32] }
    dx      = { defs={} expr=v5827[32] }
    bx      = { defs={} expr=v5828[32] }
    sp      = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v5829[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048460,0x08048461} expr=(add[32] v5829[32] -4[32]) }
    si      = { defs={} expr=v5831[32] }
    di      = { defs={} expr=v5832[32] }
    es      = { defs={} expr=v5833[16] }
    cs      = { defs={} expr=v5834[16] }
    ss      = { defs={} expr=v5835[16] }
    ds      = { defs={} expr=v5836[16] }
    fs      = { defs={} expr=v5837[16] }
    gs      = { defs={} expr=v5838[16] }
    cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v5840[1] }
    pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v5842[1] }
    af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v5844[1] }
    zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v5829[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v5847[1] }
    if      = { defs={} expr=v5848[1] }
    df      = { defs={} expr=v5849[1] }
    of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v5851[1] }
    iopl1   = { defs={} expr=v5852[1] }
    nt      = { defs={} expr=v5853[1] }
    ?15     = { defs={} expr=v5854[1] }
    rf      = { defs={} expr=v5855[1] }
    vm      = { defs={} expr=v5856[1] }
    ac      = { defs={} expr=v5857[1] }
    vif     = { defs={} expr=v5858[1] }
    vip     = { defs={} expr=v5859[1] }
    id      = { defs={} expr=v5860[1] }
    ?22     = { defs={} expr=v5861[1] }
    ?23     = { defs={} expr=v5862[1] }
    ?24     = { defs={} expr=v5863[1] }
    ?25     = { defs={} expr=v5864[1] }
    ?26     = { defs={} expr=v5865[1] }
    ?27     = { defs={} expr=v5866[1] }
    ?28     = { defs={} expr=v5867[1] }
    ?29     = { defs={} expr=v5868[1] }
    ?30     = { defs={} expr=v5869[1] }
    ?31     = { defs={} expr=v5870[1] }
    ip      = { defs={0x08048460,0x08048461,0x08048463,0x08048466} expr=0x0804846d[32] }
memory:
    address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) 3[32]) }
      value = { defs={0x08048466} expr=8[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) 2[32]) }
      value = { defs={0x08048466} expr=4[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) 1[32]) }
      value = { defs={0x08048466} expr=-123[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v5829[32] -4[32]) -8[32]) }
      value = { defs={0x08048466} expr=-44[8] }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 3[32]) }
      value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 2[32]) }
      value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 1[32]) }
      value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] v5829[32] -4[32]) }
      value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v5830[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804846d[32] }
memory:
null state
0x804846d:call   0x08048300<puts@plt>
registers:
    ax      = { v35520[32] }
    cx      = { v35521[32] }
    dx      = { v35522[32] }
    bx      = { v35523[32] }
    sp      = { v35524-0x10[32] }
    bp      = { v35524-0x4[32] }
    si      = { v35526[32] }
    di      = { v35527[32] }
    es      = { v35528[16] }
    cs      = { v35529[16] }
    ss      = { v35530[16] }
    ds      = { v35531[16] }
    fs      = { v35532[16] }
    gs      = { v35533[16] }
    cf      = { -v35631+0x1[1] }
    ?1      = { v35535[1] }
    pf      = { -v35621+0x1[1] }
    ?3      = { v35537[1] }
    af      = { -v35628+0x1[1] }
    ?5      = { v35539[1] }
    zf      = { v35626[1] }
    sf      = { v35624[1] }
    tf      = { v35542[1] }
    if      = { v35543[1] }
    df      = { v35544[1] }
    of      = { v35638[1] }
    iopl0   = { v35546[1] }
    iopl1   = { v35547[1] }
    nt      = { v35548[1] }
    ?15     = { v35549[1] }
    rf      = { v35550[1] }
    vm      = { v35551[1] }
    ac      = { v35552[1] }
    vif     = { v35553[1] }
    vip     = { v35554[1] }
    id      = { v35555[1] }
    ?22     = { v35556[1] }
    ?23     = { v35557[1] }
    ?24     = { v35558[1] }
    ?25     = { v35559[1] }
    ?26     = { v35560[1] }
    ?27     = { v35561[1] }
    ?28     = { v35562[1] }
    ?29     = { v35563[1] }
    ?30     = { v35564[1] }
    ?31     = { v35565[1] }
    ip      = { 0x8048300[32] }
memory:
    address = { v35524-0x4[32] }
      value = { v35525[32] }
      flags = { size=4 }
    address = { v35524-0xc[32] }
      value = { 0x80485d4[32] }
      flags = { size=4 }
    address = { v35524-0x10[32] }
      value = { 0x8048472[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v5825[32] }
    cx      = { defs={} expr=v5826[32] }
    dx      = { defs={} expr=v5827[32] }
    bx      = { defs={} expr=v5828[32] }
    sp      = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) -4[32]) }
    bp      = { defs={0x08048460,0x08048461} expr=(add[32] v5829[32] -4[32]) }
    si      = { defs={} expr=v5831[32] }
    di      = { defs={} expr=v5832[32] }
    es      = { defs={} expr=v5833[16] }
    cs      = { defs={} expr=v5834[16] }
    ss      = { defs={} expr=v5835[16] }
    ds      = { defs={} expr=v5836[16] }
    fs      = { defs={} expr=v5837[16] }
    gs      = { defs={} expr=v5838[16] }
    cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v5840[1] }
    pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v5842[1] }
    af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v5844[1] }
    zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v5829[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v5829[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v5847[1] }
    if      = { defs={} expr=v5848[1] }
    df      = { defs={} expr=v5849[1] }
    of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v5829[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v5851[1] }
    iopl1   = { defs={} expr=v5852[1] }
    nt      = { defs={} expr=v5853[1] }
    ?15     = { defs={} expr=v5854[1] }
    rf      = { defs={} expr=v5855[1] }
    vm      = { defs={} expr=v5856[1] }
    ac      = { defs={} expr=v5857[1] }
    vif     = { defs={} expr=v5858[1] }
    vip     = { defs={} expr=v5859[1] }
    id      = { defs={} expr=v5860[1] }
    ?22     = { defs={} expr=v5861[1] }
    ?23     = { defs={} expr=v5862[1] }
    ?24     = { defs={} expr=v5863[1] }
    ?25     = { defs={} expr=v5864[1] }
    ?26     = { defs={} expr=v5865[1] }
    ?27     = { defs={} expr=v5866[1] }
    ?28     = { defs={} expr=v5867[1] }
    ?29     = { defs={} expr=v5868[1] }
    ?30     = { defs={} expr=v5869[1] }
    ?31     = { defs={} expr=v5870[1] }
    ip      = { defs={0x0804846d} expr=0x08048300[32] }
memory:
    address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) -4[32]) 3[32]) }
      value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=8[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) -4[32]) 2[32]) }
      value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=4[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) -4[32]) 1[32]) }
      value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=-124[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) -4[32]) }
      value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=114[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) 3[32]) }
      value = { defs={0x08048466} expr=8[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) 2[32]) }
      value = { defs={0x08048466} expr=4[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] (add[32] v5829[32] -4[32]) -8[32]) 1[32]) }
      value = { defs={0x08048466} expr=-123[8] }
      flags = { }
    address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v5829[32] -4[32]) -8[32]) }
      value = { defs={0x08048466} expr=-44[8] }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 3[32]) }
      value = { defs={0x08048460} expr=(extract[8] 24[32] 32[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 2[32]) }
      value = { defs={0x08048460} expr=(extract[8] 16[32] 24[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] (add[32] v5829[32] -4[32]) 1[32]) }
      value = { defs={0x08048460} expr=(extract[8] 8[32] 16[32] v5830[32]) }
      flags = { }
    address = { defs={0x08048460} expr=(add[32] v5829[32] -4[32]) }
      value = { defs={0x08048460} expr=(extract[8] 0[32] 8[32] v5830[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048300[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
registers:
    ax      = { v35705[32] }
    cx      = { v35706[32] }
    dx      = { v35707[32] }
    bx      = { v35708[32] }
    sp      = { v35709[32] }
    bp      = { v35710[32] }
    si      = { v35711[32] }
    di      = { v35712[32] }
    es      = { v35713[16] }
    cs      = { v35714[16] }
    ss      = { v35715[16] }
    ds      = { v35716[16] }
    fs      = { v35717[16] }
    gs      = { v35718[16] }
    cf      = { v35719[1] }
    ?1      = { v35720[1] }
    pf      = { v35721[1] }
    ?3      = { v35722[1] }
    af      = { v35723[1] }
    ?5      = { v35724[1] }
    zf      = { v35725[1] }
    sf      = { v35726[1] }
    tf      = { v35727[1] }
    if      = { v35728[1] }
    df      = { v35729[1] }
    of      = { v35730[1] }
    iopl0   = { v35731[1] }
    iopl1   = { v35732[1] }
    nt      = { v35733[1] }
    ?15     = { v35734[1] }
    rf      = { v35735[1] }
    vm      = { v35736[1] }
    ac      = { v35737[1] }
    vif     = { v35738[1] }
    vip     = { v35739[1] }
    id      = { v35740[1] }
    ?22     = { v35741[1] }
    ?23     = { v35742[1] }
    ?24     = { v35743[1] }
    ?25     = { v35744[1] }
    ?26     = { v35745[1] }
    ?27     = { v35746[1] }
    ?28     = { v35747[1] }
    ?29     = { v35748[1] }
    ?30     = { v35749[1] }
    ?31     = { v35750[1] }
    ip      = { 0x8048479[32] }
memory:
    address = { v35709[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6093[32] }
    cx      = { defs={} expr=v6094[32] }
    dx      = { defs={} expr=v6095[32] }
    bx      = { defs={} expr=v6096[32] }
    sp      = { defs={} expr=v6097[32] }
    bp      = { defs={} expr=v6098[32] }
    si      = { defs={} expr=v6099[32] }
    di      = { defs={} expr=v6100[32] }
    es      = { defs={} expr=v6101[16] }
    cs      = { defs={} expr=v6102[16] }
    ss      = { defs={} expr=v6103[16] }
    ds      = { defs={} expr=v6104[16] }
    fs      = { defs={} expr=v6105[16] }
    gs      = { defs={} expr=v6106[16] }
    cf      = { defs={} expr=v6107[1] }
    ?1      = { defs={} expr=v6108[1] }
    pf      = { defs={} expr=v6109[1] }
    ?3      = { defs={} expr=v6110[1] }
    af      = { defs={} expr=v6111[1] }
    ?5      = { defs={} expr=v6112[1] }
    zf      = { defs={} expr=v6113[1] }
    sf      = { defs={} expr=v6114[1] }
    tf      = { defs={} expr=v6115[1] }
    if      = { defs={} expr=v6116[1] }
    df      = { defs={} expr=v6117[1] }
    of      = { defs={} expr=v6118[1] }
    iopl0   = { defs={} expr=v6119[1] }
    iopl1   = { defs={} expr=v6120[1] }
    nt      = { defs={} expr=v6121[1] }
    ?15     = { defs={} expr=v6122[1] }
    rf      = { defs={} expr=v6123[1] }
    vm      = { defs={} expr=v6124[1] }
    ac      = { defs={} expr=v6125[1] }
    vif     = { defs={} expr=v6126[1] }
    vip     = { defs={} expr=v6127[1] }
    id      = { defs={} expr=v6128[1] }
    ?22     = { defs={} expr=v6129[1] }
    ?23     = { defs={} expr=v6130[1] }
    ?24     = { defs={} expr=v6131[1] }
    ?25     = { defs={} expr=v6132[1] }
    ?26     = { defs={} expr=v6133[1] }
    ?27     = { defs={} expr=v6134[1] }
    ?28     = { defs={} expr=v6135[1] }
    ?29     = { defs={} expr=v6136[1] }
    ?30     = { defs={} expr=v6137[1] }
    ?31     = { defs={} expr=v6138[1] }
    ip      = { defs={0x08048472} expr=0x08048479[32] }
memory:
    address = { defs={} expr=(add[32] v6097[32] 3[32]) }
      value = { defs={0x08048472} expr=0[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6097[32] 2[32]) }
      value = { defs={0x08048472} expr=0[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6097[32] 1[32]) }
      value = { defs={0x08048472} expr=0[8] }
      flags = { }
    address = { defs={} expr=v6097[32] }
      value = { defs={0x08048472} expr=0[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048479[32] }
memory:
null state
0x8048479:call   0x08048320<_exit@plt>
registers:
    ax      = { v35705[32] }
    cx      = { v35706[32] }
    dx      = { v35707[32] }
    bx      = { v35708[32] }
    sp      = { v35709-0x4[32] }
    bp      = { v35710[32] }
    si      = { v35711[32] }
    di      = { v35712[32] }
    es      = { v35713[16] }
    cs      = { v35714[16] }
    ss      = { v35715[16] }
    ds      = { v35716[16] }
    fs      = { v35717[16] }
    gs      = { v35718[16] }
    cf      = { v35719[1] }
    ?1      = { v35720[1] }
    pf      = { v35721[1] }
    ?3      = { v35722[1] }
    af      = { v35723[1] }
    ?5      = { v35724[1] }
    zf      = { v35725[1] }
    sf      = { v35726[1] }
    tf      = { v35727[1] }
    if      = { v35728[1] }
    df      = { v35729[1] }
    of      = { v35730[1] }
    iopl0   = { v35731[1] }
    iopl1   = { v35732[1] }
    nt      = { v35733[1] }
    ?15     = { v35734[1] }
    rf      = { v35735[1] }
    vm      = { v35736[1] }
    ac      = { v35737[1] }
    vif     = { v35738[1] }
    vip     = { v35739[1] }
    id      = { v35740[1] }
    ?22     = { v35741[1] }
    ?23     = { v35742[1] }
    ?24     = { v35743[1] }
    ?25     = { v35744[1] }
    ?26     = { v35745[1] }
    ?27     = { v35746[1] }
    ?28     = { v35747[1] }
    ?29     = { v35748[1] }
    ?30     = { v35749[1] }
    ?31     = { v35750[1] }
    ip      = { 0x8048320[32] }
memory:
    address = { v35709[32] }
      value = { 0x0[32] }
      flags = { size=4 }
    address = { v35709-0x4[32] }
      value = { 0x804847e[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6093[32] }
    cx      = { defs={} expr=v6094[32] }
    dx      = { defs={} expr=v6095[32] }
    bx      = { defs={} expr=v6096[32] }
    sp      = { defs={0x08048479} expr=(add[32] v6097[32] -4[32]) }
    bp      = { defs={} expr=v6098[32] }
    si      = { defs={} expr=v6099[32] }
    di      = { defs={} expr=v6100[32] }
    es      = { defs={} expr=v6101[16] }
    cs      = { defs={} expr=v6102[16] }
    ss      = { defs={} expr=v6103[16] }
    ds      = { defs={} expr=v6104[16] }
    fs      = { defs={} expr=v6105[16] }
    gs      = { defs={} expr=v6106[16] }
    cf      = { defs={} expr=v6107[1] }
    ?1      = { defs={} expr=v6108[1] }
    pf      = { defs={} expr=v6109[1] }
    ?3      = { defs={} expr=v6110[1] }
    af      = { defs={} expr=v6111[1] }
    ?5      = { defs={} expr=v6112[1] }
    zf      = { defs={} expr=v6113[1] }
    sf      = { defs={} expr=v6114[1] }
    tf      = { defs={} expr=v6115[1] }
    if      = { defs={} expr=v6116[1] }
    df      = { defs={} expr=v6117[1] }
    of      = { defs={} expr=v6118[1] }
    iopl0   = { defs={} expr=v6119[1] }
    iopl1   = { defs={} expr=v6120[1] }
    nt      = { defs={} expr=v6121[1] }
    ?15     = { defs={} expr=v6122[1] }
    rf      = { defs={} expr=v6123[1] }
    vm      = { defs={} expr=v6124[1] }
    ac      = { defs={} expr=v6125[1] }
    vif     = { defs={} expr=v6126[1] }
    vip     = { defs={} expr=v6127[1] }
    id      = { defs={} expr=v6128[1] }
    ?22     = { defs={} expr=v6129[1] }
    ?23     = { defs={} expr=v6130[1] }
    ?24     = { defs={} expr=v6131[1] }
    ?25     = { defs={} expr=v6132[1] }
    ?26     = { defs={} expr=v6133[1] }
    ?27     = { defs={} expr=v6134[1] }
    ?28     = { defs={} expr=v6135[1] }
    ?29     = { defs={} expr=v6136[1] }
    ?30     = { defs={} expr=v6137[1] }
    ?31     = { defs={} expr=v6138[1] }
    ip      = { defs={0x08048479} expr=0x08048320[32] }
memory:
    address = { defs={0x08048479} expr=(add[32] (add[32] v6097[32] -4[32]) 3[32]) }
      value = { defs={0x08048472,0x08048479} expr=8[8] }
      flags = { }
    address = { defs={0x08048479} expr=(add[32] (add[32] v6097[32] -4[32]) 2[32]) }
      value = { defs={0x08048472,0x08048479} expr=4[8] }
      flags = { }
    address = { defs={0x08048479} expr=(add[32] (add[32] v6097[32] -4[32]) 1[32]) }
      value = { defs={0x08048472,0x08048479} expr=-124[8] }
      flags = { }
    address = { defs={0x08048479} expr=(add[32] v6097[32] -4[32]) }
      value = { defs={0x08048472,0x08048479} expr=126[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6097[32] 3[32]) }
      value = { defs={0x08048472} expr=0[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6097[32] 2[32]) }
      value = { defs={0x08048472} expr=0[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6097[32] 1[32]) }
      value = { defs={0x08048472} expr=0[8] }
      flags = { }
    address = { defs={} expr=v6097[32] }
      value = { defs={0x08048472} expr=0[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048320[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
registers:
    ax      = { v35817[32] }
    cx      = { v35818[32] }
    dx      = { v35819[32] }
    bx      = { v35820[32] }
    sp      = { v35821-0x4[32] }
    bp      = { v35822[32] }
    si      = { v35823[32] }
    di      = { v35824[32] }
    es      = { v35825[16] }
    cs      = { v35826[16] }
    ss      = { v35827[16] }
    ds      = { v35828[16] }
    fs      = { v35829[16] }
    gs      = { v35830[16] }
    cf      = { v35831[1] }
    ?1      = { v35832[1] }
    pf      = { v35833[1] }
    ?3      = { v35834[1] }
    af      = { v35835[1] }
    ?5      = { v35836[1] }
    zf      = { v35837[1] }
    sf      = { v35838[1] }
    tf      = { v35839[1] }
    if      = { v35840[1] }
    df      = { v35841[1] }
    of      = { v35842[1] }
    iopl0   = { v35843[1] }
    iopl1   = { v35844[1] }
    nt      = { v35845[1] }
    ?15     = { v35846[1] }
    rf      = { v35847[1] }
    vm      = { v35848[1] }
    ac      = { v35849[1] }
    vif     = { v35850[1] }
    vip     = { v35851[1] }
    id      = { v35852[1] }
    ?22     = { v35853[1] }
    ?23     = { v35854[1] }
    ?24     = { v35855[1] }
    ?25     = { v35856[1] }
    ?26     = { v35857[1] }
    ?27     = { v35858[1] }
    ?28     = { v35859[1] }
    ?29     = { v35860[1] }
    ?30     = { v35861[1] }
    ?31     = { v35862[1] }
    ip      = { 0x8048481[32] }
memory:
    address = { v35821-0x4[32] }
      value = { v35822[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6235[32] }
    cx      = { defs={} expr=v6236[32] }
    dx      = { defs={} expr=v6237[32] }
    bx      = { defs={} expr=v6238[32] }
    sp      = { defs={0x08048480} expr=(add[32] v6239[32] -4[32]) }
    bp      = { defs={} expr=v6240[32] }
    si      = { defs={} expr=v6241[32] }
    di      = { defs={} expr=v6242[32] }
    es      = { defs={} expr=v6243[16] }
    cs      = { defs={} expr=v6244[16] }
    ss      = { defs={} expr=v6245[16] }
    ds      = { defs={} expr=v6246[16] }
    fs      = { defs={} expr=v6247[16] }
    gs      = { defs={} expr=v6248[16] }
    cf      = { defs={} expr=v6249[1] }
    ?1      = { defs={} expr=v6250[1] }
    pf      = { defs={} expr=v6251[1] }
    ?3      = { defs={} expr=v6252[1] }
    af      = { defs={} expr=v6253[1] }
    ?5      = { defs={} expr=v6254[1] }
    zf      = { defs={} expr=v6255[1] }
    sf      = { defs={} expr=v6256[1] }
    tf      = { defs={} expr=v6257[1] }
    if      = { defs={} expr=v6258[1] }
    df      = { defs={} expr=v6259[1] }
    of      = { defs={} expr=v6260[1] }
    iopl0   = { defs={} expr=v6261[1] }
    iopl1   = { defs={} expr=v6262[1] }
    nt      = { defs={} expr=v6263[1] }
    ?15     = { defs={} expr=v6264[1] }
    rf      = { defs={} expr=v6265[1] }
    vm      = { defs={} expr=v6266[1] }
    ac      = { defs={} expr=v6267[1] }
    vif     = { defs={} expr=v6268[1] }
    vip     = { defs={} expr=v6269[1] }
    id      = { defs={} expr=v6270[1] }
    ?22     = { defs={} expr=v6271[1] }
    ?23     = { defs={} expr=v6272[1] }
    ?24     = { defs={} expr=v6273[1] }
    ?25     = { defs={} expr=v6274[1] }
    ?26     = { defs={} expr=v6275[1] }
    ?27     = { defs={} expr=v6276[1] }
    ?28     = { defs={} expr=v6277[1] }
    ?29     = { defs={} expr=v6278[1] }
    ?30     = { defs={} expr=v6279[1] }
    ?31     = { defs={} expr=v6280[1] }
    ip      = { defs={0x08048480} expr=0x08048481[32] }
memory:
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 3[32]) }
      value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 2[32]) }
      value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 1[32]) }
      value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] v6239[32] -4[32]) }
      value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v6240[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048481[32] }
memory:
null state
0x8048481:mov    ebp, esp
registers:
    ax      = { v35817[32] }
    cx      = { v35818[32] }
    dx      = { v35819[32] }
    bx      = { v35820[32] }
    sp      = { v35821-0x4[32] }
    bp      = { v35821-0x4[32] }
    si      = { v35823[32] }
    di      = { v35824[32] }
    es      = { v35825[16] }
    cs      = { v35826[16] }
    ss      = { v35827[16] }
    ds      = { v35828[16] }
    fs      = { v35829[16] }
    gs      = { v35830[16] }
    cf      = { v35831[1] }
    ?1      = { v35832[1] }
    pf      = { v35833[1] }
    ?3      = { v35834[1] }
    af      = { v35835[1] }
    ?5      = { v35836[1] }
    zf      = { v35837[1] }
    sf      = { v35838[1] }
    tf      = { v35839[1] }
    if      = { v35840[1] }
    df      = { v35841[1] }
    of      = { v35842[1] }
    iopl0   = { v35843[1] }
    iopl1   = { v35844[1] }
    nt      = { v35845[1] }
    ?15     = { v35846[1] }
    rf      = { v35847[1] }
    vm      = { v35848[1] }
    ac      = { v35849[1] }
    vif     = { v35850[1] }
    vip     = { v35851[1] }
    id      = { v35852[1] }
    ?22     = { v35853[1] }
    ?23     = { v35854[1] }
    ?24     = { v35855[1] }
    ?25     = { v35856[1] }
    ?26     = { v35857[1] }
    ?27     = { v35858[1] }
    ?28     = { v35859[1] }
    ?29     = { v35860[1] }
    ?30     = { v35861[1] }
    ?31     = { v35862[1] }
    ip      = { 0x8048483[32] }
memory:
    address = { v35821-0x4[32] }
      value = { v35822[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6235[32] }
    cx      = { defs={} expr=v6236[32] }
    dx      = { defs={} expr=v6237[32] }
    bx      = { defs={} expr=v6238[32] }
    sp      = { defs={0x08048480} expr=(add[32] v6239[32] -4[32]) }
    bp      = { defs={0x08048480,0x08048481} expr=(add[32] v6239[32] -4[32]) }
    si      = { defs={} expr=v6241[32] }
    di      = { defs={} expr=v6242[32] }
    es      = { defs={} expr=v6243[16] }
    cs      = { defs={} expr=v6244[16] }
    ss      = { defs={} expr=v6245[16] }
    ds      = { defs={} expr=v6246[16] }
    fs      = { defs={} expr=v6247[16] }
    gs      = { defs={} expr=v6248[16] }
    cf      = { defs={} expr=v6249[1] }
    ?1      = { defs={} expr=v6250[1] }
    pf      = { defs={} expr=v6251[1] }
    ?3      = { defs={} expr=v6252[1] }
    af      = { defs={} expr=v6253[1] }
    ?5      = { defs={} expr=v6254[1] }
    zf      = { defs={} expr=v6255[1] }
    sf      = { defs={} expr=v6256[1] }
    tf      = { defs={} expr=v6257[1] }
    if      = { defs={} expr=v6258[1] }
    df      = { defs={} expr=v6259[1] }
    of      = { defs={} expr=v6260[1] }
    iopl0   = { defs={} expr=v6261[1] }
    iopl1   = { defs={} expr=v6262[1] }
    nt      = { defs={} expr=v6263[1] }
    ?15     = { defs={} expr=v6264[1] }
    rf      = { defs={} expr=v6265[1] }
    vm      = { defs={} expr=v6266[1] }
    ac      = { defs={} expr=v6267[1] }
    vif     = { defs={} expr=v6268[1] }
    vip     = { defs={} expr=v6269[1] }
    id      = { defs={} expr=v6270[1] }
    ?22     = { defs={} expr=v6271[1] }
    ?23     = { defs={} expr=v6272[1] }
    ?24     = { defs={} expr=v6273[1] }
    ?25     = { defs={} expr=v6274[1] }
    ?26     = { defs={} expr=v6275[1] }
    ?27     = { defs={} expr=v6276[1] }
    ?28     = { defs={} expr=v6277[1] }
    ?29     = { defs={} expr=v6278[1] }
    ?30     = { defs={} expr=v6279[1] }
    ?31     = { defs={} expr=v6280[1] }
    ip      = { defs={0x08048480,0x08048481} expr=0x08048483[32] }
memory:
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 3[32]) }
      value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 2[32]) }
      value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 1[32]) }
      value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] v6239[32] -4[32]) }
      value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v6240[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048483[32] }
memory:
null state
0x8048483:sub    esp, 0x08
registers:
    ax      = { v35817[32] }
    cx      = { v35818[32] }
    dx      = { v35819[32] }
    bx      = { v35820[32] }
    sp      = { v35821-0xc[32] }
    bp      = { v35821-0x4[32] }
    si      = { v35823[32] }
    di      = { v35824[32] }
    es      = { v35825[16] }
    cs      = { v35826[16] }
    ss      = { v35827[16] }
    ds      = { v35828[16] }
    fs      = { v35829[16] }
    gs      = { v35830[16] }
    cf      = { -v35928+0x1[1] }
    ?1      = { v35832[1] }
    pf      = { -v35918+0x1[1] }
    ?3      = { v35834[1] }
    af      = { -v35925+0x1[1] }
    ?5      = { v35836[1] }
    zf      = { v35923[1] }
    sf      = { v35921[1] }
    tf      = { v35839[1] }
    if      = { v35840[1] }
    df      = { v35841[1] }
    of      = { v35935[1] }
    iopl0   = { v35843[1] }
    iopl1   = { v35844[1] }
    nt      = { v35845[1] }
    ?15     = { v35846[1] }
    rf      = { v35847[1] }
    vm      = { v35848[1] }
    ac      = { v35849[1] }
    vif     = { v35850[1] }
    vip     = { v35851[1] }
    id      = { v35852[1] }
    ?22     = { v35853[1] }
    ?23     = { v35854[1] }
    ?24     = { v35855[1] }
    ?25     = { v35856[1] }
    ?26     = { v35857[1] }
    ?27     = { v35858[1] }
    ?28     = { v35859[1] }
    ?29     = { v35860[1] }
    ?30     = { v35861[1] }
    ?31     = { v35862[1] }
    ip      = { 0x8048486[32] }
memory:
    address = { v35821-0x4[32] }
      value = { v35822[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6235[32] }
    cx      = { defs={} expr=v6236[32] }
    dx      = { defs={} expr=v6237[32] }
    bx      = { defs={} expr=v6238[32] }
    sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v6239[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048480,0x08048481} expr=(add[32] v6239[32] -4[32]) }
    si      = { defs={} expr=v6241[32] }
    di      = { defs={} expr=v6242[32] }
    es      = { defs={} expr=v6243[16] }
    cs      = { defs={} expr=v6244[16] }
    ss      = { defs={} expr=v6245[16] }
    ds      = { defs={} expr=v6246[16] }
    fs      = { defs={} expr=v6247[16] }
    gs      = { defs={} expr=v6248[16] }
    cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v6250[1] }
    pf      = { defs={0x08048480,0x08048483} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6239[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6239[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]))))))) }
    ?3      = { defs={} expr=v6252[1] }
    af      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) 4294967288[33])))))) }
    ?5      = { defs={} expr=v6254[1] }
    zf      = { defs={0x08048480,0x08048483} expr=(zerop[1] (add[32] (add[32] v6239[32] -4[32]) -8[32])) }
    sf      = { defs={0x08048480,0x08048483} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v6239[32] -4[32]) -8[32])) }
    tf      = { defs={} expr=v6257[1] }
    if      = { defs={} expr=v6258[1] }
    df      = { defs={} expr=v6259[1] }
    of      = { defs={0x08048480,0x08048483} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) 4294967288[33])))))) }
    iopl0   = { defs={} expr=v6261[1] }
    iopl1   = { defs={} expr=v6262[1] }
    nt      = { defs={} expr=v6263[1] }
    ?15     = { defs={} expr=v6264[1] }
    rf      = { defs={} expr=v6265[1] }
    vm      = { defs={} expr=v6266[1] }
    ac      = { defs={} expr=v6267[1] }
    vif     = { defs={} expr=v6268[1] }
    vip     = { defs={} expr=v6269[1] }
    id      = { defs={} expr=v6270[1] }
    ?22     = { defs={} expr=v6271[1] }
    ?23     = { defs={} expr=v6272[1] }
    ?24     = { defs={} expr=v6273[1] }
    ?25     = { defs={} expr=v6274[1] }
    ?26     = { defs={} expr=v6275[1] }
    ?27     = { defs={} expr=v6276[1] }
    ?28     = { defs={} expr=v6277[1] }
    ?29     = { defs={} expr=v6278[1] }
    ?30     = { defs={} expr=v6279[1] }
    ?31     = { defs={} expr=v6280[1] }
    ip      = { defs={0x08048480,0x08048481,0x08048483} expr=0x08048486[32] }
memory:
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 3[32]) }
      value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 2[32]) }
      value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 1[32]) }
      value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] v6239[32] -4[32]) }
      value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v6240[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048486[32] }
memory:
null state
0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]
registers:
    ax      = { v35817[32] }
    cx      = { v35818[32] }
    dx      = { v35819[32] }
    bx      = { v35820[32] }
    sp      = { v35821-0xc[32] }
    bp      = { v35821-0x4[32] }
    si      = { v35823[32] }
    di      = { v35824[32] }
    es      = { v35825[16] }
    cs      = { v35826[16] }
    ss      = { v35827[16] }
    ds      = { v35828[16] }
    fs      = { v35829[16] }
    gs      = { v35830[16] }
    cf      = { -v35928+0x1[1] }
    ?1      = { v35832[1] }
    pf      = { -v35978+0x1[1] }
    ?3      = { v35834[1] }
    af      = { v35985[1] }
    ?5      = { v35836[1] }
    zf      = { v35983[1] }
    sf      = { v35981[1] }
    tf      = { v35839[1] }
    if      = { v35840[1] }
    df      = { v35841[1] }
    of      = { v35991[1] }
    iopl0   = { v35843[1] }
    iopl1   = { v35844[1] }
    nt      = { v35845[1] }
    ?15     = { v35846[1] }
    rf      = { v35847[1] }
    vm      = { v35848[1] }
    ac      = { v35849[1] }
    vif     = { v35850[1] }
    vip     = { v35851[1] }
    id      = { v35852[1] }
    ?22     = { v35853[1] }
    ?23     = { v35854[1] }
    ?24     = { v35855[1] }
    ?25     = { v35856[1] }
    ?26     = { v35857[1] }
    ?27     = { v35858[1] }
    ?28     = { v35859[1] }
    ?29     = { v35860[1] }
    ?30     = { v35861[1] }
    ?31     = { v35862[1] }
    ip      = { 0x804848c[32] }
memory:
    address = { v35821-0x4[32] }
      value = { v35822[32] }
      flags = { size=4; clobbered }
    address = { 0x80496f8[32] }
      value = { v35943+0x1[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6235[32] }
    cx      = { defs={} expr=v6236[32] }
    dx      = { defs={} expr=v6237[32] }
    bx      = { defs={} expr=v6238[32] }
    sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v6239[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048480,0x08048481} expr=(add[32] v6239[32] -4[32]) }
    si      = { defs={} expr=v6241[32] }
    di      = { defs={} expr=v6242[32] }
    es      = { defs={} expr=v6243[16] }
    cs      = { defs={} expr=v6244[16] }
    ss      = { defs={} expr=v6245[16] }
    ds      = { defs={} expr=v6246[16] }
    fs      = { defs={} expr=v6247[16] }
    gs      = { defs={} expr=v6248[16] }
    cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v6250[1] }
    pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))))))) }
    ?3      = { defs={} expr=v6252[1] }
    af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33]))))) }
    ?5      = { defs={} expr=v6254[1] }
    zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v6418[32] 1[32])) }
    sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v6418[32] 1[32])) }
    tf      = { defs={} expr=v6257[1] }
    if      = { defs={} expr=v6258[1] }
    df      = { defs={} expr=v6259[1] }
    of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33])))))) }
    iopl0   = { defs={} expr=v6261[1] }
    iopl1   = { defs={} expr=v6262[1] }
    nt      = { defs={} expr=v6263[1] }
    ?15     = { defs={} expr=v6264[1] }
    rf      = { defs={} expr=v6265[1] }
    vm      = { defs={} expr=v6266[1] }
    ac      = { defs={} expr=v6267[1] }
    vif     = { defs={} expr=v6268[1] }
    vip     = { defs={} expr=v6269[1] }
    id      = { defs={} expr=v6270[1] }
    ?22     = { defs={} expr=v6271[1] }
    ?23     = { defs={} expr=v6272[1] }
    ?24     = { defs={} expr=v6273[1] }
    ?25     = { defs={} expr=v6274[1] }
    ?26     = { defs={} expr=v6275[1] }
    ?27     = { defs={} expr=v6276[1] }
    ?28     = { defs={} expr=v6277[1] }
    ?29     = { defs={} expr=v6278[1] }
    ?30     = { defs={} expr=v6279[1] }
    ?31     = { defs={} expr=v6280[1] }
    ip      = { defs={0x08048480,0x08048481,0x08048483,0x08048486} expr=0x0804848c[32] }
memory:
    address = { defs={0x08048486} expr=0x080496fb[32] }
      value = { defs={0x08048486} expr=(extract[8] 24[32] 32[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496fa[32] }
      value = { defs={0x08048486} expr=(extract[8] 16[32] 24[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496f9[32] }
      value = { defs={0x08048486} expr=(extract[8] 8[32] 16[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496f8[32] }
      value = { defs={0x08048486} expr=(extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 3[32]) }
      value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 2[32]) }
      value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 1[32]) }
      value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] v6239[32] -4[32]) }
      value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v6240[32]) }
      flags = { }
init mem:
    address = { defs={0x08048486} expr=0x080496fb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496fa[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496f9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496f8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v6418[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804848c[32] }
memory:
null state
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
    ax      = { v35817[32] }
    cx      = { v35818[32] }
    dx      = { v35819[32] }
    bx      = { v35820[32] }
    sp      = { v35821-0xc[32] }
    bp      = { v35821-0x4[32] }
    si      = { v35823[32] }
    di      = { v35824[32] }
    es      = { v35825[16] }
    cs      = { v35826[16] }
    ss      = { v35827[16] }
    ds      = { v35828[16] }
    fs      = { v35829[16] }
    gs      = { v35830[16] }
    cf      = { -v35928+0x1[1] }
    ?1      = { v35832[1] }
    pf      = { -v35978+0x1[1] }
    ?3      = { v35834[1] }
    af      = { v35985[1] }
    ?5      = { v35836[1] }
    zf      = { v35983[1] }
    sf      = { v35981[1] }
    tf      = { v35839[1] }
    if      = { v35840[1] }
    df      = { v35841[1] }
    of      = { v35991[1] }
    iopl0   = { v35843[1] }
    iopl1   = { v35844[1] }
    nt      = { v35845[1] }
    ?15     = { v35846[1] }
    rf      = { v35847[1] }
    vm      = { v35848[1] }
    ac      = { v35849[1] }
    vif     = { v35850[1] }
    vip     = { v35851[1] }
    id      = { v35852[1] }
    ?22     = { v35853[1] }
    ?23     = { v35854[1] }
    ?24     = { v35855[1] }
    ?25     = { v35856[1] }
    ?26     = { v35857[1] }
    ?27     = { v35858[1] }
    ?28     = { v35859[1] }
    ?29     = { v35860[1] }
    ?30     = { v35861[1] }
    ?31     = { v35862[1] }
    ip      = { 0x8048493[32] }
memory:
    address = { v35821-0x4[32] }
      value = { v35822[32] }
      flags = { size=4; clobbered }
    address = { 0x80496f8[32] }
      value = { v35943+0x1[32] }
      flags = { size=4; clobbered }
    address = { v35821-0xc[32] }
      value = { 0x80485d4[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6235[32] }
    cx      = { defs={} expr=v6236[32] }
    dx      = { defs={} expr=v6237[32] }
    bx      = { defs={} expr=v6238[32] }
    sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v6239[32] -4[32]) -8[32]) }
    bp      = { defs={0x08048480,0x08048481} expr=(add[32] v6239[32] -4[32]) }
    si      = { defs={} expr=v6241[32] }
    di      = { defs={} expr=v6242[32] }
    es      = { defs={} expr=v6243[16] }
    cs      = { defs={} expr=v6244[16] }
    ss      = { defs={} expr=v6245[16] }
    ds      = { defs={} expr=v6246[16] }
    fs      = { defs={} expr=v6247[16] }
    gs      = { defs={} expr=v6248[16] }
    cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v6250[1] }
    pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))))))) }
    ?3      = { defs={} expr=v6252[1] }
    af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33]))))) }
    ?5      = { defs={} expr=v6254[1] }
    zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v6418[32] 1[32])) }
    sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v6418[32] 1[32])) }
    tf      = { defs={} expr=v6257[1] }
    if      = { defs={} expr=v6258[1] }
    df      = { defs={} expr=v6259[1] }
    of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33])))))) }
    iopl0   = { defs={} expr=v6261[1] }
    iopl1   = { defs={} expr=v6262[1] }
    nt      = { defs={} expr=v6263[1] }
    ?15     = { defs={} expr=v6264[1] }
    rf      = { defs={} expr=v6265[1] }
    vm      = { defs={} expr=v6266[1] }
    ac      = { defs={} expr=v6267[1] }
    vif     = { defs={} expr=v6268[1] }
    vip     = { defs={} expr=v6269[1] }
    id      = { defs={} expr=v6270[1] }
    ?22     = { defs={} expr=v6271[1] }
    ?23     = { defs={} expr=v6272[1] }
    ?24     = { defs={} expr=v6273[1] }
    ?25     = { defs={} expr=v6274[1] }
    ?26     = { defs={} expr=v6275[1] }
    ?27     = { defs={} expr=v6276[1] }
    ?28     = { defs={} expr=v6277[1] }
    ?29     = { defs={} expr=v6278[1] }
    ?30     = { defs={} expr=v6279[1] }
    ?31     = { defs={} expr=v6280[1] }
    ip      = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c} expr=0x08048493[32] }
memory:
    address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) 3[32]) }
      value = { defs={0x0804848c} expr=8[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) 2[32]) }
      value = { defs={0x0804848c} expr=4[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) 1[32]) }
      value = { defs={0x0804848c} expr=-123[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v6239[32] -4[32]) -8[32]) }
      value = { defs={0x0804848c} expr=-44[8] }
      flags = { }
    address = { defs={0x08048486} expr=0x080496fb[32] }
      value = { defs={0x08048486} expr=(extract[8] 24[32] 32[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496fa[32] }
      value = { defs={0x08048486} expr=(extract[8] 16[32] 24[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496f9[32] }
      value = { defs={0x08048486} expr=(extract[8] 8[32] 16[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496f8[32] }
      value = { defs={0x08048486} expr=(extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 3[32]) }
      value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 2[32]) }
      value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 1[32]) }
      value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] v6239[32] -4[32]) }
      value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v6240[32]) }
      flags = { }
init mem:
    address = { defs={0x08048486} expr=0x080496fb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496fa[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496f9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496f8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v6418[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048493[32] }
memory:
null state
0x8048493:call   0x08048300<puts@plt>
registers:
    ax      = { v35817[32] }
    cx      = { v35818[32] }
    dx      = { v35819[32] }
    bx      = { v35820[32] }
    sp      = { v35821-0x10[32] }
    bp      = { v35821-0x4[32] }
    si      = { v35823[32] }
    di      = { v35824[32] }
    es      = { v35825[16] }
    cs      = { v35826[16] }
    ss      = { v35827[16] }
    ds      = { v35828[16] }
    fs      = { v35829[16] }
    gs      = { v35830[16] }
    cf      = { -v35928+0x1[1] }
    ?1      = { v35832[1] }
    pf      = { -v35978+0x1[1] }
    ?3      = { v35834[1] }
    af      = { v35985[1] }
    ?5      = { v35836[1] }
    zf      = { v35983[1] }
    sf      = { v35981[1] }
    tf      = { v35839[1] }
    if      = { v35840[1] }
    df      = { v35841[1] }
    of      = { v35991[1] }
    iopl0   = { v35843[1] }
    iopl1   = { v35844[1] }
    nt      = { v35845[1] }
    ?15     = { v35846[1] }
    rf      = { v35847[1] }
    vm      = { v35848[1] }
    ac      = { v35849[1] }
    vif     = { v35850[1] }
    vip     = { v35851[1] }
    id      = { v35852[1] }
    ?22     = { v35853[1] }
    ?23     = { v35854[1] }
    ?24     = { v35855[1] }
    ?25     = { v35856[1] }
    ?26     = { v35857[1] }
    ?27     = { v35858[1] }
    ?28     = { v35859[1] }
    ?29     = { v35860[1] }
    ?30     = { v35861[1] }
    ?31     = { v35862[1] }
    ip      = { 0x8048300[32] }
memory:
    address = { v35821-0x4[32] }
      value = { v35822[32] }
      flags = { size=4; clobbered }
    address = { 0x80496f8[32] }
      value = { v35943+0x1[32] }
      flags = { size=4; clobbered }
    address = { v35821-0xc[32] }
      value = { 0x80485d4[32] }
      flags = { size=4 }
    address = { v35821-0x10[32] }
      value = { 0x8048498[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6235[32] }
    cx      = { defs={} expr=v6236[32] }
    dx      = { defs={} expr=v6237[32] }
    bx      = { defs={} expr=v6238[32] }
    sp      = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) -4[32]) }
    bp      = { defs={0x08048480,0x08048481} expr=(add[32] v6239[32] -4[32]) }
    si      = { defs={} expr=v6241[32] }
    di      = { defs={} expr=v6242[32] }
    es      = { defs={} expr=v6243[16] }
    cs      = { defs={} expr=v6244[16] }
    ss      = { defs={} expr=v6245[16] }
    ds      = { defs={} expr=v6246[16] }
    fs      = { defs={} expr=v6247[16] }
    gs      = { defs={} expr=v6248[16] }
    cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6239[32] -4[32])) 4294967288[33])))))) }
    ?1      = { defs={} expr=v6250[1] }
    pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32]))))))) }
    ?3      = { defs={} expr=v6252[1] }
    af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33]))))) }
    ?5      = { defs={} expr=v6254[1] }
    zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v6418[32] 1[32])) }
    sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v6418[32] 1[32])) }
    tf      = { defs={} expr=v6257[1] }
    if      = { defs={} expr=v6258[1] }
    df      = { defs={} expr=v6259[1] }
    of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v6418[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v6418[32]) 1[33])))))) }
    iopl0   = { defs={} expr=v6261[1] }
    iopl1   = { defs={} expr=v6262[1] }
    nt      = { defs={} expr=v6263[1] }
    ?15     = { defs={} expr=v6264[1] }
    rf      = { defs={} expr=v6265[1] }
    vm      = { defs={} expr=v6266[1] }
    ac      = { defs={} expr=v6267[1] }
    vif     = { defs={} expr=v6268[1] }
    vip     = { defs={} expr=v6269[1] }
    id      = { defs={} expr=v6270[1] }
    ?22     = { defs={} expr=v6271[1] }
    ?23     = { defs={} expr=v6272[1] }
    ?24     = { defs={} expr=v6273[1] }
    ?25     = { defs={} expr=v6274[1] }
    ?26     = { defs={} expr=v6275[1] }
    ?27     = { defs={} expr=v6276[1] }
    ?28     = { defs={} expr=v6277[1] }
    ?29     = { defs={} expr=v6278[1] }
    ?30     = { defs={} expr=v6279[1] }
    ?31     = { defs={} expr=v6280[1] }
    ip      = { defs={0x08048493} expr=0x08048300[32] }
memory:
    address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) -4[32]) 3[32]) }
      value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=8[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) -4[32]) 2[32]) }
      value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=4[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) -4[32]) 1[32]) }
      value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=-124[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) -4[32]) }
      value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=-104[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) 3[32]) }
      value = { defs={0x0804848c} expr=8[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) 2[32]) }
      value = { defs={0x0804848c} expr=4[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] (add[32] v6239[32] -4[32]) -8[32]) 1[32]) }
      value = { defs={0x0804848c} expr=-123[8] }
      flags = { }
    address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v6239[32] -4[32]) -8[32]) }
      value = { defs={0x0804848c} expr=-44[8] }
      flags = { }
    address = { defs={0x08048486} expr=0x080496fb[32] }
      value = { defs={0x08048486} expr=(extract[8] 24[32] 32[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496fa[32] }
      value = { defs={0x08048486} expr=(extract[8] 16[32] 24[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496f9[32] }
      value = { defs={0x08048486} expr=(extract[8] 8[32] 16[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048486} expr=0x080496f8[32] }
      value = { defs={0x08048486} expr=(extract[8] 0[32] 8[32] (add[32] v6418[32] 1[32])) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 3[32]) }
      value = { defs={0x08048480} expr=(extract[8] 24[32] 32[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 2[32]) }
      value = { defs={0x08048480} expr=(extract[8] 16[32] 24[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] (add[32] v6239[32] -4[32]) 1[32]) }
      value = { defs={0x08048480} expr=(extract[8] 8[32] 16[32] v6240[32]) }
      flags = { }
    address = { defs={0x08048480} expr=(add[32] v6239[32] -4[32]) }
      value = { defs={0x08048480} expr=(extract[8] 0[32] 8[32] v6240[32]) }
      flags = { }
init mem:
    address = { defs={0x08048486} expr=0x080496fb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496fa[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496f9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v6418[32]) }
      flags = { rdonly }
    address = { defs={0x08048486} expr=0x080496f8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v6418[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048300[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
registers:
    ax      = { v36060[32] }
    cx      = { v36061[32] }
    dx      = { v36062[32] }
    bx      = { v36063[32] }
    sp      = { v36064[32] }
    bp      = { v36065[32] }
    si      = { v36066[32] }
    di      = { v36067[32] }
    es      = { v36068[16] }
    cs      = { v36069[16] }
    ss      = { v36070[16] }
    ds      = { v36071[16] }
    fs      = { v36072[16] }
    gs      = { v36073[16] }
    cf      = { v36074[1] }
    ?1      = { v36075[1] }
    pf      = { v36076[1] }
    ?3      = { v36077[1] }
    af      = { v36078[1] }
    ?5      = { v36079[1] }
    zf      = { v36080[1] }
    sf      = { v36081[1] }
    tf      = { v36082[1] }
    if      = { v36083[1] }
    df      = { v36084[1] }
    of      = { v36085[1] }
    iopl0   = { v36086[1] }
    iopl1   = { v36087[1] }
    nt      = { v36088[1] }
    ?15     = { v36089[1] }
    rf      = { v36090[1] }
    vm      = { v36091[1] }
    ac      = { v36092[1] }
    vif     = { v36093[1] }
    vip     = { v36094[1] }
    id      = { v36095[1] }
    ?22     = { v36096[1] }
    ?23     = { v36097[1] }
    ?24     = { v36098[1] }
    ?25     = { v36099[1] }
    ?26     = { v36100[1] }
    ?27     = { v36101[1] }
    ?28     = { v36102[1] }
    ?29     = { v36103[1] }
    ?30     = { v36104[1] }
    ?31     = { v36105[1] }
    ip      = { 0x804849f[32] }
memory:
    address = { v36064[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6603[32] }
    cx      = { defs={} expr=v6604[32] }
    dx      = { defs={} expr=v6605[32] }
    bx      = { defs={} expr=v6606[32] }
    sp      = { defs={} expr=v6607[32] }
    bp      = { defs={} expr=v6608[32] }
    si      = { defs={} expr=v6609[32] }
    di      = { defs={} expr=v6610[32] }
    es      = { defs={} expr=v6611[16] }
    cs      = { defs={} expr=v6612[16] }
    ss      = { defs={} expr=v6613[16] }
    ds      = { defs={} expr=v6614[16] }
    fs      = { defs={} expr=v6615[16] }
    gs      = { defs={} expr=v6616[16] }
    cf      = { defs={} expr=v6617[1] }
    ?1      = { defs={} expr=v6618[1] }
    pf      = { defs={} expr=v6619[1] }
    ?3      = { defs={} expr=v6620[1] }
    af      = { defs={} expr=v6621[1] }
    ?5      = { defs={} expr=v6622[1] }
    zf      = { defs={} expr=v6623[1] }
    sf      = { defs={} expr=v6624[1] }
    tf      = { defs={} expr=v6625[1] }
    if      = { defs={} expr=v6626[1] }
    df      = { defs={} expr=v6627[1] }
    of      = { defs={} expr=v6628[1] }
    iopl0   = { defs={} expr=v6629[1] }
    iopl1   = { defs={} expr=v6630[1] }
    nt      = { defs={} expr=v6631[1] }
    ?15     = { defs={} expr=v6632[1] }
    rf      = { defs={} expr=v6633[1] }
    vm      = { defs={} expr=v6634[1] }
    ac      = { defs={} expr=v6635[1] }
    vif     = { defs={} expr=v6636[1] }
    vip     = { defs={} expr=v6637[1] }
    id      = { defs={} expr=v6638[1] }
    ?22     = { defs={} expr=v6639[1] }
    ?23     = { defs={} expr=v6640[1] }
    ?24     = { defs={} expr=v6641[1] }
    ?25     = { defs={} expr=v6642[1] }
    ?26     = { defs={} expr=v6643[1] }
    ?27     = { defs={} expr=v6644[1] }
    ?28     = { defs={} expr=v6645[1] }
    ?29     = { defs={} expr=v6646[1] }
    ?30     = { defs={} expr=v6647[1] }
    ?31     = { defs={} expr=v6648[1] }
    ip      = { defs={0x08048498} expr=0x0804849f[32] }
memory:
    address = { defs={} expr=(add[32] v6607[32] 3[32]) }
      value = { defs={0x08048498} expr=0[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6607[32] 2[32]) }
      value = { defs={0x08048498} expr=0[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6607[32] 1[32]) }
      value = { defs={0x08048498} expr=0[8] }
      flags = { }
    address = { defs={} expr=v6607[32] }
      value = { defs={0x08048498} expr=0[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804849f[32] }
memory:
null state
0x804849f:call   0x08048320<_exit@plt>
registers:
    ax      = { v36060[32] }
    cx      = { v36061[32] }
    dx      = { v36062[32] }
    bx      = { v36063[32] }
    sp      = { v36064-0x4[32] }
    bp      = { v36065[32] }
    si      = { v36066[32] }
    di      = { v36067[32] }
    es      = { v36068[16] }
    cs      = { v36069[16] }
    ss      = { v36070[16] }
    ds      = { v36071[16] }
    fs      = { v36072[16] }
    gs      = { v36073[16] }
    cf      = { v36074[1] }
    ?1      = { v36075[1] }
    pf      = { v36076[1] }
    ?3      = { v36077[1] }
    af      = { v36078[1] }
    ?5      = { v36079[1] }
    zf      = { v36080[1] }
    sf      = { v36081[1] }
    tf      = { v36082[1] }
    if      = { v36083[1] }
    df      = { v36084[1] }
    of      = { v36085[1] }
    iopl0   = { v36086[1] }
    iopl1   = { v36087[1] }
    nt      = { v36088[1] }
    ?15     = { v36089[1] }
    rf      = { v36090[1] }
    vm      = { v36091[1] }
    ac      = { v36092[1] }
    vif     = { v36093[1] }
    vip     = { v36094[1] }
    id      = { v36095[1] }
    ?22     = { v36096[1] }
    ?23     = { v36097[1] }
    ?24     = { v36098[1] }
    ?25     = { v36099[1] }
    ?26     = { v36100[1] }
    ?27     = { v36101[1] }
    ?28     = { v36102[1] }
    ?29     = { v36103[1] }
    ?30     = { v36104[1] }
    ?31     = { v36105[1] }
    ip      = { 0x8048320[32] }
memory:
    address = { v36064[32] }
      value = { 0x0[32] }
      flags = { size=4 }
    address = { v36064-0x4[32] }
      value = { 0x80484a4[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6603[32] }
    cx      = { defs={} expr=v6604[32] }
    dx      = { defs={} expr=v6605[32] }
    bx      = { defs={} expr=v6606[32] }
    sp      = { defs={0x0804849f} expr=(add[32] v6607[32] -4[32]) }
    bp      = { defs={} expr=v6608[32] }
    si      = { defs={} expr=v6609[32] }
    di      = { defs={} expr=v6610[32] }
    es      = { defs={} expr=v6611[16] }
    cs      = { defs={} expr=v6612[16] }
    ss      = { defs={} expr=v6613[16] }
    ds      = { defs={} expr=v6614[16] }
    fs      = { defs={} expr=v6615[16] }
    gs      = { defs={} expr=v6616[16] }
    cf      = { defs={} expr=v6617[1] }
    ?1      = { defs={} expr=v6618[1] }
    pf      = { defs={} expr=v6619[1] }
    ?3      = { defs={} expr=v6620[1] }
    af      = { defs={} expr=v6621[1] }
    ?5      = { defs={} expr=v6622[1] }
    zf      = { defs={} expr=v6623[1] }
    sf      = { defs={} expr=v6624[1] }
    tf      = { defs={} expr=v6625[1] }
    if      = { defs={} expr=v6626[1] }
    df      = { defs={} expr=v6627[1] }
    of      = { defs={} expr=v6628[1] }
    iopl0   = { defs={} expr=v6629[1] }
    iopl1   = { defs={} expr=v6630[1] }
    nt      = { defs={} expr=v6631[1] }
    ?15     = { defs={} expr=v6632[1] }
    rf      = { defs={} expr=v6633[1] }
    vm      = { defs={} expr=v6634[1] }
    ac      = { defs={} expr=v6635[1] }
    vif     = { defs={} expr=v6636[1] }
    vip     = { defs={} expr=v6637[1] }
    id      = { defs={} expr=v6638[1] }
    ?22     = { defs={} expr=v6639[1] }
    ?23     = { defs={} expr=v6640[1] }
    ?24     = { defs={} expr=v6641[1] }
    ?25     = { defs={} expr=v6642[1] }
    ?26     = { defs={} expr=v6643[1] }
    ?27     = { defs={} expr=v6644[1] }
    ?28     = { defs={} expr=v6645[1] }
    ?29     = { defs={} expr=v6646[1] }
    ?30     = { defs={} expr=v6647[1] }
    ?31     = { defs={} expr=v6648[1] }
    ip      = { defs={0x0804849f} expr=0x08048320[32] }
memory:
    address = { defs={0x0804849f} expr=(add[32] (add[32] v6607[32] -4[32]) 3[32]) }
      value = { defs={0x08048498,0x0804849f} expr=8[8] }
      flags = { }
    address = { defs={0x0804849f} expr=(add[32] (add[32] v6607[32] -4[32]) 2[32]) }
      value = { defs={0x08048498,0x0804849f} expr=4[8] }
      flags = { }
    address = { defs={0x0804849f} expr=(add[32] (add[32] v6607[32] -4[32]) 1[32]) }
      value = { defs={0x08048498,0x0804849f} expr=-124[8] }
      flags = { }
    address = { defs={0x0804849f} expr=(add[32] v6607[32] -4[32]) }
      value = { defs={0x08048498,0x0804849f} expr=-92[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6607[32] 3[32]) }
      value = { defs={0x08048498} expr=0[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6607[32] 2[32]) }
      value = { defs={0x08048498} expr=0[8] }
      flags = { }
    address = { defs={} expr=(add[32] v6607[32] 1[32]) }
      value = { defs={0x08048498} expr=0[8] }
      flags = { }
    address = { defs={} expr=v6607[32] }
      value = { defs={0x08048498} expr=0[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048320[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
registers:
    ax      = { v36172[32] }
    cx      = { v36173[32] }
    dx      = { v36174[32] }
    bx      = { v36175[32] }
    sp      = { v36176-0x4[32] }
    bp      = { v36177[32] }
    si      = { v36178[32] }
    di      = { v36179[32] }
    es      = { v36180[16] }
    cs      = { v36181[16] }
    ss      = { v36182[16] }
    ds      = { v36183[16] }
    fs      = { v36184[16] }
    gs      = { v36185[16] }
    cf      = { v36186[1] }
    ?1      = { v36187[1] }
    pf      = { v36188[1] }
    ?3      = { v36189[1] }
    af      = { v36190[1] }
    ?5      = { v36191[1] }
    zf      = { v36192[1] }
    sf      = { v36193[1] }
    tf      = { v36194[1] }
    if      = { v36195[1] }
    df      = { v36196[1] }
    of      = { v36197[1] }
    iopl0   = { v36198[1] }
    iopl1   = { v36199[1] }
    nt      = { v36200[1] }
    ?15     = { v36201[1] }
    rf      = { v36202[1] }
    vm      = { v36203[1] }
    ac      = { v36204[1] }
    vif     = { v36205[1] }
    vip     = { v36206[1] }
    id      = { v36207[1] }
    ?22     = { v36208[1] }
    ?23     = { v36209[1] }
    ?24     = { v36210[1] }
    ?25     = { v36211[1] }
    ?26     = { v36212[1] }
    ?27     = { v36213[1] }
    ?28     = { v36214[1] }
    ?29     = { v36215[1] }
    ?30     = { v36216[1] }
    ?31     = { v36217[1] }
    ip      = { 0x80484b1[32] }
memory:
    address = { v36176-0x4[32] }
      value = { v36177[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6745[32] }
    cx      = { defs={} expr=v6746[32] }
    dx      = { defs={} expr=v6747[32] }
    bx      = { defs={} expr=v6748[32] }
    sp      = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
    bp      = { defs={} expr=v6750[32] }
    si      = { defs={} expr=v6751[32] }
    di      = { defs={} expr=v6752[32] }
    es      = { defs={} expr=v6753[16] }
    cs      = { defs={} expr=v6754[16] }
    ss      = { defs={} expr=v6755[16] }
    ds      = { defs={} expr=v6756[16] }
    fs      = { defs={} expr=v6757[16] }
    gs      = { defs={} expr=v6758[16] }
    cf      = { defs={} expr=v6759[1] }
    ?1      = { defs={} expr=v6760[1] }
    pf      = { defs={} expr=v6761[1] }
    ?3      = { defs={} expr=v6762[1] }
    af      = { defs={} expr=v6763[1] }
    ?5      = { defs={} expr=v6764[1] }
    zf      = { defs={} expr=v6765[1] }
    sf      = { defs={} expr=v6766[1] }
    tf      = { defs={} expr=v6767[1] }
    if      = { defs={} expr=v6768[1] }
    df      = { defs={} expr=v6769[1] }
    of      = { defs={} expr=v6770[1] }
    iopl0   = { defs={} expr=v6771[1] }
    iopl1   = { defs={} expr=v6772[1] }
    nt      = { defs={} expr=v6773[1] }
    ?15     = { defs={} expr=v6774[1] }
    rf      = { defs={} expr=v6775[1] }
    vm      = { defs={} expr=v6776[1] }
    ac      = { defs={} expr=v6777[1] }
    vif     = { defs={} expr=v6778[1] }
    vip     = { defs={} expr=v6779[1] }
    id      = { defs={} expr=v6780[1] }
    ?22     = { defs={} expr=v6781[1] }
    ?23     = { defs={} expr=v6782[1] }
    ?24     = { defs={} expr=v6783[1] }
    ?25     = { defs={} expr=v6784[1] }
    ?26     = { defs={} expr=v6785[1] }
    ?27     = { defs={} expr=v6786[1] }
    ?28     = { defs={} expr=v6787[1] }
    ?29     = { defs={} expr=v6788[1] }
    ?30     = { defs={} expr=v6789[1] }
    ?31     = { defs={} expr=v6790[1] }
    ip      = { defs={0x080484b0} expr=0x080484b1[32] }
memory:
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 3[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 2[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 1[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v6750[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b1[32] }
memory:
null state
0x80484b1:mov    ebp, esp
registers:
    ax      = { v36172[32] }
    cx      = { v36173[32] }
    dx      = { v36174[32] }
    bx      = { v36175[32] }
    sp      = { v36176-0x4[32] }
    bp      = { v36176-0x4[32] }
    si      = { v36178[32] }
    di      = { v36179[32] }
    es      = { v36180[16] }
    cs      = { v36181[16] }
    ss      = { v36182[16] }
    ds      = { v36183[16] }
    fs      = { v36184[16] }
    gs      = { v36185[16] }
    cf      = { v36186[1] }
    ?1      = { v36187[1] }
    pf      = { v36188[1] }
    ?3      = { v36189[1] }
    af      = { v36190[1] }
    ?5      = { v36191[1] }
    zf      = { v36192[1] }
    sf      = { v36193[1] }
    tf      = { v36194[1] }
    if      = { v36195[1] }
    df      = { v36196[1] }
    of      = { v36197[1] }
    iopl0   = { v36198[1] }
    iopl1   = { v36199[1] }
    nt      = { v36200[1] }
    ?15     = { v36201[1] }
    rf      = { v36202[1] }
    vm      = { v36203[1] }
    ac      = { v36204[1] }
    vif     = { v36205[1] }
    vip     = { v36206[1] }
    id      = { v36207[1] }
    ?22     = { v36208[1] }
    ?23     = { v36209[1] }
    ?24     = { v36210[1] }
    ?25     = { v36211[1] }
    ?26     = { v36212[1] }
    ?27     = { v36213[1] }
    ?28     = { v36214[1] }
    ?29     = { v36215[1] }
    ?30     = { v36216[1] }
    ?31     = { v36217[1] }
    ip      = { 0x80484b3[32] }
memory:
    address = { v36176-0x4[32] }
      value = { v36177[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6745[32] }
    cx      = { defs={} expr=v6746[32] }
    dx      = { defs={} expr=v6747[32] }
    bx      = { defs={} expr=v6748[32] }
    sp      = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
    bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v6749[32] -4[32]) }
    si      = { defs={} expr=v6751[32] }
    di      = { defs={} expr=v6752[32] }
    es      = { defs={} expr=v6753[16] }
    cs      = { defs={} expr=v6754[16] }
    ss      = { defs={} expr=v6755[16] }
    ds      = { defs={} expr=v6756[16] }
    fs      = { defs={} expr=v6757[16] }
    gs      = { defs={} expr=v6758[16] }
    cf      = { defs={} expr=v6759[1] }
    ?1      = { defs={} expr=v6760[1] }
    pf      = { defs={} expr=v6761[1] }
    ?3      = { defs={} expr=v6762[1] }
    af      = { defs={} expr=v6763[1] }
    ?5      = { defs={} expr=v6764[1] }
    zf      = { defs={} expr=v6765[1] }
    sf      = { defs={} expr=v6766[1] }
    tf      = { defs={} expr=v6767[1] }
    if      = { defs={} expr=v6768[1] }
    df      = { defs={} expr=v6769[1] }
    of      = { defs={} expr=v6770[1] }
    iopl0   = { defs={} expr=v6771[1] }
    iopl1   = { defs={} expr=v6772[1] }
    nt      = { defs={} expr=v6773[1] }
    ?15     = { defs={} expr=v6774[1] }
    rf      = { defs={} expr=v6775[1] }
    vm      = { defs={} expr=v6776[1] }
    ac      = { defs={} expr=v6777[1] }
    vif     = { defs={} expr=v6778[1] }
    vip     = { defs={} expr=v6779[1] }
    id      = { defs={} expr=v6780[1] }
    ?22     = { defs={} expr=v6781[1] }
    ?23     = { defs={} expr=v6782[1] }
    ?24     = { defs={} expr=v6783[1] }
    ?25     = { defs={} expr=v6784[1] }
    ?26     = { defs={} expr=v6785[1] }
    ?27     = { defs={} expr=v6786[1] }
    ?28     = { defs={} expr=v6787[1] }
    ?29     = { defs={} expr=v6788[1] }
    ?30     = { defs={} expr=v6789[1] }
    ?31     = { defs={} expr=v6790[1] }
    ip      = { defs={0x080484b0,0x080484b1} expr=0x080484b3[32] }
memory:
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 3[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 2[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 1[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v6750[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b3[32] }
memory:
null state
0x80484b3:push   edi
registers:
    ax      = { v36172[32] }
    cx      = { v36173[32] }
    dx      = { v36174[32] }
    bx      = { v36175[32] }
    sp      = { v36176-0x8[32] }
    bp      = { v36176-0x4[32] }
    si      = { v36178[32] }
    di      = { v36179[32] }
    es      = { v36180[16] }
    cs      = { v36181[16] }
    ss      = { v36182[16] }
    ds      = { v36183[16] }
    fs      = { v36184[16] }
    gs      = { v36185[16] }
    cf      = { v36186[1] }
    ?1      = { v36187[1] }
    pf      = { v36188[1] }
    ?3      = { v36189[1] }
    af      = { v36190[1] }
    ?5      = { v36191[1] }
    zf      = { v36192[1] }
    sf      = { v36193[1] }
    tf      = { v36194[1] }
    if      = { v36195[1] }
    df      = { v36196[1] }
    of      = { v36197[1] }
    iopl0   = { v36198[1] }
    iopl1   = { v36199[1] }
    nt      = { v36200[1] }
    ?15     = { v36201[1] }
    rf      = { v36202[1] }
    vm      = { v36203[1] }
    ac      = { v36204[1] }
    vif     = { v36205[1] }
    vip     = { v36206[1] }
    id      = { v36207[1] }
    ?22     = { v36208[1] }
    ?23     = { v36209[1] }
    ?24     = { v36210[1] }
    ?25     = { v36211[1] }
    ?26     = { v36212[1] }
    ?27     = { v36213[1] }
    ?28     = { v36214[1] }
    ?29     = { v36215[1] }
    ?30     = { v36216[1] }
    ?31     = { v36217[1] }
    ip      = { 0x80484b4[32] }
memory:
    address = { v36176-0x4[32] }
      value = { v36177[32] }
      flags = { size=4 }
    address = { v36176-0x8[32] }
      value = { v36179[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6745[32] }
    cx      = { defs={} expr=v6746[32] }
    dx      = { defs={} expr=v6747[32] }
    bx      = { defs={} expr=v6748[32] }
    sp      = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v6749[32] -4[32]) -4[32]) }
    bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v6749[32] -4[32]) }
    si      = { defs={} expr=v6751[32] }
    di      = { defs={} expr=v6752[32] }
    es      = { defs={} expr=v6753[16] }
    cs      = { defs={} expr=v6754[16] }
    ss      = { defs={} expr=v6755[16] }
    ds      = { defs={} expr=v6756[16] }
    fs      = { defs={} expr=v6757[16] }
    gs      = { defs={} expr=v6758[16] }
    cf      = { defs={} expr=v6759[1] }
    ?1      = { defs={} expr=v6760[1] }
    pf      = { defs={} expr=v6761[1] }
    ?3      = { defs={} expr=v6762[1] }
    af      = { defs={} expr=v6763[1] }
    ?5      = { defs={} expr=v6764[1] }
    zf      = { defs={} expr=v6765[1] }
    sf      = { defs={} expr=v6766[1] }
    tf      = { defs={} expr=v6767[1] }
    if      = { defs={} expr=v6768[1] }
    df      = { defs={} expr=v6769[1] }
    of      = { defs={} expr=v6770[1] }
    iopl0   = { defs={} expr=v6771[1] }
    iopl1   = { defs={} expr=v6772[1] }
    nt      = { defs={} expr=v6773[1] }
    ?15     = { defs={} expr=v6774[1] }
    rf      = { defs={} expr=v6775[1] }
    vm      = { defs={} expr=v6776[1] }
    ac      = { defs={} expr=v6777[1] }
    vif     = { defs={} expr=v6778[1] }
    vip     = { defs={} expr=v6779[1] }
    id      = { defs={} expr=v6780[1] }
    ?22     = { defs={} expr=v6781[1] }
    ?23     = { defs={} expr=v6782[1] }
    ?24     = { defs={} expr=v6783[1] }
    ?25     = { defs={} expr=v6784[1] }
    ?26     = { defs={} expr=v6785[1] }
    ?27     = { defs={} expr=v6786[1] }
    ?28     = { defs={} expr=v6787[1] }
    ?29     = { defs={} expr=v6788[1] }
    ?30     = { defs={} expr=v6789[1] }
    ?31     = { defs={} expr=v6790[1] }
    ip      = { defs={0x080484b0,0x080484b1,0x080484b3} expr=0x080484b4[32] }
memory:
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v6749[32] -4[32]) -4[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 3[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 2[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 1[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v6750[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b4[32] }
memory:
null state
0x80484b4:push   esi
registers:
    ax      = { v36172[32] }
    cx      = { v36173[32] }
    dx      = { v36174[32] }
    bx      = { v36175[32] }
    sp      = { v36176-0xc[32] }
    bp      = { v36176-0x4[32] }
    si      = { v36178[32] }
    di      = { v36179[32] }
    es      = { v36180[16] }
    cs      = { v36181[16] }
    ss      = { v36182[16] }
    ds      = { v36183[16] }
    fs      = { v36184[16] }
    gs      = { v36185[16] }
    cf      = { v36186[1] }
    ?1      = { v36187[1] }
    pf      = { v36188[1] }
    ?3      = { v36189[1] }
    af      = { v36190[1] }
    ?5      = { v36191[1] }
    zf      = { v36192[1] }
    sf      = { v36193[1] }
    tf      = { v36194[1] }
    if      = { v36195[1] }
    df      = { v36196[1] }
    of      = { v36197[1] }
    iopl0   = { v36198[1] }
    iopl1   = { v36199[1] }
    nt      = { v36200[1] }
    ?15     = { v36201[1] }
    rf      = { v36202[1] }
    vm      = { v36203[1] }
    ac      = { v36204[1] }
    vif     = { v36205[1] }
    vip     = { v36206[1] }
    id      = { v36207[1] }
    ?22     = { v36208[1] }
    ?23     = { v36209[1] }
    ?24     = { v36210[1] }
    ?25     = { v36211[1] }
    ?26     = { v36212[1] }
    ?27     = { v36213[1] }
    ?28     = { v36214[1] }
    ?29     = { v36215[1] }
    ?30     = { v36216[1] }
    ?31     = { v36217[1] }
    ip      = { 0x80484b5[32] }
memory:
    address = { v36176-0x4[32] }
      value = { v36177[32] }
      flags = { size=4 }
    address = { v36176-0x8[32] }
      value = { v36179[32] }
      flags = { size=4 }
    address = { v36176-0xc[32] }
      value = { v36178[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6745[32] }
    cx      = { defs={} expr=v6746[32] }
    dx      = { defs={} expr=v6747[32] }
    bx      = { defs={} expr=v6748[32] }
    sp      = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v6749[32] -4[32]) }
    si      = { defs={} expr=v6751[32] }
    di      = { defs={} expr=v6752[32] }
    es      = { defs={} expr=v6753[16] }
    cs      = { defs={} expr=v6754[16] }
    ss      = { defs={} expr=v6755[16] }
    ds      = { defs={} expr=v6756[16] }
    fs      = { defs={} expr=v6757[16] }
    gs      = { defs={} expr=v6758[16] }
    cf      = { defs={} expr=v6759[1] }
    ?1      = { defs={} expr=v6760[1] }
    pf      = { defs={} expr=v6761[1] }
    ?3      = { defs={} expr=v6762[1] }
    af      = { defs={} expr=v6763[1] }
    ?5      = { defs={} expr=v6764[1] }
    zf      = { defs={} expr=v6765[1] }
    sf      = { defs={} expr=v6766[1] }
    tf      = { defs={} expr=v6767[1] }
    if      = { defs={} expr=v6768[1] }
    df      = { defs={} expr=v6769[1] }
    of      = { defs={} expr=v6770[1] }
    iopl0   = { defs={} expr=v6771[1] }
    iopl1   = { defs={} expr=v6772[1] }
    nt      = { defs={} expr=v6773[1] }
    ?15     = { defs={} expr=v6774[1] }
    rf      = { defs={} expr=v6775[1] }
    vm      = { defs={} expr=v6776[1] }
    ac      = { defs={} expr=v6777[1] }
    vif     = { defs={} expr=v6778[1] }
    vip     = { defs={} expr=v6779[1] }
    id      = { defs={} expr=v6780[1] }
    ?22     = { defs={} expr=v6781[1] }
    ?23     = { defs={} expr=v6782[1] }
    ?24     = { defs={} expr=v6783[1] }
    ?25     = { defs={} expr=v6784[1] }
    ?26     = { defs={} expr=v6785[1] }
    ?27     = { defs={} expr=v6786[1] }
    ?28     = { defs={} expr=v6787[1] }
    ?29     = { defs={} expr=v6788[1] }
    ?30     = { defs={} expr=v6789[1] }
    ?31     = { defs={} expr=v6790[1] }
    ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4} expr=0x080484b5[32] }
memory:
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 24[32] 32[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 16[32] 24[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 8[32] 16[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 0[32] 8[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v6749[32] -4[32]) -4[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 3[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 2[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 1[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v6750[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b5[32] }
memory:
null state
0x80484b5:push   ebx
registers:
    ax      = { v36172[32] }
    cx      = { v36173[32] }
    dx      = { v36174[32] }
    bx      = { v36175[32] }
    sp      = { v36176-0x10[32] }
    bp      = { v36176-0x4[32] }
    si      = { v36178[32] }
    di      = { v36179[32] }
    es      = { v36180[16] }
    cs      = { v36181[16] }
    ss      = { v36182[16] }
    ds      = { v36183[16] }
    fs      = { v36184[16] }
    gs      = { v36185[16] }
    cf      = { v36186[1] }
    ?1      = { v36187[1] }
    pf      = { v36188[1] }
    ?3      = { v36189[1] }
    af      = { v36190[1] }
    ?5      = { v36191[1] }
    zf      = { v36192[1] }
    sf      = { v36193[1] }
    tf      = { v36194[1] }
    if      = { v36195[1] }
    df      = { v36196[1] }
    of      = { v36197[1] }
    iopl0   = { v36198[1] }
    iopl1   = { v36199[1] }
    nt      = { v36200[1] }
    ?15     = { v36201[1] }
    rf      = { v36202[1] }
    vm      = { v36203[1] }
    ac      = { v36204[1] }
    vif     = { v36205[1] }
    vip     = { v36206[1] }
    id      = { v36207[1] }
    ?22     = { v36208[1] }
    ?23     = { v36209[1] }
    ?24     = { v36210[1] }
    ?25     = { v36211[1] }
    ?26     = { v36212[1] }
    ?27     = { v36213[1] }
    ?28     = { v36214[1] }
    ?29     = { v36215[1] }
    ?30     = { v36216[1] }
    ?31     = { v36217[1] }
    ip      = { 0x80484b6[32] }
memory:
    address = { v36176-0x4[32] }
      value = { v36177[32] }
      flags = { size=4 }
    address = { v36176-0x8[32] }
      value = { v36179[32] }
      flags = { size=4 }
    address = { v36176-0xc[32] }
      value = { v36178[32] }
      flags = { size=4 }
    address = { v36176-0x10[32] }
      value = { v36175[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6745[32] }
    cx      = { defs={} expr=v6746[32] }
    dx      = { defs={} expr=v6747[32] }
    bx      = { defs={} expr=v6748[32] }
    sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v6749[32] -4[32]) }
    si      = { defs={} expr=v6751[32] }
    di      = { defs={} expr=v6752[32] }
    es      = { defs={} expr=v6753[16] }
    cs      = { defs={} expr=v6754[16] }
    ss      = { defs={} expr=v6755[16] }
    ds      = { defs={} expr=v6756[16] }
    fs      = { defs={} expr=v6757[16] }
    gs      = { defs={} expr=v6758[16] }
    cf      = { defs={} expr=v6759[1] }
    ?1      = { defs={} expr=v6760[1] }
    pf      = { defs={} expr=v6761[1] }
    ?3      = { defs={} expr=v6762[1] }
    af      = { defs={} expr=v6763[1] }
    ?5      = { defs={} expr=v6764[1] }
    zf      = { defs={} expr=v6765[1] }
    sf      = { defs={} expr=v6766[1] }
    tf      = { defs={} expr=v6767[1] }
    if      = { defs={} expr=v6768[1] }
    df      = { defs={} expr=v6769[1] }
    of      = { defs={} expr=v6770[1] }
    iopl0   = { defs={} expr=v6771[1] }
    iopl1   = { defs={} expr=v6772[1] }
    nt      = { defs={} expr=v6773[1] }
    ?15     = { defs={} expr=v6774[1] }
    rf      = { defs={} expr=v6775[1] }
    vm      = { defs={} expr=v6776[1] }
    ac      = { defs={} expr=v6777[1] }
    vif     = { defs={} expr=v6778[1] }
    vip     = { defs={} expr=v6779[1] }
    id      = { defs={} expr=v6780[1] }
    ?22     = { defs={} expr=v6781[1] }
    ?23     = { defs={} expr=v6782[1] }
    ?24     = { defs={} expr=v6783[1] }
    ?25     = { defs={} expr=v6784[1] }
    ?26     = { defs={} expr=v6785[1] }
    ?27     = { defs={} expr=v6786[1] }
    ?28     = { defs={} expr=v6787[1] }
    ?29     = { defs={} expr=v6788[1] }
    ?30     = { defs={} expr=v6789[1] }
    ?31     = { defs={} expr=v6790[1] }
    ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5} expr=0x080484b6[32] }
memory:
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 24[32] 32[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 16[32] 24[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 8[32] 16[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 0[32] 8[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 24[32] 32[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 16[32] 24[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 8[32] 16[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 0[32] 8[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v6749[32] -4[32]) -4[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 3[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 2[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 1[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v6750[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b6[32] }
memory:
null state
0x80484b6:sub    esp, 0x0c
registers:
    ax      = { v36172[32] }
    cx      = { v36173[32] }
    dx      = { v36174[32] }
    bx      = { v36175[32] }
    sp      = { v36176-0x1c[32] }
    bp      = { v36176-0x4[32] }
    si      = { v36178[32] }
    di      = { v36179[32] }
    es      = { v36180[16] }
    cs      = { v36181[16] }
    ss      = { v36182[16] }
    ds      = { v36183[16] }
    fs      = { v36184[16] }
    gs      = { v36185[16] }
    cf      = { -v36310+0x1[1] }
    ?1      = { v36187[1] }
    pf      = { -v36300+0x1[1] }
    ?3      = { v36189[1] }
    af      = { -v36307+0x1[1] }
    ?5      = { v36191[1] }
    zf      = { v36305[1] }
    sf      = { v36303[1] }
    tf      = { v36194[1] }
    if      = { v36195[1] }
    df      = { v36196[1] }
    of      = { v36317[1] }
    iopl0   = { v36198[1] }
    iopl1   = { v36199[1] }
    nt      = { v36200[1] }
    ?15     = { v36201[1] }
    rf      = { v36202[1] }
    vm      = { v36203[1] }
    ac      = { v36204[1] }
    vif     = { v36205[1] }
    vip     = { v36206[1] }
    id      = { v36207[1] }
    ?22     = { v36208[1] }
    ?23     = { v36209[1] }
    ?24     = { v36210[1] }
    ?25     = { v36211[1] }
    ?26     = { v36212[1] }
    ?27     = { v36213[1] }
    ?28     = { v36214[1] }
    ?29     = { v36215[1] }
    ?30     = { v36216[1] }
    ?31     = { v36217[1] }
    ip      = { 0x80484b9[32] }
memory:
    address = { v36176-0x4[32] }
      value = { v36177[32] }
      flags = { size=4 }
    address = { v36176-0x8[32] }
      value = { v36179[32] }
      flags = { size=4 }
    address = { v36176-0xc[32] }
      value = { v36178[32] }
      flags = { size=4 }
    address = { v36176-0x10[32] }
      value = { v36175[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6745[32] }
    cx      = { defs={} expr=v6746[32] }
    dx      = { defs={} expr=v6747[32] }
    bx      = { defs={} expr=v6748[32] }
    sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) }
    bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v6749[32] -4[32]) }
    si      = { defs={} expr=v6751[32] }
    di      = { defs={} expr=v6752[32] }
    es      = { defs={} expr=v6753[16] }
    cs      = { defs={} expr=v6754[16] }
    ss      = { defs={} expr=v6755[16] }
    ds      = { defs={} expr=v6756[16] }
    fs      = { defs={} expr=v6757[16] }
    gs      = { defs={} expr=v6758[16] }
    cf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    ?1      = { defs={} expr=v6760[1] }
    pf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
    ?3      = { defs={} expr=v6762[1] }
    af      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    ?5      = { defs={} expr=v6764[1] }
    zf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
    sf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
    tf      = { defs={} expr=v6767[1] }
    if      = { defs={} expr=v6768[1] }
    df      = { defs={} expr=v6769[1] }
    of      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    iopl0   = { defs={} expr=v6771[1] }
    iopl1   = { defs={} expr=v6772[1] }
    nt      = { defs={} expr=v6773[1] }
    ?15     = { defs={} expr=v6774[1] }
    rf      = { defs={} expr=v6775[1] }
    vm      = { defs={} expr=v6776[1] }
    ac      = { defs={} expr=v6777[1] }
    vif     = { defs={} expr=v6778[1] }
    vip     = { defs={} expr=v6779[1] }
    id      = { defs={} expr=v6780[1] }
    ?22     = { defs={} expr=v6781[1] }
    ?23     = { defs={} expr=v6782[1] }
    ?24     = { defs={} expr=v6783[1] }
    ?25     = { defs={} expr=v6784[1] }
    ?26     = { defs={} expr=v6785[1] }
    ?27     = { defs={} expr=v6786[1] }
    ?28     = { defs={} expr=v6787[1] }
    ?29     = { defs={} expr=v6788[1] }
    ?30     = { defs={} expr=v6789[1] }
    ?31     = { defs={} expr=v6790[1] }
    ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=0x080484b9[32] }
memory:
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 24[32] 32[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 16[32] 24[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 8[32] 16[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 0[32] 8[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 24[32] 32[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 16[32] 24[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 8[32] 16[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 0[32] 8[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v6749[32] -4[32]) -4[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 3[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 2[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 1[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v6750[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b9[32] }
memory:
null state
0x80484b9:call   0x080484be<<Insn>>
registers:
    ax      = { v36172[32] }
    cx      = { v36173[32] }
    dx      = { v36174[32] }
    bx      = { v36175[32] }
    sp      = { v36176-0x20[32] }
    bp      = { v36176-0x4[32] }
    si      = { v36178[32] }
    di      = { v36179[32] }
    es      = { v36180[16] }
    cs      = { v36181[16] }
    ss      = { v36182[16] }
    ds      = { v36183[16] }
    fs      = { v36184[16] }
    gs      = { v36185[16] }
    cf      = { -v36310+0x1[1] }
    ?1      = { v36187[1] }
    pf      = { -v36300+0x1[1] }
    ?3      = { v36189[1] }
    af      = { -v36307+0x1[1] }
    ?5      = { v36191[1] }
    zf      = { v36305[1] }
    sf      = { v36303[1] }
    tf      = { v36194[1] }
    if      = { v36195[1] }
    df      = { v36196[1] }
    of      = { v36317[1] }
    iopl0   = { v36198[1] }
    iopl1   = { v36199[1] }
    nt      = { v36200[1] }
    ?15     = { v36201[1] }
    rf      = { v36202[1] }
    vm      = { v36203[1] }
    ac      = { v36204[1] }
    vif     = { v36205[1] }
    vip     = { v36206[1] }
    id      = { v36207[1] }
    ?22     = { v36208[1] }
    ?23     = { v36209[1] }
    ?24     = { v36210[1] }
    ?25     = { v36211[1] }
    ?26     = { v36212[1] }
    ?27     = { v36213[1] }
    ?28     = { v36214[1] }
    ?29     = { v36215[1] }
    ?30     = { v36216[1] }
    ?31     = { v36217[1] }
    ip      = { 0x80484be[32] }
memory:
    address = { v36176-0x4[32] }
      value = { v36177[32] }
      flags = { size=4 }
    address = { v36176-0x8[32] }
      value = { v36179[32] }
      flags = { size=4 }
    address = { v36176-0xc[32] }
      value = { v36178[32] }
      flags = { size=4 }
    address = { v36176-0x10[32] }
      value = { v36175[32] }
      flags = { size=4 }
    address = { v36176-0x20[32] }
      value = { 0x80484be[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v6745[32] }
    cx      = { defs={} expr=v6746[32] }
    dx      = { defs={} expr=v6747[32] }
    bx      = { defs={} expr=v6748[32] }
    sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
    bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v6749[32] -4[32]) }
    si      = { defs={} expr=v6751[32] }
    di      = { defs={} expr=v6752[32] }
    es      = { defs={} expr=v6753[16] }
    cs      = { defs={} expr=v6754[16] }
    ss      = { defs={} expr=v6755[16] }
    ds      = { defs={} expr=v6756[16] }
    fs      = { defs={} expr=v6757[16] }
    gs      = { defs={} expr=v6758[16] }
    cf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    ?1      = { defs={} expr=v6760[1] }
    pf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
    ?3      = { defs={} expr=v6762[1] }
    af      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    ?5      = { defs={} expr=v6764[1] }
    zf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
    sf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
    tf      = { defs={} expr=v6767[1] }
    if      = { defs={} expr=v6768[1] }
    df      = { defs={} expr=v6769[1] }
    of      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    iopl0   = { defs={} expr=v6771[1] }
    iopl1   = { defs={} expr=v6772[1] }
    nt      = { defs={} expr=v6773[1] }
    ?15     = { defs={} expr=v6774[1] }
    rf      = { defs={} expr=v6775[1] }
    vm      = { defs={} expr=v6776[1] }
    ac      = { defs={} expr=v6777[1] }
    vif     = { defs={} expr=v6778[1] }
    vip     = { defs={} expr=v6779[1] }
    id      = { defs={} expr=v6780[1] }
    ?22     = { defs={} expr=v6781[1] }
    ?23     = { defs={} expr=v6782[1] }
    ?24     = { defs={} expr=v6783[1] }
    ?25     = { defs={} expr=v6784[1] }
    ?26     = { defs={} expr=v6785[1] }
    ?27     = { defs={} expr=v6786[1] }
    ?28     = { defs={} expr=v6787[1] }
    ?29     = { defs={} expr=v6788[1] }
    ?30     = { defs={} expr=v6789[1] }
    ?31     = { defs={} expr=v6790[1] }
    ip      = { defs={0x080484b9} expr=0x080484be[32] }
memory:
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=8[8] }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=4[8] }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=-124[8] }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
      value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=-66[8] }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 24[32] 32[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 16[32] 24[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 8[32] 16[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080484b5} expr=(extract[8] 0[32] 8[32] v6748[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 24[32] 32[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 16[32] 24[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 8[32] 16[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080484b4} expr=(extract[8] 0[32] 8[32] v6751[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 24[32] 32[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 16[32] 24[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] (add[32] v6749[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 8[32] 16[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v6749[32] -4[32]) -4[32]) }
      value = { defs={0x080484b3} expr=(extract[8] 0[32] 8[32] v6752[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 3[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 24[32] 32[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 2[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 16[32] 24[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] (add[32] v6749[32] -4[32]) 1[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 8[32] 16[32] v6750[32]) }
      flags = { }
    address = { defs={0x080484b0} expr=(add[32] v6749[32] -4[32]) }
      value = { defs={0x080484b0} expr=(extract[8] 0[32] 8[32] v6750[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484be[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
registers:
    ax      = { v36377[32] }
    cx      = { v36378[32] }
    dx      = { v36379[32] }
    bx      = { v36432[32] }
    sp      = { v36381+0x4[32] }
    bp      = { v36382[32] }
    si      = { v36383[32] }
    di      = { v36384[32] }
    es      = { v36385[16] }
    cs      = { v36386[16] }
    ss      = { v36387[16] }
    ds      = { v36388[16] }
    fs      = { v36389[16] }
    gs      = { v36390[16] }
    cf      = { v36391[1] }
    ?1      = { v36392[1] }
    pf      = { v36393[1] }
    ?3      = { v36394[1] }
    af      = { v36395[1] }
    ?5      = { v36396[1] }
    zf      = { v36397[1] }
    sf      = { v36398[1] }
    tf      = { v36399[1] }
    if      = { v36400[1] }
    df      = { v36401[1] }
    of      = { v36402[1] }
    iopl0   = { v36403[1] }
    iopl1   = { v36404[1] }
    nt      = { v36405[1] }
    ?15     = { v36406[1] }
    rf      = { v36407[1] }
    vm      = { v36408[1] }
    ac      = { v36409[1] }
    vif     = { v36410[1] }
    vip     = { v36411[1] }
    id      = { v36412[1] }
    ?22     = { v36413[1] }
    ?23     = { v36414[1] }
    ?24     = { v36415[1] }
    ?25     = { v36416[1] }
    ?26     = { v36417[1] }
    ?27     = { v36418[1] }
    ?28     = { v36419[1] }
    ?29     = { v36420[1] }
    ?30     = { v36421[1] }
    ?31     = { v36422[1] }
    ip      = { 0x80484bf[32] }
memory:
    address = { v36381[32] }
      value = { v36432[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v7068[32] }
    cx      = { defs={} expr=v7069[32] }
    dx      = { defs={} expr=v7070[32] }
    bx      = { defs={0x080484be} expr=v7130[32] }
    sp      = { defs={0x080484be} expr=(add[32] v7072[32] 4[32]) }
    bp      = { defs={} expr=v7073[32] }
    si      = { defs={} expr=v7074[32] }
    di      = { defs={} expr=v7075[32] }
    es      = { defs={} expr=v7076[16] }
    cs      = { defs={} expr=v7077[16] }
    ss      = { defs={} expr=v7078[16] }
    ds      = { defs={} expr=v7079[16] }
    fs      = { defs={} expr=v7080[16] }
    gs      = { defs={} expr=v7081[16] }
    cf      = { defs={} expr=v7082[1] }
    ?1      = { defs={} expr=v7083[1] }
    pf      = { defs={} expr=v7084[1] }
    ?3      = { defs={} expr=v7085[1] }
    af      = { defs={} expr=v7086[1] }
    ?5      = { defs={} expr=v7087[1] }
    zf      = { defs={} expr=v7088[1] }
    sf      = { defs={} expr=v7089[1] }
    tf      = { defs={} expr=v7090[1] }
    if      = { defs={} expr=v7091[1] }
    df      = { defs={} expr=v7092[1] }
    of      = { defs={} expr=v7093[1] }
    iopl0   = { defs={} expr=v7094[1] }
    iopl1   = { defs={} expr=v7095[1] }
    nt      = { defs={} expr=v7096[1] }
    ?15     = { defs={} expr=v7097[1] }
    rf      = { defs={} expr=v7098[1] }
    vm      = { defs={} expr=v7099[1] }
    ac      = { defs={} expr=v7100[1] }
    vif     = { defs={} expr=v7101[1] }
    vip     = { defs={} expr=v7102[1] }
    id      = { defs={} expr=v7103[1] }
    ?22     = { defs={} expr=v7104[1] }
    ?23     = { defs={} expr=v7105[1] }
    ?24     = { defs={} expr=v7106[1] }
    ?25     = { defs={} expr=v7107[1] }
    ?26     = { defs={} expr=v7108[1] }
    ?27     = { defs={} expr=v7109[1] }
    ?28     = { defs={} expr=v7110[1] }
    ?29     = { defs={} expr=v7111[1] }
    ?30     = { defs={} expr=v7112[1] }
    ?31     = { defs={} expr=v7113[1] }
    ip      = { defs={0x080484be} expr=0x080484bf[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v7072[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v7072[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v7072[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=v7072[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7130[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484bf[32] }
memory:
null state
0x80484bf:add    ebx, 0x0000120a
registers:
    ax      = { v36377[32] }
    cx      = { v36378[32] }
    dx      = { v36379[32] }
    bx      = { v36432+0x120a[32] }
    sp      = { v36381+0x4[32] }
    bp      = { v36382[32] }
    si      = { v36383[32] }
    di      = { v36384[32] }
    es      = { v36385[16] }
    cs      = { v36386[16] }
    ss      = { v36387[16] }
    ds      = { v36388[16] }
    fs      = { v36389[16] }
    gs      = { v36390[16] }
    cf      = { v36481[1] }
    ?1      = { v36392[1] }
    pf      = { -v36472+0x1[1] }
    ?3      = { v36394[1] }
    af      = { v36479[1] }
    ?5      = { v36396[1] }
    zf      = { v36477[1] }
    sf      = { v36475[1] }
    tf      = { v36399[1] }
    if      = { v36400[1] }
    df      = { v36401[1] }
    of      = { v36487[1] }
    iopl0   = { v36403[1] }
    iopl1   = { v36404[1] }
    nt      = { v36405[1] }
    ?15     = { v36406[1] }
    rf      = { v36407[1] }
    vm      = { v36408[1] }
    ac      = { v36409[1] }
    vif     = { v36410[1] }
    vip     = { v36411[1] }
    id      = { v36412[1] }
    ?22     = { v36413[1] }
    ?23     = { v36414[1] }
    ?24     = { v36415[1] }
    ?25     = { v36416[1] }
    ?26     = { v36417[1] }
    ?27     = { v36418[1] }
    ?28     = { v36419[1] }
    ?29     = { v36420[1] }
    ?30     = { v36421[1] }
    ?31     = { v36422[1] }
    ip      = { 0x80484c5[32] }
memory:
    address = { v36381[32] }
      value = { v36432[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v7068[32] }
    cx      = { defs={} expr=v7069[32] }
    dx      = { defs={} expr=v7070[32] }
    bx      = { defs={0x080484be,0x080484bf} expr=(add[32] v7130[32] 4618[32]) }
    sp      = { defs={0x080484be} expr=(add[32] v7072[32] 4[32]) }
    bp      = { defs={} expr=v7073[32] }
    si      = { defs={} expr=v7074[32] }
    di      = { defs={} expr=v7075[32] }
    es      = { defs={} expr=v7076[16] }
    cs      = { defs={} expr=v7077[16] }
    ss      = { defs={} expr=v7078[16] }
    ds      = { defs={} expr=v7079[16] }
    fs      = { defs={} expr=v7080[16] }
    gs      = { defs={} expr=v7081[16] }
    cf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7130[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v7130[32]) 4618[33]))))) }
    ?1      = { defs={} expr=v7083[1] }
    pf      = { defs={0x080484be,0x080484bf} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))))))) }
    ?3      = { defs={} expr=v7085[1] }
    af      = { defs={0x080484be,0x080484bf} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7130[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v7130[32]) 4618[33]))))) }
    ?5      = { defs={} expr=v7087[1] }
    zf      = { defs={0x080484be,0x080484bf} expr=(zerop[1] (add[32] v7130[32] 4618[32])) }
    sf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (add[32] v7130[32] 4618[32])) }
    tf      = { defs={} expr=v7090[1] }
    if      = { defs={} expr=v7091[1] }
    df      = { defs={} expr=v7092[1] }
    of      = { defs={0x080484be,0x080484bf} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7130[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v7130[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7130[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v7130[32]) 4618[33])))))) }
    iopl0   = { defs={} expr=v7094[1] }
    iopl1   = { defs={} expr=v7095[1] }
    nt      = { defs={} expr=v7096[1] }
    ?15     = { defs={} expr=v7097[1] }
    rf      = { defs={} expr=v7098[1] }
    vm      = { defs={} expr=v7099[1] }
    ac      = { defs={} expr=v7100[1] }
    vif     = { defs={} expr=v7101[1] }
    vip     = { defs={} expr=v7102[1] }
    id      = { defs={} expr=v7103[1] }
    ?22     = { defs={} expr=v7104[1] }
    ?23     = { defs={} expr=v7105[1] }
    ?24     = { defs={} expr=v7106[1] }
    ?25     = { defs={} expr=v7107[1] }
    ?26     = { defs={} expr=v7108[1] }
    ?27     = { defs={} expr=v7109[1] }
    ?28     = { defs={} expr=v7110[1] }
    ?29     = { defs={} expr=v7111[1] }
    ?30     = { defs={} expr=v7112[1] }
    ?31     = { defs={} expr=v7113[1] }
    ip      = { defs={0x080484be,0x080484bf} expr=0x080484c5[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v7072[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v7072[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v7072[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=v7072[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7130[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484c5[32] }
memory:
null state
0x80484c5:call   0x080482c8<_init>
registers:
    ax      = { v36377[32] }
    cx      = { v36378[32] }
    dx      = { v36379[32] }
    bx      = { v36432+0x120a[32] }
    sp      = { v36381[32] }
    bp      = { v36382[32] }
    si      = { v36383[32] }
    di      = { v36384[32] }
    es      = { v36385[16] }
    cs      = { v36386[16] }
    ss      = { v36387[16] }
    ds      = { v36388[16] }
    fs      = { v36389[16] }
    gs      = { v36390[16] }
    cf      = { v36481[1] }
    ?1      = { v36392[1] }
    pf      = { -v36472+0x1[1] }
    ?3      = { v36394[1] }
    af      = { v36479[1] }
    ?5      = { v36396[1] }
    zf      = { v36477[1] }
    sf      = { v36475[1] }
    tf      = { v36399[1] }
    if      = { v36400[1] }
    df      = { v36401[1] }
    of      = { v36487[1] }
    iopl0   = { v36403[1] }
    iopl1   = { v36404[1] }
    nt      = { v36405[1] }
    ?15     = { v36406[1] }
    rf      = { v36407[1] }
    vm      = { v36408[1] }
    ac      = { v36409[1] }
    vif     = { v36410[1] }
    vip     = { v36411[1] }
    id      = { v36412[1] }
    ?22     = { v36413[1] }
    ?23     = { v36414[1] }
    ?24     = { v36415[1] }
    ?25     = { v36416[1] }
    ?26     = { v36417[1] }
    ?27     = { v36418[1] }
    ?28     = { v36419[1] }
    ?29     = { v36420[1] }
    ?30     = { v36421[1] }
    ?31     = { v36422[1] }
    ip      = { 0x80482c8[32] }
memory:
    address = { v36381[32] }
      value = { 0x80484ca[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v7068[32] }
    cx      = { defs={} expr=v7069[32] }
    dx      = { defs={} expr=v7070[32] }
    bx      = { defs={0x080484be,0x080484bf} expr=(add[32] v7130[32] 4618[32]) }
    sp      = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] v7072[32] 4[32]) -4[32]) }
    bp      = { defs={} expr=v7073[32] }
    si      = { defs={} expr=v7074[32] }
    di      = { defs={} expr=v7075[32] }
    es      = { defs={} expr=v7076[16] }
    cs      = { defs={} expr=v7077[16] }
    ss      = { defs={} expr=v7078[16] }
    ds      = { defs={} expr=v7079[16] }
    fs      = { defs={} expr=v7080[16] }
    gs      = { defs={} expr=v7081[16] }
    cf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7130[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v7130[32]) 4618[33]))))) }
    ?1      = { defs={} expr=v7083[1] }
    pf      = { defs={0x080484be,0x080484bf} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7130[32] 4618[32]))))))) }
    ?3      = { defs={} expr=v7085[1] }
    af      = { defs={0x080484be,0x080484bf} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7130[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v7130[32]) 4618[33]))))) }
    ?5      = { defs={} expr=v7087[1] }
    zf      = { defs={0x080484be,0x080484bf} expr=(zerop[1] (add[32] v7130[32] 4618[32])) }
    sf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (add[32] v7130[32] 4618[32])) }
    tf      = { defs={} expr=v7090[1] }
    if      = { defs={} expr=v7091[1] }
    df      = { defs={} expr=v7092[1] }
    of      = { defs={0x080484be,0x080484bf} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7130[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v7130[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7130[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v7130[32]) 4618[33])))))) }
    iopl0   = { defs={} expr=v7094[1] }
    iopl1   = { defs={} expr=v7095[1] }
    nt      = { defs={} expr=v7096[1] }
    ?15     = { defs={} expr=v7097[1] }
    rf      = { defs={} expr=v7098[1] }
    vm      = { defs={} expr=v7099[1] }
    ac      = { defs={} expr=v7100[1] }
    vif     = { defs={} expr=v7101[1] }
    vip     = { defs={} expr=v7102[1] }
    id      = { defs={} expr=v7103[1] }
    ?22     = { defs={} expr=v7104[1] }
    ?23     = { defs={} expr=v7105[1] }
    ?24     = { defs={} expr=v7106[1] }
    ?25     = { defs={} expr=v7107[1] }
    ?26     = { defs={} expr=v7108[1] }
    ?27     = { defs={} expr=v7109[1] }
    ?28     = { defs={} expr=v7110[1] }
    ?29     = { defs={} expr=v7111[1] }
    ?30     = { defs={} expr=v7112[1] }
    ?31     = { defs={} expr=v7113[1] }
    ip      = { defs={0x080484c5} expr=0x080482c8[32] }
memory:
    address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] (add[32] v7072[32] 4[32]) -4[32]) 3[32]) }
      value = { defs={0x080484be,0x080484bf,0x080484c5} expr=8[8] }
      flags = { }
    address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] (add[32] v7072[32] 4[32]) -4[32]) 2[32]) }
      value = { defs={0x080484be,0x080484bf,0x080484c5} expr=4[8] }
      flags = { }
    address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] (add[32] v7072[32] 4[32]) -4[32]) 1[32]) }
      value = { defs={0x080484be,0x080484bf,0x080484c5} expr=-124[8] }
      flags = { }
    address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] v7072[32] 4[32]) -4[32]) }
      value = { defs={0x080484be,0x080484bf,0x080484c5} expr=-54[8] }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v7072[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v7072[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v7072[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7130[32]) }
      flags = { rdonly }
    address = { defs={} expr=v7072[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7130[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482c8[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
registers:
    ax      = { v36550-0xe0[32] }
    cx      = { v36548[32] }
    dx      = { v36549[32] }
    bx      = { v36550[32] }
    sp      = { v36551[32] }
    bp      = { v36552[32] }
    si      = { v36553[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { v36561[1] }
    ?1      = { v36562[1] }
    pf      = { v36563[1] }
    ?3      = { v36564[1] }
    af      = { v36565[1] }
    ?5      = { v36566[1] }
    zf      = { v36567[1] }
    sf      = { v36568[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36572[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484d0[32] }
memory:
registers:
    ax      = { defs={0x080484ca} expr=(add[32] v7303[32] -224[32]) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={} expr=v7302[32] }
    bx      = { defs={} expr=v7303[32] }
    sp      = { defs={} expr=v7304[32] }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={} expr=v7306[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={} expr=v7314[1] }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={} expr=v7316[1] }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={} expr=v7318[1] }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={} expr=v7320[1] }
    sf      = { defs={} expr=v7321[1] }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={} expr=v7325[1] }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484ca} expr=0x080484d0[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484d0[32] }
memory:
null state
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
registers:
    ax      = { v36550-0xe0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36550[32] }
    sp      = { v36551[32] }
    bp      = { v36552[32] }
    si      = { v36553[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { v36561[1] }
    ?1      = { v36562[1] }
    pf      = { v36563[1] }
    ?3      = { v36564[1] }
    af      = { v36565[1] }
    ?5      = { v36566[1] }
    zf      = { v36567[1] }
    sf      = { v36568[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36572[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484d6[32] }
memory:
registers:
    ax      = { defs={0x080484ca} expr=(add[32] v7303[32] -224[32]) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={} expr=v7303[32] }
    sp      = { defs={} expr=v7304[32] }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={} expr=v7306[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={} expr=v7314[1] }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={} expr=v7316[1] }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={} expr=v7318[1] }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={} expr=v7320[1] }
    sf      = { defs={} expr=v7321[1] }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={} expr=v7325[1] }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484ca,0x080484d0} expr=0x080484d6[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484d6[32] }
memory:
null state
0x80484d6:sub    eax, edx
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36550[32] }
    sp      = { v36551[32] }
    bp      = { v36552[32] }
    si      = { v36553[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { 0x0[1] }
    ?1      = { v36562[1] }
    pf      = { 0x1[1] }
    ?3      = { v36564[1] }
    af      = { 0x0[1] }
    ?5      = { v36566[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { 0x0[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484d8[32] }
memory:
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={} expr=v7303[32] }
    sp      = { defs={} expr=v7304[32] }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={} expr=v7306[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v7303[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v7303[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v7303[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v7303[32] -224[32]))) 1[33]))))))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v7303[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v7303[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v7303[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v7303[32] -224[32]))) 1[33]))))))) }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(zerop[1] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    sf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v7303[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v7303[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v7303[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v7303[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v7303[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v7303[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v7303[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v7303[32] -224[32]))) 1[33]))))))) }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=0x080484d8[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484d8[32] }
memory:
null state
0x80484d8:sar    eax, 0x02
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36550[32] }
    sp      = { v36551[32] }
    bp      = { v36552[32] }
    si      = { v36553[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { 0x0[1] }
    ?1      = { v36562[1] }
    pf      = { 0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36664[1] }
    ?5      = { v36566[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36678[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484db[32] }
memory:
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={} expr=v7303[32] }
    sp      = { defs={} expr=v7304[32] }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={} expr=v7306[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484d8} expr=v7499[1] }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484d8} expr=v7525[1] }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=0x080484db[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484db[32] }
memory:
null state
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36550[32] }
    sp      = { v36551[32] }
    bp      = { v36552[32] }
    si      = { v36553[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { 0x0[1] }
    ?1      = { v36562[1] }
    pf      = { 0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36664[1] }
    ?5      = { v36566[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36678[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484de[32] }
memory:
    address = { v36552-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={} expr=v7303[32] }
    sp      = { defs={} expr=v7304[32] }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={} expr=v7306[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484d8} expr=v7499[1] }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484d8} expr=v7525[1] }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=0x080484de[32] }
memory:
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 3[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 2[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 1[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] v7305[32] -16[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484de[32] }
memory:
null state
0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36550[32] }
    sp      = { v36551[32] }
    bp      = { v36552[32] }
    si      = { v36553[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { 0x0[1] }
    ?1      = { v36562[1] }
    pf      = { 0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36664[1] }
    ?5      = { v36566[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36678[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484e0[32] }
memory:
    address = { v36552-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={} expr=v7303[32] }
    sp      = { defs={} expr=v7304[32] }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={} expr=v7306[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484d8} expr=v7499[1] }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484d8} expr=v7525[1] }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de} expr=(ite[32] (invert[1] (zerop[1] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))))) 0x080484f0[32] 0x080484e0[32]) }
memory:
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 3[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 2[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 1[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] v7305[32] -16[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e0, 0x080484f0[32] }
memory:
null state
0x80484e0:add    esp, 0x0c
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36550[32] }
    sp      = { v36551+0xc[32] }
    bp      = { v36552[32] }
    si      = { v36553[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { v36775[1] }
    ?1      = { v36562[1] }
    pf      = { -v36766+0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36773[1] }
    ?5      = { v36566[1] }
    zf      = { v36771[1] }
    sf      = { v36769[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36781[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484e3[32] }
memory:
    address = { v36552-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={} expr=v7303[32] }
    sp      = { defs={0x080484e0} expr=(add[32] v7304[32] 12[32]) }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={} expr=v7306[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v7304[32] 12[32])) }
    sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v7304[32] 12[32])) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484e0} expr=0x080484e3[32] }
memory:
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 3[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 2[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 1[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] v7305[32] -16[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e3[32] }
memory:
null state
0x80484e3:pop    ebx
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36791[32] }
    sp      = { v36551+0x10[32] }
    bp      = { v36552[32] }
    si      = { v36553[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { v36775[1] }
    ?1      = { v36562[1] }
    pf      = { -v36766+0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36773[1] }
    ?5      = { v36566[1] }
    zf      = { v36771[1] }
    sf      = { v36769[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36781[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484e4[32] }
memory:
    address = { v36552-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
    address = { v36551+0xc[32] }
      value = { v36791[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={0x080484e3} expr=v7732[32] }
    sp      = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v7304[32] 12[32]) 4[32]) }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={} expr=v7306[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v7304[32] 12[32])) }
    sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v7304[32] 12[32])) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484e0,0x080484e3} expr=0x080484e4[32] }
memory:
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 3[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 2[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 1[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] v7305[32] -16[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] v7304[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7732[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e4[32] }
memory:
null state
0x80484e4:pop    esi
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36791[32] }
    sp      = { v36551+0x14[32] }
    bp      = { v36552[32] }
    si      = { v36801[32] }
    di      = { v36554[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { v36775[1] }
    ?1      = { v36562[1] }
    pf      = { -v36766+0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36773[1] }
    ?5      = { v36566[1] }
    zf      = { v36771[1] }
    sf      = { v36769[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36781[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484e5[32] }
memory:
    address = { v36552-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
    address = { v36551+0xc[32] }
      value = { v36791[32] }
      flags = { size=4; read-only }
    address = { v36551+0x10[32] }
      value = { v36801[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={0x080484e3} expr=v7732[32] }
    sp      = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={0x080484e4} expr=v7760[32] }
    di      = { defs={} expr=v7307[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v7304[32] 12[32])) }
    sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v7304[32] 12[32])) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484e0,0x080484e3,0x080484e4} expr=0x080484e5[32] }
memory:
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 3[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 2[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 1[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] v7305[32] -16[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v7304[32] 12[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] v7304[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7732[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e5[32] }
memory:
null state
0x80484e5:pop    edi
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36791[32] }
    sp      = { v36551+0x18[32] }
    bp      = { v36552[32] }
    si      = { v36801[32] }
    di      = { v36811[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { v36775[1] }
    ?1      = { v36562[1] }
    pf      = { -v36766+0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36773[1] }
    ?5      = { v36566[1] }
    zf      = { v36771[1] }
    sf      = { v36769[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36781[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484e6[32] }
memory:
    address = { v36552-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
    address = { v36551+0xc[32] }
      value = { v36791[32] }
      flags = { size=4; read-only }
    address = { v36551+0x10[32] }
      value = { v36801[32] }
      flags = { size=4; read-only }
    address = { v36551+0x14[32] }
      value = { v36811[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={0x080484e3} expr=v7732[32] }
    sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) }
    bp      = { defs={} expr=v7305[32] }
    si      = { defs={0x080484e4} expr=v7760[32] }
    di      = { defs={0x080484e5} expr=v7788[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v7304[32] 12[32])) }
    sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v7304[32] 12[32])) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=0x080484e6[32] }
memory:
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 3[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 2[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 1[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] v7305[32] -16[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v7304[32] 12[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] v7304[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7732[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e6[32] }
memory:
null state
0x80484e6:pop    ebp
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36791[32] }
    sp      = { v36551+0x1c[32] }
    bp      = { v36821[32] }
    si      = { v36801[32] }
    di      = { v36811[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { v36775[1] }
    ?1      = { v36562[1] }
    pf      = { -v36766+0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36773[1] }
    ?5      = { v36566[1] }
    zf      = { v36771[1] }
    sf      = { v36769[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36781[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { 0x80484e7[32] }
memory:
    address = { v36552-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
    address = { v36551+0xc[32] }
      value = { v36791[32] }
      flags = { size=4; read-only }
    address = { v36551+0x10[32] }
      value = { v36801[32] }
      flags = { size=4; read-only }
    address = { v36551+0x14[32] }
      value = { v36811[32] }
      flags = { size=4; read-only }
    address = { v36551+0x18[32] }
      value = { v36821[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={0x080484e3} expr=v7732[32] }
    sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
    bp      = { defs={0x080484e6} expr=v7816[32] }
    si      = { defs={0x080484e4} expr=v7760[32] }
    di      = { defs={0x080484e5} expr=v7788[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v7304[32] 12[32])) }
    sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v7304[32] 12[32])) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=0x080484e7[32] }
memory:
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 3[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 2[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 1[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] v7305[32] -16[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7816[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7816[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7816[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7816[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v7304[32] 12[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] v7304[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7732[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e7[32] }
memory:
null state
0x80484e7:ret    
registers:
    ax      = { 0x0[32] }
    cx      = { v36548[32] }
    dx      = { v36550-0xe0[32] }
    bx      = { v36791[32] }
    sp      = { v36551+0x20[32] }
    bp      = { v36821[32] }
    si      = { v36801[32] }
    di      = { v36811[32] }
    es      = { v36555[16] }
    cs      = { v36556[16] }
    ss      = { v36557[16] }
    ds      = { v36558[16] }
    fs      = { v36559[16] }
    gs      = { v36560[16] }
    cf      = { v36775[1] }
    ?1      = { v36562[1] }
    pf      = { -v36766+0x1[1] }
    ?3      = { v36564[1] }
    af      = { v36773[1] }
    ?5      = { v36566[1] }
    zf      = { v36771[1] }
    sf      = { v36769[1] }
    tf      = { v36569[1] }
    if      = { v36570[1] }
    df      = { v36571[1] }
    of      = { v36781[1] }
    iopl0   = { v36573[1] }
    iopl1   = { v36574[1] }
    nt      = { v36575[1] }
    ?15     = { v36576[1] }
    rf      = { v36577[1] }
    vm      = { v36578[1] }
    ac      = { v36579[1] }
    vif     = { v36580[1] }
    vip     = { v36581[1] }
    id      = { v36582[1] }
    ?22     = { v36583[1] }
    ?23     = { v36584[1] }
    ?24     = { v36585[1] }
    ?25     = { v36586[1] }
    ?26     = { v36587[1] }
    ?27     = { v36588[1] }
    ?28     = { v36589[1] }
    ?29     = { v36590[1] }
    ?30     = { v36591[1] }
    ?31     = { v36592[1] }
    ip      = { v36833[32] }
memory:
    address = { v36552-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
    address = { v36551+0xc[32] }
      value = { v36791[32] }
      flags = { size=4; read-only }
    address = { v36551+0x10[32] }
      value = { v36801[32] }
      flags = { size=4; read-only }
    address = { v36551+0x14[32] }
      value = { v36811[32] }
      flags = { size=4; read-only }
    address = { v36551+0x18[32] }
      value = { v36821[32] }
      flags = { size=4; read-only }
    address = { v36551+0x1c[32] }
      value = { v36833[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32]))) }
    cx      = { defs={} expr=v7301[32] }
    dx      = { defs={0x080484d0} expr=(add[32] v7303[32] -224[32]) }
    bx      = { defs={0x080484e3} expr=v7732[32] }
    sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
    bp      = { defs={0x080484e6} expr=v7816[32] }
    si      = { defs={0x080484e4} expr=v7760[32] }
    di      = { defs={0x080484e5} expr=v7788[32] }
    es      = { defs={} expr=v7308[16] }
    cs      = { defs={} expr=v7309[16] }
    ss      = { defs={} expr=v7310[16] }
    ds      = { defs={} expr=v7311[16] }
    fs      = { defs={} expr=v7312[16] }
    gs      = { defs={} expr=v7313[16] }
    cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?1      = { defs={} expr=v7315[1] }
    pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v7304[32] 12[32]))))))) }
    ?3      = { defs={} expr=v7317[1] }
    af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) }
    ?5      = { defs={} expr=v7319[1] }
    zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v7304[32] 12[32])) }
    sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v7304[32] 12[32])) }
    tf      = { defs={} expr=v7322[1] }
    if      = { defs={} expr=v7323[1] }
    df      = { defs={} expr=v7324[1] }
    of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v7304[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v7304[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v7326[1] }
    iopl1   = { defs={} expr=v7327[1] }
    nt      = { defs={} expr=v7328[1] }
    ?15     = { defs={} expr=v7329[1] }
    rf      = { defs={} expr=v7330[1] }
    vm      = { defs={} expr=v7331[1] }
    ac      = { defs={} expr=v7332[1] }
    vif     = { defs={} expr=v7333[1] }
    vip     = { defs={} expr=v7334[1] }
    id      = { defs={} expr=v7335[1] }
    ?22     = { defs={} expr=v7336[1] }
    ?23     = { defs={} expr=v7337[1] }
    ?24     = { defs={} expr=v7338[1] }
    ?25     = { defs={} expr=v7339[1] }
    ?26     = { defs={} expr=v7340[1] }
    ?27     = { defs={} expr=v7341[1] }
    ?28     = { defs={} expr=v7342[1] }
    ?29     = { defs={} expr=v7343[1] }
    ?30     = { defs={} expr=v7344[1] }
    ?31     = { defs={} expr=v7345[1] }
    ip      = { defs={0x080484e7} expr=v7846[32] }
memory:
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 3[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 2[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] (add[32] v7305[32] -16[32]) 1[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x080484db} expr=(add[32] v7305[32] -16[32]) }
      value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v7303[32] -224[32]) (add[32] (invert[32] (add[32] v7303[32] -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7846[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7846[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7846[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7846[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7816[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7816[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7816[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7816[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7788[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] (add[32] v7304[32] 12[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v7304[32] 12[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7760[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] (add[32] v7304[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v7732[32]) }
      flags = { rdonly }
    address = { defs={0x080484e0} expr=(add[32] v7304[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v7732[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
registers:
    ax      = { v36884[32] }
    cx      = { v36885[32] }
    dx      = { v36886[32] }
    bx      = { v36887[32] }
    sp      = { v36888-0x4[32] }
    bp      = { v36889[32] }
    si      = { v36890[32] }
    di      = { v36891[32] }
    es      = { v36892[16] }
    cs      = { v36893[16] }
    ss      = { v36894[16] }
    ds      = { v36895[16] }
    fs      = { v36896[16] }
    gs      = { v36897[16] }
    cf      = { v36898[1] }
    ?1      = { v36899[1] }
    pf      = { v36900[1] }
    ?3      = { v36901[1] }
    af      = { v36902[1] }
    ?5      = { v36903[1] }
    zf      = { v36904[1] }
    sf      = { v36905[1] }
    tf      = { v36906[1] }
    if      = { v36907[1] }
    df      = { v36908[1] }
    of      = { v36909[1] }
    iopl0   = { v36910[1] }
    iopl1   = { v36911[1] }
    nt      = { v36912[1] }
    ?15     = { v36913[1] }
    rf      = { v36914[1] }
    vm      = { v36915[1] }
    ac      = { v36916[1] }
    vif     = { v36917[1] }
    vip     = { v36918[1] }
    id      = { v36919[1] }
    ?22     = { v36920[1] }
    ?23     = { v36921[1] }
    ?24     = { v36922[1] }
    ?25     = { v36923[1] }
    ?26     = { v36924[1] }
    ?27     = { v36925[1] }
    ?28     = { v36926[1] }
    ?29     = { v36927[1] }
    ?30     = { v36928[1] }
    ?31     = { v36929[1] }
    ip      = { 0x8048521[32] }
memory:
    address = { v36888-0x4[32] }
      value = { v36889[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v7910[32] }
    cx      = { defs={} expr=v7911[32] }
    dx      = { defs={} expr=v7912[32] }
    bx      = { defs={} expr=v7913[32] }
    sp      = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
    bp      = { defs={} expr=v7915[32] }
    si      = { defs={} expr=v7916[32] }
    di      = { defs={} expr=v7917[32] }
    es      = { defs={} expr=v7918[16] }
    cs      = { defs={} expr=v7919[16] }
    ss      = { defs={} expr=v7920[16] }
    ds      = { defs={} expr=v7921[16] }
    fs      = { defs={} expr=v7922[16] }
    gs      = { defs={} expr=v7923[16] }
    cf      = { defs={} expr=v7924[1] }
    ?1      = { defs={} expr=v7925[1] }
    pf      = { defs={} expr=v7926[1] }
    ?3      = { defs={} expr=v7927[1] }
    af      = { defs={} expr=v7928[1] }
    ?5      = { defs={} expr=v7929[1] }
    zf      = { defs={} expr=v7930[1] }
    sf      = { defs={} expr=v7931[1] }
    tf      = { defs={} expr=v7932[1] }
    if      = { defs={} expr=v7933[1] }
    df      = { defs={} expr=v7934[1] }
    of      = { defs={} expr=v7935[1] }
    iopl0   = { defs={} expr=v7936[1] }
    iopl1   = { defs={} expr=v7937[1] }
    nt      = { defs={} expr=v7938[1] }
    ?15     = { defs={} expr=v7939[1] }
    rf      = { defs={} expr=v7940[1] }
    vm      = { defs={} expr=v7941[1] }
    ac      = { defs={} expr=v7942[1] }
    vif     = { defs={} expr=v7943[1] }
    vip     = { defs={} expr=v7944[1] }
    id      = { defs={} expr=v7945[1] }
    ?22     = { defs={} expr=v7946[1] }
    ?23     = { defs={} expr=v7947[1] }
    ?24     = { defs={} expr=v7948[1] }
    ?25     = { defs={} expr=v7949[1] }
    ?26     = { defs={} expr=v7950[1] }
    ?27     = { defs={} expr=v7951[1] }
    ?28     = { defs={} expr=v7952[1] }
    ?29     = { defs={} expr=v7953[1] }
    ?30     = { defs={} expr=v7954[1] }
    ?31     = { defs={} expr=v7955[1] }
    ip      = { defs={0x08048520} expr=0x08048521[32] }
memory:
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 3[32]) }
      value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 2[32]) }
      value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 1[32]) }
      value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
      value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v7915[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048521[32] }
memory:
null state
0x8048521:mov    ebp, esp
registers:
    ax      = { v36884[32] }
    cx      = { v36885[32] }
    dx      = { v36886[32] }
    bx      = { v36887[32] }
    sp      = { v36888-0x4[32] }
    bp      = { v36888-0x4[32] }
    si      = { v36890[32] }
    di      = { v36891[32] }
    es      = { v36892[16] }
    cs      = { v36893[16] }
    ss      = { v36894[16] }
    ds      = { v36895[16] }
    fs      = { v36896[16] }
    gs      = { v36897[16] }
    cf      = { v36898[1] }
    ?1      = { v36899[1] }
    pf      = { v36900[1] }
    ?3      = { v36901[1] }
    af      = { v36902[1] }
    ?5      = { v36903[1] }
    zf      = { v36904[1] }
    sf      = { v36905[1] }
    tf      = { v36906[1] }
    if      = { v36907[1] }
    df      = { v36908[1] }
    of      = { v36909[1] }
    iopl0   = { v36910[1] }
    iopl1   = { v36911[1] }
    nt      = { v36912[1] }
    ?15     = { v36913[1] }
    rf      = { v36914[1] }
    vm      = { v36915[1] }
    ac      = { v36916[1] }
    vif     = { v36917[1] }
    vip     = { v36918[1] }
    id      = { v36919[1] }
    ?22     = { v36920[1] }
    ?23     = { v36921[1] }
    ?24     = { v36922[1] }
    ?25     = { v36923[1] }
    ?26     = { v36924[1] }
    ?27     = { v36925[1] }
    ?28     = { v36926[1] }
    ?29     = { v36927[1] }
    ?30     = { v36928[1] }
    ?31     = { v36929[1] }
    ip      = { 0x8048523[32] }
memory:
    address = { v36888-0x4[32] }
      value = { v36889[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v7910[32] }
    cx      = { defs={} expr=v7911[32] }
    dx      = { defs={} expr=v7912[32] }
    bx      = { defs={} expr=v7913[32] }
    sp      = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
    bp      = { defs={0x08048520,0x08048521} expr=(add[32] v7914[32] -4[32]) }
    si      = { defs={} expr=v7916[32] }
    di      = { defs={} expr=v7917[32] }
    es      = { defs={} expr=v7918[16] }
    cs      = { defs={} expr=v7919[16] }
    ss      = { defs={} expr=v7920[16] }
    ds      = { defs={} expr=v7921[16] }
    fs      = { defs={} expr=v7922[16] }
    gs      = { defs={} expr=v7923[16] }
    cf      = { defs={} expr=v7924[1] }
    ?1      = { defs={} expr=v7925[1] }
    pf      = { defs={} expr=v7926[1] }
    ?3      = { defs={} expr=v7927[1] }
    af      = { defs={} expr=v7928[1] }
    ?5      = { defs={} expr=v7929[1] }
    zf      = { defs={} expr=v7930[1] }
    sf      = { defs={} expr=v7931[1] }
    tf      = { defs={} expr=v7932[1] }
    if      = { defs={} expr=v7933[1] }
    df      = { defs={} expr=v7934[1] }
    of      = { defs={} expr=v7935[1] }
    iopl0   = { defs={} expr=v7936[1] }
    iopl1   = { defs={} expr=v7937[1] }
    nt      = { defs={} expr=v7938[1] }
    ?15     = { defs={} expr=v7939[1] }
    rf      = { defs={} expr=v7940[1] }
    vm      = { defs={} expr=v7941[1] }
    ac      = { defs={} expr=v7942[1] }
    vif     = { defs={} expr=v7943[1] }
    vip     = { defs={} expr=v7944[1] }
    id      = { defs={} expr=v7945[1] }
    ?22     = { defs={} expr=v7946[1] }
    ?23     = { defs={} expr=v7947[1] }
    ?24     = { defs={} expr=v7948[1] }
    ?25     = { defs={} expr=v7949[1] }
    ?26     = { defs={} expr=v7950[1] }
    ?27     = { defs={} expr=v7951[1] }
    ?28     = { defs={} expr=v7952[1] }
    ?29     = { defs={} expr=v7953[1] }
    ?30     = { defs={} expr=v7954[1] }
    ?31     = { defs={} expr=v7955[1] }
    ip      = { defs={0x08048520,0x08048521} expr=0x08048523[32] }
memory:
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 3[32]) }
      value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 2[32]) }
      value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 1[32]) }
      value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
      value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v7915[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048523[32] }
memory:
null state
0x8048523:push   edi
registers:
    ax      = { v36884[32] }
    cx      = { v36885[32] }
    dx      = { v36886[32] }
    bx      = { v36887[32] }
    sp      = { v36888-0x8[32] }
    bp      = { v36888-0x4[32] }
    si      = { v36890[32] }
    di      = { v36891[32] }
    es      = { v36892[16] }
    cs      = { v36893[16] }
    ss      = { v36894[16] }
    ds      = { v36895[16] }
    fs      = { v36896[16] }
    gs      = { v36897[16] }
    cf      = { v36898[1] }
    ?1      = { v36899[1] }
    pf      = { v36900[1] }
    ?3      = { v36901[1] }
    af      = { v36902[1] }
    ?5      = { v36903[1] }
    zf      = { v36904[1] }
    sf      = { v36905[1] }
    tf      = { v36906[1] }
    if      = { v36907[1] }
    df      = { v36908[1] }
    of      = { v36909[1] }
    iopl0   = { v36910[1] }
    iopl1   = { v36911[1] }
    nt      = { v36912[1] }
    ?15     = { v36913[1] }
    rf      = { v36914[1] }
    vm      = { v36915[1] }
    ac      = { v36916[1] }
    vif     = { v36917[1] }
    vip     = { v36918[1] }
    id      = { v36919[1] }
    ?22     = { v36920[1] }
    ?23     = { v36921[1] }
    ?24     = { v36922[1] }
    ?25     = { v36923[1] }
    ?26     = { v36924[1] }
    ?27     = { v36925[1] }
    ?28     = { v36926[1] }
    ?29     = { v36927[1] }
    ?30     = { v36928[1] }
    ?31     = { v36929[1] }
    ip      = { 0x8048524[32] }
memory:
    address = { v36888-0x4[32] }
      value = { v36889[32] }
      flags = { size=4 }
    address = { v36888-0x8[32] }
      value = { v36891[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v7910[32] }
    cx      = { defs={} expr=v7911[32] }
    dx      = { defs={} expr=v7912[32] }
    bx      = { defs={} expr=v7913[32] }
    sp      = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v7914[32] -4[32]) -4[32]) }
    bp      = { defs={0x08048520,0x08048521} expr=(add[32] v7914[32] -4[32]) }
    si      = { defs={} expr=v7916[32] }
    di      = { defs={} expr=v7917[32] }
    es      = { defs={} expr=v7918[16] }
    cs      = { defs={} expr=v7919[16] }
    ss      = { defs={} expr=v7920[16] }
    ds      = { defs={} expr=v7921[16] }
    fs      = { defs={} expr=v7922[16] }
    gs      = { defs={} expr=v7923[16] }
    cf      = { defs={} expr=v7924[1] }
    ?1      = { defs={} expr=v7925[1] }
    pf      = { defs={} expr=v7926[1] }
    ?3      = { defs={} expr=v7927[1] }
    af      = { defs={} expr=v7928[1] }
    ?5      = { defs={} expr=v7929[1] }
    zf      = { defs={} expr=v7930[1] }
    sf      = { defs={} expr=v7931[1] }
    tf      = { defs={} expr=v7932[1] }
    if      = { defs={} expr=v7933[1] }
    df      = { defs={} expr=v7934[1] }
    of      = { defs={} expr=v7935[1] }
    iopl0   = { defs={} expr=v7936[1] }
    iopl1   = { defs={} expr=v7937[1] }
    nt      = { defs={} expr=v7938[1] }
    ?15     = { defs={} expr=v7939[1] }
    rf      = { defs={} expr=v7940[1] }
    vm      = { defs={} expr=v7941[1] }
    ac      = { defs={} expr=v7942[1] }
    vif     = { defs={} expr=v7943[1] }
    vip     = { defs={} expr=v7944[1] }
    id      = { defs={} expr=v7945[1] }
    ?22     = { defs={} expr=v7946[1] }
    ?23     = { defs={} expr=v7947[1] }
    ?24     = { defs={} expr=v7948[1] }
    ?25     = { defs={} expr=v7949[1] }
    ?26     = { defs={} expr=v7950[1] }
    ?27     = { defs={} expr=v7951[1] }
    ?28     = { defs={} expr=v7952[1] }
    ?29     = { defs={} expr=v7953[1] }
    ?30     = { defs={} expr=v7954[1] }
    ?31     = { defs={} expr=v7955[1] }
    ip      = { defs={0x08048520,0x08048521,0x08048523} expr=0x08048524[32] }
memory:
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v7914[32] -4[32]) -4[32]) }
      value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 3[32]) }
      value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 2[32]) }
      value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 1[32]) }
      value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
      value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v7915[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048524[32] }
memory:
null state
0x8048524:push   esi
registers:
    ax      = { v36884[32] }
    cx      = { v36885[32] }
    dx      = { v36886[32] }
    bx      = { v36887[32] }
    sp      = { v36888-0xc[32] }
    bp      = { v36888-0x4[32] }
    si      = { v36890[32] }
    di      = { v36891[32] }
    es      = { v36892[16] }
    cs      = { v36893[16] }
    ss      = { v36894[16] }
    ds      = { v36895[16] }
    fs      = { v36896[16] }
    gs      = { v36897[16] }
    cf      = { v36898[1] }
    ?1      = { v36899[1] }
    pf      = { v36900[1] }
    ?3      = { v36901[1] }
    af      = { v36902[1] }
    ?5      = { v36903[1] }
    zf      = { v36904[1] }
    sf      = { v36905[1] }
    tf      = { v36906[1] }
    if      = { v36907[1] }
    df      = { v36908[1] }
    of      = { v36909[1] }
    iopl0   = { v36910[1] }
    iopl1   = { v36911[1] }
    nt      = { v36912[1] }
    ?15     = { v36913[1] }
    rf      = { v36914[1] }
    vm      = { v36915[1] }
    ac      = { v36916[1] }
    vif     = { v36917[1] }
    vip     = { v36918[1] }
    id      = { v36919[1] }
    ?22     = { v36920[1] }
    ?23     = { v36921[1] }
    ?24     = { v36922[1] }
    ?25     = { v36923[1] }
    ?26     = { v36924[1] }
    ?27     = { v36925[1] }
    ?28     = { v36926[1] }
    ?29     = { v36927[1] }
    ?30     = { v36928[1] }
    ?31     = { v36929[1] }
    ip      = { 0x8048525[32] }
memory:
    address = { v36888-0x4[32] }
      value = { v36889[32] }
      flags = { size=4 }
    address = { v36888-0x8[32] }
      value = { v36891[32] }
      flags = { size=4 }
    address = { v36888-0xc[32] }
      value = { v36890[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v7910[32] }
    cx      = { defs={} expr=v7911[32] }
    dx      = { defs={} expr=v7912[32] }
    bx      = { defs={} expr=v7913[32] }
    sp      = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048520,0x08048521} expr=(add[32] v7914[32] -4[32]) }
    si      = { defs={} expr=v7916[32] }
    di      = { defs={} expr=v7917[32] }
    es      = { defs={} expr=v7918[16] }
    cs      = { defs={} expr=v7919[16] }
    ss      = { defs={} expr=v7920[16] }
    ds      = { defs={} expr=v7921[16] }
    fs      = { defs={} expr=v7922[16] }
    gs      = { defs={} expr=v7923[16] }
    cf      = { defs={} expr=v7924[1] }
    ?1      = { defs={} expr=v7925[1] }
    pf      = { defs={} expr=v7926[1] }
    ?3      = { defs={} expr=v7927[1] }
    af      = { defs={} expr=v7928[1] }
    ?5      = { defs={} expr=v7929[1] }
    zf      = { defs={} expr=v7930[1] }
    sf      = { defs={} expr=v7931[1] }
    tf      = { defs={} expr=v7932[1] }
    if      = { defs={} expr=v7933[1] }
    df      = { defs={} expr=v7934[1] }
    of      = { defs={} expr=v7935[1] }
    iopl0   = { defs={} expr=v7936[1] }
    iopl1   = { defs={} expr=v7937[1] }
    nt      = { defs={} expr=v7938[1] }
    ?15     = { defs={} expr=v7939[1] }
    rf      = { defs={} expr=v7940[1] }
    vm      = { defs={} expr=v7941[1] }
    ac      = { defs={} expr=v7942[1] }
    vif     = { defs={} expr=v7943[1] }
    vip     = { defs={} expr=v7944[1] }
    id      = { defs={} expr=v7945[1] }
    ?22     = { defs={} expr=v7946[1] }
    ?23     = { defs={} expr=v7947[1] }
    ?24     = { defs={} expr=v7948[1] }
    ?25     = { defs={} expr=v7949[1] }
    ?26     = { defs={} expr=v7950[1] }
    ?27     = { defs={} expr=v7951[1] }
    ?28     = { defs={} expr=v7952[1] }
    ?29     = { defs={} expr=v7953[1] }
    ?30     = { defs={} expr=v7954[1] }
    ?31     = { defs={} expr=v7955[1] }
    ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524} expr=0x08048525[32] }
memory:
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048524} expr=(extract[8] 24[32] 32[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048524} expr=(extract[8] 16[32] 24[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048524} expr=(extract[8] 8[32] 16[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048524} expr=(extract[8] 0[32] 8[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v7914[32] -4[32]) -4[32]) }
      value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 3[32]) }
      value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 2[32]) }
      value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 1[32]) }
      value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
      value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v7915[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048525[32] }
memory:
null state
0x8048525:push   ebx
registers:
    ax      = { v36884[32] }
    cx      = { v36885[32] }
    dx      = { v36886[32] }
    bx      = { v36887[32] }
    sp      = { v36888-0x10[32] }
    bp      = { v36888-0x4[32] }
    si      = { v36890[32] }
    di      = { v36891[32] }
    es      = { v36892[16] }
    cs      = { v36893[16] }
    ss      = { v36894[16] }
    ds      = { v36895[16] }
    fs      = { v36896[16] }
    gs      = { v36897[16] }
    cf      = { v36898[1] }
    ?1      = { v36899[1] }
    pf      = { v36900[1] }
    ?3      = { v36901[1] }
    af      = { v36902[1] }
    ?5      = { v36903[1] }
    zf      = { v36904[1] }
    sf      = { v36905[1] }
    tf      = { v36906[1] }
    if      = { v36907[1] }
    df      = { v36908[1] }
    of      = { v36909[1] }
    iopl0   = { v36910[1] }
    iopl1   = { v36911[1] }
    nt      = { v36912[1] }
    ?15     = { v36913[1] }
    rf      = { v36914[1] }
    vm      = { v36915[1] }
    ac      = { v36916[1] }
    vif     = { v36917[1] }
    vip     = { v36918[1] }
    id      = { v36919[1] }
    ?22     = { v36920[1] }
    ?23     = { v36921[1] }
    ?24     = { v36922[1] }
    ?25     = { v36923[1] }
    ?26     = { v36924[1] }
    ?27     = { v36925[1] }
    ?28     = { v36926[1] }
    ?29     = { v36927[1] }
    ?30     = { v36928[1] }
    ?31     = { v36929[1] }
    ip      = { 0x8048526[32] }
memory:
    address = { v36888-0x4[32] }
      value = { v36889[32] }
      flags = { size=4 }
    address = { v36888-0x8[32] }
      value = { v36891[32] }
      flags = { size=4 }
    address = { v36888-0xc[32] }
      value = { v36890[32] }
      flags = { size=4 }
    address = { v36888-0x10[32] }
      value = { v36887[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v7910[32] }
    cx      = { defs={} expr=v7911[32] }
    dx      = { defs={} expr=v7912[32] }
    bx      = { defs={} expr=v7913[32] }
    sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048520,0x08048521} expr=(add[32] v7914[32] -4[32]) }
    si      = { defs={} expr=v7916[32] }
    di      = { defs={} expr=v7917[32] }
    es      = { defs={} expr=v7918[16] }
    cs      = { defs={} expr=v7919[16] }
    ss      = { defs={} expr=v7920[16] }
    ds      = { defs={} expr=v7921[16] }
    fs      = { defs={} expr=v7922[16] }
    gs      = { defs={} expr=v7923[16] }
    cf      = { defs={} expr=v7924[1] }
    ?1      = { defs={} expr=v7925[1] }
    pf      = { defs={} expr=v7926[1] }
    ?3      = { defs={} expr=v7927[1] }
    af      = { defs={} expr=v7928[1] }
    ?5      = { defs={} expr=v7929[1] }
    zf      = { defs={} expr=v7930[1] }
    sf      = { defs={} expr=v7931[1] }
    tf      = { defs={} expr=v7932[1] }
    if      = { defs={} expr=v7933[1] }
    df      = { defs={} expr=v7934[1] }
    of      = { defs={} expr=v7935[1] }
    iopl0   = { defs={} expr=v7936[1] }
    iopl1   = { defs={} expr=v7937[1] }
    nt      = { defs={} expr=v7938[1] }
    ?15     = { defs={} expr=v7939[1] }
    rf      = { defs={} expr=v7940[1] }
    vm      = { defs={} expr=v7941[1] }
    ac      = { defs={} expr=v7942[1] }
    vif     = { defs={} expr=v7943[1] }
    vip     = { defs={} expr=v7944[1] }
    id      = { defs={} expr=v7945[1] }
    ?22     = { defs={} expr=v7946[1] }
    ?23     = { defs={} expr=v7947[1] }
    ?24     = { defs={} expr=v7948[1] }
    ?25     = { defs={} expr=v7949[1] }
    ?26     = { defs={} expr=v7950[1] }
    ?27     = { defs={} expr=v7951[1] }
    ?28     = { defs={} expr=v7952[1] }
    ?29     = { defs={} expr=v7953[1] }
    ?30     = { defs={} expr=v7954[1] }
    ?31     = { defs={} expr=v7955[1] }
    ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525} expr=0x08048526[32] }
memory:
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048525} expr=(extract[8] 24[32] 32[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048525} expr=(extract[8] 16[32] 24[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048525} expr=(extract[8] 8[32] 16[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048525} expr=(extract[8] 0[32] 8[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048524} expr=(extract[8] 24[32] 32[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048524} expr=(extract[8] 16[32] 24[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048524} expr=(extract[8] 8[32] 16[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048524} expr=(extract[8] 0[32] 8[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v7914[32] -4[32]) -4[32]) }
      value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 3[32]) }
      value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 2[32]) }
      value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 1[32]) }
      value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
      value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v7915[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048526[32] }
memory:
null state
0x8048526:sub    esp, 0x0c
registers:
    ax      = { v36884[32] }
    cx      = { v36885[32] }
    dx      = { v36886[32] }
    bx      = { v36887[32] }
    sp      = { v36888-0x1c[32] }
    bp      = { v36888-0x4[32] }
    si      = { v36890[32] }
    di      = { v36891[32] }
    es      = { v36892[16] }
    cs      = { v36893[16] }
    ss      = { v36894[16] }
    ds      = { v36895[16] }
    fs      = { v36896[16] }
    gs      = { v36897[16] }
    cf      = { -v37022+0x1[1] }
    ?1      = { v36899[1] }
    pf      = { -v37012+0x1[1] }
    ?3      = { v36901[1] }
    af      = { -v37019+0x1[1] }
    ?5      = { v36903[1] }
    zf      = { v37017[1] }
    sf      = { v37015[1] }
    tf      = { v36906[1] }
    if      = { v36907[1] }
    df      = { v36908[1] }
    of      = { v37029[1] }
    iopl0   = { v36910[1] }
    iopl1   = { v36911[1] }
    nt      = { v36912[1] }
    ?15     = { v36913[1] }
    rf      = { v36914[1] }
    vm      = { v36915[1] }
    ac      = { v36916[1] }
    vif     = { v36917[1] }
    vip     = { v36918[1] }
    id      = { v36919[1] }
    ?22     = { v36920[1] }
    ?23     = { v36921[1] }
    ?24     = { v36922[1] }
    ?25     = { v36923[1] }
    ?26     = { v36924[1] }
    ?27     = { v36925[1] }
    ?28     = { v36926[1] }
    ?29     = { v36927[1] }
    ?30     = { v36928[1] }
    ?31     = { v36929[1] }
    ip      = { 0x8048529[32] }
memory:
    address = { v36888-0x4[32] }
      value = { v36889[32] }
      flags = { size=4 }
    address = { v36888-0x8[32] }
      value = { v36891[32] }
      flags = { size=4 }
    address = { v36888-0xc[32] }
      value = { v36890[32] }
      flags = { size=4 }
    address = { v36888-0x10[32] }
      value = { v36887[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v7910[32] }
    cx      = { defs={} expr=v7911[32] }
    dx      = { defs={} expr=v7912[32] }
    bx      = { defs={} expr=v7913[32] }
    sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) }
    bp      = { defs={0x08048520,0x08048521} expr=(add[32] v7914[32] -4[32]) }
    si      = { defs={} expr=v7916[32] }
    di      = { defs={} expr=v7917[32] }
    es      = { defs={} expr=v7918[16] }
    cs      = { defs={} expr=v7919[16] }
    ss      = { defs={} expr=v7920[16] }
    ds      = { defs={} expr=v7921[16] }
    fs      = { defs={} expr=v7922[16] }
    gs      = { defs={} expr=v7923[16] }
    cf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    ?1      = { defs={} expr=v7925[1] }
    pf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
    ?3      = { defs={} expr=v7927[1] }
    af      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    ?5      = { defs={} expr=v7929[1] }
    zf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
    sf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
    tf      = { defs={} expr=v7932[1] }
    if      = { defs={} expr=v7933[1] }
    df      = { defs={} expr=v7934[1] }
    of      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    iopl0   = { defs={} expr=v7936[1] }
    iopl1   = { defs={} expr=v7937[1] }
    nt      = { defs={} expr=v7938[1] }
    ?15     = { defs={} expr=v7939[1] }
    rf      = { defs={} expr=v7940[1] }
    vm      = { defs={} expr=v7941[1] }
    ac      = { defs={} expr=v7942[1] }
    vif     = { defs={} expr=v7943[1] }
    vip     = { defs={} expr=v7944[1] }
    id      = { defs={} expr=v7945[1] }
    ?22     = { defs={} expr=v7946[1] }
    ?23     = { defs={} expr=v7947[1] }
    ?24     = { defs={} expr=v7948[1] }
    ?25     = { defs={} expr=v7949[1] }
    ?26     = { defs={} expr=v7950[1] }
    ?27     = { defs={} expr=v7951[1] }
    ?28     = { defs={} expr=v7952[1] }
    ?29     = { defs={} expr=v7953[1] }
    ?30     = { defs={} expr=v7954[1] }
    ?31     = { defs={} expr=v7955[1] }
    ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526} expr=0x08048529[32] }
memory:
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048525} expr=(extract[8] 24[32] 32[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048525} expr=(extract[8] 16[32] 24[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048525} expr=(extract[8] 8[32] 16[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048525} expr=(extract[8] 0[32] 8[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048524} expr=(extract[8] 24[32] 32[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048524} expr=(extract[8] 16[32] 24[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048524} expr=(extract[8] 8[32] 16[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048524} expr=(extract[8] 0[32] 8[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v7914[32] -4[32]) -4[32]) }
      value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 3[32]) }
      value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 2[32]) }
      value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 1[32]) }
      value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
      value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v7915[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048529[32] }
memory:
null state
0x8048529:call   0x0804852e<<Insn>>
registers:
    ax      = { v36884[32] }
    cx      = { v36885[32] }
    dx      = { v36886[32] }
    bx      = { v36887[32] }
    sp      = { v36888-0x20[32] }
    bp      = { v36888-0x4[32] }
    si      = { v36890[32] }
    di      = { v36891[32] }
    es      = { v36892[16] }
    cs      = { v36893[16] }
    ss      = { v36894[16] }
    ds      = { v36895[16] }
    fs      = { v36896[16] }
    gs      = { v36897[16] }
    cf      = { -v37022+0x1[1] }
    ?1      = { v36899[1] }
    pf      = { -v37012+0x1[1] }
    ?3      = { v36901[1] }
    af      = { -v37019+0x1[1] }
    ?5      = { v36903[1] }
    zf      = { v37017[1] }
    sf      = { v37015[1] }
    tf      = { v36906[1] }
    if      = { v36907[1] }
    df      = { v36908[1] }
    of      = { v37029[1] }
    iopl0   = { v36910[1] }
    iopl1   = { v36911[1] }
    nt      = { v36912[1] }
    ?15     = { v36913[1] }
    rf      = { v36914[1] }
    vm      = { v36915[1] }
    ac      = { v36916[1] }
    vif     = { v36917[1] }
    vip     = { v36918[1] }
    id      = { v36919[1] }
    ?22     = { v36920[1] }
    ?23     = { v36921[1] }
    ?24     = { v36922[1] }
    ?25     = { v36923[1] }
    ?26     = { v36924[1] }
    ?27     = { v36925[1] }
    ?28     = { v36926[1] }
    ?29     = { v36927[1] }
    ?30     = { v36928[1] }
    ?31     = { v36929[1] }
    ip      = { 0x804852e[32] }
memory:
    address = { v36888-0x4[32] }
      value = { v36889[32] }
      flags = { size=4 }
    address = { v36888-0x8[32] }
      value = { v36891[32] }
      flags = { size=4 }
    address = { v36888-0xc[32] }
      value = { v36890[32] }
      flags = { size=4 }
    address = { v36888-0x10[32] }
      value = { v36887[32] }
      flags = { size=4 }
    address = { v36888-0x20[32] }
      value = { 0x804852e[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v7910[32] }
    cx      = { defs={} expr=v7911[32] }
    dx      = { defs={} expr=v7912[32] }
    bx      = { defs={} expr=v7913[32] }
    sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
    bp      = { defs={0x08048520,0x08048521} expr=(add[32] v7914[32] -4[32]) }
    si      = { defs={} expr=v7916[32] }
    di      = { defs={} expr=v7917[32] }
    es      = { defs={} expr=v7918[16] }
    cs      = { defs={} expr=v7919[16] }
    ss      = { defs={} expr=v7920[16] }
    ds      = { defs={} expr=v7921[16] }
    fs      = { defs={} expr=v7922[16] }
    gs      = { defs={} expr=v7923[16] }
    cf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    ?1      = { defs={} expr=v7925[1] }
    pf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
    ?3      = { defs={} expr=v7927[1] }
    af      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    ?5      = { defs={} expr=v7929[1] }
    zf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
    sf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
    tf      = { defs={} expr=v7932[1] }
    if      = { defs={} expr=v7933[1] }
    df      = { defs={} expr=v7934[1] }
    of      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
    iopl0   = { defs={} expr=v7936[1] }
    iopl1   = { defs={} expr=v7937[1] }
    nt      = { defs={} expr=v7938[1] }
    ?15     = { defs={} expr=v7939[1] }
    rf      = { defs={} expr=v7940[1] }
    vm      = { defs={} expr=v7941[1] }
    ac      = { defs={} expr=v7942[1] }
    vif     = { defs={} expr=v7943[1] }
    vip     = { defs={} expr=v7944[1] }
    id      = { defs={} expr=v7945[1] }
    ?22     = { defs={} expr=v7946[1] }
    ?23     = { defs={} expr=v7947[1] }
    ?24     = { defs={} expr=v7948[1] }
    ?25     = { defs={} expr=v7949[1] }
    ?26     = { defs={} expr=v7950[1] }
    ?27     = { defs={} expr=v7951[1] }
    ?28     = { defs={} expr=v7952[1] }
    ?29     = { defs={} expr=v7953[1] }
    ?30     = { defs={} expr=v7954[1] }
    ?31     = { defs={} expr=v7955[1] }
    ip      = { defs={0x08048529} expr=0x0804852e[32] }
memory:
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 3[32]) }
      value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=8[8] }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 2[32]) }
      value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=4[8] }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 1[32]) }
      value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=-123[8] }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
      value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=46[8] }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048525} expr=(extract[8] 24[32] 32[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048525} expr=(extract[8] 16[32] 24[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048525} expr=(extract[8] 8[32] 16[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048525} expr=(extract[8] 0[32] 8[32] v7913[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048524} expr=(extract[8] 24[32] 32[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048524} expr=(extract[8] 16[32] 24[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048524} expr=(extract[8] 8[32] 16[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x08048524} expr=(extract[8] 0[32] 8[32] v7916[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048523} expr=(extract[8] 24[32] 32[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048523} expr=(extract[8] 16[32] 24[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] (add[32] v7914[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048523} expr=(extract[8] 8[32] 16[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v7914[32] -4[32]) -4[32]) }
      value = { defs={0x08048523} expr=(extract[8] 0[32] 8[32] v7917[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 3[32]) }
      value = { defs={0x08048520} expr=(extract[8] 24[32] 32[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 2[32]) }
      value = { defs={0x08048520} expr=(extract[8] 16[32] 24[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] (add[32] v7914[32] -4[32]) 1[32]) }
      value = { defs={0x08048520} expr=(extract[8] 8[32] 16[32] v7915[32]) }
      flags = { }
    address = { defs={0x08048520} expr=(add[32] v7914[32] -4[32]) }
      value = { defs={0x08048520} expr=(extract[8] 0[32] 8[32] v7915[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804852e[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
registers:
    ax      = { v37089[32] }
    cx      = { v37090[32] }
    dx      = { v37091[32] }
    bx      = { v37144[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { v37103[1] }
    ?1      = { v37104[1] }
    pf      = { v37105[1] }
    ?3      = { v37106[1] }
    af      = { v37107[1] }
    ?5      = { v37108[1] }
    zf      = { v37109[1] }
    sf      = { v37110[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { v37114[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x804852f[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v8233[32] }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={} expr=v8235[32] }
    bx      = { defs={0x0804852e} expr=v8295[32] }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={} expr=v8247[1] }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={} expr=v8249[1] }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={} expr=v8251[1] }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={} expr=v8253[1] }
    sf      = { defs={} expr=v8254[1] }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={} expr=v8258[1] }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e} expr=0x0804852f[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804852f[32] }
memory:
null state
0x804852f:add    ebx, 0x0000119a
registers:
    ax      = { v37089[32] }
    cx      = { v37090[32] }
    dx      = { v37091[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { v37193[1] }
    ?1      = { v37104[1] }
    pf      = { -v37184+0x1[1] }
    ?3      = { v37106[1] }
    af      = { v37191[1] }
    ?5      = { v37108[1] }
    zf      = { v37189[1] }
    sf      = { v37187[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { v37199[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x8048535[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v8233[32] }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={} expr=v8235[32] }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v8295[32] 4506[32])) }
    sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v8295[32] 4506[32])) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33])))))) }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f} expr=0x08048535[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048535[32] }
memory:
null state
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
registers:
    ax      = { v37144+0x10ba[32] }
    cx      = { v37090[32] }
    dx      = { v37091[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { v37193[1] }
    ?1      = { v37104[1] }
    pf      = { -v37184+0x1[1] }
    ?3      = { v37106[1] }
    af      = { v37191[1] }
    ?5      = { v37108[1] }
    zf      = { v37189[1] }
    sf      = { v37187[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { v37199[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x804853b[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={} expr=v8235[32] }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v8295[32] 4506[32])) }
    sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v8295[32] 4506[32])) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33])))))) }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f,0x08048535} expr=0x0804853b[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804853b[32] }
memory:
null state
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
registers:
    ax      = { v37144+0x10ba[32] }
    cx      = { v37090[32] }
    dx      = { v37144+0x10ba[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { v37193[1] }
    ?1      = { v37104[1] }
    pf      = { -v37184+0x1[1] }
    ?3      = { v37106[1] }
    af      = { v37191[1] }
    ?5      = { v37108[1] }
    zf      = { v37189[1] }
    sf      = { v37187[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { v37199[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x8048541[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v8295[32] 4506[32]))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v8295[32] 4506[32])) }
    sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v8295[32] 4506[32])) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v8295[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v8295[32]) 4506[33])))))) }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b} expr=0x08048541[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048541[32] }
memory:
null state
0x8048541:sub    eax, edx
registers:
    ax      = { 0x0[32] }
    cx      = { v37090[32] }
    dx      = { v37144+0x10ba[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { 0x0[1] }
    ?1      = { v37104[1] }
    pf      = { 0x1[1] }
    ?3      = { v37106[1] }
    af      = { 0x0[1] }
    ?5      = { v37108[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { 0x0[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x8048543[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]))) 1[33]))))))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]))) 1[33]))))))) }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(zerop[1] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) }
    sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]))) 1[33]))))))) }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=0x08048543[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048543[32] }
memory:
null state
0x8048543:sar    eax, 0x02
registers:
    ax      = { 0x0[32] }
    cx      = { v37090[32] }
    dx      = { v37144+0x10ba[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { 0x0[1] }
    ?1      = { v37104[1] }
    pf      = { 0x1[1] }
    ?3      = { v37106[1] }
    af      = { v37271[1] }
    ?5      = { v37108[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { v37285[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x8048546[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x08048543} expr=v8542[1] }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
    sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x08048543} expr=v8568[1] }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=0x08048546[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048546[32] }
memory:
null state
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
registers:
    ax      = { 0x0[32] }
    cx      = { v37090[32] }
    dx      = { v37144+0x10ba[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { 0x0[1] }
    ?1      = { v37104[1] }
    pf      = { 0x1[1] }
    ?3      = { v37106[1] }
    af      = { v37271[1] }
    ?5      = { v37108[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { v37285[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x8048549[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only; clobbered }
    address = { v37094-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x08048543} expr=v8542[1] }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
    sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x08048543} expr=v8568[1] }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=0x08048549[32] }
memory:
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 3[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 2[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 1[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] v8238[32] -16[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048549[32] }
memory:
null state
0x8048549:dec    eax
registers:
    ax      = { 0xffffffff (-0x1)[32] }
    cx      = { v37090[32] }
    dx      = { v37144+0x10ba[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { 0x0[1] }
    ?1      = { v37104[1] }
    pf      = { 0x1[1] }
    ?3      = { v37106[1] }
    af      = { 0x1[1] }
    ?5      = { v37108[1] }
    zf      = { 0x0[1] }
    sf      = { 0x1[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { 0x0[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x804854a[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only; clobbered }
    address = { v37094-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33])))))) }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) }
    sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33])))))) }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549} expr=0x0804854a[32] }
memory:
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 3[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 2[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 1[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] v8238[32] -16[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804854a[32] }
memory:
null state
0x804854a:cmp    eax, 0xff<-0x01>
registers:
    ax      = { 0xffffffff (-0x1)[32] }
    cx      = { v37090[32] }
    dx      = { v37144+0x10ba[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { 0x0[1] }
    ?1      = { v37104[1] }
    pf      = { 0x1[1] }
    ?3      = { v37106[1] }
    af      = { 0x0[1] }
    ?5      = { v37108[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { 0x0[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x804854d[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only; clobbered }
    address = { v37094-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
    sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a} expr=0x0804854d[32] }
memory:
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 3[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 2[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 1[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] v8238[32] -16[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804854d[32] }
memory:
null state
0x804854d:je     0x0804856b<<Insn>>
registers:
    ax      = { 0xffffffff (-0x1)[32] }
    cx      = { v37090[32] }
    dx      = { v37144+0x10ba[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093+0x4[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { 0x0[1] }
    ?1      = { v37104[1] }
    pf      = { 0x1[1] }
    ?3      = { v37106[1] }
    af      = { 0x0[1] }
    ?5      = { v37108[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { 0x0[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x804856b[32] }
memory:
    address = { v37093[32] }
      value = { v37144[32] }
      flags = { size=4; read-only; clobbered }
    address = { v37094-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4 }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e} expr=(add[32] v8237[32] 4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
    sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a,0x0804854d} expr=(ite[32] (zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) 0x0804856b[32] 0x0804854f[32]) }
memory:
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 3[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 2[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 1[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] v8238[32] -16[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804854f, 0x0804856b[32] }
memory:
null state
0x804856b:call   0x080485b0<_fini>
registers:
    ax      = { 0xffffffff (-0x1)[32] }
    cx      = { v37090[32] }
    dx      = { v37144+0x10ba[32] }
    bx      = { v37144+0x119a[32] }
    sp      = { v37093[32] }
    bp      = { v37094[32] }
    si      = { v37095[32] }
    di      = { v37096[32] }
    es      = { v37097[16] }
    cs      = { v37098[16] }
    ss      = { v37099[16] }
    ds      = { v37100[16] }
    fs      = { v37101[16] }
    gs      = { v37102[16] }
    cf      = { 0x0[1] }
    ?1      = { v37104[1] }
    pf      = { 0x1[1] }
    ?3      = { v37106[1] }
    af      = { 0x0[1] }
    ?5      = { v37108[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37111[1] }
    if      = { v37112[1] }
    df      = { v37113[1] }
    of      = { 0x0[1] }
    iopl0   = { v37115[1] }
    iopl1   = { v37116[1] }
    nt      = { v37117[1] }
    ?15     = { v37118[1] }
    rf      = { v37119[1] }
    vm      = { v37120[1] }
    ac      = { v37121[1] }
    vif     = { v37122[1] }
    vip     = { v37123[1] }
    id      = { v37124[1] }
    ?22     = { v37125[1] }
    ?23     = { v37126[1] }
    ?24     = { v37127[1] }
    ?25     = { v37128[1] }
    ?26     = { v37129[1] }
    ?27     = { v37130[1] }
    ?28     = { v37131[1] }
    ?29     = { v37132[1] }
    ?30     = { v37133[1] }
    ?31     = { v37134[1] }
    ip      = { 0x80485b0[32] }
memory:
    address = { v37093[32] }
      value = { 0x8048570[32] }
      flags = { size=4 }
    address = { v37094-0x10[32] }
      value = { 0x0[32] }
      flags = { size=4; clobbered }
registers:
    ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
    cx      = { defs={} expr=v8234[32] }
    dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v8295[32] 4506[32]) -224[32]) }
    bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v8295[32] 4506[32]) }
    sp      = { defs={0x0804852e,0x0804856b} expr=(add[32] (add[32] v8237[32] 4[32]) -4[32]) }
    bp      = { defs={} expr=v8238[32] }
    si      = { defs={} expr=v8239[32] }
    di      = { defs={} expr=v8240[32] }
    es      = { defs={} expr=v8241[16] }
    cs      = { defs={} expr=v8242[16] }
    ss      = { defs={} expr=v8243[16] }
    ds      = { defs={} expr=v8244[16] }
    fs      = { defs={} expr=v8245[16] }
    gs      = { defs={} expr=v8246[16] }
    cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    ?1      = { defs={} expr=v8248[1] }
    pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))))) }
    ?3      = { defs={} expr=v8250[1] }
    af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    ?5      = { defs={} expr=v8252[1] }
    zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
    sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
    tf      = { defs={} expr=v8255[1] }
    if      = { defs={} expr=v8256[1] }
    df      = { defs={} expr=v8257[1] }
    of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
    iopl0   = { defs={} expr=v8259[1] }
    iopl1   = { defs={} expr=v8260[1] }
    nt      = { defs={} expr=v8261[1] }
    ?15     = { defs={} expr=v8262[1] }
    rf      = { defs={} expr=v8263[1] }
    vm      = { defs={} expr=v8264[1] }
    ac      = { defs={} expr=v8265[1] }
    vif     = { defs={} expr=v8266[1] }
    vip     = { defs={} expr=v8267[1] }
    id      = { defs={} expr=v8268[1] }
    ?22     = { defs={} expr=v8269[1] }
    ?23     = { defs={} expr=v8270[1] }
    ?24     = { defs={} expr=v8271[1] }
    ?25     = { defs={} expr=v8272[1] }
    ?26     = { defs={} expr=v8273[1] }
    ?27     = { defs={} expr=v8274[1] }
    ?28     = { defs={} expr=v8275[1] }
    ?29     = { defs={} expr=v8276[1] }
    ?30     = { defs={} expr=v8277[1] }
    ?31     = { defs={} expr=v8278[1] }
    ip      = { defs={0x0804856b} expr=0x080485b0[32] }
memory:
    address = { defs={0x0804852e,0x0804856b} expr=(add[32] (add[32] (add[32] v8237[32] 4[32]) -4[32]) 3[32]) }
      value = { defs={0x0804856b} expr=8[8] }
      flags = { }
    address = { defs={0x0804852e,0x0804856b} expr=(add[32] (add[32] (add[32] v8237[32] 4[32]) -4[32]) 2[32]) }
      value = { defs={0x0804856b} expr=4[8] }
      flags = { }
    address = { defs={0x0804852e,0x0804856b} expr=(add[32] (add[32] (add[32] v8237[32] 4[32]) -4[32]) 1[32]) }
      value = { defs={0x0804856b} expr=-123[8] }
      flags = { }
    address = { defs={0x0804852e,0x0804856b} expr=(add[32] (add[32] v8237[32] 4[32]) -4[32]) }
      value = { defs={0x0804856b} expr=112[8] }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 3[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 2[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] (add[32] v8238[32] -16[32]) 1[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
    address = { defs={0x08048546} expr=(add[32] v8238[32] -16[32]) }
      value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v8295[32] 4506[32]) -224[32])) 1[32])))) }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v8237[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v8237[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v8295[32]) }
      flags = { rdonly }
    address = { defs={} expr=v8237[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v8295[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b0[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
registers:
    ax      = { v37462[32] }
    cx      = { v37463[32] }
    dx      = { v37464[32] }
    bx      = { v37465[32] }
    sp      = { v37466[32] }
    bp      = { v37467[32] }
    si      = { v37519[32] }
    di      = { v37469[32] }
    es      = { v37470[16] }
    cs      = { v37471[16] }
    ss      = { v37472[16] }
    ds      = { v37473[16] }
    fs      = { v37474[16] }
    gs      = { v37475[16] }
    cf      = { v37476[1] }
    ?1      = { v37477[1] }
    pf      = { v37478[1] }
    ?3      = { v37479[1] }
    af      = { v37480[1] }
    ?5      = { v37481[1] }
    zf      = { v37482[1] }
    sf      = { v37483[1] }
    tf      = { v37484[1] }
    if      = { v37485[1] }
    df      = { v37486[1] }
    of      = { v37487[1] }
    iopl0   = { v37488[1] }
    iopl1   = { v37489[1] }
    nt      = { v37490[1] }
    ?15     = { v37491[1] }
    rf      = { v37492[1] }
    vm      = { v37493[1] }
    ac      = { v37494[1] }
    vif     = { v37495[1] }
    vip     = { v37496[1] }
    id      = { v37497[1] }
    ?22     = { v37498[1] }
    ?23     = { v37499[1] }
    ?24     = { v37500[1] }
    ?25     = { v37501[1] }
    ?26     = { v37502[1] }
    ?27     = { v37503[1] }
    ?28     = { v37504[1] }
    ?29     = { v37505[1] }
    ?30     = { v37506[1] }
    ?31     = { v37507[1] }
    ip      = { 0x8048552[32] }
memory:
registers:
    ax      = { defs={} expr=v8921[32] }
    cx      = { defs={} expr=v8922[32] }
    dx      = { defs={} expr=v8923[32] }
    bx      = { defs={} expr=v8924[32] }
    sp      = { defs={} expr=v8925[32] }
    bp      = { defs={} expr=v8926[32] }
    si      = { defs={0x0804854f} expr=(add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) }
    di      = { defs={} expr=v8928[32] }
    es      = { defs={} expr=v8929[16] }
    cs      = { defs={} expr=v8930[16] }
    ss      = { defs={} expr=v8931[16] }
    ds      = { defs={} expr=v8932[16] }
    fs      = { defs={} expr=v8933[16] }
    gs      = { defs={} expr=v8934[16] }
    cf      = { defs={} expr=v8935[1] }
    ?1      = { defs={} expr=v8936[1] }
    pf      = { defs={} expr=v8937[1] }
    ?3      = { defs={} expr=v8938[1] }
    af      = { defs={} expr=v8939[1] }
    ?5      = { defs={} expr=v8940[1] }
    zf      = { defs={} expr=v8941[1] }
    sf      = { defs={} expr=v8942[1] }
    tf      = { defs={} expr=v8943[1] }
    if      = { defs={} expr=v8944[1] }
    df      = { defs={} expr=v8945[1] }
    of      = { defs={} expr=v8946[1] }
    iopl0   = { defs={} expr=v8947[1] }
    iopl1   = { defs={} expr=v8948[1] }
    nt      = { defs={} expr=v8949[1] }
    ?15     = { defs={} expr=v8950[1] }
    rf      = { defs={} expr=v8951[1] }
    vm      = { defs={} expr=v8952[1] }
    ac      = { defs={} expr=v8953[1] }
    vif     = { defs={} expr=v8954[1] }
    vip     = { defs={} expr=v8955[1] }
    id      = { defs={} expr=v8956[1] }
    ?22     = { defs={} expr=v8957[1] }
    ?23     = { defs={} expr=v8958[1] }
    ?24     = { defs={} expr=v8959[1] }
    ?25     = { defs={} expr=v8960[1] }
    ?26     = { defs={} expr=v8961[1] }
    ?27     = { defs={} expr=v8962[1] }
    ?28     = { defs={} expr=v8963[1] }
    ?29     = { defs={} expr=v8964[1] }
    ?30     = { defs={} expr=v8965[1] }
    ?31     = { defs={} expr=v8966[1] }
    ip      = { defs={0x0804854f} expr=0x08048552[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048552[32] }
memory:
null state
0x8048552:xor    edi, edi
registers:
    ax      = { v37462[32] }
    cx      = { v37463[32] }
    dx      = { v37464[32] }
    bx      = { v37465[32] }
    sp      = { v37466[32] }
    bp      = { v37467[32] }
    si      = { v37519[32] }
    di      = { 0x0[32] }
    es      = { v37470[16] }
    cs      = { v37471[16] }
    ss      = { v37472[16] }
    ds      = { v37473[16] }
    fs      = { v37474[16] }
    gs      = { v37475[16] }
    cf      = { 0x0[1] }
    ?1      = { v37477[1] }
    pf      = { 0x1[1] }
    ?3      = { v37479[1] }
    af      = { v37548[1] }
    ?5      = { v37481[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37484[1] }
    if      = { v37485[1] }
    df      = { v37486[1] }
    of      = { 0x0[1] }
    iopl0   = { v37488[1] }
    iopl1   = { v37489[1] }
    nt      = { v37490[1] }
    ?15     = { v37491[1] }
    rf      = { v37492[1] }
    vm      = { v37493[1] }
    ac      = { v37494[1] }
    vif     = { v37495[1] }
    vip     = { v37496[1] }
    id      = { v37497[1] }
    ?22     = { v37498[1] }
    ?23     = { v37499[1] }
    ?24     = { v37500[1] }
    ?25     = { v37501[1] }
    ?26     = { v37502[1] }
    ?27     = { v37503[1] }
    ?28     = { v37504[1] }
    ?29     = { v37505[1] }
    ?30     = { v37506[1] }
    ?31     = { v37507[1] }
    ip      = { 0x8048554[32] }
memory:
registers:
    ax      = { defs={} expr=v8921[32] }
    cx      = { defs={} expr=v8922[32] }
    dx      = { defs={} expr=v8923[32] }
    bx      = { defs={} expr=v8924[32] }
    sp      = { defs={} expr=v8925[32] }
    bp      = { defs={} expr=v8926[32] }
    si      = { defs={0x0804854f} expr=(add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) }
    di      = { defs={0x08048552} expr=0[32] }
    es      = { defs={} expr=v8929[16] }
    cs      = { defs={} expr=v8930[16] }
    ss      = { defs={} expr=v8931[16] }
    ds      = { defs={} expr=v8932[16] }
    fs      = { defs={} expr=v8933[16] }
    gs      = { defs={} expr=v8934[16] }
    cf      = { defs={0x08048552} expr=0[1] }
    ?1      = { defs={} expr=v8936[1] }
    pf      = { defs={0x08048552} expr=1[1] }
    ?3      = { defs={} expr=v8938[1] }
    af      = { defs={0x08048552} expr=v9049[1] }
    ?5      = { defs={} expr=v8940[1] }
    zf      = { defs={0x08048552} expr=1[1] }
    sf      = { defs={0x08048552} expr=0[1] }
    tf      = { defs={} expr=v8943[1] }
    if      = { defs={} expr=v8944[1] }
    df      = { defs={} expr=v8945[1] }
    of      = { defs={0x08048552} expr=0[1] }
    iopl0   = { defs={} expr=v8947[1] }
    iopl1   = { defs={} expr=v8948[1] }
    nt      = { defs={} expr=v8949[1] }
    ?15     = { defs={} expr=v8950[1] }
    rf      = { defs={} expr=v8951[1] }
    vm      = { defs={} expr=v8952[1] }
    ac      = { defs={} expr=v8953[1] }
    vif     = { defs={} expr=v8954[1] }
    vip     = { defs={} expr=v8955[1] }
    id      = { defs={} expr=v8956[1] }
    ?22     = { defs={} expr=v8957[1] }
    ?23     = { defs={} expr=v8958[1] }
    ?24     = { defs={} expr=v8959[1] }
    ?25     = { defs={} expr=v8960[1] }
    ?26     = { defs={} expr=v8961[1] }
    ?27     = { defs={} expr=v8962[1] }
    ?28     = { defs={} expr=v8963[1] }
    ?29     = { defs={} expr=v8964[1] }
    ?30     = { defs={} expr=v8965[1] }
    ?31     = { defs={} expr=v8966[1] }
    ip      = { defs={0x0804854f,0x08048552} expr=0x08048554[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048554[32] }
memory:
null state
0x8048554:lea    esi, [esi + 0x00000000]
registers:
    ax      = { v37462[32] }
    cx      = { v37463[32] }
    dx      = { v37464[32] }
    bx      = { v37465[32] }
    sp      = { v37466[32] }
    bp      = { v37467[32] }
    si      = { v37519[32] }
    di      = { 0x0[32] }
    es      = { v37470[16] }
    cs      = { v37471[16] }
    ss      = { v37472[16] }
    ds      = { v37473[16] }
    fs      = { v37474[16] }
    gs      = { v37475[16] }
    cf      = { 0x0[1] }
    ?1      = { v37477[1] }
    pf      = { 0x1[1] }
    ?3      = { v37479[1] }
    af      = { v37548[1] }
    ?5      = { v37481[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37484[1] }
    if      = { v37485[1] }
    df      = { v37486[1] }
    of      = { 0x0[1] }
    iopl0   = { v37488[1] }
    iopl1   = { v37489[1] }
    nt      = { v37490[1] }
    ?15     = { v37491[1] }
    rf      = { v37492[1] }
    vm      = { v37493[1] }
    ac      = { v37494[1] }
    vif     = { v37495[1] }
    vip     = { v37496[1] }
    id      = { v37497[1] }
    ?22     = { v37498[1] }
    ?23     = { v37499[1] }
    ?24     = { v37500[1] }
    ?25     = { v37501[1] }
    ?26     = { v37502[1] }
    ?27     = { v37503[1] }
    ?28     = { v37504[1] }
    ?29     = { v37505[1] }
    ?30     = { v37506[1] }
    ?31     = { v37507[1] }
    ip      = { 0x804855a[32] }
memory:
registers:
    ax      = { defs={} expr=v8921[32] }
    cx      = { defs={} expr=v8922[32] }
    dx      = { defs={} expr=v8923[32] }
    bx      = { defs={} expr=v8924[32] }
    sp      = { defs={} expr=v8925[32] }
    bp      = { defs={} expr=v8926[32] }
    si      = { defs={0x0804854f,0x08048554} expr=(add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) }
    di      = { defs={0x08048552} expr=0[32] }
    es      = { defs={} expr=v8929[16] }
    cs      = { defs={} expr=v8930[16] }
    ss      = { defs={} expr=v8931[16] }
    ds      = { defs={} expr=v8932[16] }
    fs      = { defs={} expr=v8933[16] }
    gs      = { defs={} expr=v8934[16] }
    cf      = { defs={0x08048552} expr=0[1] }
    ?1      = { defs={} expr=v8936[1] }
    pf      = { defs={0x08048552} expr=1[1] }
    ?3      = { defs={} expr=v8938[1] }
    af      = { defs={0x08048552} expr=v9049[1] }
    ?5      = { defs={} expr=v8940[1] }
    zf      = { defs={0x08048552} expr=1[1] }
    sf      = { defs={0x08048552} expr=0[1] }
    tf      = { defs={} expr=v8943[1] }
    if      = { defs={} expr=v8944[1] }
    df      = { defs={} expr=v8945[1] }
    of      = { defs={0x08048552} expr=0[1] }
    iopl0   = { defs={} expr=v8947[1] }
    iopl1   = { defs={} expr=v8948[1] }
    nt      = { defs={} expr=v8949[1] }
    ?15     = { defs={} expr=v8950[1] }
    rf      = { defs={} expr=v8951[1] }
    vm      = { defs={} expr=v8952[1] }
    ac      = { defs={} expr=v8953[1] }
    vif     = { defs={} expr=v8954[1] }
    vip     = { defs={} expr=v8955[1] }
    id      = { defs={} expr=v8956[1] }
    ?22     = { defs={} expr=v8957[1] }
    ?23     = { defs={} expr=v8958[1] }
    ?24     = { defs={} expr=v8959[1] }
    ?25     = { defs={} expr=v8960[1] }
    ?26     = { defs={} expr=v8961[1] }
    ?27     = { defs={} expr=v8962[1] }
    ?28     = { defs={} expr=v8963[1] }
    ?29     = { defs={} expr=v8964[1] }
    ?30     = { defs={} expr=v8965[1] }
    ?31     = { defs={} expr=v8966[1] }
    ip      = { defs={0x0804854f,0x08048552,0x08048554} expr=0x0804855a[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804855a[32] }
memory:
null state
0x804855a:lea    edi, [edi + 0x00000000]
registers:
    ax      = { v37462[32] }
    cx      = { v37463[32] }
    dx      = { v37464[32] }
    bx      = { v37465[32] }
    sp      = { v37466[32] }
    bp      = { v37467[32] }
    si      = { v37519[32] }
    di      = { 0x0[32] }
    es      = { v37470[16] }
    cs      = { v37471[16] }
    ss      = { v37472[16] }
    ds      = { v37473[16] }
    fs      = { v37474[16] }
    gs      = { v37475[16] }
    cf      = { 0x0[1] }
    ?1      = { v37477[1] }
    pf      = { 0x1[1] }
    ?3      = { v37479[1] }
    af      = { v37548[1] }
    ?5      = { v37481[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37484[1] }
    if      = { v37485[1] }
    df      = { v37486[1] }
    of      = { 0x0[1] }
    iopl0   = { v37488[1] }
    iopl1   = { v37489[1] }
    nt      = { v37490[1] }
    ?15     = { v37491[1] }
    rf      = { v37492[1] }
    vm      = { v37493[1] }
    ac      = { v37494[1] }
    vif     = { v37495[1] }
    vip     = { v37496[1] }
    id      = { v37497[1] }
    ?22     = { v37498[1] }
    ?23     = { v37499[1] }
    ?24     = { v37500[1] }
    ?25     = { v37501[1] }
    ?26     = { v37502[1] }
    ?27     = { v37503[1] }
    ?28     = { v37504[1] }
    ?29     = { v37505[1] }
    ?30     = { v37506[1] }
    ?31     = { v37507[1] }
    ip      = { 0x8048560[32] }
memory:
registers:
    ax      = { defs={} expr=v8921[32] }
    cx      = { defs={} expr=v8922[32] }
    dx      = { defs={} expr=v8923[32] }
    bx      = { defs={} expr=v8924[32] }
    sp      = { defs={} expr=v8925[32] }
    bp      = { defs={} expr=v8926[32] }
    si      = { defs={0x0804854f,0x08048554} expr=(add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) }
    di      = { defs={0x08048552,0x0804855a} expr=0[32] }
    es      = { defs={} expr=v8929[16] }
    cs      = { defs={} expr=v8930[16] }
    ss      = { defs={} expr=v8931[16] }
    ds      = { defs={} expr=v8932[16] }
    fs      = { defs={} expr=v8933[16] }
    gs      = { defs={} expr=v8934[16] }
    cf      = { defs={0x08048552} expr=0[1] }
    ?1      = { defs={} expr=v8936[1] }
    pf      = { defs={0x08048552} expr=1[1] }
    ?3      = { defs={} expr=v8938[1] }
    af      = { defs={0x08048552} expr=v9049[1] }
    ?5      = { defs={} expr=v8940[1] }
    zf      = { defs={0x08048552} expr=1[1] }
    sf      = { defs={0x08048552} expr=0[1] }
    tf      = { defs={} expr=v8943[1] }
    if      = { defs={} expr=v8944[1] }
    df      = { defs={} expr=v8945[1] }
    of      = { defs={0x08048552} expr=0[1] }
    iopl0   = { defs={} expr=v8947[1] }
    iopl1   = { defs={} expr=v8948[1] }
    nt      = { defs={} expr=v8949[1] }
    ?15     = { defs={} expr=v8950[1] }
    rf      = { defs={} expr=v8951[1] }
    vm      = { defs={} expr=v8952[1] }
    ac      = { defs={} expr=v8953[1] }
    vif     = { defs={} expr=v8954[1] }
    vip     = { defs={} expr=v8955[1] }
    id      = { defs={} expr=v8956[1] }
    ?22     = { defs={} expr=v8957[1] }
    ?23     = { defs={} expr=v8958[1] }
    ?24     = { defs={} expr=v8959[1] }
    ?25     = { defs={} expr=v8960[1] }
    ?26     = { defs={} expr=v8961[1] }
    ?27     = { defs={} expr=v8962[1] }
    ?28     = { defs={} expr=v8963[1] }
    ?29     = { defs={} expr=v8964[1] }
    ?30     = { defs={} expr=v8965[1] }
    ?31     = { defs={} expr=v8966[1] }
    ip      = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a} expr=0x08048560[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048560[32] }
memory:
null state
0x8048560:call   DWORD PTR ds:[esi]
registers:
    ax      = { v37462[32] }
    cx      = { v37463[32] }
    dx      = { v37464[32] }
    bx      = { v37465[32] }
    sp      = { v37466-0x4[32] }
    bp      = { v37467[32] }
    si      = { v37519[32] }
    di      = { 0x0[32] }
    es      = { v37470[16] }
    cs      = { v37471[16] }
    ss      = { v37472[16] }
    ds      = { v37473[16] }
    fs      = { v37474[16] }
    gs      = { v37475[16] }
    cf      = { 0x0[1] }
    ?1      = { v37477[1] }
    pf      = { 0x1[1] }
    ?3      = { v37479[1] }
    af      = { v37548[1] }
    ?5      = { v37481[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v37484[1] }
    if      = { v37485[1] }
    df      = { v37486[1] }
    of      = { 0x0[1] }
    iopl0   = { v37488[1] }
    iopl1   = { v37489[1] }
    nt      = { v37490[1] }
    ?15     = { v37491[1] }
    rf      = { v37492[1] }
    vm      = { v37493[1] }
    ac      = { v37494[1] }
    vif     = { v37495[1] }
    vip     = { v37496[1] }
    id      = { v37497[1] }
    ?22     = { v37498[1] }
    ?23     = { v37499[1] }
    ?24     = { v37500[1] }
    ?25     = { v37501[1] }
    ?26     = { v37502[1] }
    ?27     = { v37503[1] }
    ?28     = { v37504[1] }
    ?29     = { v37505[1] }
    ?30     = { v37506[1] }
    ?31     = { v37507[1] }
    ip      = { v37576[32] }
memory:
    address = { v37466-0x4[32] }
      value = { 0x8048562[32] }
      flags = { size=4 }
    address = { v37519[32] }
      value = { v37576[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v8921[32] }
    cx      = { defs={} expr=v8922[32] }
    dx      = { defs={} expr=v8923[32] }
    bx      = { defs={} expr=v8924[32] }
    sp      = { defs={0x08048560} expr=(add[32] v8925[32] -4[32]) }
    bp      = { defs={} expr=v8926[32] }
    si      = { defs={0x0804854f,0x08048554} expr=(add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) }
    di      = { defs={0x08048552,0x0804855a} expr=0[32] }
    es      = { defs={} expr=v8929[16] }
    cs      = { defs={} expr=v8930[16] }
    ss      = { defs={} expr=v8931[16] }
    ds      = { defs={} expr=v8932[16] }
    fs      = { defs={} expr=v8933[16] }
    gs      = { defs={} expr=v8934[16] }
    cf      = { defs={0x08048552} expr=0[1] }
    ?1      = { defs={} expr=v8936[1] }
    pf      = { defs={0x08048552} expr=1[1] }
    ?3      = { defs={} expr=v8938[1] }
    af      = { defs={0x08048552} expr=v9049[1] }
    ?5      = { defs={} expr=v8940[1] }
    zf      = { defs={0x08048552} expr=1[1] }
    sf      = { defs={0x08048552} expr=0[1] }
    tf      = { defs={} expr=v8943[1] }
    if      = { defs={} expr=v8944[1] }
    df      = { defs={} expr=v8945[1] }
    of      = { defs={0x08048552} expr=0[1] }
    iopl0   = { defs={} expr=v8947[1] }
    iopl1   = { defs={} expr=v8948[1] }
    nt      = { defs={} expr=v8949[1] }
    ?15     = { defs={} expr=v8950[1] }
    rf      = { defs={} expr=v8951[1] }
    vm      = { defs={} expr=v8952[1] }
    ac      = { defs={} expr=v8953[1] }
    vif     = { defs={} expr=v8954[1] }
    vip     = { defs={} expr=v8955[1] }
    id      = { defs={} expr=v8956[1] }
    ?22     = { defs={} expr=v8957[1] }
    ?23     = { defs={} expr=v8958[1] }
    ?24     = { defs={} expr=v8959[1] }
    ?25     = { defs={} expr=v8960[1] }
    ?26     = { defs={} expr=v8961[1] }
    ?27     = { defs={} expr=v8962[1] }
    ?28     = { defs={} expr=v8963[1] }
    ?29     = { defs={} expr=v8964[1] }
    ?30     = { defs={} expr=v8965[1] }
    ?31     = { defs={} expr=v8966[1] }
    ip      = { defs={0x08048560} expr=v9109[32] }
memory:
    address = { defs={0x08048560} expr=(add[32] (add[32] v8925[32] -4[32]) 3[32]) }
      value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=8[8] }
      flags = { }
    address = { defs={0x08048560} expr=(add[32] (add[32] v8925[32] -4[32]) 2[32]) }
      value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=4[8] }
      flags = { }
    address = { defs={0x08048560} expr=(add[32] (add[32] v8925[32] -4[32]) 1[32]) }
      value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=-123[8] }
      flags = { }
    address = { defs={0x08048560} expr=(add[32] v8925[32] -4[32]) }
      value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=98[8] }
      flags = { }
init mem:
    address = { defs={0x0804854f,0x08048554} expr=(add[32] (add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9109[32]) }
      flags = { rdonly }
    address = { defs={0x0804854f,0x08048554} expr=(add[32] (add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9109[32]) }
      flags = { rdonly }
    address = { defs={0x0804854f,0x08048554} expr=(add[32] (add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9109[32]) }
      flags = { rdonly }
    address = { defs={0x0804854f,0x08048554} expr=(add[32] v8923[32] (extract[32] 0[32] 32[32] (umul[40] v8921[32] 4[8]))) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9109[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
registers:
    ax      = { v37626[32] }
    cx      = { v37627[32] }
    dx      = { v37628[32] }
    bx      = { v37629[32] }
    sp      = { v37630[32] }
    bp      = { v37631[32] }
    si      = { v37632[32] }
    di      = { v37633+0x1[32] }
    es      = { v37634[16] }
    cs      = { v37635[16] }
    ss      = { v37636[16] }
    ds      = { v37637[16] }
    fs      = { v37638[16] }
    gs      = { v37639[16] }
    cf      = { v37640[1] }
    ?1      = { v37641[1] }
    pf      = { -v37711+0x1[1] }
    ?3      = { v37643[1] }
    af      = { v37718[1] }
    ?5      = { v37645[1] }
    zf      = { v37716[1] }
    sf      = { v37714[1] }
    tf      = { v37648[1] }
    if      = { v37649[1] }
    df      = { v37650[1] }
    of      = { v37724[1] }
    iopl0   = { v37652[1] }
    iopl1   = { v37653[1] }
    nt      = { v37654[1] }
    ?15     = { v37655[1] }
    rf      = { v37656[1] }
    vm      = { v37657[1] }
    ac      = { v37658[1] }
    vif     = { v37659[1] }
    vip     = { v37660[1] }
    id      = { v37661[1] }
    ?22     = { v37662[1] }
    ?23     = { v37663[1] }
    ?24     = { v37664[1] }
    ?25     = { v37665[1] }
    ?26     = { v37666[1] }
    ?27     = { v37667[1] }
    ?28     = { v37668[1] }
    ?29     = { v37669[1] }
    ?30     = { v37670[1] }
    ?31     = { v37671[1] }
    ip      = { 0x8048563[32] }
memory:
registers:
    ax      = { defs={} expr=v9171[32] }
    cx      = { defs={} expr=v9172[32] }
    dx      = { defs={} expr=v9173[32] }
    bx      = { defs={} expr=v9174[32] }
    sp      = { defs={} expr=v9175[32] }
    bp      = { defs={} expr=v9176[32] }
    si      = { defs={} expr=v9177[32] }
    di      = { defs={0x08048562} expr=(add[32] v9178[32] 1[32]) }
    es      = { defs={} expr=v9179[16] }
    cs      = { defs={} expr=v9180[16] }
    ss      = { defs={} expr=v9181[16] }
    ds      = { defs={} expr=v9182[16] }
    fs      = { defs={} expr=v9183[16] }
    gs      = { defs={} expr=v9184[16] }
    cf      = { defs={} expr=v9185[1] }
    ?1      = { defs={} expr=v9186[1] }
    pf      = { defs={0x08048562} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9178[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9178[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9178[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9178[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9178[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9178[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9178[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9178[32] 1[32]))))))) }
    ?3      = { defs={} expr=v9188[1] }
    af      = { defs={0x08048562} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9178[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v9178[32]) 1[33]))))) }
    ?5      = { defs={} expr=v9190[1] }
    zf      = { defs={0x08048562} expr=(zerop[1] (add[32] v9178[32] 1[32])) }
    sf      = { defs={0x08048562} expr=(extract[1] 31[32] 32[32] (add[32] v9178[32] 1[32])) }
    tf      = { defs={} expr=v9193[1] }
    if      = { defs={} expr=v9194[1] }
    df      = { defs={} expr=v9195[1] }
    of      = { defs={0x08048562} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9178[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v9178[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9178[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v9178[32]) 1[33])))))) }
    iopl0   = { defs={} expr=v9197[1] }
    iopl1   = { defs={} expr=v9198[1] }
    nt      = { defs={} expr=v9199[1] }
    ?15     = { defs={} expr=v9200[1] }
    rf      = { defs={} expr=v9201[1] }
    vm      = { defs={} expr=v9202[1] }
    ac      = { defs={} expr=v9203[1] }
    vif     = { defs={} expr=v9204[1] }
    vip     = { defs={} expr=v9205[1] }
    id      = { defs={} expr=v9206[1] }
    ?22     = { defs={} expr=v9207[1] }
    ?23     = { defs={} expr=v9208[1] }
    ?24     = { defs={} expr=v9209[1] }
    ?25     = { defs={} expr=v9210[1] }
    ?26     = { defs={} expr=v9211[1] }
    ?27     = { defs={} expr=v9212[1] }
    ?28     = { defs={} expr=v9213[1] }
    ?29     = { defs={} expr=v9214[1] }
    ?30     = { defs={} expr=v9215[1] }
    ?31     = { defs={} expr=v9216[1] }
    ip      = { defs={0x08048562} expr=0x08048563[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048563[32] }
memory:
null state
0x8048563:sub    esi, 0x04
registers:
    ax      = { v37626[32] }
    cx      = { v37627[32] }
    dx      = { v37628[32] }
    bx      = { v37629[32] }
    sp      = { v37630[32] }
    bp      = { v37631[32] }
    si      = { v37632-0x4[32] }
    di      = { v37633+0x1[32] }
    es      = { v37634[16] }
    cs      = { v37635[16] }
    ss      = { v37636[16] }
    ds      = { v37637[16] }
    fs      = { v37638[16] }
    gs      = { v37639[16] }
    cf      = { -v37776+0x1[1] }
    ?1      = { v37641[1] }
    pf      = { -v37766+0x1[1] }
    ?3      = { v37643[1] }
    af      = { -v37773+0x1[1] }
    ?5      = { v37645[1] }
    zf      = { v37771[1] }
    sf      = { v37769[1] }
    tf      = { v37648[1] }
    if      = { v37649[1] }
    df      = { v37650[1] }
    of      = { v37783[1] }
    iopl0   = { v37652[1] }
    iopl1   = { v37653[1] }
    nt      = { v37654[1] }
    ?15     = { v37655[1] }
    rf      = { v37656[1] }
    vm      = { v37657[1] }
    ac      = { v37658[1] }
    vif     = { v37659[1] }
    vip     = { v37660[1] }
    id      = { v37661[1] }
    ?22     = { v37662[1] }
    ?23     = { v37663[1] }
    ?24     = { v37664[1] }
    ?25     = { v37665[1] }
    ?26     = { v37666[1] }
    ?27     = { v37667[1] }
    ?28     = { v37668[1] }
    ?29     = { v37669[1] }
    ?30     = { v37670[1] }
    ?31     = { v37671[1] }
    ip      = { 0x8048566[32] }
memory:
registers:
    ax      = { defs={} expr=v9171[32] }
    cx      = { defs={} expr=v9172[32] }
    dx      = { defs={} expr=v9173[32] }
    bx      = { defs={} expr=v9174[32] }
    sp      = { defs={} expr=v9175[32] }
    bp      = { defs={} expr=v9176[32] }
    si      = { defs={0x08048563} expr=(add[32] v9177[32] -4[32]) }
    di      = { defs={0x08048562} expr=(add[32] v9178[32] 1[32]) }
    es      = { defs={} expr=v9179[16] }
    cs      = { defs={} expr=v9180[16] }
    ss      = { defs={} expr=v9181[16] }
    ds      = { defs={} expr=v9182[16] }
    fs      = { defs={} expr=v9183[16] }
    gs      = { defs={} expr=v9184[16] }
    cf      = { defs={0x08048563} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9177[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v9177[32]) 4294967292[33])))))) }
    ?1      = { defs={} expr=v9186[1] }
    pf      = { defs={0x08048563} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9177[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9177[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9177[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9177[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9177[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9177[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9177[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9177[32] -4[32]))))))) }
    ?3      = { defs={} expr=v9188[1] }
    af      = { defs={0x08048563} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9177[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v9177[32]) 4294967292[33])))))) }
    ?5      = { defs={} expr=v9190[1] }
    zf      = { defs={0x08048563} expr=(zerop[1] (add[32] v9177[32] -4[32])) }
    sf      = { defs={0x08048563} expr=(extract[1] 31[32] 32[32] (add[32] v9177[32] -4[32])) }
    tf      = { defs={} expr=v9193[1] }
    if      = { defs={} expr=v9194[1] }
    df      = { defs={} expr=v9195[1] }
    of      = { defs={0x08048563} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9177[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v9177[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9177[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v9177[32]) 4294967292[33])))))) }
    iopl0   = { defs={} expr=v9197[1] }
    iopl1   = { defs={} expr=v9198[1] }
    nt      = { defs={} expr=v9199[1] }
    ?15     = { defs={} expr=v9200[1] }
    rf      = { defs={} expr=v9201[1] }
    vm      = { defs={} expr=v9202[1] }
    ac      = { defs={} expr=v9203[1] }
    vif     = { defs={} expr=v9204[1] }
    vip     = { defs={} expr=v9205[1] }
    id      = { defs={} expr=v9206[1] }
    ?22     = { defs={} expr=v9207[1] }
    ?23     = { defs={} expr=v9208[1] }
    ?24     = { defs={} expr=v9209[1] }
    ?25     = { defs={} expr=v9210[1] }
    ?26     = { defs={} expr=v9211[1] }
    ?27     = { defs={} expr=v9212[1] }
    ?28     = { defs={} expr=v9213[1] }
    ?29     = { defs={} expr=v9214[1] }
    ?30     = { defs={} expr=v9215[1] }
    ?31     = { defs={} expr=v9216[1] }
    ip      = { defs={0x08048562,0x08048563} expr=0x08048566[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048566[32] }
memory:
null state
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
registers:
    ax      = { v37626[32] }
    cx      = { v37627[32] }
    dx      = { v37628[32] }
    bx      = { v37629[32] }
    sp      = { v37630[32] }
    bp      = { v37631[32] }
    si      = { v37632-0x4[32] }
    di      = { v37633+0x1[32] }
    es      = { v37634[16] }
    cs      = { v37635[16] }
    ss      = { v37636[16] }
    ds      = { v37637[16] }
    fs      = { v37638[16] }
    gs      = { v37639[16] }
    cf      = { -v37841+0x1[1] }
    ?1      = { v37641[1] }
    pf      = { -v37831+0x1[1] }
    ?3      = { v37643[1] }
    af      = { -v37838+0x1[1] }
    ?5      = { v37645[1] }
    zf      = { v37836[1] }
    sf      = { v37834[1] }
    tf      = { v37648[1] }
    if      = { v37649[1] }
    df      = { v37650[1] }
    of      = { v37848[1] }
    iopl0   = { v37652[1] }
    iopl1   = { v37653[1] }
    nt      = { v37654[1] }
    ?15     = { v37655[1] }
    rf      = { v37656[1] }
    vm      = { v37657[1] }
    ac      = { v37658[1] }
    vif     = { v37659[1] }
    vip     = { v37660[1] }
    id      = { v37661[1] }
    ?22     = { v37662[1] }
    ?23     = { v37663[1] }
    ?24     = { v37664[1] }
    ?25     = { v37665[1] }
    ?26     = { v37666[1] }
    ?27     = { v37667[1] }
    ?28     = { v37668[1] }
    ?29     = { v37669[1] }
    ?30     = { v37670[1] }
    ?31     = { v37671[1] }
    ip      = { 0x8048569[32] }
memory:
    address = { v37631-0x10[32] }
      value = { v37796[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v9171[32] }
    cx      = { defs={} expr=v9172[32] }
    dx      = { defs={} expr=v9173[32] }
    bx      = { defs={} expr=v9174[32] }
    sp      = { defs={} expr=v9175[32] }
    bp      = { defs={} expr=v9176[32] }
    si      = { defs={0x08048563} expr=(add[32] v9177[32] -4[32]) }
    di      = { defs={0x08048562} expr=(add[32] v9178[32] 1[32]) }
    es      = { defs={} expr=v9179[16] }
    cs      = { defs={} expr=v9180[16] }
    ss      = { defs={} expr=v9181[16] }
    ds      = { defs={} expr=v9182[16] }
    fs      = { defs={} expr=v9183[16] }
    gs      = { defs={} expr=v9184[16] }
    cf      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9406[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) (add[33] (uextend[33] 33[32] v9406[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) 1[33]))))))) }
    ?1      = { defs={} expr=v9186[1] }
    pf      = { defs={0x08048562,0x08048566} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))))))) }
    ?3      = { defs={} expr=v9188[1] }
    af      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9406[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) (add[33] (uextend[33] 33[32] v9406[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) 1[33]))))))) }
    ?5      = { defs={} expr=v9190[1] }
    zf      = { defs={0x08048562,0x08048566} expr=(zerop[1] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32]))) }
    sf      = { defs={0x08048562,0x08048566} expr=(extract[1] 31[32] 32[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32]))) }
    tf      = { defs={} expr=v9193[1] }
    if      = { defs={} expr=v9194[1] }
    df      = { defs={} expr=v9195[1] }
    of      = { defs={0x08048562,0x08048566} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9406[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) (add[33] (uextend[33] 33[32] v9406[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9406[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) (add[33] (uextend[33] 33[32] v9406[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) 1[33]))))))) }
    iopl0   = { defs={} expr=v9197[1] }
    iopl1   = { defs={} expr=v9198[1] }
    nt      = { defs={} expr=v9199[1] }
    ?15     = { defs={} expr=v9200[1] }
    rf      = { defs={} expr=v9201[1] }
    vm      = { defs={} expr=v9202[1] }
    ac      = { defs={} expr=v9203[1] }
    vif     = { defs={} expr=v9204[1] }
    vip     = { defs={} expr=v9205[1] }
    id      = { defs={} expr=v9206[1] }
    ?22     = { defs={} expr=v9207[1] }
    ?23     = { defs={} expr=v9208[1] }
    ?24     = { defs={} expr=v9209[1] }
    ?25     = { defs={} expr=v9210[1] }
    ?26     = { defs={} expr=v9211[1] }
    ?27     = { defs={} expr=v9212[1] }
    ?28     = { defs={} expr=v9213[1] }
    ?29     = { defs={} expr=v9214[1] }
    ?30     = { defs={} expr=v9215[1] }
    ?31     = { defs={} expr=v9216[1] }
    ip      = { defs={0x08048562,0x08048563,0x08048566} expr=0x08048569[32] }
memory:
init mem:
    address = { defs={0x08048566} expr=(add[32] (add[32] v9176[32] -16[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9406[32]) }
      flags = { rdonly }
    address = { defs={0x08048566} expr=(add[32] (add[32] v9176[32] -16[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9406[32]) }
      flags = { rdonly }
    address = { defs={0x08048566} expr=(add[32] (add[32] v9176[32] -16[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9406[32]) }
      flags = { rdonly }
    address = { defs={0x08048566} expr=(add[32] v9176[32] -16[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9406[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048569[32] }
memory:
null state
0x8048569:jne    0x08048560<<Insn>>
registers:
    ax      = { v37626[32] }
    cx      = { v37627[32] }
    dx      = { v37628[32] }
    bx      = { v37629[32] }
    sp      = { v37630[32] }
    bp      = { v37631[32] }
    si      = { v37632-0x4[32] }
    di      = { v37633+0x1[32] }
    es      = { v37634[16] }
    cs      = { v37635[16] }
    ss      = { v37636[16] }
    ds      = { v37637[16] }
    fs      = { v37638[16] }
    gs      = { v37639[16] }
    cf      = { -v37841+0x1[1] }
    ?1      = { v37641[1] }
    pf      = { -v37831+0x1[1] }
    ?3      = { v37643[1] }
    af      = { -v37838+0x1[1] }
    ?5      = { v37645[1] }
    zf      = { v37836[1] }
    sf      = { v37834[1] }
    tf      = { v37648[1] }
    if      = { v37649[1] }
    df      = { v37650[1] }
    of      = { v37848[1] }
    iopl0   = { v37652[1] }
    iopl1   = { v37653[1] }
    nt      = { v37654[1] }
    ?15     = { v37655[1] }
    rf      = { v37656[1] }
    vm      = { v37657[1] }
    ac      = { v37658[1] }
    vif     = { v37659[1] }
    vip     = { v37660[1] }
    id      = { v37661[1] }
    ?22     = { v37662[1] }
    ?23     = { v37663[1] }
    ?24     = { v37664[1] }
    ?25     = { v37665[1] }
    ?26     = { v37666[1] }
    ?27     = { v37667[1] }
    ?28     = { v37668[1] }
    ?29     = { v37669[1] }
    ?30     = { v37670[1] }
    ?31     = { v37671[1] }
    ip      = { v37858[32] }
memory:
    address = { v37631-0x10[32] }
      value = { v37796[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v9171[32] }
    cx      = { defs={} expr=v9172[32] }
    dx      = { defs={} expr=v9173[32] }
    bx      = { defs={} expr=v9174[32] }
    sp      = { defs={} expr=v9175[32] }
    bp      = { defs={} expr=v9176[32] }
    si      = { defs={0x08048563} expr=(add[32] v9177[32] -4[32]) }
    di      = { defs={0x08048562} expr=(add[32] v9178[32] 1[32]) }
    es      = { defs={} expr=v9179[16] }
    cs      = { defs={} expr=v9180[16] }
    ss      = { defs={} expr=v9181[16] }
    ds      = { defs={} expr=v9182[16] }
    fs      = { defs={} expr=v9183[16] }
    gs      = { defs={} expr=v9184[16] }
    cf      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9406[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) (add[33] (uextend[33] 33[32] v9406[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) 1[33]))))))) }
    ?1      = { defs={} expr=v9186[1] }
    pf      = { defs={0x08048562,0x08048566} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))))))) }
    ?3      = { defs={} expr=v9188[1] }
    af      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9406[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) (add[33] (uextend[33] 33[32] v9406[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) 1[33]))))))) }
    ?5      = { defs={} expr=v9190[1] }
    zf      = { defs={0x08048562,0x08048566} expr=(zerop[1] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32]))) }
    sf      = { defs={0x08048562,0x08048566} expr=(extract[1] 31[32] 32[32] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32]))) }
    tf      = { defs={} expr=v9193[1] }
    if      = { defs={} expr=v9194[1] }
    df      = { defs={} expr=v9195[1] }
    of      = { defs={0x08048562,0x08048566} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9406[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) (add[33] (uextend[33] 33[32] v9406[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9406[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) (add[33] (uextend[33] 33[32] v9406[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v9178[32] 1[32]))) 1[33]))))))) }
    iopl0   = { defs={} expr=v9197[1] }
    iopl1   = { defs={} expr=v9198[1] }
    nt      = { defs={} expr=v9199[1] }
    ?15     = { defs={} expr=v9200[1] }
    rf      = { defs={} expr=v9201[1] }
    vm      = { defs={} expr=v9202[1] }
    ac      = { defs={} expr=v9203[1] }
    vif     = { defs={} expr=v9204[1] }
    vip     = { defs={} expr=v9205[1] }
    id      = { defs={} expr=v9206[1] }
    ?22     = { defs={} expr=v9207[1] }
    ?23     = { defs={} expr=v9208[1] }
    ?24     = { defs={} expr=v9209[1] }
    ?25     = { defs={} expr=v9210[1] }
    ?26     = { defs={} expr=v9211[1] }
    ?27     = { defs={} expr=v9212[1] }
    ?28     = { defs={} expr=v9213[1] }
    ?29     = { defs={} expr=v9214[1] }
    ?30     = { defs={} expr=v9215[1] }
    ?31     = { defs={} expr=v9216[1] }
    ip      = { defs={0x08048562,0x08048563,0x08048566,0x08048569} expr=(ite[32] (invert[1] (zerop[1] (add[32] v9406[32] (add[32] (invert[32] (add[32] v9178[32] 1[32])) 1[32])))) 0x08048560[32] 0x0804856b[32]) }
memory:
init mem:
    address = { defs={0x08048566} expr=(add[32] (add[32] v9176[32] -16[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9406[32]) }
      flags = { rdonly }
    address = { defs={0x08048566} expr=(add[32] (add[32] v9176[32] -16[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9406[32]) }
      flags = { rdonly }
    address = { defs={0x08048566} expr=(add[32] (add[32] v9176[32] -16[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9406[32]) }
      flags = { rdonly }
    address = { defs={0x08048566} expr=(add[32] v9176[32] -16[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9406[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048560, 0x0804856b[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
registers:
    ax      = { v37908[32] }
    cx      = { v37909[32] }
    dx      = { v37910[32] }
    bx      = { v37911[32] }
    sp      = { v37912+0xc[32] }
    bp      = { v37913[32] }
    si      = { v37914[32] }
    di      = { v37915[32] }
    es      = { v37916[16] }
    cs      = { v37917[16] }
    ss      = { v37918[16] }
    ds      = { v37919[16] }
    fs      = { v37920[16] }
    gs      = { v37921[16] }
    cf      = { v38002[1] }
    ?1      = { v37923[1] }
    pf      = { -v37993+0x1[1] }
    ?3      = { v37925[1] }
    af      = { v38000[1] }
    ?5      = { v37927[1] }
    zf      = { v37998[1] }
    sf      = { v37996[1] }
    tf      = { v37930[1] }
    if      = { v37931[1] }
    df      = { v37932[1] }
    of      = { v38008[1] }
    iopl0   = { v37934[1] }
    iopl1   = { v37935[1] }
    nt      = { v37936[1] }
    ?15     = { v37937[1] }
    rf      = { v37938[1] }
    vm      = { v37939[1] }
    ac      = { v37940[1] }
    vif     = { v37941[1] }
    vip     = { v37942[1] }
    id      = { v37943[1] }
    ?22     = { v37944[1] }
    ?23     = { v37945[1] }
    ?24     = { v37946[1] }
    ?25     = { v37947[1] }
    ?26     = { v37948[1] }
    ?27     = { v37949[1] }
    ?28     = { v37950[1] }
    ?29     = { v37951[1] }
    ?30     = { v37952[1] }
    ?31     = { v37953[1] }
    ip      = { 0x8048573[32] }
memory:
registers:
    ax      = { defs={} expr=v9560[32] }
    cx      = { defs={} expr=v9561[32] }
    dx      = { defs={} expr=v9562[32] }
    bx      = { defs={} expr=v9563[32] }
    sp      = { defs={0x08048570} expr=(add[32] v9564[32] 12[32]) }
    bp      = { defs={} expr=v9565[32] }
    si      = { defs={} expr=v9566[32] }
    di      = { defs={} expr=v9567[32] }
    es      = { defs={} expr=v9568[16] }
    cs      = { defs={} expr=v9569[16] }
    ss      = { defs={} expr=v9570[16] }
    ds      = { defs={} expr=v9571[16] }
    fs      = { defs={} expr=v9572[16] }
    gs      = { defs={} expr=v9573[16] }
    cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?1      = { defs={} expr=v9575[1] }
    pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))))) }
    ?3      = { defs={} expr=v9577[1] }
    af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?5      = { defs={} expr=v9579[1] }
    zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v9564[32] 12[32])) }
    sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v9564[32] 12[32])) }
    tf      = { defs={} expr=v9582[1] }
    if      = { defs={} expr=v9583[1] }
    df      = { defs={} expr=v9584[1] }
    of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v9586[1] }
    iopl1   = { defs={} expr=v9587[1] }
    nt      = { defs={} expr=v9588[1] }
    ?15     = { defs={} expr=v9589[1] }
    rf      = { defs={} expr=v9590[1] }
    vm      = { defs={} expr=v9591[1] }
    ac      = { defs={} expr=v9592[1] }
    vif     = { defs={} expr=v9593[1] }
    vip     = { defs={} expr=v9594[1] }
    id      = { defs={} expr=v9595[1] }
    ?22     = { defs={} expr=v9596[1] }
    ?23     = { defs={} expr=v9597[1] }
    ?24     = { defs={} expr=v9598[1] }
    ?25     = { defs={} expr=v9599[1] }
    ?26     = { defs={} expr=v9600[1] }
    ?27     = { defs={} expr=v9601[1] }
    ?28     = { defs={} expr=v9602[1] }
    ?29     = { defs={} expr=v9603[1] }
    ?30     = { defs={} expr=v9604[1] }
    ?31     = { defs={} expr=v9605[1] }
    ip      = { defs={0x08048570} expr=0x08048573[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048573[32] }
memory:
null state
0x8048573:pop    ebx
registers:
    ax      = { v37908[32] }
    cx      = { v37909[32] }
    dx      = { v37910[32] }
    bx      = { v38018[32] }
    sp      = { v37912+0x10[32] }
    bp      = { v37913[32] }
    si      = { v37914[32] }
    di      = { v37915[32] }
    es      = { v37916[16] }
    cs      = { v37917[16] }
    ss      = { v37918[16] }
    ds      = { v37919[16] }
    fs      = { v37920[16] }
    gs      = { v37921[16] }
    cf      = { v38002[1] }
    ?1      = { v37923[1] }
    pf      = { -v37993+0x1[1] }
    ?3      = { v37925[1] }
    af      = { v38000[1] }
    ?5      = { v37927[1] }
    zf      = { v37998[1] }
    sf      = { v37996[1] }
    tf      = { v37930[1] }
    if      = { v37931[1] }
    df      = { v37932[1] }
    of      = { v38008[1] }
    iopl0   = { v37934[1] }
    iopl1   = { v37935[1] }
    nt      = { v37936[1] }
    ?15     = { v37937[1] }
    rf      = { v37938[1] }
    vm      = { v37939[1] }
    ac      = { v37940[1] }
    vif     = { v37941[1] }
    vip     = { v37942[1] }
    id      = { v37943[1] }
    ?22     = { v37944[1] }
    ?23     = { v37945[1] }
    ?24     = { v37946[1] }
    ?25     = { v37947[1] }
    ?26     = { v37948[1] }
    ?27     = { v37949[1] }
    ?28     = { v37950[1] }
    ?29     = { v37951[1] }
    ?30     = { v37952[1] }
    ?31     = { v37953[1] }
    ip      = { 0x8048574[32] }
memory:
    address = { v37912+0xc[32] }
      value = { v38018[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v9560[32] }
    cx      = { defs={} expr=v9561[32] }
    dx      = { defs={} expr=v9562[32] }
    bx      = { defs={0x08048573} expr=v9704[32] }
    sp      = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v9564[32] 12[32]) 4[32]) }
    bp      = { defs={} expr=v9565[32] }
    si      = { defs={} expr=v9566[32] }
    di      = { defs={} expr=v9567[32] }
    es      = { defs={} expr=v9568[16] }
    cs      = { defs={} expr=v9569[16] }
    ss      = { defs={} expr=v9570[16] }
    ds      = { defs={} expr=v9571[16] }
    fs      = { defs={} expr=v9572[16] }
    gs      = { defs={} expr=v9573[16] }
    cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?1      = { defs={} expr=v9575[1] }
    pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))))) }
    ?3      = { defs={} expr=v9577[1] }
    af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?5      = { defs={} expr=v9579[1] }
    zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v9564[32] 12[32])) }
    sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v9564[32] 12[32])) }
    tf      = { defs={} expr=v9582[1] }
    if      = { defs={} expr=v9583[1] }
    df      = { defs={} expr=v9584[1] }
    of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v9586[1] }
    iopl1   = { defs={} expr=v9587[1] }
    nt      = { defs={} expr=v9588[1] }
    ?15     = { defs={} expr=v9589[1] }
    rf      = { defs={} expr=v9590[1] }
    vm      = { defs={} expr=v9591[1] }
    ac      = { defs={} expr=v9592[1] }
    vif     = { defs={} expr=v9593[1] }
    vip     = { defs={} expr=v9594[1] }
    id      = { defs={} expr=v9595[1] }
    ?22     = { defs={} expr=v9596[1] }
    ?23     = { defs={} expr=v9597[1] }
    ?24     = { defs={} expr=v9598[1] }
    ?25     = { defs={} expr=v9599[1] }
    ?26     = { defs={} expr=v9600[1] }
    ?27     = { defs={} expr=v9601[1] }
    ?28     = { defs={} expr=v9602[1] }
    ?29     = { defs={} expr=v9603[1] }
    ?30     = { defs={} expr=v9604[1] }
    ?31     = { defs={} expr=v9605[1] }
    ip      = { defs={0x08048570,0x08048573} expr=0x08048574[32] }
memory:
init mem:
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] v9564[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9704[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048574[32] }
memory:
null state
0x8048574:pop    esi
registers:
    ax      = { v37908[32] }
    cx      = { v37909[32] }
    dx      = { v37910[32] }
    bx      = { v38018[32] }
    sp      = { v37912+0x14[32] }
    bp      = { v37913[32] }
    si      = { v38028[32] }
    di      = { v37915[32] }
    es      = { v37916[16] }
    cs      = { v37917[16] }
    ss      = { v37918[16] }
    ds      = { v37919[16] }
    fs      = { v37920[16] }
    gs      = { v37921[16] }
    cf      = { v38002[1] }
    ?1      = { v37923[1] }
    pf      = { -v37993+0x1[1] }
    ?3      = { v37925[1] }
    af      = { v38000[1] }
    ?5      = { v37927[1] }
    zf      = { v37998[1] }
    sf      = { v37996[1] }
    tf      = { v37930[1] }
    if      = { v37931[1] }
    df      = { v37932[1] }
    of      = { v38008[1] }
    iopl0   = { v37934[1] }
    iopl1   = { v37935[1] }
    nt      = { v37936[1] }
    ?15     = { v37937[1] }
    rf      = { v37938[1] }
    vm      = { v37939[1] }
    ac      = { v37940[1] }
    vif     = { v37941[1] }
    vip     = { v37942[1] }
    id      = { v37943[1] }
    ?22     = { v37944[1] }
    ?23     = { v37945[1] }
    ?24     = { v37946[1] }
    ?25     = { v37947[1] }
    ?26     = { v37948[1] }
    ?27     = { v37949[1] }
    ?28     = { v37950[1] }
    ?29     = { v37951[1] }
    ?30     = { v37952[1] }
    ?31     = { v37953[1] }
    ip      = { 0x8048575[32] }
memory:
    address = { v37912+0xc[32] }
      value = { v38018[32] }
      flags = { size=4; read-only }
    address = { v37912+0x10[32] }
      value = { v38028[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v9560[32] }
    cx      = { defs={} expr=v9561[32] }
    dx      = { defs={} expr=v9562[32] }
    bx      = { defs={0x08048573} expr=v9704[32] }
    sp      = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) }
    bp      = { defs={} expr=v9565[32] }
    si      = { defs={0x08048574} expr=v9732[32] }
    di      = { defs={} expr=v9567[32] }
    es      = { defs={} expr=v9568[16] }
    cs      = { defs={} expr=v9569[16] }
    ss      = { defs={} expr=v9570[16] }
    ds      = { defs={} expr=v9571[16] }
    fs      = { defs={} expr=v9572[16] }
    gs      = { defs={} expr=v9573[16] }
    cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?1      = { defs={} expr=v9575[1] }
    pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))))) }
    ?3      = { defs={} expr=v9577[1] }
    af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?5      = { defs={} expr=v9579[1] }
    zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v9564[32] 12[32])) }
    sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v9564[32] 12[32])) }
    tf      = { defs={} expr=v9582[1] }
    if      = { defs={} expr=v9583[1] }
    df      = { defs={} expr=v9584[1] }
    of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v9586[1] }
    iopl1   = { defs={} expr=v9587[1] }
    nt      = { defs={} expr=v9588[1] }
    ?15     = { defs={} expr=v9589[1] }
    rf      = { defs={} expr=v9590[1] }
    vm      = { defs={} expr=v9591[1] }
    ac      = { defs={} expr=v9592[1] }
    vif     = { defs={} expr=v9593[1] }
    vip     = { defs={} expr=v9594[1] }
    id      = { defs={} expr=v9595[1] }
    ?22     = { defs={} expr=v9596[1] }
    ?23     = { defs={} expr=v9597[1] }
    ?24     = { defs={} expr=v9598[1] }
    ?25     = { defs={} expr=v9599[1] }
    ?26     = { defs={} expr=v9600[1] }
    ?27     = { defs={} expr=v9601[1] }
    ?28     = { defs={} expr=v9602[1] }
    ?29     = { defs={} expr=v9603[1] }
    ?30     = { defs={} expr=v9604[1] }
    ?31     = { defs={} expr=v9605[1] }
    ip      = { defs={0x08048570,0x08048573,0x08048574} expr=0x08048575[32] }
memory:
init mem:
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v9564[32] 12[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] v9564[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9704[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048575[32] }
memory:
null state
0x8048575:pop    edi
registers:
    ax      = { v37908[32] }
    cx      = { v37909[32] }
    dx      = { v37910[32] }
    bx      = { v38018[32] }
    sp      = { v37912+0x18[32] }
    bp      = { v37913[32] }
    si      = { v38028[32] }
    di      = { v38038[32] }
    es      = { v37916[16] }
    cs      = { v37917[16] }
    ss      = { v37918[16] }
    ds      = { v37919[16] }
    fs      = { v37920[16] }
    gs      = { v37921[16] }
    cf      = { v38002[1] }
    ?1      = { v37923[1] }
    pf      = { -v37993+0x1[1] }
    ?3      = { v37925[1] }
    af      = { v38000[1] }
    ?5      = { v37927[1] }
    zf      = { v37998[1] }
    sf      = { v37996[1] }
    tf      = { v37930[1] }
    if      = { v37931[1] }
    df      = { v37932[1] }
    of      = { v38008[1] }
    iopl0   = { v37934[1] }
    iopl1   = { v37935[1] }
    nt      = { v37936[1] }
    ?15     = { v37937[1] }
    rf      = { v37938[1] }
    vm      = { v37939[1] }
    ac      = { v37940[1] }
    vif     = { v37941[1] }
    vip     = { v37942[1] }
    id      = { v37943[1] }
    ?22     = { v37944[1] }
    ?23     = { v37945[1] }
    ?24     = { v37946[1] }
    ?25     = { v37947[1] }
    ?26     = { v37948[1] }
    ?27     = { v37949[1] }
    ?28     = { v37950[1] }
    ?29     = { v37951[1] }
    ?30     = { v37952[1] }
    ?31     = { v37953[1] }
    ip      = { 0x8048576[32] }
memory:
    address = { v37912+0xc[32] }
      value = { v38018[32] }
      flags = { size=4; read-only }
    address = { v37912+0x10[32] }
      value = { v38028[32] }
      flags = { size=4; read-only }
    address = { v37912+0x14[32] }
      value = { v38038[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v9560[32] }
    cx      = { defs={} expr=v9561[32] }
    dx      = { defs={} expr=v9562[32] }
    bx      = { defs={0x08048573} expr=v9704[32] }
    sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) }
    bp      = { defs={} expr=v9565[32] }
    si      = { defs={0x08048574} expr=v9732[32] }
    di      = { defs={0x08048575} expr=v9760[32] }
    es      = { defs={} expr=v9568[16] }
    cs      = { defs={} expr=v9569[16] }
    ss      = { defs={} expr=v9570[16] }
    ds      = { defs={} expr=v9571[16] }
    fs      = { defs={} expr=v9572[16] }
    gs      = { defs={} expr=v9573[16] }
    cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?1      = { defs={} expr=v9575[1] }
    pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))))) }
    ?3      = { defs={} expr=v9577[1] }
    af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?5      = { defs={} expr=v9579[1] }
    zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v9564[32] 12[32])) }
    sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v9564[32] 12[32])) }
    tf      = { defs={} expr=v9582[1] }
    if      = { defs={} expr=v9583[1] }
    df      = { defs={} expr=v9584[1] }
    of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v9586[1] }
    iopl1   = { defs={} expr=v9587[1] }
    nt      = { defs={} expr=v9588[1] }
    ?15     = { defs={} expr=v9589[1] }
    rf      = { defs={} expr=v9590[1] }
    vm      = { defs={} expr=v9591[1] }
    ac      = { defs={} expr=v9592[1] }
    vif     = { defs={} expr=v9593[1] }
    vip     = { defs={} expr=v9594[1] }
    id      = { defs={} expr=v9595[1] }
    ?22     = { defs={} expr=v9596[1] }
    ?23     = { defs={} expr=v9597[1] }
    ?24     = { defs={} expr=v9598[1] }
    ?25     = { defs={} expr=v9599[1] }
    ?26     = { defs={} expr=v9600[1] }
    ?27     = { defs={} expr=v9601[1] }
    ?28     = { defs={} expr=v9602[1] }
    ?29     = { defs={} expr=v9603[1] }
    ?30     = { defs={} expr=v9604[1] }
    ?31     = { defs={} expr=v9605[1] }
    ip      = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=0x08048576[32] }
memory:
init mem:
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v9564[32] 12[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] v9564[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9704[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048576[32] }
memory:
null state
0x8048576:pop    ebp
registers:
    ax      = { v37908[32] }
    cx      = { v37909[32] }
    dx      = { v37910[32] }
    bx      = { v38018[32] }
    sp      = { v37912+0x1c[32] }
    bp      = { v38048[32] }
    si      = { v38028[32] }
    di      = { v38038[32] }
    es      = { v37916[16] }
    cs      = { v37917[16] }
    ss      = { v37918[16] }
    ds      = { v37919[16] }
    fs      = { v37920[16] }
    gs      = { v37921[16] }
    cf      = { v38002[1] }
    ?1      = { v37923[1] }
    pf      = { -v37993+0x1[1] }
    ?3      = { v37925[1] }
    af      = { v38000[1] }
    ?5      = { v37927[1] }
    zf      = { v37998[1] }
    sf      = { v37996[1] }
    tf      = { v37930[1] }
    if      = { v37931[1] }
    df      = { v37932[1] }
    of      = { v38008[1] }
    iopl0   = { v37934[1] }
    iopl1   = { v37935[1] }
    nt      = { v37936[1] }
    ?15     = { v37937[1] }
    rf      = { v37938[1] }
    vm      = { v37939[1] }
    ac      = { v37940[1] }
    vif     = { v37941[1] }
    vip     = { v37942[1] }
    id      = { v37943[1] }
    ?22     = { v37944[1] }
    ?23     = { v37945[1] }
    ?24     = { v37946[1] }
    ?25     = { v37947[1] }
    ?26     = { v37948[1] }
    ?27     = { v37949[1] }
    ?28     = { v37950[1] }
    ?29     = { v37951[1] }
    ?30     = { v37952[1] }
    ?31     = { v37953[1] }
    ip      = { 0x8048577[32] }
memory:
    address = { v37912+0xc[32] }
      value = { v38018[32] }
      flags = { size=4; read-only }
    address = { v37912+0x10[32] }
      value = { v38028[32] }
      flags = { size=4; read-only }
    address = { v37912+0x14[32] }
      value = { v38038[32] }
      flags = { size=4; read-only }
    address = { v37912+0x18[32] }
      value = { v38048[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v9560[32] }
    cx      = { defs={} expr=v9561[32] }
    dx      = { defs={} expr=v9562[32] }
    bx      = { defs={0x08048573} expr=v9704[32] }
    sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
    bp      = { defs={0x08048576} expr=v9788[32] }
    si      = { defs={0x08048574} expr=v9732[32] }
    di      = { defs={0x08048575} expr=v9760[32] }
    es      = { defs={} expr=v9568[16] }
    cs      = { defs={} expr=v9569[16] }
    ss      = { defs={} expr=v9570[16] }
    ds      = { defs={} expr=v9571[16] }
    fs      = { defs={} expr=v9572[16] }
    gs      = { defs={} expr=v9573[16] }
    cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?1      = { defs={} expr=v9575[1] }
    pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))))) }
    ?3      = { defs={} expr=v9577[1] }
    af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?5      = { defs={} expr=v9579[1] }
    zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v9564[32] 12[32])) }
    sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v9564[32] 12[32])) }
    tf      = { defs={} expr=v9582[1] }
    if      = { defs={} expr=v9583[1] }
    df      = { defs={} expr=v9584[1] }
    of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v9586[1] }
    iopl1   = { defs={} expr=v9587[1] }
    nt      = { defs={} expr=v9588[1] }
    ?15     = { defs={} expr=v9589[1] }
    rf      = { defs={} expr=v9590[1] }
    vm      = { defs={} expr=v9591[1] }
    ac      = { defs={} expr=v9592[1] }
    vif     = { defs={} expr=v9593[1] }
    vip     = { defs={} expr=v9594[1] }
    id      = { defs={} expr=v9595[1] }
    ?22     = { defs={} expr=v9596[1] }
    ?23     = { defs={} expr=v9597[1] }
    ?24     = { defs={} expr=v9598[1] }
    ?25     = { defs={} expr=v9599[1] }
    ?26     = { defs={} expr=v9600[1] }
    ?27     = { defs={} expr=v9601[1] }
    ?28     = { defs={} expr=v9602[1] }
    ?29     = { defs={} expr=v9603[1] }
    ?30     = { defs={} expr=v9604[1] }
    ?31     = { defs={} expr=v9605[1] }
    ip      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=0x08048577[32] }
memory:
init mem:
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9788[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9788[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9788[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9788[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v9564[32] 12[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] v9564[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9704[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048577[32] }
memory:
null state
0x8048577:ret    
registers:
    ax      = { v37908[32] }
    cx      = { v37909[32] }
    dx      = { v37910[32] }
    bx      = { v38018[32] }
    sp      = { v37912+0x20[32] }
    bp      = { v38048[32] }
    si      = { v38028[32] }
    di      = { v38038[32] }
    es      = { v37916[16] }
    cs      = { v37917[16] }
    ss      = { v37918[16] }
    ds      = { v37919[16] }
    fs      = { v37920[16] }
    gs      = { v37921[16] }
    cf      = { v38002[1] }
    ?1      = { v37923[1] }
    pf      = { -v37993+0x1[1] }
    ?3      = { v37925[1] }
    af      = { v38000[1] }
    ?5      = { v37927[1] }
    zf      = { v37998[1] }
    sf      = { v37996[1] }
    tf      = { v37930[1] }
    if      = { v37931[1] }
    df      = { v37932[1] }
    of      = { v38008[1] }
    iopl0   = { v37934[1] }
    iopl1   = { v37935[1] }
    nt      = { v37936[1] }
    ?15     = { v37937[1] }
    rf      = { v37938[1] }
    vm      = { v37939[1] }
    ac      = { v37940[1] }
    vif     = { v37941[1] }
    vip     = { v37942[1] }
    id      = { v37943[1] }
    ?22     = { v37944[1] }
    ?23     = { v37945[1] }
    ?24     = { v37946[1] }
    ?25     = { v37947[1] }
    ?26     = { v37948[1] }
    ?27     = { v37949[1] }
    ?28     = { v37950[1] }
    ?29     = { v37951[1] }
    ?30     = { v37952[1] }
    ?31     = { v37953[1] }
    ip      = { v38060[32] }
memory:
    address = { v37912+0xc[32] }
      value = { v38018[32] }
      flags = { size=4; read-only }
    address = { v37912+0x10[32] }
      value = { v38028[32] }
      flags = { size=4; read-only }
    address = { v37912+0x14[32] }
      value = { v38038[32] }
      flags = { size=4; read-only }
    address = { v37912+0x18[32] }
      value = { v38048[32] }
      flags = { size=4; read-only }
    address = { v37912+0x1c[32] }
      value = { v38060[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v9560[32] }
    cx      = { defs={} expr=v9561[32] }
    dx      = { defs={} expr=v9562[32] }
    bx      = { defs={0x08048573} expr=v9704[32] }
    sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
    bp      = { defs={0x08048576} expr=v9788[32] }
    si      = { defs={0x08048574} expr=v9732[32] }
    di      = { defs={0x08048575} expr=v9760[32] }
    es      = { defs={} expr=v9568[16] }
    cs      = { defs={} expr=v9569[16] }
    ss      = { defs={} expr=v9570[16] }
    ds      = { defs={} expr=v9571[16] }
    fs      = { defs={} expr=v9572[16] }
    gs      = { defs={} expr=v9573[16] }
    cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?1      = { defs={} expr=v9575[1] }
    pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v9564[32] 12[32]))))))) }
    ?3      = { defs={} expr=v9577[1] }
    af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) }
    ?5      = { defs={} expr=v9579[1] }
    zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v9564[32] 12[32])) }
    sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v9564[32] 12[32])) }
    tf      = { defs={} expr=v9582[1] }
    if      = { defs={} expr=v9583[1] }
    df      = { defs={} expr=v9584[1] }
    of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v9564[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v9564[32]) 12[33])))))) }
    iopl0   = { defs={} expr=v9586[1] }
    iopl1   = { defs={} expr=v9587[1] }
    nt      = { defs={} expr=v9588[1] }
    ?15     = { defs={} expr=v9589[1] }
    rf      = { defs={} expr=v9590[1] }
    vm      = { defs={} expr=v9591[1] }
    ac      = { defs={} expr=v9592[1] }
    vif     = { defs={} expr=v9593[1] }
    vip     = { defs={} expr=v9594[1] }
    id      = { defs={} expr=v9595[1] }
    ?22     = { defs={} expr=v9596[1] }
    ?23     = { defs={} expr=v9597[1] }
    ?24     = { defs={} expr=v9598[1] }
    ?25     = { defs={} expr=v9599[1] }
    ?26     = { defs={} expr=v9600[1] }
    ?27     = { defs={} expr=v9601[1] }
    ?28     = { defs={} expr=v9602[1] }
    ?29     = { defs={} expr=v9603[1] }
    ?30     = { defs={} expr=v9604[1] }
    ?31     = { defs={} expr=v9605[1] }
    ip      = { defs={0x08048577} expr=v9818[32] }
memory:
init mem:
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9818[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9818[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9818[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9818[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9788[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9788[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9788[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9788[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9760[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] (add[32] v9564[32] 12[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v9564[32] 12[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9732[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] (add[32] v9564[32] 12[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v9704[32]) }
      flags = { rdonly }
    address = { defs={0x08048570} expr=(add[32] v9564[32] 12[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v9704[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
registers:
    ax      = { v38111[32] }
    cx      = { v38112[32] }
    dx      = { v38113[32] }
    bx      = { v38114[32] }
    sp      = { v38115-0x4[32] }
    bp      = { v38116[32] }
    si      = { v38117[32] }
    di      = { v38118[32] }
    es      = { v38119[16] }
    cs      = { v38120[16] }
    ss      = { v38121[16] }
    ds      = { v38122[16] }
    fs      = { v38123[16] }
    gs      = { v38124[16] }
    cf      = { v38125[1] }
    ?1      = { v38126[1] }
    pf      = { v38127[1] }
    ?3      = { v38128[1] }
    af      = { v38129[1] }
    ?5      = { v38130[1] }
    zf      = { v38131[1] }
    sf      = { v38132[1] }
    tf      = { v38133[1] }
    if      = { v38134[1] }
    df      = { v38135[1] }
    of      = { v38136[1] }
    iopl0   = { v38137[1] }
    iopl1   = { v38138[1] }
    nt      = { v38139[1] }
    ?15     = { v38140[1] }
    rf      = { v38141[1] }
    vm      = { v38142[1] }
    ac      = { v38143[1] }
    vif     = { v38144[1] }
    vip     = { v38145[1] }
    id      = { v38146[1] }
    ?22     = { v38147[1] }
    ?23     = { v38148[1] }
    ?24     = { v38149[1] }
    ?25     = { v38150[1] }
    ?26     = { v38151[1] }
    ?27     = { v38152[1] }
    ?28     = { v38153[1] }
    ?29     = { v38154[1] }
    ?30     = { v38155[1] }
    ?31     = { v38156[1] }
    ip      = { 0x8048581[32] }
memory:
    address = { v38115-0x4[32] }
      value = { v38116[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v9882[32] }
    cx      = { defs={} expr=v9883[32] }
    dx      = { defs={} expr=v9884[32] }
    bx      = { defs={} expr=v9885[32] }
    sp      = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
    bp      = { defs={} expr=v9887[32] }
    si      = { defs={} expr=v9888[32] }
    di      = { defs={} expr=v9889[32] }
    es      = { defs={} expr=v9890[16] }
    cs      = { defs={} expr=v9891[16] }
    ss      = { defs={} expr=v9892[16] }
    ds      = { defs={} expr=v9893[16] }
    fs      = { defs={} expr=v9894[16] }
    gs      = { defs={} expr=v9895[16] }
    cf      = { defs={} expr=v9896[1] }
    ?1      = { defs={} expr=v9897[1] }
    pf      = { defs={} expr=v9898[1] }
    ?3      = { defs={} expr=v9899[1] }
    af      = { defs={} expr=v9900[1] }
    ?5      = { defs={} expr=v9901[1] }
    zf      = { defs={} expr=v9902[1] }
    sf      = { defs={} expr=v9903[1] }
    tf      = { defs={} expr=v9904[1] }
    if      = { defs={} expr=v9905[1] }
    df      = { defs={} expr=v9906[1] }
    of      = { defs={} expr=v9907[1] }
    iopl0   = { defs={} expr=v9908[1] }
    iopl1   = { defs={} expr=v9909[1] }
    nt      = { defs={} expr=v9910[1] }
    ?15     = { defs={} expr=v9911[1] }
    rf      = { defs={} expr=v9912[1] }
    vm      = { defs={} expr=v9913[1] }
    ac      = { defs={} expr=v9914[1] }
    vif     = { defs={} expr=v9915[1] }
    vip     = { defs={} expr=v9916[1] }
    id      = { defs={} expr=v9917[1] }
    ?22     = { defs={} expr=v9918[1] }
    ?23     = { defs={} expr=v9919[1] }
    ?24     = { defs={} expr=v9920[1] }
    ?25     = { defs={} expr=v9921[1] }
    ?26     = { defs={} expr=v9922[1] }
    ?27     = { defs={} expr=v9923[1] }
    ?28     = { defs={} expr=v9924[1] }
    ?29     = { defs={} expr=v9925[1] }
    ?30     = { defs={} expr=v9926[1] }
    ?31     = { defs={} expr=v9927[1] }
    ip      = { defs={0x08048580} expr=0x08048581[32] }
memory:
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 3[32]) }
      value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 2[32]) }
      value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 1[32]) }
      value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
      value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v9887[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048581[32] }
memory:
null state
0x8048581:mov    ebp, esp
registers:
    ax      = { v38111[32] }
    cx      = { v38112[32] }
    dx      = { v38113[32] }
    bx      = { v38114[32] }
    sp      = { v38115-0x4[32] }
    bp      = { v38115-0x4[32] }
    si      = { v38117[32] }
    di      = { v38118[32] }
    es      = { v38119[16] }
    cs      = { v38120[16] }
    ss      = { v38121[16] }
    ds      = { v38122[16] }
    fs      = { v38123[16] }
    gs      = { v38124[16] }
    cf      = { v38125[1] }
    ?1      = { v38126[1] }
    pf      = { v38127[1] }
    ?3      = { v38128[1] }
    af      = { v38129[1] }
    ?5      = { v38130[1] }
    zf      = { v38131[1] }
    sf      = { v38132[1] }
    tf      = { v38133[1] }
    if      = { v38134[1] }
    df      = { v38135[1] }
    of      = { v38136[1] }
    iopl0   = { v38137[1] }
    iopl1   = { v38138[1] }
    nt      = { v38139[1] }
    ?15     = { v38140[1] }
    rf      = { v38141[1] }
    vm      = { v38142[1] }
    ac      = { v38143[1] }
    vif     = { v38144[1] }
    vip     = { v38145[1] }
    id      = { v38146[1] }
    ?22     = { v38147[1] }
    ?23     = { v38148[1] }
    ?24     = { v38149[1] }
    ?25     = { v38150[1] }
    ?26     = { v38151[1] }
    ?27     = { v38152[1] }
    ?28     = { v38153[1] }
    ?29     = { v38154[1] }
    ?30     = { v38155[1] }
    ?31     = { v38156[1] }
    ip      = { 0x8048583[32] }
memory:
    address = { v38115-0x4[32] }
      value = { v38116[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v9882[32] }
    cx      = { defs={} expr=v9883[32] }
    dx      = { defs={} expr=v9884[32] }
    bx      = { defs={} expr=v9885[32] }
    sp      = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
    bp      = { defs={0x08048580,0x08048581} expr=(add[32] v9886[32] -4[32]) }
    si      = { defs={} expr=v9888[32] }
    di      = { defs={} expr=v9889[32] }
    es      = { defs={} expr=v9890[16] }
    cs      = { defs={} expr=v9891[16] }
    ss      = { defs={} expr=v9892[16] }
    ds      = { defs={} expr=v9893[16] }
    fs      = { defs={} expr=v9894[16] }
    gs      = { defs={} expr=v9895[16] }
    cf      = { defs={} expr=v9896[1] }
    ?1      = { defs={} expr=v9897[1] }
    pf      = { defs={} expr=v9898[1] }
    ?3      = { defs={} expr=v9899[1] }
    af      = { defs={} expr=v9900[1] }
    ?5      = { defs={} expr=v9901[1] }
    zf      = { defs={} expr=v9902[1] }
    sf      = { defs={} expr=v9903[1] }
    tf      = { defs={} expr=v9904[1] }
    if      = { defs={} expr=v9905[1] }
    df      = { defs={} expr=v9906[1] }
    of      = { defs={} expr=v9907[1] }
    iopl0   = { defs={} expr=v9908[1] }
    iopl1   = { defs={} expr=v9909[1] }
    nt      = { defs={} expr=v9910[1] }
    ?15     = { defs={} expr=v9911[1] }
    rf      = { defs={} expr=v9912[1] }
    vm      = { defs={} expr=v9913[1] }
    ac      = { defs={} expr=v9914[1] }
    vif     = { defs={} expr=v9915[1] }
    vip     = { defs={} expr=v9916[1] }
    id      = { defs={} expr=v9917[1] }
    ?22     = { defs={} expr=v9918[1] }
    ?23     = { defs={} expr=v9919[1] }
    ?24     = { defs={} expr=v9920[1] }
    ?25     = { defs={} expr=v9921[1] }
    ?26     = { defs={} expr=v9922[1] }
    ?27     = { defs={} expr=v9923[1] }
    ?28     = { defs={} expr=v9924[1] }
    ?29     = { defs={} expr=v9925[1] }
    ?30     = { defs={} expr=v9926[1] }
    ?31     = { defs={} expr=v9927[1] }
    ip      = { defs={0x08048580,0x08048581} expr=0x08048583[32] }
memory:
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 3[32]) }
      value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 2[32]) }
      value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 1[32]) }
      value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
      value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v9887[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048583[32] }
memory:
null state
0x8048583:push   ebx
registers:
    ax      = { v38111[32] }
    cx      = { v38112[32] }
    dx      = { v38113[32] }
    bx      = { v38114[32] }
    sp      = { v38115-0x8[32] }
    bp      = { v38115-0x4[32] }
    si      = { v38117[32] }
    di      = { v38118[32] }
    es      = { v38119[16] }
    cs      = { v38120[16] }
    ss      = { v38121[16] }
    ds      = { v38122[16] }
    fs      = { v38123[16] }
    gs      = { v38124[16] }
    cf      = { v38125[1] }
    ?1      = { v38126[1] }
    pf      = { v38127[1] }
    ?3      = { v38128[1] }
    af      = { v38129[1] }
    ?5      = { v38130[1] }
    zf      = { v38131[1] }
    sf      = { v38132[1] }
    tf      = { v38133[1] }
    if      = { v38134[1] }
    df      = { v38135[1] }
    of      = { v38136[1] }
    iopl0   = { v38137[1] }
    iopl1   = { v38138[1] }
    nt      = { v38139[1] }
    ?15     = { v38140[1] }
    rf      = { v38141[1] }
    vm      = { v38142[1] }
    ac      = { v38143[1] }
    vif     = { v38144[1] }
    vip     = { v38145[1] }
    id      = { v38146[1] }
    ?22     = { v38147[1] }
    ?23     = { v38148[1] }
    ?24     = { v38149[1] }
    ?25     = { v38150[1] }
    ?26     = { v38151[1] }
    ?27     = { v38152[1] }
    ?28     = { v38153[1] }
    ?29     = { v38154[1] }
    ?30     = { v38155[1] }
    ?31     = { v38156[1] }
    ip      = { 0x8048584[32] }
memory:
    address = { v38115-0x4[32] }
      value = { v38116[32] }
      flags = { size=4 }
    address = { v38115-0x8[32] }
      value = { v38114[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v9882[32] }
    cx      = { defs={} expr=v9883[32] }
    dx      = { defs={} expr=v9884[32] }
    bx      = { defs={} expr=v9885[32] }
    sp      = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v9886[32] -4[32]) -4[32]) }
    bp      = { defs={0x08048580,0x08048581} expr=(add[32] v9886[32] -4[32]) }
    si      = { defs={} expr=v9888[32] }
    di      = { defs={} expr=v9889[32] }
    es      = { defs={} expr=v9890[16] }
    cs      = { defs={} expr=v9891[16] }
    ss      = { defs={} expr=v9892[16] }
    ds      = { defs={} expr=v9893[16] }
    fs      = { defs={} expr=v9894[16] }
    gs      = { defs={} expr=v9895[16] }
    cf      = { defs={} expr=v9896[1] }
    ?1      = { defs={} expr=v9897[1] }
    pf      = { defs={} expr=v9898[1] }
    ?3      = { defs={} expr=v9899[1] }
    af      = { defs={} expr=v9900[1] }
    ?5      = { defs={} expr=v9901[1] }
    zf      = { defs={} expr=v9902[1] }
    sf      = { defs={} expr=v9903[1] }
    tf      = { defs={} expr=v9904[1] }
    if      = { defs={} expr=v9905[1] }
    df      = { defs={} expr=v9906[1] }
    of      = { defs={} expr=v9907[1] }
    iopl0   = { defs={} expr=v9908[1] }
    iopl1   = { defs={} expr=v9909[1] }
    nt      = { defs={} expr=v9910[1] }
    ?15     = { defs={} expr=v9911[1] }
    rf      = { defs={} expr=v9912[1] }
    vm      = { defs={} expr=v9913[1] }
    ac      = { defs={} expr=v9914[1] }
    vif     = { defs={} expr=v9915[1] }
    vip     = { defs={} expr=v9916[1] }
    id      = { defs={} expr=v9917[1] }
    ?22     = { defs={} expr=v9918[1] }
    ?23     = { defs={} expr=v9919[1] }
    ?24     = { defs={} expr=v9920[1] }
    ?25     = { defs={} expr=v9921[1] }
    ?26     = { defs={} expr=v9922[1] }
    ?27     = { defs={} expr=v9923[1] }
    ?28     = { defs={} expr=v9924[1] }
    ?29     = { defs={} expr=v9925[1] }
    ?30     = { defs={} expr=v9926[1] }
    ?31     = { defs={} expr=v9927[1] }
    ip      = { defs={0x08048580,0x08048581,0x08048583} expr=0x08048584[32] }
memory:
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v9886[32] -4[32]) -4[32]) }
      value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 3[32]) }
      value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 2[32]) }
      value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 1[32]) }
      value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
      value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v9887[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048584[32] }
memory:
null state
0x8048584:sub    esp, 0x04
registers:
    ax      = { v38111[32] }
    cx      = { v38112[32] }
    dx      = { v38113[32] }
    bx      = { v38114[32] }
    sp      = { v38115-0xc[32] }
    bp      = { v38115-0x4[32] }
    si      = { v38117[32] }
    di      = { v38118[32] }
    es      = { v38119[16] }
    cs      = { v38120[16] }
    ss      = { v38121[16] }
    ds      = { v38122[16] }
    fs      = { v38123[16] }
    gs      = { v38124[16] }
    cf      = { -v38231+0x1[1] }
    ?1      = { v38126[1] }
    pf      = { -v38221+0x1[1] }
    ?3      = { v38128[1] }
    af      = { -v38228+0x1[1] }
    ?5      = { v38130[1] }
    zf      = { v38226[1] }
    sf      = { v38224[1] }
    tf      = { v38133[1] }
    if      = { v38134[1] }
    df      = { v38135[1] }
    of      = { v38238[1] }
    iopl0   = { v38137[1] }
    iopl1   = { v38138[1] }
    nt      = { v38139[1] }
    ?15     = { v38140[1] }
    rf      = { v38141[1] }
    vm      = { v38142[1] }
    ac      = { v38143[1] }
    vif     = { v38144[1] }
    vip     = { v38145[1] }
    id      = { v38146[1] }
    ?22     = { v38147[1] }
    ?23     = { v38148[1] }
    ?24     = { v38149[1] }
    ?25     = { v38150[1] }
    ?26     = { v38151[1] }
    ?27     = { v38152[1] }
    ?28     = { v38153[1] }
    ?29     = { v38154[1] }
    ?30     = { v38155[1] }
    ?31     = { v38156[1] }
    ip      = { 0x8048587[32] }
memory:
    address = { v38115-0x4[32] }
      value = { v38116[32] }
      flags = { size=4 }
    address = { v38115-0x8[32] }
      value = { v38114[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v9882[32] }
    cx      = { defs={} expr=v9883[32] }
    dx      = { defs={} expr=v9884[32] }
    bx      = { defs={} expr=v9885[32] }
    sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048580,0x08048581} expr=(add[32] v9886[32] -4[32]) }
    si      = { defs={} expr=v9888[32] }
    di      = { defs={} expr=v9889[32] }
    es      = { defs={} expr=v9890[16] }
    cs      = { defs={} expr=v9891[16] }
    ss      = { defs={} expr=v9892[16] }
    ds      = { defs={} expr=v9893[16] }
    fs      = { defs={} expr=v9894[16] }
    gs      = { defs={} expr=v9895[16] }
    cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    ?1      = { defs={} expr=v9897[1] }
    pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))))))) }
    ?3      = { defs={} expr=v9899[1] }
    af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    ?5      = { defs={} expr=v9901[1] }
    zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])) }
    sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])) }
    tf      = { defs={} expr=v9904[1] }
    if      = { defs={} expr=v9905[1] }
    df      = { defs={} expr=v9906[1] }
    of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    iopl0   = { defs={} expr=v9908[1] }
    iopl1   = { defs={} expr=v9909[1] }
    nt      = { defs={} expr=v9910[1] }
    ?15     = { defs={} expr=v9911[1] }
    rf      = { defs={} expr=v9912[1] }
    vm      = { defs={} expr=v9913[1] }
    ac      = { defs={} expr=v9914[1] }
    vif     = { defs={} expr=v9915[1] }
    vip     = { defs={} expr=v9916[1] }
    id      = { defs={} expr=v9917[1] }
    ?22     = { defs={} expr=v9918[1] }
    ?23     = { defs={} expr=v9919[1] }
    ?24     = { defs={} expr=v9920[1] }
    ?25     = { defs={} expr=v9921[1] }
    ?26     = { defs={} expr=v9922[1] }
    ?27     = { defs={} expr=v9923[1] }
    ?28     = { defs={} expr=v9924[1] }
    ?29     = { defs={} expr=v9925[1] }
    ?30     = { defs={} expr=v9926[1] }
    ?31     = { defs={} expr=v9927[1] }
    ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584} expr=0x08048587[32] }
memory:
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v9886[32] -4[32]) -4[32]) }
      value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 3[32]) }
      value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 2[32]) }
      value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 1[32]) }
      value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
      value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v9887[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048587[32] }
memory:
null state
0x8048587:mov    ebx, 0x080495e8<.ctors>
registers:
    ax      = { v38111[32] }
    cx      = { v38112[32] }
    dx      = { v38113[32] }
    bx      = { 0x80495e8[32] }
    sp      = { v38115-0xc[32] }
    bp      = { v38115-0x4[32] }
    si      = { v38117[32] }
    di      = { v38118[32] }
    es      = { v38119[16] }
    cs      = { v38120[16] }
    ss      = { v38121[16] }
    ds      = { v38122[16] }
    fs      = { v38123[16] }
    gs      = { v38124[16] }
    cf      = { -v38231+0x1[1] }
    ?1      = { v38126[1] }
    pf      = { -v38221+0x1[1] }
    ?3      = { v38128[1] }
    af      = { -v38228+0x1[1] }
    ?5      = { v38130[1] }
    zf      = { v38226[1] }
    sf      = { v38224[1] }
    tf      = { v38133[1] }
    if      = { v38134[1] }
    df      = { v38135[1] }
    of      = { v38238[1] }
    iopl0   = { v38137[1] }
    iopl1   = { v38138[1] }
    nt      = { v38139[1] }
    ?15     = { v38140[1] }
    rf      = { v38141[1] }
    vm      = { v38142[1] }
    ac      = { v38143[1] }
    vif     = { v38144[1] }
    vip     = { v38145[1] }
    id      = { v38146[1] }
    ?22     = { v38147[1] }
    ?23     = { v38148[1] }
    ?24     = { v38149[1] }
    ?25     = { v38150[1] }
    ?26     = { v38151[1] }
    ?27     = { v38152[1] }
    ?28     = { v38153[1] }
    ?29     = { v38154[1] }
    ?30     = { v38155[1] }
    ?31     = { v38156[1] }
    ip      = { 0x804858c[32] }
memory:
    address = { v38115-0x4[32] }
      value = { v38116[32] }
      flags = { size=4 }
    address = { v38115-0x8[32] }
      value = { v38114[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v9882[32] }
    cx      = { defs={} expr=v9883[32] }
    dx      = { defs={} expr=v9884[32] }
    bx      = { defs={0x08048587} expr=0x080495e8[32] }
    sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048580,0x08048581} expr=(add[32] v9886[32] -4[32]) }
    si      = { defs={} expr=v9888[32] }
    di      = { defs={} expr=v9889[32] }
    es      = { defs={} expr=v9890[16] }
    cs      = { defs={} expr=v9891[16] }
    ss      = { defs={} expr=v9892[16] }
    ds      = { defs={} expr=v9893[16] }
    fs      = { defs={} expr=v9894[16] }
    gs      = { defs={} expr=v9895[16] }
    cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    ?1      = { defs={} expr=v9897[1] }
    pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))))))) }
    ?3      = { defs={} expr=v9899[1] }
    af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    ?5      = { defs={} expr=v9901[1] }
    zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])) }
    sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])) }
    tf      = { defs={} expr=v9904[1] }
    if      = { defs={} expr=v9905[1] }
    df      = { defs={} expr=v9906[1] }
    of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    iopl0   = { defs={} expr=v9908[1] }
    iopl1   = { defs={} expr=v9909[1] }
    nt      = { defs={} expr=v9910[1] }
    ?15     = { defs={} expr=v9911[1] }
    rf      = { defs={} expr=v9912[1] }
    vm      = { defs={} expr=v9913[1] }
    ac      = { defs={} expr=v9914[1] }
    vif     = { defs={} expr=v9915[1] }
    vip     = { defs={} expr=v9916[1] }
    id      = { defs={} expr=v9917[1] }
    ?22     = { defs={} expr=v9918[1] }
    ?23     = { defs={} expr=v9919[1] }
    ?24     = { defs={} expr=v9920[1] }
    ?25     = { defs={} expr=v9921[1] }
    ?26     = { defs={} expr=v9922[1] }
    ?27     = { defs={} expr=v9923[1] }
    ?28     = { defs={} expr=v9924[1] }
    ?29     = { defs={} expr=v9925[1] }
    ?30     = { defs={} expr=v9926[1] }
    ?31     = { defs={} expr=v9927[1] }
    ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587} expr=0x0804858c[32] }
memory:
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v9886[32] -4[32]) -4[32]) }
      value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 3[32]) }
      value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 2[32]) }
      value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 1[32]) }
      value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
      value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v9887[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { 0x080495e8[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804858c[32] }
memory:
null state
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]
registers:
    ax      = { v38251[32] }
    cx      = { v38112[32] }
    dx      = { v38113[32] }
    bx      = { 0x80495e8[32] }
    sp      = { v38115-0xc[32] }
    bp      = { v38115-0x4[32] }
    si      = { v38117[32] }
    di      = { v38118[32] }
    es      = { v38119[16] }
    cs      = { v38120[16] }
    ss      = { v38121[16] }
    ds      = { v38122[16] }
    fs      = { v38123[16] }
    gs      = { v38124[16] }
    cf      = { -v38231+0x1[1] }
    ?1      = { v38126[1] }
    pf      = { -v38221+0x1[1] }
    ?3      = { v38128[1] }
    af      = { -v38228+0x1[1] }
    ?5      = { v38130[1] }
    zf      = { v38226[1] }
    sf      = { v38224[1] }
    tf      = { v38133[1] }
    if      = { v38134[1] }
    df      = { v38135[1] }
    of      = { v38238[1] }
    iopl0   = { v38137[1] }
    iopl1   = { v38138[1] }
    nt      = { v38139[1] }
    ?15     = { v38140[1] }
    rf      = { v38141[1] }
    vm      = { v38142[1] }
    ac      = { v38143[1] }
    vif     = { v38144[1] }
    vip     = { v38145[1] }
    id      = { v38146[1] }
    ?22     = { v38147[1] }
    ?23     = { v38148[1] }
    ?24     = { v38149[1] }
    ?25     = { v38150[1] }
    ?26     = { v38151[1] }
    ?27     = { v38152[1] }
    ?28     = { v38153[1] }
    ?29     = { v38154[1] }
    ?30     = { v38155[1] }
    ?31     = { v38156[1] }
    ip      = { 0x8048591[32] }
memory:
    address = { v38115-0x4[32] }
      value = { v38116[32] }
      flags = { size=4 }
    address = { v38115-0x8[32] }
      value = { v38114[32] }
      flags = { size=4 }
    address = { 0x80495e8[32] }
      value = { v38251[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804858c} expr=v10100[32] }
    cx      = { defs={} expr=v9883[32] }
    dx      = { defs={} expr=v9884[32] }
    bx      = { defs={0x08048587} expr=0x080495e8[32] }
    sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048580,0x08048581} expr=(add[32] v9886[32] -4[32]) }
    si      = { defs={} expr=v9888[32] }
    di      = { defs={} expr=v9889[32] }
    es      = { defs={} expr=v9890[16] }
    cs      = { defs={} expr=v9891[16] }
    ss      = { defs={} expr=v9892[16] }
    ds      = { defs={} expr=v9893[16] }
    fs      = { defs={} expr=v9894[16] }
    gs      = { defs={} expr=v9895[16] }
    cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    ?1      = { defs={} expr=v9897[1] }
    pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]))))))) }
    ?3      = { defs={} expr=v9899[1] }
    af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    ?5      = { defs={} expr=v9901[1] }
    zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])) }
    sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32])) }
    tf      = { defs={} expr=v9904[1] }
    if      = { defs={} expr=v9905[1] }
    df      = { defs={} expr=v9906[1] }
    of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v9886[32] -4[32]) -4[32])) 4294967292[33])))))) }
    iopl0   = { defs={} expr=v9908[1] }
    iopl1   = { defs={} expr=v9909[1] }
    nt      = { defs={} expr=v9910[1] }
    ?15     = { defs={} expr=v9911[1] }
    rf      = { defs={} expr=v9912[1] }
    vm      = { defs={} expr=v9913[1] }
    ac      = { defs={} expr=v9914[1] }
    vif     = { defs={} expr=v9915[1] }
    vip     = { defs={} expr=v9916[1] }
    id      = { defs={} expr=v9917[1] }
    ?22     = { defs={} expr=v9918[1] }
    ?23     = { defs={} expr=v9919[1] }
    ?24     = { defs={} expr=v9920[1] }
    ?25     = { defs={} expr=v9921[1] }
    ?26     = { defs={} expr=v9922[1] }
    ?27     = { defs={} expr=v9923[1] }
    ?28     = { defs={} expr=v9924[1] }
    ?29     = { defs={} expr=v9925[1] }
    ?30     = { defs={} expr=v9926[1] }
    ?31     = { defs={} expr=v9927[1] }
    ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c} expr=0x08048591[32] }
memory:
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v9886[32] -4[32]) -4[32]) }
      value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 3[32]) }
      value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 2[32]) }
      value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 1[32]) }
      value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
      value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v9887[32]) }
      flags = { }
init mem:
    address = { defs={0x0804858c} expr=0x080495eb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495ea[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495e9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495e8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10100[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { 0x080495e8[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048591[32] }
memory:
null state
0x8048591:cmp    eax, 0xff<-0x01>
registers:
    ax      = { v38251[32] }
    cx      = { v38112[32] }
    dx      = { v38113[32] }
    bx      = { 0x80495e8[32] }
    sp      = { v38115-0xc[32] }
    bp      = { v38115-0x4[32] }
    si      = { v38117[32] }
    di      = { v38118[32] }
    es      = { v38119[16] }
    cs      = { v38120[16] }
    ss      = { v38121[16] }
    ds      = { v38122[16] }
    fs      = { v38123[16] }
    gs      = { v38124[16] }
    cf      = { -v38303+0x1[1] }
    ?1      = { v38126[1] }
    pf      = { -v38293+0x1[1] }
    ?3      = { v38128[1] }
    af      = { -v38300+0x1[1] }
    ?5      = { v38130[1] }
    zf      = { v38298[1] }
    sf      = { v38296[1] }
    tf      = { v38133[1] }
    if      = { v38134[1] }
    df      = { v38135[1] }
    of      = { v38310[1] }
    iopl0   = { v38137[1] }
    iopl1   = { v38138[1] }
    nt      = { v38139[1] }
    ?15     = { v38140[1] }
    rf      = { v38141[1] }
    vm      = { v38142[1] }
    ac      = { v38143[1] }
    vif     = { v38144[1] }
    vip     = { v38145[1] }
    id      = { v38146[1] }
    ?22     = { v38147[1] }
    ?23     = { v38148[1] }
    ?24     = { v38149[1] }
    ?25     = { v38150[1] }
    ?26     = { v38151[1] }
    ?27     = { v38152[1] }
    ?28     = { v38153[1] }
    ?29     = { v38154[1] }
    ?30     = { v38155[1] }
    ?31     = { v38156[1] }
    ip      = { 0x8048594[32] }
memory:
    address = { v38115-0x4[32] }
      value = { v38116[32] }
      flags = { size=4 }
    address = { v38115-0x8[32] }
      value = { v38114[32] }
      flags = { size=4 }
    address = { 0x80495e8[32] }
      value = { v38251[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804858c} expr=v10100[32] }
    cx      = { defs={} expr=v9883[32] }
    dx      = { defs={} expr=v9884[32] }
    bx      = { defs={0x08048587} expr=0x080495e8[32] }
    sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048580,0x08048581} expr=(add[32] v9886[32] -4[32]) }
    si      = { defs={} expr=v9888[32] }
    di      = { defs={} expr=v9889[32] }
    es      = { defs={} expr=v9890[16] }
    cs      = { defs={} expr=v9891[16] }
    ss      = { defs={} expr=v9892[16] }
    ds      = { defs={} expr=v9893[16] }
    fs      = { defs={} expr=v9894[16] }
    gs      = { defs={} expr=v9895[16] }
    cf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10100[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10100[32]) 1[33])))))) }
    ?1      = { defs={} expr=v9897[1] }
    pf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))))))) }
    ?3      = { defs={} expr=v9899[1] }
    af      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10100[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10100[32]) 1[33])))))) }
    ?5      = { defs={} expr=v9901[1] }
    zf      = { defs={0x0804858c,0x08048591} expr=(zerop[1] (add[32] v10100[32] 1[32])) }
    sf      = { defs={0x0804858c,0x08048591} expr=(extract[1] 31[32] 32[32] (add[32] v10100[32] 1[32])) }
    tf      = { defs={} expr=v9904[1] }
    if      = { defs={} expr=v9905[1] }
    df      = { defs={} expr=v9906[1] }
    of      = { defs={0x0804858c,0x08048591} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10100[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10100[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10100[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10100[32]) 1[33])))))) }
    iopl0   = { defs={} expr=v9908[1] }
    iopl1   = { defs={} expr=v9909[1] }
    nt      = { defs={} expr=v9910[1] }
    ?15     = { defs={} expr=v9911[1] }
    rf      = { defs={} expr=v9912[1] }
    vm      = { defs={} expr=v9913[1] }
    ac      = { defs={} expr=v9914[1] }
    vif     = { defs={} expr=v9915[1] }
    vip     = { defs={} expr=v9916[1] }
    id      = { defs={} expr=v9917[1] }
    ?22     = { defs={} expr=v9918[1] }
    ?23     = { defs={} expr=v9919[1] }
    ?24     = { defs={} expr=v9920[1] }
    ?25     = { defs={} expr=v9921[1] }
    ?26     = { defs={} expr=v9922[1] }
    ?27     = { defs={} expr=v9923[1] }
    ?28     = { defs={} expr=v9924[1] }
    ?29     = { defs={} expr=v9925[1] }
    ?30     = { defs={} expr=v9926[1] }
    ?31     = { defs={} expr=v9927[1] }
    ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591} expr=0x08048594[32] }
memory:
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v9886[32] -4[32]) -4[32]) }
      value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 3[32]) }
      value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 2[32]) }
      value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 1[32]) }
      value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
      value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v9887[32]) }
      flags = { }
init mem:
    address = { defs={0x0804858c} expr=0x080495eb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495ea[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495e9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495e8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10100[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { 0x080495e8[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048594[32] }
memory:
null state
0x8048594:je     0x080485ac<<Insn>>
registers:
    ax      = { v38251[32] }
    cx      = { v38112[32] }
    dx      = { v38113[32] }
    bx      = { 0x80495e8[32] }
    sp      = { v38115-0xc[32] }
    bp      = { v38115-0x4[32] }
    si      = { v38117[32] }
    di      = { v38118[32] }
    es      = { v38119[16] }
    cs      = { v38120[16] }
    ss      = { v38121[16] }
    ds      = { v38122[16] }
    fs      = { v38123[16] }
    gs      = { v38124[16] }
    cf      = { -v38303+0x1[1] }
    ?1      = { v38126[1] }
    pf      = { -v38293+0x1[1] }
    ?3      = { v38128[1] }
    af      = { -v38300+0x1[1] }
    ?5      = { v38130[1] }
    zf      = { v38298[1] }
    sf      = { v38296[1] }
    tf      = { v38133[1] }
    if      = { v38134[1] }
    df      = { v38135[1] }
    of      = { v38310[1] }
    iopl0   = { v38137[1] }
    iopl1   = { v38138[1] }
    nt      = { v38139[1] }
    ?15     = { v38140[1] }
    rf      = { v38141[1] }
    vm      = { v38142[1] }
    ac      = { v38143[1] }
    vif     = { v38144[1] }
    vip     = { v38145[1] }
    id      = { v38146[1] }
    ?22     = { v38147[1] }
    ?23     = { v38148[1] }
    ?24     = { v38149[1] }
    ?25     = { v38150[1] }
    ?26     = { v38151[1] }
    ?27     = { v38152[1] }
    ?28     = { v38153[1] }
    ?29     = { v38154[1] }
    ?30     = { v38155[1] }
    ?31     = { v38156[1] }
    ip      = { v38319[32] }
memory:
    address = { v38115-0x4[32] }
      value = { v38116[32] }
      flags = { size=4 }
    address = { v38115-0x8[32] }
      value = { v38114[32] }
      flags = { size=4 }
    address = { 0x80495e8[32] }
      value = { v38251[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x0804858c} expr=v10100[32] }
    cx      = { defs={} expr=v9883[32] }
    dx      = { defs={} expr=v9884[32] }
    bx      = { defs={0x08048587} expr=0x080495e8[32] }
    sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x08048580,0x08048581} expr=(add[32] v9886[32] -4[32]) }
    si      = { defs={} expr=v9888[32] }
    di      = { defs={} expr=v9889[32] }
    es      = { defs={} expr=v9890[16] }
    cs      = { defs={} expr=v9891[16] }
    ss      = { defs={} expr=v9892[16] }
    ds      = { defs={} expr=v9893[16] }
    fs      = { defs={} expr=v9894[16] }
    gs      = { defs={} expr=v9895[16] }
    cf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10100[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10100[32]) 1[33])))))) }
    ?1      = { defs={} expr=v9897[1] }
    pf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v10100[32] 1[32]))))))) }
    ?3      = { defs={} expr=v9899[1] }
    af      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10100[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10100[32]) 1[33])))))) }
    ?5      = { defs={} expr=v9901[1] }
    zf      = { defs={0x0804858c,0x08048591} expr=(zerop[1] (add[32] v10100[32] 1[32])) }
    sf      = { defs={0x0804858c,0x08048591} expr=(extract[1] 31[32] 32[32] (add[32] v10100[32] 1[32])) }
    tf      = { defs={} expr=v9904[1] }
    if      = { defs={} expr=v9905[1] }
    df      = { defs={} expr=v9906[1] }
    of      = { defs={0x0804858c,0x08048591} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10100[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10100[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10100[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10100[32]) 1[33])))))) }
    iopl0   = { defs={} expr=v9908[1] }
    iopl1   = { defs={} expr=v9909[1] }
    nt      = { defs={} expr=v9910[1] }
    ?15     = { defs={} expr=v9911[1] }
    rf      = { defs={} expr=v9912[1] }
    vm      = { defs={} expr=v9913[1] }
    ac      = { defs={} expr=v9914[1] }
    vif     = { defs={} expr=v9915[1] }
    vip     = { defs={} expr=v9916[1] }
    id      = { defs={} expr=v9917[1] }
    ?22     = { defs={} expr=v9918[1] }
    ?23     = { defs={} expr=v9919[1] }
    ?24     = { defs={} expr=v9920[1] }
    ?25     = { defs={} expr=v9921[1] }
    ?26     = { defs={} expr=v9922[1] }
    ?27     = { defs={} expr=v9923[1] }
    ?28     = { defs={} expr=v9924[1] }
    ?29     = { defs={} expr=v9925[1] }
    ?30     = { defs={} expr=v9926[1] }
    ?31     = { defs={} expr=v9927[1] }
    ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591,0x08048594} expr=(ite[32] (zerop[1] (add[32] v10100[32] 1[32])) 0x080485ac[32] 0x08048596[32]) }
memory:
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x08048583} expr=(extract[8] 24[32] 32[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x08048583} expr=(extract[8] 16[32] 24[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] (add[32] v9886[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x08048583} expr=(extract[8] 8[32] 16[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v9886[32] -4[32]) -4[32]) }
      value = { defs={0x08048583} expr=(extract[8] 0[32] 8[32] v9885[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 3[32]) }
      value = { defs={0x08048580} expr=(extract[8] 24[32] 32[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 2[32]) }
      value = { defs={0x08048580} expr=(extract[8] 16[32] 24[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] (add[32] v9886[32] -4[32]) 1[32]) }
      value = { defs={0x08048580} expr=(extract[8] 8[32] 16[32] v9887[32]) }
      flags = { }
    address = { defs={0x08048580} expr=(add[32] v9886[32] -4[32]) }
      value = { defs={0x08048580} expr=(extract[8] 0[32] 8[32] v9887[32]) }
      flags = { }
init mem:
    address = { defs={0x0804858c} expr=0x080495eb[32] }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495ea[32] }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495e9[32] }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10100[32]) }
      flags = { rdonly }
    address = { defs={0x0804858c} expr=0x080495e8[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10100[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { 0x080495e8[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048596, 0x080485ac[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
registers:
    ax      = { v38369[32] }
    cx      = { v38370[32] }
    dx      = { v38371[32] }
    bx      = { v38372[32] }
    sp      = { v38373[32] }
    bp      = { v38374[32] }
    si      = { v38375[32] }
    di      = { v38376[32] }
    es      = { v38377[16] }
    cs      = { v38378[16] }
    ss      = { v38379[16] }
    ds      = { v38380[16] }
    fs      = { v38381[16] }
    gs      = { v38382[16] }
    cf      = { v38383[1] }
    ?1      = { v38384[1] }
    pf      = { v38385[1] }
    ?3      = { v38386[1] }
    af      = { v38387[1] }
    ?5      = { v38388[1] }
    zf      = { v38389[1] }
    sf      = { v38390[1] }
    tf      = { v38391[1] }
    if      = { v38392[1] }
    df      = { v38393[1] }
    of      = { v38394[1] }
    iopl0   = { v38395[1] }
    iopl1   = { v38396[1] }
    nt      = { v38397[1] }
    ?15     = { v38398[1] }
    rf      = { v38399[1] }
    vm      = { v38400[1] }
    ac      = { v38401[1] }
    vif     = { v38402[1] }
    vip     = { v38403[1] }
    id      = { v38404[1] }
    ?22     = { v38405[1] }
    ?23     = { v38406[1] }
    ?24     = { v38407[1] }
    ?25     = { v38408[1] }
    ?26     = { v38409[1] }
    ?27     = { v38410[1] }
    ?28     = { v38411[1] }
    ?29     = { v38412[1] }
    ?30     = { v38413[1] }
    ?31     = { v38414[1] }
    ip      = { 0x8048599[32] }
memory:
registers:
    ax      = { defs={} expr=v10267[32] }
    cx      = { defs={} expr=v10268[32] }
    dx      = { defs={} expr=v10269[32] }
    bx      = { defs={} expr=v10270[32] }
    sp      = { defs={} expr=v10271[32] }
    bp      = { defs={} expr=v10272[32] }
    si      = { defs={0x08048596} expr=v10273[32] }
    di      = { defs={} expr=v10274[32] }
    es      = { defs={} expr=v10275[16] }
    cs      = { defs={} expr=v10276[16] }
    ss      = { defs={} expr=v10277[16] }
    ds      = { defs={} expr=v10278[16] }
    fs      = { defs={} expr=v10279[16] }
    gs      = { defs={} expr=v10280[16] }
    cf      = { defs={} expr=v10281[1] }
    ?1      = { defs={} expr=v10282[1] }
    pf      = { defs={} expr=v10283[1] }
    ?3      = { defs={} expr=v10284[1] }
    af      = { defs={} expr=v10285[1] }
    ?5      = { defs={} expr=v10286[1] }
    zf      = { defs={} expr=v10287[1] }
    sf      = { defs={} expr=v10288[1] }
    tf      = { defs={} expr=v10289[1] }
    if      = { defs={} expr=v10290[1] }
    df      = { defs={} expr=v10291[1] }
    of      = { defs={} expr=v10292[1] }
    iopl0   = { defs={} expr=v10293[1] }
    iopl1   = { defs={} expr=v10294[1] }
    nt      = { defs={} expr=v10295[1] }
    ?15     = { defs={} expr=v10296[1] }
    rf      = { defs={} expr=v10297[1] }
    vm      = { defs={} expr=v10298[1] }
    ac      = { defs={} expr=v10299[1] }
    vif     = { defs={} expr=v10300[1] }
    vip     = { defs={} expr=v10301[1] }
    id      = { defs={} expr=v10302[1] }
    ?22     = { defs={} expr=v10303[1] }
    ?23     = { defs={} expr=v10304[1] }
    ?24     = { defs={} expr=v10305[1] }
    ?25     = { defs={} expr=v10306[1] }
    ?26     = { defs={} expr=v10307[1] }
    ?27     = { defs={} expr=v10308[1] }
    ?28     = { defs={} expr=v10309[1] }
    ?29     = { defs={} expr=v10310[1] }
    ?30     = { defs={} expr=v10311[1] }
    ?31     = { defs={} expr=v10312[1] }
    ip      = { defs={0x08048596} expr=0x08048599[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048599[32] }
memory:
null state
0x8048599:lea    edi, [edi + 0x00000000]
registers:
    ax      = { v38369[32] }
    cx      = { v38370[32] }
    dx      = { v38371[32] }
    bx      = { v38372[32] }
    sp      = { v38373[32] }
    bp      = { v38374[32] }
    si      = { v38375[32] }
    di      = { v38376[32] }
    es      = { v38377[16] }
    cs      = { v38378[16] }
    ss      = { v38379[16] }
    ds      = { v38380[16] }
    fs      = { v38381[16] }
    gs      = { v38382[16] }
    cf      = { v38383[1] }
    ?1      = { v38384[1] }
    pf      = { v38385[1] }
    ?3      = { v38386[1] }
    af      = { v38387[1] }
    ?5      = { v38388[1] }
    zf      = { v38389[1] }
    sf      = { v38390[1] }
    tf      = { v38391[1] }
    if      = { v38392[1] }
    df      = { v38393[1] }
    of      = { v38394[1] }
    iopl0   = { v38395[1] }
    iopl1   = { v38396[1] }
    nt      = { v38397[1] }
    ?15     = { v38398[1] }
    rf      = { v38399[1] }
    vm      = { v38400[1] }
    ac      = { v38401[1] }
    vif     = { v38402[1] }
    vip     = { v38403[1] }
    id      = { v38404[1] }
    ?22     = { v38405[1] }
    ?23     = { v38406[1] }
    ?24     = { v38407[1] }
    ?25     = { v38408[1] }
    ?26     = { v38409[1] }
    ?27     = { v38410[1] }
    ?28     = { v38411[1] }
    ?29     = { v38412[1] }
    ?30     = { v38413[1] }
    ?31     = { v38414[1] }
    ip      = { 0x80485a0[32] }
memory:
registers:
    ax      = { defs={} expr=v10267[32] }
    cx      = { defs={} expr=v10268[32] }
    dx      = { defs={} expr=v10269[32] }
    bx      = { defs={} expr=v10270[32] }
    sp      = { defs={} expr=v10271[32] }
    bp      = { defs={} expr=v10272[32] }
    si      = { defs={0x08048596} expr=v10273[32] }
    di      = { defs={0x08048599} expr=v10274[32] }
    es      = { defs={} expr=v10275[16] }
    cs      = { defs={} expr=v10276[16] }
    ss      = { defs={} expr=v10277[16] }
    ds      = { defs={} expr=v10278[16] }
    fs      = { defs={} expr=v10279[16] }
    gs      = { defs={} expr=v10280[16] }
    cf      = { defs={} expr=v10281[1] }
    ?1      = { defs={} expr=v10282[1] }
    pf      = { defs={} expr=v10283[1] }
    ?3      = { defs={} expr=v10284[1] }
    af      = { defs={} expr=v10285[1] }
    ?5      = { defs={} expr=v10286[1] }
    zf      = { defs={} expr=v10287[1] }
    sf      = { defs={} expr=v10288[1] }
    tf      = { defs={} expr=v10289[1] }
    if      = { defs={} expr=v10290[1] }
    df      = { defs={} expr=v10291[1] }
    of      = { defs={} expr=v10292[1] }
    iopl0   = { defs={} expr=v10293[1] }
    iopl1   = { defs={} expr=v10294[1] }
    nt      = { defs={} expr=v10295[1] }
    ?15     = { defs={} expr=v10296[1] }
    rf      = { defs={} expr=v10297[1] }
    vm      = { defs={} expr=v10298[1] }
    ac      = { defs={} expr=v10299[1] }
    vif     = { defs={} expr=v10300[1] }
    vip     = { defs={} expr=v10301[1] }
    id      = { defs={} expr=v10302[1] }
    ?22     = { defs={} expr=v10303[1] }
    ?23     = { defs={} expr=v10304[1] }
    ?24     = { defs={} expr=v10305[1] }
    ?25     = { defs={} expr=v10306[1] }
    ?26     = { defs={} expr=v10307[1] }
    ?27     = { defs={} expr=v10308[1] }
    ?28     = { defs={} expr=v10309[1] }
    ?29     = { defs={} expr=v10310[1] }
    ?30     = { defs={} expr=v10311[1] }
    ?31     = { defs={} expr=v10312[1] }
    ip      = { defs={0x08048596,0x08048599} expr=0x080485a0[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485a0[32] }
memory:
null state
0x80485a0:sub    ebx, 0x04
registers:
    ax      = { v38369[32] }
    cx      = { v38370[32] }
    dx      = { v38371[32] }
    bx      = { v38372-0x4[32] }
    sp      = { v38373[32] }
    bp      = { v38374[32] }
    si      = { v38375[32] }
    di      = { v38376[32] }
    es      = { v38377[16] }
    cs      = { v38378[16] }
    ss      = { v38379[16] }
    ds      = { v38380[16] }
    fs      = { v38381[16] }
    gs      = { v38382[16] }
    cf      = { -v38480+0x1[1] }
    ?1      = { v38384[1] }
    pf      = { -v38470+0x1[1] }
    ?3      = { v38386[1] }
    af      = { -v38477+0x1[1] }
    ?5      = { v38388[1] }
    zf      = { v38475[1] }
    sf      = { v38473[1] }
    tf      = { v38391[1] }
    if      = { v38392[1] }
    df      = { v38393[1] }
    of      = { v38487[1] }
    iopl0   = { v38395[1] }
    iopl1   = { v38396[1] }
    nt      = { v38397[1] }
    ?15     = { v38398[1] }
    rf      = { v38399[1] }
    vm      = { v38400[1] }
    ac      = { v38401[1] }
    vif     = { v38402[1] }
    vip     = { v38403[1] }
    id      = { v38404[1] }
    ?22     = { v38405[1] }
    ?23     = { v38406[1] }
    ?24     = { v38407[1] }
    ?25     = { v38408[1] }
    ?26     = { v38409[1] }
    ?27     = { v38410[1] }
    ?28     = { v38411[1] }
    ?29     = { v38412[1] }
    ?30     = { v38413[1] }
    ?31     = { v38414[1] }
    ip      = { 0x80485a3[32] }
memory:
registers:
    ax      = { defs={} expr=v10267[32] }
    cx      = { defs={} expr=v10268[32] }
    dx      = { defs={} expr=v10269[32] }
    bx      = { defs={0x080485a0} expr=(add[32] v10270[32] -4[32]) }
    sp      = { defs={} expr=v10271[32] }
    bp      = { defs={} expr=v10272[32] }
    si      = { defs={0x08048596} expr=v10273[32] }
    di      = { defs={0x08048599} expr=v10274[32] }
    es      = { defs={} expr=v10275[16] }
    cs      = { defs={} expr=v10276[16] }
    ss      = { defs={} expr=v10277[16] }
    ds      = { defs={} expr=v10278[16] }
    fs      = { defs={} expr=v10279[16] }
    gs      = { defs={} expr=v10280[16] }
    cf      = { defs={0x080485a0} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10270[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v10270[32]) 4294967292[33])))))) }
    ?1      = { defs={} expr=v10282[1] }
    pf      = { defs={0x080485a0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))))))) }
    ?3      = { defs={} expr=v10284[1] }
    af      = { defs={0x080485a0} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10270[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v10270[32]) 4294967292[33])))))) }
    ?5      = { defs={} expr=v10286[1] }
    zf      = { defs={0x080485a0} expr=(zerop[1] (add[32] v10270[32] -4[32])) }
    sf      = { defs={0x080485a0} expr=(extract[1] 31[32] 32[32] (add[32] v10270[32] -4[32])) }
    tf      = { defs={} expr=v10289[1] }
    if      = { defs={} expr=v10290[1] }
    df      = { defs={} expr=v10291[1] }
    of      = { defs={0x080485a0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10270[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v10270[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10270[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v10270[32]) 4294967292[33])))))) }
    iopl0   = { defs={} expr=v10293[1] }
    iopl1   = { defs={} expr=v10294[1] }
    nt      = { defs={} expr=v10295[1] }
    ?15     = { defs={} expr=v10296[1] }
    rf      = { defs={} expr=v10297[1] }
    vm      = { defs={} expr=v10298[1] }
    ac      = { defs={} expr=v10299[1] }
    vif     = { defs={} expr=v10300[1] }
    vip     = { defs={} expr=v10301[1] }
    id      = { defs={} expr=v10302[1] }
    ?22     = { defs={} expr=v10303[1] }
    ?23     = { defs={} expr=v10304[1] }
    ?24     = { defs={} expr=v10305[1] }
    ?25     = { defs={} expr=v10306[1] }
    ?26     = { defs={} expr=v10307[1] }
    ?27     = { defs={} expr=v10308[1] }
    ?28     = { defs={} expr=v10309[1] }
    ?29     = { defs={} expr=v10310[1] }
    ?30     = { defs={} expr=v10311[1] }
    ?31     = { defs={} expr=v10312[1] }
    ip      = { defs={0x08048596,0x08048599,0x080485a0} expr=0x080485a3[32] }
memory:
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485a3[32] }
memory:
null state
0x80485a3:call   eax
registers:
    ax      = { v38369[32] }
    cx      = { v38370[32] }
    dx      = { v38371[32] }
    bx      = { v38372-0x4[32] }
    sp      = { v38373-0x4[32] }
    bp      = { v38374[32] }
    si      = { v38375[32] }
    di      = { v38376[32] }
    es      = { v38377[16] }
    cs      = { v38378[16] }
    ss      = { v38379[16] }
    ds      = { v38380[16] }
    fs      = { v38381[16] }
    gs      = { v38382[16] }
    cf      = { -v38480+0x1[1] }
    ?1      = { v38384[1] }
    pf      = { -v38470+0x1[1] }
    ?3      = { v38386[1] }
    af      = { -v38477+0x1[1] }
    ?5      = { v38388[1] }
    zf      = { v38475[1] }
    sf      = { v38473[1] }
    tf      = { v38391[1] }
    if      = { v38392[1] }
    df      = { v38393[1] }
    of      = { v38487[1] }
    iopl0   = { v38395[1] }
    iopl1   = { v38396[1] }
    nt      = { v38397[1] }
    ?15     = { v38398[1] }
    rf      = { v38399[1] }
    vm      = { v38400[1] }
    ac      = { v38401[1] }
    vif     = { v38402[1] }
    vip     = { v38403[1] }
    id      = { v38404[1] }
    ?22     = { v38405[1] }
    ?23     = { v38406[1] }
    ?24     = { v38407[1] }
    ?25     = { v38408[1] }
    ?26     = { v38409[1] }
    ?27     = { v38410[1] }
    ?28     = { v38411[1] }
    ?29     = { v38412[1] }
    ?30     = { v38413[1] }
    ?31     = { v38414[1] }
    ip      = { v38369[32] }
memory:
    address = { v38373-0x4[32] }
      value = { 0x80485a5[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v10267[32] }
    cx      = { defs={} expr=v10268[32] }
    dx      = { defs={} expr=v10269[32] }
    bx      = { defs={0x080485a0} expr=(add[32] v10270[32] -4[32]) }
    sp      = { defs={0x080485a3} expr=(add[32] v10271[32] -4[32]) }
    bp      = { defs={} expr=v10272[32] }
    si      = { defs={0x08048596} expr=v10273[32] }
    di      = { defs={0x08048599} expr=v10274[32] }
    es      = { defs={} expr=v10275[16] }
    cs      = { defs={} expr=v10276[16] }
    ss      = { defs={} expr=v10277[16] }
    ds      = { defs={} expr=v10278[16] }
    fs      = { defs={} expr=v10279[16] }
    gs      = { defs={} expr=v10280[16] }
    cf      = { defs={0x080485a0} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10270[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v10270[32]) 4294967292[33])))))) }
    ?1      = { defs={} expr=v10282[1] }
    pf      = { defs={0x080485a0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v10270[32] -4[32]))))))) }
    ?3      = { defs={} expr=v10284[1] }
    af      = { defs={0x080485a0} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10270[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v10270[32]) 4294967292[33])))))) }
    ?5      = { defs={} expr=v10286[1] }
    zf      = { defs={0x080485a0} expr=(zerop[1] (add[32] v10270[32] -4[32])) }
    sf      = { defs={0x080485a0} expr=(extract[1] 31[32] 32[32] (add[32] v10270[32] -4[32])) }
    tf      = { defs={} expr=v10289[1] }
    if      = { defs={} expr=v10290[1] }
    df      = { defs={} expr=v10291[1] }
    of      = { defs={0x080485a0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10270[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v10270[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10270[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v10270[32]) 4294967292[33])))))) }
    iopl0   = { defs={} expr=v10293[1] }
    iopl1   = { defs={} expr=v10294[1] }
    nt      = { defs={} expr=v10295[1] }
    ?15     = { defs={} expr=v10296[1] }
    rf      = { defs={} expr=v10297[1] }
    vm      = { defs={} expr=v10298[1] }
    ac      = { defs={} expr=v10299[1] }
    vif     = { defs={} expr=v10300[1] }
    vip     = { defs={} expr=v10301[1] }
    id      = { defs={} expr=v10302[1] }
    ?22     = { defs={} expr=v10303[1] }
    ?23     = { defs={} expr=v10304[1] }
    ?24     = { defs={} expr=v10305[1] }
    ?25     = { defs={} expr=v10306[1] }
    ?26     = { defs={} expr=v10307[1] }
    ?27     = { defs={} expr=v10308[1] }
    ?28     = { defs={} expr=v10309[1] }
    ?29     = { defs={} expr=v10310[1] }
    ?30     = { defs={} expr=v10311[1] }
    ?31     = { defs={} expr=v10312[1] }
    ip      = { defs={0x080485a3} expr=v10267[32] }
memory:
    address = { defs={0x080485a3} expr=(add[32] (add[32] v10271[32] -4[32]) 3[32]) }
      value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=8[8] }
      flags = { }
    address = { defs={0x080485a3} expr=(add[32] (add[32] v10271[32] -4[32]) 2[32]) }
      value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=4[8] }
      flags = { }
    address = { defs={0x080485a3} expr=(add[32] (add[32] v10271[32] -4[32]) 1[32]) }
      value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=-123[8] }
      flags = { }
    address = { defs={0x080485a3} expr=(add[32] v10271[32] -4[32]) }
      value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=-91[8] }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
registers:
    ax      = { v38600[32] }
    cx      = { v38548[32] }
    dx      = { v38549[32] }
    bx      = { v38550[32] }
    sp      = { v38551[32] }
    bp      = { v38552[32] }
    si      = { v38553[32] }
    di      = { v38554[32] }
    es      = { v38555[16] }
    cs      = { v38556[16] }
    ss      = { v38557[16] }
    ds      = { v38558[16] }
    fs      = { v38559[16] }
    gs      = { v38560[16] }
    cf      = { v38561[1] }
    ?1      = { v38562[1] }
    pf      = { v38563[1] }
    ?3      = { v38564[1] }
    af      = { v38565[1] }
    ?5      = { v38566[1] }
    zf      = { v38567[1] }
    sf      = { v38568[1] }
    tf      = { v38569[1] }
    if      = { v38570[1] }
    df      = { v38571[1] }
    of      = { v38572[1] }
    iopl0   = { v38573[1] }
    iopl1   = { v38574[1] }
    nt      = { v38575[1] }
    ?15     = { v38576[1] }
    rf      = { v38577[1] }
    vm      = { v38578[1] }
    ac      = { v38579[1] }
    vif     = { v38580[1] }
    vip     = { v38581[1] }
    id      = { v38582[1] }
    ?22     = { v38583[1] }
    ?23     = { v38584[1] }
    ?24     = { v38585[1] }
    ?25     = { v38586[1] }
    ?26     = { v38587[1] }
    ?27     = { v38588[1] }
    ?28     = { v38589[1] }
    ?29     = { v38590[1] }
    ?30     = { v38591[1] }
    ?31     = { v38592[1] }
    ip      = { 0x80485a7[32] }
memory:
    address = { v38550[32] }
      value = { v38600[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485a5} expr=v10566[32] }
    cx      = { defs={} expr=v10509[32] }
    dx      = { defs={} expr=v10510[32] }
    bx      = { defs={} expr=v10511[32] }
    sp      = { defs={} expr=v10512[32] }
    bp      = { defs={} expr=v10513[32] }
    si      = { defs={} expr=v10514[32] }
    di      = { defs={} expr=v10515[32] }
    es      = { defs={} expr=v10516[16] }
    cs      = { defs={} expr=v10517[16] }
    ss      = { defs={} expr=v10518[16] }
    ds      = { defs={} expr=v10519[16] }
    fs      = { defs={} expr=v10520[16] }
    gs      = { defs={} expr=v10521[16] }
    cf      = { defs={} expr=v10522[1] }
    ?1      = { defs={} expr=v10523[1] }
    pf      = { defs={} expr=v10524[1] }
    ?3      = { defs={} expr=v10525[1] }
    af      = { defs={} expr=v10526[1] }
    ?5      = { defs={} expr=v10527[1] }
    zf      = { defs={} expr=v10528[1] }
    sf      = { defs={} expr=v10529[1] }
    tf      = { defs={} expr=v10530[1] }
    if      = { defs={} expr=v10531[1] }
    df      = { defs={} expr=v10532[1] }
    of      = { defs={} expr=v10533[1] }
    iopl0   = { defs={} expr=v10534[1] }
    iopl1   = { defs={} expr=v10535[1] }
    nt      = { defs={} expr=v10536[1] }
    ?15     = { defs={} expr=v10537[1] }
    rf      = { defs={} expr=v10538[1] }
    vm      = { defs={} expr=v10539[1] }
    ac      = { defs={} expr=v10540[1] }
    vif     = { defs={} expr=v10541[1] }
    vip     = { defs={} expr=v10542[1] }
    id      = { defs={} expr=v10543[1] }
    ?22     = { defs={} expr=v10544[1] }
    ?23     = { defs={} expr=v10545[1] }
    ?24     = { defs={} expr=v10546[1] }
    ?25     = { defs={} expr=v10547[1] }
    ?26     = { defs={} expr=v10548[1] }
    ?27     = { defs={} expr=v10549[1] }
    ?28     = { defs={} expr=v10550[1] }
    ?29     = { defs={} expr=v10551[1] }
    ?30     = { defs={} expr=v10552[1] }
    ?31     = { defs={} expr=v10553[1] }
    ip      = { defs={0x080485a5} expr=0x080485a7[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v10511[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10511[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10511[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=v10511[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10566[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485a7[32] }
memory:
null state
0x80485a7:cmp    eax, 0xff<-0x01>
registers:
    ax      = { v38600[32] }
    cx      = { v38548[32] }
    dx      = { v38549[32] }
    bx      = { v38550[32] }
    sp      = { v38551[32] }
    bp      = { v38552[32] }
    si      = { v38553[32] }
    di      = { v38554[32] }
    es      = { v38555[16] }
    cs      = { v38556[16] }
    ss      = { v38557[16] }
    ds      = { v38558[16] }
    fs      = { v38559[16] }
    gs      = { v38560[16] }
    cf      = { -v38652+0x1[1] }
    ?1      = { v38562[1] }
    pf      = { -v38642+0x1[1] }
    ?3      = { v38564[1] }
    af      = { -v38649+0x1[1] }
    ?5      = { v38566[1] }
    zf      = { v38647[1] }
    sf      = { v38645[1] }
    tf      = { v38569[1] }
    if      = { v38570[1] }
    df      = { v38571[1] }
    of      = { v38659[1] }
    iopl0   = { v38573[1] }
    iopl1   = { v38574[1] }
    nt      = { v38575[1] }
    ?15     = { v38576[1] }
    rf      = { v38577[1] }
    vm      = { v38578[1] }
    ac      = { v38579[1] }
    vif     = { v38580[1] }
    vip     = { v38581[1] }
    id      = { v38582[1] }
    ?22     = { v38583[1] }
    ?23     = { v38584[1] }
    ?24     = { v38585[1] }
    ?25     = { v38586[1] }
    ?26     = { v38587[1] }
    ?27     = { v38588[1] }
    ?28     = { v38589[1] }
    ?29     = { v38590[1] }
    ?30     = { v38591[1] }
    ?31     = { v38592[1] }
    ip      = { 0x80485aa[32] }
memory:
    address = { v38550[32] }
      value = { v38600[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485a5} expr=v10566[32] }
    cx      = { defs={} expr=v10509[32] }
    dx      = { defs={} expr=v10510[32] }
    bx      = { defs={} expr=v10511[32] }
    sp      = { defs={} expr=v10512[32] }
    bp      = { defs={} expr=v10513[32] }
    si      = { defs={} expr=v10514[32] }
    di      = { defs={} expr=v10515[32] }
    es      = { defs={} expr=v10516[16] }
    cs      = { defs={} expr=v10517[16] }
    ss      = { defs={} expr=v10518[16] }
    ds      = { defs={} expr=v10519[16] }
    fs      = { defs={} expr=v10520[16] }
    gs      = { defs={} expr=v10521[16] }
    cf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10566[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10566[32]) 1[33])))))) }
    ?1      = { defs={} expr=v10523[1] }
    pf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))))))) }
    ?3      = { defs={} expr=v10525[1] }
    af      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10566[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10566[32]) 1[33])))))) }
    ?5      = { defs={} expr=v10527[1] }
    zf      = { defs={0x080485a5,0x080485a7} expr=(zerop[1] (add[32] v10566[32] 1[32])) }
    sf      = { defs={0x080485a5,0x080485a7} expr=(extract[1] 31[32] 32[32] (add[32] v10566[32] 1[32])) }
    tf      = { defs={} expr=v10530[1] }
    if      = { defs={} expr=v10531[1] }
    df      = { defs={} expr=v10532[1] }
    of      = { defs={0x080485a5,0x080485a7} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10566[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10566[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10566[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10566[32]) 1[33])))))) }
    iopl0   = { defs={} expr=v10534[1] }
    iopl1   = { defs={} expr=v10535[1] }
    nt      = { defs={} expr=v10536[1] }
    ?15     = { defs={} expr=v10537[1] }
    rf      = { defs={} expr=v10538[1] }
    vm      = { defs={} expr=v10539[1] }
    ac      = { defs={} expr=v10540[1] }
    vif     = { defs={} expr=v10541[1] }
    vip     = { defs={} expr=v10542[1] }
    id      = { defs={} expr=v10543[1] }
    ?22     = { defs={} expr=v10544[1] }
    ?23     = { defs={} expr=v10545[1] }
    ?24     = { defs={} expr=v10546[1] }
    ?25     = { defs={} expr=v10547[1] }
    ?26     = { defs={} expr=v10548[1] }
    ?27     = { defs={} expr=v10549[1] }
    ?28     = { defs={} expr=v10550[1] }
    ?29     = { defs={} expr=v10551[1] }
    ?30     = { defs={} expr=v10552[1] }
    ?31     = { defs={} expr=v10553[1] }
    ip      = { defs={0x080485a5,0x080485a7} expr=0x080485aa[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v10511[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10511[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10511[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=v10511[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10566[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485aa[32] }
memory:
null state
0x80485aa:jne    0x080485a0<<Insn>>
registers:
    ax      = { v38600[32] }
    cx      = { v38548[32] }
    dx      = { v38549[32] }
    bx      = { v38550[32] }
    sp      = { v38551[32] }
    bp      = { v38552[32] }
    si      = { v38553[32] }
    di      = { v38554[32] }
    es      = { v38555[16] }
    cs      = { v38556[16] }
    ss      = { v38557[16] }
    ds      = { v38558[16] }
    fs      = { v38559[16] }
    gs      = { v38560[16] }
    cf      = { -v38652+0x1[1] }
    ?1      = { v38562[1] }
    pf      = { -v38642+0x1[1] }
    ?3      = { v38564[1] }
    af      = { -v38649+0x1[1] }
    ?5      = { v38566[1] }
    zf      = { v38647[1] }
    sf      = { v38645[1] }
    tf      = { v38569[1] }
    if      = { v38570[1] }
    df      = { v38571[1] }
    of      = { v38659[1] }
    iopl0   = { v38573[1] }
    iopl1   = { v38574[1] }
    nt      = { v38575[1] }
    ?15     = { v38576[1] }
    rf      = { v38577[1] }
    vm      = { v38578[1] }
    ac      = { v38579[1] }
    vif     = { v38580[1] }
    vip     = { v38581[1] }
    id      = { v38582[1] }
    ?22     = { v38583[1] }
    ?23     = { v38584[1] }
    ?24     = { v38585[1] }
    ?25     = { v38586[1] }
    ?26     = { v38587[1] }
    ?27     = { v38588[1] }
    ?28     = { v38589[1] }
    ?29     = { v38590[1] }
    ?30     = { v38591[1] }
    ?31     = { v38592[1] }
    ip      = { v38669[32] }
memory:
    address = { v38550[32] }
      value = { v38600[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485a5} expr=v10566[32] }
    cx      = { defs={} expr=v10509[32] }
    dx      = { defs={} expr=v10510[32] }
    bx      = { defs={} expr=v10511[32] }
    sp      = { defs={} expr=v10512[32] }
    bp      = { defs={} expr=v10513[32] }
    si      = { defs={} expr=v10514[32] }
    di      = { defs={} expr=v10515[32] }
    es      = { defs={} expr=v10516[16] }
    cs      = { defs={} expr=v10517[16] }
    ss      = { defs={} expr=v10518[16] }
    ds      = { defs={} expr=v10519[16] }
    fs      = { defs={} expr=v10520[16] }
    gs      = { defs={} expr=v10521[16] }
    cf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10566[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10566[32]) 1[33])))))) }
    ?1      = { defs={} expr=v10523[1] }
    pf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v10566[32] 1[32]))))))) }
    ?3      = { defs={} expr=v10525[1] }
    af      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10566[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10566[32]) 1[33])))))) }
    ?5      = { defs={} expr=v10527[1] }
    zf      = { defs={0x080485a5,0x080485a7} expr=(zerop[1] (add[32] v10566[32] 1[32])) }
    sf      = { defs={0x080485a5,0x080485a7} expr=(extract[1] 31[32] 32[32] (add[32] v10566[32] 1[32])) }
    tf      = { defs={} expr=v10530[1] }
    if      = { defs={} expr=v10531[1] }
    df      = { defs={} expr=v10532[1] }
    of      = { defs={0x080485a5,0x080485a7} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10566[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10566[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v10566[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v10566[32]) 1[33])))))) }
    iopl0   = { defs={} expr=v10534[1] }
    iopl1   = { defs={} expr=v10535[1] }
    nt      = { defs={} expr=v10536[1] }
    ?15     = { defs={} expr=v10537[1] }
    rf      = { defs={} expr=v10538[1] }
    vm      = { defs={} expr=v10539[1] }
    ac      = { defs={} expr=v10540[1] }
    vif     = { defs={} expr=v10541[1] }
    vip     = { defs={} expr=v10542[1] }
    id      = { defs={} expr=v10543[1] }
    ?22     = { defs={} expr=v10544[1] }
    ?23     = { defs={} expr=v10545[1] }
    ?24     = { defs={} expr=v10546[1] }
    ?25     = { defs={} expr=v10547[1] }
    ?26     = { defs={} expr=v10548[1] }
    ?27     = { defs={} expr=v10549[1] }
    ?28     = { defs={} expr=v10550[1] }
    ?29     = { defs={} expr=v10551[1] }
    ?30     = { defs={} expr=v10552[1] }
    ?31     = { defs={} expr=v10553[1] }
    ip      = { defs={0x080485a5,0x080485a7,0x080485aa} expr=(ite[32] (invert[1] (zerop[1] (add[32] v10566[32] 1[32]))) 0x080485a0[32] 0x080485ac[32]) }
memory:
init mem:
    address = { defs={} expr=(add[32] v10511[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10511[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10511[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10566[32]) }
      flags = { rdonly }
    address = { defs={} expr=v10511[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10566[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485a0, 0x080485ac[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
registers:
    ax      = { v38774[32] }
    cx      = { v38720[32] }
    dx      = { v38721[32] }
    bx      = { v38722[32] }
    sp      = { v38723+0x4[32] }
    bp      = { v38724[32] }
    si      = { v38725[32] }
    di      = { v38726[32] }
    es      = { v38727[16] }
    cs      = { v38728[16] }
    ss      = { v38729[16] }
    ds      = { v38730[16] }
    fs      = { v38731[16] }
    gs      = { v38732[16] }
    cf      = { v38733[1] }
    ?1      = { v38734[1] }
    pf      = { v38735[1] }
    ?3      = { v38736[1] }
    af      = { v38737[1] }
    ?5      = { v38738[1] }
    zf      = { v38739[1] }
    sf      = { v38740[1] }
    tf      = { v38741[1] }
    if      = { v38742[1] }
    df      = { v38743[1] }
    of      = { v38744[1] }
    iopl0   = { v38745[1] }
    iopl1   = { v38746[1] }
    nt      = { v38747[1] }
    ?15     = { v38748[1] }
    rf      = { v38749[1] }
    vm      = { v38750[1] }
    ac      = { v38751[1] }
    vif     = { v38752[1] }
    vip     = { v38753[1] }
    id      = { v38754[1] }
    ?22     = { v38755[1] }
    ?23     = { v38756[1] }
    ?24     = { v38757[1] }
    ?25     = { v38758[1] }
    ?26     = { v38759[1] }
    ?27     = { v38760[1] }
    ?28     = { v38761[1] }
    ?29     = { v38762[1] }
    ?30     = { v38763[1] }
    ?31     = { v38764[1] }
    ip      = { 0x80485ad[32] }
memory:
    address = { v38723[32] }
      value = { v38774[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485ac} expr=v10797[32] }
    cx      = { defs={} expr=v10736[32] }
    dx      = { defs={} expr=v10737[32] }
    bx      = { defs={} expr=v10738[32] }
    sp      = { defs={0x080485ac} expr=(add[32] v10739[32] 4[32]) }
    bp      = { defs={} expr=v10740[32] }
    si      = { defs={} expr=v10741[32] }
    di      = { defs={} expr=v10742[32] }
    es      = { defs={} expr=v10743[16] }
    cs      = { defs={} expr=v10744[16] }
    ss      = { defs={} expr=v10745[16] }
    ds      = { defs={} expr=v10746[16] }
    fs      = { defs={} expr=v10747[16] }
    gs      = { defs={} expr=v10748[16] }
    cf      = { defs={} expr=v10749[1] }
    ?1      = { defs={} expr=v10750[1] }
    pf      = { defs={} expr=v10751[1] }
    ?3      = { defs={} expr=v10752[1] }
    af      = { defs={} expr=v10753[1] }
    ?5      = { defs={} expr=v10754[1] }
    zf      = { defs={} expr=v10755[1] }
    sf      = { defs={} expr=v10756[1] }
    tf      = { defs={} expr=v10757[1] }
    if      = { defs={} expr=v10758[1] }
    df      = { defs={} expr=v10759[1] }
    of      = { defs={} expr=v10760[1] }
    iopl0   = { defs={} expr=v10761[1] }
    iopl1   = { defs={} expr=v10762[1] }
    nt      = { defs={} expr=v10763[1] }
    ?15     = { defs={} expr=v10764[1] }
    rf      = { defs={} expr=v10765[1] }
    vm      = { defs={} expr=v10766[1] }
    ac      = { defs={} expr=v10767[1] }
    vif     = { defs={} expr=v10768[1] }
    vip     = { defs={} expr=v10769[1] }
    id      = { defs={} expr=v10770[1] }
    ?22     = { defs={} expr=v10771[1] }
    ?23     = { defs={} expr=v10772[1] }
    ?24     = { defs={} expr=v10773[1] }
    ?25     = { defs={} expr=v10774[1] }
    ?26     = { defs={} expr=v10775[1] }
    ?27     = { defs={} expr=v10776[1] }
    ?28     = { defs={} expr=v10777[1] }
    ?29     = { defs={} expr=v10778[1] }
    ?30     = { defs={} expr=v10779[1] }
    ?31     = { defs={} expr=v10780[1] }
    ip      = { defs={0x080485ac} expr=0x080485ad[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v10739[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=v10739[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10797[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485ad[32] }
memory:
null state
0x80485ad:pop    ebx
registers:
    ax      = { v38774[32] }
    cx      = { v38720[32] }
    dx      = { v38721[32] }
    bx      = { v38784[32] }
    sp      = { v38723+0x8[32] }
    bp      = { v38724[32] }
    si      = { v38725[32] }
    di      = { v38726[32] }
    es      = { v38727[16] }
    cs      = { v38728[16] }
    ss      = { v38729[16] }
    ds      = { v38730[16] }
    fs      = { v38731[16] }
    gs      = { v38732[16] }
    cf      = { v38733[1] }
    ?1      = { v38734[1] }
    pf      = { v38735[1] }
    ?3      = { v38736[1] }
    af      = { v38737[1] }
    ?5      = { v38738[1] }
    zf      = { v38739[1] }
    sf      = { v38740[1] }
    tf      = { v38741[1] }
    if      = { v38742[1] }
    df      = { v38743[1] }
    of      = { v38744[1] }
    iopl0   = { v38745[1] }
    iopl1   = { v38746[1] }
    nt      = { v38747[1] }
    ?15     = { v38748[1] }
    rf      = { v38749[1] }
    vm      = { v38750[1] }
    ac      = { v38751[1] }
    vif     = { v38752[1] }
    vip     = { v38753[1] }
    id      = { v38754[1] }
    ?22     = { v38755[1] }
    ?23     = { v38756[1] }
    ?24     = { v38757[1] }
    ?25     = { v38758[1] }
    ?26     = { v38759[1] }
    ?27     = { v38760[1] }
    ?28     = { v38761[1] }
    ?29     = { v38762[1] }
    ?30     = { v38763[1] }
    ?31     = { v38764[1] }
    ip      = { 0x80485ae[32] }
memory:
    address = { v38723[32] }
      value = { v38774[32] }
      flags = { size=4; read-only }
    address = { v38723+0x4[32] }
      value = { v38784[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485ac} expr=v10797[32] }
    cx      = { defs={} expr=v10736[32] }
    dx      = { defs={} expr=v10737[32] }
    bx      = { defs={0x080485ad} expr=v10825[32] }
    sp      = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v10739[32] 4[32]) 4[32]) }
    bp      = { defs={} expr=v10740[32] }
    si      = { defs={} expr=v10741[32] }
    di      = { defs={} expr=v10742[32] }
    es      = { defs={} expr=v10743[16] }
    cs      = { defs={} expr=v10744[16] }
    ss      = { defs={} expr=v10745[16] }
    ds      = { defs={} expr=v10746[16] }
    fs      = { defs={} expr=v10747[16] }
    gs      = { defs={} expr=v10748[16] }
    cf      = { defs={} expr=v10749[1] }
    ?1      = { defs={} expr=v10750[1] }
    pf      = { defs={} expr=v10751[1] }
    ?3      = { defs={} expr=v10752[1] }
    af      = { defs={} expr=v10753[1] }
    ?5      = { defs={} expr=v10754[1] }
    zf      = { defs={} expr=v10755[1] }
    sf      = { defs={} expr=v10756[1] }
    tf      = { defs={} expr=v10757[1] }
    if      = { defs={} expr=v10758[1] }
    df      = { defs={} expr=v10759[1] }
    of      = { defs={} expr=v10760[1] }
    iopl0   = { defs={} expr=v10761[1] }
    iopl1   = { defs={} expr=v10762[1] }
    nt      = { defs={} expr=v10763[1] }
    ?15     = { defs={} expr=v10764[1] }
    rf      = { defs={} expr=v10765[1] }
    vm      = { defs={} expr=v10766[1] }
    ac      = { defs={} expr=v10767[1] }
    vif     = { defs={} expr=v10768[1] }
    vip     = { defs={} expr=v10769[1] }
    id      = { defs={} expr=v10770[1] }
    ?22     = { defs={} expr=v10771[1] }
    ?23     = { defs={} expr=v10772[1] }
    ?24     = { defs={} expr=v10773[1] }
    ?25     = { defs={} expr=v10774[1] }
    ?26     = { defs={} expr=v10775[1] }
    ?27     = { defs={} expr=v10776[1] }
    ?28     = { defs={} expr=v10777[1] }
    ?29     = { defs={} expr=v10778[1] }
    ?30     = { defs={} expr=v10779[1] }
    ?31     = { defs={} expr=v10780[1] }
    ip      = { defs={0x080485ac,0x080485ad} expr=0x080485ae[32] }
memory:
init mem:
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] v10739[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=v10739[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10797[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485ae[32] }
memory:
null state
0x80485ae:pop    ebp
registers:
    ax      = { v38774[32] }
    cx      = { v38720[32] }
    dx      = { v38721[32] }
    bx      = { v38784[32] }
    sp      = { v38723+0xc[32] }
    bp      = { v38794[32] }
    si      = { v38725[32] }
    di      = { v38726[32] }
    es      = { v38727[16] }
    cs      = { v38728[16] }
    ss      = { v38729[16] }
    ds      = { v38730[16] }
    fs      = { v38731[16] }
    gs      = { v38732[16] }
    cf      = { v38733[1] }
    ?1      = { v38734[1] }
    pf      = { v38735[1] }
    ?3      = { v38736[1] }
    af      = { v38737[1] }
    ?5      = { v38738[1] }
    zf      = { v38739[1] }
    sf      = { v38740[1] }
    tf      = { v38741[1] }
    if      = { v38742[1] }
    df      = { v38743[1] }
    of      = { v38744[1] }
    iopl0   = { v38745[1] }
    iopl1   = { v38746[1] }
    nt      = { v38747[1] }
    ?15     = { v38748[1] }
    rf      = { v38749[1] }
    vm      = { v38750[1] }
    ac      = { v38751[1] }
    vif     = { v38752[1] }
    vip     = { v38753[1] }
    id      = { v38754[1] }
    ?22     = { v38755[1] }
    ?23     = { v38756[1] }
    ?24     = { v38757[1] }
    ?25     = { v38758[1] }
    ?26     = { v38759[1] }
    ?27     = { v38760[1] }
    ?28     = { v38761[1] }
    ?29     = { v38762[1] }
    ?30     = { v38763[1] }
    ?31     = { v38764[1] }
    ip      = { 0x80485af[32] }
memory:
    address = { v38723[32] }
      value = { v38774[32] }
      flags = { size=4; read-only }
    address = { v38723+0x4[32] }
      value = { v38784[32] }
      flags = { size=4; read-only }
    address = { v38723+0x8[32] }
      value = { v38794[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485ac} expr=v10797[32] }
    cx      = { defs={} expr=v10736[32] }
    dx      = { defs={} expr=v10737[32] }
    bx      = { defs={0x080485ad} expr=v10825[32] }
    sp      = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 4[32]) }
    bp      = { defs={0x080485ae} expr=v10853[32] }
    si      = { defs={} expr=v10741[32] }
    di      = { defs={} expr=v10742[32] }
    es      = { defs={} expr=v10743[16] }
    cs      = { defs={} expr=v10744[16] }
    ss      = { defs={} expr=v10745[16] }
    ds      = { defs={} expr=v10746[16] }
    fs      = { defs={} expr=v10747[16] }
    gs      = { defs={} expr=v10748[16] }
    cf      = { defs={} expr=v10749[1] }
    ?1      = { defs={} expr=v10750[1] }
    pf      = { defs={} expr=v10751[1] }
    ?3      = { defs={} expr=v10752[1] }
    af      = { defs={} expr=v10753[1] }
    ?5      = { defs={} expr=v10754[1] }
    zf      = { defs={} expr=v10755[1] }
    sf      = { defs={} expr=v10756[1] }
    tf      = { defs={} expr=v10757[1] }
    if      = { defs={} expr=v10758[1] }
    df      = { defs={} expr=v10759[1] }
    of      = { defs={} expr=v10760[1] }
    iopl0   = { defs={} expr=v10761[1] }
    iopl1   = { defs={} expr=v10762[1] }
    nt      = { defs={} expr=v10763[1] }
    ?15     = { defs={} expr=v10764[1] }
    rf      = { defs={} expr=v10765[1] }
    vm      = { defs={} expr=v10766[1] }
    ac      = { defs={} expr=v10767[1] }
    vif     = { defs={} expr=v10768[1] }
    vip     = { defs={} expr=v10769[1] }
    id      = { defs={} expr=v10770[1] }
    ?22     = { defs={} expr=v10771[1] }
    ?23     = { defs={} expr=v10772[1] }
    ?24     = { defs={} expr=v10773[1] }
    ?25     = { defs={} expr=v10774[1] }
    ?26     = { defs={} expr=v10775[1] }
    ?27     = { defs={} expr=v10776[1] }
    ?28     = { defs={} expr=v10777[1] }
    ?29     = { defs={} expr=v10778[1] }
    ?30     = { defs={} expr=v10779[1] }
    ?31     = { defs={} expr=v10780[1] }
    ip      = { defs={0x080485ac,0x080485ad,0x080485ae} expr=0x080485af[32] }
memory:
init mem:
    address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10853[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10853[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10853[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v10739[32] 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10853[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] v10739[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=v10739[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10797[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485af[32] }
memory:
null state
0x80485af:ret    
registers:
    ax      = { v38774[32] }
    cx      = { v38720[32] }
    dx      = { v38721[32] }
    bx      = { v38784[32] }
    sp      = { v38723+0x10[32] }
    bp      = { v38794[32] }
    si      = { v38725[32] }
    di      = { v38726[32] }
    es      = { v38727[16] }
    cs      = { v38728[16] }
    ss      = { v38729[16] }
    ds      = { v38730[16] }
    fs      = { v38731[16] }
    gs      = { v38732[16] }
    cf      = { v38733[1] }
    ?1      = { v38734[1] }
    pf      = { v38735[1] }
    ?3      = { v38736[1] }
    af      = { v38737[1] }
    ?5      = { v38738[1] }
    zf      = { v38739[1] }
    sf      = { v38740[1] }
    tf      = { v38741[1] }
    if      = { v38742[1] }
    df      = { v38743[1] }
    of      = { v38744[1] }
    iopl0   = { v38745[1] }
    iopl1   = { v38746[1] }
    nt      = { v38747[1] }
    ?15     = { v38748[1] }
    rf      = { v38749[1] }
    vm      = { v38750[1] }
    ac      = { v38751[1] }
    vif     = { v38752[1] }
    vip     = { v38753[1] }
    id      = { v38754[1] }
    ?22     = { v38755[1] }
    ?23     = { v38756[1] }
    ?24     = { v38757[1] }
    ?25     = { v38758[1] }
    ?26     = { v38759[1] }
    ?27     = { v38760[1] }
    ?28     = { v38761[1] }
    ?29     = { v38762[1] }
    ?30     = { v38763[1] }
    ?31     = { v38764[1] }
    ip      = { v38806[32] }
memory:
    address = { v38723[32] }
      value = { v38774[32] }
      flags = { size=4; read-only }
    address = { v38723+0x4[32] }
      value = { v38784[32] }
      flags = { size=4; read-only }
    address = { v38723+0x8[32] }
      value = { v38794[32] }
      flags = { size=4; read-only }
    address = { v38723+0xc[32] }
      value = { v38806[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485ac} expr=v10797[32] }
    cx      = { defs={} expr=v10736[32] }
    dx      = { defs={} expr=v10737[32] }
    bx      = { defs={0x080485ad} expr=v10825[32] }
    sp      = { defs={0x080485ac,0x080485ad,0x080485ae,0x080485af} expr=(add[32] (add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 4[32]) 4[32]) }
    bp      = { defs={0x080485ae} expr=v10853[32] }
    si      = { defs={} expr=v10741[32] }
    di      = { defs={} expr=v10742[32] }
    es      = { defs={} expr=v10743[16] }
    cs      = { defs={} expr=v10744[16] }
    ss      = { defs={} expr=v10745[16] }
    ds      = { defs={} expr=v10746[16] }
    fs      = { defs={} expr=v10747[16] }
    gs      = { defs={} expr=v10748[16] }
    cf      = { defs={} expr=v10749[1] }
    ?1      = { defs={} expr=v10750[1] }
    pf      = { defs={} expr=v10751[1] }
    ?3      = { defs={} expr=v10752[1] }
    af      = { defs={} expr=v10753[1] }
    ?5      = { defs={} expr=v10754[1] }
    zf      = { defs={} expr=v10755[1] }
    sf      = { defs={} expr=v10756[1] }
    tf      = { defs={} expr=v10757[1] }
    if      = { defs={} expr=v10758[1] }
    df      = { defs={} expr=v10759[1] }
    of      = { defs={} expr=v10760[1] }
    iopl0   = { defs={} expr=v10761[1] }
    iopl1   = { defs={} expr=v10762[1] }
    nt      = { defs={} expr=v10763[1] }
    ?15     = { defs={} expr=v10764[1] }
    rf      = { defs={} expr=v10765[1] }
    vm      = { defs={} expr=v10766[1] }
    ac      = { defs={} expr=v10767[1] }
    vif     = { defs={} expr=v10768[1] }
    vip     = { defs={} expr=v10769[1] }
    id      = { defs={} expr=v10770[1] }
    ?22     = { defs={} expr=v10771[1] }
    ?23     = { defs={} expr=v10772[1] }
    ?24     = { defs={} expr=v10773[1] }
    ?25     = { defs={} expr=v10774[1] }
    ?26     = { defs={} expr=v10775[1] }
    ?27     = { defs={} expr=v10776[1] }
    ?28     = { defs={} expr=v10777[1] }
    ?29     = { defs={} expr=v10778[1] }
    ?30     = { defs={} expr=v10779[1] }
    ?31     = { defs={} expr=v10780[1] }
    ip      = { defs={0x080485af} expr=v10883[32] }
memory:
init mem:
    address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10883[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10883[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10883[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10883[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10853[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10853[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] (add[32] v10739[32] 4[32]) 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10853[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v10739[32] 4[32]) 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10853[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] (add[32] v10739[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={0x080485ac} expr=(add[32] v10739[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10825[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v10739[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v10797[32]) }
      flags = { rdonly }
    address = { defs={} expr=v10739[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v10797[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
registers:
    ax      = { v38857[32] }
    cx      = { v38858[32] }
    dx      = { v38859[32] }
    bx      = { v38860[32] }
    sp      = { v38861-0x4[32] }
    bp      = { v38862[32] }
    si      = { v38863[32] }
    di      = { v38864[32] }
    es      = { v38865[16] }
    cs      = { v38866[16] }
    ss      = { v38867[16] }
    ds      = { v38868[16] }
    fs      = { v38869[16] }
    gs      = { v38870[16] }
    cf      = { v38871[1] }
    ?1      = { v38872[1] }
    pf      = { v38873[1] }
    ?3      = { v38874[1] }
    af      = { v38875[1] }
    ?5      = { v38876[1] }
    zf      = { v38877[1] }
    sf      = { v38878[1] }
    tf      = { v38879[1] }
    if      = { v38880[1] }
    df      = { v38881[1] }
    of      = { v38882[1] }
    iopl0   = { v38883[1] }
    iopl1   = { v38884[1] }
    nt      = { v38885[1] }
    ?15     = { v38886[1] }
    rf      = { v38887[1] }
    vm      = { v38888[1] }
    ac      = { v38889[1] }
    vif     = { v38890[1] }
    vip     = { v38891[1] }
    id      = { v38892[1] }
    ?22     = { v38893[1] }
    ?23     = { v38894[1] }
    ?24     = { v38895[1] }
    ?25     = { v38896[1] }
    ?26     = { v38897[1] }
    ?27     = { v38898[1] }
    ?28     = { v38899[1] }
    ?29     = { v38900[1] }
    ?30     = { v38901[1] }
    ?31     = { v38902[1] }
    ip      = { 0x80485b1[32] }
memory:
    address = { v38861-0x4[32] }
      value = { v38862[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v10947[32] }
    cx      = { defs={} expr=v10948[32] }
    dx      = { defs={} expr=v10949[32] }
    bx      = { defs={} expr=v10950[32] }
    sp      = { defs={0x080485b0} expr=(add[32] v10951[32] -4[32]) }
    bp      = { defs={} expr=v10952[32] }
    si      = { defs={} expr=v10953[32] }
    di      = { defs={} expr=v10954[32] }
    es      = { defs={} expr=v10955[16] }
    cs      = { defs={} expr=v10956[16] }
    ss      = { defs={} expr=v10957[16] }
    ds      = { defs={} expr=v10958[16] }
    fs      = { defs={} expr=v10959[16] }
    gs      = { defs={} expr=v10960[16] }
    cf      = { defs={} expr=v10961[1] }
    ?1      = { defs={} expr=v10962[1] }
    pf      = { defs={} expr=v10963[1] }
    ?3      = { defs={} expr=v10964[1] }
    af      = { defs={} expr=v10965[1] }
    ?5      = { defs={} expr=v10966[1] }
    zf      = { defs={} expr=v10967[1] }
    sf      = { defs={} expr=v10968[1] }
    tf      = { defs={} expr=v10969[1] }
    if      = { defs={} expr=v10970[1] }
    df      = { defs={} expr=v10971[1] }
    of      = { defs={} expr=v10972[1] }
    iopl0   = { defs={} expr=v10973[1] }
    iopl1   = { defs={} expr=v10974[1] }
    nt      = { defs={} expr=v10975[1] }
    ?15     = { defs={} expr=v10976[1] }
    rf      = { defs={} expr=v10977[1] }
    vm      = { defs={} expr=v10978[1] }
    ac      = { defs={} expr=v10979[1] }
    vif     = { defs={} expr=v10980[1] }
    vip     = { defs={} expr=v10981[1] }
    id      = { defs={} expr=v10982[1] }
    ?22     = { defs={} expr=v10983[1] }
    ?23     = { defs={} expr=v10984[1] }
    ?24     = { defs={} expr=v10985[1] }
    ?25     = { defs={} expr=v10986[1] }
    ?26     = { defs={} expr=v10987[1] }
    ?27     = { defs={} expr=v10988[1] }
    ?28     = { defs={} expr=v10989[1] }
    ?29     = { defs={} expr=v10990[1] }
    ?30     = { defs={} expr=v10991[1] }
    ?31     = { defs={} expr=v10992[1] }
    ip      = { defs={0x080485b0} expr=0x080485b1[32] }
memory:
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 3[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 2[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 1[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] v10951[32] -4[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v10952[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b1[32] }
memory:
null state
0x80485b1:mov    ebp, esp
registers:
    ax      = { v38857[32] }
    cx      = { v38858[32] }
    dx      = { v38859[32] }
    bx      = { v38860[32] }
    sp      = { v38861-0x4[32] }
    bp      = { v38861-0x4[32] }
    si      = { v38863[32] }
    di      = { v38864[32] }
    es      = { v38865[16] }
    cs      = { v38866[16] }
    ss      = { v38867[16] }
    ds      = { v38868[16] }
    fs      = { v38869[16] }
    gs      = { v38870[16] }
    cf      = { v38871[1] }
    ?1      = { v38872[1] }
    pf      = { v38873[1] }
    ?3      = { v38874[1] }
    af      = { v38875[1] }
    ?5      = { v38876[1] }
    zf      = { v38877[1] }
    sf      = { v38878[1] }
    tf      = { v38879[1] }
    if      = { v38880[1] }
    df      = { v38881[1] }
    of      = { v38882[1] }
    iopl0   = { v38883[1] }
    iopl1   = { v38884[1] }
    nt      = { v38885[1] }
    ?15     = { v38886[1] }
    rf      = { v38887[1] }
    vm      = { v38888[1] }
    ac      = { v38889[1] }
    vif     = { v38890[1] }
    vip     = { v38891[1] }
    id      = { v38892[1] }
    ?22     = { v38893[1] }
    ?23     = { v38894[1] }
    ?24     = { v38895[1] }
    ?25     = { v38896[1] }
    ?26     = { v38897[1] }
    ?27     = { v38898[1] }
    ?28     = { v38899[1] }
    ?29     = { v38900[1] }
    ?30     = { v38901[1] }
    ?31     = { v38902[1] }
    ip      = { 0x80485b3[32] }
memory:
    address = { v38861-0x4[32] }
      value = { v38862[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v10947[32] }
    cx      = { defs={} expr=v10948[32] }
    dx      = { defs={} expr=v10949[32] }
    bx      = { defs={} expr=v10950[32] }
    sp      = { defs={0x080485b0} expr=(add[32] v10951[32] -4[32]) }
    bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v10951[32] -4[32]) }
    si      = { defs={} expr=v10953[32] }
    di      = { defs={} expr=v10954[32] }
    es      = { defs={} expr=v10955[16] }
    cs      = { defs={} expr=v10956[16] }
    ss      = { defs={} expr=v10957[16] }
    ds      = { defs={} expr=v10958[16] }
    fs      = { defs={} expr=v10959[16] }
    gs      = { defs={} expr=v10960[16] }
    cf      = { defs={} expr=v10961[1] }
    ?1      = { defs={} expr=v10962[1] }
    pf      = { defs={} expr=v10963[1] }
    ?3      = { defs={} expr=v10964[1] }
    af      = { defs={} expr=v10965[1] }
    ?5      = { defs={} expr=v10966[1] }
    zf      = { defs={} expr=v10967[1] }
    sf      = { defs={} expr=v10968[1] }
    tf      = { defs={} expr=v10969[1] }
    if      = { defs={} expr=v10970[1] }
    df      = { defs={} expr=v10971[1] }
    of      = { defs={} expr=v10972[1] }
    iopl0   = { defs={} expr=v10973[1] }
    iopl1   = { defs={} expr=v10974[1] }
    nt      = { defs={} expr=v10975[1] }
    ?15     = { defs={} expr=v10976[1] }
    rf      = { defs={} expr=v10977[1] }
    vm      = { defs={} expr=v10978[1] }
    ac      = { defs={} expr=v10979[1] }
    vif     = { defs={} expr=v10980[1] }
    vip     = { defs={} expr=v10981[1] }
    id      = { defs={} expr=v10982[1] }
    ?22     = { defs={} expr=v10983[1] }
    ?23     = { defs={} expr=v10984[1] }
    ?24     = { defs={} expr=v10985[1] }
    ?25     = { defs={} expr=v10986[1] }
    ?26     = { defs={} expr=v10987[1] }
    ?27     = { defs={} expr=v10988[1] }
    ?28     = { defs={} expr=v10989[1] }
    ?29     = { defs={} expr=v10990[1] }
    ?30     = { defs={} expr=v10991[1] }
    ?31     = { defs={} expr=v10992[1] }
    ip      = { defs={0x080485b0,0x080485b1} expr=0x080485b3[32] }
memory:
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 3[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 2[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 1[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] v10951[32] -4[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v10952[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b3[32] }
memory:
null state
0x80485b3:push   ebx
registers:
    ax      = { v38857[32] }
    cx      = { v38858[32] }
    dx      = { v38859[32] }
    bx      = { v38860[32] }
    sp      = { v38861-0x8[32] }
    bp      = { v38861-0x4[32] }
    si      = { v38863[32] }
    di      = { v38864[32] }
    es      = { v38865[16] }
    cs      = { v38866[16] }
    ss      = { v38867[16] }
    ds      = { v38868[16] }
    fs      = { v38869[16] }
    gs      = { v38870[16] }
    cf      = { v38871[1] }
    ?1      = { v38872[1] }
    pf      = { v38873[1] }
    ?3      = { v38874[1] }
    af      = { v38875[1] }
    ?5      = { v38876[1] }
    zf      = { v38877[1] }
    sf      = { v38878[1] }
    tf      = { v38879[1] }
    if      = { v38880[1] }
    df      = { v38881[1] }
    of      = { v38882[1] }
    iopl0   = { v38883[1] }
    iopl1   = { v38884[1] }
    nt      = { v38885[1] }
    ?15     = { v38886[1] }
    rf      = { v38887[1] }
    vm      = { v38888[1] }
    ac      = { v38889[1] }
    vif     = { v38890[1] }
    vip     = { v38891[1] }
    id      = { v38892[1] }
    ?22     = { v38893[1] }
    ?23     = { v38894[1] }
    ?24     = { v38895[1] }
    ?25     = { v38896[1] }
    ?26     = { v38897[1] }
    ?27     = { v38898[1] }
    ?28     = { v38899[1] }
    ?29     = { v38900[1] }
    ?30     = { v38901[1] }
    ?31     = { v38902[1] }
    ip      = { 0x80485b4[32] }
memory:
    address = { v38861-0x4[32] }
      value = { v38862[32] }
      flags = { size=4 }
    address = { v38861-0x8[32] }
      value = { v38860[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v10947[32] }
    cx      = { defs={} expr=v10948[32] }
    dx      = { defs={} expr=v10949[32] }
    bx      = { defs={} expr=v10950[32] }
    sp      = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v10951[32] -4[32]) -4[32]) }
    bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v10951[32] -4[32]) }
    si      = { defs={} expr=v10953[32] }
    di      = { defs={} expr=v10954[32] }
    es      = { defs={} expr=v10955[16] }
    cs      = { defs={} expr=v10956[16] }
    ss      = { defs={} expr=v10957[16] }
    ds      = { defs={} expr=v10958[16] }
    fs      = { defs={} expr=v10959[16] }
    gs      = { defs={} expr=v10960[16] }
    cf      = { defs={} expr=v10961[1] }
    ?1      = { defs={} expr=v10962[1] }
    pf      = { defs={} expr=v10963[1] }
    ?3      = { defs={} expr=v10964[1] }
    af      = { defs={} expr=v10965[1] }
    ?5      = { defs={} expr=v10966[1] }
    zf      = { defs={} expr=v10967[1] }
    sf      = { defs={} expr=v10968[1] }
    tf      = { defs={} expr=v10969[1] }
    if      = { defs={} expr=v10970[1] }
    df      = { defs={} expr=v10971[1] }
    of      = { defs={} expr=v10972[1] }
    iopl0   = { defs={} expr=v10973[1] }
    iopl1   = { defs={} expr=v10974[1] }
    nt      = { defs={} expr=v10975[1] }
    ?15     = { defs={} expr=v10976[1] }
    rf      = { defs={} expr=v10977[1] }
    vm      = { defs={} expr=v10978[1] }
    ac      = { defs={} expr=v10979[1] }
    vif     = { defs={} expr=v10980[1] }
    vip     = { defs={} expr=v10981[1] }
    id      = { defs={} expr=v10982[1] }
    ?22     = { defs={} expr=v10983[1] }
    ?23     = { defs={} expr=v10984[1] }
    ?24     = { defs={} expr=v10985[1] }
    ?25     = { defs={} expr=v10986[1] }
    ?26     = { defs={} expr=v10987[1] }
    ?27     = { defs={} expr=v10988[1] }
    ?28     = { defs={} expr=v10989[1] }
    ?29     = { defs={} expr=v10990[1] }
    ?30     = { defs={} expr=v10991[1] }
    ?31     = { defs={} expr=v10992[1] }
    ip      = { defs={0x080485b0,0x080485b1,0x080485b3} expr=0x080485b4[32] }
memory:
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 24[32] 32[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 16[32] 24[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 8[32] 16[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v10951[32] -4[32]) -4[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 0[32] 8[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 3[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 2[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 1[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] v10951[32] -4[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v10952[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b4[32] }
memory:
null state
0x80485b4:push   eax
registers:
    ax      = { v38857[32] }
    cx      = { v38858[32] }
    dx      = { v38859[32] }
    bx      = { v38860[32] }
    sp      = { v38861-0xc[32] }
    bp      = { v38861-0x4[32] }
    si      = { v38863[32] }
    di      = { v38864[32] }
    es      = { v38865[16] }
    cs      = { v38866[16] }
    ss      = { v38867[16] }
    ds      = { v38868[16] }
    fs      = { v38869[16] }
    gs      = { v38870[16] }
    cf      = { v38871[1] }
    ?1      = { v38872[1] }
    pf      = { v38873[1] }
    ?3      = { v38874[1] }
    af      = { v38875[1] }
    ?5      = { v38876[1] }
    zf      = { v38877[1] }
    sf      = { v38878[1] }
    tf      = { v38879[1] }
    if      = { v38880[1] }
    df      = { v38881[1] }
    of      = { v38882[1] }
    iopl0   = { v38883[1] }
    iopl1   = { v38884[1] }
    nt      = { v38885[1] }
    ?15     = { v38886[1] }
    rf      = { v38887[1] }
    vm      = { v38888[1] }
    ac      = { v38889[1] }
    vif     = { v38890[1] }
    vip     = { v38891[1] }
    id      = { v38892[1] }
    ?22     = { v38893[1] }
    ?23     = { v38894[1] }
    ?24     = { v38895[1] }
    ?25     = { v38896[1] }
    ?26     = { v38897[1] }
    ?27     = { v38898[1] }
    ?28     = { v38899[1] }
    ?29     = { v38900[1] }
    ?30     = { v38901[1] }
    ?31     = { v38902[1] }
    ip      = { 0x80485b5[32] }
memory:
    address = { v38861-0x4[32] }
      value = { v38862[32] }
      flags = { size=4 }
    address = { v38861-0x8[32] }
      value = { v38860[32] }
      flags = { size=4 }
    address = { v38861-0xc[32] }
      value = { v38857[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v10947[32] }
    cx      = { defs={} expr=v10948[32] }
    dx      = { defs={} expr=v10949[32] }
    bx      = { defs={} expr=v10950[32] }
    sp      = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v10951[32] -4[32]) }
    si      = { defs={} expr=v10953[32] }
    di      = { defs={} expr=v10954[32] }
    es      = { defs={} expr=v10955[16] }
    cs      = { defs={} expr=v10956[16] }
    ss      = { defs={} expr=v10957[16] }
    ds      = { defs={} expr=v10958[16] }
    fs      = { defs={} expr=v10959[16] }
    gs      = { defs={} expr=v10960[16] }
    cf      = { defs={} expr=v10961[1] }
    ?1      = { defs={} expr=v10962[1] }
    pf      = { defs={} expr=v10963[1] }
    ?3      = { defs={} expr=v10964[1] }
    af      = { defs={} expr=v10965[1] }
    ?5      = { defs={} expr=v10966[1] }
    zf      = { defs={} expr=v10967[1] }
    sf      = { defs={} expr=v10968[1] }
    tf      = { defs={} expr=v10969[1] }
    if      = { defs={} expr=v10970[1] }
    df      = { defs={} expr=v10971[1] }
    of      = { defs={} expr=v10972[1] }
    iopl0   = { defs={} expr=v10973[1] }
    iopl1   = { defs={} expr=v10974[1] }
    nt      = { defs={} expr=v10975[1] }
    ?15     = { defs={} expr=v10976[1] }
    rf      = { defs={} expr=v10977[1] }
    vm      = { defs={} expr=v10978[1] }
    ac      = { defs={} expr=v10979[1] }
    vif     = { defs={} expr=v10980[1] }
    vip     = { defs={} expr=v10981[1] }
    id      = { defs={} expr=v10982[1] }
    ?22     = { defs={} expr=v10983[1] }
    ?23     = { defs={} expr=v10984[1] }
    ?24     = { defs={} expr=v10985[1] }
    ?25     = { defs={} expr=v10986[1] }
    ?26     = { defs={} expr=v10987[1] }
    ?27     = { defs={} expr=v10988[1] }
    ?28     = { defs={} expr=v10989[1] }
    ?29     = { defs={} expr=v10990[1] }
    ?30     = { defs={} expr=v10991[1] }
    ?31     = { defs={} expr=v10992[1] }
    ip      = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4} expr=0x080485b5[32] }
memory:
    address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080485b4} expr=(extract[8] 24[32] 32[32] v10947[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080485b4} expr=(extract[8] 16[32] 24[32] v10947[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080485b4} expr=(extract[8] 8[32] 16[32] v10947[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080485b4} expr=(extract[8] 0[32] 8[32] v10947[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 24[32] 32[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 16[32] 24[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 8[32] 16[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v10951[32] -4[32]) -4[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 0[32] 8[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 3[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 2[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 1[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] v10951[32] -4[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v10952[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b5[32] }
memory:
null state
0x80485b5:call   0x080485ba<<Insn>>
registers:
    ax      = { v38857[32] }
    cx      = { v38858[32] }
    dx      = { v38859[32] }
    bx      = { v38860[32] }
    sp      = { v38861-0x10[32] }
    bp      = { v38861-0x4[32] }
    si      = { v38863[32] }
    di      = { v38864[32] }
    es      = { v38865[16] }
    cs      = { v38866[16] }
    ss      = { v38867[16] }
    ds      = { v38868[16] }
    fs      = { v38869[16] }
    gs      = { v38870[16] }
    cf      = { v38871[1] }
    ?1      = { v38872[1] }
    pf      = { v38873[1] }
    ?3      = { v38874[1] }
    af      = { v38875[1] }
    ?5      = { v38876[1] }
    zf      = { v38877[1] }
    sf      = { v38878[1] }
    tf      = { v38879[1] }
    if      = { v38880[1] }
    df      = { v38881[1] }
    of      = { v38882[1] }
    iopl0   = { v38883[1] }
    iopl1   = { v38884[1] }
    nt      = { v38885[1] }
    ?15     = { v38886[1] }
    rf      = { v38887[1] }
    vm      = { v38888[1] }
    ac      = { v38889[1] }
    vif     = { v38890[1] }
    vip     = { v38891[1] }
    id      = { v38892[1] }
    ?22     = { v38893[1] }
    ?23     = { v38894[1] }
    ?24     = { v38895[1] }
    ?25     = { v38896[1] }
    ?26     = { v38897[1] }
    ?27     = { v38898[1] }
    ?28     = { v38899[1] }
    ?29     = { v38900[1] }
    ?30     = { v38901[1] }
    ?31     = { v38902[1] }
    ip      = { 0x80485ba[32] }
memory:
    address = { v38861-0x4[32] }
      value = { v38862[32] }
      flags = { size=4 }
    address = { v38861-0x8[32] }
      value = { v38860[32] }
      flags = { size=4 }
    address = { v38861-0xc[32] }
      value = { v38857[32] }
      flags = { size=4 }
    address = { v38861-0x10[32] }
      value = { 0x80485ba[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v10947[32] }
    cx      = { defs={} expr=v10948[32] }
    dx      = { defs={} expr=v10949[32] }
    bx      = { defs={} expr=v10950[32] }
    sp      = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) -4[32]) }
    bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v10951[32] -4[32]) }
    si      = { defs={} expr=v10953[32] }
    di      = { defs={} expr=v10954[32] }
    es      = { defs={} expr=v10955[16] }
    cs      = { defs={} expr=v10956[16] }
    ss      = { defs={} expr=v10957[16] }
    ds      = { defs={} expr=v10958[16] }
    fs      = { defs={} expr=v10959[16] }
    gs      = { defs={} expr=v10960[16] }
    cf      = { defs={} expr=v10961[1] }
    ?1      = { defs={} expr=v10962[1] }
    pf      = { defs={} expr=v10963[1] }
    ?3      = { defs={} expr=v10964[1] }
    af      = { defs={} expr=v10965[1] }
    ?5      = { defs={} expr=v10966[1] }
    zf      = { defs={} expr=v10967[1] }
    sf      = { defs={} expr=v10968[1] }
    tf      = { defs={} expr=v10969[1] }
    if      = { defs={} expr=v10970[1] }
    df      = { defs={} expr=v10971[1] }
    of      = { defs={} expr=v10972[1] }
    iopl0   = { defs={} expr=v10973[1] }
    iopl1   = { defs={} expr=v10974[1] }
    nt      = { defs={} expr=v10975[1] }
    ?15     = { defs={} expr=v10976[1] }
    rf      = { defs={} expr=v10977[1] }
    vm      = { defs={} expr=v10978[1] }
    ac      = { defs={} expr=v10979[1] }
    vif     = { defs={} expr=v10980[1] }
    vip     = { defs={} expr=v10981[1] }
    id      = { defs={} expr=v10982[1] }
    ?22     = { defs={} expr=v10983[1] }
    ?23     = { defs={} expr=v10984[1] }
    ?24     = { defs={} expr=v10985[1] }
    ?25     = { defs={} expr=v10986[1] }
    ?26     = { defs={} expr=v10987[1] }
    ?27     = { defs={} expr=v10988[1] }
    ?28     = { defs={} expr=v10989[1] }
    ?29     = { defs={} expr=v10990[1] }
    ?30     = { defs={} expr=v10991[1] }
    ?31     = { defs={} expr=v10992[1] }
    ip      = { defs={0x080485b5} expr=0x080485ba[32] }
memory:
    address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=8[8] }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=4[8] }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=-123[8] }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=-70[8] }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080485b4} expr=(extract[8] 24[32] 32[32] v10947[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080485b4} expr=(extract[8] 16[32] 24[32] v10947[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080485b4} expr=(extract[8] 8[32] 16[32] v10947[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) -4[32]) }
      value = { defs={0x080485b4} expr=(extract[8] 0[32] 8[32] v10947[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 3[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 24[32] 32[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 2[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 16[32] 24[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] (add[32] v10951[32] -4[32]) -4[32]) 1[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 8[32] 16[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v10951[32] -4[32]) -4[32]) }
      value = { defs={0x080485b3} expr=(extract[8] 0[32] 8[32] v10950[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 3[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 24[32] 32[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 2[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 16[32] 24[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] (add[32] v10951[32] -4[32]) 1[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 8[32] 16[32] v10952[32]) }
      flags = { }
    address = { defs={0x080485b0} expr=(add[32] v10951[32] -4[32]) }
      value = { defs={0x080485b0} expr=(extract[8] 0[32] 8[32] v10952[32]) }
      flags = { }
init mem:
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485ba[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
registers:
    ax      = { v38994[32] }
    cx      = { v38995[32] }
    dx      = { v38996[32] }
    bx      = { v39049[32] }
    sp      = { v38998+0x4[32] }
    bp      = { v38999[32] }
    si      = { v39000[32] }
    di      = { v39001[32] }
    es      = { v39002[16] }
    cs      = { v39003[16] }
    ss      = { v39004[16] }
    ds      = { v39005[16] }
    fs      = { v39006[16] }
    gs      = { v39007[16] }
    cf      = { v39008[1] }
    ?1      = { v39009[1] }
    pf      = { v39010[1] }
    ?3      = { v39011[1] }
    af      = { v39012[1] }
    ?5      = { v39013[1] }
    zf      = { v39014[1] }
    sf      = { v39015[1] }
    tf      = { v39016[1] }
    if      = { v39017[1] }
    df      = { v39018[1] }
    of      = { v39019[1] }
    iopl0   = { v39020[1] }
    iopl1   = { v39021[1] }
    nt      = { v39022[1] }
    ?15     = { v39023[1] }
    rf      = { v39024[1] }
    vm      = { v39025[1] }
    ac      = { v39026[1] }
    vif     = { v39027[1] }
    vip     = { v39028[1] }
    id      = { v39029[1] }
    ?22     = { v39030[1] }
    ?23     = { v39031[1] }
    ?24     = { v39032[1] }
    ?25     = { v39033[1] }
    ?26     = { v39034[1] }
    ?27     = { v39035[1] }
    ?28     = { v39036[1] }
    ?29     = { v39037[1] }
    ?30     = { v39038[1] }
    ?31     = { v39039[1] }
    ip      = { 0x80485bb[32] }
memory:
    address = { v38998[32] }
      value = { v39049[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v11155[32] }
    cx      = { defs={} expr=v11156[32] }
    dx      = { defs={} expr=v11157[32] }
    bx      = { defs={0x080485ba} expr=v11217[32] }
    sp      = { defs={0x080485ba} expr=(add[32] v11159[32] 4[32]) }
    bp      = { defs={} expr=v11160[32] }
    si      = { defs={} expr=v11161[32] }
    di      = { defs={} expr=v11162[32] }
    es      = { defs={} expr=v11163[16] }
    cs      = { defs={} expr=v11164[16] }
    ss      = { defs={} expr=v11165[16] }
    ds      = { defs={} expr=v11166[16] }
    fs      = { defs={} expr=v11167[16] }
    gs      = { defs={} expr=v11168[16] }
    cf      = { defs={} expr=v11169[1] }
    ?1      = { defs={} expr=v11170[1] }
    pf      = { defs={} expr=v11171[1] }
    ?3      = { defs={} expr=v11172[1] }
    af      = { defs={} expr=v11173[1] }
    ?5      = { defs={} expr=v11174[1] }
    zf      = { defs={} expr=v11175[1] }
    sf      = { defs={} expr=v11176[1] }
    tf      = { defs={} expr=v11177[1] }
    if      = { defs={} expr=v11178[1] }
    df      = { defs={} expr=v11179[1] }
    of      = { defs={} expr=v11180[1] }
    iopl0   = { defs={} expr=v11181[1] }
    iopl1   = { defs={} expr=v11182[1] }
    nt      = { defs={} expr=v11183[1] }
    ?15     = { defs={} expr=v11184[1] }
    rf      = { defs={} expr=v11185[1] }
    vm      = { defs={} expr=v11186[1] }
    ac      = { defs={} expr=v11187[1] }
    vif     = { defs={} expr=v11188[1] }
    vip     = { defs={} expr=v11189[1] }
    id      = { defs={} expr=v11190[1] }
    ?22     = { defs={} expr=v11191[1] }
    ?23     = { defs={} expr=v11192[1] }
    ?24     = { defs={} expr=v11193[1] }
    ?25     = { defs={} expr=v11194[1] }
    ?26     = { defs={} expr=v11195[1] }
    ?27     = { defs={} expr=v11196[1] }
    ?28     = { defs={} expr=v11197[1] }
    ?29     = { defs={} expr=v11198[1] }
    ?30     = { defs={} expr=v11199[1] }
    ?31     = { defs={} expr=v11200[1] }
    ip      = { defs={0x080485ba} expr=0x080485bb[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v11159[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11159[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11159[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=v11159[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11217[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485bb[32] }
memory:
null state
0x80485bb:add    ebx, 0x0000110e
registers:
    ax      = { v38994[32] }
    cx      = { v38995[32] }
    dx      = { v38996[32] }
    bx      = { v39049+0x110e[32] }
    sp      = { v38998+0x4[32] }
    bp      = { v38999[32] }
    si      = { v39000[32] }
    di      = { v39001[32] }
    es      = { v39002[16] }
    cs      = { v39003[16] }
    ss      = { v39004[16] }
    ds      = { v39005[16] }
    fs      = { v39006[16] }
    gs      = { v39007[16] }
    cf      = { v39098[1] }
    ?1      = { v39009[1] }
    pf      = { -v39089+0x1[1] }
    ?3      = { v39011[1] }
    af      = { v39096[1] }
    ?5      = { v39013[1] }
    zf      = { v39094[1] }
    sf      = { v39092[1] }
    tf      = { v39016[1] }
    if      = { v39017[1] }
    df      = { v39018[1] }
    of      = { v39104[1] }
    iopl0   = { v39020[1] }
    iopl1   = { v39021[1] }
    nt      = { v39022[1] }
    ?15     = { v39023[1] }
    rf      = { v39024[1] }
    vm      = { v39025[1] }
    ac      = { v39026[1] }
    vif     = { v39027[1] }
    vip     = { v39028[1] }
    id      = { v39029[1] }
    ?22     = { v39030[1] }
    ?23     = { v39031[1] }
    ?24     = { v39032[1] }
    ?25     = { v39033[1] }
    ?26     = { v39034[1] }
    ?27     = { v39035[1] }
    ?28     = { v39036[1] }
    ?29     = { v39037[1] }
    ?30     = { v39038[1] }
    ?31     = { v39039[1] }
    ip      = { 0x80485c1[32] }
memory:
    address = { v38998[32] }
      value = { v39049[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={} expr=v11155[32] }
    cx      = { defs={} expr=v11156[32] }
    dx      = { defs={} expr=v11157[32] }
    bx      = { defs={0x080485ba,0x080485bb} expr=(add[32] v11217[32] 4366[32]) }
    sp      = { defs={0x080485ba} expr=(add[32] v11159[32] 4[32]) }
    bp      = { defs={} expr=v11160[32] }
    si      = { defs={} expr=v11161[32] }
    di      = { defs={} expr=v11162[32] }
    es      = { defs={} expr=v11163[16] }
    cs      = { defs={} expr=v11164[16] }
    ss      = { defs={} expr=v11165[16] }
    ds      = { defs={} expr=v11166[16] }
    fs      = { defs={} expr=v11167[16] }
    gs      = { defs={} expr=v11168[16] }
    cf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v11217[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v11217[32]) 4366[33]))))) }
    ?1      = { defs={} expr=v11170[1] }
    pf      = { defs={0x080485ba,0x080485bb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))))))) }
    ?3      = { defs={} expr=v11172[1] }
    af      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v11217[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v11217[32]) 4366[33]))))) }
    ?5      = { defs={} expr=v11174[1] }
    zf      = { defs={0x080485ba,0x080485bb} expr=(zerop[1] (add[32] v11217[32] 4366[32])) }
    sf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (add[32] v11217[32] 4366[32])) }
    tf      = { defs={} expr=v11177[1] }
    if      = { defs={} expr=v11178[1] }
    df      = { defs={} expr=v11179[1] }
    of      = { defs={0x080485ba,0x080485bb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v11217[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v11217[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v11217[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v11217[32]) 4366[33])))))) }
    iopl0   = { defs={} expr=v11181[1] }
    iopl1   = { defs={} expr=v11182[1] }
    nt      = { defs={} expr=v11183[1] }
    ?15     = { defs={} expr=v11184[1] }
    rf      = { defs={} expr=v11185[1] }
    vm      = { defs={} expr=v11186[1] }
    ac      = { defs={} expr=v11187[1] }
    vif     = { defs={} expr=v11188[1] }
    vip     = { defs={} expr=v11189[1] }
    id      = { defs={} expr=v11190[1] }
    ?22     = { defs={} expr=v11191[1] }
    ?23     = { defs={} expr=v11192[1] }
    ?24     = { defs={} expr=v11193[1] }
    ?25     = { defs={} expr=v11194[1] }
    ?26     = { defs={} expr=v11195[1] }
    ?27     = { defs={} expr=v11196[1] }
    ?28     = { defs={} expr=v11197[1] }
    ?29     = { defs={} expr=v11198[1] }
    ?30     = { defs={} expr=v11199[1] }
    ?31     = { defs={} expr=v11200[1] }
    ip      = { defs={0x080485ba,0x080485bb} expr=0x080485c1[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v11159[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11159[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11159[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=v11159[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11217[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485c1[32] }
memory:
null state
0x80485c1:call   0x08048390<__do_global_dtors_aux>
registers:
    ax      = { v38994[32] }
    cx      = { v38995[32] }
    dx      = { v38996[32] }
    bx      = { v39049+0x110e[32] }
    sp      = { v38998[32] }
    bp      = { v38999[32] }
    si      = { v39000[32] }
    di      = { v39001[32] }
    es      = { v39002[16] }
    cs      = { v39003[16] }
    ss      = { v39004[16] }
    ds      = { v39005[16] }
    fs      = { v39006[16] }
    gs      = { v39007[16] }
    cf      = { v39098[1] }
    ?1      = { v39009[1] }
    pf      = { -v39089+0x1[1] }
    ?3      = { v39011[1] }
    af      = { v39096[1] }
    ?5      = { v39013[1] }
    zf      = { v39094[1] }
    sf      = { v39092[1] }
    tf      = { v39016[1] }
    if      = { v39017[1] }
    df      = { v39018[1] }
    of      = { v39104[1] }
    iopl0   = { v39020[1] }
    iopl1   = { v39021[1] }
    nt      = { v39022[1] }
    ?15     = { v39023[1] }
    rf      = { v39024[1] }
    vm      = { v39025[1] }
    ac      = { v39026[1] }
    vif     = { v39027[1] }
    vip     = { v39028[1] }
    id      = { v39029[1] }
    ?22     = { v39030[1] }
    ?23     = { v39031[1] }
    ?24     = { v39032[1] }
    ?25     = { v39033[1] }
    ?26     = { v39034[1] }
    ?27     = { v39035[1] }
    ?28     = { v39036[1] }
    ?29     = { v39037[1] }
    ?30     = { v39038[1] }
    ?31     = { v39039[1] }
    ip      = { 0x8048390[32] }
memory:
    address = { v38998[32] }
      value = { 0x80485c6[32] }
      flags = { size=4 }
registers:
    ax      = { defs={} expr=v11155[32] }
    cx      = { defs={} expr=v11156[32] }
    dx      = { defs={} expr=v11157[32] }
    bx      = { defs={0x080485ba,0x080485bb} expr=(add[32] v11217[32] 4366[32]) }
    sp      = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] v11159[32] 4[32]) -4[32]) }
    bp      = { defs={} expr=v11160[32] }
    si      = { defs={} expr=v11161[32] }
    di      = { defs={} expr=v11162[32] }
    es      = { defs={} expr=v11163[16] }
    cs      = { defs={} expr=v11164[16] }
    ss      = { defs={} expr=v11165[16] }
    ds      = { defs={} expr=v11166[16] }
    fs      = { defs={} expr=v11167[16] }
    gs      = { defs={} expr=v11168[16] }
    cf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v11217[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v11217[32]) 4366[33]))))) }
    ?1      = { defs={} expr=v11170[1] }
    pf      = { defs={0x080485ba,0x080485bb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v11217[32] 4366[32]))))))) }
    ?3      = { defs={} expr=v11172[1] }
    af      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v11217[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v11217[32]) 4366[33]))))) }
    ?5      = { defs={} expr=v11174[1] }
    zf      = { defs={0x080485ba,0x080485bb} expr=(zerop[1] (add[32] v11217[32] 4366[32])) }
    sf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (add[32] v11217[32] 4366[32])) }
    tf      = { defs={} expr=v11177[1] }
    if      = { defs={} expr=v11178[1] }
    df      = { defs={} expr=v11179[1] }
    of      = { defs={0x080485ba,0x080485bb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v11217[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v11217[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v11217[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v11217[32]) 4366[33])))))) }
    iopl0   = { defs={} expr=v11181[1] }
    iopl1   = { defs={} expr=v11182[1] }
    nt      = { defs={} expr=v11183[1] }
    ?15     = { defs={} expr=v11184[1] }
    rf      = { defs={} expr=v11185[1] }
    vm      = { defs={} expr=v11186[1] }
    ac      = { defs={} expr=v11187[1] }
    vif     = { defs={} expr=v11188[1] }
    vip     = { defs={} expr=v11189[1] }
    id      = { defs={} expr=v11190[1] }
    ?22     = { defs={} expr=v11191[1] }
    ?23     = { defs={} expr=v11192[1] }
    ?24     = { defs={} expr=v11193[1] }
    ?25     = { defs={} expr=v11194[1] }
    ?26     = { defs={} expr=v11195[1] }
    ?27     = { defs={} expr=v11196[1] }
    ?28     = { defs={} expr=v11197[1] }
    ?29     = { defs={} expr=v11198[1] }
    ?30     = { defs={} expr=v11199[1] }
    ?31     = { defs={} expr=v11200[1] }
    ip      = { defs={0x080485c1} expr=0x08048390[32] }
memory:
    address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] (add[32] v11159[32] 4[32]) -4[32]) 3[32]) }
      value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=8[8] }
      flags = { }
    address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] (add[32] v11159[32] 4[32]) -4[32]) 2[32]) }
      value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=4[8] }
      flags = { }
    address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] (add[32] v11159[32] 4[32]) -4[32]) 1[32]) }
      value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=-123[8] }
      flags = { }
    address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] v11159[32] 4[32]) -4[32]) }
      value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=-58[8] }
      flags = { }
init mem:
    address = { defs={} expr=(add[32] v11159[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11159[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11159[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11217[32]) }
      flags = { rdonly }
    address = { defs={} expr=v11159[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11217[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048390[32] }
memory:
null state
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
registers:
    ax      = { v39219[32] }
    cx      = { v39165[32] }
    dx      = { v39166[32] }
    bx      = { v39167[32] }
    sp      = { v39168+0x4[32] }
    bp      = { v39169[32] }
    si      = { v39170[32] }
    di      = { v39171[32] }
    es      = { v39172[16] }
    cs      = { v39173[16] }
    ss      = { v39174[16] }
    ds      = { v39175[16] }
    fs      = { v39176[16] }
    gs      = { v39177[16] }
    cf      = { v39178[1] }
    ?1      = { v39179[1] }
    pf      = { v39180[1] }
    ?3      = { v39181[1] }
    af      = { v39182[1] }
    ?5      = { v39183[1] }
    zf      = { v39184[1] }
    sf      = { v39185[1] }
    tf      = { v39186[1] }
    if      = { v39187[1] }
    df      = { v39188[1] }
    of      = { v39189[1] }
    iopl0   = { v39190[1] }
    iopl1   = { v39191[1] }
    nt      = { v39192[1] }
    ?15     = { v39193[1] }
    rf      = { v39194[1] }
    vm      = { v39195[1] }
    ac      = { v39196[1] }
    vif     = { v39197[1] }
    vip     = { v39198[1] }
    id      = { v39199[1] }
    ?22     = { v39200[1] }
    ?23     = { v39201[1] }
    ?24     = { v39202[1] }
    ?25     = { v39203[1] }
    ?26     = { v39204[1] }
    ?27     = { v39205[1] }
    ?28     = { v39206[1] }
    ?29     = { v39207[1] }
    ?30     = { v39208[1] }
    ?31     = { v39209[1] }
    ip      = { 0x80485c7[32] }
memory:
    address = { v39168[32] }
      value = { v39219[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485c6} expr=v11449[32] }
    cx      = { defs={} expr=v11388[32] }
    dx      = { defs={} expr=v11389[32] }
    bx      = { defs={} expr=v11390[32] }
    sp      = { defs={0x080485c6} expr=(add[32] v11391[32] 4[32]) }
    bp      = { defs={} expr=v11392[32] }
    si      = { defs={} expr=v11393[32] }
    di      = { defs={} expr=v11394[32] }
    es      = { defs={} expr=v11395[16] }
    cs      = { defs={} expr=v11396[16] }
    ss      = { defs={} expr=v11397[16] }
    ds      = { defs={} expr=v11398[16] }
    fs      = { defs={} expr=v11399[16] }
    gs      = { defs={} expr=v11400[16] }
    cf      = { defs={} expr=v11401[1] }
    ?1      = { defs={} expr=v11402[1] }
    pf      = { defs={} expr=v11403[1] }
    ?3      = { defs={} expr=v11404[1] }
    af      = { defs={} expr=v11405[1] }
    ?5      = { defs={} expr=v11406[1] }
    zf      = { defs={} expr=v11407[1] }
    sf      = { defs={} expr=v11408[1] }
    tf      = { defs={} expr=v11409[1] }
    if      = { defs={} expr=v11410[1] }
    df      = { defs={} expr=v11411[1] }
    of      = { defs={} expr=v11412[1] }
    iopl0   = { defs={} expr=v11413[1] }
    iopl1   = { defs={} expr=v11414[1] }
    nt      = { defs={} expr=v11415[1] }
    ?15     = { defs={} expr=v11416[1] }
    rf      = { defs={} expr=v11417[1] }
    vm      = { defs={} expr=v11418[1] }
    ac      = { defs={} expr=v11419[1] }
    vif     = { defs={} expr=v11420[1] }
    vip     = { defs={} expr=v11421[1] }
    id      = { defs={} expr=v11422[1] }
    ?22     = { defs={} expr=v11423[1] }
    ?23     = { defs={} expr=v11424[1] }
    ?24     = { defs={} expr=v11425[1] }
    ?25     = { defs={} expr=v11426[1] }
    ?26     = { defs={} expr=v11427[1] }
    ?27     = { defs={} expr=v11428[1] }
    ?28     = { defs={} expr=v11429[1] }
    ?29     = { defs={} expr=v11430[1] }
    ?30     = { defs={} expr=v11431[1] }
    ?31     = { defs={} expr=v11432[1] }
    ip      = { defs={0x080485c6} expr=0x080485c7[32] }
memory:
init mem:
    address = { defs={} expr=(add[32] v11391[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=v11391[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11449[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485c7[32] }
memory:
null state
0x80485c7:pop    ebx
registers:
    ax      = { v39219[32] }
    cx      = { v39165[32] }
    dx      = { v39166[32] }
    bx      = { v39229[32] }
    sp      = { v39168+0x8[32] }
    bp      = { v39169[32] }
    si      = { v39170[32] }
    di      = { v39171[32] }
    es      = { v39172[16] }
    cs      = { v39173[16] }
    ss      = { v39174[16] }
    ds      = { v39175[16] }
    fs      = { v39176[16] }
    gs      = { v39177[16] }
    cf      = { v39178[1] }
    ?1      = { v39179[1] }
    pf      = { v39180[1] }
    ?3      = { v39181[1] }
    af      = { v39182[1] }
    ?5      = { v39183[1] }
    zf      = { v39184[1] }
    sf      = { v39185[1] }
    tf      = { v39186[1] }
    if      = { v39187[1] }
    df      = { v39188[1] }
    of      = { v39189[1] }
    iopl0   = { v39190[1] }
    iopl1   = { v39191[1] }
    nt      = { v39192[1] }
    ?15     = { v39193[1] }
    rf      = { v39194[1] }
    vm      = { v39195[1] }
    ac      = { v39196[1] }
    vif     = { v39197[1] }
    vip     = { v39198[1] }
    id      = { v39199[1] }
    ?22     = { v39200[1] }
    ?23     = { v39201[1] }
    ?24     = { v39202[1] }
    ?25     = { v39203[1] }
    ?26     = { v39204[1] }
    ?27     = { v39205[1] }
    ?28     = { v39206[1] }
    ?29     = { v39207[1] }
    ?30     = { v39208[1] }
    ?31     = { v39209[1] }
    ip      = { 0x80485c8[32] }
memory:
    address = { v39168[32] }
      value = { v39219[32] }
      flags = { size=4; read-only }
    address = { v39168+0x4[32] }
      value = { v39229[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485c6} expr=v11449[32] }
    cx      = { defs={} expr=v11388[32] }
    dx      = { defs={} expr=v11389[32] }
    bx      = { defs={0x080485c7} expr=v11477[32] }
    sp      = { defs={0x080485c6,0x080485c7} expr=(add[32] (add[32] v11391[32] 4[32]) 4[32]) }
    bp      = { defs={} expr=v11392[32] }
    si      = { defs={} expr=v11393[32] }
    di      = { defs={} expr=v11394[32] }
    es      = { defs={} expr=v11395[16] }
    cs      = { defs={} expr=v11396[16] }
    ss      = { defs={} expr=v11397[16] }
    ds      = { defs={} expr=v11398[16] }
    fs      = { defs={} expr=v11399[16] }
    gs      = { defs={} expr=v11400[16] }
    cf      = { defs={} expr=v11401[1] }
    ?1      = { defs={} expr=v11402[1] }
    pf      = { defs={} expr=v11403[1] }
    ?3      = { defs={} expr=v11404[1] }
    af      = { defs={} expr=v11405[1] }
    ?5      = { defs={} expr=v11406[1] }
    zf      = { defs={} expr=v11407[1] }
    sf      = { defs={} expr=v11408[1] }
    tf      = { defs={} expr=v11409[1] }
    if      = { defs={} expr=v11410[1] }
    df      = { defs={} expr=v11411[1] }
    of      = { defs={} expr=v11412[1] }
    iopl0   = { defs={} expr=v11413[1] }
    iopl1   = { defs={} expr=v11414[1] }
    nt      = { defs={} expr=v11415[1] }
    ?15     = { defs={} expr=v11416[1] }
    rf      = { defs={} expr=v11417[1] }
    vm      = { defs={} expr=v11418[1] }
    ac      = { defs={} expr=v11419[1] }
    vif     = { defs={} expr=v11420[1] }
    vip     = { defs={} expr=v11421[1] }
    id      = { defs={} expr=v11422[1] }
    ?22     = { defs={} expr=v11423[1] }
    ?23     = { defs={} expr=v11424[1] }
    ?24     = { defs={} expr=v11425[1] }
    ?25     = { defs={} expr=v11426[1] }
    ?26     = { defs={} expr=v11427[1] }
    ?27     = { defs={} expr=v11428[1] }
    ?28     = { defs={} expr=v11429[1] }
    ?29     = { defs={} expr=v11430[1] }
    ?30     = { defs={} expr=v11431[1] }
    ?31     = { defs={} expr=v11432[1] }
    ip      = { defs={0x080485c6,0x080485c7} expr=0x080485c8[32] }
memory:
init mem:
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] v11391[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=v11391[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11449[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485c8[32] }
memory:
null state
0x80485c8:leave  
registers:
    ax      = { v39219[32] }
    cx      = { v39165[32] }
    dx      = { v39166[32] }
    bx      = { v39229[32] }
    sp      = { v39169+0x4[32] }
    bp      = { v39240[32] }
    si      = { v39170[32] }
    di      = { v39171[32] }
    es      = { v39172[16] }
    cs      = { v39173[16] }
    ss      = { v39174[16] }
    ds      = { v39175[16] }
    fs      = { v39176[16] }
    gs      = { v39177[16] }
    cf      = { v39178[1] }
    ?1      = { v39179[1] }
    pf      = { v39180[1] }
    ?3      = { v39181[1] }
    af      = { v39182[1] }
    ?5      = { v39183[1] }
    zf      = { v39184[1] }
    sf      = { v39185[1] }
    tf      = { v39186[1] }
    if      = { v39187[1] }
    df      = { v39188[1] }
    of      = { v39189[1] }
    iopl0   = { v39190[1] }
    iopl1   = { v39191[1] }
    nt      = { v39192[1] }
    ?15     = { v39193[1] }
    rf      = { v39194[1] }
    vm      = { v39195[1] }
    ac      = { v39196[1] }
    vif     = { v39197[1] }
    vip     = { v39198[1] }
    id      = { v39199[1] }
    ?22     = { v39200[1] }
    ?23     = { v39201[1] }
    ?24     = { v39202[1] }
    ?25     = { v39203[1] }
    ?26     = { v39204[1] }
    ?27     = { v39205[1] }
    ?28     = { v39206[1] }
    ?29     = { v39207[1] }
    ?30     = { v39208[1] }
    ?31     = { v39209[1] }
    ip      = { 0x80485c9[32] }
memory:
    address = { v39168[32] }
      value = { v39219[32] }
      flags = { size=4; read-only }
    address = { v39168+0x4[32] }
      value = { v39229[32] }
      flags = { size=4; read-only }
    address = { v39169[32] }
      value = { v39240[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485c6} expr=v11449[32] }
    cx      = { defs={} expr=v11388[32] }
    dx      = { defs={} expr=v11389[32] }
    bx      = { defs={0x080485c7} expr=v11477[32] }
    sp      = { defs={0x080485c8} expr=(add[32] v11392[32] 4[32]) }
    bp      = { defs={0x080485c8} expr=v11507[32] }
    si      = { defs={} expr=v11393[32] }
    di      = { defs={} expr=v11394[32] }
    es      = { defs={} expr=v11395[16] }
    cs      = { defs={} expr=v11396[16] }
    ss      = { defs={} expr=v11397[16] }
    ds      = { defs={} expr=v11398[16] }
    fs      = { defs={} expr=v11399[16] }
    gs      = { defs={} expr=v11400[16] }
    cf      = { defs={} expr=v11401[1] }
    ?1      = { defs={} expr=v11402[1] }
    pf      = { defs={} expr=v11403[1] }
    ?3      = { defs={} expr=v11404[1] }
    af      = { defs={} expr=v11405[1] }
    ?5      = { defs={} expr=v11406[1] }
    zf      = { defs={} expr=v11407[1] }
    sf      = { defs={} expr=v11408[1] }
    tf      = { defs={} expr=v11409[1] }
    if      = { defs={} expr=v11410[1] }
    df      = { defs={} expr=v11411[1] }
    of      = { defs={} expr=v11412[1] }
    iopl0   = { defs={} expr=v11413[1] }
    iopl1   = { defs={} expr=v11414[1] }
    nt      = { defs={} expr=v11415[1] }
    ?15     = { defs={} expr=v11416[1] }
    rf      = { defs={} expr=v11417[1] }
    vm      = { defs={} expr=v11418[1] }
    ac      = { defs={} expr=v11419[1] }
    vif     = { defs={} expr=v11420[1] }
    vip     = { defs={} expr=v11421[1] }
    id      = { defs={} expr=v11422[1] }
    ?22     = { defs={} expr=v11423[1] }
    ?23     = { defs={} expr=v11424[1] }
    ?24     = { defs={} expr=v11425[1] }
    ?25     = { defs={} expr=v11426[1] }
    ?26     = { defs={} expr=v11427[1] }
    ?27     = { defs={} expr=v11428[1] }
    ?28     = { defs={} expr=v11429[1] }
    ?29     = { defs={} expr=v11430[1] }
    ?30     = { defs={} expr=v11431[1] }
    ?31     = { defs={} expr=v11432[1] }
    ip      = { defs={0x080485c6,0x080485c7,0x080485c8} expr=0x080485c9[32] }
memory:
init mem:
    address = { defs={0x080485c8} expr=(add[32] v11392[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11507[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=(add[32] v11392[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11507[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=(add[32] v11392[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11507[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=v11392[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11507[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] v11391[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=v11391[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11449[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485c9[32] }
memory:
null state
0x80485c9:ret    
registers:
    ax      = { v39219[32] }
    cx      = { v39165[32] }
    dx      = { v39166[32] }
    bx      = { v39229[32] }
    sp      = { v39169+0x8[32] }
    bp      = { v39240[32] }
    si      = { v39170[32] }
    di      = { v39171[32] }
    es      = { v39172[16] }
    cs      = { v39173[16] }
    ss      = { v39174[16] }
    ds      = { v39175[16] }
    fs      = { v39176[16] }
    gs      = { v39177[16] }
    cf      = { v39178[1] }
    ?1      = { v39179[1] }
    pf      = { v39180[1] }
    ?3      = { v39181[1] }
    af      = { v39182[1] }
    ?5      = { v39183[1] }
    zf      = { v39184[1] }
    sf      = { v39185[1] }
    tf      = { v39186[1] }
    if      = { v39187[1] }
    df      = { v39188[1] }
    of      = { v39189[1] }
    iopl0   = { v39190[1] }
    iopl1   = { v39191[1] }
    nt      = { v39192[1] }
    ?15     = { v39193[1] }
    rf      = { v39194[1] }
    vm      = { v39195[1] }
    ac      = { v39196[1] }
    vif     = { v39197[1] }
    vip     = { v39198[1] }
    id      = { v39199[1] }
    ?22     = { v39200[1] }
    ?23     = { v39201[1] }
    ?24     = { v39202[1] }
    ?25     = { v39203[1] }
    ?26     = { v39204[1] }
    ?27     = { v39205[1] }
    ?28     = { v39206[1] }
    ?29     = { v39207[1] }
    ?30     = { v39208[1] }
    ?31     = { v39209[1] }
    ip      = { v39252[32] }
memory:
    address = { v39168[32] }
      value = { v39219[32] }
      flags = { size=4; read-only }
    address = { v39168+0x4[32] }
      value = { v39229[32] }
      flags = { size=4; read-only }
    address = { v39169[32] }
      value = { v39240[32] }
      flags = { size=4; read-only }
    address = { v39169+0x4[32] }
      value = { v39252[32] }
      flags = { size=4; read-only }
registers:
    ax      = { defs={0x080485c6} expr=v11449[32] }
    cx      = { defs={} expr=v11388[32] }
    dx      = { defs={} expr=v11389[32] }
    bx      = { defs={0x080485c7} expr=v11477[32] }
    sp      = { defs={0x080485c8,0x080485c9} expr=(add[32] (add[32] v11392[32] 4[32]) 4[32]) }
    bp      = { defs={0x080485c8} expr=v11507[32] }
    si      = { defs={} expr=v11393[32] }
    di      = { defs={} expr=v11394[32] }
    es      = { defs={} expr=v11395[16] }
    cs      = { defs={} expr=v11396[16] }
    ss      = { defs={} expr=v11397[16] }
    ds      = { defs={} expr=v11398[16] }
    fs      = { defs={} expr=v11399[16] }
    gs      = { defs={} expr=v11400[16] }
    cf      = { defs={} expr=v11401[1] }
    ?1      = { defs={} expr=v11402[1] }
    pf      = { defs={} expr=v11403[1] }
    ?3      = { defs={} expr=v11404[1] }
    af      = { defs={} expr=v11405[1] }
    ?5      = { defs={} expr=v11406[1] }
    zf      = { defs={} expr=v11407[1] }
    sf      = { defs={} expr=v11408[1] }
    tf      = { defs={} expr=v11409[1] }
    if      = { defs={} expr=v11410[1] }
    df      = { defs={} expr=v11411[1] }
    of      = { defs={} expr=v11412[1] }
    iopl0   = { defs={} expr=v11413[1] }
    iopl1   = { defs={} expr=v11414[1] }
    nt      = { defs={} expr=v11415[1] }
    ?15     = { defs={} expr=v11416[1] }
    rf      = { defs={} expr=v11417[1] }
    vm      = { defs={} expr=v11418[1] }
    ac      = { defs={} expr=v11419[1] }
    vif     = { defs={} expr=v11420[1] }
    vip     = { defs={} expr=v11421[1] }
    id      = { defs={} expr=v11422[1] }
    ?22     = { defs={} expr=v11423[1] }
    ?23     = { defs={} expr=v11424[1] }
    ?24     = { defs={} expr=v11425[1] }
    ?25     = { defs={} expr=v11426[1] }
    ?26     = { defs={} expr=v11427[1] }
    ?27     = { defs={} expr=v11428[1] }
    ?28     = { defs={} expr=v11429[1] }
    ?29     = { defs={} expr=v11430[1] }
    ?30     = { defs={} expr=v11431[1] }
    ?31     = { defs={} expr=v11432[1] }
    ip      = { defs={0x080485c9} expr=v11538[32] }
memory:
init mem:
    address = { defs={0x080485c8} expr=(add[32] (add[32] v11392[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11538[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=(add[32] (add[32] v11392[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11538[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=(add[32] (add[32] v11392[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11538[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=(add[32] v11392[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11538[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=(add[32] v11392[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11507[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=(add[32] v11392[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11507[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=(add[32] v11392[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11507[32]) }
      flags = { rdonly }
    address = { defs={0x080485c8} expr=v11392[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11507[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] (add[32] v11391[32] 4[32]) 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={0x080485c6} expr=(add[32] v11391[32] 4[32]) }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11477[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 3[32]) }
      value = { defs={} expr=(extract[8] 24[32] 32[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 2[32]) }
      value = { defs={} expr=(extract[8] 16[32] 24[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=(add[32] v11391[32] 1[32]) }
      value = { defs={} expr=(extract[8] 8[32] 16[32] v11449[32]) }
      flags = { rdonly }
    address = { defs={} expr=v11391[32] }
      value = { defs={} expr=(extract[8] 0[32] 8[32] v11449[32]) }
      flags = { rdonly }
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
null state
analyzed headers: 1
