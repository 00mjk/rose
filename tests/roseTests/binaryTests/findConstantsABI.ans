=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v416
    cx = v417
    dx = v418
    bx = v419
    sp = v420-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v421
    si = v422
    di = v423
    es = v424
    cs = v425
    ss = v426
    ds = v427
    fs = v428
    gs = v429
    cf = v430
    ?1 = v431
    pf = v432
    ?3 = v433
    af = v434
    ?5 = v435
    zf = v436
    sf = v437
    tf = v438
    if = v439
    df = v440
    of = v441
    iopl0 = v442
    iopl1 = v443
    nt = v444
    ?15 = v445
    memory = {
        size=4; addr=v420-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v633
    cx = v634
    dx = v635
    bx = v636
    sp = v637-0x4 [from 0x80482d8:call   0x08048580]
    bp = v638
    si = v639
    di = v640
    es = v641
    cs = v642
    ss = v643
    ds = v644
    fs = v645
    gs = v646
    cf = v647
    ?1 = v648
    pf = v649
    ?3 = v650
    af = v651
    ?5 = v652
    zf = v653
    sf = v654
    tf = v655
    if = v656
    df = v657
    of = v658
    iopl0 = v659
    iopl1 = v660
    nt = v661
    ?15 = v662
    memory = {
        size=4; addr=v637-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x4 [from 0x80482dd:leave  ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x8 [from 0x80482de:ret    ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = v922 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482df:add    bh, bh
    ax = v984
    cx = v985
    dx = v986
    bx = v1052 [from 0x80482df:add    bh, bh]
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = v1045 [from 0x80482df:add    bh, bh]
    ?1 = v999
    pf = -v1040-0x1 [from 0x80482df:add    bh, bh]
    ?3 = v1001
    af = v1044 [from 0x80482df:add    bh, bh]
    ?5 = v1003
    zf = v1043 [from 0x80482df:add    bh, bh]
    sf = v1042 [from 0x80482df:add    bh, bh]
    tf = v1006
    if = v1007
    df = v1008
    of = v1048 [from 0x80482df:add    bh, bh]
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = 0x80482e1 [from 0x80482df:add    bh, bh]
0x80482e1:xor    eax, 0x080496cc
    ax = v1086 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = v985
    dx = v986
    bx = v1052 [from 0x80482df:add    bh, bh]
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = v999
    pf = -v1102-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = v1001
    af = <top>
    ?5 = v1003
    zf = v1105 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = v1104 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = v1006
    if = v1007
    df = v1008
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = 0x80482e6 [from 0x80482e1:xor    eax, 0x080496cc]
0x80482e6:jmp    DWORD PTR ds:[0x080496d0]
    ax = v1086 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = v985
    dx = v986
    bx = v1052 [from 0x80482df:add    bh, bh]
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = v999
    pf = -v1102-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = v1001
    af = <top>
    ?5 = v1003
    zf = v1105 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = v1104 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = v1006
    if = v1007
    df = v1008
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = v1143 [from 0x80482e6:jmp    DWORD PTR ds:[0x080496d0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482e0:push   DWORD PTR ds:[0x080496cc]
    ax = v1205
    cx = v1206
    dx = v1207
    bx = v1208
    sp = v1209-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    bp = v1210
    si = v1211
    di = v1212
    es = v1213
    cs = v1214
    ss = v1215
    ds = v1216
    fs = v1217
    gs = v1218
    cf = v1219
    ?1 = v1220
    pf = v1221
    ?3 = v1222
    af = v1223
    ?5 = v1224
    zf = v1225
    sf = v1226
    tf = v1227
    if = v1228
    df = v1229
    of = v1230
    iopl0 = v1231
    iopl1 = v1232
    nt = v1233
    ?15 = v1234
    memory = {
        size=4; addr=v1209-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]; value=v1241 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    }
    ip = 0x80482e6 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = v1334
    cx = v1335
    dx = v1336
    bx = v1337
    sp = v1338
    bp = v1339
    si = v1340
    di = v1341
    es = v1342
    cs = v1343
    ss = v1344
    ds = v1345
    fs = v1346
    gs = v1347
    cf = v1396 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?1 = v1349
    pf = -v1391-0x1 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?3 = v1351
    af = v1395 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?5 = v1353
    zf = v1394 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    sf = v1393 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    tf = v1356
    if = v1357
    df = v1358
    of = v1399 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    iopl0 = v1360
    iopl1 = v1361
    nt = v1362
    ?15 = v1363
    memory = {
        size=1; addr=v1334; value=v2702 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    }
    ip = 0x80482ee [from 0x80482ec:add    BYTE PTR ds:[eax], al]
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = v1334
    cx = v1335
    dx = v1336
    bx = v1337
    sp = v1338
    bp = v1339
    si = v1340
    di = v1341
    es = v1342
    cs = v1343
    ss = v1344
    ds = v1345
    fs = v1346
    gs = v1347
    cf = v1465 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?1 = v1349
    pf = -v1460-0x1 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?3 = v1351
    af = v1464 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?5 = v1353
    zf = v1463 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    sf = v1462 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    tf = v1356
    if = v1357
    df = v1358
    of = v1468 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    iopl0 = v1360
    iopl1 = v1361
    nt = v1362
    ?15 = v1363
    memory = {
        size=1; addr=v1334; value=v4036 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    }
    ip = 0x80482f0 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v1334
    cx = v1335
    dx = v1336
    bx = v1337
    sp = v1338
    bp = v1339
    si = v1340
    di = v1341
    es = v1342
    cs = v1343
    ss = v1344
    ds = v1345
    fs = v1346
    gs = v1347
    cf = v1465 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?1 = v1349
    pf = -v1460-0x1 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?3 = v1351
    af = v1464 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?5 = v1353
    zf = v1463 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    sf = v1462 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    tf = v1356
    if = v1357
    df = v1358
    of = v1468 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    iopl0 = v1360
    iopl1 = v1361
    nt = v1362
    ?15 = v1363
    memory = {
        size=1; addr=v1334; value=v4036 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    }
    ip = v1505 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f6:push   0x00000000
    ax = v1567
    cx = v1568
    dx = v1569
    bx = v1570
    sp = v1571-0x4 [from 0x80482f6:push   0x00000000]
    bp = v1572
    si = v1573
    di = v1574
    es = v1575
    cs = v1576
    ss = v1577
    ds = v1578
    fs = v1579
    gs = v1580
    cf = v1581
    ?1 = v1582
    pf = v1583
    ?3 = v1584
    af = v1585
    ?5 = v1586
    zf = v1587
    sf = v1588
    tf = v1589
    if = v1590
    df = v1591
    of = v1592
    iopl0 = v1593
    iopl1 = v1594
    nt = v1595
    ?15 = v1596
    memory = {
        size=4; addr=v1571-0x4 [from 0x80482f6:push   0x00000000]; value=0x0 [from 0x80482f6:push   0x00000000]
    }
    ip = 0x80482fb [from 0x80482f6:push   0x00000000]
0x80482fb:jmp    0x080482e0
    ax = v1567
    cx = v1568
    dx = v1569
    bx = v1570
    sp = v1571-0x4 [from 0x80482f6:push   0x00000000]
    bp = v1572
    si = v1573
    di = v1574
    es = v1575
    cs = v1576
    ss = v1577
    ds = v1578
    fs = v1579
    gs = v1580
    cf = v1581
    ?1 = v1582
    pf = v1583
    ?3 = v1584
    af = v1585
    ?5 = v1586
    zf = v1587
    sf = v1588
    tf = v1589
    if = v1590
    df = v1591
    of = v1592
    iopl0 = v1593
    iopl1 = v1594
    nt = v1595
    ?15 = v1596
    memory = {
        size=4; addr=v1571-0x4 [from 0x80482f6:push   0x00000000]; value=0x0 [from 0x80482f6:push   0x00000000]
    }
    ip = 0x80482e0 [from 0x80482fb:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v1727
    cx = v1728
    dx = v1729
    bx = v1730
    sp = v1731
    bp = v1732
    si = v1733
    di = v1734
    es = v1735
    cs = v1736
    ss = v1737
    ds = v1738
    fs = v1739
    gs = v1740
    cf = v1741
    ?1 = v1742
    pf = v1743
    ?3 = v1744
    af = v1745
    ?5 = v1746
    zf = v1747
    sf = v1748
    tf = v1749
    if = v1750
    df = v1751
    of = v1752
    iopl0 = v1753
    iopl1 = v1754
    nt = v1755
    ?15 = v1756
    memory = {}
    ip = v1760 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048306:push   0x00000008
    ax = v1822
    cx = v1823
    dx = v1824
    bx = v1825
    sp = v1826-0x4 [from 0x8048306:push   0x00000008]
    bp = v1827
    si = v1828
    di = v1829
    es = v1830
    cs = v1831
    ss = v1832
    ds = v1833
    fs = v1834
    gs = v1835
    cf = v1836
    ?1 = v1837
    pf = v1838
    ?3 = v1839
    af = v1840
    ?5 = v1841
    zf = v1842
    sf = v1843
    tf = v1844
    if = v1845
    df = v1846
    of = v1847
    iopl0 = v1848
    iopl1 = v1849
    nt = v1850
    ?15 = v1851
    memory = {
        size=4; addr=v1826-0x4 [from 0x8048306:push   0x00000008]; value=0x8 [from 0x8048306:push   0x00000008]
    }
    ip = 0x804830b [from 0x8048306:push   0x00000008]
0x804830b:jmp    0x080482e0
    ax = v1822
    cx = v1823
    dx = v1824
    bx = v1825
    sp = v1826-0x4 [from 0x8048306:push   0x00000008]
    bp = v1827
    si = v1828
    di = v1829
    es = v1830
    cs = v1831
    ss = v1832
    ds = v1833
    fs = v1834
    gs = v1835
    cf = v1836
    ?1 = v1837
    pf = v1838
    ?3 = v1839
    af = v1840
    ?5 = v1841
    zf = v1842
    sf = v1843
    tf = v1844
    if = v1845
    df = v1846
    of = v1847
    iopl0 = v1848
    iopl1 = v1849
    nt = v1850
    ?15 = v1851
    memory = {
        size=4; addr=v1826-0x4 [from 0x8048306:push   0x00000008]; value=0x8 [from 0x8048306:push   0x00000008]
    }
    ip = 0x80482e0 [from 0x804830b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v1982
    cx = v1983
    dx = v1984
    bx = v1985
    sp = v1986
    bp = v1987
    si = v1988
    di = v1989
    es = v1990
    cs = v1991
    ss = v1992
    ds = v1993
    fs = v1994
    gs = v1995
    cf = v1996
    ?1 = v1997
    pf = v1998
    ?3 = v1999
    af = v2000
    ?5 = v2001
    zf = v2002
    sf = v2003
    tf = v2004
    if = v2005
    df = v2006
    of = v2007
    iopl0 = v2008
    iopl1 = v2009
    nt = v2010
    ?15 = v2011
    memory = {}
    ip = v2015 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048316:push   0x00000010
    ax = v2077
    cx = v2078
    dx = v2079
    bx = v2080
    sp = v2081-0x4 [from 0x8048316:push   0x00000010]
    bp = v2082
    si = v2083
    di = v2084
    es = v2085
    cs = v2086
    ss = v2087
    ds = v2088
    fs = v2089
    gs = v2090
    cf = v2091
    ?1 = v2092
    pf = v2093
    ?3 = v2094
    af = v2095
    ?5 = v2096
    zf = v2097
    sf = v2098
    tf = v2099
    if = v2100
    df = v2101
    of = v2102
    iopl0 = v2103
    iopl1 = v2104
    nt = v2105
    ?15 = v2106
    memory = {
        size=4; addr=v2081-0x4 [from 0x8048316:push   0x00000010]; value=0x10 [from 0x8048316:push   0x00000010]
    }
    ip = 0x804831b [from 0x8048316:push   0x00000010]
0x804831b:jmp    0x080482e0
    ax = v2077
    cx = v2078
    dx = v2079
    bx = v2080
    sp = v2081-0x4 [from 0x8048316:push   0x00000010]
    bp = v2082
    si = v2083
    di = v2084
    es = v2085
    cs = v2086
    ss = v2087
    ds = v2088
    fs = v2089
    gs = v2090
    cf = v2091
    ?1 = v2092
    pf = v2093
    ?3 = v2094
    af = v2095
    ?5 = v2096
    zf = v2097
    sf = v2098
    tf = v2099
    if = v2100
    df = v2101
    of = v2102
    iopl0 = v2103
    iopl1 = v2104
    nt = v2105
    ?15 = v2106
    memory = {
        size=4; addr=v2081-0x4 [from 0x8048316:push   0x00000010]; value=0x10 [from 0x8048316:push   0x00000010]
    }
    ip = 0x80482e0 [from 0x804831b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v2237
    cx = v2238
    dx = v2239
    bx = v2240
    sp = v2241
    bp = v2242
    si = v2243
    di = v2244
    es = v2245
    cs = v2246
    ss = v2247
    ds = v2248
    fs = v2249
    gs = v2250
    cf = v2251
    ?1 = v2252
    pf = v2253
    ?3 = v2254
    af = v2255
    ?5 = v2256
    zf = v2257
    sf = v2258
    tf = v2259
    if = v2260
    df = v2261
    of = v2262
    iopl0 = v2263
    iopl1 = v2264
    nt = v2265
    ?15 = v2266
    memory = {}
    ip = v2270 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048326:push   0x00000018
    ax = v2332
    cx = v2333
    dx = v2334
    bx = v2335
    sp = v2336-0x4 [from 0x8048326:push   0x00000018]
    bp = v2337
    si = v2338
    di = v2339
    es = v2340
    cs = v2341
    ss = v2342
    ds = v2343
    fs = v2344
    gs = v2345
    cf = v2346
    ?1 = v2347
    pf = v2348
    ?3 = v2349
    af = v2350
    ?5 = v2351
    zf = v2352
    sf = v2353
    tf = v2354
    if = v2355
    df = v2356
    of = v2357
    iopl0 = v2358
    iopl1 = v2359
    nt = v2360
    ?15 = v2361
    memory = {
        size=4; addr=v2336-0x4 [from 0x8048326:push   0x00000018]; value=0x18 [from 0x8048326:push   0x00000018]
    }
    ip = 0x804832b [from 0x8048326:push   0x00000018]
0x804832b:jmp    0x080482e0
    ax = v2332
    cx = v2333
    dx = v2334
    bx = v2335
    sp = v2336-0x4 [from 0x8048326:push   0x00000018]
    bp = v2337
    si = v2338
    di = v2339
    es = v2340
    cs = v2341
    ss = v2342
    ds = v2343
    fs = v2344
    gs = v2345
    cf = v2346
    ?1 = v2347
    pf = v2348
    ?3 = v2349
    af = v2350
    ?5 = v2351
    zf = v2352
    sf = v2353
    tf = v2354
    if = v2355
    df = v2356
    of = v2357
    iopl0 = v2358
    iopl1 = v2359
    nt = v2360
    ?15 = v2361
    memory = {
        size=4; addr=v2336-0x4 [from 0x8048326:push   0x00000018]; value=0x18 [from 0x8048326:push   0x00000018]
    }
    ip = 0x80482e0 [from 0x804832b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v2492
    cx = v2493
    dx = v2494
    bx = v2495
    sp = v2496
    bp = v2497
    si = v2498
    di = v2499
    es = v2500
    cs = v2501
    ss = v2502
    ds = v2503
    fs = v2504
    gs = v2505
    cf = v2506
    ?1 = v2507
    pf = v2508
    ?3 = v2509
    af = v2510
    ?5 = v2511
    zf = v2512
    sf = v2513
    tf = v2514
    if = v2515
    df = v2516
    of = v2517
    iopl0 = v2518
    iopl1 = v2519
    nt = v2520
    ?15 = v2521
    memory = {}
    ip = v2525 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048336:push   0x00000020
    ax = v2587
    cx = v2588
    dx = v2589
    bx = v2590
    sp = v2591-0x4 [from 0x8048336:push   0x00000020]
    bp = v2592
    si = v2593
    di = v2594
    es = v2595
    cs = v2596
    ss = v2597
    ds = v2598
    fs = v2599
    gs = v2600
    cf = v2601
    ?1 = v2602
    pf = v2603
    ?3 = v2604
    af = v2605
    ?5 = v2606
    zf = v2607
    sf = v2608
    tf = v2609
    if = v2610
    df = v2611
    of = v2612
    iopl0 = v2613
    iopl1 = v2614
    nt = v2615
    ?15 = v2616
    memory = {
        size=4; addr=v2591-0x4 [from 0x8048336:push   0x00000020]; value=0x20 [from 0x8048336:push   0x00000020]
    }
    ip = 0x804833b [from 0x8048336:push   0x00000020]
0x804833b:jmp    0x080482e0
    ax = v2587
    cx = v2588
    dx = v2589
    bx = v2590
    sp = v2591-0x4 [from 0x8048336:push   0x00000020]
    bp = v2592
    si = v2593
    di = v2594
    es = v2595
    cs = v2596
    ss = v2597
    ds = v2598
    fs = v2599
    gs = v2600
    cf = v2601
    ?1 = v2602
    pf = v2603
    ?3 = v2604
    af = v2605
    ?5 = v2606
    zf = v2607
    sf = v2608
    tf = v2609
    if = v2610
    df = v2611
    of = v2612
    iopl0 = v2613
    iopl1 = v2614
    nt = v2615
    ?15 = v2616
    memory = {
        size=4; addr=v2591-0x4 [from 0x8048336:push   0x00000020]; value=0x20 [from 0x8048336:push   0x00000020]
    }
    ip = 0x80482e0 [from 0x804833b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v2747
    cx = v2748
    dx = v2749
    bx = v2750
    sp = v2751
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2753
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2762
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v2747
    cx = v2748
    dx = v2749
    bx = v2750
    sp = v2751+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2762
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2751+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2762
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x18 [from 0x8048355:push   ecx]; value=v2751+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x1c [from 0x8048356:push   esi]; value=v2836 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x18 [from 0x8048355:push   ecx]; value=v2751+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v2902-0x1c [from 0x8048356:push   esi]; value=v2836 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x18 [from 0x8048355:push   ecx]; value=v2751+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v2902-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v2902-0x1c [from 0x8048356:push   esi]; value=v2836 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x18 [from 0x8048355:push   ecx]; value=v2751+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v3434
    cx = v3435
    dx = v3436
    bx = v3437
    sp = v3438
    bp = v3439
    si = v3440
    di = v3441
    es = v3442
    cs = v3443
    ss = v3444
    ds = v3445
    fs = v3446
    gs = v3447
    cf = v3448
    ?1 = v3449
    pf = v3450
    ?3 = v3451
    af = v3452
    ?5 = v3453
    zf = v3454
    sf = v3455
    tf = v3456
    if = v3457
    df = v3458
    of = v3459
    iopl0 = v3460
    iopl1 = v3461
    nt = v3462
    ?15 = v3463
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048362:nop    
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531
    bp = v3532
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {}
    ip = 0x8048363 [from 0x8048362:nop    ]
0x8048363:nop    
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531
    bp = v3532
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {}
    ip = 0x8048364 [from 0x8048363:nop    ]
0x8048364:push   ebp
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0x4 [from 0x8048364:push   ebp]
    bp = v3532
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0x4 [from 0x8048364:push   ebp]
    bp = v3531-0x4 [from 0x8048364:push   ebp]
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0x8 [from 0x8048367:push   ebx]
    bp = v3531-0x4 [from 0x8048364:push   ebp]
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0x8 [from 0x8048367:push   ebx]; value=v3530
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0xc [from 0x8048368:push   ecx]
    bp = v3531-0x4 [from 0x8048364:push   ebp]
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0xc [from 0x8048368:push   ecx]; value=v3528
        size=4; addr=v3531-0x8 [from 0x8048367:push   ebx]; value=v3530
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0x10 [from 0x8048369:call   0x0804836e]
    bp = v3531-0x4 [from 0x8048364:push   ebp]
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v3531-0xc [from 0x8048368:push   ecx]; value=v3528
        size=4; addr=v3531-0x8 [from 0x8048367:push   ebx]; value=v3530
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v3858
    cx = v3859
    dx = v3860
    bx = v3892 [from 0x804836e:pop    ebx]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = v3872
    ?1 = v3873
    pf = v3874
    ?3 = v3875
    af = v3876
    ?5 = v3877
    zf = v3878
    sf = v3879
    tf = v3880
    if = v3881
    df = v3882
    of = v3883
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v3858
    cx = v3859
    dx = v3860
    bx = v3892+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = v3954 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v3873
    pf = -v3949-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v3875
    af = v3953 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v3877
    zf = v3952 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v3951 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v3880
    if = v3881
    df = v3882
    of = v3957 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v3858
    cx = v3859
    dx = v3993 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3892+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = v3954 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v3873
    pf = -v3949-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v3875
    af = v3953 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v3877
    zf = v3952 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v3951 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v3880
    if = v3881
    df = v3882
    of = v3957 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v3858
    cx = v3859
    dx = v3993 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3892+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v3873
    pf = -v4042-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v3875
    af = <top>
    ?5 = v3877
    zf = v4045 [from 0x804837b:test   edx, edx]
    sf = v4044 [from 0x804837b:test   edx, edx]
    tf = v3880
    if = v3881
    df = v3882
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v3858
    cx = v3859
    dx = v3993 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3892+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v3873
    pf = -v4042-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v3875
    af = <top>
    ?5 = v3877
    zf = v4045 [from 0x804837b:test   edx, edx]
    sf = v4044 [from 0x804837b:test   edx, edx]
    tf = v3880
    if = v3881
    df = v3882
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = v4082 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v4204
    cx = v4205
    dx = v4206
    bx = v4207
    sp = v4208-0x4 [from 0x804837f:call   0x08048330]
    bp = v4209
    si = v4210
    di = v4211
    es = v4212
    cs = v4213
    ss = v4214
    ds = v4215
    fs = v4216
    gs = v4217
    cf = v4218
    ?1 = v4219
    pf = v4220
    ?3 = v4221
    af = v4222
    ?5 = v4223
    zf = v4224
    sf = v4225
    tf = v4226
    if = v4227
    df = v4228
    of = v4229
    iopl0 = v4230
    iopl1 = v4231
    nt = v4232
    ?15 = v4233
    memory = {
        size=4; addr=v4208-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v4455 [from 0x8048384:pop    eax]
    cx = v4422
    dx = v4423
    bx = v4424
    sp = v4425+0x4 [from 0x8048384:pop    eax]
    bp = v4426
    si = v4427
    di = v4428
    es = v4429
    cs = v4430
    ss = v4431
    ds = v4432
    fs = v4433
    gs = v4434
    cf = v4435
    ?1 = v4436
    pf = v4437
    ?3 = v4438
    af = v4439
    ?5 = v4440
    zf = v4441
    sf = v4442
    tf = v4443
    if = v4444
    df = v4445
    of = v4446
    iopl0 = v4447
    iopl1 = v4448
    nt = v4449
    ?15 = v4450
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v4455 [from 0x8048384:pop    eax]
    cx = v4422
    dx = v4423
    bx = v4491 [from 0x8048385:pop    ebx]
    sp = v4425+0x8 [from 0x8048385:pop    ebx]
    bp = v4426
    si = v4427
    di = v4428
    es = v4429
    cs = v4430
    ss = v4431
    ds = v4432
    fs = v4433
    gs = v4434
    cf = v4435
    ?1 = v4436
    pf = v4437
    ?3 = v4438
    af = v4439
    ?5 = v4440
    zf = v4441
    sf = v4442
    tf = v4443
    if = v4444
    df = v4445
    of = v4446
    iopl0 = v4447
    iopl1 = v4448
    nt = v4449
    ?15 = v4450
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v4455 [from 0x8048384:pop    eax]
    cx = v4422
    dx = v4423
    bx = v4491 [from 0x8048385:pop    ebx]
    sp = v4426+0x4 [from 0x8048386:leave  ]
    bp = v4527 [from 0x8048386:leave  ]
    si = v4427
    di = v4428
    es = v4429
    cs = v4430
    ss = v4431
    ds = v4432
    fs = v4433
    gs = v4434
    cf = v4435
    ?1 = v4436
    pf = v4437
    ?3 = v4438
    af = v4439
    ?5 = v4440
    zf = v4441
    sf = v4442
    tf = v4443
    if = v4444
    df = v4445
    of = v4446
    iopl0 = v4447
    iopl1 = v4448
    nt = v4449
    ?15 = v4450
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v4455 [from 0x8048384:pop    eax]
    cx = v4422
    dx = v4423
    bx = v4491 [from 0x8048385:pop    ebx]
    sp = v4426+0x8 [from 0x8048387:ret    ]
    bp = v4527 [from 0x8048386:leave  ]
    si = v4427
    di = v4428
    es = v4429
    cs = v4430
    ss = v4431
    ds = v4432
    fs = v4433
    gs = v4434
    cf = v4435
    ?1 = v4436
    pf = v4437
    ?3 = v4438
    af = v4439
    ?5 = v4440
    zf = v4441
    sf = v4442
    tf = v4443
    if = v4444
    df = v4445
    of = v4446
    iopl0 = v4447
    iopl1 = v4448
    nt = v4449
    ?15 = v4450
    memory = {}
    ip = v4565 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048388:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x8048389 [from 0x8048388:nop    ]
0x8048389:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838a [from 0x8048389:nop    ]
0x804838a:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838b [from 0x804838a:nop    ]
0x804838b:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838c [from 0x804838b:nop    ]
0x804838c:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838d [from 0x804838c:nop    ]
0x804838d:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838e [from 0x804838d:nop    ]
0x804838e:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838f [from 0x804838e:nop    ]
0x804838f:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x8048390 [from 0x804838f:nop    ]
0x8048390:push   ebp
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0x4 [from 0x8048390:push   ebp]
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0x4 [from 0x8048390:push   ebp]
    bp = v4631-0x4 [from 0x8048390:push   ebp]
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4631-0x4 [from 0x8048390:push   ebp]
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = -v5014-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v4642
    pf = -v5008-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v4644
    af = -v5012-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v4646
    zf = v5011 [from 0x8048393:sub    esp, 0x08]
    sf = v5010 [from 0x8048393:sub    esp, 0x08]
    tf = v4649
    if = v4650
    df = v4651
    of = v5018 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4631-0x4 [from 0x8048390:push   ebp]
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = -v5086-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v4642
    pf = -v5080-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v4644
    af = -v5084-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v4646
    zf = v5083 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v5082 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v4649
    if = v4650
    df = v4651
    of = v5090 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4631-0x4 [from 0x8048390:push   ebp]
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = -v5086-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v4642
    pf = -v5080-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v4644
    af = -v5084-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v4646
    zf = v5083 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v5082 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v4649
    if = v4650
    df = v4651
    of = v5090 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = v5125 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v5280 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5248
    dx = v5249
    bx = v5250
    sp = v5251
    bp = v5252
    si = v5253
    di = v5254
    es = v5255
    cs = v5256
    ss = v5257
    ds = v5258
    fs = v5259
    gs = v5260
    cf = v5261
    ?1 = v5262
    pf = v5263
    ?3 = v5264
    af = v5265
    ?5 = v5266
    zf = v5267
    sf = v5268
    tf = v5269
    if = v5270
    df = v5271
    of = v5272
    iopl0 = v5273
    iopl1 = v5274
    nt = v5275
    ?15 = v5276
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v5280 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5248
    dx = v5314 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v5250
    sp = v5251
    bp = v5252
    si = v5253
    di = v5254
    es = v5255
    cs = v5256
    ss = v5257
    ds = v5258
    fs = v5259
    gs = v5260
    cf = v5261
    ?1 = v5262
    pf = v5263
    ?3 = v5264
    af = v5265
    ?5 = v5266
    zf = v5267
    sf = v5268
    tf = v5269
    if = v5270
    df = v5271
    of = v5272
    iopl0 = v5273
    iopl1 = v5274
    nt = v5275
    ?15 = v5276
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v5280 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5248
    dx = v5314 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v5250
    sp = v5251
    bp = v5252
    si = v5253
    di = v5254
    es = v5255
    cs = v5256
    ss = v5257
    ds = v5258
    fs = v5259
    gs = v5260
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v5262
    pf = -v5363-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v5264
    af = <top>
    ?5 = v5266
    zf = v5366 [from 0x80483a6:test   edx, edx]
    sf = v5365 [from 0x80483a6:test   edx, edx]
    tf = v5269
    if = v5270
    df = v5271
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v5273
    iopl1 = v5274
    nt = v5275
    ?15 = v5276
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v5280 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5248
    dx = v5314 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v5250
    sp = v5251
    bp = v5252
    si = v5253
    di = v5254
    es = v5255
    cs = v5256
    ss = v5257
    ds = v5258
    fs = v5259
    gs = v5260
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v5262
    pf = -v5363-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v5264
    af = <top>
    ?5 = v5266
    zf = v5366 [from 0x80483a6:test   edx, edx]
    sf = v5365 [from 0x80483a6:test   edx, edx]
    tf = v5269
    if = v5270
    df = v5271
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v5273
    iopl1 = v5274
    nt = v5275
    ?15 = v5276
    memory = {}
    ip = v5403 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v5525
    cx = v5526
    dx = v5527
    bx = v5528
    sp = v5529
    bp = v5530
    si = v5531 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5532
    es = v5533
    cs = v5534
    ss = v5535
    ds = v5536
    fs = v5537
    gs = v5538
    cf = v5539
    ?1 = v5540
    pf = v5541
    ?3 = v5542
    af = v5543
    ?5 = v5544
    zf = v5545
    sf = v5546
    tf = v5547
    if = v5548
    df = v5549
    of = v5550
    iopl0 = v5551
    iopl1 = v5552
    nt = v5553
    ?15 = v5554
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v5525+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5526
    dx = v5527
    bx = v5528
    sp = v5529
    bp = v5530
    si = v5531 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5532
    es = v5533
    cs = v5534
    ss = v5535
    ds = v5536
    fs = v5537
    gs = v5538
    cf = v5619 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5540
    pf = -v5614-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5542
    af = v5618 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5544
    zf = v5617 [from 0x80483b0:add    eax, 0x04]
    sf = v5616 [from 0x80483b0:add    eax, 0x04]
    tf = v5547
    if = v5548
    df = v5549
    of = v5622 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5551
    iopl1 = v5552
    nt = v5553
    ?15 = v5554
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v5525+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5526
    dx = v5527
    bx = v5528
    sp = v5529
    bp = v5530
    si = v5531 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5532
    es = v5533
    cs = v5534
    ss = v5535
    ds = v5536
    fs = v5537
    gs = v5538
    cf = v5619 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5540
    pf = -v5614-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5542
    af = v5618 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5544
    zf = v5617 [from 0x80483b0:add    eax, 0x04]
    sf = v5616 [from 0x80483b0:add    eax, 0x04]
    tf = v5547
    if = v5548
    df = v5549
    of = v5622 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5551
    iopl1 = v5552
    nt = v5553
    ?15 = v5554
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v5525+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v5525+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5526
    dx = v5527
    bx = v5528
    sp = v5529-0x4 [from 0x80483b8:call   edx]
    bp = v5530
    si = v5531 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5532
    es = v5533
    cs = v5534
    ss = v5535
    ds = v5536
    fs = v5537
    gs = v5538
    cf = v5619 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5540
    pf = -v5614-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5542
    af = v5618 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5544
    zf = v5617 [from 0x80483b0:add    eax, 0x04]
    sf = v5616 [from 0x80483b0:add    eax, 0x04]
    tf = v5547
    if = v5548
    df = v5549
    of = v5622 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5551
    iopl1 = v5552
    nt = v5553
    ?15 = v5554
    memory = {
        size=4; addr=v5529-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v5527
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v5878 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5846
    dx = v5847
    bx = v5848
    sp = v5849
    bp = v5850
    si = v5851
    di = v5852
    es = v5853
    cs = v5854
    ss = v5855
    ds = v5856
    fs = v5857
    gs = v5858
    cf = v5859
    ?1 = v5860
    pf = v5861
    ?3 = v5862
    af = v5863
    ?5 = v5864
    zf = v5865
    sf = v5866
    tf = v5867
    if = v5868
    df = v5869
    of = v5870
    iopl0 = v5871
    iopl1 = v5872
    nt = v5873
    ?15 = v5874
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v5878 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5846
    dx = v5912 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5848
    sp = v5849
    bp = v5850
    si = v5851
    di = v5852
    es = v5853
    cs = v5854
    ss = v5855
    ds = v5856
    fs = v5857
    gs = v5858
    cf = v5859
    ?1 = v5860
    pf = v5861
    ?3 = v5862
    af = v5863
    ?5 = v5864
    zf = v5865
    sf = v5866
    tf = v5867
    if = v5868
    df = v5869
    of = v5870
    iopl0 = v5871
    iopl1 = v5872
    nt = v5873
    ?15 = v5874
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v5878 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5846
    dx = v5912 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5848
    sp = v5849
    bp = v5850
    si = v5851
    di = v5852
    es = v5853
    cs = v5854
    ss = v5855
    ds = v5856
    fs = v5857
    gs = v5858
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v5860
    pf = -v5961-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v5862
    af = <top>
    ?5 = v5864
    zf = v5964 [from 0x80483c1:test   edx, edx]
    sf = v5963 [from 0x80483c1:test   edx, edx]
    tf = v5867
    if = v5868
    df = v5869
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v5871
    iopl1 = v5872
    nt = v5873
    ?15 = v5874
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v5878 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5846
    dx = v5912 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5848
    sp = v5849
    bp = v5850
    si = v5851
    di = v5852
    es = v5853
    cs = v5854
    ss = v5855
    ds = v5856
    fs = v5857
    gs = v5858
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v5860
    pf = -v5961-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v5862
    af = <top>
    ?5 = v5864
    zf = v5964 [from 0x80483c1:test   edx, edx]
    sf = v5963 [from 0x80483c1:test   edx, edx]
    tf = v5867
    if = v5868
    df = v5869
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v5871
    iopl1 = v5872
    nt = v5873
    ?15 = v5874
    memory = {}
    ip = v6002 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v6124
    cx = v6125
    dx = v6126
    bx = v6127
    sp = v6128
    bp = v6129
    si = v6130
    di = v6131
    es = v6132
    cs = v6133
    ss = v6134
    ds = v6135
    fs = v6136
    gs = v6137
    cf = v6138
    ?1 = v6139
    pf = v6140
    ?3 = v6141
    af = v6142
    ?5 = v6143
    zf = v6144
    sf = v6145
    tf = v6146
    if = v6147
    df = v6148
    of = v6149
    iopl0 = v6150
    iopl1 = v6151
    nt = v6152
    ?15 = v6153
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v6124
    cx = v6125
    dx = v6126
    bx = v6127
    sp = v6129+0x4 [from 0x80483cc:leave  ]
    bp = v6194 [from 0x80483cc:leave  ]
    si = v6130
    di = v6131
    es = v6132
    cs = v6133
    ss = v6134
    ds = v6135
    fs = v6136
    gs = v6137
    cf = v6138
    ?1 = v6139
    pf = v6140
    ?3 = v6141
    af = v6142
    ?5 = v6143
    zf = v6144
    sf = v6145
    tf = v6146
    if = v6147
    df = v6148
    of = v6149
    iopl0 = v6150
    iopl1 = v6151
    nt = v6152
    ?15 = v6153
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v6124
    cx = v6125
    dx = v6126
    bx = v6127
    sp = v6129+0x8 [from 0x80483cd:ret    ]
    bp = v6194 [from 0x80483cc:leave  ]
    si = v6130
    di = v6131
    es = v6132
    cs = v6133
    ss = v6134
    ds = v6135
    fs = v6136
    gs = v6137
    cf = v6138
    ?1 = v6139
    pf = v6140
    ?3 = v6141
    af = v6142
    ?5 = v6143
    zf = v6144
    sf = v6145
    tf = v6146
    if = v6147
    df = v6148
    of = v6149
    iopl0 = v6150
    iopl1 = v6151
    nt = v6152
    ?15 = v6153
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v6232 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ce:mov    esi, esi
    ax = v6294
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298
    bp = v6299
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = v6308
    ?1 = v6309
    pf = v6310
    ?3 = v6311
    af = v6312
    ?5 = v6313
    zf = v6314
    sf = v6315
    tf = v6316
    if = v6317
    df = v6318
    of = v6319
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {}
    ip = 0x80483d0 [from 0x80483ce:mov    esi, esi]
0x80483d0:push   ebp
    ax = v6294
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0x4 [from 0x80483d0:push   ebp]
    bp = v6299
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = v6308
    ?1 = v6309
    pf = v6310
    ?3 = v6311
    af = v6312
    ?5 = v6313
    zf = v6314
    sf = v6315
    tf = v6316
    if = v6317
    df = v6318
    of = v6319
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v6294
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0x4 [from 0x80483d0:push   ebp]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = v6308
    ?1 = v6309
    pf = v6310
    ?3 = v6311
    af = v6312
    ?5 = v6313
    zf = v6314
    sf = v6315
    tf = v6316
    if = v6317
    df = v6318
    of = v6319
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v6294
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = -v6457-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v6309
    pf = -v6451-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v6311
    af = -v6455-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v6313
    zf = v6454 [from 0x80483d3:sub    esp, 0x08]
    sf = v6453 [from 0x80483d3:sub    esp, 0x08]
    tf = v6316
    if = v6317
    df = v6318
    of = v6461 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v6496 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = -v6457-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v6309
    pf = -v6451-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v6311
    af = -v6455-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v6313
    zf = v6454 [from 0x80483d3:sub    esp, 0x08]
    sf = v6453 [from 0x80483d3:sub    esp, 0x08]
    tf = v6316
    if = v6317
    df = v6318
    of = v6461 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v6496 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v6309
    pf = -v6545-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v6311
    af = <top>
    ?5 = v6313
    zf = v6548 [from 0x80483db:test   eax, eax]
    sf = v6547 [from 0x80483db:test   eax, eax]
    tf = v6316
    if = v6317
    df = v6318
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v6496 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v6309
    pf = -v6545-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v6311
    af = <top>
    ?5 = v6313
    zf = v6548 [from 0x80483db:test   eax, eax]
    sf = v6547 [from 0x80483db:test   eax, eax]
    tf = v6316
    if = v6317
    df = v6318
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = v6585 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6711
    bp = v6712
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = v6721
    ?1 = v6722
    pf = v6723
    ?3 = v6724
    af = v6725
    ?5 = v6726
    zf = v6727
    sf = v6728
    tf = v6729
    if = v6730
    df = v6731
    of = v6732
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6711
    bp = v6712
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6711
    bp = v6712
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6712
    bp = v6712
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6712+0x4 [from 0x8048402:pop    ebp]
    bp = v6895 [from 0x8048402:pop    ebp]
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6712+0x8 [from 0x8048403:ret    ]
    bp = v6895 [from 0x8048402:pop    ebp]
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = v6933 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048404:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x8048405 [from 0x8048404:nop    ]
0x8048405:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x8048406 [from 0x8048405:nop    ]
0x8048406:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x8048407 [from 0x8048406:nop    ]
0x8048407:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x8048408 [from 0x8048407:nop    ]
0x8048408:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x8048409 [from 0x8048408:nop    ]
0x8048409:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x804840a [from 0x8048409:nop    ]
0x804840a:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x804840b [from 0x804840a:nop    ]
0x804840b:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x804840c [from 0x804840b:nop    ]
0x804840c:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x804840d [from 0x804840c:nop    ]
0x804840d:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x804840e [from 0x804840d:nop    ]
0x804840e:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x804840f [from 0x804840e:nop    ]
0x804840f:nop    
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {}
    ip = 0x8048410 [from 0x804840f:nop    ]
0x8048410:push   ebp
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999-0x4 [from 0x8048410:push   ebp]
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v6999-0x4 [from 0x8048410:push   ebp]; value=v7000
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v6995
    cx = v6996
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6998
    sp = v6999-0x4 [from 0x8048410:push   ebp]
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v6999-0x4 [from 0x8048410:push   ebp]; value=v7000
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v6995
    cx = v6996
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6998
    sp = v6999-0x4 [from 0x8048410:push   ebp]
    bp = v6999-0x4 [from 0x8048410:push   ebp]
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v6999-0x4 [from 0x8048410:push   ebp]; value=v7000
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v6995
    cx = v6996
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6998
    sp = v6999-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v6999-0x4 [from 0x8048410:push   ebp]
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = -v7543-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v7010
    pf = -v7537-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v7012
    af = -v7541-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v7014
    zf = v7540 [from 0x8048418:sub    esp, 0x08]
    sf = v7539 [from 0x8048418:sub    esp, 0x08]
    tf = v7017
    if = v7018
    df = v7019
    of = v7547 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v6999-0x4 [from 0x8048410:push   ebp]; value=v7000
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v6995
    cx = v6996
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6998
    sp = v7581 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6999-0x4 [from 0x8048410:push   ebp]
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v7010
    pf = -v7597-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v7012
    af = <top>
    ?5 = v7014
    zf = v7600 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v7599 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v7017
    if = v7018
    df = v7019
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v6999-0x4 [from 0x8048410:push   ebp]; value=v7000
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v6995
    cx = v6996
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6998
    sp = v7581 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6999-0x4 [from 0x8048410:push   ebp]
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v7010
    pf = -v7597-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v7012
    af = <top>
    ?5 = v7014
    zf = v7600 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v7599 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v7017
    if = v7018
    df = v7019
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v7581+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v6995
    cx = v6996
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6998
    sp = v7581 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6999-0x4 [from 0x8048410:push   ebp]
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v7010
    pf = -v7597-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v7012
    af = <top>
    ?5 = v7014
    zf = v7600 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v7599 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v7017
    if = v7018
    df = v7019
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v7581 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v7581+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v6995
    cx = v6996
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6998
    sp = v7581-0x4 [from 0x8048429:call   0x080482f0]
    bp = v6999-0x4 [from 0x8048410:push   ebp]
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v7010
    pf = -v7597-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v7012
    af = <top>
    ?5 = v7014
    zf = v7600 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v7599 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v7017
    if = v7018
    df = v7019
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v7581 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v7581+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v7581-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v7893
    cx = v7894
    dx = v7895
    bx = v7896
    sp = v7898
    bp = v7898
    si = v7899
    di = v7900
    es = v7901
    cs = v7902
    ss = v7903
    ds = v7904
    fs = v7905
    gs = v7906
    cf = v7907
    ?1 = v7908
    pf = v7909
    ?3 = v7910
    af = v7911
    ?5 = v7912
    zf = v7913
    sf = v7914
    tf = v7915
    if = v7916
    df = v7917
    of = v7918
    iopl0 = v7919
    iopl1 = v7920
    nt = v7921
    ?15 = v7922
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v7894
    dx = v7895
    bx = v7896
    sp = v7898
    bp = v7898
    si = v7899
    di = v7900
    es = v7901
    cs = v7902
    ss = v7903
    ds = v7904
    fs = v7905
    gs = v7906
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v7908
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v7910
    af = <top>
    ?5 = v7912
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v7915
    if = v7916
    df = v7917
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v7919
    iopl1 = v7920
    nt = v7921
    ?15 = v7922
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v7894
    dx = v7895
    bx = v7896
    sp = v7898+0x4 [from 0x8048432:pop    ebp]
    bp = v8014 [from 0x8048432:pop    ebp]
    si = v7899
    di = v7900
    es = v7901
    cs = v7902
    ss = v7903
    ds = v7904
    fs = v7905
    gs = v7906
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v7908
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v7910
    af = <top>
    ?5 = v7912
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v7915
    if = v7916
    df = v7917
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v7919
    iopl1 = v7920
    nt = v7921
    ?15 = v7922
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v7894
    dx = v7895
    bx = v7896
    sp = v7898+0x8 [from 0x8048433:ret    ]
    bp = v8014 [from 0x8048432:pop    ebp]
    si = v7899
    di = v7900
    es = v7901
    cs = v7902
    ss = v7903
    ds = v7904
    fs = v7905
    gs = v7906
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v7908
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v7910
    af = <top>
    ?5 = v7912
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v7915
    if = v7916
    df = v7917
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v7919
    iopl1 = v7920
    nt = v7921
    ?15 = v7922
    memory = {}
    ip = v8052 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048434:lea    esi, [esi + 0x00000000]
    ax = v8114
    cx = v8115
    dx = v8116
    bx = v8117
    sp = v8118
    bp = v8119
    si = v8120 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8121
    es = v8122
    cs = v8123
    ss = v8124
    ds = v8125
    fs = v8126
    gs = v8127
    cf = v8128
    ?1 = v8129
    pf = v8130
    ?3 = v8131
    af = v8132
    ?5 = v8133
    zf = v8134
    sf = v8135
    tf = v8136
    if = v8137
    df = v8138
    of = v8139
    iopl0 = v8140
    iopl1 = v8141
    nt = v8142
    ?15 = v8143
    memory = {}
    ip = 0x804843a [from 0x8048434:lea    esi, [esi + 0x00000000]]
0x804843a:lea    edi, [edi + 0x00000000]
    ax = v8114
    cx = v8115
    dx = v8116
    bx = v8117
    sp = v8118
    bp = v8119
    si = v8120 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8121 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8122
    cs = v8123
    ss = v8124
    ds = v8125
    fs = v8126
    gs = v8127
    cf = v8128
    ?1 = v8129
    pf = v8130
    ?3 = v8131
    af = v8132
    ?5 = v8133
    zf = v8134
    sf = v8135
    tf = v8136
    if = v8137
    df = v8138
    of = v8139
    iopl0 = v8140
    iopl1 = v8141
    nt = v8142
    ?15 = v8143
    memory = {}
    ip = 0x8048440 [from 0x804843a:lea    edi, [edi + 0x00000000]]
0x8048440:push   ebp
    ax = v8114
    cx = v8115
    dx = v8116
    bx = v8117
    sp = v8118-0x4 [from 0x8048440:push   ebp]
    bp = v8119
    si = v8120 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8121 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8122
    cs = v8123
    ss = v8124
    ds = v8125
    fs = v8126
    gs = v8127
    cf = v8128
    ?1 = v8129
    pf = v8130
    ?3 = v8131
    af = v8132
    ?5 = v8133
    zf = v8134
    sf = v8135
    tf = v8136
    if = v8137
    df = v8138
    of = v8139
    iopl0 = v8140
    iopl1 = v8141
    nt = v8142
    ?15 = v8143
    memory = {
        size=4; addr=v8118-0x4 [from 0x8048440:push   ebp]; value=v8119
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v8114
    cx = v8115
    dx = v8116
    bx = v8117
    sp = v8118-0x4 [from 0x8048440:push   ebp]
    bp = v8118-0x4 [from 0x8048440:push   ebp]
    si = v8120 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8121 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8122
    cs = v8123
    ss = v8124
    ds = v8125
    fs = v8126
    gs = v8127
    cf = v8128
    ?1 = v8129
    pf = v8130
    ?3 = v8131
    af = v8132
    ?5 = v8133
    zf = v8134
    sf = v8135
    tf = v8136
    if = v8137
    df = v8138
    of = v8139
    iopl0 = v8140
    iopl1 = v8141
    nt = v8142
    ?15 = v8143
    memory = {
        size=4; addr=v8118-0x4 [from 0x8048440:push   ebp]; value=v8119
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v8114
    cx = v8115
    dx = v8116
    bx = v8117
    sp = v8118-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v8118-0x4 [from 0x8048440:push   ebp]
    si = v8120 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8121 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8122
    cs = v8123
    ss = v8124
    ds = v8125
    fs = v8126
    gs = v8127
    cf = -v8313-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v8129
    pf = -v8307-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v8131
    af = -v8311-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v8133
    zf = v8310 [from 0x8048443:sub    esp, 0x08]
    sf = v8309 [from 0x8048443:sub    esp, 0x08]
    tf = v8136
    if = v8137
    df = v8138
    of = v8317 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v8140
    iopl1 = v8141
    nt = v8142
    ?15 = v8143
    memory = {
        size=4; addr=v8118-0x4 [from 0x8048440:push   ebp]; value=v8119
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v8114
    cx = v8115
    dx = v8116
    bx = v8117
    sp = v8118-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v8118-0x4 [from 0x8048440:push   ebp]
    si = v8120 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8121 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8122
    cs = v8123
    ss = v8124
    ds = v8125
    fs = v8126
    gs = v8127
    cf = -v8313-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v8129
    pf = -v8307-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v8131
    af = -v8311-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v8133
    zf = v8310 [from 0x8048443:sub    esp, 0x08]
    sf = v8309 [from 0x8048443:sub    esp, 0x08]
    tf = v8136
    if = v8137
    df = v8138
    of = v8317 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v8140
    iopl1 = v8141
    nt = v8142
    ?15 = v8143
    memory = {
        size=4; addr=v8118-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8118-0x4 [from 0x8048440:push   ebp]; value=v8119
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v8114
    cx = v8115
    dx = v8116
    bx = v8117
    sp = v8118-0x10 [from 0x804844d:call   0x08048300]
    bp = v8118-0x4 [from 0x8048440:push   ebp]
    si = v8120 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8121 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8122
    cs = v8123
    ss = v8124
    ds = v8125
    fs = v8126
    gs = v8127
    cf = -v8313-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v8129
    pf = -v8307-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v8131
    af = -v8311-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v8133
    zf = v8310 [from 0x8048443:sub    esp, 0x08]
    sf = v8309 [from 0x8048443:sub    esp, 0x08]
    tf = v8136
    if = v8137
    df = v8138
    of = v8317 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v8140
    iopl1 = v8141
    nt = v8142
    ?15 = v8143
    memory = {
        size=4; addr=v8118-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v8118-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8118-0x4 [from 0x8048440:push   ebp]; value=v8119
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v8571
    cx = v8572
    dx = v8573
    bx = v8574
    sp = v8576
    bp = v8576
    si = v8577
    di = v8578
    es = v8579
    cs = v8580
    ss = v8581
    ds = v8582
    fs = v8583
    gs = v8584
    cf = v8585
    ?1 = v8586
    pf = v8587
    ?3 = v8588
    af = v8589
    ?5 = v8590
    zf = v8591
    sf = v8592
    tf = v8593
    if = v8594
    df = v8595
    of = v8596
    iopl0 = v8597
    iopl1 = v8598
    nt = v8599
    ?15 = v8600
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v8571
    cx = v8572
    dx = v8573
    bx = v8574
    sp = v8576+0x4 [from 0x8048454:pop    ebp]
    bp = v8637 [from 0x8048454:pop    ebp]
    si = v8577
    di = v8578
    es = v8579
    cs = v8580
    ss = v8581
    ds = v8582
    fs = v8583
    gs = v8584
    cf = v8585
    ?1 = v8586
    pf = v8587
    ?3 = v8588
    af = v8589
    ?5 = v8590
    zf = v8591
    sf = v8592
    tf = v8593
    if = v8594
    df = v8595
    of = v8596
    iopl0 = v8597
    iopl1 = v8598
    nt = v8599
    ?15 = v8600
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v8571
    cx = v8572
    dx = v8573
    bx = v8574
    sp = v8576+0x8 [from 0x8048455:ret    ]
    bp = v8637 [from 0x8048454:pop    ebp]
    si = v8577
    di = v8578
    es = v8579
    cs = v8580
    ss = v8581
    ds = v8582
    fs = v8583
    gs = v8584
    cf = v8585
    ?1 = v8586
    pf = v8587
    ?3 = v8588
    af = v8589
    ?5 = v8590
    zf = v8591
    sf = v8592
    tf = v8593
    if = v8594
    df = v8595
    of = v8596
    iopl0 = v8597
    iopl1 = v8598
    nt = v8599
    ?15 = v8600
    memory = {}
    ip = v8675 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048456:lea    esi, [esi + 0x00]
    ax = v8737
    cx = v8738
    dx = v8739
    bx = v8740
    sp = v8741
    bp = v8742
    si = v8743 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8744
    es = v8745
    cs = v8746
    ss = v8747
    ds = v8748
    fs = v8749
    gs = v8750
    cf = v8751
    ?1 = v8752
    pf = v8753
    ?3 = v8754
    af = v8755
    ?5 = v8756
    zf = v8757
    sf = v8758
    tf = v8759
    if = v8760
    df = v8761
    of = v8762
    iopl0 = v8763
    iopl1 = v8764
    nt = v8765
    ?15 = v8766
    memory = {}
    ip = 0x8048459 [from 0x8048456:lea    esi, [esi + 0x00]]
0x8048459:lea    edi, [edi + 0x00000000]
    ax = v8737
    cx = v8738
    dx = v8739
    bx = v8740
    sp = v8741
    bp = v8742
    si = v8743 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8744 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8745
    cs = v8746
    ss = v8747
    ds = v8748
    fs = v8749
    gs = v8750
    cf = v8751
    ?1 = v8752
    pf = v8753
    ?3 = v8754
    af = v8755
    ?5 = v8756
    zf = v8757
    sf = v8758
    tf = v8759
    if = v8760
    df = v8761
    of = v8762
    iopl0 = v8763
    iopl1 = v8764
    nt = v8765
    ?15 = v8766
    memory = {}
    ip = 0x8048460 [from 0x8048459:lea    edi, [edi + 0x00000000]]
0x8048460:push   ebp
    ax = v8737
    cx = v8738
    dx = v8739
    bx = v8740
    sp = v8741-0x4 [from 0x8048460:push   ebp]
    bp = v8742
    si = v8743 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8744 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8745
    cs = v8746
    ss = v8747
    ds = v8748
    fs = v8749
    gs = v8750
    cf = v8751
    ?1 = v8752
    pf = v8753
    ?3 = v8754
    af = v8755
    ?5 = v8756
    zf = v8757
    sf = v8758
    tf = v8759
    if = v8760
    df = v8761
    of = v8762
    iopl0 = v8763
    iopl1 = v8764
    nt = v8765
    ?15 = v8766
    memory = {
        size=4; addr=v8741-0x4 [from 0x8048460:push   ebp]; value=v8742
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v8737
    cx = v8738
    dx = v8739
    bx = v8740
    sp = v8741-0x4 [from 0x8048460:push   ebp]
    bp = v8741-0x4 [from 0x8048460:push   ebp]
    si = v8743 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8744 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8745
    cs = v8746
    ss = v8747
    ds = v8748
    fs = v8749
    gs = v8750
    cf = v8751
    ?1 = v8752
    pf = v8753
    ?3 = v8754
    af = v8755
    ?5 = v8756
    zf = v8757
    sf = v8758
    tf = v8759
    if = v8760
    df = v8761
    of = v8762
    iopl0 = v8763
    iopl1 = v8764
    nt = v8765
    ?15 = v8766
    memory = {
        size=4; addr=v8741-0x4 [from 0x8048460:push   ebp]; value=v8742
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v8737
    cx = v8738
    dx = v8739
    bx = v8740
    sp = v8741-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v8741-0x4 [from 0x8048460:push   ebp]
    si = v8743 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8744 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8745
    cs = v8746
    ss = v8747
    ds = v8748
    fs = v8749
    gs = v8750
    cf = -v8936-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v8752
    pf = -v8930-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v8754
    af = -v8934-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v8756
    zf = v8933 [from 0x8048463:sub    esp, 0x08]
    sf = v8932 [from 0x8048463:sub    esp, 0x08]
    tf = v8759
    if = v8760
    df = v8761
    of = v8940 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v8763
    iopl1 = v8764
    nt = v8765
    ?15 = v8766
    memory = {
        size=4; addr=v8741-0x4 [from 0x8048460:push   ebp]; value=v8742
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v8737
    cx = v8738
    dx = v8739
    bx = v8740
    sp = v8741-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v8741-0x4 [from 0x8048460:push   ebp]
    si = v8743 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8744 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8745
    cs = v8746
    ss = v8747
    ds = v8748
    fs = v8749
    gs = v8750
    cf = -v8936-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v8752
    pf = -v8930-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v8754
    af = -v8934-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v8756
    zf = v8933 [from 0x8048463:sub    esp, 0x08]
    sf = v8932 [from 0x8048463:sub    esp, 0x08]
    tf = v8759
    if = v8760
    df = v8761
    of = v8940 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v8763
    iopl1 = v8764
    nt = v8765
    ?15 = v8766
    memory = {
        size=4; addr=v8741-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8741-0x4 [from 0x8048460:push   ebp]; value=v8742
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v8737
    cx = v8738
    dx = v8739
    bx = v8740
    sp = v8741-0x10 [from 0x804846d:call   0x08048300]
    bp = v8741-0x4 [from 0x8048460:push   ebp]
    si = v8743 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8744 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8745
    cs = v8746
    ss = v8747
    ds = v8748
    fs = v8749
    gs = v8750
    cf = -v8936-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v8752
    pf = -v8930-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v8754
    af = -v8934-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v8756
    zf = v8933 [from 0x8048463:sub    esp, 0x08]
    sf = v8932 [from 0x8048463:sub    esp, 0x08]
    tf = v8759
    if = v8760
    df = v8761
    of = v8940 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v8763
    iopl1 = v8764
    nt = v8765
    ?15 = v8766
    memory = {
        size=4; addr=v8741-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v8741-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8741-0x4 [from 0x8048460:push   ebp]; value=v8742
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v9194
    cx = v9195
    dx = v9196
    bx = v9197
    sp = v9198
    bp = v9199
    si = v9200
    di = v9201
    es = v9202
    cs = v9203
    ss = v9204
    ds = v9205
    fs = v9206
    gs = v9207
    cf = v9208
    ?1 = v9209
    pf = v9210
    ?3 = v9211
    af = v9212
    ?5 = v9213
    zf = v9214
    sf = v9215
    tf = v9216
    if = v9217
    df = v9218
    of = v9219
    iopl0 = v9220
    iopl1 = v9221
    nt = v9222
    ?15 = v9223
    memory = {
        size=4; addr=v9198; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v9194
    cx = v9195
    dx = v9196
    bx = v9197
    sp = v9198-0x4 [from 0x8048479:call   0x08048320]
    bp = v9199
    si = v9200
    di = v9201
    es = v9202
    cs = v9203
    ss = v9204
    ds = v9205
    fs = v9206
    gs = v9207
    cf = v9208
    ?1 = v9209
    pf = v9210
    ?3 = v9211
    af = v9212
    ?5 = v9213
    zf = v9214
    sf = v9215
    tf = v9216
    if = v9217
    df = v9218
    of = v9219
    iopl0 = v9220
    iopl1 = v9221
    nt = v9222
    ?15 = v9223
    memory = {
        size=4; addr=v9198; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v9198-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804847e:mov    esi, esi
    ax = v9446
    cx = v9447
    dx = v9448
    bx = v9449
    sp = v9450
    bp = v9451
    si = v9452
    di = v9453
    es = v9454
    cs = v9455
    ss = v9456
    ds = v9457
    fs = v9458
    gs = v9459
    cf = v9460
    ?1 = v9461
    pf = v9462
    ?3 = v9463
    af = v9464
    ?5 = v9465
    zf = v9466
    sf = v9467
    tf = v9468
    if = v9469
    df = v9470
    of = v9471
    iopl0 = v9472
    iopl1 = v9473
    nt = v9474
    ?15 = v9475
    memory = {}
    ip = 0x8048480 [from 0x804847e:mov    esi, esi]
0x8048480:push   ebp
    ax = v9446
    cx = v9447
    dx = v9448
    bx = v9449
    sp = v9450-0x4 [from 0x8048480:push   ebp]
    bp = v9451
    si = v9452
    di = v9453
    es = v9454
    cs = v9455
    ss = v9456
    ds = v9457
    fs = v9458
    gs = v9459
    cf = v9460
    ?1 = v9461
    pf = v9462
    ?3 = v9463
    af = v9464
    ?5 = v9465
    zf = v9466
    sf = v9467
    tf = v9468
    if = v9469
    df = v9470
    of = v9471
    iopl0 = v9472
    iopl1 = v9473
    nt = v9474
    ?15 = v9475
    memory = {
        size=4; addr=v9450-0x4 [from 0x8048480:push   ebp]; value=v9451
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v9446
    cx = v9447
    dx = v9448
    bx = v9449
    sp = v9450-0x4 [from 0x8048480:push   ebp]
    bp = v9450-0x4 [from 0x8048480:push   ebp]
    si = v9452
    di = v9453
    es = v9454
    cs = v9455
    ss = v9456
    ds = v9457
    fs = v9458
    gs = v9459
    cf = v9460
    ?1 = v9461
    pf = v9462
    ?3 = v9463
    af = v9464
    ?5 = v9465
    zf = v9466
    sf = v9467
    tf = v9468
    if = v9469
    df = v9470
    of = v9471
    iopl0 = v9472
    iopl1 = v9473
    nt = v9474
    ?15 = v9475
    memory = {
        size=4; addr=v9450-0x4 [from 0x8048480:push   ebp]; value=v9451
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v9446
    cx = v9447
    dx = v9448
    bx = v9449
    sp = v9450-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v9450-0x4 [from 0x8048480:push   ebp]
    si = v9452
    di = v9453
    es = v9454
    cs = v9455
    ss = v9456
    ds = v9457
    fs = v9458
    gs = v9459
    cf = -v9609-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v9461
    pf = -v9603-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v9463
    af = -v9607-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v9465
    zf = v9606 [from 0x8048483:sub    esp, 0x08]
    sf = v9605 [from 0x8048483:sub    esp, 0x08]
    tf = v9468
    if = v9469
    df = v9470
    of = v9613 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v9472
    iopl1 = v9473
    nt = v9474
    ?15 = v9475
    memory = {
        size=4; addr=v9450-0x4 [from 0x8048480:push   ebp]; value=v9451
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v9446
    cx = v9447
    dx = v9448
    bx = v9449
    sp = v9450-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v9450-0x4 [from 0x8048480:push   ebp]
    si = v9452
    di = v9453
    es = v9454
    cs = v9455
    ss = v9456
    ds = v9457
    fs = v9458
    gs = v9459
    cf = -v9609-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v9461
    pf = -v9673-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v9463
    af = v9677 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v9465
    zf = v9676 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v9675 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v9468
    if = v9469
    df = v9470
    of = v9680 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v9472
    iopl1 = v9473
    nt = v9474
    ?15 = v9475
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v9648+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v9446
    cx = v9447
    dx = v9448
    bx = v9449
    sp = v9450-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v9450-0x4 [from 0x8048480:push   ebp]
    si = v9452
    di = v9453
    es = v9454
    cs = v9455
    ss = v9456
    ds = v9457
    fs = v9458
    gs = v9459
    cf = -v9609-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v9461
    pf = -v9673-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v9463
    af = v9677 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v9465
    zf = v9676 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v9675 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v9468
    if = v9469
    df = v9470
    of = v9680 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v9472
    iopl1 = v9473
    nt = v9474
    ?15 = v9475
    memory = {
        size=4; addr=v9450-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v9446
    cx = v9447
    dx = v9448
    bx = v9449
    sp = v9450-0x10 [from 0x8048493:call   0x08048300]
    bp = v9450-0x4 [from 0x8048480:push   ebp]
    si = v9452
    di = v9453
    es = v9454
    cs = v9455
    ss = v9456
    ds = v9457
    fs = v9458
    gs = v9459
    cf = -v9609-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v9461
    pf = -v9673-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v9463
    af = v9677 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v9465
    zf = v9676 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v9675 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v9468
    if = v9469
    df = v9470
    of = v9680 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v9472
    iopl1 = v9473
    nt = v9474
    ?15 = v9475
    memory = {
        size=4; addr=v9450-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v9450-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v9937
    cx = v9938
    dx = v9939
    bx = v9940
    sp = v9941
    bp = v9942
    si = v9943
    di = v9944
    es = v9945
    cs = v9946
    ss = v9947
    ds = v9948
    fs = v9949
    gs = v9950
    cf = v9951
    ?1 = v9952
    pf = v9953
    ?3 = v9954
    af = v9955
    ?5 = v9956
    zf = v9957
    sf = v9958
    tf = v9959
    if = v9960
    df = v9961
    of = v9962
    iopl0 = v9963
    iopl1 = v9964
    nt = v9965
    ?15 = v9966
    memory = {
        size=4; addr=v9941; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v9937
    cx = v9938
    dx = v9939
    bx = v9940
    sp = v9941-0x4 [from 0x804849f:call   0x08048320]
    bp = v9942
    si = v9943
    di = v9944
    es = v9945
    cs = v9946
    ss = v9947
    ds = v9948
    fs = v9949
    gs = v9950
    cf = v9951
    ?1 = v9952
    pf = v9953
    ?3 = v9954
    af = v9955
    ?5 = v9956
    zf = v9957
    sf = v9958
    tf = v9959
    if = v9960
    df = v9961
    of = v9962
    iopl0 = v9963
    iopl1 = v9964
    nt = v9965
    ?15 = v9966
    memory = {
        size=4; addr=v9941; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v9941-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484a4:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484a5 [from 0x80484a4:nop    ]
0x80484a5:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484a6 [from 0x80484a5:nop    ]
0x80484a6:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484a7 [from 0x80484a6:nop    ]
0x80484a7:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484a8 [from 0x80484a7:nop    ]
0x80484a8:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484a9 [from 0x80484a8:nop    ]
0x80484a9:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484aa [from 0x80484a9:nop    ]
0x80484aa:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484ab [from 0x80484aa:nop    ]
0x80484ab:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484ac [from 0x80484ab:nop    ]
0x80484ac:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484ad [from 0x80484ac:nop    ]
0x80484ad:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484ae [from 0x80484ad:nop    ]
0x80484ae:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484af [from 0x80484ae:nop    ]
0x80484af:nop    
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {}
    ip = 0x80484b0 [from 0x80484af:nop    ]
0x80484b0:push   ebp
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193-0x4 [from 0x80484b0:push   ebp]
    bp = v10194
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {
        size=4; addr=v10193-0x4 [from 0x80484b0:push   ebp]; value=v10194
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193-0x4 [from 0x80484b0:push   ebp]
    bp = v10193-0x4 [from 0x80484b0:push   ebp]
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {
        size=4; addr=v10193-0x4 [from 0x80484b0:push   ebp]; value=v10194
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193-0x8 [from 0x80484b3:push   edi]
    bp = v10193-0x4 [from 0x80484b0:push   ebp]
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {
        size=4; addr=v10193-0x8 [from 0x80484b3:push   edi]; value=v10196
        size=4; addr=v10193-0x4 [from 0x80484b0:push   ebp]; value=v10194
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193-0xc [from 0x80484b4:push   esi]
    bp = v10193-0x4 [from 0x80484b0:push   ebp]
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {
        size=4; addr=v10193-0xc [from 0x80484b4:push   esi]; value=v10195
        size=4; addr=v10193-0x8 [from 0x80484b3:push   edi]; value=v10196
        size=4; addr=v10193-0x4 [from 0x80484b0:push   ebp]; value=v10194
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193-0x10 [from 0x80484b5:push   ebx]
    bp = v10193-0x4 [from 0x80484b0:push   ebp]
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = v10203
    ?1 = v10204
    pf = v10205
    ?3 = v10206
    af = v10207
    ?5 = v10208
    zf = v10209
    sf = v10210
    tf = v10211
    if = v10212
    df = v10213
    of = v10214
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {
        size=4; addr=v10193-0x10 [from 0x80484b5:push   ebx]; value=v10192
        size=4; addr=v10193-0xc [from 0x80484b4:push   esi]; value=v10195
        size=4; addr=v10193-0x8 [from 0x80484b3:push   edi]; value=v10196
        size=4; addr=v10193-0x4 [from 0x80484b0:push   ebp]; value=v10194
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v10193-0x4 [from 0x80484b0:push   ebp]
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = -v10812-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v10204
    pf = -v10806-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v10206
    af = -v10810-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v10208
    zf = v10809 [from 0x80484b6:sub    esp, 0x0c]
    sf = v10808 [from 0x80484b6:sub    esp, 0x0c]
    tf = v10211
    if = v10212
    df = v10213
    of = v10816 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {
        size=4; addr=v10193-0x10 [from 0x80484b5:push   ebx]; value=v10192
        size=4; addr=v10193-0xc [from 0x80484b4:push   esi]; value=v10195
        size=4; addr=v10193-0x8 [from 0x80484b3:push   edi]; value=v10196
        size=4; addr=v10193-0x4 [from 0x80484b0:push   ebp]; value=v10194
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v10189
    cx = v10190
    dx = v10191
    bx = v10192
    sp = v10193-0x20 [from 0x80484b9:call   0x080484be]
    bp = v10193-0x4 [from 0x80484b0:push   ebp]
    si = v10195
    di = v10196
    es = v10197
    cs = v10198
    ss = v10199
    ds = v10200
    fs = v10201
    gs = v10202
    cf = -v10812-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v10204
    pf = -v10806-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v10206
    af = -v10810-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v10208
    zf = v10809 [from 0x80484b6:sub    esp, 0x0c]
    sf = v10808 [from 0x80484b6:sub    esp, 0x0c]
    tf = v10211
    if = v10212
    df = v10213
    of = v10816 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v10215
    iopl1 = v10216
    nt = v10217
    ?15 = v10218
    memory = {
        size=4; addr=v10193-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v10193-0x10 [from 0x80484b5:push   ebx]; value=v10192
        size=4; addr=v10193-0xc [from 0x80484b4:push   esi]; value=v10195
        size=4; addr=v10193-0x8 [from 0x80484b3:push   edi]; value=v10196
        size=4; addr=v10193-0x4 [from 0x80484b0:push   ebp]; value=v10194
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v10945
    cx = v10946
    dx = v10947
    bx = v10979 [from 0x80484be:pop    ebx]
    sp = v10949+0x4 [from 0x80484be:pop    ebx]
    bp = v10950
    si = v10951
    di = v10952
    es = v10953
    cs = v10954
    ss = v10955
    ds = v10956
    fs = v10957
    gs = v10958
    cf = v10959
    ?1 = v10960
    pf = v10961
    ?3 = v10962
    af = v10963
    ?5 = v10964
    zf = v10965
    sf = v10966
    tf = v10967
    if = v10968
    df = v10969
    of = v10970
    iopl0 = v10971
    iopl1 = v10972
    nt = v10973
    ?15 = v10974
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v10945
    cx = v10946
    dx = v10947
    bx = v10979+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v10949+0x4 [from 0x80484be:pop    ebx]
    bp = v10950
    si = v10951
    di = v10952
    es = v10953
    cs = v10954
    ss = v10955
    ds = v10956
    fs = v10957
    gs = v10958
    cf = v11041 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v10960
    pf = -v11036-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v10962
    af = v11040 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v10964
    zf = v11039 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v11038 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v10967
    if = v10968
    df = v10969
    of = v11044 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v10971
    iopl1 = v10972
    nt = v10973
    ?15 = v10974
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v10945
    cx = v10946
    dx = v10947
    bx = v10979+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v10949 [from 0x80484c5:call   0x080482c8]
    bp = v10950
    si = v10951
    di = v10952
    es = v10953
    cs = v10954
    ss = v10955
    ds = v10956
    fs = v10957
    gs = v10958
    cf = v11041 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v10960
    pf = -v11036-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v10962
    af = v11040 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v10964
    zf = v11039 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v11038 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v10967
    if = v10968
    df = v10969
    of = v11044 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v10971
    iopl1 = v10972
    nt = v10973
    ?15 = v10974
    memory = {
        size=4; addr=v10949 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v11266-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v11264
    dx = v11265
    bx = v11266
    sp = v11267
    bp = v11268
    si = v11269
    di = v11270
    es = v11271
    cs = v11272
    ss = v11273
    ds = v11274
    fs = v11275
    gs = v11276
    cf = v11277
    ?1 = v11278
    pf = v11279
    ?3 = v11280
    af = v11281
    ?5 = v11282
    zf = v11283
    sf = v11284
    tf = v11285
    if = v11286
    df = v11287
    of = v11288
    iopl0 = v11289
    iopl1 = v11290
    nt = v11291
    ?15 = v11292
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v11266-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v11264
    dx = v11266-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11266
    sp = v11267
    bp = v11268
    si = v11269
    di = v11270
    es = v11271
    cs = v11272
    ss = v11273
    ds = v11274
    fs = v11275
    gs = v11276
    cf = v11277
    ?1 = v11278
    pf = v11279
    ?3 = v11280
    af = v11281
    ?5 = v11282
    zf = v11283
    sf = v11284
    tf = v11285
    if = v11286
    df = v11287
    of = v11288
    iopl0 = v11289
    iopl1 = v11290
    nt = v11291
    ?15 = v11292
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v22532 [from 0x80484d6:sub    eax, edx]
    cx = v11264
    dx = v11266-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11266
    sp = v11267
    bp = v11268
    si = v11269
    di = v11270
    es = v11271
    cs = v11272
    ss = v11273
    ds = v11274
    fs = v11275
    gs = v11276
    cf = -v11393-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v11278
    pf = -v11387-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v11280
    af = -v11391-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v11282
    zf = v11390 [from 0x80484d6:sub    eax, edx]
    sf = v11389 [from 0x80484d6:sub    eax, edx]
    tf = v11285
    if = v11286
    df = v11287
    of = v11397 [from 0x80484d6:sub    eax, edx]
    iopl0 = v11289
    iopl1 = v11290
    nt = v11291
    ?15 = v11292
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v11436 [from 0x80484d8:sar    eax, 0x02]
    cx = v11264
    dx = v11266-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11266
    sp = v11267
    bp = v11268
    si = v11269
    di = v11270
    es = v11271
    cs = v11272
    ss = v11273
    ds = v11274
    fs = v11275
    gs = v11276
    cf = v11439 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v11278
    pf = -v11459-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v11280
    af = <top>
    ?5 = v11282
    zf = v11464 [from 0x80484d8:sar    eax, 0x02]
    sf = v11462 [from 0x80484d8:sar    eax, 0x02]
    tf = v11285
    if = v11286
    df = v11287
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v11289
    iopl1 = v11290
    nt = v11291
    ?15 = v11292
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v11436 [from 0x80484d8:sar    eax, 0x02]
    cx = v11264
    dx = v11266-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11266
    sp = v11267
    bp = v11268
    si = v11269
    di = v11270
    es = v11271
    cs = v11272
    ss = v11273
    ds = v11274
    fs = v11275
    gs = v11276
    cf = v11439 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v11278
    pf = -v11459-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v11280
    af = <top>
    ?5 = v11282
    zf = v11464 [from 0x80484d8:sar    eax, 0x02]
    sf = v11462 [from 0x80484d8:sar    eax, 0x02]
    tf = v11285
    if = v11286
    df = v11287
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v11289
    iopl1 = v11290
    nt = v11291
    ?15 = v11292
    memory = {
        size=4; addr=v11268-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11436 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v11436 [from 0x80484d8:sar    eax, 0x02]
    cx = v11264
    dx = v11266-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11266
    sp = v11267
    bp = v11268
    si = v11269
    di = v11270
    es = v11271
    cs = v11272
    ss = v11273
    ds = v11274
    fs = v11275
    gs = v11276
    cf = v11439 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v11278
    pf = -v11459-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v11280
    af = <top>
    ?5 = v11282
    zf = v11464 [from 0x80484d8:sar    eax, 0x02]
    sf = v11462 [from 0x80484d8:sar    eax, 0x02]
    tf = v11285
    if = v11286
    df = v11287
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v11289
    iopl1 = v11290
    nt = v11291
    ?15 = v11292
    memory = {
        size=4; addr=v11268-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11436 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v11536 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v11658
    cx = v11659
    dx = v11660
    bx = v11661
    sp = v11662+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v11663
    si = v11664
    di = v11665
    es = v11666
    cs = v11667
    ss = v11668
    ds = v11669
    fs = v11670
    gs = v11671
    cf = v11718 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v11673
    pf = -v11713-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v11675
    af = v11717 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v11677
    zf = v11716 [from 0x80484e0:add    esp, 0x0c]
    sf = v11715 [from 0x80484e0:add    esp, 0x0c]
    tf = v11680
    if = v11681
    df = v11682
    of = v11721 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v11684
    iopl1 = v11685
    nt = v11686
    ?15 = v11687
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v11658
    cx = v11659
    dx = v11660
    bx = v11757 [from 0x80484e3:pop    ebx]
    sp = v11662+0x10 [from 0x80484e3:pop    ebx]
    bp = v11663
    si = v11664
    di = v11665
    es = v11666
    cs = v11667
    ss = v11668
    ds = v11669
    fs = v11670
    gs = v11671
    cf = v11718 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v11673
    pf = -v11713-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v11675
    af = v11717 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v11677
    zf = v11716 [from 0x80484e0:add    esp, 0x0c]
    sf = v11715 [from 0x80484e0:add    esp, 0x0c]
    tf = v11680
    if = v11681
    df = v11682
    of = v11721 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v11684
    iopl1 = v11685
    nt = v11686
    ?15 = v11687
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v11658
    cx = v11659
    dx = v11660
    bx = v11757 [from 0x80484e3:pop    ebx]
    sp = v11662+0x14 [from 0x80484e4:pop    esi]
    bp = v11663
    si = v11793 [from 0x80484e4:pop    esi]
    di = v11665
    es = v11666
    cs = v11667
    ss = v11668
    ds = v11669
    fs = v11670
    gs = v11671
    cf = v11718 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v11673
    pf = -v11713-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v11675
    af = v11717 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v11677
    zf = v11716 [from 0x80484e0:add    esp, 0x0c]
    sf = v11715 [from 0x80484e0:add    esp, 0x0c]
    tf = v11680
    if = v11681
    df = v11682
    of = v11721 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v11684
    iopl1 = v11685
    nt = v11686
    ?15 = v11687
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v11658
    cx = v11659
    dx = v11660
    bx = v11757 [from 0x80484e3:pop    ebx]
    sp = v11662+0x18 [from 0x80484e5:pop    edi]
    bp = v11663
    si = v11793 [from 0x80484e4:pop    esi]
    di = v11829 [from 0x80484e5:pop    edi]
    es = v11666
    cs = v11667
    ss = v11668
    ds = v11669
    fs = v11670
    gs = v11671
    cf = v11718 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v11673
    pf = -v11713-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v11675
    af = v11717 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v11677
    zf = v11716 [from 0x80484e0:add    esp, 0x0c]
    sf = v11715 [from 0x80484e0:add    esp, 0x0c]
    tf = v11680
    if = v11681
    df = v11682
    of = v11721 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v11684
    iopl1 = v11685
    nt = v11686
    ?15 = v11687
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v11658
    cx = v11659
    dx = v11660
    bx = v11757 [from 0x80484e3:pop    ebx]
    sp = v11662+0x1c [from 0x80484e6:pop    ebp]
    bp = v11865 [from 0x80484e6:pop    ebp]
    si = v11793 [from 0x80484e4:pop    esi]
    di = v11829 [from 0x80484e5:pop    edi]
    es = v11666
    cs = v11667
    ss = v11668
    ds = v11669
    fs = v11670
    gs = v11671
    cf = v11718 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v11673
    pf = -v11713-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v11675
    af = v11717 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v11677
    zf = v11716 [from 0x80484e0:add    esp, 0x0c]
    sf = v11715 [from 0x80484e0:add    esp, 0x0c]
    tf = v11680
    if = v11681
    df = v11682
    of = v11721 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v11684
    iopl1 = v11685
    nt = v11686
    ?15 = v11687
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v11658
    cx = v11659
    dx = v11660
    bx = v11757 [from 0x80484e3:pop    ebx]
    sp = v11662+0x20 [from 0x80484e7:ret    ]
    bp = v11865 [from 0x80484e6:pop    ebp]
    si = v11793 [from 0x80484e4:pop    esi]
    di = v11829 [from 0x80484e5:pop    edi]
    es = v11666
    cs = v11667
    ss = v11668
    ds = v11669
    fs = v11670
    gs = v11671
    cf = v11718 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v11673
    pf = -v11713-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v11675
    af = v11717 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v11677
    zf = v11716 [from 0x80484e0:add    esp, 0x0c]
    sf = v11715 [from 0x80484e0:add    esp, 0x0c]
    tf = v11680
    if = v11681
    df = v11682
    of = v11721 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v11684
    iopl1 = v11685
    nt = v11686
    ?15 = v11687
    memory = {}
    ip = v11903 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e8:nop    
    ax = v11965
    cx = v11966
    dx = v11967
    bx = v11968
    sp = v11969
    bp = v11970
    si = v11971
    di = v11972
    es = v11973
    cs = v11974
    ss = v11975
    ds = v11976
    fs = v11977
    gs = v11978
    cf = v11979
    ?1 = v11980
    pf = v11981
    ?3 = v11982
    af = v11983
    ?5 = v11984
    zf = v11985
    sf = v11986
    tf = v11987
    if = v11988
    df = v11989
    of = v11990
    iopl0 = v11991
    iopl1 = v11992
    nt = v11993
    ?15 = v11994
    memory = {}
    ip = 0x80484e9 [from 0x80484e8:nop    ]
0x80484e9:lea    esi, [esi + 0x00000000]
    ax = v11965
    cx = v11966
    dx = v11967
    bx = v11968
    sp = v11969
    bp = v11970
    si = v11971 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
    di = v11972
    es = v11973
    cs = v11974
    ss = v11975
    ds = v11976
    fs = v11977
    gs = v11978
    cf = v11979
    ?1 = v11980
    pf = v11981
    ?3 = v11982
    af = v11983
    ?5 = v11984
    zf = v11985
    sf = v11986
    tf = v11987
    if = v11988
    df = v11989
    of = v11990
    iopl0 = v11991
    iopl1 = v11992
    nt = v11993
    ?15 = v11994
    memory = {}
    ip = 0x80484f0 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
0x80484f0:xor    edi, edi
    ax = v11965
    cx = v11966
    dx = v11967
    bx = v11968
    sp = v11969
    bp = v11970
    si = v11971 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v11973
    cs = v11974
    ss = v11975
    ds = v11976
    fs = v11977
    gs = v11978
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11980
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11982
    af = <top>
    ?5 = v11984
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11987
    if = v11988
    df = v11989
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11991
    iopl1 = v11992
    nt = v11993
    ?15 = v11994
    memory = {}
    ip = 0x80484f2 [from 0x80484f0:xor    edi, edi]
0x80484f2:mov    esi, edx
    ax = v11965
    cx = v11966
    dx = v11967
    bx = v11968
    sp = v11969
    bp = v11970
    si = v11967
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v11973
    cs = v11974
    ss = v11975
    ds = v11976
    fs = v11977
    gs = v11978
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11980
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11982
    af = <top>
    ?5 = v11984
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11987
    if = v11988
    df = v11989
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11991
    iopl1 = v11992
    nt = v11993
    ?15 = v11994
    memory = {}
    ip = 0x80484f4 [from 0x80484f2:mov    esi, edx]
0x80484f4:lea    esi, [esi + 0x00000000]
    ax = v11965
    cx = v11966
    dx = v11967
    bx = v11968
    sp = v11969
    bp = v11970
    si = v11967 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v11973
    cs = v11974
    ss = v11975
    ds = v11976
    fs = v11977
    gs = v11978
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11980
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11982
    af = <top>
    ?5 = v11984
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11987
    if = v11988
    df = v11989
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11991
    iopl1 = v11992
    nt = v11993
    ?15 = v11994
    memory = {}
    ip = 0x80484fa [from 0x80484f4:lea    esi, [esi + 0x00000000]]
0x80484fa:lea    edi, [edi + 0x00000000]
    ax = v11965
    cx = v11966
    dx = v11967
    bx = v11968
    sp = v11969
    bp = v11970
    si = v11967 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
    es = v11973
    cs = v11974
    ss = v11975
    ds = v11976
    fs = v11977
    gs = v11978
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11980
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11982
    af = <top>
    ?5 = v11984
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11987
    if = v11988
    df = v11989
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11991
    iopl1 = v11992
    nt = v11993
    ?15 = v11994
    memory = {}
    ip = 0x8048500 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
0x8048500:call   DWORD PTR ds:[esi]
    ax = v11965
    cx = v11966
    dx = v11967
    bx = v11968
    sp = v11969-0x4 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bp = v11970
    si = v11967 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
    es = v11973
    cs = v11974
    ss = v11975
    ds = v11976
    fs = v11977
    gs = v11978
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11980
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11982
    af = <top>
    ?5 = v11984
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11987
    if = v11988
    df = v11989
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11991
    iopl1 = v11992
    nt = v11993
    ?15 = v11994
    memory = {
        size=4; addr=v11969-0x4 [from 0x8048500:call   DWORD PTR ds:[esi]]; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
    ip = v12222 [from 0x8048500:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048502:inc    edi
    ax = v12374
    cx = v12375
    dx = v12376
    bx = v12377
    sp = v12378
    bp = v12379
    si = v12380
    di = v12381+0x1 [from 0x8048502:inc    edi]
    es = v12382
    cs = v12383
    ss = v12384
    ds = v12385
    fs = v12386
    gs = v12387
    cf = v12388
    ?1 = v12389
    pf = -v12429-0x1 [from 0x8048502:inc    edi]
    ?3 = v12391
    af = v12433 [from 0x8048502:inc    edi]
    ?5 = v12393
    zf = v12432 [from 0x8048502:inc    edi]
    sf = v12431 [from 0x8048502:inc    edi]
    tf = v12396
    if = v12397
    df = v12398
    of = v12436 [from 0x8048502:inc    edi]
    iopl0 = v12400
    iopl1 = v12401
    nt = v12402
    ?15 = v12403
    memory = {}
    ip = 0x8048503 [from 0x8048502:inc    edi]
0x8048503:add    esi, 0x04
    ax = v12374
    cx = v12375
    dx = v12376
    bx = v12377
    sp = v12378
    bp = v12379
    si = v12380+0x4 [from 0x8048503:add    esi, 0x04]
    di = v12381+0x1 [from 0x8048502:inc    edi]
    es = v12382
    cs = v12383
    ss = v12384
    ds = v12385
    fs = v12386
    gs = v12387
    cf = v12498 [from 0x8048503:add    esi, 0x04]
    ?1 = v12389
    pf = -v12493-0x1 [from 0x8048503:add    esi, 0x04]
    ?3 = v12391
    af = v12497 [from 0x8048503:add    esi, 0x04]
    ?5 = v12393
    zf = v12496 [from 0x8048503:add    esi, 0x04]
    sf = v12495 [from 0x8048503:add    esi, 0x04]
    tf = v12396
    if = v12397
    df = v12398
    of = v12501 [from 0x8048503:add    esi, 0x04]
    iopl0 = v12400
    iopl1 = v12401
    nt = v12402
    ?15 = v12403
    memory = {}
    ip = 0x8048506 [from 0x8048503:add    esi, 0x04]
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]
    ax = v12374
    cx = v12375
    dx = v12376
    bx = v12377
    sp = v12378
    bp = v12379
    si = v12380+0x4 [from 0x8048503:add    esi, 0x04]
    di = v12381+0x1 [from 0x8048502:inc    edi]
    es = v12382
    cs = v12383
    ss = v12384
    ds = v12385
    fs = v12386
    gs = v12387
    cf = -v12569-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?1 = v12389
    pf = -v12563-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?3 = v12391
    af = -v12567-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?5 = v12393
    zf = v12566 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    sf = v12565 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    tf = v12396
    if = v12397
    df = v12398
    of = v12573 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    iopl0 = v12400
    iopl1 = v12401
    nt = v12402
    ?15 = v12403
    memory = {}
    ip = 0x8048509 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
0x8048509:jb     0x08048500
    ax = v12374
    cx = v12375
    dx = v12376
    bx = v12377
    sp = v12378
    bp = v12379
    si = v12380+0x4 [from 0x8048503:add    esi, 0x04]
    di = v12381+0x1 [from 0x8048502:inc    edi]
    es = v12382
    cs = v12383
    ss = v12384
    ds = v12385
    fs = v12386
    gs = v12387
    cf = -v12569-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?1 = v12389
    pf = -v12563-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?3 = v12391
    af = -v12567-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?5 = v12393
    zf = v12566 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    sf = v12565 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    tf = v12396
    if = v12397
    df = v12398
    of = v12573 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    iopl0 = v12400
    iopl1 = v12401
    nt = v12402
    ?15 = v12403
    memory = {}
    ip = v12607 [from 0x8048509:jb     0x08048500]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804850b:add    esp, 0x0c
    ax = v12729
    cx = v12730
    dx = v12731
    bx = v12732
    sp = v12733+0xc [from 0x804850b:add    esp, 0x0c]
    bp = v12734
    si = v12735
    di = v12736
    es = v12737
    cs = v12738
    ss = v12739
    ds = v12740
    fs = v12741
    gs = v12742
    cf = v12789 [from 0x804850b:add    esp, 0x0c]
    ?1 = v12744
    pf = -v12784-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v12746
    af = v12788 [from 0x804850b:add    esp, 0x0c]
    ?5 = v12748
    zf = v12787 [from 0x804850b:add    esp, 0x0c]
    sf = v12786 [from 0x804850b:add    esp, 0x0c]
    tf = v12751
    if = v12752
    df = v12753
    of = v12792 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v12755
    iopl1 = v12756
    nt = v12757
    ?15 = v12758
    memory = {}
    ip = 0x804850e [from 0x804850b:add    esp, 0x0c]
0x804850e:pop    ebx
    ax = v12729
    cx = v12730
    dx = v12731
    bx = v12828 [from 0x804850e:pop    ebx]
    sp = v12733+0x10 [from 0x804850e:pop    ebx]
    bp = v12734
    si = v12735
    di = v12736
    es = v12737
    cs = v12738
    ss = v12739
    ds = v12740
    fs = v12741
    gs = v12742
    cf = v12789 [from 0x804850b:add    esp, 0x0c]
    ?1 = v12744
    pf = -v12784-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v12746
    af = v12788 [from 0x804850b:add    esp, 0x0c]
    ?5 = v12748
    zf = v12787 [from 0x804850b:add    esp, 0x0c]
    sf = v12786 [from 0x804850b:add    esp, 0x0c]
    tf = v12751
    if = v12752
    df = v12753
    of = v12792 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v12755
    iopl1 = v12756
    nt = v12757
    ?15 = v12758
    memory = {}
    ip = 0x804850f [from 0x804850e:pop    ebx]
0x804850f:pop    esi
    ax = v12729
    cx = v12730
    dx = v12731
    bx = v12828 [from 0x804850e:pop    ebx]
    sp = v12733+0x14 [from 0x804850f:pop    esi]
    bp = v12734
    si = v12864 [from 0x804850f:pop    esi]
    di = v12736
    es = v12737
    cs = v12738
    ss = v12739
    ds = v12740
    fs = v12741
    gs = v12742
    cf = v12789 [from 0x804850b:add    esp, 0x0c]
    ?1 = v12744
    pf = -v12784-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v12746
    af = v12788 [from 0x804850b:add    esp, 0x0c]
    ?5 = v12748
    zf = v12787 [from 0x804850b:add    esp, 0x0c]
    sf = v12786 [from 0x804850b:add    esp, 0x0c]
    tf = v12751
    if = v12752
    df = v12753
    of = v12792 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v12755
    iopl1 = v12756
    nt = v12757
    ?15 = v12758
    memory = {}
    ip = 0x8048510 [from 0x804850f:pop    esi]
0x8048510:pop    edi
    ax = v12729
    cx = v12730
    dx = v12731
    bx = v12828 [from 0x804850e:pop    ebx]
    sp = v12733+0x18 [from 0x8048510:pop    edi]
    bp = v12734
    si = v12864 [from 0x804850f:pop    esi]
    di = v12900 [from 0x8048510:pop    edi]
    es = v12737
    cs = v12738
    ss = v12739
    ds = v12740
    fs = v12741
    gs = v12742
    cf = v12789 [from 0x804850b:add    esp, 0x0c]
    ?1 = v12744
    pf = -v12784-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v12746
    af = v12788 [from 0x804850b:add    esp, 0x0c]
    ?5 = v12748
    zf = v12787 [from 0x804850b:add    esp, 0x0c]
    sf = v12786 [from 0x804850b:add    esp, 0x0c]
    tf = v12751
    if = v12752
    df = v12753
    of = v12792 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v12755
    iopl1 = v12756
    nt = v12757
    ?15 = v12758
    memory = {}
    ip = 0x8048511 [from 0x8048510:pop    edi]
0x8048511:pop    ebp
    ax = v12729
    cx = v12730
    dx = v12731
    bx = v12828 [from 0x804850e:pop    ebx]
    sp = v12733+0x1c [from 0x8048511:pop    ebp]
    bp = v12936 [from 0x8048511:pop    ebp]
    si = v12864 [from 0x804850f:pop    esi]
    di = v12900 [from 0x8048510:pop    edi]
    es = v12737
    cs = v12738
    ss = v12739
    ds = v12740
    fs = v12741
    gs = v12742
    cf = v12789 [from 0x804850b:add    esp, 0x0c]
    ?1 = v12744
    pf = -v12784-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v12746
    af = v12788 [from 0x804850b:add    esp, 0x0c]
    ?5 = v12748
    zf = v12787 [from 0x804850b:add    esp, 0x0c]
    sf = v12786 [from 0x804850b:add    esp, 0x0c]
    tf = v12751
    if = v12752
    df = v12753
    of = v12792 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v12755
    iopl1 = v12756
    nt = v12757
    ?15 = v12758
    memory = {}
    ip = 0x8048512 [from 0x8048511:pop    ebp]
0x8048512:ret    
    ax = v12729
    cx = v12730
    dx = v12731
    bx = v12828 [from 0x804850e:pop    ebx]
    sp = v12733+0x20 [from 0x8048512:ret    ]
    bp = v12936 [from 0x8048511:pop    ebp]
    si = v12864 [from 0x804850f:pop    esi]
    di = v12900 [from 0x8048510:pop    edi]
    es = v12737
    cs = v12738
    ss = v12739
    ds = v12740
    fs = v12741
    gs = v12742
    cf = v12789 [from 0x804850b:add    esp, 0x0c]
    ?1 = v12744
    pf = -v12784-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v12746
    af = v12788 [from 0x804850b:add    esp, 0x0c]
    ?5 = v12748
    zf = v12787 [from 0x804850b:add    esp, 0x0c]
    sf = v12786 [from 0x804850b:add    esp, 0x0c]
    tf = v12751
    if = v12752
    df = v12753
    of = v12792 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v12755
    iopl1 = v12756
    nt = v12757
    ?15 = v12758
    memory = {}
    ip = v12974 [from 0x8048512:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v13036
    cx = v13037
    dx = v13038
    bx = v13039
    sp = v13040-0x4 [from 0x8048520:push   ebp]
    bp = v13041
    si = v13042
    di = v13043
    es = v13044
    cs = v13045
    ss = v13046
    ds = v13047
    fs = v13048
    gs = v13049
    cf = v13050
    ?1 = v13051
    pf = v13052
    ?3 = v13053
    af = v13054
    ?5 = v13055
    zf = v13056
    sf = v13057
    tf = v13058
    if = v13059
    df = v13060
    of = v13061
    iopl0 = v13062
    iopl1 = v13063
    nt = v13064
    ?15 = v13065
    memory = {
        size=4; addr=v13040-0x4 [from 0x8048520:push   ebp]; value=v13041
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v13036
    cx = v13037
    dx = v13038
    bx = v13039
    sp = v13040-0x4 [from 0x8048520:push   ebp]
    bp = v13040-0x4 [from 0x8048520:push   ebp]
    si = v13042
    di = v13043
    es = v13044
    cs = v13045
    ss = v13046
    ds = v13047
    fs = v13048
    gs = v13049
    cf = v13050
    ?1 = v13051
    pf = v13052
    ?3 = v13053
    af = v13054
    ?5 = v13055
    zf = v13056
    sf = v13057
    tf = v13058
    if = v13059
    df = v13060
    of = v13061
    iopl0 = v13062
    iopl1 = v13063
    nt = v13064
    ?15 = v13065
    memory = {
        size=4; addr=v13040-0x4 [from 0x8048520:push   ebp]; value=v13041
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v13036
    cx = v13037
    dx = v13038
    bx = v13039
    sp = v13040-0x8 [from 0x8048523:push   edi]
    bp = v13040-0x4 [from 0x8048520:push   ebp]
    si = v13042
    di = v13043
    es = v13044
    cs = v13045
    ss = v13046
    ds = v13047
    fs = v13048
    gs = v13049
    cf = v13050
    ?1 = v13051
    pf = v13052
    ?3 = v13053
    af = v13054
    ?5 = v13055
    zf = v13056
    sf = v13057
    tf = v13058
    if = v13059
    df = v13060
    of = v13061
    iopl0 = v13062
    iopl1 = v13063
    nt = v13064
    ?15 = v13065
    memory = {
        size=4; addr=v13040-0x8 [from 0x8048523:push   edi]; value=v13043
        size=4; addr=v13040-0x4 [from 0x8048520:push   ebp]; value=v13041
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v13036
    cx = v13037
    dx = v13038
    bx = v13039
    sp = v13040-0xc [from 0x8048524:push   esi]
    bp = v13040-0x4 [from 0x8048520:push   ebp]
    si = v13042
    di = v13043
    es = v13044
    cs = v13045
    ss = v13046
    ds = v13047
    fs = v13048
    gs = v13049
    cf = v13050
    ?1 = v13051
    pf = v13052
    ?3 = v13053
    af = v13054
    ?5 = v13055
    zf = v13056
    sf = v13057
    tf = v13058
    if = v13059
    df = v13060
    of = v13061
    iopl0 = v13062
    iopl1 = v13063
    nt = v13064
    ?15 = v13065
    memory = {
        size=4; addr=v13040-0xc [from 0x8048524:push   esi]; value=v13042
        size=4; addr=v13040-0x8 [from 0x8048523:push   edi]; value=v13043
        size=4; addr=v13040-0x4 [from 0x8048520:push   ebp]; value=v13041
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v13036
    cx = v13037
    dx = v13038
    bx = v13039
    sp = v13040-0x10 [from 0x8048525:push   ebx]
    bp = v13040-0x4 [from 0x8048520:push   ebp]
    si = v13042
    di = v13043
    es = v13044
    cs = v13045
    ss = v13046
    ds = v13047
    fs = v13048
    gs = v13049
    cf = v13050
    ?1 = v13051
    pf = v13052
    ?3 = v13053
    af = v13054
    ?5 = v13055
    zf = v13056
    sf = v13057
    tf = v13058
    if = v13059
    df = v13060
    of = v13061
    iopl0 = v13062
    iopl1 = v13063
    nt = v13064
    ?15 = v13065
    memory = {
        size=4; addr=v13040-0x10 [from 0x8048525:push   ebx]; value=v13039
        size=4; addr=v13040-0xc [from 0x8048524:push   esi]; value=v13042
        size=4; addr=v13040-0x8 [from 0x8048523:push   edi]; value=v13043
        size=4; addr=v13040-0x4 [from 0x8048520:push   ebp]; value=v13041
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v13036
    cx = v13037
    dx = v13038
    bx = v13039
    sp = v13040-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v13040-0x4 [from 0x8048520:push   ebp]
    si = v13042
    di = v13043
    es = v13044
    cs = v13045
    ss = v13046
    ds = v13047
    fs = v13048
    gs = v13049
    cf = -v13275-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v13051
    pf = -v13269-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v13053
    af = -v13273-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v13055
    zf = v13272 [from 0x8048526:sub    esp, 0x0c]
    sf = v13271 [from 0x8048526:sub    esp, 0x0c]
    tf = v13058
    if = v13059
    df = v13060
    of = v13279 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v13062
    iopl1 = v13063
    nt = v13064
    ?15 = v13065
    memory = {
        size=4; addr=v13040-0x10 [from 0x8048525:push   ebx]; value=v13039
        size=4; addr=v13040-0xc [from 0x8048524:push   esi]; value=v13042
        size=4; addr=v13040-0x8 [from 0x8048523:push   edi]; value=v13043
        size=4; addr=v13040-0x4 [from 0x8048520:push   ebp]; value=v13041
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v13036
    cx = v13037
    dx = v13038
    bx = v13039
    sp = v13040-0x20 [from 0x8048529:call   0x0804852e]
    bp = v13040-0x4 [from 0x8048520:push   ebp]
    si = v13042
    di = v13043
    es = v13044
    cs = v13045
    ss = v13046
    ds = v13047
    fs = v13048
    gs = v13049
    cf = -v13275-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v13051
    pf = -v13269-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v13053
    af = -v13273-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v13055
    zf = v13272 [from 0x8048526:sub    esp, 0x0c]
    sf = v13271 [from 0x8048526:sub    esp, 0x0c]
    tf = v13058
    if = v13059
    df = v13060
    of = v13279 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v13062
    iopl1 = v13063
    nt = v13064
    ?15 = v13065
    memory = {
        size=4; addr=v13040-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v13040-0x10 [from 0x8048525:push   ebx]; value=v13039
        size=4; addr=v13040-0xc [from 0x8048524:push   esi]; value=v13042
        size=4; addr=v13040-0x8 [from 0x8048523:push   edi]; value=v13043
        size=4; addr=v13040-0x4 [from 0x8048520:push   ebp]; value=v13041
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v13408
    cx = v13409
    dx = v13410
    bx = v13442 [from 0x804852e:pop    ebx]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = v13422
    ?1 = v13423
    pf = v13424
    ?3 = v13425
    af = v13426
    ?5 = v13427
    zf = v13428
    sf = v13429
    tf = v13430
    if = v13431
    df = v13432
    of = v13433
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v13408
    cx = v13409
    dx = v13410
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = v13504 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v13423
    pf = -v13499-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v13425
    af = v13503 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v13427
    zf = v13502 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v13501 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v13430
    if = v13431
    df = v13432
    of = v13507 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v13442+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v13409
    dx = v13410
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = v13504 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v13423
    pf = -v13499-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v13425
    af = v13503 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v13427
    zf = v13502 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v13501 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v13430
    if = v13431
    df = v13432
    of = v13507 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v13442+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v13409
    dx = v13442+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = v13504 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v13423
    pf = -v13499-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v13425
    af = v13503 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v13427
    zf = v13502 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v13501 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v13430
    if = v13431
    df = v13432
    of = v13507 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v26884 [from 0x8048541:sub    eax, edx]
    cx = v13409
    dx = v13442+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = -v13639-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v13423
    pf = -v13633-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v13425
    af = -v13637-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v13427
    zf = v13636 [from 0x8048541:sub    eax, edx]
    sf = v13635 [from 0x8048541:sub    eax, edx]
    tf = v13430
    if = v13431
    df = v13432
    of = v13643 [from 0x8048541:sub    eax, edx]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v13682 [from 0x8048543:sar    eax, 0x02]
    cx = v13409
    dx = v13442+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = v13685 [from 0x8048543:sar    eax, 0x02]
    ?1 = v13423
    pf = -v13705-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v13425
    af = <top>
    ?5 = v13427
    zf = v13710 [from 0x8048543:sar    eax, 0x02]
    sf = v13708 [from 0x8048543:sar    eax, 0x02]
    tf = v13430
    if = v13431
    df = v13432
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v13682 [from 0x8048543:sar    eax, 0x02]
    cx = v13409
    dx = v13442+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = v13685 [from 0x8048543:sar    eax, 0x02]
    ?1 = v13423
    pf = -v13705-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v13425
    af = <top>
    ?5 = v13427
    zf = v13710 [from 0x8048543:sar    eax, 0x02]
    sf = v13708 [from 0x8048543:sar    eax, 0x02]
    tf = v13430
    if = v13431
    df = v13432
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {
        size=4; addr=v13413-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v13682 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v13682-0x1 [from 0x8048549:dec    eax]
    cx = v13409
    dx = v13442+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = v13685 [from 0x8048543:sar    eax, 0x02]
    ?1 = v13423
    pf = -v13804-0x1 [from 0x8048549:dec    eax]
    ?3 = v13425
    af = -v13808-0x1 [from 0x8048549:dec    eax]
    ?5 = v13427
    zf = v13807 [from 0x8048549:dec    eax]
    sf = v13806 [from 0x8048549:dec    eax]
    tf = v13430
    if = v13431
    df = v13432
    of = v13812 [from 0x8048549:dec    eax]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {
        size=4; addr=v13413-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v13682 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v13682-0x1 [from 0x8048549:dec    eax]
    cx = v13409
    dx = v13442+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = -v13877-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v13423
    pf = -v13871-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v13425
    af = -v13875-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v13427
    zf = v13874 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v13873 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v13430
    if = v13431
    df = v13432
    of = v13881 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {
        size=4; addr=v13413-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v13682 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v13682-0x1 [from 0x8048549:dec    eax]
    cx = v13409
    dx = v13442+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13442+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13412+0x4 [from 0x804852e:pop    ebx]
    bp = v13413
    si = v13414
    di = v13415
    es = v13416
    cs = v13417
    ss = v13418
    ds = v13419
    fs = v13420
    gs = v13421
    cf = -v13877-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v13423
    pf = -v13871-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v13425
    af = -v13875-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v13427
    zf = v13874 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v13873 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v13430
    if = v13431
    df = v13432
    of = v13881 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v13434
    iopl1 = v13435
    nt = v13436
    ?15 = v13437
    memory = {
        size=4; addr=v13413-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v13682 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v13915 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v14037
    cx = v14038
    dx = v14039
    bx = v14040
    sp = v14041-0x4 [from 0x804856b:call   0x080485b0]
    bp = v14042
    si = v14043
    di = v14044
    es = v14045
    cs = v14046
    ss = v14047
    ds = v14048
    fs = v14049
    gs = v14050
    cf = v14051
    ?1 = v14052
    pf = v14053
    ?3 = v14054
    af = v14055
    ?5 = v14056
    zf = v14057
    sf = v14058
    tf = v14059
    if = v14060
    df = v14061
    of = v14062
    iopl0 = v14063
    iopl1 = v14064
    nt = v14065
    ?15 = v14066
    memory = {
        size=4; addr=v14041-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v14254
    cx = v14255
    dx = v14256
    bx = v14257
    sp = v14258+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v14259
    si = v14260
    di = v14261
    es = v14262
    cs = v14263
    ss = v14264
    ds = v14265
    fs = v14266
    gs = v14267
    cf = v14314 [from 0x8048570:add    esp, 0x0c]
    ?1 = v14269
    pf = -v14309-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v14271
    af = v14313 [from 0x8048570:add    esp, 0x0c]
    ?5 = v14273
    zf = v14312 [from 0x8048570:add    esp, 0x0c]
    sf = v14311 [from 0x8048570:add    esp, 0x0c]
    tf = v14276
    if = v14277
    df = v14278
    of = v14317 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v14280
    iopl1 = v14281
    nt = v14282
    ?15 = v14283
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v14254
    cx = v14255
    dx = v14256
    bx = v14353 [from 0x8048573:pop    ebx]
    sp = v14258+0x10 [from 0x8048573:pop    ebx]
    bp = v14259
    si = v14260
    di = v14261
    es = v14262
    cs = v14263
    ss = v14264
    ds = v14265
    fs = v14266
    gs = v14267
    cf = v14314 [from 0x8048570:add    esp, 0x0c]
    ?1 = v14269
    pf = -v14309-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v14271
    af = v14313 [from 0x8048570:add    esp, 0x0c]
    ?5 = v14273
    zf = v14312 [from 0x8048570:add    esp, 0x0c]
    sf = v14311 [from 0x8048570:add    esp, 0x0c]
    tf = v14276
    if = v14277
    df = v14278
    of = v14317 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v14280
    iopl1 = v14281
    nt = v14282
    ?15 = v14283
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v14254
    cx = v14255
    dx = v14256
    bx = v14353 [from 0x8048573:pop    ebx]
    sp = v14258+0x14 [from 0x8048574:pop    esi]
    bp = v14259
    si = v14389 [from 0x8048574:pop    esi]
    di = v14261
    es = v14262
    cs = v14263
    ss = v14264
    ds = v14265
    fs = v14266
    gs = v14267
    cf = v14314 [from 0x8048570:add    esp, 0x0c]
    ?1 = v14269
    pf = -v14309-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v14271
    af = v14313 [from 0x8048570:add    esp, 0x0c]
    ?5 = v14273
    zf = v14312 [from 0x8048570:add    esp, 0x0c]
    sf = v14311 [from 0x8048570:add    esp, 0x0c]
    tf = v14276
    if = v14277
    df = v14278
    of = v14317 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v14280
    iopl1 = v14281
    nt = v14282
    ?15 = v14283
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v14254
    cx = v14255
    dx = v14256
    bx = v14353 [from 0x8048573:pop    ebx]
    sp = v14258+0x18 [from 0x8048575:pop    edi]
    bp = v14259
    si = v14389 [from 0x8048574:pop    esi]
    di = v14425 [from 0x8048575:pop    edi]
    es = v14262
    cs = v14263
    ss = v14264
    ds = v14265
    fs = v14266
    gs = v14267
    cf = v14314 [from 0x8048570:add    esp, 0x0c]
    ?1 = v14269
    pf = -v14309-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v14271
    af = v14313 [from 0x8048570:add    esp, 0x0c]
    ?5 = v14273
    zf = v14312 [from 0x8048570:add    esp, 0x0c]
    sf = v14311 [from 0x8048570:add    esp, 0x0c]
    tf = v14276
    if = v14277
    df = v14278
    of = v14317 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v14280
    iopl1 = v14281
    nt = v14282
    ?15 = v14283
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v14254
    cx = v14255
    dx = v14256
    bx = v14353 [from 0x8048573:pop    ebx]
    sp = v14258+0x1c [from 0x8048576:pop    ebp]
    bp = v14461 [from 0x8048576:pop    ebp]
    si = v14389 [from 0x8048574:pop    esi]
    di = v14425 [from 0x8048575:pop    edi]
    es = v14262
    cs = v14263
    ss = v14264
    ds = v14265
    fs = v14266
    gs = v14267
    cf = v14314 [from 0x8048570:add    esp, 0x0c]
    ?1 = v14269
    pf = -v14309-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v14271
    af = v14313 [from 0x8048570:add    esp, 0x0c]
    ?5 = v14273
    zf = v14312 [from 0x8048570:add    esp, 0x0c]
    sf = v14311 [from 0x8048570:add    esp, 0x0c]
    tf = v14276
    if = v14277
    df = v14278
    of = v14317 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v14280
    iopl1 = v14281
    nt = v14282
    ?15 = v14283
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v14254
    cx = v14255
    dx = v14256
    bx = v14353 [from 0x8048573:pop    ebx]
    sp = v14258+0x20 [from 0x8048577:ret    ]
    bp = v14461 [from 0x8048576:pop    ebp]
    si = v14389 [from 0x8048574:pop    esi]
    di = v14425 [from 0x8048575:pop    edi]
    es = v14262
    cs = v14263
    ss = v14264
    ds = v14265
    fs = v14266
    gs = v14267
    cf = v14314 [from 0x8048570:add    esp, 0x0c]
    ?1 = v14269
    pf = -v14309-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v14271
    af = v14313 [from 0x8048570:add    esp, 0x0c]
    ?5 = v14273
    zf = v14312 [from 0x8048570:add    esp, 0x0c]
    sf = v14311 [from 0x8048570:add    esp, 0x0c]
    tf = v14276
    if = v14277
    df = v14278
    of = v14317 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v14280
    iopl1 = v14281
    nt = v14282
    ?15 = v14283
    memory = {}
    ip = v14499 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048578:nop    
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {}
    ip = 0x8048579 [from 0x8048578:nop    ]
0x8048579:nop    
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {}
    ip = 0x804857a [from 0x8048579:nop    ]
0x804857a:nop    
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {}
    ip = 0x804857b [from 0x804857a:nop    ]
0x804857b:nop    
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {}
    ip = 0x804857c [from 0x804857b:nop    ]
0x804857c:nop    
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {}
    ip = 0x804857d [from 0x804857c:nop    ]
0x804857d:nop    
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {}
    ip = 0x804857e [from 0x804857d:nop    ]
0x804857e:nop    
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {}
    ip = 0x804857f [from 0x804857e:nop    ]
0x804857f:nop    
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {}
    ip = 0x8048580 [from 0x804857f:nop    ]
0x8048580:push   ebp
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565-0x4 [from 0x8048580:push   ebp]
    bp = v14566
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {
        size=4; addr=v14565-0x4 [from 0x8048580:push   ebp]; value=v14566
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565-0x4 [from 0x8048580:push   ebp]
    bp = v14565-0x4 [from 0x8048580:push   ebp]
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {
        size=4; addr=v14565-0x4 [from 0x8048580:push   ebp]; value=v14566
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565-0x8 [from 0x8048583:push   ebx]
    bp = v14565-0x4 [from 0x8048580:push   ebp]
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = v14575
    ?1 = v14576
    pf = v14577
    ?3 = v14578
    af = v14579
    ?5 = v14580
    zf = v14581
    sf = v14582
    tf = v14583
    if = v14584
    df = v14585
    of = v14586
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {
        size=4; addr=v14565-0x8 [from 0x8048583:push   ebx]; value=v14564
        size=4; addr=v14565-0x4 [from 0x8048580:push   ebp]; value=v14566
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v14561
    cx = v14562
    dx = v14563
    bx = v14564
    sp = v14565-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14565-0x4 [from 0x8048580:push   ebp]
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = -v14984-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v14576
    pf = -v14978-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v14578
    af = -v14982-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v14580
    zf = v14981 [from 0x8048584:sub    esp, 0x04]
    sf = v14980 [from 0x8048584:sub    esp, 0x04]
    tf = v14583
    if = v14584
    df = v14585
    of = v14988 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {
        size=4; addr=v14565-0x8 [from 0x8048583:push   ebx]; value=v14564
        size=4; addr=v14565-0x4 [from 0x8048580:push   ebp]; value=v14566
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v14561
    cx = v14562
    dx = v14563
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v14565-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14565-0x4 [from 0x8048580:push   ebp]
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = -v14984-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v14576
    pf = -v14978-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v14578
    af = -v14982-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v14580
    zf = v14981 [from 0x8048584:sub    esp, 0x04]
    sf = v14980 [from 0x8048584:sub    esp, 0x04]
    tf = v14583
    if = v14584
    df = v14585
    of = v14988 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {
        size=4; addr=v14565-0x8 [from 0x8048583:push   ebx]; value=v14564
        size=4; addr=v14565-0x4 [from 0x8048580:push   ebp]; value=v14566
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v15056 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v14562
    dx = v14563
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v14565-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14565-0x4 [from 0x8048580:push   ebp]
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = -v14984-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v14576
    pf = -v14978-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v14578
    af = -v14982-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v14580
    zf = v14981 [from 0x8048584:sub    esp, 0x04]
    sf = v14980 [from 0x8048584:sub    esp, 0x04]
    tf = v14583
    if = v14584
    df = v14585
    of = v14988 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {
        size=4; addr=v14565-0x8 [from 0x8048583:push   ebx]; value=v14564
        size=4; addr=v14565-0x4 [from 0x8048580:push   ebp]; value=v14566
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v15056 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v14562
    dx = v14563
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v14565-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14565-0x4 [from 0x8048580:push   ebp]
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = -v15121-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v14576
    pf = -v15115-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v14578
    af = -v15119-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v14580
    zf = v15118 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v15117 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v14583
    if = v14584
    df = v14585
    of = v15125 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {
        size=4; addr=v14565-0x8 [from 0x8048583:push   ebx]; value=v14564
        size=4; addr=v14565-0x4 [from 0x8048580:push   ebp]; value=v14566
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v15056 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v14562
    dx = v14563
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v14565-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14565-0x4 [from 0x8048580:push   ebp]
    si = v14567
    di = v14568
    es = v14569
    cs = v14570
    ss = v14571
    ds = v14572
    fs = v14573
    gs = v14574
    cf = -v15121-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v14576
    pf = -v15115-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v14578
    af = -v15119-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v14580
    zf = v15118 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v15117 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v14583
    if = v14584
    df = v14585
    of = v15125 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v14587
    iopl1 = v14588
    nt = v14589
    ?15 = v14590
    memory = {
        size=4; addr=v14565-0x8 [from 0x8048583:push   ebx]; value=v14564
        size=4; addr=v14565-0x4 [from 0x8048580:push   ebp]; value=v14566
    }
    ip = v15159 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v15281
    cx = v15282
    dx = v15283
    bx = v15284
    sp = v15285
    bp = v15286
    si = v15287 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v15288
    es = v15289
    cs = v15290
    ss = v15291
    ds = v15292
    fs = v15293
    gs = v15294
    cf = v15295
    ?1 = v15296
    pf = v15297
    ?3 = v15298
    af = v15299
    ?5 = v15300
    zf = v15301
    sf = v15302
    tf = v15303
    if = v15304
    df = v15305
    of = v15306
    iopl0 = v15307
    iopl1 = v15308
    nt = v15309
    ?15 = v15310
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v15281
    cx = v15282
    dx = v15283
    bx = v15284
    sp = v15285
    bp = v15286
    si = v15287 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v15288 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v15289
    cs = v15290
    ss = v15291
    ds = v15292
    fs = v15293
    gs = v15294
    cf = v15295
    ?1 = v15296
    pf = v15297
    ?3 = v15298
    af = v15299
    ?5 = v15300
    zf = v15301
    sf = v15302
    tf = v15303
    if = v15304
    df = v15305
    of = v15306
    iopl0 = v15307
    iopl1 = v15308
    nt = v15309
    ?15 = v15310
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v15281
    cx = v15282
    dx = v15283
    bx = v15284-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v15285
    bp = v15286
    si = v15287 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v15288 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v15289
    cs = v15290
    ss = v15291
    ds = v15292
    fs = v15293
    gs = v15294
    cf = -v15412-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v15296
    pf = -v15406-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v15298
    af = -v15410-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v15300
    zf = v15409 [from 0x80485a0:sub    ebx, 0x04]
    sf = v15408 [from 0x80485a0:sub    ebx, 0x04]
    tf = v15303
    if = v15304
    df = v15305
    of = v15416 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v15307
    iopl1 = v15308
    nt = v15309
    ?15 = v15310
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v15281
    cx = v15282
    dx = v15283
    bx = v15284-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v15285-0x4 [from 0x80485a3:call   eax]
    bp = v15286
    si = v15287 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v15288 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v15289
    cs = v15290
    ss = v15291
    ds = v15292
    fs = v15293
    gs = v15294
    cf = -v15412-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v15296
    pf = -v15406-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v15298
    af = -v15410-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v15300
    zf = v15409 [from 0x80485a0:sub    ebx, 0x04]
    sf = v15408 [from 0x80485a0:sub    ebx, 0x04]
    tf = v15303
    if = v15304
    df = v15305
    of = v15416 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v15307
    iopl1 = v15308
    nt = v15309
    ?15 = v15310
    memory = {
        size=4; addr=v15285-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v15281
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v15636 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v15605
    dx = v15606
    bx = v15607
    sp = v15608
    bp = v15609
    si = v15610
    di = v15611
    es = v15612
    cs = v15613
    ss = v15614
    ds = v15615
    fs = v15616
    gs = v15617
    cf = v15618
    ?1 = v15619
    pf = v15620
    ?3 = v15621
    af = v15622
    ?5 = v15623
    zf = v15624
    sf = v15625
    tf = v15626
    if = v15627
    df = v15628
    of = v15629
    iopl0 = v15630
    iopl1 = v15631
    nt = v15632
    ?15 = v15633
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v15636 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v15605
    dx = v15606
    bx = v15607
    sp = v15608
    bp = v15609
    si = v15610
    di = v15611
    es = v15612
    cs = v15613
    ss = v15614
    ds = v15615
    fs = v15616
    gs = v15617
    cf = -v15701-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v15619
    pf = -v15695-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v15621
    af = -v15699-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v15623
    zf = v15698 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v15697 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v15626
    if = v15627
    df = v15628
    of = v15705 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v15630
    iopl1 = v15631
    nt = v15632
    ?15 = v15633
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v15636 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v15605
    dx = v15606
    bx = v15607
    sp = v15608
    bp = v15609
    si = v15610
    di = v15611
    es = v15612
    cs = v15613
    ss = v15614
    ds = v15615
    fs = v15616
    gs = v15617
    cf = -v15701-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v15619
    pf = -v15695-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v15621
    af = -v15699-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v15623
    zf = v15698 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v15697 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v15626
    if = v15627
    df = v15628
    of = v15705 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v15630
    iopl1 = v15631
    nt = v15632
    ?15 = v15633
    memory = {}
    ip = v15740 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v15896 [from 0x80485ac:pop    eax]
    cx = v15863
    dx = v15864
    bx = v15865
    sp = v15866+0x4 [from 0x80485ac:pop    eax]
    bp = v15867
    si = v15868
    di = v15869
    es = v15870
    cs = v15871
    ss = v15872
    ds = v15873
    fs = v15874
    gs = v15875
    cf = v15876
    ?1 = v15877
    pf = v15878
    ?3 = v15879
    af = v15880
    ?5 = v15881
    zf = v15882
    sf = v15883
    tf = v15884
    if = v15885
    df = v15886
    of = v15887
    iopl0 = v15888
    iopl1 = v15889
    nt = v15890
    ?15 = v15891
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v15896 [from 0x80485ac:pop    eax]
    cx = v15863
    dx = v15864
    bx = v15932 [from 0x80485ad:pop    ebx]
    sp = v15866+0x8 [from 0x80485ad:pop    ebx]
    bp = v15867
    si = v15868
    di = v15869
    es = v15870
    cs = v15871
    ss = v15872
    ds = v15873
    fs = v15874
    gs = v15875
    cf = v15876
    ?1 = v15877
    pf = v15878
    ?3 = v15879
    af = v15880
    ?5 = v15881
    zf = v15882
    sf = v15883
    tf = v15884
    if = v15885
    df = v15886
    of = v15887
    iopl0 = v15888
    iopl1 = v15889
    nt = v15890
    ?15 = v15891
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v15896 [from 0x80485ac:pop    eax]
    cx = v15863
    dx = v15864
    bx = v15932 [from 0x80485ad:pop    ebx]
    sp = v15866+0xc [from 0x80485ae:pop    ebp]
    bp = v15968 [from 0x80485ae:pop    ebp]
    si = v15868
    di = v15869
    es = v15870
    cs = v15871
    ss = v15872
    ds = v15873
    fs = v15874
    gs = v15875
    cf = v15876
    ?1 = v15877
    pf = v15878
    ?3 = v15879
    af = v15880
    ?5 = v15881
    zf = v15882
    sf = v15883
    tf = v15884
    if = v15885
    df = v15886
    of = v15887
    iopl0 = v15888
    iopl1 = v15889
    nt = v15890
    ?15 = v15891
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v15896 [from 0x80485ac:pop    eax]
    cx = v15863
    dx = v15864
    bx = v15932 [from 0x80485ad:pop    ebx]
    sp = v15866+0x10 [from 0x80485af:ret    ]
    bp = v15968 [from 0x80485ae:pop    ebp]
    si = v15868
    di = v15869
    es = v15870
    cs = v15871
    ss = v15872
    ds = v15873
    fs = v15874
    gs = v15875
    cf = v15876
    ?1 = v15877
    pf = v15878
    ?3 = v15879
    af = v15880
    ?5 = v15881
    zf = v15882
    sf = v15883
    tf = v15884
    if = v15885
    df = v15886
    of = v15887
    iopl0 = v15888
    iopl1 = v15889
    nt = v15890
    ?15 = v15891
    memory = {}
    ip = v16006 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v16068
    cx = v16069
    dx = v16070
    bx = v16071
    sp = v16072-0x4 [from 0x80485b0:push   ebp]
    bp = v16073
    si = v16074
    di = v16075
    es = v16076
    cs = v16077
    ss = v16078
    ds = v16079
    fs = v16080
    gs = v16081
    cf = v16082
    ?1 = v16083
    pf = v16084
    ?3 = v16085
    af = v16086
    ?5 = v16087
    zf = v16088
    sf = v16089
    tf = v16090
    if = v16091
    df = v16092
    of = v16093
    iopl0 = v16094
    iopl1 = v16095
    nt = v16096
    ?15 = v16097
    memory = {
        size=4; addr=v16072-0x4 [from 0x80485b0:push   ebp]; value=v16073
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v16068
    cx = v16069
    dx = v16070
    bx = v16071
    sp = v16072-0x4 [from 0x80485b0:push   ebp]
    bp = v16072-0x4 [from 0x80485b0:push   ebp]
    si = v16074
    di = v16075
    es = v16076
    cs = v16077
    ss = v16078
    ds = v16079
    fs = v16080
    gs = v16081
    cf = v16082
    ?1 = v16083
    pf = v16084
    ?3 = v16085
    af = v16086
    ?5 = v16087
    zf = v16088
    sf = v16089
    tf = v16090
    if = v16091
    df = v16092
    of = v16093
    iopl0 = v16094
    iopl1 = v16095
    nt = v16096
    ?15 = v16097
    memory = {
        size=4; addr=v16072-0x4 [from 0x80485b0:push   ebp]; value=v16073
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v16068
    cx = v16069
    dx = v16070
    bx = v16071
    sp = v16072-0x8 [from 0x80485b3:push   ebx]
    bp = v16072-0x4 [from 0x80485b0:push   ebp]
    si = v16074
    di = v16075
    es = v16076
    cs = v16077
    ss = v16078
    ds = v16079
    fs = v16080
    gs = v16081
    cf = v16082
    ?1 = v16083
    pf = v16084
    ?3 = v16085
    af = v16086
    ?5 = v16087
    zf = v16088
    sf = v16089
    tf = v16090
    if = v16091
    df = v16092
    of = v16093
    iopl0 = v16094
    iopl1 = v16095
    nt = v16096
    ?15 = v16097
    memory = {
        size=4; addr=v16072-0x8 [from 0x80485b3:push   ebx]; value=v16071
        size=4; addr=v16072-0x4 [from 0x80485b0:push   ebp]; value=v16073
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v16068
    cx = v16069
    dx = v16070
    bx = v16071
    sp = v16072-0xc [from 0x80485b4:push   eax]
    bp = v16072-0x4 [from 0x80485b0:push   ebp]
    si = v16074
    di = v16075
    es = v16076
    cs = v16077
    ss = v16078
    ds = v16079
    fs = v16080
    gs = v16081
    cf = v16082
    ?1 = v16083
    pf = v16084
    ?3 = v16085
    af = v16086
    ?5 = v16087
    zf = v16088
    sf = v16089
    tf = v16090
    if = v16091
    df = v16092
    of = v16093
    iopl0 = v16094
    iopl1 = v16095
    nt = v16096
    ?15 = v16097
    memory = {
        size=4; addr=v16072-0xc [from 0x80485b4:push   eax]; value=v16068
        size=4; addr=v16072-0x8 [from 0x80485b3:push   ebx]; value=v16071
        size=4; addr=v16072-0x4 [from 0x80485b0:push   ebp]; value=v16073
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v16068
    cx = v16069
    dx = v16070
    bx = v16071
    sp = v16072-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v16072-0x4 [from 0x80485b0:push   ebp]
    si = v16074
    di = v16075
    es = v16076
    cs = v16077
    ss = v16078
    ds = v16079
    fs = v16080
    gs = v16081
    cf = v16082
    ?1 = v16083
    pf = v16084
    ?3 = v16085
    af = v16086
    ?5 = v16087
    zf = v16088
    sf = v16089
    tf = v16090
    if = v16091
    df = v16092
    of = v16093
    iopl0 = v16094
    iopl1 = v16095
    nt = v16096
    ?15 = v16097
    memory = {
        size=4; addr=v16072-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v16072-0xc [from 0x80485b4:push   eax]; value=v16068
        size=4; addr=v16072-0x8 [from 0x80485b3:push   ebx]; value=v16071
        size=4; addr=v16072-0x4 [from 0x80485b0:push   ebp]; value=v16073
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v16335
    cx = v16336
    dx = v16337
    bx = v16369 [from 0x80485ba:pop    ebx]
    sp = v16339+0x4 [from 0x80485ba:pop    ebx]
    bp = v16340
    si = v16341
    di = v16342
    es = v16343
    cs = v16344
    ss = v16345
    ds = v16346
    fs = v16347
    gs = v16348
    cf = v16349
    ?1 = v16350
    pf = v16351
    ?3 = v16352
    af = v16353
    ?5 = v16354
    zf = v16355
    sf = v16356
    tf = v16357
    if = v16358
    df = v16359
    of = v16360
    iopl0 = v16361
    iopl1 = v16362
    nt = v16363
    ?15 = v16364
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v16335
    cx = v16336
    dx = v16337
    bx = v16369+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v16339+0x4 [from 0x80485ba:pop    ebx]
    bp = v16340
    si = v16341
    di = v16342
    es = v16343
    cs = v16344
    ss = v16345
    ds = v16346
    fs = v16347
    gs = v16348
    cf = v16431 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v16350
    pf = -v16426-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v16352
    af = v16430 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v16354
    zf = v16429 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v16428 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v16357
    if = v16358
    df = v16359
    of = v16434 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v16361
    iopl1 = v16362
    nt = v16363
    ?15 = v16364
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v16335
    cx = v16336
    dx = v16337
    bx = v16369+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v16339 [from 0x80485c1:call   0x08048390]
    bp = v16340
    si = v16341
    di = v16342
    es = v16343
    cs = v16344
    ss = v16345
    ds = v16346
    fs = v16347
    gs = v16348
    cf = v16431 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v16350
    pf = -v16426-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v16352
    af = v16430 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v16354
    zf = v16429 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v16428 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v16357
    if = v16358
    df = v16359
    of = v16434 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v16361
    iopl1 = v16362
    nt = v16363
    ?15 = v16364
    memory = {
        size=4; addr=v16339 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v16687 [from 0x80485c6:pop    eax]
    cx = v16654
    dx = v16655
    bx = v16656
    sp = v16657+0x4 [from 0x80485c6:pop    eax]
    bp = v16658
    si = v16659
    di = v16660
    es = v16661
    cs = v16662
    ss = v16663
    ds = v16664
    fs = v16665
    gs = v16666
    cf = v16667
    ?1 = v16668
    pf = v16669
    ?3 = v16670
    af = v16671
    ?5 = v16672
    zf = v16673
    sf = v16674
    tf = v16675
    if = v16676
    df = v16677
    of = v16678
    iopl0 = v16679
    iopl1 = v16680
    nt = v16681
    ?15 = v16682
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v16687 [from 0x80485c6:pop    eax]
    cx = v16654
    dx = v16655
    bx = v16723 [from 0x80485c7:pop    ebx]
    sp = v16657+0x8 [from 0x80485c7:pop    ebx]
    bp = v16658
    si = v16659
    di = v16660
    es = v16661
    cs = v16662
    ss = v16663
    ds = v16664
    fs = v16665
    gs = v16666
    cf = v16667
    ?1 = v16668
    pf = v16669
    ?3 = v16670
    af = v16671
    ?5 = v16672
    zf = v16673
    sf = v16674
    tf = v16675
    if = v16676
    df = v16677
    of = v16678
    iopl0 = v16679
    iopl1 = v16680
    nt = v16681
    ?15 = v16682
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v16687 [from 0x80485c6:pop    eax]
    cx = v16654
    dx = v16655
    bx = v16723 [from 0x80485c7:pop    ebx]
    sp = v16658+0x4 [from 0x80485c8:leave  ]
    bp = v16759 [from 0x80485c8:leave  ]
    si = v16659
    di = v16660
    es = v16661
    cs = v16662
    ss = v16663
    ds = v16664
    fs = v16665
    gs = v16666
    cf = v16667
    ?1 = v16668
    pf = v16669
    ?3 = v16670
    af = v16671
    ?5 = v16672
    zf = v16673
    sf = v16674
    tf = v16675
    if = v16676
    df = v16677
    of = v16678
    iopl0 = v16679
    iopl1 = v16680
    nt = v16681
    ?15 = v16682
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v16687 [from 0x80485c6:pop    eax]
    cx = v16654
    dx = v16655
    bx = v16723 [from 0x80485c7:pop    ebx]
    sp = v16658+0x8 [from 0x80485c9:ret    ]
    bp = v16759 [from 0x80485c8:leave  ]
    si = v16659
    di = v16660
    es = v16661
    cs = v16662
    ss = v16663
    ds = v16664
    fs = v16665
    gs = v16666
    cf = v16667
    ?1 = v16668
    pf = v16669
    ?3 = v16670
    af = v16671
    ?5 = v16672
    zf = v16673
    sf = v16674
    tf = v16675
    if = v16676
    df = v16677
    of = v16678
    iopl0 = v16679
    iopl1 = v16680
    nt = v16681
    ?15 = v16682
    memory = {}
    ip = v16797 [from 0x80485c9:ret    ]
analyzed headers: 1
