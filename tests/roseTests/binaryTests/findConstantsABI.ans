=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v102 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v102 [from 0x80482c8:push   ebp]
    bp = v139 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v219 [from 0x80482cb:sub    esp, 0x08]
    bp = v139 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v212-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v202-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v209-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v207 [from 0x80482cb:sub    esp, 0x08]
    sf = v205 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v217 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v263 [from 0x80482ce:call   0x08048364]
    bp = v139 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v212-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v202-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v209-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v207 [from 0x80482cb:sub    esp, 0x08]
    sf = v205 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v217 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v219-0x4 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v445
    cx = v446
    dx = v447
    bx = v448
    sp = v487 [from 0x80482d3:call   0x080483d0]
    bp = v450
    si = v451
    di = v452
    es = v453
    cs = v454
    ss = v455
    ds = v456
    fs = v457
    gs = v458
    cf = v459
    ?1 = v460
    pf = v461
    ?3 = v462
    af = v463
    ?5 = v464
    zf = v465
    sf = v466
    tf = v467
    if = v468
    df = v469
    of = v470
    iopl0 = v471
    iopl1 = v472
    nt = v473
    ?15 = v474
    memory = {
        size=4; addr=v449-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v669
    cx = v670
    dx = v671
    bx = v672
    sp = v711 [from 0x80482d8:call   0x08048580]
    bp = v674
    si = v675
    di = v676
    es = v677
    cs = v678
    ss = v679
    ds = v680
    fs = v681
    gs = v682
    cf = v683
    ?1 = v684
    pf = v685
    ?3 = v686
    af = v687
    ?5 = v688
    zf = v689
    sf = v690
    tf = v691
    if = v692
    df = v693
    of = v694
    iopl0 = v695
    iopl1 = v696
    nt = v697
    ?15 = v698
    memory = {
        size=4; addr=v673-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v893
    cx = v894
    dx = v895
    bx = v896
    sp = v935 [from 0x80482dd:leave  ]
    bp = v934 [from 0x80482dd:leave  ]
    si = v899
    di = v900
    es = v901
    cs = v902
    ss = v903
    ds = v904
    fs = v905
    gs = v906
    cf = v907
    ?1 = v908
    pf = v909
    ?3 = v910
    af = v911
    ?5 = v912
    zf = v913
    sf = v914
    tf = v915
    if = v916
    df = v917
    of = v918
    iopl0 = v919
    iopl1 = v920
    nt = v921
    ?15 = v922
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v893
    cx = v894
    dx = v895
    bx = v896
    sp = v979 [from 0x80482de:ret    ]
    bp = v934 [from 0x80482dd:leave  ]
    si = v899
    di = v900
    es = v901
    cs = v902
    ss = v903
    ds = v904
    fs = v905
    gs = v906
    cf = v907
    ?1 = v908
    pf = v909
    ?3 = v910
    af = v911
    ?5 = v912
    zf = v913
    sf = v914
    tf = v915
    if = v916
    df = v917
    of = v918
    iopl0 = v919
    iopl1 = v920
    nt = v921
    ?15 = v922
    memory = {}
    ip = v977 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v1041
    cx = v1042
    dx = v1043
    bx = v1044
    sp = v1045
    bp = v1046
    si = v1047
    di = v1048
    es = v1049
    cs = v1050
    ss = v1051
    ds = v1052
    fs = v1053
    gs = v1054
    cf = v1055
    ?1 = v1056
    pf = v1057
    ?3 = v1058
    af = v1059
    ?5 = v1060
    zf = v1061
    sf = v1062
    tf = v1063
    if = v1064
    df = v1065
    of = v1066
    iopl0 = v1067
    iopl1 = v1068
    nt = v1069
    ?15 = v1070
    memory = {}
    ip = v1077 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v1140
    cx = v1141
    dx = v1142
    bx = v1143
    sp = v1144
    bp = v1145
    si = v1146
    di = v1147
    es = v1148
    cs = v1149
    ss = v1150
    ds = v1151
    fs = v1152
    gs = v1153
    cf = v1154
    ?1 = v1155
    pf = v1156
    ?3 = v1157
    af = v1158
    ?5 = v1159
    zf = v1160
    sf = v1161
    tf = v1162
    if = v1163
    df = v1164
    of = v1165
    iopl0 = v1166
    iopl1 = v1167
    nt = v1168
    ?15 = v1169
    memory = {}
    ip = v1176 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v1239
    cx = v1240
    dx = v1241
    bx = v1242
    sp = v1243
    bp = v1244
    si = v1245
    di = v1246
    es = v1247
    cs = v1248
    ss = v1249
    ds = v1250
    fs = v1251
    gs = v1252
    cf = v1253
    ?1 = v1254
    pf = v1255
    ?3 = v1256
    af = v1257
    ?5 = v1258
    zf = v1259
    sf = v1260
    tf = v1261
    if = v1262
    df = v1263
    of = v1264
    iopl0 = v1265
    iopl1 = v1266
    nt = v1267
    ?15 = v1268
    memory = {}
    ip = v1275 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v1338
    cx = v1339
    dx = v1340
    bx = v1341
    sp = v1342
    bp = v1343
    si = v1344
    di = v1345
    es = v1346
    cs = v1347
    ss = v1348
    ds = v1349
    fs = v1350
    gs = v1351
    cf = v1352
    ?1 = v1353
    pf = v1354
    ?3 = v1355
    af = v1356
    ?5 = v1357
    zf = v1358
    sf = v1359
    tf = v1360
    if = v1361
    df = v1362
    of = v1363
    iopl0 = v1364
    iopl1 = v1365
    nt = v1366
    ?15 = v1367
    memory = {}
    ip = v1374 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1437
    cx = v1438
    dx = v1439
    bx = v1440
    sp = v1441
    bp = v1442
    si = v1443
    di = v1444
    es = v1445
    cs = v1446
    ss = v1447
    ds = v1448
    fs = v1449
    gs = v1450
    cf = v1451
    ?1 = v1452
    pf = v1453
    ?3 = v1454
    af = v1455
    ?5 = v1456
    zf = v1457
    sf = v1458
    tf = v1459
    if = v1460
    df = v1461
    of = v1462
    iopl0 = v1463
    iopl1 = v1464
    nt = v1465
    ?15 = v1466
    memory = {}
    ip = v1473 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1536
    cx = v1537
    dx = v1538
    bx = v1539
    sp = v1540
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1542
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1551
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1536
    cx = v1537
    dx = v1538
    bx = v1539
    sp = v1640 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1551
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v1640 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1551
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v1741 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v1789 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v1741-0x4 [from 0x8048348:push   eax]; value=v1536
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v1831 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v1789-0x4 [from 0x8048349:push   esp]; value=v1789 [from 0x8048348:push   eax]
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v1873 [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v1831-0x4 [from 0x804834a:push   edx]; value=v1538
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v1915 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v1873-0x4 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v1957 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v1915-0x4 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v1999 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v1957-0x4 [from 0x8048355:push   ecx]; value=v1680 [from 0x8048343:mov    ecx, esp]
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v2041 [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v1999-0x4 [from 0x8048356:push   esi]; value=v1643 [from 0x8048342:pop    esi]
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v2083 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v2041-0x4 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1536
    cx = v1680 [from 0x8048343:mov    ecx, esp]
    dx = v1538
    bx = v1539
    sp = v2127 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1643 [from 0x8048342:pop    esi]
    di = v1543
    es = v1544
    cs = v1545
    ss = v1546
    ds = v1547
    fs = v1548
    gs = v1549
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1551
    pf = -v1734-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1553
    af = <top>
    ?5 = v1555
    zf = v1739 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1737 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1558
    if = v1559
    df = v1560
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1562
    iopl1 = v1563
    nt = v1564
    ?15 = v1565
    memory = {
        size=4; addr=v2083-0x4 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v2309
    cx = v2310
    dx = v2311
    bx = v2312
    sp = v2313
    bp = v2314
    si = v2315
    di = v2316
    es = v2317
    cs = v2318
    ss = v2319
    ds = v2320
    fs = v2321
    gs = v2322
    cf = v2323
    ?1 = v2324
    pf = v2325
    ?3 = v2326
    af = v2327
    ?5 = v2328
    zf = v2329
    sf = v2330
    tf = v2331
    if = v2332
    df = v2333
    of = v2334
    iopl0 = v2335
    iopl1 = v2336
    nt = v2337
    ?15 = v2338
    memory = {}
    ip = 0x8048361
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    ax = v2405
    cx = v2406
    dx = v2407
    bx = v2408
    sp = v2445 [from 0x8048364:push   ebp]
    bp = v2410
    si = v2411
    di = v2412
    es = v2413
    cs = v2414
    ss = v2415
    ds = v2416
    fs = v2417
    gs = v2418
    cf = v2419
    ?1 = v2420
    pf = v2421
    ?3 = v2422
    af = v2423
    ?5 = v2424
    zf = v2425
    sf = v2426
    tf = v2427
    if = v2428
    df = v2429
    of = v2430
    iopl0 = v2431
    iopl1 = v2432
    nt = v2433
    ?15 = v2434
    memory = {
        size=4; addr=v2409-0x4 [from 0x8048364:push   ebp]; value=v2410
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v2405
    cx = v2406
    dx = v2407
    bx = v2408
    sp = v2445 [from 0x8048364:push   ebp]
    bp = v2482 [from 0x8048365:mov    ebp, esp]
    si = v2411
    di = v2412
    es = v2413
    cs = v2414
    ss = v2415
    ds = v2416
    fs = v2417
    gs = v2418
    cf = v2419
    ?1 = v2420
    pf = v2421
    ?3 = v2422
    af = v2423
    ?5 = v2424
    zf = v2425
    sf = v2426
    tf = v2427
    if = v2428
    df = v2429
    of = v2430
    iopl0 = v2431
    iopl1 = v2432
    nt = v2433
    ?15 = v2434
    memory = {
        size=4; addr=v2409-0x4 [from 0x8048364:push   ebp]; value=v2410
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v2405
    cx = v2406
    dx = v2407
    bx = v2408
    sp = v2524 [from 0x8048367:push   ebx]
    bp = v2482 [from 0x8048365:mov    ebp, esp]
    si = v2411
    di = v2412
    es = v2413
    cs = v2414
    ss = v2415
    ds = v2416
    fs = v2417
    gs = v2418
    cf = v2419
    ?1 = v2420
    pf = v2421
    ?3 = v2422
    af = v2423
    ?5 = v2424
    zf = v2425
    sf = v2426
    tf = v2427
    if = v2428
    df = v2429
    of = v2430
    iopl0 = v2431
    iopl1 = v2432
    nt = v2433
    ?15 = v2434
    memory = {
        size=4; addr=v2445-0x4 [from 0x8048367:push   ebx]; value=v2408
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v2405
    cx = v2406
    dx = v2407
    bx = v2408
    sp = v2566 [from 0x8048368:push   ecx]
    bp = v2482 [from 0x8048365:mov    ebp, esp]
    si = v2411
    di = v2412
    es = v2413
    cs = v2414
    ss = v2415
    ds = v2416
    fs = v2417
    gs = v2418
    cf = v2419
    ?1 = v2420
    pf = v2421
    ?3 = v2422
    af = v2423
    ?5 = v2424
    zf = v2425
    sf = v2426
    tf = v2427
    if = v2428
    df = v2429
    of = v2430
    iopl0 = v2431
    iopl1 = v2432
    nt = v2433
    ?15 = v2434
    memory = {
        size=4; addr=v2524-0x4 [from 0x8048368:push   ecx]; value=v2406
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v2405
    cx = v2406
    dx = v2407
    bx = v2408
    sp = v2610 [from 0x8048369:call   0x0804836e]
    bp = v2482 [from 0x8048365:mov    ebp, esp]
    si = v2411
    di = v2412
    es = v2413
    cs = v2414
    ss = v2415
    ds = v2416
    fs = v2417
    gs = v2418
    cf = v2419
    ?1 = v2420
    pf = v2421
    ?3 = v2422
    af = v2423
    ?5 = v2424
    zf = v2425
    sf = v2426
    tf = v2427
    if = v2428
    df = v2429
    of = v2430
    iopl0 = v2431
    iopl1 = v2432
    nt = v2433
    ?15 = v2434
    memory = {
        size=4; addr=v2566-0x4 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2702
    cx = v2703
    dx = v2704
    bx = v2742 [from 0x804836e:pop    ebx]
    sp = v2739 [from 0x804836e:pop    ebx]
    bp = v2707
    si = v2708
    di = v2709
    es = v2710
    cs = v2711
    ss = v2712
    ds = v2713
    fs = v2714
    gs = v2715
    cf = v2716
    ?1 = v2717
    pf = v2718
    ?3 = v2719
    af = v2720
    ?5 = v2721
    zf = v2722
    sf = v2723
    tf = v2724
    if = v2725
    df = v2726
    of = v2727
    iopl0 = v2728
    iopl1 = v2729
    nt = v2730
    ?15 = v2731
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2702
    cx = v2703
    dx = v2704
    bx = v2818 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2739 [from 0x804836e:pop    ebx]
    bp = v2707
    si = v2708
    di = v2709
    es = v2710
    cs = v2711
    ss = v2712
    ds = v2713
    fs = v2714
    gs = v2715
    cf = v2812 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2717
    pf = -v2803-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2719
    af = v2810 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2721
    zf = v2808 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2806 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2724
    if = v2725
    df = v2726
    of = v2816 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2728
    iopl1 = v2729
    nt = v2730
    ?15 = v2731
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2702
    cx = v2703
    dx = v2859 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2818 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2739 [from 0x804836e:pop    ebx]
    bp = v2707
    si = v2708
    di = v2709
    es = v2710
    cs = v2711
    ss = v2712
    ds = v2713
    fs = v2714
    gs = v2715
    cf = v2812 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2717
    pf = -v2803-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2719
    af = v2810 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2721
    zf = v2808 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2806 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2724
    if = v2725
    df = v2726
    of = v2816 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2728
    iopl1 = v2729
    nt = v2730
    ?15 = v2731
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2702
    cx = v2703
    dx = v2859 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2818 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2739 [from 0x804836e:pop    ebx]
    bp = v2707
    si = v2708
    di = v2709
    es = v2710
    cs = v2711
    ss = v2712
    ds = v2713
    fs = v2714
    gs = v2715
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2717
    pf = -v2913-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2719
    af = <top>
    ?5 = v2721
    zf = v2918 [from 0x804837b:test   edx, edx]
    sf = v2916 [from 0x804837b:test   edx, edx]
    tf = v2724
    if = v2725
    df = v2726
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2728
    iopl1 = v2729
    nt = v2730
    ?15 = v2731
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2702
    cx = v2703
    dx = v2859 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2818 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2739 [from 0x804836e:pop    ebx]
    bp = v2707
    si = v2708
    di = v2709
    es = v2710
    cs = v2711
    ss = v2712
    ds = v2713
    fs = v2714
    gs = v2715
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2717
    pf = -v2913-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2719
    af = <top>
    ?5 = v2721
    zf = v2918 [from 0x804837b:test   edx, edx]
    sf = v2916 [from 0x804837b:test   edx, edx]
    tf = v2724
    if = v2725
    df = v2726
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2728
    iopl1 = v2729
    nt = v2730
    ?15 = v2731
    memory = {}
    ip = v2964 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v3087
    cx = v3088
    dx = v3089
    bx = v3090
    sp = v3129 [from 0x804837f:call   0x08048330]
    bp = v3092
    si = v3093
    di = v3094
    es = v3095
    cs = v3096
    ss = v3097
    ds = v3098
    fs = v3099
    gs = v3100
    cf = v3101
    ?1 = v3102
    pf = v3103
    ?3 = v3104
    af = v3105
    ?5 = v3106
    zf = v3107
    sf = v3108
    tf = v3109
    if = v3110
    df = v3111
    of = v3112
    iopl0 = v3113
    iopl1 = v3114
    nt = v3115
    ?15 = v3116
    memory = {
        size=4; addr=v3091-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v3351 [from 0x8048384:pop    eax]
    cx = v3312
    dx = v3313
    bx = v3314
    sp = v3348 [from 0x8048384:pop    eax]
    bp = v3316
    si = v3317
    di = v3318
    es = v3319
    cs = v3320
    ss = v3321
    ds = v3322
    fs = v3323
    gs = v3324
    cf = v3325
    ?1 = v3326
    pf = v3327
    ?3 = v3328
    af = v3329
    ?5 = v3330
    zf = v3331
    sf = v3332
    tf = v3333
    if = v3334
    df = v3335
    of = v3336
    iopl0 = v3337
    iopl1 = v3338
    nt = v3339
    ?15 = v3340
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v3351 [from 0x8048384:pop    eax]
    cx = v3312
    dx = v3313
    bx = v3393 [from 0x8048385:pop    ebx]
    sp = v3390 [from 0x8048385:pop    ebx]
    bp = v3316
    si = v3317
    di = v3318
    es = v3319
    cs = v3320
    ss = v3321
    ds = v3322
    fs = v3323
    gs = v3324
    cf = v3325
    ?1 = v3326
    pf = v3327
    ?3 = v3328
    af = v3329
    ?5 = v3330
    zf = v3331
    sf = v3332
    tf = v3333
    if = v3334
    df = v3335
    of = v3336
    iopl0 = v3337
    iopl1 = v3338
    nt = v3339
    ?15 = v3340
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v3351 [from 0x8048384:pop    eax]
    cx = v3312
    dx = v3313
    bx = v3393 [from 0x8048385:pop    ebx]
    sp = v3437 [from 0x8048386:leave  ]
    bp = v3436 [from 0x8048386:leave  ]
    si = v3317
    di = v3318
    es = v3319
    cs = v3320
    ss = v3321
    ds = v3322
    fs = v3323
    gs = v3324
    cf = v3325
    ?1 = v3326
    pf = v3327
    ?3 = v3328
    af = v3329
    ?5 = v3330
    zf = v3331
    sf = v3332
    tf = v3333
    if = v3334
    df = v3335
    of = v3336
    iopl0 = v3337
    iopl1 = v3338
    nt = v3339
    ?15 = v3340
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v3351 [from 0x8048384:pop    eax]
    cx = v3312
    dx = v3313
    bx = v3393 [from 0x8048385:pop    ebx]
    sp = v3481 [from 0x8048387:ret    ]
    bp = v3436 [from 0x8048386:leave  ]
    si = v3317
    di = v3318
    es = v3319
    cs = v3320
    ss = v3321
    ds = v3322
    fs = v3323
    gs = v3324
    cf = v3325
    ?1 = v3326
    pf = v3327
    ?3 = v3328
    af = v3329
    ?5 = v3330
    zf = v3331
    sf = v3332
    tf = v3333
    if = v3334
    df = v3335
    of = v3336
    iopl0 = v3337
    iopl1 = v3338
    nt = v3339
    ?15 = v3340
    memory = {}
    ip = v3479 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    ax = v3543
    cx = v3544
    dx = v3545
    bx = v3546
    sp = v3583 [from 0x8048390:push   ebp]
    bp = v3548
    si = v3549
    di = v3550
    es = v3551
    cs = v3552
    ss = v3553
    ds = v3554
    fs = v3555
    gs = v3556
    cf = v3557
    ?1 = v3558
    pf = v3559
    ?3 = v3560
    af = v3561
    ?5 = v3562
    zf = v3563
    sf = v3564
    tf = v3565
    if = v3566
    df = v3567
    of = v3568
    iopl0 = v3569
    iopl1 = v3570
    nt = v3571
    ?15 = v3572
    memory = {
        size=4; addr=v3547-0x4 [from 0x8048390:push   ebp]; value=v3548
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v3543
    cx = v3544
    dx = v3545
    bx = v3546
    sp = v3583 [from 0x8048390:push   ebp]
    bp = v3620 [from 0x8048391:mov    ebp, esp]
    si = v3549
    di = v3550
    es = v3551
    cs = v3552
    ss = v3553
    ds = v3554
    fs = v3555
    gs = v3556
    cf = v3557
    ?1 = v3558
    pf = v3559
    ?3 = v3560
    af = v3561
    ?5 = v3562
    zf = v3563
    sf = v3564
    tf = v3565
    if = v3566
    df = v3567
    of = v3568
    iopl0 = v3569
    iopl1 = v3570
    nt = v3571
    ?15 = v3572
    memory = {
        size=4; addr=v3547-0x4 [from 0x8048390:push   ebp]; value=v3548
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v3543
    cx = v3544
    dx = v3545
    bx = v3546
    sp = v3700 [from 0x8048393:sub    esp, 0x08]
    bp = v3620 [from 0x8048391:mov    ebp, esp]
    si = v3549
    di = v3550
    es = v3551
    cs = v3552
    ss = v3553
    ds = v3554
    fs = v3555
    gs = v3556
    cf = -v3693-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v3558
    pf = -v3683-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v3560
    af = -v3690-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v3562
    zf = v3688 [from 0x8048393:sub    esp, 0x08]
    sf = v3686 [from 0x8048393:sub    esp, 0x08]
    tf = v3565
    if = v3566
    df = v3567
    of = v3698 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v3569
    iopl1 = v3570
    nt = v3571
    ?15 = v3572
    memory = {
        size=4; addr=v3547-0x4 [from 0x8048390:push   ebp]; value=v3548
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v3543
    cx = v3544
    dx = v3545
    bx = v3546
    sp = v3700 [from 0x8048393:sub    esp, 0x08]
    bp = v3620 [from 0x8048391:mov    ebp, esp]
    si = v3549
    di = v3550
    es = v3551
    cs = v3552
    ss = v3553
    ds = v3554
    fs = v3555
    gs = v3556
    cf = -v3775-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3558
    pf = -v3765-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3560
    af = -v3772-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3562
    zf = v3770 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3768 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3565
    if = v3566
    df = v3567
    of = v3780 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3569
    iopl1 = v3570
    nt = v3571
    ?15 = v3572
    memory = {
        size=4; addr=v3547-0x4 [from 0x8048390:push   ebp]; value=v3548
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v3543
    cx = v3544
    dx = v3545
    bx = v3546
    sp = v3700 [from 0x8048393:sub    esp, 0x08]
    bp = v3620 [from 0x8048391:mov    ebp, esp]
    si = v3549
    di = v3550
    es = v3551
    cs = v3552
    ss = v3553
    ds = v3554
    fs = v3555
    gs = v3556
    cf = -v3775-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3558
    pf = -v3765-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3560
    af = -v3772-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3562
    zf = v3770 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3768 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3565
    if = v3566
    df = v3567
    of = v3780 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3569
    iopl1 = v3570
    nt = v3571
    ?15 = v3572
    memory = {
        size=4; addr=v3547-0x4 [from 0x8048390:push   ebp]; value=v3548
    }
    ip = v3821 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3981 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3945
    dx = v3946
    bx = v3947
    sp = v3948
    bp = v3949
    si = v3950
    di = v3951
    es = v3952
    cs = v3953
    ss = v3954
    ds = v3955
    fs = v3956
    gs = v3957
    cf = v3958
    ?1 = v3959
    pf = v3960
    ?3 = v3961
    af = v3962
    ?5 = v3963
    zf = v3964
    sf = v3965
    tf = v3966
    if = v3967
    df = v3968
    of = v3969
    iopl0 = v3970
    iopl1 = v3971
    nt = v3972
    ?15 = v3973
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3981 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3945
    dx = v4020 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3947
    sp = v3948
    bp = v3949
    si = v3950
    di = v3951
    es = v3952
    cs = v3953
    ss = v3954
    ds = v3955
    fs = v3956
    gs = v3957
    cf = v3958
    ?1 = v3959
    pf = v3960
    ?3 = v3961
    af = v3962
    ?5 = v3963
    zf = v3964
    sf = v3965
    tf = v3966
    if = v3967
    df = v3968
    of = v3969
    iopl0 = v3970
    iopl1 = v3971
    nt = v3972
    ?15 = v3973
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3981 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3945
    dx = v4020 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3947
    sp = v3948
    bp = v3949
    si = v3950
    di = v3951
    es = v3952
    cs = v3953
    ss = v3954
    ds = v3955
    fs = v3956
    gs = v3957
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3959
    pf = -v4074-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3961
    af = <top>
    ?5 = v3963
    zf = v4079 [from 0x80483a6:test   edx, edx]
    sf = v4077 [from 0x80483a6:test   edx, edx]
    tf = v3966
    if = v3967
    df = v3968
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3970
    iopl1 = v3971
    nt = v3972
    ?15 = v3973
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3981 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3945
    dx = v4020 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3947
    sp = v3948
    bp = v3949
    si = v3950
    di = v3951
    es = v3952
    cs = v3953
    ss = v3954
    ds = v3955
    fs = v3956
    gs = v3957
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3959
    pf = -v4074-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3961
    af = <top>
    ?5 = v3963
    zf = v4079 [from 0x80483a6:test   edx, edx]
    sf = v4077 [from 0x80483a6:test   edx, edx]
    tf = v3966
    if = v3967
    df = v3968
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3970
    iopl1 = v3971
    nt = v3972
    ?15 = v3973
    memory = {}
    ip = v4125 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v4248
    cx = v4249
    dx = v4250
    bx = v4251
    sp = v4252
    bp = v4253
    si = v4285 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4255
    es = v4256
    cs = v4257
    ss = v4258
    ds = v4259
    fs = v4260
    gs = v4261
    cf = v4262
    ?1 = v4263
    pf = v4264
    ?3 = v4265
    af = v4266
    ?5 = v4267
    zf = v4268
    sf = v4269
    tf = v4270
    if = v4271
    df = v4272
    of = v4273
    iopl0 = v4274
    iopl1 = v4275
    nt = v4276
    ?15 = v4277
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v4361 [from 0x80483b0:add    eax, 0x04]
    cx = v4249
    dx = v4250
    bx = v4251
    sp = v4252
    bp = v4253
    si = v4285 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4255
    es = v4256
    cs = v4257
    ss = v4258
    ds = v4259
    fs = v4260
    gs = v4261
    cf = v4355 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4263
    pf = -v4346-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4265
    af = v4353 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4267
    zf = v4351 [from 0x80483b0:add    eax, 0x04]
    sf = v4349 [from 0x80483b0:add    eax, 0x04]
    tf = v4270
    if = v4271
    df = v4272
    of = v4359 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4274
    iopl1 = v4275
    nt = v4276
    ?15 = v4277
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v4361 [from 0x80483b0:add    eax, 0x04]
    cx = v4249
    dx = v4250
    bx = v4251
    sp = v4252
    bp = v4253
    si = v4285 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4255
    es = v4256
    cs = v4257
    ss = v4258
    ds = v4259
    fs = v4260
    gs = v4261
    cf = v4355 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4263
    pf = -v4346-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4265
    af = v4353 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4267
    zf = v4351 [from 0x80483b0:add    eax, 0x04]
    sf = v4349 [from 0x80483b0:add    eax, 0x04]
    tf = v4270
    if = v4271
    df = v4272
    of = v4359 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4274
    iopl1 = v4275
    nt = v4276
    ?15 = v4277
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v4361 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v4361 [from 0x80483b0:add    eax, 0x04]
    cx = v4249
    dx = v4250
    bx = v4251
    sp = v4444 [from 0x80483b8:call   edx]
    bp = v4253
    si = v4285 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4255
    es = v4256
    cs = v4257
    ss = v4258
    ds = v4259
    fs = v4260
    gs = v4261
    cf = v4355 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4263
    pf = -v4346-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4265
    af = v4353 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4267
    zf = v4351 [from 0x80483b0:add    eax, 0x04]
    sf = v4349 [from 0x80483b0:add    eax, 0x04]
    tf = v4270
    if = v4271
    df = v4272
    of = v4359 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4274
    iopl1 = v4275
    nt = v4276
    ?15 = v4277
    memory = {
        size=4; addr=v4252-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v4250
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v4633 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4597
    dx = v4598
    bx = v4599
    sp = v4600
    bp = v4601
    si = v4602
    di = v4603
    es = v4604
    cs = v4605
    ss = v4606
    ds = v4607
    fs = v4608
    gs = v4609
    cf = v4610
    ?1 = v4611
    pf = v4612
    ?3 = v4613
    af = v4614
    ?5 = v4615
    zf = v4616
    sf = v4617
    tf = v4618
    if = v4619
    df = v4620
    of = v4621
    iopl0 = v4622
    iopl1 = v4623
    nt = v4624
    ?15 = v4625
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v4633 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4597
    dx = v4672 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4599
    sp = v4600
    bp = v4601
    si = v4602
    di = v4603
    es = v4604
    cs = v4605
    ss = v4606
    ds = v4607
    fs = v4608
    gs = v4609
    cf = v4610
    ?1 = v4611
    pf = v4612
    ?3 = v4613
    af = v4614
    ?5 = v4615
    zf = v4616
    sf = v4617
    tf = v4618
    if = v4619
    df = v4620
    of = v4621
    iopl0 = v4622
    iopl1 = v4623
    nt = v4624
    ?15 = v4625
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v4633 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4597
    dx = v4672 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4599
    sp = v4600
    bp = v4601
    si = v4602
    di = v4603
    es = v4604
    cs = v4605
    ss = v4606
    ds = v4607
    fs = v4608
    gs = v4609
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4611
    pf = -v4726-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4613
    af = <top>
    ?5 = v4615
    zf = v4731 [from 0x80483c1:test   edx, edx]
    sf = v4729 [from 0x80483c1:test   edx, edx]
    tf = v4618
    if = v4619
    df = v4620
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4622
    iopl1 = v4623
    nt = v4624
    ?15 = v4625
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v4633 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4597
    dx = v4672 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4599
    sp = v4600
    bp = v4601
    si = v4602
    di = v4603
    es = v4604
    cs = v4605
    ss = v4606
    ds = v4607
    fs = v4608
    gs = v4609
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4611
    pf = -v4726-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4613
    af = <top>
    ?5 = v4615
    zf = v4731 [from 0x80483c1:test   edx, edx]
    sf = v4729 [from 0x80483c1:test   edx, edx]
    tf = v4618
    if = v4619
    df = v4620
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4622
    iopl1 = v4623
    nt = v4624
    ?15 = v4625
    memory = {}
    ip = v4778 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v4901
    cx = v4902
    dx = v4903
    bx = v4904
    sp = v4905
    bp = v4906
    si = v4907
    di = v4908
    es = v4909
    cs = v4910
    ss = v4911
    ds = v4912
    fs = v4913
    gs = v4914
    cf = v4915
    ?1 = v4916
    pf = v4917
    ?3 = v4918
    af = v4919
    ?5 = v4920
    zf = v4921
    sf = v4922
    tf = v4923
    if = v4924
    df = v4925
    of = v4926
    iopl0 = v4927
    iopl1 = v4928
    nt = v4929
    ?15 = v4930
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v4901
    cx = v4902
    dx = v4903
    bx = v4904
    sp = v4982 [from 0x80483cc:leave  ]
    bp = v4981 [from 0x80483cc:leave  ]
    si = v4907
    di = v4908
    es = v4909
    cs = v4910
    ss = v4911
    ds = v4912
    fs = v4913
    gs = v4914
    cf = v4915
    ?1 = v4916
    pf = v4917
    ?3 = v4918
    af = v4919
    ?5 = v4920
    zf = v4921
    sf = v4922
    tf = v4923
    if = v4924
    df = v4925
    of = v4926
    iopl0 = v4927
    iopl1 = v4928
    nt = v4929
    ?15 = v4930
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v4901
    cx = v4902
    dx = v4903
    bx = v4904
    sp = v5026 [from 0x80483cd:ret    ]
    bp = v4981 [from 0x80483cc:leave  ]
    si = v4907
    di = v4908
    es = v4909
    cs = v4910
    ss = v4911
    ds = v4912
    fs = v4913
    gs = v4914
    cf = v4915
    ?1 = v4916
    pf = v4917
    ?3 = v4918
    af = v4919
    ?5 = v4920
    zf = v4921
    sf = v4922
    tf = v4923
    if = v4924
    df = v4925
    of = v4926
    iopl0 = v4927
    iopl1 = v4928
    nt = v4929
    ?15 = v4930
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v5024 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v5088
    cx = v5089
    dx = v5090
    bx = v5091
    sp = v5128 [from 0x80483d0:push   ebp]
    bp = v5093
    si = v5094
    di = v5095
    es = v5096
    cs = v5097
    ss = v5098
    ds = v5099
    fs = v5100
    gs = v5101
    cf = v5102
    ?1 = v5103
    pf = v5104
    ?3 = v5105
    af = v5106
    ?5 = v5107
    zf = v5108
    sf = v5109
    tf = v5110
    if = v5111
    df = v5112
    of = v5113
    iopl0 = v5114
    iopl1 = v5115
    nt = v5116
    ?15 = v5117
    memory = {
        size=4; addr=v5092-0x4 [from 0x80483d0:push   ebp]; value=v5093
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v5088
    cx = v5089
    dx = v5090
    bx = v5091
    sp = v5128 [from 0x80483d0:push   ebp]
    bp = v5165 [from 0x80483d1:mov    ebp, esp]
    si = v5094
    di = v5095
    es = v5096
    cs = v5097
    ss = v5098
    ds = v5099
    fs = v5100
    gs = v5101
    cf = v5102
    ?1 = v5103
    pf = v5104
    ?3 = v5105
    af = v5106
    ?5 = v5107
    zf = v5108
    sf = v5109
    tf = v5110
    if = v5111
    df = v5112
    of = v5113
    iopl0 = v5114
    iopl1 = v5115
    nt = v5116
    ?15 = v5117
    memory = {
        size=4; addr=v5092-0x4 [from 0x80483d0:push   ebp]; value=v5093
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v5088
    cx = v5089
    dx = v5090
    bx = v5091
    sp = v5245 [from 0x80483d3:sub    esp, 0x08]
    bp = v5165 [from 0x80483d1:mov    ebp, esp]
    si = v5094
    di = v5095
    es = v5096
    cs = v5097
    ss = v5098
    ds = v5099
    fs = v5100
    gs = v5101
    cf = -v5238-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v5103
    pf = -v5228-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v5105
    af = -v5235-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v5107
    zf = v5233 [from 0x80483d3:sub    esp, 0x08]
    sf = v5231 [from 0x80483d3:sub    esp, 0x08]
    tf = v5110
    if = v5111
    df = v5112
    of = v5243 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v5114
    iopl1 = v5115
    nt = v5116
    ?15 = v5117
    memory = {
        size=4; addr=v5092-0x4 [from 0x80483d0:push   ebp]; value=v5093
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v5284 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5089
    dx = v5090
    bx = v5091
    sp = v5245 [from 0x80483d3:sub    esp, 0x08]
    bp = v5165 [from 0x80483d1:mov    ebp, esp]
    si = v5094
    di = v5095
    es = v5096
    cs = v5097
    ss = v5098
    ds = v5099
    fs = v5100
    gs = v5101
    cf = -v5238-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v5103
    pf = -v5228-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v5105
    af = -v5235-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v5107
    zf = v5233 [from 0x80483d3:sub    esp, 0x08]
    sf = v5231 [from 0x80483d3:sub    esp, 0x08]
    tf = v5110
    if = v5111
    df = v5112
    of = v5243 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v5114
    iopl1 = v5115
    nt = v5116
    ?15 = v5117
    memory = {
        size=4; addr=v5092-0x4 [from 0x80483d0:push   ebp]; value=v5093
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v5284 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5089
    dx = v5090
    bx = v5091
    sp = v5245 [from 0x80483d3:sub    esp, 0x08]
    bp = v5165 [from 0x80483d1:mov    ebp, esp]
    si = v5094
    di = v5095
    es = v5096
    cs = v5097
    ss = v5098
    ds = v5099
    fs = v5100
    gs = v5101
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v5103
    pf = -v5338-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v5105
    af = <top>
    ?5 = v5107
    zf = v5343 [from 0x80483db:test   eax, eax]
    sf = v5341 [from 0x80483db:test   eax, eax]
    tf = v5110
    if = v5111
    df = v5112
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v5114
    iopl1 = v5115
    nt = v5116
    ?15 = v5117
    memory = {
        size=4; addr=v5092-0x4 [from 0x80483d0:push   ebp]; value=v5093
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v5284 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5089
    dx = v5090
    bx = v5091
    sp = v5245 [from 0x80483d3:sub    esp, 0x08]
    bp = v5165 [from 0x80483d1:mov    ebp, esp]
    si = v5094
    di = v5095
    es = v5096
    cs = v5097
    ss = v5098
    ds = v5099
    fs = v5100
    gs = v5101
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v5103
    pf = -v5338-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v5105
    af = <top>
    ?5 = v5107
    zf = v5343 [from 0x80483db:test   eax, eax]
    sf = v5341 [from 0x80483db:test   eax, eax]
    tf = v5110
    if = v5111
    df = v5112
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v5114
    iopl1 = v5115
    nt = v5116
    ?15 = v5117
    memory = {
        size=4; addr=v5092-0x4 [from 0x80483d0:push   ebp]; value=v5093
    }
    ip = v5389 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5513
    dx = v5514
    bx = v5515
    sp = v5516
    bp = v5517
    si = v5518
    di = v5519
    es = v5520
    cs = v5521
    ss = v5522
    ds = v5523
    fs = v5524
    gs = v5525
    cf = v5526
    ?1 = v5527
    pf = v5528
    ?3 = v5529
    af = v5530
    ?5 = v5531
    zf = v5532
    sf = v5533
    tf = v5534
    if = v5535
    df = v5536
    of = v5537
    iopl0 = v5538
    iopl1 = v5539
    nt = v5540
    ?15 = v5541
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5513
    dx = v5514
    bx = v5515
    sp = v5516
    bp = v5517
    si = v5518
    di = v5519
    es = v5520
    cs = v5521
    ss = v5522
    ds = v5523
    fs = v5524
    gs = v5525
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5527
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5529
    af = <top>
    ?5 = v5531
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5534
    if = v5535
    df = v5536
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5538
    iopl1 = v5539
    nt = v5540
    ?15 = v5541
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5513
    dx = v5514
    bx = v5515
    sp = v5516
    bp = v5517
    si = v5518
    di = v5519
    es = v5520
    cs = v5521
    ss = v5522
    ds = v5523
    fs = v5524
    gs = v5525
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5527
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5529
    af = <top>
    ?5 = v5531
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5534
    if = v5535
    df = v5536
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5538
    iopl1 = v5539
    nt = v5540
    ?15 = v5541
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5513
    dx = v5514
    bx = v5515
    sp = v5690 [from 0x8048400:mov    esp, ebp]
    bp = v5517
    si = v5518
    di = v5519
    es = v5520
    cs = v5521
    ss = v5522
    ds = v5523
    fs = v5524
    gs = v5525
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5527
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5529
    af = <top>
    ?5 = v5531
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5534
    if = v5535
    df = v5536
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5538
    iopl1 = v5539
    nt = v5540
    ?15 = v5541
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5513
    dx = v5514
    bx = v5515
    sp = v5729 [from 0x8048402:pop    ebp]
    bp = v5732 [from 0x8048402:pop    ebp]
    si = v5518
    di = v5519
    es = v5520
    cs = v5521
    ss = v5522
    ds = v5523
    fs = v5524
    gs = v5525
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5527
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5529
    af = <top>
    ?5 = v5531
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5534
    if = v5535
    df = v5536
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5538
    iopl1 = v5539
    nt = v5540
    ?15 = v5541
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5513
    dx = v5514
    bx = v5515
    sp = v5776 [from 0x8048403:ret    ]
    bp = v5732 [from 0x8048402:pop    ebp]
    si = v5518
    di = v5519
    es = v5520
    cs = v5521
    ss = v5522
    ds = v5523
    fs = v5524
    gs = v5525
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5527
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5529
    af = <top>
    ?5 = v5531
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5534
    if = v5535
    df = v5536
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5538
    iopl1 = v5539
    nt = v5540
    ?15 = v5541
    memory = {}
    ip = v5774 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = v5838
    cx = v5839
    dx = v5840
    bx = v5841
    sp = v5842
    bp = v5843
    si = v5844
    di = v5845
    es = v5846
    cs = v5847
    ss = v5848
    ds = v5849
    fs = v5850
    gs = v5851
    cf = v5852
    ?1 = v5853
    pf = v5854
    ?3 = v5855
    af = v5856
    ?5 = v5857
    zf = v5858
    sf = v5859
    tf = v5860
    if = v5861
    df = v5862
    of = v5863
    iopl0 = v5864
    iopl1 = v5865
    nt = v5866
    ?15 = v5867
    memory = {
        size=4; addr=v5842; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
0x80483ef:call   0x00000000
    ax = v5838
    cx = v5839
    dx = v5840
    bx = v5841
    sp = v5919 [from 0x80483ef:call   0x00000000]
    bp = v5843
    si = v5844
    di = v5845
    es = v5846
    cs = v5847
    ss = v5848
    ds = v5849
    fs = v5850
    gs = v5851
    cf = v5852
    ?1 = v5853
    pf = v5854
    ?3 = v5855
    af = v5856
    ?5 = v5857
    zf = v5858
    sf = v5859
    tf = v5860
    if = v5861
    df = v5862
    of = v5863
    iopl0 = v5864
    iopl1 = v5865
    nt = v5866
    ?15 = v5867
    memory = {
        size=4; addr=v5842; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=v5842-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v6101
    cx = v6102
    dx = v6103
    bx = v6104
    sp = v6105
    bp = v6106
    si = v6138 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v6108
    es = v6109
    cs = v6110
    ss = v6111
    ds = v6112
    fs = v6113
    gs = v6114
    cf = v6115
    ?1 = v6116
    pf = v6117
    ?3 = v6118
    af = v6119
    ?5 = v6120
    zf = v6121
    sf = v6122
    tf = v6123
    if = v6124
    df = v6125
    of = v6126
    iopl0 = v6127
    iopl1 = v6128
    nt = v6129
    ?15 = v6130
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v6101
    cx = v6102
    dx = v6103
    bx = v6104
    sp = v6105
    bp = v6106
    si = v6138 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v6177 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v6109
    cs = v6110
    ss = v6111
    ds = v6112
    fs = v6113
    gs = v6114
    cf = v6115
    ?1 = v6116
    pf = v6117
    ?3 = v6118
    af = v6119
    ?5 = v6120
    zf = v6121
    sf = v6122
    tf = v6123
    if = v6124
    df = v6125
    of = v6126
    iopl0 = v6127
    iopl1 = v6128
    nt = v6129
    ?15 = v6130
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    ax = v6269
    cx = v6270
    dx = v6271
    bx = v6272
    sp = v6309 [from 0x8048410:push   ebp]
    bp = v6274
    si = v6275
    di = v6276
    es = v6277
    cs = v6278
    ss = v6279
    ds = v6280
    fs = v6281
    gs = v6282
    cf = v6283
    ?1 = v6284
    pf = v6285
    ?3 = v6286
    af = v6287
    ?5 = v6288
    zf = v6289
    sf = v6290
    tf = v6291
    if = v6292
    df = v6293
    of = v6294
    iopl0 = v6295
    iopl1 = v6296
    nt = v6297
    ?15 = v6298
    memory = {
        size=4; addr=v6273-0x4 [from 0x8048410:push   ebp]; value=v6274
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v6269
    cx = v6270
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6272
    sp = v6309 [from 0x8048410:push   ebp]
    bp = v6274
    si = v6275
    di = v6276
    es = v6277
    cs = v6278
    ss = v6279
    ds = v6280
    fs = v6281
    gs = v6282
    cf = v6283
    ?1 = v6284
    pf = v6285
    ?3 = v6286
    af = v6287
    ?5 = v6288
    zf = v6289
    sf = v6290
    tf = v6291
    if = v6292
    df = v6293
    of = v6294
    iopl0 = v6295
    iopl1 = v6296
    nt = v6297
    ?15 = v6298
    memory = {
        size=4; addr=v6273-0x4 [from 0x8048410:push   ebp]; value=v6274
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v6269
    cx = v6270
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6272
    sp = v6309 [from 0x8048410:push   ebp]
    bp = v6383 [from 0x8048416:mov    ebp, esp]
    si = v6275
    di = v6276
    es = v6277
    cs = v6278
    ss = v6279
    ds = v6280
    fs = v6281
    gs = v6282
    cf = v6283
    ?1 = v6284
    pf = v6285
    ?3 = v6286
    af = v6287
    ?5 = v6288
    zf = v6289
    sf = v6290
    tf = v6291
    if = v6292
    df = v6293
    of = v6294
    iopl0 = v6295
    iopl1 = v6296
    nt = v6297
    ?15 = v6298
    memory = {
        size=4; addr=v6273-0x4 [from 0x8048410:push   ebp]; value=v6274
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v6269
    cx = v6270
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6272
    sp = v6463 [from 0x8048418:sub    esp, 0x08]
    bp = v6383 [from 0x8048416:mov    ebp, esp]
    si = v6275
    di = v6276
    es = v6277
    cs = v6278
    ss = v6279
    ds = v6280
    fs = v6281
    gs = v6282
    cf = -v6456-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v6284
    pf = -v6446-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v6286
    af = -v6453-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v6288
    zf = v6451 [from 0x8048418:sub    esp, 0x08]
    sf = v6449 [from 0x8048418:sub    esp, 0x08]
    tf = v6291
    if = v6292
    df = v6293
    of = v6461 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v6295
    iopl1 = v6296
    nt = v6297
    ?15 = v6298
    memory = {
        size=4; addr=v6273-0x4 [from 0x8048410:push   ebp]; value=v6274
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v6269
    cx = v6270
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6272
    sp = v6524 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6383 [from 0x8048416:mov    ebp, esp]
    si = v6275
    di = v6276
    es = v6277
    cs = v6278
    ss = v6279
    ds = v6280
    fs = v6281
    gs = v6282
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6284
    pf = -v6517-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6286
    af = <top>
    ?5 = v6288
    zf = v6522 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6520 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6291
    if = v6292
    df = v6293
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6295
    iopl1 = v6296
    nt = v6297
    ?15 = v6298
    memory = {
        size=4; addr=v6273-0x4 [from 0x8048410:push   ebp]; value=v6274
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v6269
    cx = v6270
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6272
    sp = v6524 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6383 [from 0x8048416:mov    ebp, esp]
    si = v6275
    di = v6276
    es = v6277
    cs = v6278
    ss = v6279
    ds = v6280
    fs = v6281
    gs = v6282
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6284
    pf = -v6517-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6286
    af = <top>
    ?5 = v6288
    zf = v6522 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6520 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6291
    if = v6292
    df = v6293
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6295
    iopl1 = v6296
    nt = v6297
    ?15 = v6298
    memory = {
        size=4; addr=v6524+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v6269
    cx = v6270
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6272
    sp = v6524 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6383 [from 0x8048416:mov    ebp, esp]
    si = v6275
    di = v6276
    es = v6277
    cs = v6278
    ss = v6279
    ds = v6280
    fs = v6281
    gs = v6282
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6284
    pf = -v6517-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6286
    af = <top>
    ?5 = v6288
    zf = v6522 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6520 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6291
    if = v6292
    df = v6293
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6295
    iopl1 = v6296
    nt = v6297
    ?15 = v6298
    memory = {
        size=4; addr=v6524 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v6524+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v6269
    cx = v6270
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6272
    sp = v6654 [from 0x8048429:call   0x080482f0]
    bp = v6383 [from 0x8048416:mov    ebp, esp]
    si = v6275
    di = v6276
    es = v6277
    cs = v6278
    ss = v6279
    ds = v6280
    fs = v6281
    gs = v6282
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6284
    pf = -v6517-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6286
    af = <top>
    ?5 = v6288
    zf = v6522 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6520 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6291
    if = v6292
    df = v6293
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6295
    iopl1 = v6296
    nt = v6297
    ?15 = v6298
    memory = {
        size=4; addr=v6524 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v6524+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v6524-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v6836
    cx = v6837
    dx = v6838
    bx = v6839
    sp = v6871 [from 0x804842e:mov    esp, ebp]
    bp = v6841
    si = v6842
    di = v6843
    es = v6844
    cs = v6845
    ss = v6846
    ds = v6847
    fs = v6848
    gs = v6849
    cf = v6850
    ?1 = v6851
    pf = v6852
    ?3 = v6853
    af = v6854
    ?5 = v6855
    zf = v6856
    sf = v6857
    tf = v6858
    if = v6859
    df = v6860
    of = v6861
    iopl0 = v6862
    iopl1 = v6863
    nt = v6864
    ?15 = v6865
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6837
    dx = v6838
    bx = v6839
    sp = v6871 [from 0x804842e:mov    esp, ebp]
    bp = v6841
    si = v6842
    di = v6843
    es = v6844
    cs = v6845
    ss = v6846
    ds = v6847
    fs = v6848
    gs = v6849
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6851
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6853
    af = <top>
    ?5 = v6855
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6858
    if = v6859
    df = v6860
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6862
    iopl1 = v6863
    nt = v6864
    ?15 = v6865
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6837
    dx = v6838
    bx = v6839
    sp = v6977 [from 0x8048432:pop    ebp]
    bp = v6980 [from 0x8048432:pop    ebp]
    si = v6842
    di = v6843
    es = v6844
    cs = v6845
    ss = v6846
    ds = v6847
    fs = v6848
    gs = v6849
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6851
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6853
    af = <top>
    ?5 = v6855
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6858
    if = v6859
    df = v6860
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6862
    iopl1 = v6863
    nt = v6864
    ?15 = v6865
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6837
    dx = v6838
    bx = v6839
    sp = v7024 [from 0x8048433:ret    ]
    bp = v6980 [from 0x8048432:pop    ebp]
    si = v6842
    di = v6843
    es = v6844
    cs = v6845
    ss = v6846
    ds = v6847
    fs = v6848
    gs = v6849
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6851
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6853
    af = <top>
    ?5 = v6855
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6858
    if = v6859
    df = v6860
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6862
    iopl1 = v6863
    nt = v6864
    ?15 = v6865
    memory = {}
    ip = v7022 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v7086
    cx = v7087
    dx = v7088
    bx = v7089
    sp = v7126 [from 0x8048440:push   ebp]
    bp = v7091
    si = v7092
    di = v7093
    es = v7094
    cs = v7095
    ss = v7096
    ds = v7097
    fs = v7098
    gs = v7099
    cf = v7100
    ?1 = v7101
    pf = v7102
    ?3 = v7103
    af = v7104
    ?5 = v7105
    zf = v7106
    sf = v7107
    tf = v7108
    if = v7109
    df = v7110
    of = v7111
    iopl0 = v7112
    iopl1 = v7113
    nt = v7114
    ?15 = v7115
    memory = {
        size=4; addr=v7090-0x4 [from 0x8048440:push   ebp]; value=v7091
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v7086
    cx = v7087
    dx = v7088
    bx = v7089
    sp = v7126 [from 0x8048440:push   ebp]
    bp = v7163 [from 0x8048441:mov    ebp, esp]
    si = v7092
    di = v7093
    es = v7094
    cs = v7095
    ss = v7096
    ds = v7097
    fs = v7098
    gs = v7099
    cf = v7100
    ?1 = v7101
    pf = v7102
    ?3 = v7103
    af = v7104
    ?5 = v7105
    zf = v7106
    sf = v7107
    tf = v7108
    if = v7109
    df = v7110
    of = v7111
    iopl0 = v7112
    iopl1 = v7113
    nt = v7114
    ?15 = v7115
    memory = {
        size=4; addr=v7090-0x4 [from 0x8048440:push   ebp]; value=v7091
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v7086
    cx = v7087
    dx = v7088
    bx = v7089
    sp = v7243 [from 0x8048443:sub    esp, 0x08]
    bp = v7163 [from 0x8048441:mov    ebp, esp]
    si = v7092
    di = v7093
    es = v7094
    cs = v7095
    ss = v7096
    ds = v7097
    fs = v7098
    gs = v7099
    cf = -v7236-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7101
    pf = -v7226-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7103
    af = -v7233-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7105
    zf = v7231 [from 0x8048443:sub    esp, 0x08]
    sf = v7229 [from 0x8048443:sub    esp, 0x08]
    tf = v7108
    if = v7109
    df = v7110
    of = v7241 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7112
    iopl1 = v7113
    nt = v7114
    ?15 = v7115
    memory = {
        size=4; addr=v7090-0x4 [from 0x8048440:push   ebp]; value=v7091
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7086
    cx = v7087
    dx = v7088
    bx = v7089
    sp = v7243 [from 0x8048443:sub    esp, 0x08]
    bp = v7163 [from 0x8048441:mov    ebp, esp]
    si = v7092
    di = v7093
    es = v7094
    cs = v7095
    ss = v7096
    ds = v7097
    fs = v7098
    gs = v7099
    cf = -v7236-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7101
    pf = -v7226-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7103
    af = -v7233-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7105
    zf = v7231 [from 0x8048443:sub    esp, 0x08]
    sf = v7229 [from 0x8048443:sub    esp, 0x08]
    tf = v7108
    if = v7109
    df = v7110
    of = v7241 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7112
    iopl1 = v7113
    nt = v7114
    ?15 = v7115
    memory = {
        size=4; addr=v7243 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v7086
    cx = v7087
    dx = v7088
    bx = v7089
    sp = v7326 [from 0x804844d:call   0x08048300]
    bp = v7163 [from 0x8048441:mov    ebp, esp]
    si = v7092
    di = v7093
    es = v7094
    cs = v7095
    ss = v7096
    ds = v7097
    fs = v7098
    gs = v7099
    cf = -v7236-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7101
    pf = -v7226-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7103
    af = -v7233-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7105
    zf = v7231 [from 0x8048443:sub    esp, 0x08]
    sf = v7229 [from 0x8048443:sub    esp, 0x08]
    tf = v7108
    if = v7109
    df = v7110
    of = v7241 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7112
    iopl1 = v7113
    nt = v7114
    ?15 = v7115
    memory = {
        size=4; addr=v7243 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7243-0x4 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v7508
    cx = v7509
    dx = v7510
    bx = v7511
    sp = v7543 [from 0x8048452:mov    esp, ebp]
    bp = v7513
    si = v7514
    di = v7515
    es = v7516
    cs = v7517
    ss = v7518
    ds = v7519
    fs = v7520
    gs = v7521
    cf = v7522
    ?1 = v7523
    pf = v7524
    ?3 = v7525
    af = v7526
    ?5 = v7527
    zf = v7528
    sf = v7529
    tf = v7530
    if = v7531
    df = v7532
    of = v7533
    iopl0 = v7534
    iopl1 = v7535
    nt = v7536
    ?15 = v7537
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v7508
    cx = v7509
    dx = v7510
    bx = v7511
    sp = v7582 [from 0x8048454:pop    ebp]
    bp = v7585 [from 0x8048454:pop    ebp]
    si = v7514
    di = v7515
    es = v7516
    cs = v7517
    ss = v7518
    ds = v7519
    fs = v7520
    gs = v7521
    cf = v7522
    ?1 = v7523
    pf = v7524
    ?3 = v7525
    af = v7526
    ?5 = v7527
    zf = v7528
    sf = v7529
    tf = v7530
    if = v7531
    df = v7532
    of = v7533
    iopl0 = v7534
    iopl1 = v7535
    nt = v7536
    ?15 = v7537
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v7508
    cx = v7509
    dx = v7510
    bx = v7511
    sp = v7629 [from 0x8048455:ret    ]
    bp = v7585 [from 0x8048454:pop    ebp]
    si = v7514
    di = v7515
    es = v7516
    cs = v7517
    ss = v7518
    ds = v7519
    fs = v7520
    gs = v7521
    cf = v7522
    ?1 = v7523
    pf = v7524
    ?3 = v7525
    af = v7526
    ?5 = v7527
    zf = v7528
    sf = v7529
    tf = v7530
    if = v7531
    df = v7532
    of = v7533
    iopl0 = v7534
    iopl1 = v7535
    nt = v7536
    ?15 = v7537
    memory = {}
    ip = v7627 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v7691
    cx = v7692
    dx = v7693
    bx = v7694
    sp = v7731 [from 0x8048460:push   ebp]
    bp = v7696
    si = v7697
    di = v7698
    es = v7699
    cs = v7700
    ss = v7701
    ds = v7702
    fs = v7703
    gs = v7704
    cf = v7705
    ?1 = v7706
    pf = v7707
    ?3 = v7708
    af = v7709
    ?5 = v7710
    zf = v7711
    sf = v7712
    tf = v7713
    if = v7714
    df = v7715
    of = v7716
    iopl0 = v7717
    iopl1 = v7718
    nt = v7719
    ?15 = v7720
    memory = {
        size=4; addr=v7695-0x4 [from 0x8048460:push   ebp]; value=v7696
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v7691
    cx = v7692
    dx = v7693
    bx = v7694
    sp = v7731 [from 0x8048460:push   ebp]
    bp = v7768 [from 0x8048461:mov    ebp, esp]
    si = v7697
    di = v7698
    es = v7699
    cs = v7700
    ss = v7701
    ds = v7702
    fs = v7703
    gs = v7704
    cf = v7705
    ?1 = v7706
    pf = v7707
    ?3 = v7708
    af = v7709
    ?5 = v7710
    zf = v7711
    sf = v7712
    tf = v7713
    if = v7714
    df = v7715
    of = v7716
    iopl0 = v7717
    iopl1 = v7718
    nt = v7719
    ?15 = v7720
    memory = {
        size=4; addr=v7695-0x4 [from 0x8048460:push   ebp]; value=v7696
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v7691
    cx = v7692
    dx = v7693
    bx = v7694
    sp = v7848 [from 0x8048463:sub    esp, 0x08]
    bp = v7768 [from 0x8048461:mov    ebp, esp]
    si = v7697
    di = v7698
    es = v7699
    cs = v7700
    ss = v7701
    ds = v7702
    fs = v7703
    gs = v7704
    cf = -v7841-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7706
    pf = -v7831-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7708
    af = -v7838-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7710
    zf = v7836 [from 0x8048463:sub    esp, 0x08]
    sf = v7834 [from 0x8048463:sub    esp, 0x08]
    tf = v7713
    if = v7714
    df = v7715
    of = v7846 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7717
    iopl1 = v7718
    nt = v7719
    ?15 = v7720
    memory = {
        size=4; addr=v7695-0x4 [from 0x8048460:push   ebp]; value=v7696
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7691
    cx = v7692
    dx = v7693
    bx = v7694
    sp = v7848 [from 0x8048463:sub    esp, 0x08]
    bp = v7768 [from 0x8048461:mov    ebp, esp]
    si = v7697
    di = v7698
    es = v7699
    cs = v7700
    ss = v7701
    ds = v7702
    fs = v7703
    gs = v7704
    cf = -v7841-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7706
    pf = -v7831-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7708
    af = -v7838-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7710
    zf = v7836 [from 0x8048463:sub    esp, 0x08]
    sf = v7834 [from 0x8048463:sub    esp, 0x08]
    tf = v7713
    if = v7714
    df = v7715
    of = v7846 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7717
    iopl1 = v7718
    nt = v7719
    ?15 = v7720
    memory = {
        size=4; addr=v7848 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v7691
    cx = v7692
    dx = v7693
    bx = v7694
    sp = v7931 [from 0x804846d:call   0x08048300]
    bp = v7768 [from 0x8048461:mov    ebp, esp]
    si = v7697
    di = v7698
    es = v7699
    cs = v7700
    ss = v7701
    ds = v7702
    fs = v7703
    gs = v7704
    cf = -v7841-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7706
    pf = -v7831-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7708
    af = -v7838-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7710
    zf = v7836 [from 0x8048463:sub    esp, 0x08]
    sf = v7834 [from 0x8048463:sub    esp, 0x08]
    tf = v7713
    if = v7714
    df = v7715
    of = v7846 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7717
    iopl1 = v7718
    nt = v7719
    ?15 = v7720
    memory = {
        size=4; addr=v7848 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7848-0x4 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v8113
    cx = v8114
    dx = v8115
    bx = v8116
    sp = v8117
    bp = v8118
    si = v8119
    di = v8120
    es = v8121
    cs = v8122
    ss = v8123
    ds = v8124
    fs = v8125
    gs = v8126
    cf = v8127
    ?1 = v8128
    pf = v8129
    ?3 = v8130
    af = v8131
    ?5 = v8132
    zf = v8133
    sf = v8134
    tf = v8135
    if = v8136
    df = v8137
    of = v8138
    iopl0 = v8139
    iopl1 = v8140
    nt = v8141
    ?15 = v8142
    memory = {
        size=4; addr=v8117; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v8113
    cx = v8114
    dx = v8115
    bx = v8116
    sp = v8194 [from 0x8048479:call   0x08048320]
    bp = v8118
    si = v8119
    di = v8120
    es = v8121
    cs = v8122
    ss = v8123
    ds = v8124
    fs = v8125
    gs = v8126
    cf = v8127
    ?1 = v8128
    pf = v8129
    ?3 = v8130
    af = v8131
    ?5 = v8132
    zf = v8133
    sf = v8134
    tf = v8135
    if = v8136
    df = v8137
    of = v8138
    iopl0 = v8139
    iopl1 = v8140
    nt = v8141
    ?15 = v8142
    memory = {
        size=4; addr=v8117; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v8117-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v8376
    cx = v8377
    dx = v8378
    bx = v8379
    sp = v8416 [from 0x8048480:push   ebp]
    bp = v8381
    si = v8382
    di = v8383
    es = v8384
    cs = v8385
    ss = v8386
    ds = v8387
    fs = v8388
    gs = v8389
    cf = v8390
    ?1 = v8391
    pf = v8392
    ?3 = v8393
    af = v8394
    ?5 = v8395
    zf = v8396
    sf = v8397
    tf = v8398
    if = v8399
    df = v8400
    of = v8401
    iopl0 = v8402
    iopl1 = v8403
    nt = v8404
    ?15 = v8405
    memory = {
        size=4; addr=v8380-0x4 [from 0x8048480:push   ebp]; value=v8381
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v8376
    cx = v8377
    dx = v8378
    bx = v8379
    sp = v8416 [from 0x8048480:push   ebp]
    bp = v8453 [from 0x8048481:mov    ebp, esp]
    si = v8382
    di = v8383
    es = v8384
    cs = v8385
    ss = v8386
    ds = v8387
    fs = v8388
    gs = v8389
    cf = v8390
    ?1 = v8391
    pf = v8392
    ?3 = v8393
    af = v8394
    ?5 = v8395
    zf = v8396
    sf = v8397
    tf = v8398
    if = v8399
    df = v8400
    of = v8401
    iopl0 = v8402
    iopl1 = v8403
    nt = v8404
    ?15 = v8405
    memory = {
        size=4; addr=v8380-0x4 [from 0x8048480:push   ebp]; value=v8381
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v8376
    cx = v8377
    dx = v8378
    bx = v8379
    sp = v8533 [from 0x8048483:sub    esp, 0x08]
    bp = v8453 [from 0x8048481:mov    ebp, esp]
    si = v8382
    di = v8383
    es = v8384
    cs = v8385
    ss = v8386
    ds = v8387
    fs = v8388
    gs = v8389
    cf = -v8526-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8391
    pf = -v8516-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v8393
    af = -v8523-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v8395
    zf = v8521 [from 0x8048483:sub    esp, 0x08]
    sf = v8519 [from 0x8048483:sub    esp, 0x08]
    tf = v8398
    if = v8399
    df = v8400
    of = v8531 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v8402
    iopl1 = v8403
    nt = v8404
    ?15 = v8405
    memory = {
        size=4; addr=v8380-0x4 [from 0x8048480:push   ebp]; value=v8381
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v8376
    cx = v8377
    dx = v8378
    bx = v8379
    sp = v8533 [from 0x8048483:sub    esp, 0x08]
    bp = v8453 [from 0x8048481:mov    ebp, esp]
    si = v8382
    di = v8383
    es = v8384
    cs = v8385
    ss = v8386
    ds = v8387
    fs = v8388
    gs = v8389
    cf = -v8526-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8391
    pf = -v8596-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8393
    af = v8603 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8395
    zf = v8601 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8599 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8398
    if = v8399
    df = v8400
    of = v8607 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8402
    iopl1 = v8403
    nt = v8404
    ?15 = v8405
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v8571+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v8376
    cx = v8377
    dx = v8378
    bx = v8379
    sp = v8533 [from 0x8048483:sub    esp, 0x08]
    bp = v8453 [from 0x8048481:mov    ebp, esp]
    si = v8382
    di = v8383
    es = v8384
    cs = v8385
    ss = v8386
    ds = v8387
    fs = v8388
    gs = v8389
    cf = -v8526-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8391
    pf = -v8596-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8393
    af = v8603 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8395
    zf = v8601 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8599 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8398
    if = v8399
    df = v8400
    of = v8607 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8402
    iopl1 = v8403
    nt = v8404
    ?15 = v8405
    memory = {
        size=4; addr=v8533 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v8376
    cx = v8377
    dx = v8378
    bx = v8379
    sp = v8694 [from 0x8048493:call   0x08048300]
    bp = v8453 [from 0x8048481:mov    ebp, esp]
    si = v8382
    di = v8383
    es = v8384
    cs = v8385
    ss = v8386
    ds = v8387
    fs = v8388
    gs = v8389
    cf = -v8526-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8391
    pf = -v8596-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8393
    af = v8603 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8395
    zf = v8601 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8599 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8398
    if = v8399
    df = v8400
    of = v8607 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8402
    iopl1 = v8403
    nt = v8404
    ?15 = v8405
    memory = {
        size=4; addr=v8533 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8533-0x4 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v8876
    cx = v8877
    dx = v8878
    bx = v8879
    sp = v8880
    bp = v8881
    si = v8882
    di = v8883
    es = v8884
    cs = v8885
    ss = v8886
    ds = v8887
    fs = v8888
    gs = v8889
    cf = v8890
    ?1 = v8891
    pf = v8892
    ?3 = v8893
    af = v8894
    ?5 = v8895
    zf = v8896
    sf = v8897
    tf = v8898
    if = v8899
    df = v8900
    of = v8901
    iopl0 = v8902
    iopl1 = v8903
    nt = v8904
    ?15 = v8905
    memory = {
        size=4; addr=v8880; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v8876
    cx = v8877
    dx = v8878
    bx = v8879
    sp = v8957 [from 0x804849f:call   0x08048320]
    bp = v8881
    si = v8882
    di = v8883
    es = v8884
    cs = v8885
    ss = v8886
    ds = v8887
    fs = v8888
    gs = v8889
    cf = v8890
    ?1 = v8891
    pf = v8892
    ?3 = v8893
    af = v8894
    ?5 = v8895
    zf = v8896
    sf = v8897
    tf = v8898
    if = v8899
    df = v8900
    of = v8901
    iopl0 = v8902
    iopl1 = v8903
    nt = v8904
    ?15 = v8905
    memory = {
        size=4; addr=v8880; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v8880-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    ax = v9139
    cx = v9140
    dx = v9141
    bx = v9142
    sp = v9179 [from 0x80484b0:push   ebp]
    bp = v9144
    si = v9145
    di = v9146
    es = v9147
    cs = v9148
    ss = v9149
    ds = v9150
    fs = v9151
    gs = v9152
    cf = v9153
    ?1 = v9154
    pf = v9155
    ?3 = v9156
    af = v9157
    ?5 = v9158
    zf = v9159
    sf = v9160
    tf = v9161
    if = v9162
    df = v9163
    of = v9164
    iopl0 = v9165
    iopl1 = v9166
    nt = v9167
    ?15 = v9168
    memory = {
        size=4; addr=v9143-0x4 [from 0x80484b0:push   ebp]; value=v9144
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v9139
    cx = v9140
    dx = v9141
    bx = v9142
    sp = v9179 [from 0x80484b0:push   ebp]
    bp = v9216 [from 0x80484b1:mov    ebp, esp]
    si = v9145
    di = v9146
    es = v9147
    cs = v9148
    ss = v9149
    ds = v9150
    fs = v9151
    gs = v9152
    cf = v9153
    ?1 = v9154
    pf = v9155
    ?3 = v9156
    af = v9157
    ?5 = v9158
    zf = v9159
    sf = v9160
    tf = v9161
    if = v9162
    df = v9163
    of = v9164
    iopl0 = v9165
    iopl1 = v9166
    nt = v9167
    ?15 = v9168
    memory = {
        size=4; addr=v9143-0x4 [from 0x80484b0:push   ebp]; value=v9144
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v9139
    cx = v9140
    dx = v9141
    bx = v9142
    sp = v9258 [from 0x80484b3:push   edi]
    bp = v9216 [from 0x80484b1:mov    ebp, esp]
    si = v9145
    di = v9146
    es = v9147
    cs = v9148
    ss = v9149
    ds = v9150
    fs = v9151
    gs = v9152
    cf = v9153
    ?1 = v9154
    pf = v9155
    ?3 = v9156
    af = v9157
    ?5 = v9158
    zf = v9159
    sf = v9160
    tf = v9161
    if = v9162
    df = v9163
    of = v9164
    iopl0 = v9165
    iopl1 = v9166
    nt = v9167
    ?15 = v9168
    memory = {
        size=4; addr=v9179-0x4 [from 0x80484b3:push   edi]; value=v9146
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v9139
    cx = v9140
    dx = v9141
    bx = v9142
    sp = v9300 [from 0x80484b4:push   esi]
    bp = v9216 [from 0x80484b1:mov    ebp, esp]
    si = v9145
    di = v9146
    es = v9147
    cs = v9148
    ss = v9149
    ds = v9150
    fs = v9151
    gs = v9152
    cf = v9153
    ?1 = v9154
    pf = v9155
    ?3 = v9156
    af = v9157
    ?5 = v9158
    zf = v9159
    sf = v9160
    tf = v9161
    if = v9162
    df = v9163
    of = v9164
    iopl0 = v9165
    iopl1 = v9166
    nt = v9167
    ?15 = v9168
    memory = {
        size=4; addr=v9258-0x4 [from 0x80484b4:push   esi]; value=v9145
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v9139
    cx = v9140
    dx = v9141
    bx = v9142
    sp = v9342 [from 0x80484b5:push   ebx]
    bp = v9216 [from 0x80484b1:mov    ebp, esp]
    si = v9145
    di = v9146
    es = v9147
    cs = v9148
    ss = v9149
    ds = v9150
    fs = v9151
    gs = v9152
    cf = v9153
    ?1 = v9154
    pf = v9155
    ?3 = v9156
    af = v9157
    ?5 = v9158
    zf = v9159
    sf = v9160
    tf = v9161
    if = v9162
    df = v9163
    of = v9164
    iopl0 = v9165
    iopl1 = v9166
    nt = v9167
    ?15 = v9168
    memory = {
        size=4; addr=v9300-0x4 [from 0x80484b5:push   ebx]; value=v9142
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v9139
    cx = v9140
    dx = v9141
    bx = v9142
    sp = v9422 [from 0x80484b6:sub    esp, 0x0c]
    bp = v9216 [from 0x80484b1:mov    ebp, esp]
    si = v9145
    di = v9146
    es = v9147
    cs = v9148
    ss = v9149
    ds = v9150
    fs = v9151
    gs = v9152
    cf = -v9415-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v9154
    pf = -v9405-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v9156
    af = -v9412-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v9158
    zf = v9410 [from 0x80484b6:sub    esp, 0x0c]
    sf = v9408 [from 0x80484b6:sub    esp, 0x0c]
    tf = v9161
    if = v9162
    df = v9163
    of = v9420 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v9165
    iopl1 = v9166
    nt = v9167
    ?15 = v9168
    memory = {
        size=4; addr=v9300-0x4 [from 0x80484b5:push   ebx]; value=v9142
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v9139
    cx = v9140
    dx = v9141
    bx = v9142
    sp = v9466 [from 0x80484b9:call   0x080484be]
    bp = v9216 [from 0x80484b1:mov    ebp, esp]
    si = v9145
    di = v9146
    es = v9147
    cs = v9148
    ss = v9149
    ds = v9150
    fs = v9151
    gs = v9152
    cf = -v9415-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v9154
    pf = -v9405-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v9156
    af = -v9412-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v9158
    zf = v9410 [from 0x80484b6:sub    esp, 0x0c]
    sf = v9408 [from 0x80484b6:sub    esp, 0x0c]
    tf = v9161
    if = v9162
    df = v9163
    of = v9420 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v9165
    iopl1 = v9166
    nt = v9167
    ?15 = v9168
    memory = {
        size=4; addr=v9422-0x4 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v9558
    cx = v9559
    dx = v9560
    bx = v9598 [from 0x80484be:pop    ebx]
    sp = v9595 [from 0x80484be:pop    ebx]
    bp = v9563
    si = v9564
    di = v9565
    es = v9566
    cs = v9567
    ss = v9568
    ds = v9569
    fs = v9570
    gs = v9571
    cf = v9572
    ?1 = v9573
    pf = v9574
    ?3 = v9575
    af = v9576
    ?5 = v9577
    zf = v9578
    sf = v9579
    tf = v9580
    if = v9581
    df = v9582
    of = v9583
    iopl0 = v9584
    iopl1 = v9585
    nt = v9586
    ?15 = v9587
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v9558
    cx = v9559
    dx = v9560
    bx = v9674 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v9595 [from 0x80484be:pop    ebx]
    bp = v9563
    si = v9564
    di = v9565
    es = v9566
    cs = v9567
    ss = v9568
    ds = v9569
    fs = v9570
    gs = v9571
    cf = v9668 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v9573
    pf = -v9659-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v9575
    af = v9666 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v9577
    zf = v9664 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v9662 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v9580
    if = v9581
    df = v9582
    of = v9672 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v9584
    iopl1 = v9585
    nt = v9586
    ?15 = v9587
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v9558
    cx = v9559
    dx = v9560
    bx = v9674 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v9718 [from 0x80484c5:call   0x080482c8]
    bp = v9563
    si = v9564
    di = v9565
    es = v9566
    cs = v9567
    ss = v9568
    ds = v9569
    fs = v9570
    gs = v9571
    cf = v9668 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v9573
    pf = -v9659-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v9575
    af = v9666 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v9577
    zf = v9664 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v9662 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v9580
    if = v9581
    df = v9582
    of = v9672 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v9584
    iopl1 = v9585
    nt = v9586
    ?15 = v9587
    memory = {
        size=4; addr=v9595-0x4 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9937 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9901
    dx = v9902
    bx = v9903
    sp = v9904
    bp = v9905
    si = v9906
    di = v9907
    es = v9908
    cs = v9909
    ss = v9910
    ds = v9911
    fs = v9912
    gs = v9913
    cf = v9914
    ?1 = v9915
    pf = v9916
    ?3 = v9917
    af = v9918
    ?5 = v9919
    zf = v9920
    sf = v9921
    tf = v9922
    if = v9923
    df = v9924
    of = v9925
    iopl0 = v9926
    iopl1 = v9927
    nt = v9928
    ?15 = v9929
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9937 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9901
    dx = v9976 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9903
    sp = v9904
    bp = v9905
    si = v9906
    di = v9907
    es = v9908
    cs = v9909
    ss = v9910
    ds = v9911
    fs = v9912
    gs = v9913
    cf = v9914
    ?1 = v9915
    pf = v9916
    ?3 = v9917
    af = v9918
    ?5 = v9919
    zf = v9920
    sf = v9921
    tf = v9922
    if = v9923
    df = v9924
    of = v9925
    iopl0 = v9926
    iopl1 = v9927
    nt = v9928
    ?15 = v9929
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = v10056 [from 0x80484d6:sub    eax, edx]
    cx = v9901
    dx = v9976 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9903
    sp = v9904
    bp = v9905
    si = v9906
    di = v9907
    es = v9908
    cs = v9909
    ss = v9910
    ds = v9911
    fs = v9912
    gs = v9913
    cf = -v10049-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v9915
    pf = -v10039-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v9917
    af = -v10046-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v9919
    zf = v10044 [from 0x80484d6:sub    eax, edx]
    sf = v10042 [from 0x80484d6:sub    eax, edx]
    tf = v9922
    if = v9923
    df = v9924
    of = v10054 [from 0x80484d6:sub    eax, edx]
    iopl0 = v9926
    iopl1 = v9927
    nt = v9928
    ?15 = v9929
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v10113 [from 0x80484d8:sar    eax, 0x02]
    cx = v9901
    dx = v9976 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9903
    sp = v9904
    bp = v9905
    si = v9906
    di = v9907
    es = v9908
    cs = v9909
    ss = v9910
    ds = v9911
    fs = v9912
    gs = v9913
    cf = v10104 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9915
    pf = -v10130-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9917
    af = <top>
    ?5 = v9919
    zf = v10139 [from 0x80484d8:sar    eax, 0x02]
    sf = v10135 [from 0x80484d8:sar    eax, 0x02]
    tf = v9922
    if = v9923
    df = v9924
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9926
    iopl1 = v9927
    nt = v9928
    ?15 = v9929
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v10113 [from 0x80484d8:sar    eax, 0x02]
    cx = v9901
    dx = v9976 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9903
    sp = v9904
    bp = v9905
    si = v9906
    di = v9907
    es = v9908
    cs = v9909
    ss = v9910
    ds = v9911
    fs = v9912
    gs = v9913
    cf = v10104 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9915
    pf = -v10130-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9917
    af = <top>
    ?5 = v9919
    zf = v10139 [from 0x80484d8:sar    eax, 0x02]
    sf = v10135 [from 0x80484d8:sar    eax, 0x02]
    tf = v9922
    if = v9923
    df = v9924
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9926
    iopl1 = v9927
    nt = v9928
    ?15 = v9929
    memory = {
        size=4; addr=v9905-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10113 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v10113 [from 0x80484d8:sar    eax, 0x02]
    cx = v9901
    dx = v9976 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9903
    sp = v9904
    bp = v9905
    si = v9906
    di = v9907
    es = v9908
    cs = v9909
    ss = v9910
    ds = v9911
    fs = v9912
    gs = v9913
    cf = v10104 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9915
    pf = -v10130-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9917
    af = <top>
    ?5 = v9919
    zf = v10139 [from 0x80484d8:sar    eax, 0x02]
    sf = v10135 [from 0x80484d8:sar    eax, 0x02]
    tf = v9922
    if = v9923
    df = v9924
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9926
    iopl1 = v9927
    nt = v9928
    ?15 = v9929
    memory = {
        size=4; addr=v9905-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10113 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v10222 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v10345
    cx = v10346
    dx = v10347
    bx = v10348
    sp = v10419 [from 0x80484e0:add    esp, 0x0c]
    bp = v10350
    si = v10351
    di = v10352
    es = v10353
    cs = v10354
    ss = v10355
    ds = v10356
    fs = v10357
    gs = v10358
    cf = v10413 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10360
    pf = -v10404-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10362
    af = v10411 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10364
    zf = v10409 [from 0x80484e0:add    esp, 0x0c]
    sf = v10407 [from 0x80484e0:add    esp, 0x0c]
    tf = v10367
    if = v10368
    df = v10369
    of = v10417 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10371
    iopl1 = v10372
    nt = v10373
    ?15 = v10374
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v10345
    cx = v10346
    dx = v10347
    bx = v10461 [from 0x80484e3:pop    ebx]
    sp = v10458 [from 0x80484e3:pop    ebx]
    bp = v10350
    si = v10351
    di = v10352
    es = v10353
    cs = v10354
    ss = v10355
    ds = v10356
    fs = v10357
    gs = v10358
    cf = v10413 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10360
    pf = -v10404-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10362
    af = v10411 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10364
    zf = v10409 [from 0x80484e0:add    esp, 0x0c]
    sf = v10407 [from 0x80484e0:add    esp, 0x0c]
    tf = v10367
    if = v10368
    df = v10369
    of = v10417 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10371
    iopl1 = v10372
    nt = v10373
    ?15 = v10374
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v10345
    cx = v10346
    dx = v10347
    bx = v10461 [from 0x80484e3:pop    ebx]
    sp = v10500 [from 0x80484e4:pop    esi]
    bp = v10350
    si = v10503 [from 0x80484e4:pop    esi]
    di = v10352
    es = v10353
    cs = v10354
    ss = v10355
    ds = v10356
    fs = v10357
    gs = v10358
    cf = v10413 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10360
    pf = -v10404-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10362
    af = v10411 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10364
    zf = v10409 [from 0x80484e0:add    esp, 0x0c]
    sf = v10407 [from 0x80484e0:add    esp, 0x0c]
    tf = v10367
    if = v10368
    df = v10369
    of = v10417 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10371
    iopl1 = v10372
    nt = v10373
    ?15 = v10374
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v10345
    cx = v10346
    dx = v10347
    bx = v10461 [from 0x80484e3:pop    ebx]
    sp = v10542 [from 0x80484e5:pop    edi]
    bp = v10350
    si = v10503 [from 0x80484e4:pop    esi]
    di = v10545 [from 0x80484e5:pop    edi]
    es = v10353
    cs = v10354
    ss = v10355
    ds = v10356
    fs = v10357
    gs = v10358
    cf = v10413 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10360
    pf = -v10404-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10362
    af = v10411 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10364
    zf = v10409 [from 0x80484e0:add    esp, 0x0c]
    sf = v10407 [from 0x80484e0:add    esp, 0x0c]
    tf = v10367
    if = v10368
    df = v10369
    of = v10417 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10371
    iopl1 = v10372
    nt = v10373
    ?15 = v10374
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v10345
    cx = v10346
    dx = v10347
    bx = v10461 [from 0x80484e3:pop    ebx]
    sp = v10584 [from 0x80484e6:pop    ebp]
    bp = v10587 [from 0x80484e6:pop    ebp]
    si = v10503 [from 0x80484e4:pop    esi]
    di = v10545 [from 0x80484e5:pop    edi]
    es = v10353
    cs = v10354
    ss = v10355
    ds = v10356
    fs = v10357
    gs = v10358
    cf = v10413 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10360
    pf = -v10404-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10362
    af = v10411 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10364
    zf = v10409 [from 0x80484e0:add    esp, 0x0c]
    sf = v10407 [from 0x80484e0:add    esp, 0x0c]
    tf = v10367
    if = v10368
    df = v10369
    of = v10417 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10371
    iopl1 = v10372
    nt = v10373
    ?15 = v10374
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v10345
    cx = v10346
    dx = v10347
    bx = v10461 [from 0x80484e3:pop    ebx]
    sp = v10631 [from 0x80484e7:ret    ]
    bp = v10587 [from 0x80484e6:pop    ebp]
    si = v10503 [from 0x80484e4:pop    esi]
    di = v10545 [from 0x80484e5:pop    edi]
    es = v10353
    cs = v10354
    ss = v10355
    ds = v10356
    fs = v10357
    gs = v10358
    cf = v10413 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10360
    pf = -v10404-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10362
    af = v10411 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10364
    zf = v10409 [from 0x80484e0:add    esp, 0x0c]
    sf = v10407 [from 0x80484e0:add    esp, 0x0c]
    tf = v10367
    if = v10368
    df = v10369
    of = v10417 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10371
    iopl1 = v10372
    nt = v10373
    ?15 = v10374
    memory = {}
    ip = v10629 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v10693
    cx = v10694
    dx = v10695
    bx = v10696
    sp = v10733 [from 0x8048520:push   ebp]
    bp = v10698
    si = v10699
    di = v10700
    es = v10701
    cs = v10702
    ss = v10703
    ds = v10704
    fs = v10705
    gs = v10706
    cf = v10707
    ?1 = v10708
    pf = v10709
    ?3 = v10710
    af = v10711
    ?5 = v10712
    zf = v10713
    sf = v10714
    tf = v10715
    if = v10716
    df = v10717
    of = v10718
    iopl0 = v10719
    iopl1 = v10720
    nt = v10721
    ?15 = v10722
    memory = {
        size=4; addr=v10697-0x4 [from 0x8048520:push   ebp]; value=v10698
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v10693
    cx = v10694
    dx = v10695
    bx = v10696
    sp = v10733 [from 0x8048520:push   ebp]
    bp = v10770 [from 0x8048521:mov    ebp, esp]
    si = v10699
    di = v10700
    es = v10701
    cs = v10702
    ss = v10703
    ds = v10704
    fs = v10705
    gs = v10706
    cf = v10707
    ?1 = v10708
    pf = v10709
    ?3 = v10710
    af = v10711
    ?5 = v10712
    zf = v10713
    sf = v10714
    tf = v10715
    if = v10716
    df = v10717
    of = v10718
    iopl0 = v10719
    iopl1 = v10720
    nt = v10721
    ?15 = v10722
    memory = {
        size=4; addr=v10697-0x4 [from 0x8048520:push   ebp]; value=v10698
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v10693
    cx = v10694
    dx = v10695
    bx = v10696
    sp = v10812 [from 0x8048523:push   edi]
    bp = v10770 [from 0x8048521:mov    ebp, esp]
    si = v10699
    di = v10700
    es = v10701
    cs = v10702
    ss = v10703
    ds = v10704
    fs = v10705
    gs = v10706
    cf = v10707
    ?1 = v10708
    pf = v10709
    ?3 = v10710
    af = v10711
    ?5 = v10712
    zf = v10713
    sf = v10714
    tf = v10715
    if = v10716
    df = v10717
    of = v10718
    iopl0 = v10719
    iopl1 = v10720
    nt = v10721
    ?15 = v10722
    memory = {
        size=4; addr=v10733-0x4 [from 0x8048523:push   edi]; value=v10700
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v10693
    cx = v10694
    dx = v10695
    bx = v10696
    sp = v10854 [from 0x8048524:push   esi]
    bp = v10770 [from 0x8048521:mov    ebp, esp]
    si = v10699
    di = v10700
    es = v10701
    cs = v10702
    ss = v10703
    ds = v10704
    fs = v10705
    gs = v10706
    cf = v10707
    ?1 = v10708
    pf = v10709
    ?3 = v10710
    af = v10711
    ?5 = v10712
    zf = v10713
    sf = v10714
    tf = v10715
    if = v10716
    df = v10717
    of = v10718
    iopl0 = v10719
    iopl1 = v10720
    nt = v10721
    ?15 = v10722
    memory = {
        size=4; addr=v10812-0x4 [from 0x8048524:push   esi]; value=v10699
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v10693
    cx = v10694
    dx = v10695
    bx = v10696
    sp = v10896 [from 0x8048525:push   ebx]
    bp = v10770 [from 0x8048521:mov    ebp, esp]
    si = v10699
    di = v10700
    es = v10701
    cs = v10702
    ss = v10703
    ds = v10704
    fs = v10705
    gs = v10706
    cf = v10707
    ?1 = v10708
    pf = v10709
    ?3 = v10710
    af = v10711
    ?5 = v10712
    zf = v10713
    sf = v10714
    tf = v10715
    if = v10716
    df = v10717
    of = v10718
    iopl0 = v10719
    iopl1 = v10720
    nt = v10721
    ?15 = v10722
    memory = {
        size=4; addr=v10854-0x4 [from 0x8048525:push   ebx]; value=v10696
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v10693
    cx = v10694
    dx = v10695
    bx = v10696
    sp = v10976 [from 0x8048526:sub    esp, 0x0c]
    bp = v10770 [from 0x8048521:mov    ebp, esp]
    si = v10699
    di = v10700
    es = v10701
    cs = v10702
    ss = v10703
    ds = v10704
    fs = v10705
    gs = v10706
    cf = -v10969-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v10708
    pf = -v10959-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v10710
    af = -v10966-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v10712
    zf = v10964 [from 0x8048526:sub    esp, 0x0c]
    sf = v10962 [from 0x8048526:sub    esp, 0x0c]
    tf = v10715
    if = v10716
    df = v10717
    of = v10974 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v10719
    iopl1 = v10720
    nt = v10721
    ?15 = v10722
    memory = {
        size=4; addr=v10854-0x4 [from 0x8048525:push   ebx]; value=v10696
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v10693
    cx = v10694
    dx = v10695
    bx = v10696
    sp = v11020 [from 0x8048529:call   0x0804852e]
    bp = v10770 [from 0x8048521:mov    ebp, esp]
    si = v10699
    di = v10700
    es = v10701
    cs = v10702
    ss = v10703
    ds = v10704
    fs = v10705
    gs = v10706
    cf = -v10969-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v10708
    pf = -v10959-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v10710
    af = -v10966-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v10712
    zf = v10964 [from 0x8048526:sub    esp, 0x0c]
    sf = v10962 [from 0x8048526:sub    esp, 0x0c]
    tf = v10715
    if = v10716
    df = v10717
    of = v10974 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v10719
    iopl1 = v10720
    nt = v10721
    ?15 = v10722
    memory = {
        size=4; addr=v10976-0x4 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v11112
    cx = v11113
    dx = v11114
    bx = v11152 [from 0x804852e:pop    ebx]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = v11126
    ?1 = v11127
    pf = v11128
    ?3 = v11129
    af = v11130
    ?5 = v11131
    zf = v11132
    sf = v11133
    tf = v11134
    if = v11135
    df = v11136
    of = v11137
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v11112
    cx = v11113
    dx = v11114
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = v11222 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v11127
    pf = -v11213-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v11129
    af = v11220 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v11131
    zf = v11218 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v11216 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v11134
    if = v11135
    df = v11136
    of = v11226 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v11267 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v11113
    dx = v11114
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = v11222 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v11127
    pf = -v11213-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v11129
    af = v11220 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v11131
    zf = v11218 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v11216 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v11134
    if = v11135
    df = v11136
    of = v11226 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v11267 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v11113
    dx = v11306 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = v11222 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v11127
    pf = -v11213-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v11129
    af = v11220 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v11131
    zf = v11218 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v11216 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v11134
    if = v11135
    df = v11136
    of = v11226 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = v11386 [from 0x8048541:sub    eax, edx]
    cx = v11113
    dx = v11306 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = -v11379-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v11127
    pf = -v11369-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v11129
    af = -v11376-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v11131
    zf = v11374 [from 0x8048541:sub    eax, edx]
    sf = v11372 [from 0x8048541:sub    eax, edx]
    tf = v11134
    if = v11135
    df = v11136
    of = v11384 [from 0x8048541:sub    eax, edx]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v11443 [from 0x8048543:sar    eax, 0x02]
    cx = v11113
    dx = v11306 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = v11434 [from 0x8048543:sar    eax, 0x02]
    ?1 = v11127
    pf = -v11460-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v11129
    af = <top>
    ?5 = v11131
    zf = v11469 [from 0x8048543:sar    eax, 0x02]
    sf = v11465 [from 0x8048543:sar    eax, 0x02]
    tf = v11134
    if = v11135
    df = v11136
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v11443 [from 0x8048543:sar    eax, 0x02]
    cx = v11113
    dx = v11306 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = v11434 [from 0x8048543:sar    eax, 0x02]
    ?1 = v11127
    pf = -v11460-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v11129
    af = <top>
    ?5 = v11131
    zf = v11469 [from 0x8048543:sar    eax, 0x02]
    sf = v11465 [from 0x8048543:sar    eax, 0x02]
    tf = v11134
    if = v11135
    df = v11136
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {
        size=4; addr=v11117-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11443 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v11587 [from 0x8048549:dec    eax]
    cx = v11113
    dx = v11306 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = v11434 [from 0x8048543:sar    eax, 0x02]
    ?1 = v11127
    pf = -v11573-0x1 [from 0x8048549:dec    eax]
    ?3 = v11129
    af = -v11580-0x1 [from 0x8048549:dec    eax]
    ?5 = v11131
    zf = v11578 [from 0x8048549:dec    eax]
    sf = v11576 [from 0x8048549:dec    eax]
    tf = v11134
    if = v11135
    df = v11136
    of = v11585 [from 0x8048549:dec    eax]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {
        size=4; addr=v11117-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11443 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v11587 [from 0x8048549:dec    eax]
    cx = v11113
    dx = v11306 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = -v11660-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v11127
    pf = -v11650-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v11129
    af = -v11657-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v11131
    zf = v11655 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v11653 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v11134
    if = v11135
    df = v11136
    of = v11665 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {
        size=4; addr=v11117-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11443 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v11587 [from 0x8048549:dec    eax]
    cx = v11113
    dx = v11306 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11228 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v11149 [from 0x804852e:pop    ebx]
    bp = v11117
    si = v11118
    di = v11119
    es = v11120
    cs = v11121
    ss = v11122
    ds = v11123
    fs = v11124
    gs = v11125
    cf = -v11660-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v11127
    pf = -v11650-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v11129
    af = -v11657-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v11131
    zf = v11655 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v11653 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v11134
    if = v11135
    df = v11136
    of = v11665 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v11138
    iopl1 = v11139
    nt = v11140
    ?15 = v11141
    memory = {
        size=4; addr=v11117-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11443 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v11705 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax = v11828
    cx = v11829
    dx = v11830
    bx = v11831
    sp = v11832
    bp = v11833
    si = v11868 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v11835
    es = v11836
    cs = v11837
    ss = v11838
    ds = v11839
    fs = v11840
    gs = v11841
    cf = v11842
    ?1 = v11843
    pf = v11844
    ?3 = v11845
    af = v11846
    ?5 = v11847
    zf = v11848
    sf = v11849
    tf = v11850
    if = v11851
    df = v11852
    of = v11853
    iopl0 = v11854
    iopl1 = v11855
    nt = v11856
    ?15 = v11857
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]
0x8048552:xor    edi, edi
    ax = v11828
    cx = v11829
    dx = v11830
    bx = v11831
    sp = v11832
    bp = v11833
    si = v11868 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v11836
    cs = v11837
    ss = v11838
    ds = v11839
    fs = v11840
    gs = v11841
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11843
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11845
    af = <top>
    ?5 = v11847
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11850
    if = v11851
    df = v11852
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11854
    iopl1 = v11855
    nt = v11856
    ?15 = v11857
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]
0x8048554:lea    esi, [esi + 0x00000000]
    ax = v11828
    cx = v11829
    dx = v11830
    bx = v11831
    sp = v11832
    bp = v11833
    si = v11974 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v11836
    cs = v11837
    ss = v11838
    ds = v11839
    fs = v11840
    gs = v11841
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11843
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11845
    af = <top>
    ?5 = v11847
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11850
    if = v11851
    df = v11852
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11854
    iopl1 = v11855
    nt = v11856
    ?15 = v11857
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]
0x804855a:lea    edi, [edi + 0x00000000]
    ax = v11828
    cx = v11829
    dx = v11830
    bx = v11831
    sp = v11832
    bp = v11833
    si = v11974 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v11836
    cs = v11837
    ss = v11838
    ds = v11839
    fs = v11840
    gs = v11841
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11843
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11845
    af = <top>
    ?5 = v11847
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11850
    if = v11851
    df = v11852
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11854
    iopl1 = v11855
    nt = v11856
    ?15 = v11857
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]
0x8048560:call   DWORD PTR ds:[esi]
    ax = v11828
    cx = v11829
    dx = v11830
    bx = v11831
    sp = v12059 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v11833
    si = v11974 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v11836
    cs = v11837
    ss = v11838
    ds = v11839
    fs = v11840
    gs = v11841
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11843
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11845
    af = <top>
    ?5 = v11847
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11850
    if = v11851
    df = v11852
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11854
    iopl1 = v11855
    nt = v11856
    ?15 = v11857
    memory = {
        size=4; addr=v11832-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v12057 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12283 [from 0x8048562:inc    edi]
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = -v12270-0x1 [from 0x8048562:inc    edi]
    ?3 = v12228
    af = v12277 [from 0x8048562:inc    edi]
    ?5 = v12230
    zf = v12275 [from 0x8048562:inc    edi]
    sf = v12273 [from 0x8048562:inc    edi]
    tf = v12233
    if = v12234
    df = v12235
    of = v12281 [from 0x8048562:inc    edi]
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]
0x8048563:sub    esi, 0x04
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12363 [from 0x8048563:sub    esi, 0x04]
    di = v12283 [from 0x8048562:inc    edi]
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = -v12356-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v12226
    pf = -v12346-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v12228
    af = -v12353-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v12230
    zf = v12351 [from 0x8048563:sub    esi, 0x04]
    sf = v12349 [from 0x8048563:sub    esi, 0x04]
    tf = v12233
    if = v12234
    df = v12235
    of = v12361 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12363 [from 0x8048563:sub    esi, 0x04]
    di = v12283 [from 0x8048562:inc    edi]
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = -v12440-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v12226
    pf = -v12430-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v12228
    af = -v12437-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v12230
    zf = v12435 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v12433 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v12233
    if = v12234
    df = v12235
    of = v12445 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
0x8048569:jne    0x08048560
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12363 [from 0x8048563:sub    esi, 0x04]
    di = v12283 [from 0x8048562:inc    edi]
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = -v12440-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v12226
    pf = -v12430-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v12228
    af = -v12437-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v12230
    zf = v12435 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v12433 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v12233
    if = v12234
    df = v12235
    of = v12445 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
    ip = v12486 [from 0x8048569:jne    0x08048560]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v12609
    cx = v12610
    dx = v12611
    bx = v12612
    sp = v12651 [from 0x804856b:call   0x080485b0]
    bp = v12614
    si = v12615
    di = v12616
    es = v12617
    cs = v12618
    ss = v12619
    ds = v12620
    fs = v12621
    gs = v12622
    cf = v12623
    ?1 = v12624
    pf = v12625
    ?3 = v12626
    af = v12627
    ?5 = v12628
    zf = v12629
    sf = v12630
    tf = v12631
    if = v12632
    df = v12633
    of = v12634
    iopl0 = v12635
    iopl1 = v12636
    nt = v12637
    ?15 = v12638
    memory = {
        size=4; addr=v12613-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v12833
    cx = v12834
    dx = v12835
    bx = v12836
    sp = v12907 [from 0x8048570:add    esp, 0x0c]
    bp = v12838
    si = v12839
    di = v12840
    es = v12841
    cs = v12842
    ss = v12843
    ds = v12844
    fs = v12845
    gs = v12846
    cf = v12901 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12848
    pf = -v12892-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12850
    af = v12899 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12852
    zf = v12897 [from 0x8048570:add    esp, 0x0c]
    sf = v12895 [from 0x8048570:add    esp, 0x0c]
    tf = v12855
    if = v12856
    df = v12857
    of = v12905 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12859
    iopl1 = v12860
    nt = v12861
    ?15 = v12862
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v12833
    cx = v12834
    dx = v12835
    bx = v12949 [from 0x8048573:pop    ebx]
    sp = v12946 [from 0x8048573:pop    ebx]
    bp = v12838
    si = v12839
    di = v12840
    es = v12841
    cs = v12842
    ss = v12843
    ds = v12844
    fs = v12845
    gs = v12846
    cf = v12901 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12848
    pf = -v12892-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12850
    af = v12899 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12852
    zf = v12897 [from 0x8048570:add    esp, 0x0c]
    sf = v12895 [from 0x8048570:add    esp, 0x0c]
    tf = v12855
    if = v12856
    df = v12857
    of = v12905 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12859
    iopl1 = v12860
    nt = v12861
    ?15 = v12862
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v12833
    cx = v12834
    dx = v12835
    bx = v12949 [from 0x8048573:pop    ebx]
    sp = v12988 [from 0x8048574:pop    esi]
    bp = v12838
    si = v12991 [from 0x8048574:pop    esi]
    di = v12840
    es = v12841
    cs = v12842
    ss = v12843
    ds = v12844
    fs = v12845
    gs = v12846
    cf = v12901 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12848
    pf = -v12892-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12850
    af = v12899 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12852
    zf = v12897 [from 0x8048570:add    esp, 0x0c]
    sf = v12895 [from 0x8048570:add    esp, 0x0c]
    tf = v12855
    if = v12856
    df = v12857
    of = v12905 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12859
    iopl1 = v12860
    nt = v12861
    ?15 = v12862
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v12833
    cx = v12834
    dx = v12835
    bx = v12949 [from 0x8048573:pop    ebx]
    sp = v13030 [from 0x8048575:pop    edi]
    bp = v12838
    si = v12991 [from 0x8048574:pop    esi]
    di = v13033 [from 0x8048575:pop    edi]
    es = v12841
    cs = v12842
    ss = v12843
    ds = v12844
    fs = v12845
    gs = v12846
    cf = v12901 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12848
    pf = -v12892-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12850
    af = v12899 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12852
    zf = v12897 [from 0x8048570:add    esp, 0x0c]
    sf = v12895 [from 0x8048570:add    esp, 0x0c]
    tf = v12855
    if = v12856
    df = v12857
    of = v12905 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12859
    iopl1 = v12860
    nt = v12861
    ?15 = v12862
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v12833
    cx = v12834
    dx = v12835
    bx = v12949 [from 0x8048573:pop    ebx]
    sp = v13072 [from 0x8048576:pop    ebp]
    bp = v13075 [from 0x8048576:pop    ebp]
    si = v12991 [from 0x8048574:pop    esi]
    di = v13033 [from 0x8048575:pop    edi]
    es = v12841
    cs = v12842
    ss = v12843
    ds = v12844
    fs = v12845
    gs = v12846
    cf = v12901 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12848
    pf = -v12892-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12850
    af = v12899 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12852
    zf = v12897 [from 0x8048570:add    esp, 0x0c]
    sf = v12895 [from 0x8048570:add    esp, 0x0c]
    tf = v12855
    if = v12856
    df = v12857
    of = v12905 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12859
    iopl1 = v12860
    nt = v12861
    ?15 = v12862
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v12833
    cx = v12834
    dx = v12835
    bx = v12949 [from 0x8048573:pop    ebx]
    sp = v13119 [from 0x8048577:ret    ]
    bp = v13075 [from 0x8048576:pop    ebp]
    si = v12991 [from 0x8048574:pop    esi]
    di = v13033 [from 0x8048575:pop    edi]
    es = v12841
    cs = v12842
    ss = v12843
    ds = v12844
    fs = v12845
    gs = v12846
    cf = v12901 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12848
    pf = -v12892-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12850
    af = v12899 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12852
    zf = v12897 [from 0x8048570:add    esp, 0x0c]
    sf = v12895 [from 0x8048570:add    esp, 0x0c]
    tf = v12855
    if = v12856
    df = v12857
    of = v12905 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12859
    iopl1 = v12860
    nt = v12861
    ?15 = v12862
    memory = {}
    ip = v13117 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    ax = v13181
    cx = v13182
    dx = v13183
    bx = v13184
    sp = v13221 [from 0x8048580:push   ebp]
    bp = v13186
    si = v13187
    di = v13188
    es = v13189
    cs = v13190
    ss = v13191
    ds = v13192
    fs = v13193
    gs = v13194
    cf = v13195
    ?1 = v13196
    pf = v13197
    ?3 = v13198
    af = v13199
    ?5 = v13200
    zf = v13201
    sf = v13202
    tf = v13203
    if = v13204
    df = v13205
    of = v13206
    iopl0 = v13207
    iopl1 = v13208
    nt = v13209
    ?15 = v13210
    memory = {
        size=4; addr=v13185-0x4 [from 0x8048580:push   ebp]; value=v13186
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v13181
    cx = v13182
    dx = v13183
    bx = v13184
    sp = v13221 [from 0x8048580:push   ebp]
    bp = v13258 [from 0x8048581:mov    ebp, esp]
    si = v13187
    di = v13188
    es = v13189
    cs = v13190
    ss = v13191
    ds = v13192
    fs = v13193
    gs = v13194
    cf = v13195
    ?1 = v13196
    pf = v13197
    ?3 = v13198
    af = v13199
    ?5 = v13200
    zf = v13201
    sf = v13202
    tf = v13203
    if = v13204
    df = v13205
    of = v13206
    iopl0 = v13207
    iopl1 = v13208
    nt = v13209
    ?15 = v13210
    memory = {
        size=4; addr=v13185-0x4 [from 0x8048580:push   ebp]; value=v13186
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v13181
    cx = v13182
    dx = v13183
    bx = v13184
    sp = v13300 [from 0x8048583:push   ebx]
    bp = v13258 [from 0x8048581:mov    ebp, esp]
    si = v13187
    di = v13188
    es = v13189
    cs = v13190
    ss = v13191
    ds = v13192
    fs = v13193
    gs = v13194
    cf = v13195
    ?1 = v13196
    pf = v13197
    ?3 = v13198
    af = v13199
    ?5 = v13200
    zf = v13201
    sf = v13202
    tf = v13203
    if = v13204
    df = v13205
    of = v13206
    iopl0 = v13207
    iopl1 = v13208
    nt = v13209
    ?15 = v13210
    memory = {
        size=4; addr=v13221-0x4 [from 0x8048583:push   ebx]; value=v13184
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v13181
    cx = v13182
    dx = v13183
    bx = v13184
    sp = v13380 [from 0x8048584:sub    esp, 0x04]
    bp = v13258 [from 0x8048581:mov    ebp, esp]
    si = v13187
    di = v13188
    es = v13189
    cs = v13190
    ss = v13191
    ds = v13192
    fs = v13193
    gs = v13194
    cf = -v13373-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v13196
    pf = -v13363-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v13198
    af = -v13370-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v13200
    zf = v13368 [from 0x8048584:sub    esp, 0x04]
    sf = v13366 [from 0x8048584:sub    esp, 0x04]
    tf = v13203
    if = v13204
    df = v13205
    of = v13378 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v13207
    iopl1 = v13208
    nt = v13209
    ?15 = v13210
    memory = {
        size=4; addr=v13221-0x4 [from 0x8048583:push   ebx]; value=v13184
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v13181
    cx = v13182
    dx = v13183
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v13380 [from 0x8048584:sub    esp, 0x04]
    bp = v13258 [from 0x8048581:mov    ebp, esp]
    si = v13187
    di = v13188
    es = v13189
    cs = v13190
    ss = v13191
    ds = v13192
    fs = v13193
    gs = v13194
    cf = -v13373-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v13196
    pf = -v13363-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v13198
    af = -v13370-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v13200
    zf = v13368 [from 0x8048584:sub    esp, 0x04]
    sf = v13366 [from 0x8048584:sub    esp, 0x04]
    tf = v13203
    if = v13204
    df = v13205
    of = v13378 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v13207
    iopl1 = v13208
    nt = v13209
    ?15 = v13210
    memory = {
        size=4; addr=v13221-0x4 [from 0x8048583:push   ebx]; value=v13184
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v13456 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v13182
    dx = v13183
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v13380 [from 0x8048584:sub    esp, 0x04]
    bp = v13258 [from 0x8048581:mov    ebp, esp]
    si = v13187
    di = v13188
    es = v13189
    cs = v13190
    ss = v13191
    ds = v13192
    fs = v13193
    gs = v13194
    cf = -v13373-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v13196
    pf = -v13363-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v13198
    af = -v13370-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v13200
    zf = v13368 [from 0x8048584:sub    esp, 0x04]
    sf = v13366 [from 0x8048584:sub    esp, 0x04]
    tf = v13203
    if = v13204
    df = v13205
    of = v13378 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v13207
    iopl1 = v13208
    nt = v13209
    ?15 = v13210
    memory = {
        size=4; addr=v13221-0x4 [from 0x8048583:push   ebx]; value=v13184
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v13456 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v13182
    dx = v13183
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v13380 [from 0x8048584:sub    esp, 0x04]
    bp = v13258 [from 0x8048581:mov    ebp, esp]
    si = v13187
    di = v13188
    es = v13189
    cs = v13190
    ss = v13191
    ds = v13192
    fs = v13193
    gs = v13194
    cf = -v13529-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v13196
    pf = -v13519-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v13198
    af = -v13526-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v13200
    zf = v13524 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v13522 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v13203
    if = v13204
    df = v13205
    of = v13534 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v13207
    iopl1 = v13208
    nt = v13209
    ?15 = v13210
    memory = {
        size=4; addr=v13221-0x4 [from 0x8048583:push   ebx]; value=v13184
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v13456 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v13182
    dx = v13183
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v13380 [from 0x8048584:sub    esp, 0x04]
    bp = v13258 [from 0x8048581:mov    ebp, esp]
    si = v13187
    di = v13188
    es = v13189
    cs = v13190
    ss = v13191
    ds = v13192
    fs = v13193
    gs = v13194
    cf = -v13529-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v13196
    pf = -v13519-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v13198
    af = -v13526-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v13200
    zf = v13524 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v13522 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v13203
    if = v13204
    df = v13205
    of = v13534 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v13207
    iopl1 = v13208
    nt = v13209
    ?15 = v13210
    memory = {
        size=4; addr=v13221-0x4 [from 0x8048583:push   ebx]; value=v13184
    }
    ip = v13574 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v13697
    cx = v13698
    dx = v13699
    bx = v13700
    sp = v13701
    bp = v13702
    si = v13734 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13704
    es = v13705
    cs = v13706
    ss = v13707
    ds = v13708
    fs = v13709
    gs = v13710
    cf = v13711
    ?1 = v13712
    pf = v13713
    ?3 = v13714
    af = v13715
    ?5 = v13716
    zf = v13717
    sf = v13718
    tf = v13719
    if = v13720
    df = v13721
    of = v13722
    iopl0 = v13723
    iopl1 = v13724
    nt = v13725
    ?15 = v13726
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v13697
    cx = v13698
    dx = v13699
    bx = v13700
    sp = v13701
    bp = v13702
    si = v13734 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13773 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13705
    cs = v13706
    ss = v13707
    ds = v13708
    fs = v13709
    gs = v13710
    cf = v13711
    ?1 = v13712
    pf = v13713
    ?3 = v13714
    af = v13715
    ?5 = v13716
    zf = v13717
    sf = v13718
    tf = v13719
    if = v13720
    df = v13721
    of = v13722
    iopl0 = v13723
    iopl1 = v13724
    nt = v13725
    ?15 = v13726
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v13697
    cx = v13698
    dx = v13699
    bx = v13853 [from 0x80485a0:sub    ebx, 0x04]
    sp = v13701
    bp = v13702
    si = v13734 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13773 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13705
    cs = v13706
    ss = v13707
    ds = v13708
    fs = v13709
    gs = v13710
    cf = -v13846-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v13712
    pf = -v13836-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v13714
    af = -v13843-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v13716
    zf = v13841 [from 0x80485a0:sub    ebx, 0x04]
    sf = v13839 [from 0x80485a0:sub    ebx, 0x04]
    tf = v13719
    if = v13720
    df = v13721
    of = v13851 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v13723
    iopl1 = v13724
    nt = v13725
    ?15 = v13726
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v13697
    cx = v13698
    dx = v13699
    bx = v13853 [from 0x80485a0:sub    ebx, 0x04]
    sp = v13897 [from 0x80485a3:call   eax]
    bp = v13702
    si = v13734 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13773 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13705
    cs = v13706
    ss = v13707
    ds = v13708
    fs = v13709
    gs = v13710
    cf = -v13846-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v13712
    pf = -v13836-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v13714
    af = -v13843-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v13716
    zf = v13841 [from 0x80485a0:sub    ebx, 0x04]
    sf = v13839 [from 0x80485a0:sub    ebx, 0x04]
    tf = v13719
    if = v13720
    df = v13721
    of = v13851 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v13723
    iopl1 = v13724
    nt = v13725
    ?15 = v13726
    memory = {
        size=4; addr=v13701-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v13697
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v14086 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v14050
    dx = v14051
    bx = v14052
    sp = v14053
    bp = v14054
    si = v14055
    di = v14056
    es = v14057
    cs = v14058
    ss = v14059
    ds = v14060
    fs = v14061
    gs = v14062
    cf = v14063
    ?1 = v14064
    pf = v14065
    ?3 = v14066
    af = v14067
    ?5 = v14068
    zf = v14069
    sf = v14070
    tf = v14071
    if = v14072
    df = v14073
    of = v14074
    iopl0 = v14075
    iopl1 = v14076
    nt = v14077
    ?15 = v14078
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v14086 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v14050
    dx = v14051
    bx = v14052
    sp = v14053
    bp = v14054
    si = v14055
    di = v14056
    es = v14057
    cs = v14058
    ss = v14059
    ds = v14060
    fs = v14061
    gs = v14062
    cf = -v14159-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v14064
    pf = -v14149-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v14066
    af = -v14156-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v14068
    zf = v14154 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v14152 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v14071
    if = v14072
    df = v14073
    of = v14164 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v14075
    iopl1 = v14076
    nt = v14077
    ?15 = v14078
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v14086 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v14050
    dx = v14051
    bx = v14052
    sp = v14053
    bp = v14054
    si = v14055
    di = v14056
    es = v14057
    cs = v14058
    ss = v14059
    ds = v14060
    fs = v14061
    gs = v14062
    cf = -v14159-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v14064
    pf = -v14149-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v14066
    af = -v14156-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v14068
    zf = v14154 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v14152 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v14071
    if = v14072
    df = v14073
    of = v14164 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v14075
    iopl1 = v14076
    nt = v14077
    ?15 = v14078
    memory = {}
    ip = v14205 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v14368 [from 0x80485ac:pop    eax]
    cx = v14329
    dx = v14330
    bx = v14331
    sp = v14365 [from 0x80485ac:pop    eax]
    bp = v14333
    si = v14334
    di = v14335
    es = v14336
    cs = v14337
    ss = v14338
    ds = v14339
    fs = v14340
    gs = v14341
    cf = v14342
    ?1 = v14343
    pf = v14344
    ?3 = v14345
    af = v14346
    ?5 = v14347
    zf = v14348
    sf = v14349
    tf = v14350
    if = v14351
    df = v14352
    of = v14353
    iopl0 = v14354
    iopl1 = v14355
    nt = v14356
    ?15 = v14357
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v14368 [from 0x80485ac:pop    eax]
    cx = v14329
    dx = v14330
    bx = v14410 [from 0x80485ad:pop    ebx]
    sp = v14407 [from 0x80485ad:pop    ebx]
    bp = v14333
    si = v14334
    di = v14335
    es = v14336
    cs = v14337
    ss = v14338
    ds = v14339
    fs = v14340
    gs = v14341
    cf = v14342
    ?1 = v14343
    pf = v14344
    ?3 = v14345
    af = v14346
    ?5 = v14347
    zf = v14348
    sf = v14349
    tf = v14350
    if = v14351
    df = v14352
    of = v14353
    iopl0 = v14354
    iopl1 = v14355
    nt = v14356
    ?15 = v14357
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v14368 [from 0x80485ac:pop    eax]
    cx = v14329
    dx = v14330
    bx = v14410 [from 0x80485ad:pop    ebx]
    sp = v14449 [from 0x80485ae:pop    ebp]
    bp = v14452 [from 0x80485ae:pop    ebp]
    si = v14334
    di = v14335
    es = v14336
    cs = v14337
    ss = v14338
    ds = v14339
    fs = v14340
    gs = v14341
    cf = v14342
    ?1 = v14343
    pf = v14344
    ?3 = v14345
    af = v14346
    ?5 = v14347
    zf = v14348
    sf = v14349
    tf = v14350
    if = v14351
    df = v14352
    of = v14353
    iopl0 = v14354
    iopl1 = v14355
    nt = v14356
    ?15 = v14357
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v14368 [from 0x80485ac:pop    eax]
    cx = v14329
    dx = v14330
    bx = v14410 [from 0x80485ad:pop    ebx]
    sp = v14496 [from 0x80485af:ret    ]
    bp = v14452 [from 0x80485ae:pop    ebp]
    si = v14334
    di = v14335
    es = v14336
    cs = v14337
    ss = v14338
    ds = v14339
    fs = v14340
    gs = v14341
    cf = v14342
    ?1 = v14343
    pf = v14344
    ?3 = v14345
    af = v14346
    ?5 = v14347
    zf = v14348
    sf = v14349
    tf = v14350
    if = v14351
    df = v14352
    of = v14353
    iopl0 = v14354
    iopl1 = v14355
    nt = v14356
    ?15 = v14357
    memory = {}
    ip = v14494 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v14558
    cx = v14559
    dx = v14560
    bx = v14561
    sp = v14598 [from 0x80485b0:push   ebp]
    bp = v14563
    si = v14564
    di = v14565
    es = v14566
    cs = v14567
    ss = v14568
    ds = v14569
    fs = v14570
    gs = v14571
    cf = v14572
    ?1 = v14573
    pf = v14574
    ?3 = v14575
    af = v14576
    ?5 = v14577
    zf = v14578
    sf = v14579
    tf = v14580
    if = v14581
    df = v14582
    of = v14583
    iopl0 = v14584
    iopl1 = v14585
    nt = v14586
    ?15 = v14587
    memory = {
        size=4; addr=v14562-0x4 [from 0x80485b0:push   ebp]; value=v14563
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v14558
    cx = v14559
    dx = v14560
    bx = v14561
    sp = v14598 [from 0x80485b0:push   ebp]
    bp = v14635 [from 0x80485b1:mov    ebp, esp]
    si = v14564
    di = v14565
    es = v14566
    cs = v14567
    ss = v14568
    ds = v14569
    fs = v14570
    gs = v14571
    cf = v14572
    ?1 = v14573
    pf = v14574
    ?3 = v14575
    af = v14576
    ?5 = v14577
    zf = v14578
    sf = v14579
    tf = v14580
    if = v14581
    df = v14582
    of = v14583
    iopl0 = v14584
    iopl1 = v14585
    nt = v14586
    ?15 = v14587
    memory = {
        size=4; addr=v14562-0x4 [from 0x80485b0:push   ebp]; value=v14563
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v14558
    cx = v14559
    dx = v14560
    bx = v14561
    sp = v14677 [from 0x80485b3:push   ebx]
    bp = v14635 [from 0x80485b1:mov    ebp, esp]
    si = v14564
    di = v14565
    es = v14566
    cs = v14567
    ss = v14568
    ds = v14569
    fs = v14570
    gs = v14571
    cf = v14572
    ?1 = v14573
    pf = v14574
    ?3 = v14575
    af = v14576
    ?5 = v14577
    zf = v14578
    sf = v14579
    tf = v14580
    if = v14581
    df = v14582
    of = v14583
    iopl0 = v14584
    iopl1 = v14585
    nt = v14586
    ?15 = v14587
    memory = {
        size=4; addr=v14598-0x4 [from 0x80485b3:push   ebx]; value=v14561
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v14558
    cx = v14559
    dx = v14560
    bx = v14561
    sp = v14719 [from 0x80485b4:push   eax]
    bp = v14635 [from 0x80485b1:mov    ebp, esp]
    si = v14564
    di = v14565
    es = v14566
    cs = v14567
    ss = v14568
    ds = v14569
    fs = v14570
    gs = v14571
    cf = v14572
    ?1 = v14573
    pf = v14574
    ?3 = v14575
    af = v14576
    ?5 = v14577
    zf = v14578
    sf = v14579
    tf = v14580
    if = v14581
    df = v14582
    of = v14583
    iopl0 = v14584
    iopl1 = v14585
    nt = v14586
    ?15 = v14587
    memory = {
        size=4; addr=v14677-0x4 [from 0x80485b4:push   eax]; value=v14558
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v14558
    cx = v14559
    dx = v14560
    bx = v14561
    sp = v14763 [from 0x80485b5:call   0x080485ba]
    bp = v14635 [from 0x80485b1:mov    ebp, esp]
    si = v14564
    di = v14565
    es = v14566
    cs = v14567
    ss = v14568
    ds = v14569
    fs = v14570
    gs = v14571
    cf = v14572
    ?1 = v14573
    pf = v14574
    ?3 = v14575
    af = v14576
    ?5 = v14577
    zf = v14578
    sf = v14579
    tf = v14580
    if = v14581
    df = v14582
    of = v14583
    iopl0 = v14584
    iopl1 = v14585
    nt = v14586
    ?15 = v14587
    memory = {
        size=4; addr=v14719-0x4 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v14855
    cx = v14856
    dx = v14857
    bx = v14895 [from 0x80485ba:pop    ebx]
    sp = v14892 [from 0x80485ba:pop    ebx]
    bp = v14860
    si = v14861
    di = v14862
    es = v14863
    cs = v14864
    ss = v14865
    ds = v14866
    fs = v14867
    gs = v14868
    cf = v14869
    ?1 = v14870
    pf = v14871
    ?3 = v14872
    af = v14873
    ?5 = v14874
    zf = v14875
    sf = v14876
    tf = v14877
    if = v14878
    df = v14879
    of = v14880
    iopl0 = v14881
    iopl1 = v14882
    nt = v14883
    ?15 = v14884
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v14855
    cx = v14856
    dx = v14857
    bx = v14971 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v14892 [from 0x80485ba:pop    ebx]
    bp = v14860
    si = v14861
    di = v14862
    es = v14863
    cs = v14864
    ss = v14865
    ds = v14866
    fs = v14867
    gs = v14868
    cf = v14965 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v14870
    pf = -v14956-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v14872
    af = v14963 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v14874
    zf = v14961 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v14959 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v14877
    if = v14878
    df = v14879
    of = v14969 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v14881
    iopl1 = v14882
    nt = v14883
    ?15 = v14884
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v14855
    cx = v14856
    dx = v14857
    bx = v14971 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v15015 [from 0x80485c1:call   0x08048390]
    bp = v14860
    si = v14861
    di = v14862
    es = v14863
    cs = v14864
    ss = v14865
    ds = v14866
    fs = v14867
    gs = v14868
    cf = v14965 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v14870
    pf = -v14956-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v14872
    af = v14963 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v14874
    zf = v14961 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v14959 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v14877
    if = v14878
    df = v14879
    of = v14969 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v14881
    iopl1 = v14882
    nt = v14883
    ?15 = v14884
    memory = {
        size=4; addr=v14892-0x4 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v15237 [from 0x80485c6:pop    eax]
    cx = v15198
    dx = v15199
    bx = v15200
    sp = v15234 [from 0x80485c6:pop    eax]
    bp = v15202
    si = v15203
    di = v15204
    es = v15205
    cs = v15206
    ss = v15207
    ds = v15208
    fs = v15209
    gs = v15210
    cf = v15211
    ?1 = v15212
    pf = v15213
    ?3 = v15214
    af = v15215
    ?5 = v15216
    zf = v15217
    sf = v15218
    tf = v15219
    if = v15220
    df = v15221
    of = v15222
    iopl0 = v15223
    iopl1 = v15224
    nt = v15225
    ?15 = v15226
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v15237 [from 0x80485c6:pop    eax]
    cx = v15198
    dx = v15199
    bx = v15279 [from 0x80485c7:pop    ebx]
    sp = v15276 [from 0x80485c7:pop    ebx]
    bp = v15202
    si = v15203
    di = v15204
    es = v15205
    cs = v15206
    ss = v15207
    ds = v15208
    fs = v15209
    gs = v15210
    cf = v15211
    ?1 = v15212
    pf = v15213
    ?3 = v15214
    af = v15215
    ?5 = v15216
    zf = v15217
    sf = v15218
    tf = v15219
    if = v15220
    df = v15221
    of = v15222
    iopl0 = v15223
    iopl1 = v15224
    nt = v15225
    ?15 = v15226
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v15237 [from 0x80485c6:pop    eax]
    cx = v15198
    dx = v15199
    bx = v15279 [from 0x80485c7:pop    ebx]
    sp = v15323 [from 0x80485c8:leave  ]
    bp = v15322 [from 0x80485c8:leave  ]
    si = v15203
    di = v15204
    es = v15205
    cs = v15206
    ss = v15207
    ds = v15208
    fs = v15209
    gs = v15210
    cf = v15211
    ?1 = v15212
    pf = v15213
    ?3 = v15214
    af = v15215
    ?5 = v15216
    zf = v15217
    sf = v15218
    tf = v15219
    if = v15220
    df = v15221
    of = v15222
    iopl0 = v15223
    iopl1 = v15224
    nt = v15225
    ?15 = v15226
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v15237 [from 0x80485c6:pop    eax]
    cx = v15198
    dx = v15199
    bx = v15279 [from 0x80485c7:pop    ebx]
    sp = v15367 [from 0x80485c9:ret    ]
    bp = v15322 [from 0x80485c8:leave  ]
    si = v15203
    di = v15204
    es = v15205
    cs = v15206
    ss = v15207
    ds = v15208
    fs = v15209
    gs = v15210
    cf = v15211
    ?1 = v15212
    pf = v15213
    ?3 = v15214
    af = v15215
    ?5 = v15216
    zf = v15217
    sf = v15218
    tf = v15219
    if = v15220
    df = v15221
    of = v15222
    iopl0 = v15223
    iopl1 = v15224
    nt = v15225
    ?15 = v15226
    memory = {}
    ip = v15365 [from 0x80485c9:ret    ]
analyzed headers: 1
