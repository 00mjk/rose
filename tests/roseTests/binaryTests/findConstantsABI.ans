=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v416
    cx = v417
    dx = v418
    bx = v419
    sp = v420-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v421
    si = v422
    di = v423
    es = v424
    cs = v425
    ss = v426
    ds = v427
    fs = v428
    gs = v429
    cf = v430
    ?1 = v431
    pf = v432
    ?3 = v433
    af = v434
    ?5 = v435
    zf = v436
    sf = v437
    tf = v438
    if = v439
    df = v440
    of = v441
    iopl0 = v442
    iopl1 = v443
    nt = v444
    ?15 = v445
    memory = {
        size=4; addr=v420-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v633
    cx = v634
    dx = v635
    bx = v636
    sp = v637-0x4 [from 0x80482d8:call   0x08048580]
    bp = v638
    si = v639
    di = v640
    es = v641
    cs = v642
    ss = v643
    ds = v644
    fs = v645
    gs = v646
    cf = v647
    ?1 = v648
    pf = v649
    ?3 = v650
    af = v651
    ?5 = v652
    zf = v653
    sf = v654
    tf = v655
    if = v656
    df = v657
    of = v658
    iopl0 = v659
    iopl1 = v660
    nt = v661
    ?15 = v662
    memory = {
        size=4; addr=v637-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x4 [from 0x80482dd:leave  ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x8 [from 0x80482de:ret    ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = v922 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v984
    cx = v985
    dx = v986
    bx = v987
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = v998
    ?1 = v999
    pf = v1000
    ?3 = v1001
    af = v1002
    ?5 = v1003
    zf = v1004
    sf = v1005
    tf = v1006
    if = v1007
    df = v1008
    of = v1009
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = v1017 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v1079
    cx = v1080
    dx = v1081
    bx = v1082
    sp = v1083
    bp = v1084
    si = v1085
    di = v1086
    es = v1087
    cs = v1088
    ss = v1089
    ds = v1090
    fs = v1091
    gs = v1092
    cf = v1093
    ?1 = v1094
    pf = v1095
    ?3 = v1096
    af = v1097
    ?5 = v1098
    zf = v1099
    sf = v1100
    tf = v1101
    if = v1102
    df = v1103
    of = v1104
    iopl0 = v1105
    iopl1 = v1106
    nt = v1107
    ?15 = v1108
    memory = {}
    ip = v1112 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v1174
    cx = v1175
    dx = v1176
    bx = v1177
    sp = v1178
    bp = v1179
    si = v1180
    di = v1181
    es = v1182
    cs = v1183
    ss = v1184
    ds = v1185
    fs = v1186
    gs = v1187
    cf = v1188
    ?1 = v1189
    pf = v1190
    ?3 = v1191
    af = v1192
    ?5 = v1193
    zf = v1194
    sf = v1195
    tf = v1196
    if = v1197
    df = v1198
    of = v1199
    iopl0 = v1200
    iopl1 = v1201
    nt = v1202
    ?15 = v1203
    memory = {}
    ip = v1207 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v1269
    cx = v1270
    dx = v1271
    bx = v1272
    sp = v1273
    bp = v1274
    si = v1275
    di = v1276
    es = v1277
    cs = v1278
    ss = v1279
    ds = v1280
    fs = v1281
    gs = v1282
    cf = v1283
    ?1 = v1284
    pf = v1285
    ?3 = v1286
    af = v1287
    ?5 = v1288
    zf = v1289
    sf = v1290
    tf = v1291
    if = v1292
    df = v1293
    of = v1294
    iopl0 = v1295
    iopl1 = v1296
    nt = v1297
    ?15 = v1298
    memory = {}
    ip = v1302 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1364
    cx = v1365
    dx = v1366
    bx = v1367
    sp = v1368
    bp = v1369
    si = v1370
    di = v1371
    es = v1372
    cs = v1373
    ss = v1374
    ds = v1375
    fs = v1376
    gs = v1377
    cf = v1378
    ?1 = v1379
    pf = v1380
    ?3 = v1381
    af = v1382
    ?5 = v1383
    zf = v1384
    sf = v1385
    tf = v1386
    if = v1387
    df = v1388
    of = v1389
    iopl0 = v1390
    iopl1 = v1391
    nt = v1392
    ?15 = v1393
    memory = {}
    ip = v1397 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1459
    cx = v1460
    dx = v1461
    bx = v1462
    sp = v1463
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1465
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1459
    cx = v1460
    dx = v1461
    bx = v1462
    sp = v1463+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1463+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v1614-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v2146
    cx = v2147
    dx = v2148
    bx = v2149
    sp = v2150
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2160
    ?1 = v2161
    pf = v2162
    ?3 = v2163
    af = v2164
    ?5 = v2165
    zf = v2166
    sf = v2167
    tf = v2168
    if = v2169
    df = v2170
    of = v2171
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x4 [from 0x8048364:push   ebp]
    bp = v2244
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x4 [from 0x8048364:push   ebp]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x8 [from 0x8048367:push   ebx]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0xc [from 0x8048368:push   ecx]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0xc [from 0x8048368:push   ecx]; value=v2240
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x10 [from 0x8048369:call   0x0804836e]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v2243-0xc [from 0x8048368:push   ecx]; value=v2240
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2506
    cx = v2507
    dx = v2508
    bx = v2540 [from 0x804836e:pop    ebx]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = v2520
    ?1 = v2521
    pf = v2522
    ?3 = v2523
    af = v2524
    ?5 = v2525
    zf = v2526
    sf = v2527
    tf = v2528
    if = v2529
    df = v2530
    of = v2531
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2506
    cx = v2507
    dx = v2508
    bx = v2540+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = v2602 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2521
    pf = -v2597-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2523
    af = v2601 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2525
    zf = v2600 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2599 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2528
    if = v2529
    df = v2530
    of = v2605 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2506
    cx = v2507
    dx = v2641 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2540+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = v2602 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2521
    pf = -v2597-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2523
    af = v2601 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2525
    zf = v2600 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2599 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2528
    if = v2529
    df = v2530
    of = v2605 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2506
    cx = v2507
    dx = v2641 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2540+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2521
    pf = -v2690-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2523
    af = <top>
    ?5 = v2525
    zf = v2693 [from 0x804837b:test   edx, edx]
    sf = v2692 [from 0x804837b:test   edx, edx]
    tf = v2528
    if = v2529
    df = v2530
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2506
    cx = v2507
    dx = v2641 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2540+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2521
    pf = -v2690-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2523
    af = <top>
    ?5 = v2525
    zf = v2693 [from 0x804837b:test   edx, edx]
    sf = v2692 [from 0x804837b:test   edx, edx]
    tf = v2528
    if = v2529
    df = v2530
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = v2730 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v2852
    cx = v2853
    dx = v2854
    bx = v2855
    sp = v2856-0x4 [from 0x804837f:call   0x08048330]
    bp = v2857
    si = v2858
    di = v2859
    es = v2860
    cs = v2861
    ss = v2862
    ds = v2863
    fs = v2864
    gs = v2865
    cf = v2866
    ?1 = v2867
    pf = v2868
    ?3 = v2869
    af = v2870
    ?5 = v2871
    zf = v2872
    sf = v2873
    tf = v2874
    if = v2875
    df = v2876
    of = v2877
    iopl0 = v2878
    iopl1 = v2879
    nt = v2880
    ?15 = v2881
    memory = {
        size=4; addr=v2856-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v3103 [from 0x8048384:pop    eax]
    cx = v3070
    dx = v3071
    bx = v3072
    sp = v3073+0x4 [from 0x8048384:pop    eax]
    bp = v3074
    si = v3075
    di = v3076
    es = v3077
    cs = v3078
    ss = v3079
    ds = v3080
    fs = v3081
    gs = v3082
    cf = v3083
    ?1 = v3084
    pf = v3085
    ?3 = v3086
    af = v3087
    ?5 = v3088
    zf = v3089
    sf = v3090
    tf = v3091
    if = v3092
    df = v3093
    of = v3094
    iopl0 = v3095
    iopl1 = v3096
    nt = v3097
    ?15 = v3098
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v3103 [from 0x8048384:pop    eax]
    cx = v3070
    dx = v3071
    bx = v3139 [from 0x8048385:pop    ebx]
    sp = v3073+0x8 [from 0x8048385:pop    ebx]
    bp = v3074
    si = v3075
    di = v3076
    es = v3077
    cs = v3078
    ss = v3079
    ds = v3080
    fs = v3081
    gs = v3082
    cf = v3083
    ?1 = v3084
    pf = v3085
    ?3 = v3086
    af = v3087
    ?5 = v3088
    zf = v3089
    sf = v3090
    tf = v3091
    if = v3092
    df = v3093
    of = v3094
    iopl0 = v3095
    iopl1 = v3096
    nt = v3097
    ?15 = v3098
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v3103 [from 0x8048384:pop    eax]
    cx = v3070
    dx = v3071
    bx = v3139 [from 0x8048385:pop    ebx]
    sp = v3074+0x4 [from 0x8048386:leave  ]
    bp = v3175 [from 0x8048386:leave  ]
    si = v3075
    di = v3076
    es = v3077
    cs = v3078
    ss = v3079
    ds = v3080
    fs = v3081
    gs = v3082
    cf = v3083
    ?1 = v3084
    pf = v3085
    ?3 = v3086
    af = v3087
    ?5 = v3088
    zf = v3089
    sf = v3090
    tf = v3091
    if = v3092
    df = v3093
    of = v3094
    iopl0 = v3095
    iopl1 = v3096
    nt = v3097
    ?15 = v3098
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v3103 [from 0x8048384:pop    eax]
    cx = v3070
    dx = v3071
    bx = v3139 [from 0x8048385:pop    ebx]
    sp = v3074+0x8 [from 0x8048387:ret    ]
    bp = v3175 [from 0x8048386:leave  ]
    si = v3075
    di = v3076
    es = v3077
    cs = v3078
    ss = v3079
    ds = v3080
    fs = v3081
    gs = v3082
    cf = v3083
    ?1 = v3084
    pf = v3085
    ?3 = v3086
    af = v3087
    ?5 = v3088
    zf = v3089
    sf = v3090
    tf = v3091
    if = v3092
    df = v3093
    of = v3094
    iopl0 = v3095
    iopl1 = v3096
    nt = v3097
    ?15 = v3098
    memory = {}
    ip = v3213 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0x4 [from 0x8048390:push   ebp]
    bp = v3280
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = v3289
    ?1 = v3290
    pf = v3291
    ?3 = v3292
    af = v3293
    ?5 = v3294
    zf = v3295
    sf = v3296
    tf = v3297
    if = v3298
    df = v3299
    of = v3300
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0x4 [from 0x8048390:push   ebp]
    bp = v3279-0x4 [from 0x8048390:push   ebp]
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = v3289
    ?1 = v3290
    pf = v3291
    ?3 = v3292
    af = v3293
    ?5 = v3294
    zf = v3295
    sf = v3296
    tf = v3297
    if = v3298
    df = v3299
    of = v3300
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3279-0x4 [from 0x8048390:push   ebp]
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = -v3406-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v3290
    pf = -v3400-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v3292
    af = -v3404-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v3294
    zf = v3403 [from 0x8048393:sub    esp, 0x08]
    sf = v3402 [from 0x8048393:sub    esp, 0x08]
    tf = v3297
    if = v3298
    df = v3299
    of = v3410 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3279-0x4 [from 0x8048390:push   ebp]
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = -v3478-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3290
    pf = -v3472-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3292
    af = -v3476-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3294
    zf = v3475 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3474 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3297
    if = v3298
    df = v3299
    of = v3482 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3279-0x4 [from 0x8048390:push   ebp]
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = -v3478-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3290
    pf = -v3472-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3292
    af = -v3476-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3294
    zf = v3475 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3474 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3297
    if = v3298
    df = v3299
    of = v3482 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = v3517 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3672 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3640
    dx = v3641
    bx = v3642
    sp = v3643
    bp = v3644
    si = v3645
    di = v3646
    es = v3647
    cs = v3648
    ss = v3649
    ds = v3650
    fs = v3651
    gs = v3652
    cf = v3653
    ?1 = v3654
    pf = v3655
    ?3 = v3656
    af = v3657
    ?5 = v3658
    zf = v3659
    sf = v3660
    tf = v3661
    if = v3662
    df = v3663
    of = v3664
    iopl0 = v3665
    iopl1 = v3666
    nt = v3667
    ?15 = v3668
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3672 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3640
    dx = v3706 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3642
    sp = v3643
    bp = v3644
    si = v3645
    di = v3646
    es = v3647
    cs = v3648
    ss = v3649
    ds = v3650
    fs = v3651
    gs = v3652
    cf = v3653
    ?1 = v3654
    pf = v3655
    ?3 = v3656
    af = v3657
    ?5 = v3658
    zf = v3659
    sf = v3660
    tf = v3661
    if = v3662
    df = v3663
    of = v3664
    iopl0 = v3665
    iopl1 = v3666
    nt = v3667
    ?15 = v3668
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3672 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3640
    dx = v3706 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3642
    sp = v3643
    bp = v3644
    si = v3645
    di = v3646
    es = v3647
    cs = v3648
    ss = v3649
    ds = v3650
    fs = v3651
    gs = v3652
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3654
    pf = -v3755-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3656
    af = <top>
    ?5 = v3658
    zf = v3758 [from 0x80483a6:test   edx, edx]
    sf = v3757 [from 0x80483a6:test   edx, edx]
    tf = v3661
    if = v3662
    df = v3663
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3665
    iopl1 = v3666
    nt = v3667
    ?15 = v3668
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3672 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3640
    dx = v3706 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3642
    sp = v3643
    bp = v3644
    si = v3645
    di = v3646
    es = v3647
    cs = v3648
    ss = v3649
    ds = v3650
    fs = v3651
    gs = v3652
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3654
    pf = -v3755-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3656
    af = <top>
    ?5 = v3658
    zf = v3758 [from 0x80483a6:test   edx, edx]
    sf = v3757 [from 0x80483a6:test   edx, edx]
    tf = v3661
    if = v3662
    df = v3663
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3665
    iopl1 = v3666
    nt = v3667
    ?15 = v3668
    memory = {}
    ip = v3795 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v3917
    cx = v3918
    dx = v3919
    bx = v3920
    sp = v3921
    bp = v3922
    si = v3923 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3924
    es = v3925
    cs = v3926
    ss = v3927
    ds = v3928
    fs = v3929
    gs = v3930
    cf = v3931
    ?1 = v3932
    pf = v3933
    ?3 = v3934
    af = v3935
    ?5 = v3936
    zf = v3937
    sf = v3938
    tf = v3939
    if = v3940
    df = v3941
    of = v3942
    iopl0 = v3943
    iopl1 = v3944
    nt = v3945
    ?15 = v3946
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v3917+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3918
    dx = v3919
    bx = v3920
    sp = v3921
    bp = v3922
    si = v3923 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3924
    es = v3925
    cs = v3926
    ss = v3927
    ds = v3928
    fs = v3929
    gs = v3930
    cf = v4011 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3932
    pf = -v4006-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3934
    af = v4010 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3936
    zf = v4009 [from 0x80483b0:add    eax, 0x04]
    sf = v4008 [from 0x80483b0:add    eax, 0x04]
    tf = v3939
    if = v3940
    df = v3941
    of = v4014 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3943
    iopl1 = v3944
    nt = v3945
    ?15 = v3946
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v3917+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3918
    dx = v3919
    bx = v3920
    sp = v3921
    bp = v3922
    si = v3923 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3924
    es = v3925
    cs = v3926
    ss = v3927
    ds = v3928
    fs = v3929
    gs = v3930
    cf = v4011 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3932
    pf = -v4006-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3934
    af = v4010 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3936
    zf = v4009 [from 0x80483b0:add    eax, 0x04]
    sf = v4008 [from 0x80483b0:add    eax, 0x04]
    tf = v3939
    if = v3940
    df = v3941
    of = v4014 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3943
    iopl1 = v3944
    nt = v3945
    ?15 = v3946
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v3917+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v3917+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3918
    dx = v3919
    bx = v3920
    sp = v3921-0x4 [from 0x80483b8:call   edx]
    bp = v3922
    si = v3923 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3924
    es = v3925
    cs = v3926
    ss = v3927
    ds = v3928
    fs = v3929
    gs = v3930
    cf = v4011 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3932
    pf = -v4006-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3934
    af = v4010 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3936
    zf = v4009 [from 0x80483b0:add    eax, 0x04]
    sf = v4008 [from 0x80483b0:add    eax, 0x04]
    tf = v3939
    if = v3940
    df = v3941
    of = v4014 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3943
    iopl1 = v3944
    nt = v3945
    ?15 = v3946
    memory = {
        size=4; addr=v3921-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v3919
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v4270 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4238
    dx = v4239
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = v4251
    ?1 = v4252
    pf = v4253
    ?3 = v4254
    af = v4255
    ?5 = v4256
    zf = v4257
    sf = v4258
    tf = v4259
    if = v4260
    df = v4261
    of = v4262
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v4270 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4238
    dx = v4304 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = v4251
    ?1 = v4252
    pf = v4253
    ?3 = v4254
    af = v4255
    ?5 = v4256
    zf = v4257
    sf = v4258
    tf = v4259
    if = v4260
    df = v4261
    of = v4262
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v4270 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4238
    dx = v4304 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4252
    pf = -v4353-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4254
    af = <top>
    ?5 = v4256
    zf = v4356 [from 0x80483c1:test   edx, edx]
    sf = v4355 [from 0x80483c1:test   edx, edx]
    tf = v4259
    if = v4260
    df = v4261
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v4270 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4238
    dx = v4304 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4252
    pf = -v4353-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4254
    af = <top>
    ?5 = v4256
    zf = v4356 [from 0x80483c1:test   edx, edx]
    sf = v4355 [from 0x80483c1:test   edx, edx]
    tf = v4259
    if = v4260
    df = v4261
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = v4394 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v4516
    cx = v4517
    dx = v4518
    bx = v4519
    sp = v4520
    bp = v4521
    si = v4522
    di = v4523
    es = v4524
    cs = v4525
    ss = v4526
    ds = v4527
    fs = v4528
    gs = v4529
    cf = v4530
    ?1 = v4531
    pf = v4532
    ?3 = v4533
    af = v4534
    ?5 = v4535
    zf = v4536
    sf = v4537
    tf = v4538
    if = v4539
    df = v4540
    of = v4541
    iopl0 = v4542
    iopl1 = v4543
    nt = v4544
    ?15 = v4545
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v4516
    cx = v4517
    dx = v4518
    bx = v4519
    sp = v4521+0x4 [from 0x80483cc:leave  ]
    bp = v4586 [from 0x80483cc:leave  ]
    si = v4522
    di = v4523
    es = v4524
    cs = v4525
    ss = v4526
    ds = v4527
    fs = v4528
    gs = v4529
    cf = v4530
    ?1 = v4531
    pf = v4532
    ?3 = v4533
    af = v4534
    ?5 = v4535
    zf = v4536
    sf = v4537
    tf = v4538
    if = v4539
    df = v4540
    of = v4541
    iopl0 = v4542
    iopl1 = v4543
    nt = v4544
    ?15 = v4545
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v4516
    cx = v4517
    dx = v4518
    bx = v4519
    sp = v4521+0x8 [from 0x80483cd:ret    ]
    bp = v4586 [from 0x80483cc:leave  ]
    si = v4522
    di = v4523
    es = v4524
    cs = v4525
    ss = v4526
    ds = v4527
    fs = v4528
    gs = v4529
    cf = v4530
    ?1 = v4531
    pf = v4532
    ?3 = v4533
    af = v4534
    ?5 = v4535
    zf = v4536
    sf = v4537
    tf = v4538
    if = v4539
    df = v4540
    of = v4541
    iopl0 = v4542
    iopl1 = v4543
    nt = v4544
    ?15 = v4545
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v4624 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v4686
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0x4 [from 0x80483d0:push   ebp]
    bp = v4691
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = v4700
    ?1 = v4701
    pf = v4702
    ?3 = v4703
    af = v4704
    ?5 = v4705
    zf = v4706
    sf = v4707
    tf = v4708
    if = v4709
    df = v4710
    of = v4711
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v4686
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0x4 [from 0x80483d0:push   ebp]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = v4700
    ?1 = v4701
    pf = v4702
    ?3 = v4703
    af = v4704
    ?5 = v4705
    zf = v4706
    sf = v4707
    tf = v4708
    if = v4709
    df = v4710
    of = v4711
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v4686
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = -v4817-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4701
    pf = -v4811-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4703
    af = -v4815-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4705
    zf = v4814 [from 0x80483d3:sub    esp, 0x08]
    sf = v4813 [from 0x80483d3:sub    esp, 0x08]
    tf = v4708
    if = v4709
    df = v4710
    of = v4821 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v4856 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = -v4817-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4701
    pf = -v4811-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4703
    af = -v4815-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4705
    zf = v4814 [from 0x80483d3:sub    esp, 0x08]
    sf = v4813 [from 0x80483d3:sub    esp, 0x08]
    tf = v4708
    if = v4709
    df = v4710
    of = v4821 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v4856 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4701
    pf = -v4905-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4703
    af = <top>
    ?5 = v4705
    zf = v4908 [from 0x80483db:test   eax, eax]
    sf = v4907 [from 0x80483db:test   eax, eax]
    tf = v4708
    if = v4709
    df = v4710
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v4856 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4701
    pf = -v4905-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4703
    af = <top>
    ?5 = v4705
    zf = v4908 [from 0x80483db:test   eax, eax]
    sf = v4907 [from 0x80483db:test   eax, eax]
    tf = v4708
    if = v4709
    df = v4710
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = v4945 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5071
    bp = v5072
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = v5081
    ?1 = v5082
    pf = v5083
    ?3 = v5084
    af = v5085
    ?5 = v5086
    zf = v5087
    sf = v5088
    tf = v5089
    if = v5090
    df = v5091
    of = v5092
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5071
    bp = v5072
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5071
    bp = v5072
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5072
    bp = v5072
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5072+0x4 [from 0x8048402:pop    ebp]
    bp = v5255 [from 0x8048402:pop    ebp]
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5072+0x8 [from 0x8048403:ret    ]
    bp = v5255 [from 0x8048402:pop    ebp]
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = v5293 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = v5355
    cx = v5356
    dx = v5357
    bx = v5358
    sp = v5359
    bp = v5360
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = v5369
    ?1 = v5370
    pf = v5371
    ?3 = v5372
    af = v5373
    ?5 = v5374
    zf = v5375
    sf = v5376
    tf = v5377
    if = v5378
    df = v5379
    of = v5380
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5359; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
0x80483ef:call   0x00000000
    ax = v5355
    cx = v5356
    dx = v5357
    bx = v5358
    sp = v5359-0x4 [from 0x80483ef:call   0x00000000]
    bp = v5360
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = v5369
    ?1 = v5370
    pf = v5371
    ?3 = v5372
    af = v5373
    ?5 = v5374
    zf = v5375
    sf = v5376
    tf = v5377
    if = v5378
    df = v5379
    of = v5380
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5359; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=v5359-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v5607
    cx = v5608
    dx = v5609
    bx = v5610
    sp = v5611
    bp = v5612
    si = v5613 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v5614
    es = v5615
    cs = v5616
    ss = v5617
    ds = v5618
    fs = v5619
    gs = v5620
    cf = v5621
    ?1 = v5622
    pf = v5623
    ?3 = v5624
    af = v5625
    ?5 = v5626
    zf = v5627
    sf = v5628
    tf = v5629
    if = v5630
    df = v5631
    of = v5632
    iopl0 = v5633
    iopl1 = v5634
    nt = v5635
    ?15 = v5636
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v5607
    cx = v5608
    dx = v5609
    bx = v5610
    sp = v5611
    bp = v5612
    si = v5613 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v5614 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v5615
    cs = v5616
    ss = v5617
    ds = v5618
    fs = v5619
    gs = v5620
    cf = v5621
    ?1 = v5622
    pf = v5623
    ?3 = v5624
    af = v5625
    ?5 = v5626
    zf = v5627
    sf = v5628
    tf = v5629
    if = v5630
    df = v5631
    of = v5632
    iopl0 = v5633
    iopl1 = v5634
    nt = v5635
    ?15 = v5636
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    ax = v5765
    cx = v5766
    dx = v5767
    bx = v5768
    sp = v5769-0x4 [from 0x8048410:push   ebp]
    bp = v5770
    si = v5771
    di = v5772
    es = v5773
    cs = v5774
    ss = v5775
    ds = v5776
    fs = v5777
    gs = v5778
    cf = v5779
    ?1 = v5780
    pf = v5781
    ?3 = v5782
    af = v5783
    ?5 = v5784
    zf = v5785
    sf = v5786
    tf = v5787
    if = v5788
    df = v5789
    of = v5790
    iopl0 = v5791
    iopl1 = v5792
    nt = v5793
    ?15 = v5794
    memory = {
        size=4; addr=v5769-0x4 [from 0x8048410:push   ebp]; value=v5770
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v5765
    cx = v5766
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5768
    sp = v5769-0x4 [from 0x8048410:push   ebp]
    bp = v5770
    si = v5771
    di = v5772
    es = v5773
    cs = v5774
    ss = v5775
    ds = v5776
    fs = v5777
    gs = v5778
    cf = v5779
    ?1 = v5780
    pf = v5781
    ?3 = v5782
    af = v5783
    ?5 = v5784
    zf = v5785
    sf = v5786
    tf = v5787
    if = v5788
    df = v5789
    of = v5790
    iopl0 = v5791
    iopl1 = v5792
    nt = v5793
    ?15 = v5794
    memory = {
        size=4; addr=v5769-0x4 [from 0x8048410:push   ebp]; value=v5770
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v5765
    cx = v5766
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5768
    sp = v5769-0x4 [from 0x8048410:push   ebp]
    bp = v5769-0x4 [from 0x8048410:push   ebp]
    si = v5771
    di = v5772
    es = v5773
    cs = v5774
    ss = v5775
    ds = v5776
    fs = v5777
    gs = v5778
    cf = v5779
    ?1 = v5780
    pf = v5781
    ?3 = v5782
    af = v5783
    ?5 = v5784
    zf = v5785
    sf = v5786
    tf = v5787
    if = v5788
    df = v5789
    of = v5790
    iopl0 = v5791
    iopl1 = v5792
    nt = v5793
    ?15 = v5794
    memory = {
        size=4; addr=v5769-0x4 [from 0x8048410:push   ebp]; value=v5770
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v5765
    cx = v5766
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5768
    sp = v5769-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v5769-0x4 [from 0x8048410:push   ebp]
    si = v5771
    di = v5772
    es = v5773
    cs = v5774
    ss = v5775
    ds = v5776
    fs = v5777
    gs = v5778
    cf = -v5929-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v5780
    pf = -v5923-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v5782
    af = -v5927-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v5784
    zf = v5926 [from 0x8048418:sub    esp, 0x08]
    sf = v5925 [from 0x8048418:sub    esp, 0x08]
    tf = v5787
    if = v5788
    df = v5789
    of = v5933 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v5791
    iopl1 = v5792
    nt = v5793
    ?15 = v5794
    memory = {
        size=4; addr=v5769-0x4 [from 0x8048410:push   ebp]; value=v5770
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v5765
    cx = v5766
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5768
    sp = v5967 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5769-0x4 [from 0x8048410:push   ebp]
    si = v5771
    di = v5772
    es = v5773
    cs = v5774
    ss = v5775
    ds = v5776
    fs = v5777
    gs = v5778
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5780
    pf = -v5983-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5782
    af = <top>
    ?5 = v5784
    zf = v5986 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5985 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5787
    if = v5788
    df = v5789
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5791
    iopl1 = v5792
    nt = v5793
    ?15 = v5794
    memory = {
        size=4; addr=v5769-0x4 [from 0x8048410:push   ebp]; value=v5770
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v5765
    cx = v5766
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5768
    sp = v5967 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5769-0x4 [from 0x8048410:push   ebp]
    si = v5771
    di = v5772
    es = v5773
    cs = v5774
    ss = v5775
    ds = v5776
    fs = v5777
    gs = v5778
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5780
    pf = -v5983-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5782
    af = <top>
    ?5 = v5784
    zf = v5986 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5985 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5787
    if = v5788
    df = v5789
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5791
    iopl1 = v5792
    nt = v5793
    ?15 = v5794
    memory = {
        size=4; addr=v5967+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v5765
    cx = v5766
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5768
    sp = v5967 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5769-0x4 [from 0x8048410:push   ebp]
    si = v5771
    di = v5772
    es = v5773
    cs = v5774
    ss = v5775
    ds = v5776
    fs = v5777
    gs = v5778
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5780
    pf = -v5983-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5782
    af = <top>
    ?5 = v5784
    zf = v5986 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5985 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5787
    if = v5788
    df = v5789
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5791
    iopl1 = v5792
    nt = v5793
    ?15 = v5794
    memory = {
        size=4; addr=v5967 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5967+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v5765
    cx = v5766
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5768
    sp = v5967-0x4 [from 0x8048429:call   0x080482f0]
    bp = v5769-0x4 [from 0x8048410:push   ebp]
    si = v5771
    di = v5772
    es = v5773
    cs = v5774
    ss = v5775
    ds = v5776
    fs = v5777
    gs = v5778
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5780
    pf = -v5983-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5782
    af = <top>
    ?5 = v5784
    zf = v5986 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5985 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5787
    if = v5788
    df = v5789
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5791
    iopl1 = v5792
    nt = v5793
    ?15 = v5794
    memory = {
        size=4; addr=v5967 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5967+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v5967-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v6279
    cx = v6280
    dx = v6281
    bx = v6282
    sp = v6284
    bp = v6284
    si = v6285
    di = v6286
    es = v6287
    cs = v6288
    ss = v6289
    ds = v6290
    fs = v6291
    gs = v6292
    cf = v6293
    ?1 = v6294
    pf = v6295
    ?3 = v6296
    af = v6297
    ?5 = v6298
    zf = v6299
    sf = v6300
    tf = v6301
    if = v6302
    df = v6303
    of = v6304
    iopl0 = v6305
    iopl1 = v6306
    nt = v6307
    ?15 = v6308
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6280
    dx = v6281
    bx = v6282
    sp = v6284
    bp = v6284
    si = v6285
    di = v6286
    es = v6287
    cs = v6288
    ss = v6289
    ds = v6290
    fs = v6291
    gs = v6292
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6294
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6296
    af = <top>
    ?5 = v6298
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6301
    if = v6302
    df = v6303
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6305
    iopl1 = v6306
    nt = v6307
    ?15 = v6308
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6280
    dx = v6281
    bx = v6282
    sp = v6284+0x4 [from 0x8048432:pop    ebp]
    bp = v6400 [from 0x8048432:pop    ebp]
    si = v6285
    di = v6286
    es = v6287
    cs = v6288
    ss = v6289
    ds = v6290
    fs = v6291
    gs = v6292
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6294
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6296
    af = <top>
    ?5 = v6298
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6301
    if = v6302
    df = v6303
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6305
    iopl1 = v6306
    nt = v6307
    ?15 = v6308
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6280
    dx = v6281
    bx = v6282
    sp = v6284+0x8 [from 0x8048433:ret    ]
    bp = v6400 [from 0x8048432:pop    ebp]
    si = v6285
    di = v6286
    es = v6287
    cs = v6288
    ss = v6289
    ds = v6290
    fs = v6291
    gs = v6292
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6294
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6296
    af = <top>
    ?5 = v6298
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6301
    if = v6302
    df = v6303
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6305
    iopl1 = v6306
    nt = v6307
    ?15 = v6308
    memory = {}
    ip = v6438 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v6500
    cx = v6501
    dx = v6502
    bx = v6503
    sp = v6504-0x4 [from 0x8048440:push   ebp]
    bp = v6505
    si = v6506
    di = v6507
    es = v6508
    cs = v6509
    ss = v6510
    ds = v6511
    fs = v6512
    gs = v6513
    cf = v6514
    ?1 = v6515
    pf = v6516
    ?3 = v6517
    af = v6518
    ?5 = v6519
    zf = v6520
    sf = v6521
    tf = v6522
    if = v6523
    df = v6524
    of = v6525
    iopl0 = v6526
    iopl1 = v6527
    nt = v6528
    ?15 = v6529
    memory = {
        size=4; addr=v6504-0x4 [from 0x8048440:push   ebp]; value=v6505
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v6500
    cx = v6501
    dx = v6502
    bx = v6503
    sp = v6504-0x4 [from 0x8048440:push   ebp]
    bp = v6504-0x4 [from 0x8048440:push   ebp]
    si = v6506
    di = v6507
    es = v6508
    cs = v6509
    ss = v6510
    ds = v6511
    fs = v6512
    gs = v6513
    cf = v6514
    ?1 = v6515
    pf = v6516
    ?3 = v6517
    af = v6518
    ?5 = v6519
    zf = v6520
    sf = v6521
    tf = v6522
    if = v6523
    df = v6524
    of = v6525
    iopl0 = v6526
    iopl1 = v6527
    nt = v6528
    ?15 = v6529
    memory = {
        size=4; addr=v6504-0x4 [from 0x8048440:push   ebp]; value=v6505
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v6500
    cx = v6501
    dx = v6502
    bx = v6503
    sp = v6504-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v6504-0x4 [from 0x8048440:push   ebp]
    si = v6506
    di = v6507
    es = v6508
    cs = v6509
    ss = v6510
    ds = v6511
    fs = v6512
    gs = v6513
    cf = -v6631-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6515
    pf = -v6625-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6517
    af = -v6629-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6519
    zf = v6628 [from 0x8048443:sub    esp, 0x08]
    sf = v6627 [from 0x8048443:sub    esp, 0x08]
    tf = v6522
    if = v6523
    df = v6524
    of = v6635 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6526
    iopl1 = v6527
    nt = v6528
    ?15 = v6529
    memory = {
        size=4; addr=v6504-0x4 [from 0x8048440:push   ebp]; value=v6505
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6500
    cx = v6501
    dx = v6502
    bx = v6503
    sp = v6504-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v6504-0x4 [from 0x8048440:push   ebp]
    si = v6506
    di = v6507
    es = v6508
    cs = v6509
    ss = v6510
    ds = v6511
    fs = v6512
    gs = v6513
    cf = -v6631-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6515
    pf = -v6625-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6517
    af = -v6629-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6519
    zf = v6628 [from 0x8048443:sub    esp, 0x08]
    sf = v6627 [from 0x8048443:sub    esp, 0x08]
    tf = v6522
    if = v6523
    df = v6524
    of = v6635 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6526
    iopl1 = v6527
    nt = v6528
    ?15 = v6529
    memory = {
        size=4; addr=v6504-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6504-0x4 [from 0x8048440:push   ebp]; value=v6505
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v6500
    cx = v6501
    dx = v6502
    bx = v6503
    sp = v6504-0x10 [from 0x804844d:call   0x08048300]
    bp = v6504-0x4 [from 0x8048440:push   ebp]
    si = v6506
    di = v6507
    es = v6508
    cs = v6509
    ss = v6510
    ds = v6511
    fs = v6512
    gs = v6513
    cf = -v6631-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6515
    pf = -v6625-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6517
    af = -v6629-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6519
    zf = v6628 [from 0x8048443:sub    esp, 0x08]
    sf = v6627 [from 0x8048443:sub    esp, 0x08]
    tf = v6522
    if = v6523
    df = v6524
    of = v6635 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6526
    iopl1 = v6527
    nt = v6528
    ?15 = v6529
    memory = {
        size=4; addr=v6504-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v6504-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6504-0x4 [from 0x8048440:push   ebp]; value=v6505
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v6889
    cx = v6890
    dx = v6891
    bx = v6892
    sp = v6894
    bp = v6894
    si = v6895
    di = v6896
    es = v6897
    cs = v6898
    ss = v6899
    ds = v6900
    fs = v6901
    gs = v6902
    cf = v6903
    ?1 = v6904
    pf = v6905
    ?3 = v6906
    af = v6907
    ?5 = v6908
    zf = v6909
    sf = v6910
    tf = v6911
    if = v6912
    df = v6913
    of = v6914
    iopl0 = v6915
    iopl1 = v6916
    nt = v6917
    ?15 = v6918
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v6889
    cx = v6890
    dx = v6891
    bx = v6892
    sp = v6894+0x4 [from 0x8048454:pop    ebp]
    bp = v6955 [from 0x8048454:pop    ebp]
    si = v6895
    di = v6896
    es = v6897
    cs = v6898
    ss = v6899
    ds = v6900
    fs = v6901
    gs = v6902
    cf = v6903
    ?1 = v6904
    pf = v6905
    ?3 = v6906
    af = v6907
    ?5 = v6908
    zf = v6909
    sf = v6910
    tf = v6911
    if = v6912
    df = v6913
    of = v6914
    iopl0 = v6915
    iopl1 = v6916
    nt = v6917
    ?15 = v6918
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v6889
    cx = v6890
    dx = v6891
    bx = v6892
    sp = v6894+0x8 [from 0x8048455:ret    ]
    bp = v6955 [from 0x8048454:pop    ebp]
    si = v6895
    di = v6896
    es = v6897
    cs = v6898
    ss = v6899
    ds = v6900
    fs = v6901
    gs = v6902
    cf = v6903
    ?1 = v6904
    pf = v6905
    ?3 = v6906
    af = v6907
    ?5 = v6908
    zf = v6909
    sf = v6910
    tf = v6911
    if = v6912
    df = v6913
    of = v6914
    iopl0 = v6915
    iopl1 = v6916
    nt = v6917
    ?15 = v6918
    memory = {}
    ip = v6993 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v7055
    cx = v7056
    dx = v7057
    bx = v7058
    sp = v7059-0x4 [from 0x8048460:push   ebp]
    bp = v7060
    si = v7061
    di = v7062
    es = v7063
    cs = v7064
    ss = v7065
    ds = v7066
    fs = v7067
    gs = v7068
    cf = v7069
    ?1 = v7070
    pf = v7071
    ?3 = v7072
    af = v7073
    ?5 = v7074
    zf = v7075
    sf = v7076
    tf = v7077
    if = v7078
    df = v7079
    of = v7080
    iopl0 = v7081
    iopl1 = v7082
    nt = v7083
    ?15 = v7084
    memory = {
        size=4; addr=v7059-0x4 [from 0x8048460:push   ebp]; value=v7060
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v7055
    cx = v7056
    dx = v7057
    bx = v7058
    sp = v7059-0x4 [from 0x8048460:push   ebp]
    bp = v7059-0x4 [from 0x8048460:push   ebp]
    si = v7061
    di = v7062
    es = v7063
    cs = v7064
    ss = v7065
    ds = v7066
    fs = v7067
    gs = v7068
    cf = v7069
    ?1 = v7070
    pf = v7071
    ?3 = v7072
    af = v7073
    ?5 = v7074
    zf = v7075
    sf = v7076
    tf = v7077
    if = v7078
    df = v7079
    of = v7080
    iopl0 = v7081
    iopl1 = v7082
    nt = v7083
    ?15 = v7084
    memory = {
        size=4; addr=v7059-0x4 [from 0x8048460:push   ebp]; value=v7060
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v7055
    cx = v7056
    dx = v7057
    bx = v7058
    sp = v7059-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v7059-0x4 [from 0x8048460:push   ebp]
    si = v7061
    di = v7062
    es = v7063
    cs = v7064
    ss = v7065
    ds = v7066
    fs = v7067
    gs = v7068
    cf = -v7186-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7070
    pf = -v7180-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7072
    af = -v7184-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7074
    zf = v7183 [from 0x8048463:sub    esp, 0x08]
    sf = v7182 [from 0x8048463:sub    esp, 0x08]
    tf = v7077
    if = v7078
    df = v7079
    of = v7190 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7081
    iopl1 = v7082
    nt = v7083
    ?15 = v7084
    memory = {
        size=4; addr=v7059-0x4 [from 0x8048460:push   ebp]; value=v7060
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7055
    cx = v7056
    dx = v7057
    bx = v7058
    sp = v7059-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v7059-0x4 [from 0x8048460:push   ebp]
    si = v7061
    di = v7062
    es = v7063
    cs = v7064
    ss = v7065
    ds = v7066
    fs = v7067
    gs = v7068
    cf = -v7186-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7070
    pf = -v7180-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7072
    af = -v7184-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7074
    zf = v7183 [from 0x8048463:sub    esp, 0x08]
    sf = v7182 [from 0x8048463:sub    esp, 0x08]
    tf = v7077
    if = v7078
    df = v7079
    of = v7190 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7081
    iopl1 = v7082
    nt = v7083
    ?15 = v7084
    memory = {
        size=4; addr=v7059-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7059-0x4 [from 0x8048460:push   ebp]; value=v7060
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v7055
    cx = v7056
    dx = v7057
    bx = v7058
    sp = v7059-0x10 [from 0x804846d:call   0x08048300]
    bp = v7059-0x4 [from 0x8048460:push   ebp]
    si = v7061
    di = v7062
    es = v7063
    cs = v7064
    ss = v7065
    ds = v7066
    fs = v7067
    gs = v7068
    cf = -v7186-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7070
    pf = -v7180-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7072
    af = -v7184-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7074
    zf = v7183 [from 0x8048463:sub    esp, 0x08]
    sf = v7182 [from 0x8048463:sub    esp, 0x08]
    tf = v7077
    if = v7078
    df = v7079
    of = v7190 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7081
    iopl1 = v7082
    nt = v7083
    ?15 = v7084
    memory = {
        size=4; addr=v7059-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v7059-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7059-0x4 [from 0x8048460:push   ebp]; value=v7060
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7444
    cx = v7445
    dx = v7446
    bx = v7447
    sp = v7448
    bp = v7449
    si = v7450
    di = v7451
    es = v7452
    cs = v7453
    ss = v7454
    ds = v7455
    fs = v7456
    gs = v7457
    cf = v7458
    ?1 = v7459
    pf = v7460
    ?3 = v7461
    af = v7462
    ?5 = v7463
    zf = v7464
    sf = v7465
    tf = v7466
    if = v7467
    df = v7468
    of = v7469
    iopl0 = v7470
    iopl1 = v7471
    nt = v7472
    ?15 = v7473
    memory = {
        size=4; addr=v7448; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v7444
    cx = v7445
    dx = v7446
    bx = v7447
    sp = v7448-0x4 [from 0x8048479:call   0x08048320]
    bp = v7449
    si = v7450
    di = v7451
    es = v7452
    cs = v7453
    ss = v7454
    ds = v7455
    fs = v7456
    gs = v7457
    cf = v7458
    ?1 = v7459
    pf = v7460
    ?3 = v7461
    af = v7462
    ?5 = v7463
    zf = v7464
    sf = v7465
    tf = v7466
    if = v7467
    df = v7468
    of = v7469
    iopl0 = v7470
    iopl1 = v7471
    nt = v7472
    ?15 = v7473
    memory = {
        size=4; addr=v7448; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7448-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v7696
    cx = v7697
    dx = v7698
    bx = v7699
    sp = v7700-0x4 [from 0x8048480:push   ebp]
    bp = v7701
    si = v7702
    di = v7703
    es = v7704
    cs = v7705
    ss = v7706
    ds = v7707
    fs = v7708
    gs = v7709
    cf = v7710
    ?1 = v7711
    pf = v7712
    ?3 = v7713
    af = v7714
    ?5 = v7715
    zf = v7716
    sf = v7717
    tf = v7718
    if = v7719
    df = v7720
    of = v7721
    iopl0 = v7722
    iopl1 = v7723
    nt = v7724
    ?15 = v7725
    memory = {
        size=4; addr=v7700-0x4 [from 0x8048480:push   ebp]; value=v7701
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v7696
    cx = v7697
    dx = v7698
    bx = v7699
    sp = v7700-0x4 [from 0x8048480:push   ebp]
    bp = v7700-0x4 [from 0x8048480:push   ebp]
    si = v7702
    di = v7703
    es = v7704
    cs = v7705
    ss = v7706
    ds = v7707
    fs = v7708
    gs = v7709
    cf = v7710
    ?1 = v7711
    pf = v7712
    ?3 = v7713
    af = v7714
    ?5 = v7715
    zf = v7716
    sf = v7717
    tf = v7718
    if = v7719
    df = v7720
    of = v7721
    iopl0 = v7722
    iopl1 = v7723
    nt = v7724
    ?15 = v7725
    memory = {
        size=4; addr=v7700-0x4 [from 0x8048480:push   ebp]; value=v7701
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v7696
    cx = v7697
    dx = v7698
    bx = v7699
    sp = v7700-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7700-0x4 [from 0x8048480:push   ebp]
    si = v7702
    di = v7703
    es = v7704
    cs = v7705
    ss = v7706
    ds = v7707
    fs = v7708
    gs = v7709
    cf = -v7827-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7711
    pf = -v7821-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v7713
    af = -v7825-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v7715
    zf = v7824 [from 0x8048483:sub    esp, 0x08]
    sf = v7823 [from 0x8048483:sub    esp, 0x08]
    tf = v7718
    if = v7719
    df = v7720
    of = v7831 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v7722
    iopl1 = v7723
    nt = v7724
    ?15 = v7725
    memory = {
        size=4; addr=v7700-0x4 [from 0x8048480:push   ebp]; value=v7701
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v7696
    cx = v7697
    dx = v7698
    bx = v7699
    sp = v7700-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7700-0x4 [from 0x8048480:push   ebp]
    si = v7702
    di = v7703
    es = v7704
    cs = v7705
    ss = v7706
    ds = v7707
    fs = v7708
    gs = v7709
    cf = -v7827-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7711
    pf = -v7891-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7713
    af = v7895 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7715
    zf = v7894 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7893 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7718
    if = v7719
    df = v7720
    of = v7898 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7722
    iopl1 = v7723
    nt = v7724
    ?15 = v7725
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v7866+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7696
    cx = v7697
    dx = v7698
    bx = v7699
    sp = v7700-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7700-0x4 [from 0x8048480:push   ebp]
    si = v7702
    di = v7703
    es = v7704
    cs = v7705
    ss = v7706
    ds = v7707
    fs = v7708
    gs = v7709
    cf = -v7827-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7711
    pf = -v7891-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7713
    af = v7895 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7715
    zf = v7894 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7893 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7718
    if = v7719
    df = v7720
    of = v7898 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7722
    iopl1 = v7723
    nt = v7724
    ?15 = v7725
    memory = {
        size=4; addr=v7700-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v7696
    cx = v7697
    dx = v7698
    bx = v7699
    sp = v7700-0x10 [from 0x8048493:call   0x08048300]
    bp = v7700-0x4 [from 0x8048480:push   ebp]
    si = v7702
    di = v7703
    es = v7704
    cs = v7705
    ss = v7706
    ds = v7707
    fs = v7708
    gs = v7709
    cf = -v7827-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7711
    pf = -v7891-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7713
    af = v7895 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7715
    zf = v7894 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7893 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7718
    if = v7719
    df = v7720
    of = v7898 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7722
    iopl1 = v7723
    nt = v7724
    ?15 = v7725
    memory = {
        size=4; addr=v7700-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v7700-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v8155
    cx = v8156
    dx = v8157
    bx = v8158
    sp = v8159
    bp = v8160
    si = v8161
    di = v8162
    es = v8163
    cs = v8164
    ss = v8165
    ds = v8166
    fs = v8167
    gs = v8168
    cf = v8169
    ?1 = v8170
    pf = v8171
    ?3 = v8172
    af = v8173
    ?5 = v8174
    zf = v8175
    sf = v8176
    tf = v8177
    if = v8178
    df = v8179
    of = v8180
    iopl0 = v8181
    iopl1 = v8182
    nt = v8183
    ?15 = v8184
    memory = {
        size=4; addr=v8159; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v8155
    cx = v8156
    dx = v8157
    bx = v8158
    sp = v8159-0x4 [from 0x804849f:call   0x08048320]
    bp = v8160
    si = v8161
    di = v8162
    es = v8163
    cs = v8164
    ss = v8165
    ds = v8166
    fs = v8167
    gs = v8168
    cf = v8169
    ?1 = v8170
    pf = v8171
    ?3 = v8172
    af = v8173
    ?5 = v8174
    zf = v8175
    sf = v8176
    tf = v8177
    if = v8178
    df = v8179
    of = v8180
    iopl0 = v8181
    iopl1 = v8182
    nt = v8183
    ?15 = v8184
    memory = {
        size=4; addr=v8159; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v8159-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    ax = v8407
    cx = v8408
    dx = v8409
    bx = v8410
    sp = v8411-0x4 [from 0x80484b0:push   ebp]
    bp = v8412
    si = v8413
    di = v8414
    es = v8415
    cs = v8416
    ss = v8417
    ds = v8418
    fs = v8419
    gs = v8420
    cf = v8421
    ?1 = v8422
    pf = v8423
    ?3 = v8424
    af = v8425
    ?5 = v8426
    zf = v8427
    sf = v8428
    tf = v8429
    if = v8430
    df = v8431
    of = v8432
    iopl0 = v8433
    iopl1 = v8434
    nt = v8435
    ?15 = v8436
    memory = {
        size=4; addr=v8411-0x4 [from 0x80484b0:push   ebp]; value=v8412
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v8407
    cx = v8408
    dx = v8409
    bx = v8410
    sp = v8411-0x4 [from 0x80484b0:push   ebp]
    bp = v8411-0x4 [from 0x80484b0:push   ebp]
    si = v8413
    di = v8414
    es = v8415
    cs = v8416
    ss = v8417
    ds = v8418
    fs = v8419
    gs = v8420
    cf = v8421
    ?1 = v8422
    pf = v8423
    ?3 = v8424
    af = v8425
    ?5 = v8426
    zf = v8427
    sf = v8428
    tf = v8429
    if = v8430
    df = v8431
    of = v8432
    iopl0 = v8433
    iopl1 = v8434
    nt = v8435
    ?15 = v8436
    memory = {
        size=4; addr=v8411-0x4 [from 0x80484b0:push   ebp]; value=v8412
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v8407
    cx = v8408
    dx = v8409
    bx = v8410
    sp = v8411-0x8 [from 0x80484b3:push   edi]
    bp = v8411-0x4 [from 0x80484b0:push   ebp]
    si = v8413
    di = v8414
    es = v8415
    cs = v8416
    ss = v8417
    ds = v8418
    fs = v8419
    gs = v8420
    cf = v8421
    ?1 = v8422
    pf = v8423
    ?3 = v8424
    af = v8425
    ?5 = v8426
    zf = v8427
    sf = v8428
    tf = v8429
    if = v8430
    df = v8431
    of = v8432
    iopl0 = v8433
    iopl1 = v8434
    nt = v8435
    ?15 = v8436
    memory = {
        size=4; addr=v8411-0x8 [from 0x80484b3:push   edi]; value=v8414
        size=4; addr=v8411-0x4 [from 0x80484b0:push   ebp]; value=v8412
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v8407
    cx = v8408
    dx = v8409
    bx = v8410
    sp = v8411-0xc [from 0x80484b4:push   esi]
    bp = v8411-0x4 [from 0x80484b0:push   ebp]
    si = v8413
    di = v8414
    es = v8415
    cs = v8416
    ss = v8417
    ds = v8418
    fs = v8419
    gs = v8420
    cf = v8421
    ?1 = v8422
    pf = v8423
    ?3 = v8424
    af = v8425
    ?5 = v8426
    zf = v8427
    sf = v8428
    tf = v8429
    if = v8430
    df = v8431
    of = v8432
    iopl0 = v8433
    iopl1 = v8434
    nt = v8435
    ?15 = v8436
    memory = {
        size=4; addr=v8411-0xc [from 0x80484b4:push   esi]; value=v8413
        size=4; addr=v8411-0x8 [from 0x80484b3:push   edi]; value=v8414
        size=4; addr=v8411-0x4 [from 0x80484b0:push   ebp]; value=v8412
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v8407
    cx = v8408
    dx = v8409
    bx = v8410
    sp = v8411-0x10 [from 0x80484b5:push   ebx]
    bp = v8411-0x4 [from 0x80484b0:push   ebp]
    si = v8413
    di = v8414
    es = v8415
    cs = v8416
    ss = v8417
    ds = v8418
    fs = v8419
    gs = v8420
    cf = v8421
    ?1 = v8422
    pf = v8423
    ?3 = v8424
    af = v8425
    ?5 = v8426
    zf = v8427
    sf = v8428
    tf = v8429
    if = v8430
    df = v8431
    of = v8432
    iopl0 = v8433
    iopl1 = v8434
    nt = v8435
    ?15 = v8436
    memory = {
        size=4; addr=v8411-0x10 [from 0x80484b5:push   ebx]; value=v8410
        size=4; addr=v8411-0xc [from 0x80484b4:push   esi]; value=v8413
        size=4; addr=v8411-0x8 [from 0x80484b3:push   edi]; value=v8414
        size=4; addr=v8411-0x4 [from 0x80484b0:push   ebp]; value=v8412
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v8407
    cx = v8408
    dx = v8409
    bx = v8410
    sp = v8411-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v8411-0x4 [from 0x80484b0:push   ebp]
    si = v8413
    di = v8414
    es = v8415
    cs = v8416
    ss = v8417
    ds = v8418
    fs = v8419
    gs = v8420
    cf = -v8646-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8422
    pf = -v8640-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8424
    af = -v8644-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8426
    zf = v8643 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8642 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8429
    if = v8430
    df = v8431
    of = v8650 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8433
    iopl1 = v8434
    nt = v8435
    ?15 = v8436
    memory = {
        size=4; addr=v8411-0x10 [from 0x80484b5:push   ebx]; value=v8410
        size=4; addr=v8411-0xc [from 0x80484b4:push   esi]; value=v8413
        size=4; addr=v8411-0x8 [from 0x80484b3:push   edi]; value=v8414
        size=4; addr=v8411-0x4 [from 0x80484b0:push   ebp]; value=v8412
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v8407
    cx = v8408
    dx = v8409
    bx = v8410
    sp = v8411-0x20 [from 0x80484b9:call   0x080484be]
    bp = v8411-0x4 [from 0x80484b0:push   ebp]
    si = v8413
    di = v8414
    es = v8415
    cs = v8416
    ss = v8417
    ds = v8418
    fs = v8419
    gs = v8420
    cf = -v8646-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8422
    pf = -v8640-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8424
    af = -v8644-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8426
    zf = v8643 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8642 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8429
    if = v8430
    df = v8431
    of = v8650 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8433
    iopl1 = v8434
    nt = v8435
    ?15 = v8436
    memory = {
        size=4; addr=v8411-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v8411-0x10 [from 0x80484b5:push   ebx]; value=v8410
        size=4; addr=v8411-0xc [from 0x80484b4:push   esi]; value=v8413
        size=4; addr=v8411-0x8 [from 0x80484b3:push   edi]; value=v8414
        size=4; addr=v8411-0x4 [from 0x80484b0:push   ebp]; value=v8412
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v8779
    cx = v8780
    dx = v8781
    bx = v8813 [from 0x80484be:pop    ebx]
    sp = v8783+0x4 [from 0x80484be:pop    ebx]
    bp = v8784
    si = v8785
    di = v8786
    es = v8787
    cs = v8788
    ss = v8789
    ds = v8790
    fs = v8791
    gs = v8792
    cf = v8793
    ?1 = v8794
    pf = v8795
    ?3 = v8796
    af = v8797
    ?5 = v8798
    zf = v8799
    sf = v8800
    tf = v8801
    if = v8802
    df = v8803
    of = v8804
    iopl0 = v8805
    iopl1 = v8806
    nt = v8807
    ?15 = v8808
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v8779
    cx = v8780
    dx = v8781
    bx = v8813+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8783+0x4 [from 0x80484be:pop    ebx]
    bp = v8784
    si = v8785
    di = v8786
    es = v8787
    cs = v8788
    ss = v8789
    ds = v8790
    fs = v8791
    gs = v8792
    cf = v8875 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8794
    pf = -v8870-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8796
    af = v8874 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8798
    zf = v8873 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8872 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8801
    if = v8802
    df = v8803
    of = v8878 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8805
    iopl1 = v8806
    nt = v8807
    ?15 = v8808
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v8779
    cx = v8780
    dx = v8781
    bx = v8813+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8783 [from 0x80484c5:call   0x080482c8]
    bp = v8784
    si = v8785
    di = v8786
    es = v8787
    cs = v8788
    ss = v8789
    ds = v8790
    fs = v8791
    gs = v8792
    cf = v8875 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8794
    pf = -v8870-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8796
    af = v8874 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8798
    zf = v8873 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8872 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8801
    if = v8802
    df = v8803
    of = v8878 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8805
    iopl1 = v8806
    nt = v8807
    ?15 = v8808
    memory = {
        size=4; addr=v8783 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9100-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9098
    dx = v9099
    bx = v9100
    sp = v9101
    bp = v9102
    si = v9103
    di = v9104
    es = v9105
    cs = v9106
    ss = v9107
    ds = v9108
    fs = v9109
    gs = v9110
    cf = v9111
    ?1 = v9112
    pf = v9113
    ?3 = v9114
    af = v9115
    ?5 = v9116
    zf = v9117
    sf = v9118
    tf = v9119
    if = v9120
    df = v9121
    of = v9122
    iopl0 = v9123
    iopl1 = v9124
    nt = v9125
    ?15 = v9126
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9100-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9098
    dx = v9100-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9100
    sp = v9101
    bp = v9102
    si = v9103
    di = v9104
    es = v9105
    cs = v9106
    ss = v9107
    ds = v9108
    fs = v9109
    gs = v9110
    cf = v9111
    ?1 = v9112
    pf = v9113
    ?3 = v9114
    af = v9115
    ?5 = v9116
    zf = v9117
    sf = v9118
    tf = v9119
    if = v9120
    df = v9121
    of = v9122
    iopl0 = v9123
    iopl1 = v9124
    nt = v9125
    ?15 = v9126
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v18200 [from 0x80484d6:sub    eax, edx]
    cx = v9098
    dx = v9100-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9100
    sp = v9101
    bp = v9102
    si = v9103
    di = v9104
    es = v9105
    cs = v9106
    ss = v9107
    ds = v9108
    fs = v9109
    gs = v9110
    cf = -v9227-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v9112
    pf = -v9221-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v9114
    af = -v9225-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v9116
    zf = v9224 [from 0x80484d6:sub    eax, edx]
    sf = v9223 [from 0x80484d6:sub    eax, edx]
    tf = v9119
    if = v9120
    df = v9121
    of = v9231 [from 0x80484d6:sub    eax, edx]
    iopl0 = v9123
    iopl1 = v9124
    nt = v9125
    ?15 = v9126
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v9270 [from 0x80484d8:sar    eax, 0x02]
    cx = v9098
    dx = v9100-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9100
    sp = v9101
    bp = v9102
    si = v9103
    di = v9104
    es = v9105
    cs = v9106
    ss = v9107
    ds = v9108
    fs = v9109
    gs = v9110
    cf = v9273 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9112
    pf = -v9293-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9114
    af = <top>
    ?5 = v9116
    zf = v9298 [from 0x80484d8:sar    eax, 0x02]
    sf = v9296 [from 0x80484d8:sar    eax, 0x02]
    tf = v9119
    if = v9120
    df = v9121
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9123
    iopl1 = v9124
    nt = v9125
    ?15 = v9126
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v9270 [from 0x80484d8:sar    eax, 0x02]
    cx = v9098
    dx = v9100-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9100
    sp = v9101
    bp = v9102
    si = v9103
    di = v9104
    es = v9105
    cs = v9106
    ss = v9107
    ds = v9108
    fs = v9109
    gs = v9110
    cf = v9273 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9112
    pf = -v9293-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9114
    af = <top>
    ?5 = v9116
    zf = v9298 [from 0x80484d8:sar    eax, 0x02]
    sf = v9296 [from 0x80484d8:sar    eax, 0x02]
    tf = v9119
    if = v9120
    df = v9121
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9123
    iopl1 = v9124
    nt = v9125
    ?15 = v9126
    memory = {
        size=4; addr=v9102-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9270 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v9270 [from 0x80484d8:sar    eax, 0x02]
    cx = v9098
    dx = v9100-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9100
    sp = v9101
    bp = v9102
    si = v9103
    di = v9104
    es = v9105
    cs = v9106
    ss = v9107
    ds = v9108
    fs = v9109
    gs = v9110
    cf = v9273 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9112
    pf = -v9293-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9114
    af = <top>
    ?5 = v9116
    zf = v9298 [from 0x80484d8:sar    eax, 0x02]
    sf = v9296 [from 0x80484d8:sar    eax, 0x02]
    tf = v9119
    if = v9120
    df = v9121
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9123
    iopl1 = v9124
    nt = v9125
    ?15 = v9126
    memory = {
        size=4; addr=v9102-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9270 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v9370 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v9492
    cx = v9493
    dx = v9494
    bx = v9495
    sp = v9496+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v9497
    si = v9498
    di = v9499
    es = v9500
    cs = v9501
    ss = v9502
    ds = v9503
    fs = v9504
    gs = v9505
    cf = v9552 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9507
    pf = -v9547-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9509
    af = v9551 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9511
    zf = v9550 [from 0x80484e0:add    esp, 0x0c]
    sf = v9549 [from 0x80484e0:add    esp, 0x0c]
    tf = v9514
    if = v9515
    df = v9516
    of = v9555 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9518
    iopl1 = v9519
    nt = v9520
    ?15 = v9521
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v9492
    cx = v9493
    dx = v9494
    bx = v9591 [from 0x80484e3:pop    ebx]
    sp = v9496+0x10 [from 0x80484e3:pop    ebx]
    bp = v9497
    si = v9498
    di = v9499
    es = v9500
    cs = v9501
    ss = v9502
    ds = v9503
    fs = v9504
    gs = v9505
    cf = v9552 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9507
    pf = -v9547-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9509
    af = v9551 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9511
    zf = v9550 [from 0x80484e0:add    esp, 0x0c]
    sf = v9549 [from 0x80484e0:add    esp, 0x0c]
    tf = v9514
    if = v9515
    df = v9516
    of = v9555 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9518
    iopl1 = v9519
    nt = v9520
    ?15 = v9521
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v9492
    cx = v9493
    dx = v9494
    bx = v9591 [from 0x80484e3:pop    ebx]
    sp = v9496+0x14 [from 0x80484e4:pop    esi]
    bp = v9497
    si = v9627 [from 0x80484e4:pop    esi]
    di = v9499
    es = v9500
    cs = v9501
    ss = v9502
    ds = v9503
    fs = v9504
    gs = v9505
    cf = v9552 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9507
    pf = -v9547-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9509
    af = v9551 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9511
    zf = v9550 [from 0x80484e0:add    esp, 0x0c]
    sf = v9549 [from 0x80484e0:add    esp, 0x0c]
    tf = v9514
    if = v9515
    df = v9516
    of = v9555 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9518
    iopl1 = v9519
    nt = v9520
    ?15 = v9521
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v9492
    cx = v9493
    dx = v9494
    bx = v9591 [from 0x80484e3:pop    ebx]
    sp = v9496+0x18 [from 0x80484e5:pop    edi]
    bp = v9497
    si = v9627 [from 0x80484e4:pop    esi]
    di = v9663 [from 0x80484e5:pop    edi]
    es = v9500
    cs = v9501
    ss = v9502
    ds = v9503
    fs = v9504
    gs = v9505
    cf = v9552 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9507
    pf = -v9547-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9509
    af = v9551 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9511
    zf = v9550 [from 0x80484e0:add    esp, 0x0c]
    sf = v9549 [from 0x80484e0:add    esp, 0x0c]
    tf = v9514
    if = v9515
    df = v9516
    of = v9555 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9518
    iopl1 = v9519
    nt = v9520
    ?15 = v9521
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v9492
    cx = v9493
    dx = v9494
    bx = v9591 [from 0x80484e3:pop    ebx]
    sp = v9496+0x1c [from 0x80484e6:pop    ebp]
    bp = v9699 [from 0x80484e6:pop    ebp]
    si = v9627 [from 0x80484e4:pop    esi]
    di = v9663 [from 0x80484e5:pop    edi]
    es = v9500
    cs = v9501
    ss = v9502
    ds = v9503
    fs = v9504
    gs = v9505
    cf = v9552 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9507
    pf = -v9547-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9509
    af = v9551 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9511
    zf = v9550 [from 0x80484e0:add    esp, 0x0c]
    sf = v9549 [from 0x80484e0:add    esp, 0x0c]
    tf = v9514
    if = v9515
    df = v9516
    of = v9555 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9518
    iopl1 = v9519
    nt = v9520
    ?15 = v9521
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v9492
    cx = v9493
    dx = v9494
    bx = v9591 [from 0x80484e3:pop    ebx]
    sp = v9496+0x20 [from 0x80484e7:ret    ]
    bp = v9699 [from 0x80484e6:pop    ebp]
    si = v9627 [from 0x80484e4:pop    esi]
    di = v9663 [from 0x80484e5:pop    edi]
    es = v9500
    cs = v9501
    ss = v9502
    ds = v9503
    fs = v9504
    gs = v9505
    cf = v9552 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9507
    pf = -v9547-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9509
    af = v9551 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9511
    zf = v9550 [from 0x80484e0:add    esp, 0x0c]
    sf = v9549 [from 0x80484e0:add    esp, 0x0c]
    tf = v9514
    if = v9515
    df = v9516
    of = v9555 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9518
    iopl1 = v9519
    nt = v9520
    ?15 = v9521
    memory = {}
    ip = v9737 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v9799
    cx = v9800
    dx = v9801
    bx = v9802
    sp = v9803-0x4 [from 0x8048520:push   ebp]
    bp = v9804
    si = v9805
    di = v9806
    es = v9807
    cs = v9808
    ss = v9809
    ds = v9810
    fs = v9811
    gs = v9812
    cf = v9813
    ?1 = v9814
    pf = v9815
    ?3 = v9816
    af = v9817
    ?5 = v9818
    zf = v9819
    sf = v9820
    tf = v9821
    if = v9822
    df = v9823
    of = v9824
    iopl0 = v9825
    iopl1 = v9826
    nt = v9827
    ?15 = v9828
    memory = {
        size=4; addr=v9803-0x4 [from 0x8048520:push   ebp]; value=v9804
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v9799
    cx = v9800
    dx = v9801
    bx = v9802
    sp = v9803-0x4 [from 0x8048520:push   ebp]
    bp = v9803-0x4 [from 0x8048520:push   ebp]
    si = v9805
    di = v9806
    es = v9807
    cs = v9808
    ss = v9809
    ds = v9810
    fs = v9811
    gs = v9812
    cf = v9813
    ?1 = v9814
    pf = v9815
    ?3 = v9816
    af = v9817
    ?5 = v9818
    zf = v9819
    sf = v9820
    tf = v9821
    if = v9822
    df = v9823
    of = v9824
    iopl0 = v9825
    iopl1 = v9826
    nt = v9827
    ?15 = v9828
    memory = {
        size=4; addr=v9803-0x4 [from 0x8048520:push   ebp]; value=v9804
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v9799
    cx = v9800
    dx = v9801
    bx = v9802
    sp = v9803-0x8 [from 0x8048523:push   edi]
    bp = v9803-0x4 [from 0x8048520:push   ebp]
    si = v9805
    di = v9806
    es = v9807
    cs = v9808
    ss = v9809
    ds = v9810
    fs = v9811
    gs = v9812
    cf = v9813
    ?1 = v9814
    pf = v9815
    ?3 = v9816
    af = v9817
    ?5 = v9818
    zf = v9819
    sf = v9820
    tf = v9821
    if = v9822
    df = v9823
    of = v9824
    iopl0 = v9825
    iopl1 = v9826
    nt = v9827
    ?15 = v9828
    memory = {
        size=4; addr=v9803-0x8 [from 0x8048523:push   edi]; value=v9806
        size=4; addr=v9803-0x4 [from 0x8048520:push   ebp]; value=v9804
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v9799
    cx = v9800
    dx = v9801
    bx = v9802
    sp = v9803-0xc [from 0x8048524:push   esi]
    bp = v9803-0x4 [from 0x8048520:push   ebp]
    si = v9805
    di = v9806
    es = v9807
    cs = v9808
    ss = v9809
    ds = v9810
    fs = v9811
    gs = v9812
    cf = v9813
    ?1 = v9814
    pf = v9815
    ?3 = v9816
    af = v9817
    ?5 = v9818
    zf = v9819
    sf = v9820
    tf = v9821
    if = v9822
    df = v9823
    of = v9824
    iopl0 = v9825
    iopl1 = v9826
    nt = v9827
    ?15 = v9828
    memory = {
        size=4; addr=v9803-0xc [from 0x8048524:push   esi]; value=v9805
        size=4; addr=v9803-0x8 [from 0x8048523:push   edi]; value=v9806
        size=4; addr=v9803-0x4 [from 0x8048520:push   ebp]; value=v9804
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v9799
    cx = v9800
    dx = v9801
    bx = v9802
    sp = v9803-0x10 [from 0x8048525:push   ebx]
    bp = v9803-0x4 [from 0x8048520:push   ebp]
    si = v9805
    di = v9806
    es = v9807
    cs = v9808
    ss = v9809
    ds = v9810
    fs = v9811
    gs = v9812
    cf = v9813
    ?1 = v9814
    pf = v9815
    ?3 = v9816
    af = v9817
    ?5 = v9818
    zf = v9819
    sf = v9820
    tf = v9821
    if = v9822
    df = v9823
    of = v9824
    iopl0 = v9825
    iopl1 = v9826
    nt = v9827
    ?15 = v9828
    memory = {
        size=4; addr=v9803-0x10 [from 0x8048525:push   ebx]; value=v9802
        size=4; addr=v9803-0xc [from 0x8048524:push   esi]; value=v9805
        size=4; addr=v9803-0x8 [from 0x8048523:push   edi]; value=v9806
        size=4; addr=v9803-0x4 [from 0x8048520:push   ebp]; value=v9804
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v9799
    cx = v9800
    dx = v9801
    bx = v9802
    sp = v9803-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v9803-0x4 [from 0x8048520:push   ebp]
    si = v9805
    di = v9806
    es = v9807
    cs = v9808
    ss = v9809
    ds = v9810
    fs = v9811
    gs = v9812
    cf = -v10038-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9814
    pf = -v10032-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9816
    af = -v10036-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9818
    zf = v10035 [from 0x8048526:sub    esp, 0x0c]
    sf = v10034 [from 0x8048526:sub    esp, 0x0c]
    tf = v9821
    if = v9822
    df = v9823
    of = v10042 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9825
    iopl1 = v9826
    nt = v9827
    ?15 = v9828
    memory = {
        size=4; addr=v9803-0x10 [from 0x8048525:push   ebx]; value=v9802
        size=4; addr=v9803-0xc [from 0x8048524:push   esi]; value=v9805
        size=4; addr=v9803-0x8 [from 0x8048523:push   edi]; value=v9806
        size=4; addr=v9803-0x4 [from 0x8048520:push   ebp]; value=v9804
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v9799
    cx = v9800
    dx = v9801
    bx = v9802
    sp = v9803-0x20 [from 0x8048529:call   0x0804852e]
    bp = v9803-0x4 [from 0x8048520:push   ebp]
    si = v9805
    di = v9806
    es = v9807
    cs = v9808
    ss = v9809
    ds = v9810
    fs = v9811
    gs = v9812
    cf = -v10038-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9814
    pf = -v10032-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9816
    af = -v10036-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9818
    zf = v10035 [from 0x8048526:sub    esp, 0x0c]
    sf = v10034 [from 0x8048526:sub    esp, 0x0c]
    tf = v9821
    if = v9822
    df = v9823
    of = v10042 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9825
    iopl1 = v9826
    nt = v9827
    ?15 = v9828
    memory = {
        size=4; addr=v9803-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v9803-0x10 [from 0x8048525:push   ebx]; value=v9802
        size=4; addr=v9803-0xc [from 0x8048524:push   esi]; value=v9805
        size=4; addr=v9803-0x8 [from 0x8048523:push   edi]; value=v9806
        size=4; addr=v9803-0x4 [from 0x8048520:push   ebp]; value=v9804
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v10171
    cx = v10172
    dx = v10173
    bx = v10205 [from 0x804852e:pop    ebx]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = v10185
    ?1 = v10186
    pf = v10187
    ?3 = v10188
    af = v10189
    ?5 = v10190
    zf = v10191
    sf = v10192
    tf = v10193
    if = v10194
    df = v10195
    of = v10196
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v10171
    cx = v10172
    dx = v10173
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = v10267 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10186
    pf = -v10262-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10188
    af = v10266 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10190
    zf = v10265 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10264 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10193
    if = v10194
    df = v10195
    of = v10270 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10205+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v10172
    dx = v10173
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = v10267 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10186
    pf = -v10262-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10188
    af = v10266 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10190
    zf = v10265 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10264 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10193
    if = v10194
    df = v10195
    of = v10270 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10205+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v10172
    dx = v10205+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = v10267 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10186
    pf = -v10262-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10188
    af = v10266 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10190
    zf = v10265 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10264 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10193
    if = v10194
    df = v10195
    of = v10270 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v20410 [from 0x8048541:sub    eax, edx]
    cx = v10172
    dx = v10205+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = -v10402-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v10186
    pf = -v10396-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v10188
    af = -v10400-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v10190
    zf = v10399 [from 0x8048541:sub    eax, edx]
    sf = v10398 [from 0x8048541:sub    eax, edx]
    tf = v10193
    if = v10194
    df = v10195
    of = v10406 [from 0x8048541:sub    eax, edx]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v10445 [from 0x8048543:sar    eax, 0x02]
    cx = v10172
    dx = v10205+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = v10448 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10186
    pf = -v10468-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v10188
    af = <top>
    ?5 = v10190
    zf = v10473 [from 0x8048543:sar    eax, 0x02]
    sf = v10471 [from 0x8048543:sar    eax, 0x02]
    tf = v10193
    if = v10194
    df = v10195
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v10445 [from 0x8048543:sar    eax, 0x02]
    cx = v10172
    dx = v10205+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = v10448 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10186
    pf = -v10468-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v10188
    af = <top>
    ?5 = v10190
    zf = v10473 [from 0x8048543:sar    eax, 0x02]
    sf = v10471 [from 0x8048543:sar    eax, 0x02]
    tf = v10193
    if = v10194
    df = v10195
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {
        size=4; addr=v10176-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10445 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v10445-0x1 [from 0x8048549:dec    eax]
    cx = v10172
    dx = v10205+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = v10448 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10186
    pf = -v10567-0x1 [from 0x8048549:dec    eax]
    ?3 = v10188
    af = -v10571-0x1 [from 0x8048549:dec    eax]
    ?5 = v10190
    zf = v10570 [from 0x8048549:dec    eax]
    sf = v10569 [from 0x8048549:dec    eax]
    tf = v10193
    if = v10194
    df = v10195
    of = v10575 [from 0x8048549:dec    eax]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {
        size=4; addr=v10176-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10445 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v10445-0x1 [from 0x8048549:dec    eax]
    cx = v10172
    dx = v10205+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = -v10640-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v10186
    pf = -v10634-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v10188
    af = -v10638-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v10190
    zf = v10637 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10636 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v10193
    if = v10194
    df = v10195
    of = v10644 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {
        size=4; addr=v10176-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10445 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v10445-0x1 [from 0x8048549:dec    eax]
    cx = v10172
    dx = v10205+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10205+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10175+0x4 [from 0x804852e:pop    ebx]
    bp = v10176
    si = v10177
    di = v10178
    es = v10179
    cs = v10180
    ss = v10181
    ds = v10182
    fs = v10183
    gs = v10184
    cf = -v10640-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v10186
    pf = -v10634-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v10188
    af = -v10638-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v10190
    zf = v10637 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10636 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v10193
    if = v10194
    df = v10195
    of = v10644 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v10197
    iopl1 = v10198
    nt = v10199
    ?15 = v10200
    memory = {
        size=4; addr=v10176-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10445 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v10678 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax = v10800
    cx = v10801
    dx = v10802
    bx = v10803
    sp = v10804
    bp = v10805
    si = v10834 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v10807
    es = v10808
    cs = v10809
    ss = v10810
    ds = v10811
    fs = v10812
    gs = v10813
    cf = v10814
    ?1 = v10815
    pf = v10816
    ?3 = v10817
    af = v10818
    ?5 = v10819
    zf = v10820
    sf = v10821
    tf = v10822
    if = v10823
    df = v10824
    of = v10825
    iopl0 = v10826
    iopl1 = v10827
    nt = v10828
    ?15 = v10829
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]
0x8048552:xor    edi, edi
    ax = v10800
    cx = v10801
    dx = v10802
    bx = v10803
    sp = v10804
    bp = v10805
    si = v10834 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v10808
    cs = v10809
    ss = v10810
    ds = v10811
    fs = v10812
    gs = v10813
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10815
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10817
    af = <top>
    ?5 = v10819
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10822
    if = v10823
    df = v10824
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10826
    iopl1 = v10827
    nt = v10828
    ?15 = v10829
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]
0x8048554:lea    esi, [esi + 0x00000000]
    ax = v10800
    cx = v10801
    dx = v10802
    bx = v10803
    sp = v10804
    bp = v10805
    si = v10834 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v10808
    cs = v10809
    ss = v10810
    ds = v10811
    fs = v10812
    gs = v10813
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10815
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10817
    af = <top>
    ?5 = v10819
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10822
    if = v10823
    df = v10824
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10826
    iopl1 = v10827
    nt = v10828
    ?15 = v10829
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]
0x804855a:lea    edi, [edi + 0x00000000]
    ax = v10800
    cx = v10801
    dx = v10802
    bx = v10803
    sp = v10804
    bp = v10805
    si = v10834 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v10808
    cs = v10809
    ss = v10810
    ds = v10811
    fs = v10812
    gs = v10813
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10815
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10817
    af = <top>
    ?5 = v10819
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10822
    if = v10823
    df = v10824
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10826
    iopl1 = v10827
    nt = v10828
    ?15 = v10829
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]
0x8048560:call   DWORD PTR ds:[esi]
    ax = v10800
    cx = v10801
    dx = v10802
    bx = v10803
    sp = v10804-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v10805
    si = v10834 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v10808
    cs = v10809
    ss = v10810
    ds = v10811
    fs = v10812
    gs = v10813
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10815
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10817
    af = <top>
    ?5 = v10819
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10822
    if = v10823
    df = v10824
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10826
    iopl1 = v10827
    nt = v10828
    ?15 = v10829
    memory = {
        size=4; addr=v10804-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v10995 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax = v11147
    cx = v11148
    dx = v11149
    bx = v11150
    sp = v11151
    bp = v11152
    si = v11153
    di = v11154+0x1 [from 0x8048562:inc    edi]
    es = v11155
    cs = v11156
    ss = v11157
    ds = v11158
    fs = v11159
    gs = v11160
    cf = v11161
    ?1 = v11162
    pf = -v11202-0x1 [from 0x8048562:inc    edi]
    ?3 = v11164
    af = v11206 [from 0x8048562:inc    edi]
    ?5 = v11166
    zf = v11205 [from 0x8048562:inc    edi]
    sf = v11204 [from 0x8048562:inc    edi]
    tf = v11169
    if = v11170
    df = v11171
    of = v11209 [from 0x8048562:inc    edi]
    iopl0 = v11173
    iopl1 = v11174
    nt = v11175
    ?15 = v11176
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]
0x8048563:sub    esi, 0x04
    ax = v11147
    cx = v11148
    dx = v11149
    bx = v11150
    sp = v11151
    bp = v11152
    si = v11153-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v11154+0x1 [from 0x8048562:inc    edi]
    es = v11155
    cs = v11156
    ss = v11157
    ds = v11158
    fs = v11159
    gs = v11160
    cf = -v11274-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v11162
    pf = -v11268-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v11164
    af = -v11272-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v11166
    zf = v11271 [from 0x8048563:sub    esi, 0x04]
    sf = v11270 [from 0x8048563:sub    esi, 0x04]
    tf = v11169
    if = v11170
    df = v11171
    of = v11278 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v11173
    iopl1 = v11174
    nt = v11175
    ?15 = v11176
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v11147
    cx = v11148
    dx = v11149
    bx = v11150
    sp = v11151
    bp = v11152
    si = v11153-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v11154+0x1 [from 0x8048562:inc    edi]
    es = v11155
    cs = v11156
    ss = v11157
    ds = v11158
    fs = v11159
    gs = v11160
    cf = -v11346-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v11162
    pf = -v11340-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v11164
    af = -v11344-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v11166
    zf = v11343 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v11342 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v11169
    if = v11170
    df = v11171
    of = v11350 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v11173
    iopl1 = v11174
    nt = v11175
    ?15 = v11176
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
0x8048569:jne    0x08048560
    ax = v11147
    cx = v11148
    dx = v11149
    bx = v11150
    sp = v11151
    bp = v11152
    si = v11153-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v11154+0x1 [from 0x8048562:inc    edi]
    es = v11155
    cs = v11156
    ss = v11157
    ds = v11158
    fs = v11159
    gs = v11160
    cf = -v11346-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v11162
    pf = -v11340-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v11164
    af = -v11344-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v11166
    zf = v11343 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v11342 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v11169
    if = v11170
    df = v11171
    of = v11350 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v11173
    iopl1 = v11174
    nt = v11175
    ?15 = v11176
    memory = {}
    ip = v11385 [from 0x8048569:jne    0x08048560]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v11507
    cx = v11508
    dx = v11509
    bx = v11510
    sp = v11511-0x4 [from 0x804856b:call   0x080485b0]
    bp = v11512
    si = v11513
    di = v11514
    es = v11515
    cs = v11516
    ss = v11517
    ds = v11518
    fs = v11519
    gs = v11520
    cf = v11521
    ?1 = v11522
    pf = v11523
    ?3 = v11524
    af = v11525
    ?5 = v11526
    zf = v11527
    sf = v11528
    tf = v11529
    if = v11530
    df = v11531
    of = v11532
    iopl0 = v11533
    iopl1 = v11534
    nt = v11535
    ?15 = v11536
    memory = {
        size=4; addr=v11511-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v11724
    cx = v11725
    dx = v11726
    bx = v11727
    sp = v11728+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v11729
    si = v11730
    di = v11731
    es = v11732
    cs = v11733
    ss = v11734
    ds = v11735
    fs = v11736
    gs = v11737
    cf = v11784 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11739
    pf = -v11779-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11741
    af = v11783 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11743
    zf = v11782 [from 0x8048570:add    esp, 0x0c]
    sf = v11781 [from 0x8048570:add    esp, 0x0c]
    tf = v11746
    if = v11747
    df = v11748
    of = v11787 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11750
    iopl1 = v11751
    nt = v11752
    ?15 = v11753
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v11724
    cx = v11725
    dx = v11726
    bx = v11823 [from 0x8048573:pop    ebx]
    sp = v11728+0x10 [from 0x8048573:pop    ebx]
    bp = v11729
    si = v11730
    di = v11731
    es = v11732
    cs = v11733
    ss = v11734
    ds = v11735
    fs = v11736
    gs = v11737
    cf = v11784 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11739
    pf = -v11779-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11741
    af = v11783 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11743
    zf = v11782 [from 0x8048570:add    esp, 0x0c]
    sf = v11781 [from 0x8048570:add    esp, 0x0c]
    tf = v11746
    if = v11747
    df = v11748
    of = v11787 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11750
    iopl1 = v11751
    nt = v11752
    ?15 = v11753
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v11724
    cx = v11725
    dx = v11726
    bx = v11823 [from 0x8048573:pop    ebx]
    sp = v11728+0x14 [from 0x8048574:pop    esi]
    bp = v11729
    si = v11859 [from 0x8048574:pop    esi]
    di = v11731
    es = v11732
    cs = v11733
    ss = v11734
    ds = v11735
    fs = v11736
    gs = v11737
    cf = v11784 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11739
    pf = -v11779-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11741
    af = v11783 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11743
    zf = v11782 [from 0x8048570:add    esp, 0x0c]
    sf = v11781 [from 0x8048570:add    esp, 0x0c]
    tf = v11746
    if = v11747
    df = v11748
    of = v11787 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11750
    iopl1 = v11751
    nt = v11752
    ?15 = v11753
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v11724
    cx = v11725
    dx = v11726
    bx = v11823 [from 0x8048573:pop    ebx]
    sp = v11728+0x18 [from 0x8048575:pop    edi]
    bp = v11729
    si = v11859 [from 0x8048574:pop    esi]
    di = v11895 [from 0x8048575:pop    edi]
    es = v11732
    cs = v11733
    ss = v11734
    ds = v11735
    fs = v11736
    gs = v11737
    cf = v11784 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11739
    pf = -v11779-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11741
    af = v11783 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11743
    zf = v11782 [from 0x8048570:add    esp, 0x0c]
    sf = v11781 [from 0x8048570:add    esp, 0x0c]
    tf = v11746
    if = v11747
    df = v11748
    of = v11787 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11750
    iopl1 = v11751
    nt = v11752
    ?15 = v11753
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v11724
    cx = v11725
    dx = v11726
    bx = v11823 [from 0x8048573:pop    ebx]
    sp = v11728+0x1c [from 0x8048576:pop    ebp]
    bp = v11931 [from 0x8048576:pop    ebp]
    si = v11859 [from 0x8048574:pop    esi]
    di = v11895 [from 0x8048575:pop    edi]
    es = v11732
    cs = v11733
    ss = v11734
    ds = v11735
    fs = v11736
    gs = v11737
    cf = v11784 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11739
    pf = -v11779-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11741
    af = v11783 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11743
    zf = v11782 [from 0x8048570:add    esp, 0x0c]
    sf = v11781 [from 0x8048570:add    esp, 0x0c]
    tf = v11746
    if = v11747
    df = v11748
    of = v11787 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11750
    iopl1 = v11751
    nt = v11752
    ?15 = v11753
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v11724
    cx = v11725
    dx = v11726
    bx = v11823 [from 0x8048573:pop    ebx]
    sp = v11728+0x20 [from 0x8048577:ret    ]
    bp = v11931 [from 0x8048576:pop    ebp]
    si = v11859 [from 0x8048574:pop    esi]
    di = v11895 [from 0x8048575:pop    edi]
    es = v11732
    cs = v11733
    ss = v11734
    ds = v11735
    fs = v11736
    gs = v11737
    cf = v11784 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11739
    pf = -v11779-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11741
    af = v11783 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11743
    zf = v11782 [from 0x8048570:add    esp, 0x0c]
    sf = v11781 [from 0x8048570:add    esp, 0x0c]
    tf = v11746
    if = v11747
    df = v11748
    of = v11787 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11750
    iopl1 = v11751
    nt = v11752
    ?15 = v11753
    memory = {}
    ip = v11969 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    ax = v12031
    cx = v12032
    dx = v12033
    bx = v12034
    sp = v12035-0x4 [from 0x8048580:push   ebp]
    bp = v12036
    si = v12037
    di = v12038
    es = v12039
    cs = v12040
    ss = v12041
    ds = v12042
    fs = v12043
    gs = v12044
    cf = v12045
    ?1 = v12046
    pf = v12047
    ?3 = v12048
    af = v12049
    ?5 = v12050
    zf = v12051
    sf = v12052
    tf = v12053
    if = v12054
    df = v12055
    of = v12056
    iopl0 = v12057
    iopl1 = v12058
    nt = v12059
    ?15 = v12060
    memory = {
        size=4; addr=v12035-0x4 [from 0x8048580:push   ebp]; value=v12036
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v12031
    cx = v12032
    dx = v12033
    bx = v12034
    sp = v12035-0x4 [from 0x8048580:push   ebp]
    bp = v12035-0x4 [from 0x8048580:push   ebp]
    si = v12037
    di = v12038
    es = v12039
    cs = v12040
    ss = v12041
    ds = v12042
    fs = v12043
    gs = v12044
    cf = v12045
    ?1 = v12046
    pf = v12047
    ?3 = v12048
    af = v12049
    ?5 = v12050
    zf = v12051
    sf = v12052
    tf = v12053
    if = v12054
    df = v12055
    of = v12056
    iopl0 = v12057
    iopl1 = v12058
    nt = v12059
    ?15 = v12060
    memory = {
        size=4; addr=v12035-0x4 [from 0x8048580:push   ebp]; value=v12036
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v12031
    cx = v12032
    dx = v12033
    bx = v12034
    sp = v12035-0x8 [from 0x8048583:push   ebx]
    bp = v12035-0x4 [from 0x8048580:push   ebp]
    si = v12037
    di = v12038
    es = v12039
    cs = v12040
    ss = v12041
    ds = v12042
    fs = v12043
    gs = v12044
    cf = v12045
    ?1 = v12046
    pf = v12047
    ?3 = v12048
    af = v12049
    ?5 = v12050
    zf = v12051
    sf = v12052
    tf = v12053
    if = v12054
    df = v12055
    of = v12056
    iopl0 = v12057
    iopl1 = v12058
    nt = v12059
    ?15 = v12060
    memory = {
        size=4; addr=v12035-0x8 [from 0x8048583:push   ebx]; value=v12034
        size=4; addr=v12035-0x4 [from 0x8048580:push   ebp]; value=v12036
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v12031
    cx = v12032
    dx = v12033
    bx = v12034
    sp = v12035-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12035-0x4 [from 0x8048580:push   ebp]
    si = v12037
    di = v12038
    es = v12039
    cs = v12040
    ss = v12041
    ds = v12042
    fs = v12043
    gs = v12044
    cf = -v12198-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12046
    pf = -v12192-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12048
    af = -v12196-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12050
    zf = v12195 [from 0x8048584:sub    esp, 0x04]
    sf = v12194 [from 0x8048584:sub    esp, 0x04]
    tf = v12053
    if = v12054
    df = v12055
    of = v12202 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12057
    iopl1 = v12058
    nt = v12059
    ?15 = v12060
    memory = {
        size=4; addr=v12035-0x8 [from 0x8048583:push   ebx]; value=v12034
        size=4; addr=v12035-0x4 [from 0x8048580:push   ebp]; value=v12036
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v12031
    cx = v12032
    dx = v12033
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v12035-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12035-0x4 [from 0x8048580:push   ebp]
    si = v12037
    di = v12038
    es = v12039
    cs = v12040
    ss = v12041
    ds = v12042
    fs = v12043
    gs = v12044
    cf = -v12198-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12046
    pf = -v12192-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12048
    af = -v12196-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12050
    zf = v12195 [from 0x8048584:sub    esp, 0x04]
    sf = v12194 [from 0x8048584:sub    esp, 0x04]
    tf = v12053
    if = v12054
    df = v12055
    of = v12202 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12057
    iopl1 = v12058
    nt = v12059
    ?15 = v12060
    memory = {
        size=4; addr=v12035-0x8 [from 0x8048583:push   ebx]; value=v12034
        size=4; addr=v12035-0x4 [from 0x8048580:push   ebp]; value=v12036
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v12270 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12032
    dx = v12033
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v12035-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12035-0x4 [from 0x8048580:push   ebp]
    si = v12037
    di = v12038
    es = v12039
    cs = v12040
    ss = v12041
    ds = v12042
    fs = v12043
    gs = v12044
    cf = -v12198-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12046
    pf = -v12192-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12048
    af = -v12196-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12050
    zf = v12195 [from 0x8048584:sub    esp, 0x04]
    sf = v12194 [from 0x8048584:sub    esp, 0x04]
    tf = v12053
    if = v12054
    df = v12055
    of = v12202 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12057
    iopl1 = v12058
    nt = v12059
    ?15 = v12060
    memory = {
        size=4; addr=v12035-0x8 [from 0x8048583:push   ebx]; value=v12034
        size=4; addr=v12035-0x4 [from 0x8048580:push   ebp]; value=v12036
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v12270 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12032
    dx = v12033
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v12035-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12035-0x4 [from 0x8048580:push   ebp]
    si = v12037
    di = v12038
    es = v12039
    cs = v12040
    ss = v12041
    ds = v12042
    fs = v12043
    gs = v12044
    cf = -v12335-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v12046
    pf = -v12329-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v12048
    af = -v12333-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v12050
    zf = v12332 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v12331 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v12053
    if = v12054
    df = v12055
    of = v12339 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v12057
    iopl1 = v12058
    nt = v12059
    ?15 = v12060
    memory = {
        size=4; addr=v12035-0x8 [from 0x8048583:push   ebx]; value=v12034
        size=4; addr=v12035-0x4 [from 0x8048580:push   ebp]; value=v12036
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v12270 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12032
    dx = v12033
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v12035-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12035-0x4 [from 0x8048580:push   ebp]
    si = v12037
    di = v12038
    es = v12039
    cs = v12040
    ss = v12041
    ds = v12042
    fs = v12043
    gs = v12044
    cf = -v12335-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v12046
    pf = -v12329-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v12048
    af = -v12333-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v12050
    zf = v12332 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v12331 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v12053
    if = v12054
    df = v12055
    of = v12339 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v12057
    iopl1 = v12058
    nt = v12059
    ?15 = v12060
    memory = {
        size=4; addr=v12035-0x8 [from 0x8048583:push   ebx]; value=v12034
        size=4; addr=v12035-0x4 [from 0x8048580:push   ebp]; value=v12036
    }
    ip = v12373 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v12495
    cx = v12496
    dx = v12497
    bx = v12498
    sp = v12499
    bp = v12500
    si = v12501 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12502
    es = v12503
    cs = v12504
    ss = v12505
    ds = v12506
    fs = v12507
    gs = v12508
    cf = v12509
    ?1 = v12510
    pf = v12511
    ?3 = v12512
    af = v12513
    ?5 = v12514
    zf = v12515
    sf = v12516
    tf = v12517
    if = v12518
    df = v12519
    of = v12520
    iopl0 = v12521
    iopl1 = v12522
    nt = v12523
    ?15 = v12524
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v12495
    cx = v12496
    dx = v12497
    bx = v12498
    sp = v12499
    bp = v12500
    si = v12501 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12502 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12503
    cs = v12504
    ss = v12505
    ds = v12506
    fs = v12507
    gs = v12508
    cf = v12509
    ?1 = v12510
    pf = v12511
    ?3 = v12512
    af = v12513
    ?5 = v12514
    zf = v12515
    sf = v12516
    tf = v12517
    if = v12518
    df = v12519
    of = v12520
    iopl0 = v12521
    iopl1 = v12522
    nt = v12523
    ?15 = v12524
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v12495
    cx = v12496
    dx = v12497
    bx = v12498-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v12499
    bp = v12500
    si = v12501 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12502 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12503
    cs = v12504
    ss = v12505
    ds = v12506
    fs = v12507
    gs = v12508
    cf = -v12626-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v12510
    pf = -v12620-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v12512
    af = -v12624-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v12514
    zf = v12623 [from 0x80485a0:sub    ebx, 0x04]
    sf = v12622 [from 0x80485a0:sub    ebx, 0x04]
    tf = v12517
    if = v12518
    df = v12519
    of = v12630 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v12521
    iopl1 = v12522
    nt = v12523
    ?15 = v12524
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v12495
    cx = v12496
    dx = v12497
    bx = v12498-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v12499-0x4 [from 0x80485a3:call   eax]
    bp = v12500
    si = v12501 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12502 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12503
    cs = v12504
    ss = v12505
    ds = v12506
    fs = v12507
    gs = v12508
    cf = -v12626-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v12510
    pf = -v12620-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v12512
    af = -v12624-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v12514
    zf = v12623 [from 0x80485a0:sub    ebx, 0x04]
    sf = v12622 [from 0x80485a0:sub    ebx, 0x04]
    tf = v12517
    if = v12518
    df = v12519
    of = v12630 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v12521
    iopl1 = v12522
    nt = v12523
    ?15 = v12524
    memory = {
        size=4; addr=v12499-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v12495
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v12850 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12819
    dx = v12820
    bx = v12821
    sp = v12822
    bp = v12823
    si = v12824
    di = v12825
    es = v12826
    cs = v12827
    ss = v12828
    ds = v12829
    fs = v12830
    gs = v12831
    cf = v12832
    ?1 = v12833
    pf = v12834
    ?3 = v12835
    af = v12836
    ?5 = v12837
    zf = v12838
    sf = v12839
    tf = v12840
    if = v12841
    df = v12842
    of = v12843
    iopl0 = v12844
    iopl1 = v12845
    nt = v12846
    ?15 = v12847
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v12850 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12819
    dx = v12820
    bx = v12821
    sp = v12822
    bp = v12823
    si = v12824
    di = v12825
    es = v12826
    cs = v12827
    ss = v12828
    ds = v12829
    fs = v12830
    gs = v12831
    cf = -v12915-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v12833
    pf = -v12909-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v12835
    af = -v12913-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v12837
    zf = v12912 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v12911 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v12840
    if = v12841
    df = v12842
    of = v12919 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v12844
    iopl1 = v12845
    nt = v12846
    ?15 = v12847
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v12850 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12819
    dx = v12820
    bx = v12821
    sp = v12822
    bp = v12823
    si = v12824
    di = v12825
    es = v12826
    cs = v12827
    ss = v12828
    ds = v12829
    fs = v12830
    gs = v12831
    cf = -v12915-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v12833
    pf = -v12909-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v12835
    af = -v12913-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v12837
    zf = v12912 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v12911 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v12840
    if = v12841
    df = v12842
    of = v12919 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v12844
    iopl1 = v12845
    nt = v12846
    ?15 = v12847
    memory = {}
    ip = v12954 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v13110 [from 0x80485ac:pop    eax]
    cx = v13077
    dx = v13078
    bx = v13079
    sp = v13080+0x4 [from 0x80485ac:pop    eax]
    bp = v13081
    si = v13082
    di = v13083
    es = v13084
    cs = v13085
    ss = v13086
    ds = v13087
    fs = v13088
    gs = v13089
    cf = v13090
    ?1 = v13091
    pf = v13092
    ?3 = v13093
    af = v13094
    ?5 = v13095
    zf = v13096
    sf = v13097
    tf = v13098
    if = v13099
    df = v13100
    of = v13101
    iopl0 = v13102
    iopl1 = v13103
    nt = v13104
    ?15 = v13105
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v13110 [from 0x80485ac:pop    eax]
    cx = v13077
    dx = v13078
    bx = v13146 [from 0x80485ad:pop    ebx]
    sp = v13080+0x8 [from 0x80485ad:pop    ebx]
    bp = v13081
    si = v13082
    di = v13083
    es = v13084
    cs = v13085
    ss = v13086
    ds = v13087
    fs = v13088
    gs = v13089
    cf = v13090
    ?1 = v13091
    pf = v13092
    ?3 = v13093
    af = v13094
    ?5 = v13095
    zf = v13096
    sf = v13097
    tf = v13098
    if = v13099
    df = v13100
    of = v13101
    iopl0 = v13102
    iopl1 = v13103
    nt = v13104
    ?15 = v13105
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v13110 [from 0x80485ac:pop    eax]
    cx = v13077
    dx = v13078
    bx = v13146 [from 0x80485ad:pop    ebx]
    sp = v13080+0xc [from 0x80485ae:pop    ebp]
    bp = v13182 [from 0x80485ae:pop    ebp]
    si = v13082
    di = v13083
    es = v13084
    cs = v13085
    ss = v13086
    ds = v13087
    fs = v13088
    gs = v13089
    cf = v13090
    ?1 = v13091
    pf = v13092
    ?3 = v13093
    af = v13094
    ?5 = v13095
    zf = v13096
    sf = v13097
    tf = v13098
    if = v13099
    df = v13100
    of = v13101
    iopl0 = v13102
    iopl1 = v13103
    nt = v13104
    ?15 = v13105
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v13110 [from 0x80485ac:pop    eax]
    cx = v13077
    dx = v13078
    bx = v13146 [from 0x80485ad:pop    ebx]
    sp = v13080+0x10 [from 0x80485af:ret    ]
    bp = v13182 [from 0x80485ae:pop    ebp]
    si = v13082
    di = v13083
    es = v13084
    cs = v13085
    ss = v13086
    ds = v13087
    fs = v13088
    gs = v13089
    cf = v13090
    ?1 = v13091
    pf = v13092
    ?3 = v13093
    af = v13094
    ?5 = v13095
    zf = v13096
    sf = v13097
    tf = v13098
    if = v13099
    df = v13100
    of = v13101
    iopl0 = v13102
    iopl1 = v13103
    nt = v13104
    ?15 = v13105
    memory = {}
    ip = v13220 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v13282
    cx = v13283
    dx = v13284
    bx = v13285
    sp = v13286-0x4 [from 0x80485b0:push   ebp]
    bp = v13287
    si = v13288
    di = v13289
    es = v13290
    cs = v13291
    ss = v13292
    ds = v13293
    fs = v13294
    gs = v13295
    cf = v13296
    ?1 = v13297
    pf = v13298
    ?3 = v13299
    af = v13300
    ?5 = v13301
    zf = v13302
    sf = v13303
    tf = v13304
    if = v13305
    df = v13306
    of = v13307
    iopl0 = v13308
    iopl1 = v13309
    nt = v13310
    ?15 = v13311
    memory = {
        size=4; addr=v13286-0x4 [from 0x80485b0:push   ebp]; value=v13287
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v13282
    cx = v13283
    dx = v13284
    bx = v13285
    sp = v13286-0x4 [from 0x80485b0:push   ebp]
    bp = v13286-0x4 [from 0x80485b0:push   ebp]
    si = v13288
    di = v13289
    es = v13290
    cs = v13291
    ss = v13292
    ds = v13293
    fs = v13294
    gs = v13295
    cf = v13296
    ?1 = v13297
    pf = v13298
    ?3 = v13299
    af = v13300
    ?5 = v13301
    zf = v13302
    sf = v13303
    tf = v13304
    if = v13305
    df = v13306
    of = v13307
    iopl0 = v13308
    iopl1 = v13309
    nt = v13310
    ?15 = v13311
    memory = {
        size=4; addr=v13286-0x4 [from 0x80485b0:push   ebp]; value=v13287
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v13282
    cx = v13283
    dx = v13284
    bx = v13285
    sp = v13286-0x8 [from 0x80485b3:push   ebx]
    bp = v13286-0x4 [from 0x80485b0:push   ebp]
    si = v13288
    di = v13289
    es = v13290
    cs = v13291
    ss = v13292
    ds = v13293
    fs = v13294
    gs = v13295
    cf = v13296
    ?1 = v13297
    pf = v13298
    ?3 = v13299
    af = v13300
    ?5 = v13301
    zf = v13302
    sf = v13303
    tf = v13304
    if = v13305
    df = v13306
    of = v13307
    iopl0 = v13308
    iopl1 = v13309
    nt = v13310
    ?15 = v13311
    memory = {
        size=4; addr=v13286-0x8 [from 0x80485b3:push   ebx]; value=v13285
        size=4; addr=v13286-0x4 [from 0x80485b0:push   ebp]; value=v13287
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v13282
    cx = v13283
    dx = v13284
    bx = v13285
    sp = v13286-0xc [from 0x80485b4:push   eax]
    bp = v13286-0x4 [from 0x80485b0:push   ebp]
    si = v13288
    di = v13289
    es = v13290
    cs = v13291
    ss = v13292
    ds = v13293
    fs = v13294
    gs = v13295
    cf = v13296
    ?1 = v13297
    pf = v13298
    ?3 = v13299
    af = v13300
    ?5 = v13301
    zf = v13302
    sf = v13303
    tf = v13304
    if = v13305
    df = v13306
    of = v13307
    iopl0 = v13308
    iopl1 = v13309
    nt = v13310
    ?15 = v13311
    memory = {
        size=4; addr=v13286-0xc [from 0x80485b4:push   eax]; value=v13282
        size=4; addr=v13286-0x8 [from 0x80485b3:push   ebx]; value=v13285
        size=4; addr=v13286-0x4 [from 0x80485b0:push   ebp]; value=v13287
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v13282
    cx = v13283
    dx = v13284
    bx = v13285
    sp = v13286-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v13286-0x4 [from 0x80485b0:push   ebp]
    si = v13288
    di = v13289
    es = v13290
    cs = v13291
    ss = v13292
    ds = v13293
    fs = v13294
    gs = v13295
    cf = v13296
    ?1 = v13297
    pf = v13298
    ?3 = v13299
    af = v13300
    ?5 = v13301
    zf = v13302
    sf = v13303
    tf = v13304
    if = v13305
    df = v13306
    of = v13307
    iopl0 = v13308
    iopl1 = v13309
    nt = v13310
    ?15 = v13311
    memory = {
        size=4; addr=v13286-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v13286-0xc [from 0x80485b4:push   eax]; value=v13282
        size=4; addr=v13286-0x8 [from 0x80485b3:push   ebx]; value=v13285
        size=4; addr=v13286-0x4 [from 0x80485b0:push   ebp]; value=v13287
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v13549
    cx = v13550
    dx = v13551
    bx = v13583 [from 0x80485ba:pop    ebx]
    sp = v13553+0x4 [from 0x80485ba:pop    ebx]
    bp = v13554
    si = v13555
    di = v13556
    es = v13557
    cs = v13558
    ss = v13559
    ds = v13560
    fs = v13561
    gs = v13562
    cf = v13563
    ?1 = v13564
    pf = v13565
    ?3 = v13566
    af = v13567
    ?5 = v13568
    zf = v13569
    sf = v13570
    tf = v13571
    if = v13572
    df = v13573
    of = v13574
    iopl0 = v13575
    iopl1 = v13576
    nt = v13577
    ?15 = v13578
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v13549
    cx = v13550
    dx = v13551
    bx = v13583+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v13553+0x4 [from 0x80485ba:pop    ebx]
    bp = v13554
    si = v13555
    di = v13556
    es = v13557
    cs = v13558
    ss = v13559
    ds = v13560
    fs = v13561
    gs = v13562
    cf = v13645 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v13564
    pf = -v13640-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v13566
    af = v13644 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v13568
    zf = v13643 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v13642 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v13571
    if = v13572
    df = v13573
    of = v13648 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v13575
    iopl1 = v13576
    nt = v13577
    ?15 = v13578
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v13549
    cx = v13550
    dx = v13551
    bx = v13583+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v13553 [from 0x80485c1:call   0x08048390]
    bp = v13554
    si = v13555
    di = v13556
    es = v13557
    cs = v13558
    ss = v13559
    ds = v13560
    fs = v13561
    gs = v13562
    cf = v13645 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v13564
    pf = -v13640-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v13566
    af = v13644 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v13568
    zf = v13643 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v13642 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v13571
    if = v13572
    df = v13573
    of = v13648 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v13575
    iopl1 = v13576
    nt = v13577
    ?15 = v13578
    memory = {
        size=4; addr=v13553 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v13901 [from 0x80485c6:pop    eax]
    cx = v13868
    dx = v13869
    bx = v13870
    sp = v13871+0x4 [from 0x80485c6:pop    eax]
    bp = v13872
    si = v13873
    di = v13874
    es = v13875
    cs = v13876
    ss = v13877
    ds = v13878
    fs = v13879
    gs = v13880
    cf = v13881
    ?1 = v13882
    pf = v13883
    ?3 = v13884
    af = v13885
    ?5 = v13886
    zf = v13887
    sf = v13888
    tf = v13889
    if = v13890
    df = v13891
    of = v13892
    iopl0 = v13893
    iopl1 = v13894
    nt = v13895
    ?15 = v13896
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v13901 [from 0x80485c6:pop    eax]
    cx = v13868
    dx = v13869
    bx = v13937 [from 0x80485c7:pop    ebx]
    sp = v13871+0x8 [from 0x80485c7:pop    ebx]
    bp = v13872
    si = v13873
    di = v13874
    es = v13875
    cs = v13876
    ss = v13877
    ds = v13878
    fs = v13879
    gs = v13880
    cf = v13881
    ?1 = v13882
    pf = v13883
    ?3 = v13884
    af = v13885
    ?5 = v13886
    zf = v13887
    sf = v13888
    tf = v13889
    if = v13890
    df = v13891
    of = v13892
    iopl0 = v13893
    iopl1 = v13894
    nt = v13895
    ?15 = v13896
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v13901 [from 0x80485c6:pop    eax]
    cx = v13868
    dx = v13869
    bx = v13937 [from 0x80485c7:pop    ebx]
    sp = v13872+0x4 [from 0x80485c8:leave  ]
    bp = v13973 [from 0x80485c8:leave  ]
    si = v13873
    di = v13874
    es = v13875
    cs = v13876
    ss = v13877
    ds = v13878
    fs = v13879
    gs = v13880
    cf = v13881
    ?1 = v13882
    pf = v13883
    ?3 = v13884
    af = v13885
    ?5 = v13886
    zf = v13887
    sf = v13888
    tf = v13889
    if = v13890
    df = v13891
    of = v13892
    iopl0 = v13893
    iopl1 = v13894
    nt = v13895
    ?15 = v13896
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v13901 [from 0x80485c6:pop    eax]
    cx = v13868
    dx = v13869
    bx = v13937 [from 0x80485c7:pop    ebx]
    sp = v13872+0x8 [from 0x80485c9:ret    ]
    bp = v13973 [from 0x80485c8:leave  ]
    si = v13873
    di = v13874
    es = v13875
    cs = v13876
    ss = v13877
    ds = v13878
    fs = v13879
    gs = v13880
    cf = v13881
    ?1 = v13882
    pf = v13883
    ?3 = v13884
    af = v13885
    ?5 = v13886
    zf = v13887
    sf = v13888
    tf = v13889
    if = v13890
    df = v13891
    of = v13892
    iopl0 = v13893
    iopl1 = v13894
    nt = v13895
    ?15 = v13896
    memory = {}
    ip = v14011 [from 0x80485c9:ret    ]
analyzed headers: 1
