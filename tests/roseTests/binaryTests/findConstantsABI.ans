=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v416
    cx = v417
    dx = v418
    bx = v419
    sp = v420-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v421
    si = v422
    di = v423
    es = v424
    cs = v425
    ss = v426
    ds = v427
    fs = v428
    gs = v429
    cf = v430
    ?1 = v431
    pf = v432
    ?3 = v433
    af = v434
    ?5 = v435
    zf = v436
    sf = v437
    tf = v438
    if = v439
    df = v440
    of = v441
    iopl0 = v442
    iopl1 = v443
    nt = v444
    ?15 = v445
    memory = {
        size=4; addr=v420-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v633
    cx = v634
    dx = v635
    bx = v636
    sp = v637-0x4 [from 0x80482d8:call   0x08048580]
    bp = v638
    si = v639
    di = v640
    es = v641
    cs = v642
    ss = v643
    ds = v644
    fs = v645
    gs = v646
    cf = v647
    ?1 = v648
    pf = v649
    ?3 = v650
    af = v651
    ?5 = v652
    zf = v653
    sf = v654
    tf = v655
    if = v656
    df = v657
    of = v658
    iopl0 = v659
    iopl1 = v660
    nt = v661
    ?15 = v662
    memory = {
        size=4; addr=v637-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x4 [from 0x80482dd:leave  ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x8 [from 0x80482de:ret    ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = v922 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v984
    cx = v985
    dx = v986
    bx = v987
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = v998
    ?1 = v999
    pf = v1000
    ?3 = v1001
    af = v1002
    ?5 = v1003
    zf = v1004
    sf = v1005
    tf = v1006
    if = v1007
    df = v1008
    of = v1009
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = v1017 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v1079
    cx = v1080
    dx = v1081
    bx = v1082
    sp = v1083
    bp = v1084
    si = v1085
    di = v1086
    es = v1087
    cs = v1088
    ss = v1089
    ds = v1090
    fs = v1091
    gs = v1092
    cf = v1093
    ?1 = v1094
    pf = v1095
    ?3 = v1096
    af = v1097
    ?5 = v1098
    zf = v1099
    sf = v1100
    tf = v1101
    if = v1102
    df = v1103
    of = v1104
    iopl0 = v1105
    iopl1 = v1106
    nt = v1107
    ?15 = v1108
    memory = {}
    ip = v1112 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v1174
    cx = v1175
    dx = v1176
    bx = v1177
    sp = v1178
    bp = v1179
    si = v1180
    di = v1181
    es = v1182
    cs = v1183
    ss = v1184
    ds = v1185
    fs = v1186
    gs = v1187
    cf = v1188
    ?1 = v1189
    pf = v1190
    ?3 = v1191
    af = v1192
    ?5 = v1193
    zf = v1194
    sf = v1195
    tf = v1196
    if = v1197
    df = v1198
    of = v1199
    iopl0 = v1200
    iopl1 = v1201
    nt = v1202
    ?15 = v1203
    memory = {}
    ip = v1207 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v1269
    cx = v1270
    dx = v1271
    bx = v1272
    sp = v1273
    bp = v1274
    si = v1275
    di = v1276
    es = v1277
    cs = v1278
    ss = v1279
    ds = v1280
    fs = v1281
    gs = v1282
    cf = v1283
    ?1 = v1284
    pf = v1285
    ?3 = v1286
    af = v1287
    ?5 = v1288
    zf = v1289
    sf = v1290
    tf = v1291
    if = v1292
    df = v1293
    of = v1294
    iopl0 = v1295
    iopl1 = v1296
    nt = v1297
    ?15 = v1298
    memory = {}
    ip = v1302 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1364
    cx = v1365
    dx = v1366
    bx = v1367
    sp = v1368
    bp = v1369
    si = v1370
    di = v1371
    es = v1372
    cs = v1373
    ss = v1374
    ds = v1375
    fs = v1376
    gs = v1377
    cf = v1378
    ?1 = v1379
    pf = v1380
    ?3 = v1381
    af = v1382
    ?5 = v1383
    zf = v1384
    sf = v1385
    tf = v1386
    if = v1387
    df = v1388
    of = v1389
    iopl0 = v1390
    iopl1 = v1391
    nt = v1392
    ?15 = v1393
    memory = {}
    ip = v1397 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1459
    cx = v1460
    dx = v1461
    bx = v1462
    sp = v1463
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1465
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1459
    cx = v1460
    dx = v1461
    bx = v1462
    sp = v1463+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1463+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v1614-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v2146
    cx = v2147
    dx = v2148
    bx = v2149
    sp = v2150
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2160
    ?1 = v2161
    pf = v2162
    ?3 = v2163
    af = v2164
    ?5 = v2165
    zf = v2166
    sf = v2167
    tf = v2168
    if = v2169
    df = v2170
    of = v2171
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x4 [from 0x8048364:push   ebp]
    bp = v2244
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x4 [from 0x8048364:push   ebp]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x8 [from 0x8048367:push   ebx]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0xc [from 0x8048368:push   ecx]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0xc [from 0x8048368:push   ecx]; value=v2240
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x10 [from 0x8048369:call   0x0804836e]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v2243-0xc [from 0x8048368:push   ecx]; value=v2240
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2506
    cx = v2507
    dx = v2508
    bx = v2540 [from 0x804836e:pop    ebx]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = v2520
    ?1 = v2521
    pf = v2522
    ?3 = v2523
    af = v2524
    ?5 = v2525
    zf = v2526
    sf = v2527
    tf = v2528
    if = v2529
    df = v2530
    of = v2531
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2506
    cx = v2507
    dx = v2508
    bx = v2540+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = v2602 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2521
    pf = -v2597-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2523
    af = v2601 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2525
    zf = v2600 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2599 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2528
    if = v2529
    df = v2530
    of = v2605 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2506
    cx = v2507
    dx = v2641 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2540+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = v2602 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2521
    pf = -v2597-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2523
    af = v2601 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2525
    zf = v2600 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2599 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2528
    if = v2529
    df = v2530
    of = v2605 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2506
    cx = v2507
    dx = v2641 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2540+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2521
    pf = -v2690-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2523
    af = <top>
    ?5 = v2525
    zf = v2693 [from 0x804837b:test   edx, edx]
    sf = v2692 [from 0x804837b:test   edx, edx]
    tf = v2528
    if = v2529
    df = v2530
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2506
    cx = v2507
    dx = v2641 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2540+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2510+0x4 [from 0x804836e:pop    ebx]
    bp = v2511
    si = v2512
    di = v2513
    es = v2514
    cs = v2515
    ss = v2516
    ds = v2517
    fs = v2518
    gs = v2519
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2521
    pf = -v2690-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2523
    af = <top>
    ?5 = v2525
    zf = v2693 [from 0x804837b:test   edx, edx]
    sf = v2692 [from 0x804837b:test   edx, edx]
    tf = v2528
    if = v2529
    df = v2530
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2532
    iopl1 = v2533
    nt = v2534
    ?15 = v2535
    memory = {}
    ip = v2730 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v2852
    cx = v2853
    dx = v2854
    bx = v2855
    sp = v2856-0x4 [from 0x804837f:call   0x08048330]
    bp = v2857
    si = v2858
    di = v2859
    es = v2860
    cs = v2861
    ss = v2862
    ds = v2863
    fs = v2864
    gs = v2865
    cf = v2866
    ?1 = v2867
    pf = v2868
    ?3 = v2869
    af = v2870
    ?5 = v2871
    zf = v2872
    sf = v2873
    tf = v2874
    if = v2875
    df = v2876
    of = v2877
    iopl0 = v2878
    iopl1 = v2879
    nt = v2880
    ?15 = v2881
    memory = {
        size=4; addr=v2856-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v3103 [from 0x8048384:pop    eax]
    cx = v3070
    dx = v3071
    bx = v3072
    sp = v3073+0x4 [from 0x8048384:pop    eax]
    bp = v3074
    si = v3075
    di = v3076
    es = v3077
    cs = v3078
    ss = v3079
    ds = v3080
    fs = v3081
    gs = v3082
    cf = v3083
    ?1 = v3084
    pf = v3085
    ?3 = v3086
    af = v3087
    ?5 = v3088
    zf = v3089
    sf = v3090
    tf = v3091
    if = v3092
    df = v3093
    of = v3094
    iopl0 = v3095
    iopl1 = v3096
    nt = v3097
    ?15 = v3098
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v3103 [from 0x8048384:pop    eax]
    cx = v3070
    dx = v3071
    bx = v3139 [from 0x8048385:pop    ebx]
    sp = v3073+0x8 [from 0x8048385:pop    ebx]
    bp = v3074
    si = v3075
    di = v3076
    es = v3077
    cs = v3078
    ss = v3079
    ds = v3080
    fs = v3081
    gs = v3082
    cf = v3083
    ?1 = v3084
    pf = v3085
    ?3 = v3086
    af = v3087
    ?5 = v3088
    zf = v3089
    sf = v3090
    tf = v3091
    if = v3092
    df = v3093
    of = v3094
    iopl0 = v3095
    iopl1 = v3096
    nt = v3097
    ?15 = v3098
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v3103 [from 0x8048384:pop    eax]
    cx = v3070
    dx = v3071
    bx = v3139 [from 0x8048385:pop    ebx]
    sp = v3074+0x4 [from 0x8048386:leave  ]
    bp = v3175 [from 0x8048386:leave  ]
    si = v3075
    di = v3076
    es = v3077
    cs = v3078
    ss = v3079
    ds = v3080
    fs = v3081
    gs = v3082
    cf = v3083
    ?1 = v3084
    pf = v3085
    ?3 = v3086
    af = v3087
    ?5 = v3088
    zf = v3089
    sf = v3090
    tf = v3091
    if = v3092
    df = v3093
    of = v3094
    iopl0 = v3095
    iopl1 = v3096
    nt = v3097
    ?15 = v3098
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v3103 [from 0x8048384:pop    eax]
    cx = v3070
    dx = v3071
    bx = v3139 [from 0x8048385:pop    ebx]
    sp = v3074+0x8 [from 0x8048387:ret    ]
    bp = v3175 [from 0x8048386:leave  ]
    si = v3075
    di = v3076
    es = v3077
    cs = v3078
    ss = v3079
    ds = v3080
    fs = v3081
    gs = v3082
    cf = v3083
    ?1 = v3084
    pf = v3085
    ?3 = v3086
    af = v3087
    ?5 = v3088
    zf = v3089
    sf = v3090
    tf = v3091
    if = v3092
    df = v3093
    of = v3094
    iopl0 = v3095
    iopl1 = v3096
    nt = v3097
    ?15 = v3098
    memory = {}
    ip = v3213 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0x4 [from 0x8048390:push   ebp]
    bp = v3280
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = v3289
    ?1 = v3290
    pf = v3291
    ?3 = v3292
    af = v3293
    ?5 = v3294
    zf = v3295
    sf = v3296
    tf = v3297
    if = v3298
    df = v3299
    of = v3300
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0x4 [from 0x8048390:push   ebp]
    bp = v3279-0x4 [from 0x8048390:push   ebp]
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = v3289
    ?1 = v3290
    pf = v3291
    ?3 = v3292
    af = v3293
    ?5 = v3294
    zf = v3295
    sf = v3296
    tf = v3297
    if = v3298
    df = v3299
    of = v3300
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3279-0x4 [from 0x8048390:push   ebp]
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = -v3406-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v3290
    pf = -v3400-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v3292
    af = -v3404-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v3294
    zf = v3403 [from 0x8048393:sub    esp, 0x08]
    sf = v3402 [from 0x8048393:sub    esp, 0x08]
    tf = v3297
    if = v3298
    df = v3299
    of = v3410 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3279-0x4 [from 0x8048390:push   ebp]
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = -v3478-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3290
    pf = -v3472-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3292
    af = -v3476-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3294
    zf = v3475 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3474 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3297
    if = v3298
    df = v3299
    of = v3482 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v3275
    cx = v3276
    dx = v3277
    bx = v3278
    sp = v3279-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3279-0x4 [from 0x8048390:push   ebp]
    si = v3281
    di = v3282
    es = v3283
    cs = v3284
    ss = v3285
    ds = v3286
    fs = v3287
    gs = v3288
    cf = -v3478-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3290
    pf = -v3472-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3292
    af = -v3476-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3294
    zf = v3475 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3474 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3297
    if = v3298
    df = v3299
    of = v3482 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3301
    iopl1 = v3302
    nt = v3303
    ?15 = v3304
    memory = {
        size=4; addr=v3279-0x4 [from 0x8048390:push   ebp]; value=v3280
    }
    ip = v3517 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3672 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3640
    dx = v3641
    bx = v3642
    sp = v3643
    bp = v3644
    si = v3645
    di = v3646
    es = v3647
    cs = v3648
    ss = v3649
    ds = v3650
    fs = v3651
    gs = v3652
    cf = v3653
    ?1 = v3654
    pf = v3655
    ?3 = v3656
    af = v3657
    ?5 = v3658
    zf = v3659
    sf = v3660
    tf = v3661
    if = v3662
    df = v3663
    of = v3664
    iopl0 = v3665
    iopl1 = v3666
    nt = v3667
    ?15 = v3668
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3672 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3640
    dx = v3706 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3642
    sp = v3643
    bp = v3644
    si = v3645
    di = v3646
    es = v3647
    cs = v3648
    ss = v3649
    ds = v3650
    fs = v3651
    gs = v3652
    cf = v3653
    ?1 = v3654
    pf = v3655
    ?3 = v3656
    af = v3657
    ?5 = v3658
    zf = v3659
    sf = v3660
    tf = v3661
    if = v3662
    df = v3663
    of = v3664
    iopl0 = v3665
    iopl1 = v3666
    nt = v3667
    ?15 = v3668
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3672 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3640
    dx = v3706 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3642
    sp = v3643
    bp = v3644
    si = v3645
    di = v3646
    es = v3647
    cs = v3648
    ss = v3649
    ds = v3650
    fs = v3651
    gs = v3652
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3654
    pf = -v3755-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3656
    af = <top>
    ?5 = v3658
    zf = v3758 [from 0x80483a6:test   edx, edx]
    sf = v3757 [from 0x80483a6:test   edx, edx]
    tf = v3661
    if = v3662
    df = v3663
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3665
    iopl1 = v3666
    nt = v3667
    ?15 = v3668
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3672 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3640
    dx = v3706 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3642
    sp = v3643
    bp = v3644
    si = v3645
    di = v3646
    es = v3647
    cs = v3648
    ss = v3649
    ds = v3650
    fs = v3651
    gs = v3652
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3654
    pf = -v3755-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3656
    af = <top>
    ?5 = v3658
    zf = v3758 [from 0x80483a6:test   edx, edx]
    sf = v3757 [from 0x80483a6:test   edx, edx]
    tf = v3661
    if = v3662
    df = v3663
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3665
    iopl1 = v3666
    nt = v3667
    ?15 = v3668
    memory = {}
    ip = v3795 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v3917
    cx = v3918
    dx = v3919
    bx = v3920
    sp = v3921
    bp = v3922
    si = v3923 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3924
    es = v3925
    cs = v3926
    ss = v3927
    ds = v3928
    fs = v3929
    gs = v3930
    cf = v3931
    ?1 = v3932
    pf = v3933
    ?3 = v3934
    af = v3935
    ?5 = v3936
    zf = v3937
    sf = v3938
    tf = v3939
    if = v3940
    df = v3941
    of = v3942
    iopl0 = v3943
    iopl1 = v3944
    nt = v3945
    ?15 = v3946
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v3917+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3918
    dx = v3919
    bx = v3920
    sp = v3921
    bp = v3922
    si = v3923 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3924
    es = v3925
    cs = v3926
    ss = v3927
    ds = v3928
    fs = v3929
    gs = v3930
    cf = v4011 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3932
    pf = -v4006-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3934
    af = v4010 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3936
    zf = v4009 [from 0x80483b0:add    eax, 0x04]
    sf = v4008 [from 0x80483b0:add    eax, 0x04]
    tf = v3939
    if = v3940
    df = v3941
    of = v4014 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3943
    iopl1 = v3944
    nt = v3945
    ?15 = v3946
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v3917+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3918
    dx = v3919
    bx = v3920
    sp = v3921
    bp = v3922
    si = v3923 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3924
    es = v3925
    cs = v3926
    ss = v3927
    ds = v3928
    fs = v3929
    gs = v3930
    cf = v4011 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3932
    pf = -v4006-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3934
    af = v4010 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3936
    zf = v4009 [from 0x80483b0:add    eax, 0x04]
    sf = v4008 [from 0x80483b0:add    eax, 0x04]
    tf = v3939
    if = v3940
    df = v3941
    of = v4014 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3943
    iopl1 = v3944
    nt = v3945
    ?15 = v3946
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v3917+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v3917+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3918
    dx = v3919
    bx = v3920
    sp = v3921-0x4 [from 0x80483b8:call   edx]
    bp = v3922
    si = v3923 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3924
    es = v3925
    cs = v3926
    ss = v3927
    ds = v3928
    fs = v3929
    gs = v3930
    cf = v4011 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3932
    pf = -v4006-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3934
    af = v4010 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3936
    zf = v4009 [from 0x80483b0:add    eax, 0x04]
    sf = v4008 [from 0x80483b0:add    eax, 0x04]
    tf = v3939
    if = v3940
    df = v3941
    of = v4014 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3943
    iopl1 = v3944
    nt = v3945
    ?15 = v3946
    memory = {
        size=4; addr=v3921-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v3919
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v4270 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4238
    dx = v4239
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = v4251
    ?1 = v4252
    pf = v4253
    ?3 = v4254
    af = v4255
    ?5 = v4256
    zf = v4257
    sf = v4258
    tf = v4259
    if = v4260
    df = v4261
    of = v4262
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v4270 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4238
    dx = v4304 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = v4251
    ?1 = v4252
    pf = v4253
    ?3 = v4254
    af = v4255
    ?5 = v4256
    zf = v4257
    sf = v4258
    tf = v4259
    if = v4260
    df = v4261
    of = v4262
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v4270 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4238
    dx = v4304 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4252
    pf = -v4353-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4254
    af = <top>
    ?5 = v4256
    zf = v4356 [from 0x80483c1:test   edx, edx]
    sf = v4355 [from 0x80483c1:test   edx, edx]
    tf = v4259
    if = v4260
    df = v4261
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v4270 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4238
    dx = v4304 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4252
    pf = -v4353-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4254
    af = <top>
    ?5 = v4256
    zf = v4356 [from 0x80483c1:test   edx, edx]
    sf = v4355 [from 0x80483c1:test   edx, edx]
    tf = v4259
    if = v4260
    df = v4261
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = v4394 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v4516
    cx = v4517
    dx = v4518
    bx = v4519
    sp = v4520
    bp = v4521
    si = v4522
    di = v4523
    es = v4524
    cs = v4525
    ss = v4526
    ds = v4527
    fs = v4528
    gs = v4529
    cf = v4530
    ?1 = v4531
    pf = v4532
    ?3 = v4533
    af = v4534
    ?5 = v4535
    zf = v4536
    sf = v4537
    tf = v4538
    if = v4539
    df = v4540
    of = v4541
    iopl0 = v4542
    iopl1 = v4543
    nt = v4544
    ?15 = v4545
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v4516
    cx = v4517
    dx = v4518
    bx = v4519
    sp = v4521+0x4 [from 0x80483cc:leave  ]
    bp = v4586 [from 0x80483cc:leave  ]
    si = v4522
    di = v4523
    es = v4524
    cs = v4525
    ss = v4526
    ds = v4527
    fs = v4528
    gs = v4529
    cf = v4530
    ?1 = v4531
    pf = v4532
    ?3 = v4533
    af = v4534
    ?5 = v4535
    zf = v4536
    sf = v4537
    tf = v4538
    if = v4539
    df = v4540
    of = v4541
    iopl0 = v4542
    iopl1 = v4543
    nt = v4544
    ?15 = v4545
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v4516
    cx = v4517
    dx = v4518
    bx = v4519
    sp = v4521+0x8 [from 0x80483cd:ret    ]
    bp = v4586 [from 0x80483cc:leave  ]
    si = v4522
    di = v4523
    es = v4524
    cs = v4525
    ss = v4526
    ds = v4527
    fs = v4528
    gs = v4529
    cf = v4530
    ?1 = v4531
    pf = v4532
    ?3 = v4533
    af = v4534
    ?5 = v4535
    zf = v4536
    sf = v4537
    tf = v4538
    if = v4539
    df = v4540
    of = v4541
    iopl0 = v4542
    iopl1 = v4543
    nt = v4544
    ?15 = v4545
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v4624 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v4686
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0x4 [from 0x80483d0:push   ebp]
    bp = v4691
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = v4700
    ?1 = v4701
    pf = v4702
    ?3 = v4703
    af = v4704
    ?5 = v4705
    zf = v4706
    sf = v4707
    tf = v4708
    if = v4709
    df = v4710
    of = v4711
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v4686
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0x4 [from 0x80483d0:push   ebp]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = v4700
    ?1 = v4701
    pf = v4702
    ?3 = v4703
    af = v4704
    ?5 = v4705
    zf = v4706
    sf = v4707
    tf = v4708
    if = v4709
    df = v4710
    of = v4711
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v4686
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = -v4817-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4701
    pf = -v4811-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4703
    af = -v4815-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4705
    zf = v4814 [from 0x80483d3:sub    esp, 0x08]
    sf = v4813 [from 0x80483d3:sub    esp, 0x08]
    tf = v4708
    if = v4709
    df = v4710
    of = v4821 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v4856 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = -v4817-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4701
    pf = -v4811-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4703
    af = -v4815-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4705
    zf = v4814 [from 0x80483d3:sub    esp, 0x08]
    sf = v4813 [from 0x80483d3:sub    esp, 0x08]
    tf = v4708
    if = v4709
    df = v4710
    of = v4821 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v4856 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4701
    pf = -v4905-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4703
    af = <top>
    ?5 = v4705
    zf = v4908 [from 0x80483db:test   eax, eax]
    sf = v4907 [from 0x80483db:test   eax, eax]
    tf = v4708
    if = v4709
    df = v4710
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v4856 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4687
    dx = v4688
    bx = v4689
    sp = v4690-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4690-0x4 [from 0x80483d0:push   ebp]
    si = v4692
    di = v4693
    es = v4694
    cs = v4695
    ss = v4696
    ds = v4697
    fs = v4698
    gs = v4699
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4701
    pf = -v4905-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4703
    af = <top>
    ?5 = v4705
    zf = v4908 [from 0x80483db:test   eax, eax]
    sf = v4907 [from 0x80483db:test   eax, eax]
    tf = v4708
    if = v4709
    df = v4710
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4712
    iopl1 = v4713
    nt = v4714
    ?15 = v4715
    memory = {
        size=4; addr=v4690-0x4 [from 0x80483d0:push   ebp]; value=v4691
    }
    ip = v4945 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5071
    bp = v5072
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = v5081
    ?1 = v5082
    pf = v5083
    ?3 = v5084
    af = v5085
    ?5 = v5086
    zf = v5087
    sf = v5088
    tf = v5089
    if = v5090
    df = v5091
    of = v5092
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5071
    bp = v5072
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5071
    bp = v5072
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5072
    bp = v5072
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5072+0x4 [from 0x8048402:pop    ebp]
    bp = v5255 [from 0x8048402:pop    ebp]
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5068
    dx = v5069
    bx = v5070
    sp = v5072+0x8 [from 0x8048403:ret    ]
    bp = v5255 [from 0x8048402:pop    ebp]
    si = v5073
    di = v5074
    es = v5075
    cs = v5076
    ss = v5077
    ds = v5078
    fs = v5079
    gs = v5080
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5082
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5084
    af = <top>
    ?5 = v5086
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5089
    if = v5090
    df = v5091
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5093
    iopl1 = v5094
    nt = v5095
    ?15 = v5096
    memory = {}
    ip = v5293 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    ax = v5355
    cx = v5356
    dx = v5357
    bx = v5358
    sp = v5359-0x4 [from 0x8048410:push   ebp]
    bp = v5360
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = v5369
    ?1 = v5370
    pf = v5371
    ?3 = v5372
    af = v5373
    ?5 = v5374
    zf = v5375
    sf = v5376
    tf = v5377
    if = v5378
    df = v5379
    of = v5380
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5359-0x4 [from 0x8048410:push   ebp]; value=v5360
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v5355
    cx = v5356
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5358
    sp = v5359-0x4 [from 0x8048410:push   ebp]
    bp = v5360
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = v5369
    ?1 = v5370
    pf = v5371
    ?3 = v5372
    af = v5373
    ?5 = v5374
    zf = v5375
    sf = v5376
    tf = v5377
    if = v5378
    df = v5379
    of = v5380
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5359-0x4 [from 0x8048410:push   ebp]; value=v5360
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v5355
    cx = v5356
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5358
    sp = v5359-0x4 [from 0x8048410:push   ebp]
    bp = v5359-0x4 [from 0x8048410:push   ebp]
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = v5369
    ?1 = v5370
    pf = v5371
    ?3 = v5372
    af = v5373
    ?5 = v5374
    zf = v5375
    sf = v5376
    tf = v5377
    if = v5378
    df = v5379
    of = v5380
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5359-0x4 [from 0x8048410:push   ebp]; value=v5360
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v5355
    cx = v5356
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5358
    sp = v5359-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v5359-0x4 [from 0x8048410:push   ebp]
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = -v5519-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v5370
    pf = -v5513-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v5372
    af = -v5517-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v5374
    zf = v5516 [from 0x8048418:sub    esp, 0x08]
    sf = v5515 [from 0x8048418:sub    esp, 0x08]
    tf = v5377
    if = v5378
    df = v5379
    of = v5523 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5359-0x4 [from 0x8048410:push   ebp]; value=v5360
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v5355
    cx = v5356
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5358
    sp = v5557 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5359-0x4 [from 0x8048410:push   ebp]
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5370
    pf = -v5573-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5372
    af = <top>
    ?5 = v5374
    zf = v5576 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5575 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5377
    if = v5378
    df = v5379
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5359-0x4 [from 0x8048410:push   ebp]; value=v5360
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v5355
    cx = v5356
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5358
    sp = v5557 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5359-0x4 [from 0x8048410:push   ebp]
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5370
    pf = -v5573-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5372
    af = <top>
    ?5 = v5374
    zf = v5576 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5575 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5377
    if = v5378
    df = v5379
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5557+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v5355
    cx = v5356
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5358
    sp = v5557 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5359-0x4 [from 0x8048410:push   ebp]
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5370
    pf = -v5573-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5372
    af = <top>
    ?5 = v5374
    zf = v5576 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5575 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5377
    if = v5378
    df = v5379
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5557 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5557+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v5355
    cx = v5356
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5358
    sp = v5557-0x4 [from 0x8048429:call   0x080482f0]
    bp = v5359-0x4 [from 0x8048410:push   ebp]
    si = v5361
    di = v5362
    es = v5363
    cs = v5364
    ss = v5365
    ds = v5366
    fs = v5367
    gs = v5368
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5370
    pf = -v5573-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5372
    af = <top>
    ?5 = v5374
    zf = v5576 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5575 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5377
    if = v5378
    df = v5379
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5381
    iopl1 = v5382
    nt = v5383
    ?15 = v5384
    memory = {
        size=4; addr=v5557 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5557+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v5557-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v5869
    cx = v5870
    dx = v5871
    bx = v5872
    sp = v5874
    bp = v5874
    si = v5875
    di = v5876
    es = v5877
    cs = v5878
    ss = v5879
    ds = v5880
    fs = v5881
    gs = v5882
    cf = v5883
    ?1 = v5884
    pf = v5885
    ?3 = v5886
    af = v5887
    ?5 = v5888
    zf = v5889
    sf = v5890
    tf = v5891
    if = v5892
    df = v5893
    of = v5894
    iopl0 = v5895
    iopl1 = v5896
    nt = v5897
    ?15 = v5898
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5870
    dx = v5871
    bx = v5872
    sp = v5874
    bp = v5874
    si = v5875
    di = v5876
    es = v5877
    cs = v5878
    ss = v5879
    ds = v5880
    fs = v5881
    gs = v5882
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5884
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5886
    af = <top>
    ?5 = v5888
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5891
    if = v5892
    df = v5893
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5895
    iopl1 = v5896
    nt = v5897
    ?15 = v5898
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5870
    dx = v5871
    bx = v5872
    sp = v5874+0x4 [from 0x8048432:pop    ebp]
    bp = v5990 [from 0x8048432:pop    ebp]
    si = v5875
    di = v5876
    es = v5877
    cs = v5878
    ss = v5879
    ds = v5880
    fs = v5881
    gs = v5882
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5884
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5886
    af = <top>
    ?5 = v5888
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5891
    if = v5892
    df = v5893
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5895
    iopl1 = v5896
    nt = v5897
    ?15 = v5898
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5870
    dx = v5871
    bx = v5872
    sp = v5874+0x8 [from 0x8048433:ret    ]
    bp = v5990 [from 0x8048432:pop    ebp]
    si = v5875
    di = v5876
    es = v5877
    cs = v5878
    ss = v5879
    ds = v5880
    fs = v5881
    gs = v5882
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5884
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5886
    af = <top>
    ?5 = v5888
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5891
    if = v5892
    df = v5893
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5895
    iopl1 = v5896
    nt = v5897
    ?15 = v5898
    memory = {}
    ip = v6028 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v6090
    cx = v6091
    dx = v6092
    bx = v6093
    sp = v6094-0x4 [from 0x8048440:push   ebp]
    bp = v6095
    si = v6096
    di = v6097
    es = v6098
    cs = v6099
    ss = v6100
    ds = v6101
    fs = v6102
    gs = v6103
    cf = v6104
    ?1 = v6105
    pf = v6106
    ?3 = v6107
    af = v6108
    ?5 = v6109
    zf = v6110
    sf = v6111
    tf = v6112
    if = v6113
    df = v6114
    of = v6115
    iopl0 = v6116
    iopl1 = v6117
    nt = v6118
    ?15 = v6119
    memory = {
        size=4; addr=v6094-0x4 [from 0x8048440:push   ebp]; value=v6095
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v6090
    cx = v6091
    dx = v6092
    bx = v6093
    sp = v6094-0x4 [from 0x8048440:push   ebp]
    bp = v6094-0x4 [from 0x8048440:push   ebp]
    si = v6096
    di = v6097
    es = v6098
    cs = v6099
    ss = v6100
    ds = v6101
    fs = v6102
    gs = v6103
    cf = v6104
    ?1 = v6105
    pf = v6106
    ?3 = v6107
    af = v6108
    ?5 = v6109
    zf = v6110
    sf = v6111
    tf = v6112
    if = v6113
    df = v6114
    of = v6115
    iopl0 = v6116
    iopl1 = v6117
    nt = v6118
    ?15 = v6119
    memory = {
        size=4; addr=v6094-0x4 [from 0x8048440:push   ebp]; value=v6095
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v6090
    cx = v6091
    dx = v6092
    bx = v6093
    sp = v6094-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v6094-0x4 [from 0x8048440:push   ebp]
    si = v6096
    di = v6097
    es = v6098
    cs = v6099
    ss = v6100
    ds = v6101
    fs = v6102
    gs = v6103
    cf = -v6221-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6105
    pf = -v6215-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6107
    af = -v6219-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6109
    zf = v6218 [from 0x8048443:sub    esp, 0x08]
    sf = v6217 [from 0x8048443:sub    esp, 0x08]
    tf = v6112
    if = v6113
    df = v6114
    of = v6225 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6116
    iopl1 = v6117
    nt = v6118
    ?15 = v6119
    memory = {
        size=4; addr=v6094-0x4 [from 0x8048440:push   ebp]; value=v6095
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6090
    cx = v6091
    dx = v6092
    bx = v6093
    sp = v6094-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v6094-0x4 [from 0x8048440:push   ebp]
    si = v6096
    di = v6097
    es = v6098
    cs = v6099
    ss = v6100
    ds = v6101
    fs = v6102
    gs = v6103
    cf = -v6221-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6105
    pf = -v6215-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6107
    af = -v6219-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6109
    zf = v6218 [from 0x8048443:sub    esp, 0x08]
    sf = v6217 [from 0x8048443:sub    esp, 0x08]
    tf = v6112
    if = v6113
    df = v6114
    of = v6225 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6116
    iopl1 = v6117
    nt = v6118
    ?15 = v6119
    memory = {
        size=4; addr=v6094-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6094-0x4 [from 0x8048440:push   ebp]; value=v6095
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v6090
    cx = v6091
    dx = v6092
    bx = v6093
    sp = v6094-0x10 [from 0x804844d:call   0x08048300]
    bp = v6094-0x4 [from 0x8048440:push   ebp]
    si = v6096
    di = v6097
    es = v6098
    cs = v6099
    ss = v6100
    ds = v6101
    fs = v6102
    gs = v6103
    cf = -v6221-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6105
    pf = -v6215-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6107
    af = -v6219-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6109
    zf = v6218 [from 0x8048443:sub    esp, 0x08]
    sf = v6217 [from 0x8048443:sub    esp, 0x08]
    tf = v6112
    if = v6113
    df = v6114
    of = v6225 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6116
    iopl1 = v6117
    nt = v6118
    ?15 = v6119
    memory = {
        size=4; addr=v6094-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v6094-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6094-0x4 [from 0x8048440:push   ebp]; value=v6095
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v6479
    cx = v6480
    dx = v6481
    bx = v6482
    sp = v6484
    bp = v6484
    si = v6485
    di = v6486
    es = v6487
    cs = v6488
    ss = v6489
    ds = v6490
    fs = v6491
    gs = v6492
    cf = v6493
    ?1 = v6494
    pf = v6495
    ?3 = v6496
    af = v6497
    ?5 = v6498
    zf = v6499
    sf = v6500
    tf = v6501
    if = v6502
    df = v6503
    of = v6504
    iopl0 = v6505
    iopl1 = v6506
    nt = v6507
    ?15 = v6508
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v6479
    cx = v6480
    dx = v6481
    bx = v6482
    sp = v6484+0x4 [from 0x8048454:pop    ebp]
    bp = v6545 [from 0x8048454:pop    ebp]
    si = v6485
    di = v6486
    es = v6487
    cs = v6488
    ss = v6489
    ds = v6490
    fs = v6491
    gs = v6492
    cf = v6493
    ?1 = v6494
    pf = v6495
    ?3 = v6496
    af = v6497
    ?5 = v6498
    zf = v6499
    sf = v6500
    tf = v6501
    if = v6502
    df = v6503
    of = v6504
    iopl0 = v6505
    iopl1 = v6506
    nt = v6507
    ?15 = v6508
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v6479
    cx = v6480
    dx = v6481
    bx = v6482
    sp = v6484+0x8 [from 0x8048455:ret    ]
    bp = v6545 [from 0x8048454:pop    ebp]
    si = v6485
    di = v6486
    es = v6487
    cs = v6488
    ss = v6489
    ds = v6490
    fs = v6491
    gs = v6492
    cf = v6493
    ?1 = v6494
    pf = v6495
    ?3 = v6496
    af = v6497
    ?5 = v6498
    zf = v6499
    sf = v6500
    tf = v6501
    if = v6502
    df = v6503
    of = v6504
    iopl0 = v6505
    iopl1 = v6506
    nt = v6507
    ?15 = v6508
    memory = {}
    ip = v6583 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v6645
    cx = v6646
    dx = v6647
    bx = v6648
    sp = v6649-0x4 [from 0x8048460:push   ebp]
    bp = v6650
    si = v6651
    di = v6652
    es = v6653
    cs = v6654
    ss = v6655
    ds = v6656
    fs = v6657
    gs = v6658
    cf = v6659
    ?1 = v6660
    pf = v6661
    ?3 = v6662
    af = v6663
    ?5 = v6664
    zf = v6665
    sf = v6666
    tf = v6667
    if = v6668
    df = v6669
    of = v6670
    iopl0 = v6671
    iopl1 = v6672
    nt = v6673
    ?15 = v6674
    memory = {
        size=4; addr=v6649-0x4 [from 0x8048460:push   ebp]; value=v6650
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v6645
    cx = v6646
    dx = v6647
    bx = v6648
    sp = v6649-0x4 [from 0x8048460:push   ebp]
    bp = v6649-0x4 [from 0x8048460:push   ebp]
    si = v6651
    di = v6652
    es = v6653
    cs = v6654
    ss = v6655
    ds = v6656
    fs = v6657
    gs = v6658
    cf = v6659
    ?1 = v6660
    pf = v6661
    ?3 = v6662
    af = v6663
    ?5 = v6664
    zf = v6665
    sf = v6666
    tf = v6667
    if = v6668
    df = v6669
    of = v6670
    iopl0 = v6671
    iopl1 = v6672
    nt = v6673
    ?15 = v6674
    memory = {
        size=4; addr=v6649-0x4 [from 0x8048460:push   ebp]; value=v6650
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v6645
    cx = v6646
    dx = v6647
    bx = v6648
    sp = v6649-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v6649-0x4 [from 0x8048460:push   ebp]
    si = v6651
    di = v6652
    es = v6653
    cs = v6654
    ss = v6655
    ds = v6656
    fs = v6657
    gs = v6658
    cf = -v6776-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6660
    pf = -v6770-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6662
    af = -v6774-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6664
    zf = v6773 [from 0x8048463:sub    esp, 0x08]
    sf = v6772 [from 0x8048463:sub    esp, 0x08]
    tf = v6667
    if = v6668
    df = v6669
    of = v6780 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6671
    iopl1 = v6672
    nt = v6673
    ?15 = v6674
    memory = {
        size=4; addr=v6649-0x4 [from 0x8048460:push   ebp]; value=v6650
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6645
    cx = v6646
    dx = v6647
    bx = v6648
    sp = v6649-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v6649-0x4 [from 0x8048460:push   ebp]
    si = v6651
    di = v6652
    es = v6653
    cs = v6654
    ss = v6655
    ds = v6656
    fs = v6657
    gs = v6658
    cf = -v6776-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6660
    pf = -v6770-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6662
    af = -v6774-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6664
    zf = v6773 [from 0x8048463:sub    esp, 0x08]
    sf = v6772 [from 0x8048463:sub    esp, 0x08]
    tf = v6667
    if = v6668
    df = v6669
    of = v6780 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6671
    iopl1 = v6672
    nt = v6673
    ?15 = v6674
    memory = {
        size=4; addr=v6649-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6649-0x4 [from 0x8048460:push   ebp]; value=v6650
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v6645
    cx = v6646
    dx = v6647
    bx = v6648
    sp = v6649-0x10 [from 0x804846d:call   0x08048300]
    bp = v6649-0x4 [from 0x8048460:push   ebp]
    si = v6651
    di = v6652
    es = v6653
    cs = v6654
    ss = v6655
    ds = v6656
    fs = v6657
    gs = v6658
    cf = -v6776-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6660
    pf = -v6770-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6662
    af = -v6774-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6664
    zf = v6773 [from 0x8048463:sub    esp, 0x08]
    sf = v6772 [from 0x8048463:sub    esp, 0x08]
    tf = v6667
    if = v6668
    df = v6669
    of = v6780 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6671
    iopl1 = v6672
    nt = v6673
    ?15 = v6674
    memory = {
        size=4; addr=v6649-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v6649-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6649-0x4 [from 0x8048460:push   ebp]; value=v6650
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7034
    cx = v7035
    dx = v7036
    bx = v7037
    sp = v7038
    bp = v7039
    si = v7040
    di = v7041
    es = v7042
    cs = v7043
    ss = v7044
    ds = v7045
    fs = v7046
    gs = v7047
    cf = v7048
    ?1 = v7049
    pf = v7050
    ?3 = v7051
    af = v7052
    ?5 = v7053
    zf = v7054
    sf = v7055
    tf = v7056
    if = v7057
    df = v7058
    of = v7059
    iopl0 = v7060
    iopl1 = v7061
    nt = v7062
    ?15 = v7063
    memory = {
        size=4; addr=v7038; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v7034
    cx = v7035
    dx = v7036
    bx = v7037
    sp = v7038-0x4 [from 0x8048479:call   0x08048320]
    bp = v7039
    si = v7040
    di = v7041
    es = v7042
    cs = v7043
    ss = v7044
    ds = v7045
    fs = v7046
    gs = v7047
    cf = v7048
    ?1 = v7049
    pf = v7050
    ?3 = v7051
    af = v7052
    ?5 = v7053
    zf = v7054
    sf = v7055
    tf = v7056
    if = v7057
    df = v7058
    of = v7059
    iopl0 = v7060
    iopl1 = v7061
    nt = v7062
    ?15 = v7063
    memory = {
        size=4; addr=v7038; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7038-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v7286
    cx = v7287
    dx = v7288
    bx = v7289
    sp = v7290-0x4 [from 0x8048480:push   ebp]
    bp = v7291
    si = v7292
    di = v7293
    es = v7294
    cs = v7295
    ss = v7296
    ds = v7297
    fs = v7298
    gs = v7299
    cf = v7300
    ?1 = v7301
    pf = v7302
    ?3 = v7303
    af = v7304
    ?5 = v7305
    zf = v7306
    sf = v7307
    tf = v7308
    if = v7309
    df = v7310
    of = v7311
    iopl0 = v7312
    iopl1 = v7313
    nt = v7314
    ?15 = v7315
    memory = {
        size=4; addr=v7290-0x4 [from 0x8048480:push   ebp]; value=v7291
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v7286
    cx = v7287
    dx = v7288
    bx = v7289
    sp = v7290-0x4 [from 0x8048480:push   ebp]
    bp = v7290-0x4 [from 0x8048480:push   ebp]
    si = v7292
    di = v7293
    es = v7294
    cs = v7295
    ss = v7296
    ds = v7297
    fs = v7298
    gs = v7299
    cf = v7300
    ?1 = v7301
    pf = v7302
    ?3 = v7303
    af = v7304
    ?5 = v7305
    zf = v7306
    sf = v7307
    tf = v7308
    if = v7309
    df = v7310
    of = v7311
    iopl0 = v7312
    iopl1 = v7313
    nt = v7314
    ?15 = v7315
    memory = {
        size=4; addr=v7290-0x4 [from 0x8048480:push   ebp]; value=v7291
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v7286
    cx = v7287
    dx = v7288
    bx = v7289
    sp = v7290-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7290-0x4 [from 0x8048480:push   ebp]
    si = v7292
    di = v7293
    es = v7294
    cs = v7295
    ss = v7296
    ds = v7297
    fs = v7298
    gs = v7299
    cf = -v7417-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7301
    pf = -v7411-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v7303
    af = -v7415-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v7305
    zf = v7414 [from 0x8048483:sub    esp, 0x08]
    sf = v7413 [from 0x8048483:sub    esp, 0x08]
    tf = v7308
    if = v7309
    df = v7310
    of = v7421 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v7312
    iopl1 = v7313
    nt = v7314
    ?15 = v7315
    memory = {
        size=4; addr=v7290-0x4 [from 0x8048480:push   ebp]; value=v7291
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v7286
    cx = v7287
    dx = v7288
    bx = v7289
    sp = v7290-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7290-0x4 [from 0x8048480:push   ebp]
    si = v7292
    di = v7293
    es = v7294
    cs = v7295
    ss = v7296
    ds = v7297
    fs = v7298
    gs = v7299
    cf = -v7417-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7301
    pf = -v7481-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7303
    af = v7485 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7305
    zf = v7484 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7483 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7308
    if = v7309
    df = v7310
    of = v7488 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7312
    iopl1 = v7313
    nt = v7314
    ?15 = v7315
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v7456+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7286
    cx = v7287
    dx = v7288
    bx = v7289
    sp = v7290-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7290-0x4 [from 0x8048480:push   ebp]
    si = v7292
    di = v7293
    es = v7294
    cs = v7295
    ss = v7296
    ds = v7297
    fs = v7298
    gs = v7299
    cf = -v7417-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7301
    pf = -v7481-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7303
    af = v7485 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7305
    zf = v7484 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7483 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7308
    if = v7309
    df = v7310
    of = v7488 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7312
    iopl1 = v7313
    nt = v7314
    ?15 = v7315
    memory = {
        size=4; addr=v7290-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v7286
    cx = v7287
    dx = v7288
    bx = v7289
    sp = v7290-0x10 [from 0x8048493:call   0x08048300]
    bp = v7290-0x4 [from 0x8048480:push   ebp]
    si = v7292
    di = v7293
    es = v7294
    cs = v7295
    ss = v7296
    ds = v7297
    fs = v7298
    gs = v7299
    cf = -v7417-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7301
    pf = -v7481-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7303
    af = v7485 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7305
    zf = v7484 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7483 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7308
    if = v7309
    df = v7310
    of = v7488 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7312
    iopl1 = v7313
    nt = v7314
    ?15 = v7315
    memory = {
        size=4; addr=v7290-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v7290-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7745
    cx = v7746
    dx = v7747
    bx = v7748
    sp = v7749
    bp = v7750
    si = v7751
    di = v7752
    es = v7753
    cs = v7754
    ss = v7755
    ds = v7756
    fs = v7757
    gs = v7758
    cf = v7759
    ?1 = v7760
    pf = v7761
    ?3 = v7762
    af = v7763
    ?5 = v7764
    zf = v7765
    sf = v7766
    tf = v7767
    if = v7768
    df = v7769
    of = v7770
    iopl0 = v7771
    iopl1 = v7772
    nt = v7773
    ?15 = v7774
    memory = {
        size=4; addr=v7749; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v7745
    cx = v7746
    dx = v7747
    bx = v7748
    sp = v7749-0x4 [from 0x804849f:call   0x08048320]
    bp = v7750
    si = v7751
    di = v7752
    es = v7753
    cs = v7754
    ss = v7755
    ds = v7756
    fs = v7757
    gs = v7758
    cf = v7759
    ?1 = v7760
    pf = v7761
    ?3 = v7762
    af = v7763
    ?5 = v7764
    zf = v7765
    sf = v7766
    tf = v7767
    if = v7768
    df = v7769
    of = v7770
    iopl0 = v7771
    iopl1 = v7772
    nt = v7773
    ?15 = v7774
    memory = {
        size=4; addr=v7749; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7749-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    ax = v7997
    cx = v7998
    dx = v7999
    bx = v8000
    sp = v8001-0x4 [from 0x80484b0:push   ebp]
    bp = v8002
    si = v8003
    di = v8004
    es = v8005
    cs = v8006
    ss = v8007
    ds = v8008
    fs = v8009
    gs = v8010
    cf = v8011
    ?1 = v8012
    pf = v8013
    ?3 = v8014
    af = v8015
    ?5 = v8016
    zf = v8017
    sf = v8018
    tf = v8019
    if = v8020
    df = v8021
    of = v8022
    iopl0 = v8023
    iopl1 = v8024
    nt = v8025
    ?15 = v8026
    memory = {
        size=4; addr=v8001-0x4 [from 0x80484b0:push   ebp]; value=v8002
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v7997
    cx = v7998
    dx = v7999
    bx = v8000
    sp = v8001-0x4 [from 0x80484b0:push   ebp]
    bp = v8001-0x4 [from 0x80484b0:push   ebp]
    si = v8003
    di = v8004
    es = v8005
    cs = v8006
    ss = v8007
    ds = v8008
    fs = v8009
    gs = v8010
    cf = v8011
    ?1 = v8012
    pf = v8013
    ?3 = v8014
    af = v8015
    ?5 = v8016
    zf = v8017
    sf = v8018
    tf = v8019
    if = v8020
    df = v8021
    of = v8022
    iopl0 = v8023
    iopl1 = v8024
    nt = v8025
    ?15 = v8026
    memory = {
        size=4; addr=v8001-0x4 [from 0x80484b0:push   ebp]; value=v8002
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v7997
    cx = v7998
    dx = v7999
    bx = v8000
    sp = v8001-0x8 [from 0x80484b3:push   edi]
    bp = v8001-0x4 [from 0x80484b0:push   ebp]
    si = v8003
    di = v8004
    es = v8005
    cs = v8006
    ss = v8007
    ds = v8008
    fs = v8009
    gs = v8010
    cf = v8011
    ?1 = v8012
    pf = v8013
    ?3 = v8014
    af = v8015
    ?5 = v8016
    zf = v8017
    sf = v8018
    tf = v8019
    if = v8020
    df = v8021
    of = v8022
    iopl0 = v8023
    iopl1 = v8024
    nt = v8025
    ?15 = v8026
    memory = {
        size=4; addr=v8001-0x8 [from 0x80484b3:push   edi]; value=v8004
        size=4; addr=v8001-0x4 [from 0x80484b0:push   ebp]; value=v8002
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v7997
    cx = v7998
    dx = v7999
    bx = v8000
    sp = v8001-0xc [from 0x80484b4:push   esi]
    bp = v8001-0x4 [from 0x80484b0:push   ebp]
    si = v8003
    di = v8004
    es = v8005
    cs = v8006
    ss = v8007
    ds = v8008
    fs = v8009
    gs = v8010
    cf = v8011
    ?1 = v8012
    pf = v8013
    ?3 = v8014
    af = v8015
    ?5 = v8016
    zf = v8017
    sf = v8018
    tf = v8019
    if = v8020
    df = v8021
    of = v8022
    iopl0 = v8023
    iopl1 = v8024
    nt = v8025
    ?15 = v8026
    memory = {
        size=4; addr=v8001-0xc [from 0x80484b4:push   esi]; value=v8003
        size=4; addr=v8001-0x8 [from 0x80484b3:push   edi]; value=v8004
        size=4; addr=v8001-0x4 [from 0x80484b0:push   ebp]; value=v8002
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v7997
    cx = v7998
    dx = v7999
    bx = v8000
    sp = v8001-0x10 [from 0x80484b5:push   ebx]
    bp = v8001-0x4 [from 0x80484b0:push   ebp]
    si = v8003
    di = v8004
    es = v8005
    cs = v8006
    ss = v8007
    ds = v8008
    fs = v8009
    gs = v8010
    cf = v8011
    ?1 = v8012
    pf = v8013
    ?3 = v8014
    af = v8015
    ?5 = v8016
    zf = v8017
    sf = v8018
    tf = v8019
    if = v8020
    df = v8021
    of = v8022
    iopl0 = v8023
    iopl1 = v8024
    nt = v8025
    ?15 = v8026
    memory = {
        size=4; addr=v8001-0x10 [from 0x80484b5:push   ebx]; value=v8000
        size=4; addr=v8001-0xc [from 0x80484b4:push   esi]; value=v8003
        size=4; addr=v8001-0x8 [from 0x80484b3:push   edi]; value=v8004
        size=4; addr=v8001-0x4 [from 0x80484b0:push   ebp]; value=v8002
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v7997
    cx = v7998
    dx = v7999
    bx = v8000
    sp = v8001-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v8001-0x4 [from 0x80484b0:push   ebp]
    si = v8003
    di = v8004
    es = v8005
    cs = v8006
    ss = v8007
    ds = v8008
    fs = v8009
    gs = v8010
    cf = -v8236-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8012
    pf = -v8230-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8014
    af = -v8234-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8016
    zf = v8233 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8232 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8019
    if = v8020
    df = v8021
    of = v8240 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8023
    iopl1 = v8024
    nt = v8025
    ?15 = v8026
    memory = {
        size=4; addr=v8001-0x10 [from 0x80484b5:push   ebx]; value=v8000
        size=4; addr=v8001-0xc [from 0x80484b4:push   esi]; value=v8003
        size=4; addr=v8001-0x8 [from 0x80484b3:push   edi]; value=v8004
        size=4; addr=v8001-0x4 [from 0x80484b0:push   ebp]; value=v8002
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v7997
    cx = v7998
    dx = v7999
    bx = v8000
    sp = v8001-0x20 [from 0x80484b9:call   0x080484be]
    bp = v8001-0x4 [from 0x80484b0:push   ebp]
    si = v8003
    di = v8004
    es = v8005
    cs = v8006
    ss = v8007
    ds = v8008
    fs = v8009
    gs = v8010
    cf = -v8236-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8012
    pf = -v8230-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8014
    af = -v8234-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8016
    zf = v8233 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8232 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8019
    if = v8020
    df = v8021
    of = v8240 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8023
    iopl1 = v8024
    nt = v8025
    ?15 = v8026
    memory = {
        size=4; addr=v8001-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v8001-0x10 [from 0x80484b5:push   ebx]; value=v8000
        size=4; addr=v8001-0xc [from 0x80484b4:push   esi]; value=v8003
        size=4; addr=v8001-0x8 [from 0x80484b3:push   edi]; value=v8004
        size=4; addr=v8001-0x4 [from 0x80484b0:push   ebp]; value=v8002
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v8369
    cx = v8370
    dx = v8371
    bx = v8403 [from 0x80484be:pop    ebx]
    sp = v8373+0x4 [from 0x80484be:pop    ebx]
    bp = v8374
    si = v8375
    di = v8376
    es = v8377
    cs = v8378
    ss = v8379
    ds = v8380
    fs = v8381
    gs = v8382
    cf = v8383
    ?1 = v8384
    pf = v8385
    ?3 = v8386
    af = v8387
    ?5 = v8388
    zf = v8389
    sf = v8390
    tf = v8391
    if = v8392
    df = v8393
    of = v8394
    iopl0 = v8395
    iopl1 = v8396
    nt = v8397
    ?15 = v8398
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v8369
    cx = v8370
    dx = v8371
    bx = v8403+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8373+0x4 [from 0x80484be:pop    ebx]
    bp = v8374
    si = v8375
    di = v8376
    es = v8377
    cs = v8378
    ss = v8379
    ds = v8380
    fs = v8381
    gs = v8382
    cf = v8465 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8384
    pf = -v8460-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8386
    af = v8464 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8388
    zf = v8463 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8462 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8391
    if = v8392
    df = v8393
    of = v8468 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8395
    iopl1 = v8396
    nt = v8397
    ?15 = v8398
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v8369
    cx = v8370
    dx = v8371
    bx = v8403+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8373 [from 0x80484c5:call   0x080482c8]
    bp = v8374
    si = v8375
    di = v8376
    es = v8377
    cs = v8378
    ss = v8379
    ds = v8380
    fs = v8381
    gs = v8382
    cf = v8465 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8384
    pf = -v8460-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8386
    af = v8464 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8388
    zf = v8463 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8462 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8391
    if = v8392
    df = v8393
    of = v8468 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8395
    iopl1 = v8396
    nt = v8397
    ?15 = v8398
    memory = {
        size=4; addr=v8373 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8690-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8688
    dx = v8689
    bx = v8690
    sp = v8691
    bp = v8692
    si = v8693
    di = v8694
    es = v8695
    cs = v8696
    ss = v8697
    ds = v8698
    fs = v8699
    gs = v8700
    cf = v8701
    ?1 = v8702
    pf = v8703
    ?3 = v8704
    af = v8705
    ?5 = v8706
    zf = v8707
    sf = v8708
    tf = v8709
    if = v8710
    df = v8711
    of = v8712
    iopl0 = v8713
    iopl1 = v8714
    nt = v8715
    ?15 = v8716
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8690-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8688
    dx = v8690-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8690
    sp = v8691
    bp = v8692
    si = v8693
    di = v8694
    es = v8695
    cs = v8696
    ss = v8697
    ds = v8698
    fs = v8699
    gs = v8700
    cf = v8701
    ?1 = v8702
    pf = v8703
    ?3 = v8704
    af = v8705
    ?5 = v8706
    zf = v8707
    sf = v8708
    tf = v8709
    if = v8710
    df = v8711
    of = v8712
    iopl0 = v8713
    iopl1 = v8714
    nt = v8715
    ?15 = v8716
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v17380 [from 0x80484d6:sub    eax, edx]
    cx = v8688
    dx = v8690-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8690
    sp = v8691
    bp = v8692
    si = v8693
    di = v8694
    es = v8695
    cs = v8696
    ss = v8697
    ds = v8698
    fs = v8699
    gs = v8700
    cf = -v8817-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v8702
    pf = -v8811-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v8704
    af = -v8815-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v8706
    zf = v8814 [from 0x80484d6:sub    eax, edx]
    sf = v8813 [from 0x80484d6:sub    eax, edx]
    tf = v8709
    if = v8710
    df = v8711
    of = v8821 [from 0x80484d6:sub    eax, edx]
    iopl0 = v8713
    iopl1 = v8714
    nt = v8715
    ?15 = v8716
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v8860 [from 0x80484d8:sar    eax, 0x02]
    cx = v8688
    dx = v8690-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8690
    sp = v8691
    bp = v8692
    si = v8693
    di = v8694
    es = v8695
    cs = v8696
    ss = v8697
    ds = v8698
    fs = v8699
    gs = v8700
    cf = v8863 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8702
    pf = -v8883-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8704
    af = <top>
    ?5 = v8706
    zf = v8888 [from 0x80484d8:sar    eax, 0x02]
    sf = v8886 [from 0x80484d8:sar    eax, 0x02]
    tf = v8709
    if = v8710
    df = v8711
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8713
    iopl1 = v8714
    nt = v8715
    ?15 = v8716
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v8860 [from 0x80484d8:sar    eax, 0x02]
    cx = v8688
    dx = v8690-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8690
    sp = v8691
    bp = v8692
    si = v8693
    di = v8694
    es = v8695
    cs = v8696
    ss = v8697
    ds = v8698
    fs = v8699
    gs = v8700
    cf = v8863 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8702
    pf = -v8883-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8704
    af = <top>
    ?5 = v8706
    zf = v8888 [from 0x80484d8:sar    eax, 0x02]
    sf = v8886 [from 0x80484d8:sar    eax, 0x02]
    tf = v8709
    if = v8710
    df = v8711
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8713
    iopl1 = v8714
    nt = v8715
    ?15 = v8716
    memory = {
        size=4; addr=v8692-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8860 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v8860 [from 0x80484d8:sar    eax, 0x02]
    cx = v8688
    dx = v8690-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8690
    sp = v8691
    bp = v8692
    si = v8693
    di = v8694
    es = v8695
    cs = v8696
    ss = v8697
    ds = v8698
    fs = v8699
    gs = v8700
    cf = v8863 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8702
    pf = -v8883-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8704
    af = <top>
    ?5 = v8706
    zf = v8888 [from 0x80484d8:sar    eax, 0x02]
    sf = v8886 [from 0x80484d8:sar    eax, 0x02]
    tf = v8709
    if = v8710
    df = v8711
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8713
    iopl1 = v8714
    nt = v8715
    ?15 = v8716
    memory = {
        size=4; addr=v8692-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8860 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v8960 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v9082
    cx = v9083
    dx = v9084
    bx = v9085
    sp = v9086+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v9087
    si = v9088
    di = v9089
    es = v9090
    cs = v9091
    ss = v9092
    ds = v9093
    fs = v9094
    gs = v9095
    cf = v9142 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9097
    pf = -v9137-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9099
    af = v9141 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9101
    zf = v9140 [from 0x80484e0:add    esp, 0x0c]
    sf = v9139 [from 0x80484e0:add    esp, 0x0c]
    tf = v9104
    if = v9105
    df = v9106
    of = v9145 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9108
    iopl1 = v9109
    nt = v9110
    ?15 = v9111
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v9082
    cx = v9083
    dx = v9084
    bx = v9181 [from 0x80484e3:pop    ebx]
    sp = v9086+0x10 [from 0x80484e3:pop    ebx]
    bp = v9087
    si = v9088
    di = v9089
    es = v9090
    cs = v9091
    ss = v9092
    ds = v9093
    fs = v9094
    gs = v9095
    cf = v9142 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9097
    pf = -v9137-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9099
    af = v9141 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9101
    zf = v9140 [from 0x80484e0:add    esp, 0x0c]
    sf = v9139 [from 0x80484e0:add    esp, 0x0c]
    tf = v9104
    if = v9105
    df = v9106
    of = v9145 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9108
    iopl1 = v9109
    nt = v9110
    ?15 = v9111
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v9082
    cx = v9083
    dx = v9084
    bx = v9181 [from 0x80484e3:pop    ebx]
    sp = v9086+0x14 [from 0x80484e4:pop    esi]
    bp = v9087
    si = v9217 [from 0x80484e4:pop    esi]
    di = v9089
    es = v9090
    cs = v9091
    ss = v9092
    ds = v9093
    fs = v9094
    gs = v9095
    cf = v9142 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9097
    pf = -v9137-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9099
    af = v9141 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9101
    zf = v9140 [from 0x80484e0:add    esp, 0x0c]
    sf = v9139 [from 0x80484e0:add    esp, 0x0c]
    tf = v9104
    if = v9105
    df = v9106
    of = v9145 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9108
    iopl1 = v9109
    nt = v9110
    ?15 = v9111
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v9082
    cx = v9083
    dx = v9084
    bx = v9181 [from 0x80484e3:pop    ebx]
    sp = v9086+0x18 [from 0x80484e5:pop    edi]
    bp = v9087
    si = v9217 [from 0x80484e4:pop    esi]
    di = v9253 [from 0x80484e5:pop    edi]
    es = v9090
    cs = v9091
    ss = v9092
    ds = v9093
    fs = v9094
    gs = v9095
    cf = v9142 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9097
    pf = -v9137-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9099
    af = v9141 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9101
    zf = v9140 [from 0x80484e0:add    esp, 0x0c]
    sf = v9139 [from 0x80484e0:add    esp, 0x0c]
    tf = v9104
    if = v9105
    df = v9106
    of = v9145 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9108
    iopl1 = v9109
    nt = v9110
    ?15 = v9111
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v9082
    cx = v9083
    dx = v9084
    bx = v9181 [from 0x80484e3:pop    ebx]
    sp = v9086+0x1c [from 0x80484e6:pop    ebp]
    bp = v9289 [from 0x80484e6:pop    ebp]
    si = v9217 [from 0x80484e4:pop    esi]
    di = v9253 [from 0x80484e5:pop    edi]
    es = v9090
    cs = v9091
    ss = v9092
    ds = v9093
    fs = v9094
    gs = v9095
    cf = v9142 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9097
    pf = -v9137-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9099
    af = v9141 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9101
    zf = v9140 [from 0x80484e0:add    esp, 0x0c]
    sf = v9139 [from 0x80484e0:add    esp, 0x0c]
    tf = v9104
    if = v9105
    df = v9106
    of = v9145 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9108
    iopl1 = v9109
    nt = v9110
    ?15 = v9111
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v9082
    cx = v9083
    dx = v9084
    bx = v9181 [from 0x80484e3:pop    ebx]
    sp = v9086+0x20 [from 0x80484e7:ret    ]
    bp = v9289 [from 0x80484e6:pop    ebp]
    si = v9217 [from 0x80484e4:pop    esi]
    di = v9253 [from 0x80484e5:pop    edi]
    es = v9090
    cs = v9091
    ss = v9092
    ds = v9093
    fs = v9094
    gs = v9095
    cf = v9142 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9097
    pf = -v9137-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9099
    af = v9141 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9101
    zf = v9140 [from 0x80484e0:add    esp, 0x0c]
    sf = v9139 [from 0x80484e0:add    esp, 0x0c]
    tf = v9104
    if = v9105
    df = v9106
    of = v9145 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9108
    iopl1 = v9109
    nt = v9110
    ?15 = v9111
    memory = {}
    ip = v9327 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v9389
    cx = v9390
    dx = v9391
    bx = v9392
    sp = v9393-0x4 [from 0x8048520:push   ebp]
    bp = v9394
    si = v9395
    di = v9396
    es = v9397
    cs = v9398
    ss = v9399
    ds = v9400
    fs = v9401
    gs = v9402
    cf = v9403
    ?1 = v9404
    pf = v9405
    ?3 = v9406
    af = v9407
    ?5 = v9408
    zf = v9409
    sf = v9410
    tf = v9411
    if = v9412
    df = v9413
    of = v9414
    iopl0 = v9415
    iopl1 = v9416
    nt = v9417
    ?15 = v9418
    memory = {
        size=4; addr=v9393-0x4 [from 0x8048520:push   ebp]; value=v9394
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v9389
    cx = v9390
    dx = v9391
    bx = v9392
    sp = v9393-0x4 [from 0x8048520:push   ebp]
    bp = v9393-0x4 [from 0x8048520:push   ebp]
    si = v9395
    di = v9396
    es = v9397
    cs = v9398
    ss = v9399
    ds = v9400
    fs = v9401
    gs = v9402
    cf = v9403
    ?1 = v9404
    pf = v9405
    ?3 = v9406
    af = v9407
    ?5 = v9408
    zf = v9409
    sf = v9410
    tf = v9411
    if = v9412
    df = v9413
    of = v9414
    iopl0 = v9415
    iopl1 = v9416
    nt = v9417
    ?15 = v9418
    memory = {
        size=4; addr=v9393-0x4 [from 0x8048520:push   ebp]; value=v9394
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v9389
    cx = v9390
    dx = v9391
    bx = v9392
    sp = v9393-0x8 [from 0x8048523:push   edi]
    bp = v9393-0x4 [from 0x8048520:push   ebp]
    si = v9395
    di = v9396
    es = v9397
    cs = v9398
    ss = v9399
    ds = v9400
    fs = v9401
    gs = v9402
    cf = v9403
    ?1 = v9404
    pf = v9405
    ?3 = v9406
    af = v9407
    ?5 = v9408
    zf = v9409
    sf = v9410
    tf = v9411
    if = v9412
    df = v9413
    of = v9414
    iopl0 = v9415
    iopl1 = v9416
    nt = v9417
    ?15 = v9418
    memory = {
        size=4; addr=v9393-0x8 [from 0x8048523:push   edi]; value=v9396
        size=4; addr=v9393-0x4 [from 0x8048520:push   ebp]; value=v9394
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v9389
    cx = v9390
    dx = v9391
    bx = v9392
    sp = v9393-0xc [from 0x8048524:push   esi]
    bp = v9393-0x4 [from 0x8048520:push   ebp]
    si = v9395
    di = v9396
    es = v9397
    cs = v9398
    ss = v9399
    ds = v9400
    fs = v9401
    gs = v9402
    cf = v9403
    ?1 = v9404
    pf = v9405
    ?3 = v9406
    af = v9407
    ?5 = v9408
    zf = v9409
    sf = v9410
    tf = v9411
    if = v9412
    df = v9413
    of = v9414
    iopl0 = v9415
    iopl1 = v9416
    nt = v9417
    ?15 = v9418
    memory = {
        size=4; addr=v9393-0xc [from 0x8048524:push   esi]; value=v9395
        size=4; addr=v9393-0x8 [from 0x8048523:push   edi]; value=v9396
        size=4; addr=v9393-0x4 [from 0x8048520:push   ebp]; value=v9394
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v9389
    cx = v9390
    dx = v9391
    bx = v9392
    sp = v9393-0x10 [from 0x8048525:push   ebx]
    bp = v9393-0x4 [from 0x8048520:push   ebp]
    si = v9395
    di = v9396
    es = v9397
    cs = v9398
    ss = v9399
    ds = v9400
    fs = v9401
    gs = v9402
    cf = v9403
    ?1 = v9404
    pf = v9405
    ?3 = v9406
    af = v9407
    ?5 = v9408
    zf = v9409
    sf = v9410
    tf = v9411
    if = v9412
    df = v9413
    of = v9414
    iopl0 = v9415
    iopl1 = v9416
    nt = v9417
    ?15 = v9418
    memory = {
        size=4; addr=v9393-0x10 [from 0x8048525:push   ebx]; value=v9392
        size=4; addr=v9393-0xc [from 0x8048524:push   esi]; value=v9395
        size=4; addr=v9393-0x8 [from 0x8048523:push   edi]; value=v9396
        size=4; addr=v9393-0x4 [from 0x8048520:push   ebp]; value=v9394
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v9389
    cx = v9390
    dx = v9391
    bx = v9392
    sp = v9393-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v9393-0x4 [from 0x8048520:push   ebp]
    si = v9395
    di = v9396
    es = v9397
    cs = v9398
    ss = v9399
    ds = v9400
    fs = v9401
    gs = v9402
    cf = -v9628-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9404
    pf = -v9622-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9406
    af = -v9626-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9408
    zf = v9625 [from 0x8048526:sub    esp, 0x0c]
    sf = v9624 [from 0x8048526:sub    esp, 0x0c]
    tf = v9411
    if = v9412
    df = v9413
    of = v9632 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9415
    iopl1 = v9416
    nt = v9417
    ?15 = v9418
    memory = {
        size=4; addr=v9393-0x10 [from 0x8048525:push   ebx]; value=v9392
        size=4; addr=v9393-0xc [from 0x8048524:push   esi]; value=v9395
        size=4; addr=v9393-0x8 [from 0x8048523:push   edi]; value=v9396
        size=4; addr=v9393-0x4 [from 0x8048520:push   ebp]; value=v9394
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v9389
    cx = v9390
    dx = v9391
    bx = v9392
    sp = v9393-0x20 [from 0x8048529:call   0x0804852e]
    bp = v9393-0x4 [from 0x8048520:push   ebp]
    si = v9395
    di = v9396
    es = v9397
    cs = v9398
    ss = v9399
    ds = v9400
    fs = v9401
    gs = v9402
    cf = -v9628-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9404
    pf = -v9622-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9406
    af = -v9626-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9408
    zf = v9625 [from 0x8048526:sub    esp, 0x0c]
    sf = v9624 [from 0x8048526:sub    esp, 0x0c]
    tf = v9411
    if = v9412
    df = v9413
    of = v9632 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9415
    iopl1 = v9416
    nt = v9417
    ?15 = v9418
    memory = {
        size=4; addr=v9393-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v9393-0x10 [from 0x8048525:push   ebx]; value=v9392
        size=4; addr=v9393-0xc [from 0x8048524:push   esi]; value=v9395
        size=4; addr=v9393-0x8 [from 0x8048523:push   edi]; value=v9396
        size=4; addr=v9393-0x4 [from 0x8048520:push   ebp]; value=v9394
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v9761
    cx = v9762
    dx = v9763
    bx = v9795 [from 0x804852e:pop    ebx]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = v9775
    ?1 = v9776
    pf = v9777
    ?3 = v9778
    af = v9779
    ?5 = v9780
    zf = v9781
    sf = v9782
    tf = v9783
    if = v9784
    df = v9785
    of = v9786
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v9761
    cx = v9762
    dx = v9763
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = v9857 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9776
    pf = -v9852-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9778
    af = v9856 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9780
    zf = v9855 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9854 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9783
    if = v9784
    df = v9785
    of = v9860 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9795+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9762
    dx = v9763
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = v9857 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9776
    pf = -v9852-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9778
    af = v9856 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9780
    zf = v9855 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9854 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9783
    if = v9784
    df = v9785
    of = v9860 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9795+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9762
    dx = v9795+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = v9857 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9776
    pf = -v9852-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9778
    af = v9856 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9780
    zf = v9855 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9854 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9783
    if = v9784
    df = v9785
    of = v9860 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v19590 [from 0x8048541:sub    eax, edx]
    cx = v9762
    dx = v9795+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = -v9992-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v9776
    pf = -v9986-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v9778
    af = -v9990-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v9780
    zf = v9989 [from 0x8048541:sub    eax, edx]
    sf = v9988 [from 0x8048541:sub    eax, edx]
    tf = v9783
    if = v9784
    df = v9785
    of = v9996 [from 0x8048541:sub    eax, edx]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v10035 [from 0x8048543:sar    eax, 0x02]
    cx = v9762
    dx = v9795+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = v10038 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9776
    pf = -v10058-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v9778
    af = <top>
    ?5 = v9780
    zf = v10063 [from 0x8048543:sar    eax, 0x02]
    sf = v10061 [from 0x8048543:sar    eax, 0x02]
    tf = v9783
    if = v9784
    df = v9785
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v10035 [from 0x8048543:sar    eax, 0x02]
    cx = v9762
    dx = v9795+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = v10038 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9776
    pf = -v10058-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v9778
    af = <top>
    ?5 = v9780
    zf = v10063 [from 0x8048543:sar    eax, 0x02]
    sf = v10061 [from 0x8048543:sar    eax, 0x02]
    tf = v9783
    if = v9784
    df = v9785
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {
        size=4; addr=v9766-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10035 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v10035-0x1 [from 0x8048549:dec    eax]
    cx = v9762
    dx = v9795+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = v10038 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9776
    pf = -v10157-0x1 [from 0x8048549:dec    eax]
    ?3 = v9778
    af = -v10161-0x1 [from 0x8048549:dec    eax]
    ?5 = v9780
    zf = v10160 [from 0x8048549:dec    eax]
    sf = v10159 [from 0x8048549:dec    eax]
    tf = v9783
    if = v9784
    df = v9785
    of = v10165 [from 0x8048549:dec    eax]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {
        size=4; addr=v9766-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10035 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v10035-0x1 [from 0x8048549:dec    eax]
    cx = v9762
    dx = v9795+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = -v10230-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v9776
    pf = -v10224-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v9778
    af = -v10228-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v9780
    zf = v10227 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10226 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v9783
    if = v9784
    df = v9785
    of = v10234 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {
        size=4; addr=v9766-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10035 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v10035-0x1 [from 0x8048549:dec    eax]
    cx = v9762
    dx = v9795+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9795+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9765+0x4 [from 0x804852e:pop    ebx]
    bp = v9766
    si = v9767
    di = v9768
    es = v9769
    cs = v9770
    ss = v9771
    ds = v9772
    fs = v9773
    gs = v9774
    cf = -v10230-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v9776
    pf = -v10224-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v9778
    af = -v10228-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v9780
    zf = v10227 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10226 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v9783
    if = v9784
    df = v9785
    of = v10234 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v9787
    iopl1 = v9788
    nt = v9789
    ?15 = v9790
    memory = {
        size=4; addr=v9766-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10035 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v10268 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v10390
    cx = v10391
    dx = v10392
    bx = v10393
    sp = v10394-0x4 [from 0x804856b:call   0x080485b0]
    bp = v10395
    si = v10396
    di = v10397
    es = v10398
    cs = v10399
    ss = v10400
    ds = v10401
    fs = v10402
    gs = v10403
    cf = v10404
    ?1 = v10405
    pf = v10406
    ?3 = v10407
    af = v10408
    ?5 = v10409
    zf = v10410
    sf = v10411
    tf = v10412
    if = v10413
    df = v10414
    of = v10415
    iopl0 = v10416
    iopl1 = v10417
    nt = v10418
    ?15 = v10419
    memory = {
        size=4; addr=v10394-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v10607
    cx = v10608
    dx = v10609
    bx = v10610
    sp = v10611+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v10612
    si = v10613
    di = v10614
    es = v10615
    cs = v10616
    ss = v10617
    ds = v10618
    fs = v10619
    gs = v10620
    cf = v10667 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10622
    pf = -v10662-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10624
    af = v10666 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10626
    zf = v10665 [from 0x8048570:add    esp, 0x0c]
    sf = v10664 [from 0x8048570:add    esp, 0x0c]
    tf = v10629
    if = v10630
    df = v10631
    of = v10670 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10633
    iopl1 = v10634
    nt = v10635
    ?15 = v10636
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v10607
    cx = v10608
    dx = v10609
    bx = v10706 [from 0x8048573:pop    ebx]
    sp = v10611+0x10 [from 0x8048573:pop    ebx]
    bp = v10612
    si = v10613
    di = v10614
    es = v10615
    cs = v10616
    ss = v10617
    ds = v10618
    fs = v10619
    gs = v10620
    cf = v10667 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10622
    pf = -v10662-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10624
    af = v10666 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10626
    zf = v10665 [from 0x8048570:add    esp, 0x0c]
    sf = v10664 [from 0x8048570:add    esp, 0x0c]
    tf = v10629
    if = v10630
    df = v10631
    of = v10670 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10633
    iopl1 = v10634
    nt = v10635
    ?15 = v10636
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v10607
    cx = v10608
    dx = v10609
    bx = v10706 [from 0x8048573:pop    ebx]
    sp = v10611+0x14 [from 0x8048574:pop    esi]
    bp = v10612
    si = v10742 [from 0x8048574:pop    esi]
    di = v10614
    es = v10615
    cs = v10616
    ss = v10617
    ds = v10618
    fs = v10619
    gs = v10620
    cf = v10667 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10622
    pf = -v10662-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10624
    af = v10666 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10626
    zf = v10665 [from 0x8048570:add    esp, 0x0c]
    sf = v10664 [from 0x8048570:add    esp, 0x0c]
    tf = v10629
    if = v10630
    df = v10631
    of = v10670 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10633
    iopl1 = v10634
    nt = v10635
    ?15 = v10636
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v10607
    cx = v10608
    dx = v10609
    bx = v10706 [from 0x8048573:pop    ebx]
    sp = v10611+0x18 [from 0x8048575:pop    edi]
    bp = v10612
    si = v10742 [from 0x8048574:pop    esi]
    di = v10778 [from 0x8048575:pop    edi]
    es = v10615
    cs = v10616
    ss = v10617
    ds = v10618
    fs = v10619
    gs = v10620
    cf = v10667 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10622
    pf = -v10662-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10624
    af = v10666 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10626
    zf = v10665 [from 0x8048570:add    esp, 0x0c]
    sf = v10664 [from 0x8048570:add    esp, 0x0c]
    tf = v10629
    if = v10630
    df = v10631
    of = v10670 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10633
    iopl1 = v10634
    nt = v10635
    ?15 = v10636
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v10607
    cx = v10608
    dx = v10609
    bx = v10706 [from 0x8048573:pop    ebx]
    sp = v10611+0x1c [from 0x8048576:pop    ebp]
    bp = v10814 [from 0x8048576:pop    ebp]
    si = v10742 [from 0x8048574:pop    esi]
    di = v10778 [from 0x8048575:pop    edi]
    es = v10615
    cs = v10616
    ss = v10617
    ds = v10618
    fs = v10619
    gs = v10620
    cf = v10667 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10622
    pf = -v10662-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10624
    af = v10666 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10626
    zf = v10665 [from 0x8048570:add    esp, 0x0c]
    sf = v10664 [from 0x8048570:add    esp, 0x0c]
    tf = v10629
    if = v10630
    df = v10631
    of = v10670 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10633
    iopl1 = v10634
    nt = v10635
    ?15 = v10636
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v10607
    cx = v10608
    dx = v10609
    bx = v10706 [from 0x8048573:pop    ebx]
    sp = v10611+0x20 [from 0x8048577:ret    ]
    bp = v10814 [from 0x8048576:pop    ebp]
    si = v10742 [from 0x8048574:pop    esi]
    di = v10778 [from 0x8048575:pop    edi]
    es = v10615
    cs = v10616
    ss = v10617
    ds = v10618
    fs = v10619
    gs = v10620
    cf = v10667 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10622
    pf = -v10662-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10624
    af = v10666 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10626
    zf = v10665 [from 0x8048570:add    esp, 0x0c]
    sf = v10664 [from 0x8048570:add    esp, 0x0c]
    tf = v10629
    if = v10630
    df = v10631
    of = v10670 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10633
    iopl1 = v10634
    nt = v10635
    ?15 = v10636
    memory = {}
    ip = v10852 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    ax = v10914
    cx = v10915
    dx = v10916
    bx = v10917
    sp = v10918-0x4 [from 0x8048580:push   ebp]
    bp = v10919
    si = v10920
    di = v10921
    es = v10922
    cs = v10923
    ss = v10924
    ds = v10925
    fs = v10926
    gs = v10927
    cf = v10928
    ?1 = v10929
    pf = v10930
    ?3 = v10931
    af = v10932
    ?5 = v10933
    zf = v10934
    sf = v10935
    tf = v10936
    if = v10937
    df = v10938
    of = v10939
    iopl0 = v10940
    iopl1 = v10941
    nt = v10942
    ?15 = v10943
    memory = {
        size=4; addr=v10918-0x4 [from 0x8048580:push   ebp]; value=v10919
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v10914
    cx = v10915
    dx = v10916
    bx = v10917
    sp = v10918-0x4 [from 0x8048580:push   ebp]
    bp = v10918-0x4 [from 0x8048580:push   ebp]
    si = v10920
    di = v10921
    es = v10922
    cs = v10923
    ss = v10924
    ds = v10925
    fs = v10926
    gs = v10927
    cf = v10928
    ?1 = v10929
    pf = v10930
    ?3 = v10931
    af = v10932
    ?5 = v10933
    zf = v10934
    sf = v10935
    tf = v10936
    if = v10937
    df = v10938
    of = v10939
    iopl0 = v10940
    iopl1 = v10941
    nt = v10942
    ?15 = v10943
    memory = {
        size=4; addr=v10918-0x4 [from 0x8048580:push   ebp]; value=v10919
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v10914
    cx = v10915
    dx = v10916
    bx = v10917
    sp = v10918-0x8 [from 0x8048583:push   ebx]
    bp = v10918-0x4 [from 0x8048580:push   ebp]
    si = v10920
    di = v10921
    es = v10922
    cs = v10923
    ss = v10924
    ds = v10925
    fs = v10926
    gs = v10927
    cf = v10928
    ?1 = v10929
    pf = v10930
    ?3 = v10931
    af = v10932
    ?5 = v10933
    zf = v10934
    sf = v10935
    tf = v10936
    if = v10937
    df = v10938
    of = v10939
    iopl0 = v10940
    iopl1 = v10941
    nt = v10942
    ?15 = v10943
    memory = {
        size=4; addr=v10918-0x8 [from 0x8048583:push   ebx]; value=v10917
        size=4; addr=v10918-0x4 [from 0x8048580:push   ebp]; value=v10919
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v10914
    cx = v10915
    dx = v10916
    bx = v10917
    sp = v10918-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10918-0x4 [from 0x8048580:push   ebp]
    si = v10920
    di = v10921
    es = v10922
    cs = v10923
    ss = v10924
    ds = v10925
    fs = v10926
    gs = v10927
    cf = -v11081-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10929
    pf = -v11075-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10931
    af = -v11079-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10933
    zf = v11078 [from 0x8048584:sub    esp, 0x04]
    sf = v11077 [from 0x8048584:sub    esp, 0x04]
    tf = v10936
    if = v10937
    df = v10938
    of = v11085 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10940
    iopl1 = v10941
    nt = v10942
    ?15 = v10943
    memory = {
        size=4; addr=v10918-0x8 [from 0x8048583:push   ebx]; value=v10917
        size=4; addr=v10918-0x4 [from 0x8048580:push   ebp]; value=v10919
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v10914
    cx = v10915
    dx = v10916
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10918-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10918-0x4 [from 0x8048580:push   ebp]
    si = v10920
    di = v10921
    es = v10922
    cs = v10923
    ss = v10924
    ds = v10925
    fs = v10926
    gs = v10927
    cf = -v11081-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10929
    pf = -v11075-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10931
    af = -v11079-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10933
    zf = v11078 [from 0x8048584:sub    esp, 0x04]
    sf = v11077 [from 0x8048584:sub    esp, 0x04]
    tf = v10936
    if = v10937
    df = v10938
    of = v11085 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10940
    iopl1 = v10941
    nt = v10942
    ?15 = v10943
    memory = {
        size=4; addr=v10918-0x8 [from 0x8048583:push   ebx]; value=v10917
        size=4; addr=v10918-0x4 [from 0x8048580:push   ebp]; value=v10919
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v11153 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10915
    dx = v10916
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10918-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10918-0x4 [from 0x8048580:push   ebp]
    si = v10920
    di = v10921
    es = v10922
    cs = v10923
    ss = v10924
    ds = v10925
    fs = v10926
    gs = v10927
    cf = -v11081-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10929
    pf = -v11075-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10931
    af = -v11079-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10933
    zf = v11078 [from 0x8048584:sub    esp, 0x04]
    sf = v11077 [from 0x8048584:sub    esp, 0x04]
    tf = v10936
    if = v10937
    df = v10938
    of = v11085 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10940
    iopl1 = v10941
    nt = v10942
    ?15 = v10943
    memory = {
        size=4; addr=v10918-0x8 [from 0x8048583:push   ebx]; value=v10917
        size=4; addr=v10918-0x4 [from 0x8048580:push   ebp]; value=v10919
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v11153 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10915
    dx = v10916
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10918-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10918-0x4 [from 0x8048580:push   ebp]
    si = v10920
    di = v10921
    es = v10922
    cs = v10923
    ss = v10924
    ds = v10925
    fs = v10926
    gs = v10927
    cf = -v11218-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v10929
    pf = -v11212-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v10931
    af = -v11216-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v10933
    zf = v11215 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v11214 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v10936
    if = v10937
    df = v10938
    of = v11222 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v10940
    iopl1 = v10941
    nt = v10942
    ?15 = v10943
    memory = {
        size=4; addr=v10918-0x8 [from 0x8048583:push   ebx]; value=v10917
        size=4; addr=v10918-0x4 [from 0x8048580:push   ebp]; value=v10919
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v11153 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10915
    dx = v10916
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10918-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10918-0x4 [from 0x8048580:push   ebp]
    si = v10920
    di = v10921
    es = v10922
    cs = v10923
    ss = v10924
    ds = v10925
    fs = v10926
    gs = v10927
    cf = -v11218-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v10929
    pf = -v11212-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v10931
    af = -v11216-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v10933
    zf = v11215 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v11214 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v10936
    if = v10937
    df = v10938
    of = v11222 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v10940
    iopl1 = v10941
    nt = v10942
    ?15 = v10943
    memory = {
        size=4; addr=v10918-0x8 [from 0x8048583:push   ebx]; value=v10917
        size=4; addr=v10918-0x4 [from 0x8048580:push   ebp]; value=v10919
    }
    ip = v11256 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v11378
    cx = v11379
    dx = v11380
    bx = v11381
    sp = v11382
    bp = v11383
    si = v11384 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11385
    es = v11386
    cs = v11387
    ss = v11388
    ds = v11389
    fs = v11390
    gs = v11391
    cf = v11392
    ?1 = v11393
    pf = v11394
    ?3 = v11395
    af = v11396
    ?5 = v11397
    zf = v11398
    sf = v11399
    tf = v11400
    if = v11401
    df = v11402
    of = v11403
    iopl0 = v11404
    iopl1 = v11405
    nt = v11406
    ?15 = v11407
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v11378
    cx = v11379
    dx = v11380
    bx = v11381
    sp = v11382
    bp = v11383
    si = v11384 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11385 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11386
    cs = v11387
    ss = v11388
    ds = v11389
    fs = v11390
    gs = v11391
    cf = v11392
    ?1 = v11393
    pf = v11394
    ?3 = v11395
    af = v11396
    ?5 = v11397
    zf = v11398
    sf = v11399
    tf = v11400
    if = v11401
    df = v11402
    of = v11403
    iopl0 = v11404
    iopl1 = v11405
    nt = v11406
    ?15 = v11407
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v11378
    cx = v11379
    dx = v11380
    bx = v11381-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v11382
    bp = v11383
    si = v11384 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11385 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11386
    cs = v11387
    ss = v11388
    ds = v11389
    fs = v11390
    gs = v11391
    cf = -v11509-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v11393
    pf = -v11503-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v11395
    af = -v11507-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v11397
    zf = v11506 [from 0x80485a0:sub    ebx, 0x04]
    sf = v11505 [from 0x80485a0:sub    ebx, 0x04]
    tf = v11400
    if = v11401
    df = v11402
    of = v11513 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v11404
    iopl1 = v11405
    nt = v11406
    ?15 = v11407
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v11378
    cx = v11379
    dx = v11380
    bx = v11381-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v11382-0x4 [from 0x80485a3:call   eax]
    bp = v11383
    si = v11384 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11385 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11386
    cs = v11387
    ss = v11388
    ds = v11389
    fs = v11390
    gs = v11391
    cf = -v11509-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v11393
    pf = -v11503-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v11395
    af = -v11507-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v11397
    zf = v11506 [from 0x80485a0:sub    ebx, 0x04]
    sf = v11505 [from 0x80485a0:sub    ebx, 0x04]
    tf = v11400
    if = v11401
    df = v11402
    of = v11513 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v11404
    iopl1 = v11405
    nt = v11406
    ?15 = v11407
    memory = {
        size=4; addr=v11382-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v11378
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v11733 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11702
    dx = v11703
    bx = v11704
    sp = v11705
    bp = v11706
    si = v11707
    di = v11708
    es = v11709
    cs = v11710
    ss = v11711
    ds = v11712
    fs = v11713
    gs = v11714
    cf = v11715
    ?1 = v11716
    pf = v11717
    ?3 = v11718
    af = v11719
    ?5 = v11720
    zf = v11721
    sf = v11722
    tf = v11723
    if = v11724
    df = v11725
    of = v11726
    iopl0 = v11727
    iopl1 = v11728
    nt = v11729
    ?15 = v11730
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v11733 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11702
    dx = v11703
    bx = v11704
    sp = v11705
    bp = v11706
    si = v11707
    di = v11708
    es = v11709
    cs = v11710
    ss = v11711
    ds = v11712
    fs = v11713
    gs = v11714
    cf = -v11798-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v11716
    pf = -v11792-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v11718
    af = -v11796-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v11720
    zf = v11795 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v11794 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v11723
    if = v11724
    df = v11725
    of = v11802 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v11727
    iopl1 = v11728
    nt = v11729
    ?15 = v11730
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v11733 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11702
    dx = v11703
    bx = v11704
    sp = v11705
    bp = v11706
    si = v11707
    di = v11708
    es = v11709
    cs = v11710
    ss = v11711
    ds = v11712
    fs = v11713
    gs = v11714
    cf = -v11798-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v11716
    pf = -v11792-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v11718
    af = -v11796-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v11720
    zf = v11795 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v11794 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v11723
    if = v11724
    df = v11725
    of = v11802 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v11727
    iopl1 = v11728
    nt = v11729
    ?15 = v11730
    memory = {}
    ip = v11837 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v11993 [from 0x80485ac:pop    eax]
    cx = v11960
    dx = v11961
    bx = v11962
    sp = v11963+0x4 [from 0x80485ac:pop    eax]
    bp = v11964
    si = v11965
    di = v11966
    es = v11967
    cs = v11968
    ss = v11969
    ds = v11970
    fs = v11971
    gs = v11972
    cf = v11973
    ?1 = v11974
    pf = v11975
    ?3 = v11976
    af = v11977
    ?5 = v11978
    zf = v11979
    sf = v11980
    tf = v11981
    if = v11982
    df = v11983
    of = v11984
    iopl0 = v11985
    iopl1 = v11986
    nt = v11987
    ?15 = v11988
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v11993 [from 0x80485ac:pop    eax]
    cx = v11960
    dx = v11961
    bx = v12029 [from 0x80485ad:pop    ebx]
    sp = v11963+0x8 [from 0x80485ad:pop    ebx]
    bp = v11964
    si = v11965
    di = v11966
    es = v11967
    cs = v11968
    ss = v11969
    ds = v11970
    fs = v11971
    gs = v11972
    cf = v11973
    ?1 = v11974
    pf = v11975
    ?3 = v11976
    af = v11977
    ?5 = v11978
    zf = v11979
    sf = v11980
    tf = v11981
    if = v11982
    df = v11983
    of = v11984
    iopl0 = v11985
    iopl1 = v11986
    nt = v11987
    ?15 = v11988
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v11993 [from 0x80485ac:pop    eax]
    cx = v11960
    dx = v11961
    bx = v12029 [from 0x80485ad:pop    ebx]
    sp = v11963+0xc [from 0x80485ae:pop    ebp]
    bp = v12065 [from 0x80485ae:pop    ebp]
    si = v11965
    di = v11966
    es = v11967
    cs = v11968
    ss = v11969
    ds = v11970
    fs = v11971
    gs = v11972
    cf = v11973
    ?1 = v11974
    pf = v11975
    ?3 = v11976
    af = v11977
    ?5 = v11978
    zf = v11979
    sf = v11980
    tf = v11981
    if = v11982
    df = v11983
    of = v11984
    iopl0 = v11985
    iopl1 = v11986
    nt = v11987
    ?15 = v11988
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v11993 [from 0x80485ac:pop    eax]
    cx = v11960
    dx = v11961
    bx = v12029 [from 0x80485ad:pop    ebx]
    sp = v11963+0x10 [from 0x80485af:ret    ]
    bp = v12065 [from 0x80485ae:pop    ebp]
    si = v11965
    di = v11966
    es = v11967
    cs = v11968
    ss = v11969
    ds = v11970
    fs = v11971
    gs = v11972
    cf = v11973
    ?1 = v11974
    pf = v11975
    ?3 = v11976
    af = v11977
    ?5 = v11978
    zf = v11979
    sf = v11980
    tf = v11981
    if = v11982
    df = v11983
    of = v11984
    iopl0 = v11985
    iopl1 = v11986
    nt = v11987
    ?15 = v11988
    memory = {}
    ip = v12103 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v12165
    cx = v12166
    dx = v12167
    bx = v12168
    sp = v12169-0x4 [from 0x80485b0:push   ebp]
    bp = v12170
    si = v12171
    di = v12172
    es = v12173
    cs = v12174
    ss = v12175
    ds = v12176
    fs = v12177
    gs = v12178
    cf = v12179
    ?1 = v12180
    pf = v12181
    ?3 = v12182
    af = v12183
    ?5 = v12184
    zf = v12185
    sf = v12186
    tf = v12187
    if = v12188
    df = v12189
    of = v12190
    iopl0 = v12191
    iopl1 = v12192
    nt = v12193
    ?15 = v12194
    memory = {
        size=4; addr=v12169-0x4 [from 0x80485b0:push   ebp]; value=v12170
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v12165
    cx = v12166
    dx = v12167
    bx = v12168
    sp = v12169-0x4 [from 0x80485b0:push   ebp]
    bp = v12169-0x4 [from 0x80485b0:push   ebp]
    si = v12171
    di = v12172
    es = v12173
    cs = v12174
    ss = v12175
    ds = v12176
    fs = v12177
    gs = v12178
    cf = v12179
    ?1 = v12180
    pf = v12181
    ?3 = v12182
    af = v12183
    ?5 = v12184
    zf = v12185
    sf = v12186
    tf = v12187
    if = v12188
    df = v12189
    of = v12190
    iopl0 = v12191
    iopl1 = v12192
    nt = v12193
    ?15 = v12194
    memory = {
        size=4; addr=v12169-0x4 [from 0x80485b0:push   ebp]; value=v12170
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v12165
    cx = v12166
    dx = v12167
    bx = v12168
    sp = v12169-0x8 [from 0x80485b3:push   ebx]
    bp = v12169-0x4 [from 0x80485b0:push   ebp]
    si = v12171
    di = v12172
    es = v12173
    cs = v12174
    ss = v12175
    ds = v12176
    fs = v12177
    gs = v12178
    cf = v12179
    ?1 = v12180
    pf = v12181
    ?3 = v12182
    af = v12183
    ?5 = v12184
    zf = v12185
    sf = v12186
    tf = v12187
    if = v12188
    df = v12189
    of = v12190
    iopl0 = v12191
    iopl1 = v12192
    nt = v12193
    ?15 = v12194
    memory = {
        size=4; addr=v12169-0x8 [from 0x80485b3:push   ebx]; value=v12168
        size=4; addr=v12169-0x4 [from 0x80485b0:push   ebp]; value=v12170
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v12165
    cx = v12166
    dx = v12167
    bx = v12168
    sp = v12169-0xc [from 0x80485b4:push   eax]
    bp = v12169-0x4 [from 0x80485b0:push   ebp]
    si = v12171
    di = v12172
    es = v12173
    cs = v12174
    ss = v12175
    ds = v12176
    fs = v12177
    gs = v12178
    cf = v12179
    ?1 = v12180
    pf = v12181
    ?3 = v12182
    af = v12183
    ?5 = v12184
    zf = v12185
    sf = v12186
    tf = v12187
    if = v12188
    df = v12189
    of = v12190
    iopl0 = v12191
    iopl1 = v12192
    nt = v12193
    ?15 = v12194
    memory = {
        size=4; addr=v12169-0xc [from 0x80485b4:push   eax]; value=v12165
        size=4; addr=v12169-0x8 [from 0x80485b3:push   ebx]; value=v12168
        size=4; addr=v12169-0x4 [from 0x80485b0:push   ebp]; value=v12170
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v12165
    cx = v12166
    dx = v12167
    bx = v12168
    sp = v12169-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v12169-0x4 [from 0x80485b0:push   ebp]
    si = v12171
    di = v12172
    es = v12173
    cs = v12174
    ss = v12175
    ds = v12176
    fs = v12177
    gs = v12178
    cf = v12179
    ?1 = v12180
    pf = v12181
    ?3 = v12182
    af = v12183
    ?5 = v12184
    zf = v12185
    sf = v12186
    tf = v12187
    if = v12188
    df = v12189
    of = v12190
    iopl0 = v12191
    iopl1 = v12192
    nt = v12193
    ?15 = v12194
    memory = {
        size=4; addr=v12169-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v12169-0xc [from 0x80485b4:push   eax]; value=v12165
        size=4; addr=v12169-0x8 [from 0x80485b3:push   ebx]; value=v12168
        size=4; addr=v12169-0x4 [from 0x80485b0:push   ebp]; value=v12170
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v12432
    cx = v12433
    dx = v12434
    bx = v12466 [from 0x80485ba:pop    ebx]
    sp = v12436+0x4 [from 0x80485ba:pop    ebx]
    bp = v12437
    si = v12438
    di = v12439
    es = v12440
    cs = v12441
    ss = v12442
    ds = v12443
    fs = v12444
    gs = v12445
    cf = v12446
    ?1 = v12447
    pf = v12448
    ?3 = v12449
    af = v12450
    ?5 = v12451
    zf = v12452
    sf = v12453
    tf = v12454
    if = v12455
    df = v12456
    of = v12457
    iopl0 = v12458
    iopl1 = v12459
    nt = v12460
    ?15 = v12461
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v12432
    cx = v12433
    dx = v12434
    bx = v12466+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v12436+0x4 [from 0x80485ba:pop    ebx]
    bp = v12437
    si = v12438
    di = v12439
    es = v12440
    cs = v12441
    ss = v12442
    ds = v12443
    fs = v12444
    gs = v12445
    cf = v12528 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v12447
    pf = -v12523-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v12449
    af = v12527 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v12451
    zf = v12526 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v12525 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v12454
    if = v12455
    df = v12456
    of = v12531 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v12458
    iopl1 = v12459
    nt = v12460
    ?15 = v12461
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v12432
    cx = v12433
    dx = v12434
    bx = v12466+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v12436 [from 0x80485c1:call   0x08048390]
    bp = v12437
    si = v12438
    di = v12439
    es = v12440
    cs = v12441
    ss = v12442
    ds = v12443
    fs = v12444
    gs = v12445
    cf = v12528 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v12447
    pf = -v12523-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v12449
    af = v12527 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v12451
    zf = v12526 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v12525 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v12454
    if = v12455
    df = v12456
    of = v12531 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v12458
    iopl1 = v12459
    nt = v12460
    ?15 = v12461
    memory = {
        size=4; addr=v12436 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v12784 [from 0x80485c6:pop    eax]
    cx = v12751
    dx = v12752
    bx = v12753
    sp = v12754+0x4 [from 0x80485c6:pop    eax]
    bp = v12755
    si = v12756
    di = v12757
    es = v12758
    cs = v12759
    ss = v12760
    ds = v12761
    fs = v12762
    gs = v12763
    cf = v12764
    ?1 = v12765
    pf = v12766
    ?3 = v12767
    af = v12768
    ?5 = v12769
    zf = v12770
    sf = v12771
    tf = v12772
    if = v12773
    df = v12774
    of = v12775
    iopl0 = v12776
    iopl1 = v12777
    nt = v12778
    ?15 = v12779
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v12784 [from 0x80485c6:pop    eax]
    cx = v12751
    dx = v12752
    bx = v12820 [from 0x80485c7:pop    ebx]
    sp = v12754+0x8 [from 0x80485c7:pop    ebx]
    bp = v12755
    si = v12756
    di = v12757
    es = v12758
    cs = v12759
    ss = v12760
    ds = v12761
    fs = v12762
    gs = v12763
    cf = v12764
    ?1 = v12765
    pf = v12766
    ?3 = v12767
    af = v12768
    ?5 = v12769
    zf = v12770
    sf = v12771
    tf = v12772
    if = v12773
    df = v12774
    of = v12775
    iopl0 = v12776
    iopl1 = v12777
    nt = v12778
    ?15 = v12779
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v12784 [from 0x80485c6:pop    eax]
    cx = v12751
    dx = v12752
    bx = v12820 [from 0x80485c7:pop    ebx]
    sp = v12755+0x4 [from 0x80485c8:leave  ]
    bp = v12856 [from 0x80485c8:leave  ]
    si = v12756
    di = v12757
    es = v12758
    cs = v12759
    ss = v12760
    ds = v12761
    fs = v12762
    gs = v12763
    cf = v12764
    ?1 = v12765
    pf = v12766
    ?3 = v12767
    af = v12768
    ?5 = v12769
    zf = v12770
    sf = v12771
    tf = v12772
    if = v12773
    df = v12774
    of = v12775
    iopl0 = v12776
    iopl1 = v12777
    nt = v12778
    ?15 = v12779
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v12784 [from 0x80485c6:pop    eax]
    cx = v12751
    dx = v12752
    bx = v12820 [from 0x80485c7:pop    ebx]
    sp = v12755+0x8 [from 0x80485c9:ret    ]
    bp = v12856 [from 0x80485c8:leave  ]
    si = v12756
    di = v12757
    es = v12758
    cs = v12759
    ss = v12760
    ds = v12761
    fs = v12762
    gs = v12763
    cf = v12764
    ?1 = v12765
    pf = v12766
    ?3 = v12767
    af = v12768
    ?5 = v12769
    zf = v12770
    sf = v12771
    tf = v12772
    if = v12773
    df = v12774
    of = v12775
    iopl0 = v12776
    iopl1 = v12777
    nt = v12778
    ?15 = v12779
    memory = {}
    ip = v12894 [from 0x80485c9:ret    ]
analyzed headers: 1
