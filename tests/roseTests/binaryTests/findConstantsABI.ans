=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v100 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v100 [from 0x80482c8:push   ebp]
    bp = v135 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v213 [from 0x80482cb:sub    esp, 0x08]
    bp = v135 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v206-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v196-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v203-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v201 [from 0x80482cb:sub    esp, 0x08]
    sf = v199 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v211 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v255 [from 0x80482ce:call   0x08048364]
    bp = v135 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v206-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v196-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v203-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v201 [from 0x80482cb:sub    esp, 0x08]
    sf = v199 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v211 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v213-0x4 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v437
    cx = v438
    dx = v439
    bx = v440
    sp = v477 [from 0x80482d3:call   0x080483d0]
    bp = v442
    si = v443
    di = v444
    es = v445
    cs = v446
    ss = v447
    ds = v448
    fs = v449
    gs = v450
    cf = v451
    ?1 = v452
    pf = v453
    ?3 = v454
    af = v455
    ?5 = v456
    zf = v457
    sf = v458
    tf = v459
    if = v460
    df = v461
    of = v462
    iopl0 = v463
    iopl1 = v464
    nt = v465
    ?15 = v466
    memory = {
        size=4; addr=v441-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v659
    cx = v660
    dx = v661
    bx = v662
    sp = v699 [from 0x80482d8:call   0x08048580]
    bp = v664
    si = v665
    di = v666
    es = v667
    cs = v668
    ss = v669
    ds = v670
    fs = v671
    gs = v672
    cf = v673
    ?1 = v674
    pf = v675
    ?3 = v676
    af = v677
    ?5 = v678
    zf = v679
    sf = v680
    tf = v681
    if = v682
    df = v683
    of = v684
    iopl0 = v685
    iopl1 = v686
    nt = v687
    ?15 = v688
    memory = {
        size=4; addr=v663-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v881
    cx = v882
    dx = v883
    bx = v884
    sp = v921 [from 0x80482dd:leave  ]
    bp = v920 [from 0x80482dd:leave  ]
    si = v887
    di = v888
    es = v889
    cs = v890
    ss = v891
    ds = v892
    fs = v893
    gs = v894
    cf = v895
    ?1 = v896
    pf = v897
    ?3 = v898
    af = v899
    ?5 = v900
    zf = v901
    sf = v902
    tf = v903
    if = v904
    df = v905
    of = v906
    iopl0 = v907
    iopl1 = v908
    nt = v909
    ?15 = v910
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v881
    cx = v882
    dx = v883
    bx = v884
    sp = v963 [from 0x80482de:ret    ]
    bp = v920 [from 0x80482dd:leave  ]
    si = v887
    di = v888
    es = v889
    cs = v890
    ss = v891
    ds = v892
    fs = v893
    gs = v894
    cf = v895
    ?1 = v896
    pf = v897
    ?3 = v898
    af = v899
    ?5 = v900
    zf = v901
    sf = v902
    tf = v903
    if = v904
    df = v905
    of = v906
    iopl0 = v907
    iopl1 = v908
    nt = v909
    ?15 = v910
    memory = {}
    ip = v961 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v1025
    cx = v1026
    dx = v1027
    bx = v1028
    sp = v1029
    bp = v1030
    si = v1031
    di = v1032
    es = v1033
    cs = v1034
    ss = v1035
    ds = v1036
    fs = v1037
    gs = v1038
    cf = v1039
    ?1 = v1040
    pf = v1041
    ?3 = v1042
    af = v1043
    ?5 = v1044
    zf = v1045
    sf = v1046
    tf = v1047
    if = v1048
    df = v1049
    of = v1050
    iopl0 = v1051
    iopl1 = v1052
    nt = v1053
    ?15 = v1054
    memory = {}
    ip = v1059 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v1122
    cx = v1123
    dx = v1124
    bx = v1125
    sp = v1126
    bp = v1127
    si = v1128
    di = v1129
    es = v1130
    cs = v1131
    ss = v1132
    ds = v1133
    fs = v1134
    gs = v1135
    cf = v1136
    ?1 = v1137
    pf = v1138
    ?3 = v1139
    af = v1140
    ?5 = v1141
    zf = v1142
    sf = v1143
    tf = v1144
    if = v1145
    df = v1146
    of = v1147
    iopl0 = v1148
    iopl1 = v1149
    nt = v1150
    ?15 = v1151
    memory = {}
    ip = v1156 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v1219
    cx = v1220
    dx = v1221
    bx = v1222
    sp = v1223
    bp = v1224
    si = v1225
    di = v1226
    es = v1227
    cs = v1228
    ss = v1229
    ds = v1230
    fs = v1231
    gs = v1232
    cf = v1233
    ?1 = v1234
    pf = v1235
    ?3 = v1236
    af = v1237
    ?5 = v1238
    zf = v1239
    sf = v1240
    tf = v1241
    if = v1242
    df = v1243
    of = v1244
    iopl0 = v1245
    iopl1 = v1246
    nt = v1247
    ?15 = v1248
    memory = {}
    ip = v1253 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v1316
    cx = v1317
    dx = v1318
    bx = v1319
    sp = v1320
    bp = v1321
    si = v1322
    di = v1323
    es = v1324
    cs = v1325
    ss = v1326
    ds = v1327
    fs = v1328
    gs = v1329
    cf = v1330
    ?1 = v1331
    pf = v1332
    ?3 = v1333
    af = v1334
    ?5 = v1335
    zf = v1336
    sf = v1337
    tf = v1338
    if = v1339
    df = v1340
    of = v1341
    iopl0 = v1342
    iopl1 = v1343
    nt = v1344
    ?15 = v1345
    memory = {}
    ip = v1350 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1413
    cx = v1414
    dx = v1415
    bx = v1416
    sp = v1417
    bp = v1418
    si = v1419
    di = v1420
    es = v1421
    cs = v1422
    ss = v1423
    ds = v1424
    fs = v1425
    gs = v1426
    cf = v1427
    ?1 = v1428
    pf = v1429
    ?3 = v1430
    af = v1431
    ?5 = v1432
    zf = v1433
    sf = v1434
    tf = v1435
    if = v1436
    df = v1437
    of = v1438
    iopl0 = v1439
    iopl1 = v1440
    nt = v1441
    ?15 = v1442
    memory = {}
    ip = v1447 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1510
    cx = v1511
    dx = v1512
    bx = v1513
    sp = v1514
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1516
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1525
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1510
    cx = v1511
    dx = v1512
    bx = v1513
    sp = v1610 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1525
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1610 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1525
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1707 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1753 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v1707-0x4 [from 0x8048348:push   eax]; value=v1510
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1793 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v1753-0x4 [from 0x8048349:push   esp]; value=v1753 [from 0x8048348:push   eax]
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1833 [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v1793-0x4 [from 0x804834a:push   edx]; value=v1512
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1873 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v1833-0x4 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1913 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v1873-0x4 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1953 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v1913-0x4 [from 0x8048355:push   ecx]; value=v1648 [from 0x8048343:mov    ecx, esp]
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v1993 [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v1953-0x4 [from 0x8048356:push   esi]; value=v1613 [from 0x8048342:pop    esi]
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v2033 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v1993-0x4 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1510
    cx = v1648 [from 0x8048343:mov    ecx, esp]
    dx = v1512
    bx = v1513
    sp = v2075 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1613 [from 0x8048342:pop    esi]
    di = v1517
    es = v1518
    cs = v1519
    ss = v1520
    ds = v1521
    fs = v1522
    gs = v1523
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1525
    pf = -v1700-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1527
    af = <top>
    ?5 = v1529
    zf = v1705 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1703 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1532
    if = v1533
    df = v1534
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1536
    iopl1 = v1537
    nt = v1538
    ?15 = v1539
    memory = {
        size=4; addr=v2033-0x4 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v2257
    cx = v2258
    dx = v2259
    bx = v2260
    sp = v2261
    bp = v2262
    si = v2263
    di = v2264
    es = v2265
    cs = v2266
    ss = v2267
    ds = v2268
    fs = v2269
    gs = v2270
    cf = v2271
    ?1 = v2272
    pf = v2273
    ?3 = v2274
    af = v2275
    ?5 = v2276
    zf = v2277
    sf = v2278
    tf = v2279
    if = v2280
    df = v2281
    of = v2282
    iopl0 = v2283
    iopl1 = v2284
    nt = v2285
    ?15 = v2286
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    ax = v2352
    cx = v2353
    dx = v2354
    bx = v2355
    sp = v2390 [from 0x8048364:push   ebp]
    bp = v2357
    si = v2358
    di = v2359
    es = v2360
    cs = v2361
    ss = v2362
    ds = v2363
    fs = v2364
    gs = v2365
    cf = v2366
    ?1 = v2367
    pf = v2368
    ?3 = v2369
    af = v2370
    ?5 = v2371
    zf = v2372
    sf = v2373
    tf = v2374
    if = v2375
    df = v2376
    of = v2377
    iopl0 = v2378
    iopl1 = v2379
    nt = v2380
    ?15 = v2381
    memory = {
        size=4; addr=v2356-0x4 [from 0x8048364:push   ebp]; value=v2357
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v2352
    cx = v2353
    dx = v2354
    bx = v2355
    sp = v2390 [from 0x8048364:push   ebp]
    bp = v2425 [from 0x8048365:mov    ebp, esp]
    si = v2358
    di = v2359
    es = v2360
    cs = v2361
    ss = v2362
    ds = v2363
    fs = v2364
    gs = v2365
    cf = v2366
    ?1 = v2367
    pf = v2368
    ?3 = v2369
    af = v2370
    ?5 = v2371
    zf = v2372
    sf = v2373
    tf = v2374
    if = v2375
    df = v2376
    of = v2377
    iopl0 = v2378
    iopl1 = v2379
    nt = v2380
    ?15 = v2381
    memory = {
        size=4; addr=v2356-0x4 [from 0x8048364:push   ebp]; value=v2357
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v2352
    cx = v2353
    dx = v2354
    bx = v2355
    sp = v2465 [from 0x8048367:push   ebx]
    bp = v2425 [from 0x8048365:mov    ebp, esp]
    si = v2358
    di = v2359
    es = v2360
    cs = v2361
    ss = v2362
    ds = v2363
    fs = v2364
    gs = v2365
    cf = v2366
    ?1 = v2367
    pf = v2368
    ?3 = v2369
    af = v2370
    ?5 = v2371
    zf = v2372
    sf = v2373
    tf = v2374
    if = v2375
    df = v2376
    of = v2377
    iopl0 = v2378
    iopl1 = v2379
    nt = v2380
    ?15 = v2381
    memory = {
        size=4; addr=v2390-0x4 [from 0x8048367:push   ebx]; value=v2355
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v2352
    cx = v2353
    dx = v2354
    bx = v2355
    sp = v2505 [from 0x8048368:push   ecx]
    bp = v2425 [from 0x8048365:mov    ebp, esp]
    si = v2358
    di = v2359
    es = v2360
    cs = v2361
    ss = v2362
    ds = v2363
    fs = v2364
    gs = v2365
    cf = v2366
    ?1 = v2367
    pf = v2368
    ?3 = v2369
    af = v2370
    ?5 = v2371
    zf = v2372
    sf = v2373
    tf = v2374
    if = v2375
    df = v2376
    of = v2377
    iopl0 = v2378
    iopl1 = v2379
    nt = v2380
    ?15 = v2381
    memory = {
        size=4; addr=v2465-0x4 [from 0x8048368:push   ecx]; value=v2353
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v2352
    cx = v2353
    dx = v2354
    bx = v2355
    sp = v2547 [from 0x8048369:call   0x0804836e]
    bp = v2425 [from 0x8048365:mov    ebp, esp]
    si = v2358
    di = v2359
    es = v2360
    cs = v2361
    ss = v2362
    ds = v2363
    fs = v2364
    gs = v2365
    cf = v2366
    ?1 = v2367
    pf = v2368
    ?3 = v2369
    af = v2370
    ?5 = v2371
    zf = v2372
    sf = v2373
    tf = v2374
    if = v2375
    df = v2376
    of = v2377
    iopl0 = v2378
    iopl1 = v2379
    nt = v2380
    ?15 = v2381
    memory = {
        size=4; addr=v2505-0x4 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2639
    cx = v2640
    dx = v2641
    bx = v2677 [from 0x804836e:pop    ebx]
    sp = v2674 [from 0x804836e:pop    ebx]
    bp = v2644
    si = v2645
    di = v2646
    es = v2647
    cs = v2648
    ss = v2649
    ds = v2650
    fs = v2651
    gs = v2652
    cf = v2653
    ?1 = v2654
    pf = v2655
    ?3 = v2656
    af = v2657
    ?5 = v2658
    zf = v2659
    sf = v2660
    tf = v2661
    if = v2662
    df = v2663
    of = v2664
    iopl0 = v2665
    iopl1 = v2666
    nt = v2667
    ?15 = v2668
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2639
    cx = v2640
    dx = v2641
    bx = v2751 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2674 [from 0x804836e:pop    ebx]
    bp = v2644
    si = v2645
    di = v2646
    es = v2647
    cs = v2648
    ss = v2649
    ds = v2650
    fs = v2651
    gs = v2652
    cf = v2745 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2654
    pf = -v2736-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2656
    af = v2743 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2658
    zf = v2741 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2739 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2661
    if = v2662
    df = v2663
    of = v2749 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2665
    iopl1 = v2666
    nt = v2667
    ?15 = v2668
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2639
    cx = v2640
    dx = v2790 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2751 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2674 [from 0x804836e:pop    ebx]
    bp = v2644
    si = v2645
    di = v2646
    es = v2647
    cs = v2648
    ss = v2649
    ds = v2650
    fs = v2651
    gs = v2652
    cf = v2745 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2654
    pf = -v2736-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2656
    af = v2743 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2658
    zf = v2741 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2739 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2661
    if = v2662
    df = v2663
    of = v2749 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2665
    iopl1 = v2666
    nt = v2667
    ?15 = v2668
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2639
    cx = v2640
    dx = v2790 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2751 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2674 [from 0x804836e:pop    ebx]
    bp = v2644
    si = v2645
    di = v2646
    es = v2647
    cs = v2648
    ss = v2649
    ds = v2650
    fs = v2651
    gs = v2652
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2654
    pf = -v2842-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2656
    af = <top>
    ?5 = v2658
    zf = v2847 [from 0x804837b:test   edx, edx]
    sf = v2845 [from 0x804837b:test   edx, edx]
    tf = v2661
    if = v2662
    df = v2663
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2665
    iopl1 = v2666
    nt = v2667
    ?15 = v2668
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2639
    cx = v2640
    dx = v2790 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2751 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2674 [from 0x804836e:pop    ebx]
    bp = v2644
    si = v2645
    di = v2646
    es = v2647
    cs = v2648
    ss = v2649
    ds = v2650
    fs = v2651
    gs = v2652
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2654
    pf = -v2842-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2656
    af = <top>
    ?5 = v2658
    zf = v2847 [from 0x804837b:test   edx, edx]
    sf = v2845 [from 0x804837b:test   edx, edx]
    tf = v2661
    if = v2662
    df = v2663
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2665
    iopl1 = v2666
    nt = v2667
    ?15 = v2668
    memory = {}
    ip = v2891 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v3014
    cx = v3015
    dx = v3016
    bx = v3017
    sp = v3054 [from 0x804837f:call   0x08048330]
    bp = v3019
    si = v3020
    di = v3021
    es = v3022
    cs = v3023
    ss = v3024
    ds = v3025
    fs = v3026
    gs = v3027
    cf = v3028
    ?1 = v3029
    pf = v3030
    ?3 = v3031
    af = v3032
    ?5 = v3033
    zf = v3034
    sf = v3035
    tf = v3036
    if = v3037
    df = v3038
    of = v3039
    iopl0 = v3040
    iopl1 = v3041
    nt = v3042
    ?15 = v3043
    memory = {
        size=4; addr=v3018-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v3274 [from 0x8048384:pop    eax]
    cx = v3237
    dx = v3238
    bx = v3239
    sp = v3271 [from 0x8048384:pop    eax]
    bp = v3241
    si = v3242
    di = v3243
    es = v3244
    cs = v3245
    ss = v3246
    ds = v3247
    fs = v3248
    gs = v3249
    cf = v3250
    ?1 = v3251
    pf = v3252
    ?3 = v3253
    af = v3254
    ?5 = v3255
    zf = v3256
    sf = v3257
    tf = v3258
    if = v3259
    df = v3260
    of = v3261
    iopl0 = v3262
    iopl1 = v3263
    nt = v3264
    ?15 = v3265
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v3274 [from 0x8048384:pop    eax]
    cx = v3237
    dx = v3238
    bx = v3314 [from 0x8048385:pop    ebx]
    sp = v3311 [from 0x8048385:pop    ebx]
    bp = v3241
    si = v3242
    di = v3243
    es = v3244
    cs = v3245
    ss = v3246
    ds = v3247
    fs = v3248
    gs = v3249
    cf = v3250
    ?1 = v3251
    pf = v3252
    ?3 = v3253
    af = v3254
    ?5 = v3255
    zf = v3256
    sf = v3257
    tf = v3258
    if = v3259
    df = v3260
    of = v3261
    iopl0 = v3262
    iopl1 = v3263
    nt = v3264
    ?15 = v3265
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v3274 [from 0x8048384:pop    eax]
    cx = v3237
    dx = v3238
    bx = v3314 [from 0x8048385:pop    ebx]
    sp = v3356 [from 0x8048386:leave  ]
    bp = v3355 [from 0x8048386:leave  ]
    si = v3242
    di = v3243
    es = v3244
    cs = v3245
    ss = v3246
    ds = v3247
    fs = v3248
    gs = v3249
    cf = v3250
    ?1 = v3251
    pf = v3252
    ?3 = v3253
    af = v3254
    ?5 = v3255
    zf = v3256
    sf = v3257
    tf = v3258
    if = v3259
    df = v3260
    of = v3261
    iopl0 = v3262
    iopl1 = v3263
    nt = v3264
    ?15 = v3265
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v3274 [from 0x8048384:pop    eax]
    cx = v3237
    dx = v3238
    bx = v3314 [from 0x8048385:pop    ebx]
    sp = v3398 [from 0x8048387:ret    ]
    bp = v3355 [from 0x8048386:leave  ]
    si = v3242
    di = v3243
    es = v3244
    cs = v3245
    ss = v3246
    ds = v3247
    fs = v3248
    gs = v3249
    cf = v3250
    ?1 = v3251
    pf = v3252
    ?3 = v3253
    af = v3254
    ?5 = v3255
    zf = v3256
    sf = v3257
    tf = v3258
    if = v3259
    df = v3260
    of = v3261
    iopl0 = v3262
    iopl1 = v3263
    nt = v3264
    ?15 = v3265
    memory = {}
    ip = v3396 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    ax = v3460
    cx = v3461
    dx = v3462
    bx = v3463
    sp = v3498 [from 0x8048390:push   ebp]
    bp = v3465
    si = v3466
    di = v3467
    es = v3468
    cs = v3469
    ss = v3470
    ds = v3471
    fs = v3472
    gs = v3473
    cf = v3474
    ?1 = v3475
    pf = v3476
    ?3 = v3477
    af = v3478
    ?5 = v3479
    zf = v3480
    sf = v3481
    tf = v3482
    if = v3483
    df = v3484
    of = v3485
    iopl0 = v3486
    iopl1 = v3487
    nt = v3488
    ?15 = v3489
    memory = {
        size=4; addr=v3464-0x4 [from 0x8048390:push   ebp]; value=v3465
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v3460
    cx = v3461
    dx = v3462
    bx = v3463
    sp = v3498 [from 0x8048390:push   ebp]
    bp = v3533 [from 0x8048391:mov    ebp, esp]
    si = v3466
    di = v3467
    es = v3468
    cs = v3469
    ss = v3470
    ds = v3471
    fs = v3472
    gs = v3473
    cf = v3474
    ?1 = v3475
    pf = v3476
    ?3 = v3477
    af = v3478
    ?5 = v3479
    zf = v3480
    sf = v3481
    tf = v3482
    if = v3483
    df = v3484
    of = v3485
    iopl0 = v3486
    iopl1 = v3487
    nt = v3488
    ?15 = v3489
    memory = {
        size=4; addr=v3464-0x4 [from 0x8048390:push   ebp]; value=v3465
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v3460
    cx = v3461
    dx = v3462
    bx = v3463
    sp = v3611 [from 0x8048393:sub    esp, 0x08]
    bp = v3533 [from 0x8048391:mov    ebp, esp]
    si = v3466
    di = v3467
    es = v3468
    cs = v3469
    ss = v3470
    ds = v3471
    fs = v3472
    gs = v3473
    cf = -v3604-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v3475
    pf = -v3594-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v3477
    af = -v3601-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v3479
    zf = v3599 [from 0x8048393:sub    esp, 0x08]
    sf = v3597 [from 0x8048393:sub    esp, 0x08]
    tf = v3482
    if = v3483
    df = v3484
    of = v3609 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v3486
    iopl1 = v3487
    nt = v3488
    ?15 = v3489
    memory = {
        size=4; addr=v3464-0x4 [from 0x8048390:push   ebp]; value=v3465
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v3460
    cx = v3461
    dx = v3462
    bx = v3463
    sp = v3611 [from 0x8048393:sub    esp, 0x08]
    bp = v3533 [from 0x8048391:mov    ebp, esp]
    si = v3466
    di = v3467
    es = v3468
    cs = v3469
    ss = v3470
    ds = v3471
    fs = v3472
    gs = v3473
    cf = -v3684-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3475
    pf = -v3674-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3477
    af = -v3681-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3479
    zf = v3679 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3677 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3482
    if = v3483
    df = v3484
    of = v3689 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3486
    iopl1 = v3487
    nt = v3488
    ?15 = v3489
    memory = {
        size=4; addr=v3464-0x4 [from 0x8048390:push   ebp]; value=v3465
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v3460
    cx = v3461
    dx = v3462
    bx = v3463
    sp = v3611 [from 0x8048393:sub    esp, 0x08]
    bp = v3533 [from 0x8048391:mov    ebp, esp]
    si = v3466
    di = v3467
    es = v3468
    cs = v3469
    ss = v3470
    ds = v3471
    fs = v3472
    gs = v3473
    cf = -v3684-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3475
    pf = -v3674-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3477
    af = -v3681-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3479
    zf = v3679 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3677 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3482
    if = v3483
    df = v3484
    of = v3689 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3486
    iopl1 = v3487
    nt = v3488
    ?15 = v3489
    memory = {
        size=4; addr=v3464-0x4 [from 0x8048390:push   ebp]; value=v3465
    }
    ip = v3728 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3886 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3852
    dx = v3853
    bx = v3854
    sp = v3855
    bp = v3856
    si = v3857
    di = v3858
    es = v3859
    cs = v3860
    ss = v3861
    ds = v3862
    fs = v3863
    gs = v3864
    cf = v3865
    ?1 = v3866
    pf = v3867
    ?3 = v3868
    af = v3869
    ?5 = v3870
    zf = v3871
    sf = v3872
    tf = v3873
    if = v3874
    df = v3875
    of = v3876
    iopl0 = v3877
    iopl1 = v3878
    nt = v3879
    ?15 = v3880
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3886 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3852
    dx = v3923 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3854
    sp = v3855
    bp = v3856
    si = v3857
    di = v3858
    es = v3859
    cs = v3860
    ss = v3861
    ds = v3862
    fs = v3863
    gs = v3864
    cf = v3865
    ?1 = v3866
    pf = v3867
    ?3 = v3868
    af = v3869
    ?5 = v3870
    zf = v3871
    sf = v3872
    tf = v3873
    if = v3874
    df = v3875
    of = v3876
    iopl0 = v3877
    iopl1 = v3878
    nt = v3879
    ?15 = v3880
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3886 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3852
    dx = v3923 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3854
    sp = v3855
    bp = v3856
    si = v3857
    di = v3858
    es = v3859
    cs = v3860
    ss = v3861
    ds = v3862
    fs = v3863
    gs = v3864
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3866
    pf = -v3975-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3868
    af = <top>
    ?5 = v3870
    zf = v3980 [from 0x80483a6:test   edx, edx]
    sf = v3978 [from 0x80483a6:test   edx, edx]
    tf = v3873
    if = v3874
    df = v3875
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3877
    iopl1 = v3878
    nt = v3879
    ?15 = v3880
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3886 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3852
    dx = v3923 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3854
    sp = v3855
    bp = v3856
    si = v3857
    di = v3858
    es = v3859
    cs = v3860
    ss = v3861
    ds = v3862
    fs = v3863
    gs = v3864
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3866
    pf = -v3975-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3868
    af = <top>
    ?5 = v3870
    zf = v3980 [from 0x80483a6:test   edx, edx]
    sf = v3978 [from 0x80483a6:test   edx, edx]
    tf = v3873
    if = v3874
    df = v3875
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3877
    iopl1 = v3878
    nt = v3879
    ?15 = v3880
    memory = {}
    ip = v4024 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v4147
    cx = v4148
    dx = v4149
    bx = v4150
    sp = v4151
    bp = v4152
    si = v4182 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4154
    es = v4155
    cs = v4156
    ss = v4157
    ds = v4158
    fs = v4159
    gs = v4160
    cf = v4161
    ?1 = v4162
    pf = v4163
    ?3 = v4164
    af = v4165
    ?5 = v4166
    zf = v4167
    sf = v4168
    tf = v4169
    if = v4170
    df = v4171
    of = v4172
    iopl0 = v4173
    iopl1 = v4174
    nt = v4175
    ?15 = v4176
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v4256 [from 0x80483b0:add    eax, 0x04]
    cx = v4148
    dx = v4149
    bx = v4150
    sp = v4151
    bp = v4152
    si = v4182 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4154
    es = v4155
    cs = v4156
    ss = v4157
    ds = v4158
    fs = v4159
    gs = v4160
    cf = v4250 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4162
    pf = -v4241-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4164
    af = v4248 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4166
    zf = v4246 [from 0x80483b0:add    eax, 0x04]
    sf = v4244 [from 0x80483b0:add    eax, 0x04]
    tf = v4169
    if = v4170
    df = v4171
    of = v4254 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4173
    iopl1 = v4174
    nt = v4175
    ?15 = v4176
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v4256 [from 0x80483b0:add    eax, 0x04]
    cx = v4148
    dx = v4149
    bx = v4150
    sp = v4151
    bp = v4152
    si = v4182 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4154
    es = v4155
    cs = v4156
    ss = v4157
    ds = v4158
    fs = v4159
    gs = v4160
    cf = v4250 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4162
    pf = -v4241-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4164
    af = v4248 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4166
    zf = v4246 [from 0x80483b0:add    eax, 0x04]
    sf = v4244 [from 0x80483b0:add    eax, 0x04]
    tf = v4169
    if = v4170
    df = v4171
    of = v4254 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4173
    iopl1 = v4174
    nt = v4175
    ?15 = v4176
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v4256 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v4256 [from 0x80483b0:add    eax, 0x04]
    cx = v4148
    dx = v4149
    bx = v4150
    sp = v4335 [from 0x80483b8:call   edx]
    bp = v4152
    si = v4182 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4154
    es = v4155
    cs = v4156
    ss = v4157
    ds = v4158
    fs = v4159
    gs = v4160
    cf = v4250 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4162
    pf = -v4241-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4164
    af = v4248 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4166
    zf = v4246 [from 0x80483b0:add    eax, 0x04]
    sf = v4244 [from 0x80483b0:add    eax, 0x04]
    tf = v4169
    if = v4170
    df = v4171
    of = v4254 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4173
    iopl1 = v4174
    nt = v4175
    ?15 = v4176
    memory = {
        size=4; addr=v4151-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v4149
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v4522 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4488
    dx = v4489
    bx = v4490
    sp = v4491
    bp = v4492
    si = v4493
    di = v4494
    es = v4495
    cs = v4496
    ss = v4497
    ds = v4498
    fs = v4499
    gs = v4500
    cf = v4501
    ?1 = v4502
    pf = v4503
    ?3 = v4504
    af = v4505
    ?5 = v4506
    zf = v4507
    sf = v4508
    tf = v4509
    if = v4510
    df = v4511
    of = v4512
    iopl0 = v4513
    iopl1 = v4514
    nt = v4515
    ?15 = v4516
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v4522 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4488
    dx = v4559 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4490
    sp = v4491
    bp = v4492
    si = v4493
    di = v4494
    es = v4495
    cs = v4496
    ss = v4497
    ds = v4498
    fs = v4499
    gs = v4500
    cf = v4501
    ?1 = v4502
    pf = v4503
    ?3 = v4504
    af = v4505
    ?5 = v4506
    zf = v4507
    sf = v4508
    tf = v4509
    if = v4510
    df = v4511
    of = v4512
    iopl0 = v4513
    iopl1 = v4514
    nt = v4515
    ?15 = v4516
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v4522 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4488
    dx = v4559 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4490
    sp = v4491
    bp = v4492
    si = v4493
    di = v4494
    es = v4495
    cs = v4496
    ss = v4497
    ds = v4498
    fs = v4499
    gs = v4500
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4502
    pf = -v4611-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4504
    af = <top>
    ?5 = v4506
    zf = v4616 [from 0x80483c1:test   edx, edx]
    sf = v4614 [from 0x80483c1:test   edx, edx]
    tf = v4509
    if = v4510
    df = v4511
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4513
    iopl1 = v4514
    nt = v4515
    ?15 = v4516
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v4522 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4488
    dx = v4559 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4490
    sp = v4491
    bp = v4492
    si = v4493
    di = v4494
    es = v4495
    cs = v4496
    ss = v4497
    ds = v4498
    fs = v4499
    gs = v4500
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4502
    pf = -v4611-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4504
    af = <top>
    ?5 = v4506
    zf = v4616 [from 0x80483c1:test   edx, edx]
    sf = v4614 [from 0x80483c1:test   edx, edx]
    tf = v4509
    if = v4510
    df = v4511
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4513
    iopl1 = v4514
    nt = v4515
    ?15 = v4516
    memory = {}
    ip = v4661 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v4784
    cx = v4785
    dx = v4786
    bx = v4787
    sp = v4788
    bp = v4789
    si = v4790
    di = v4791
    es = v4792
    cs = v4793
    ss = v4794
    ds = v4795
    fs = v4796
    gs = v4797
    cf = v4798
    ?1 = v4799
    pf = v4800
    ?3 = v4801
    af = v4802
    ?5 = v4803
    zf = v4804
    sf = v4805
    tf = v4806
    if = v4807
    df = v4808
    of = v4809
    iopl0 = v4810
    iopl1 = v4811
    nt = v4812
    ?15 = v4813
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v4784
    cx = v4785
    dx = v4786
    bx = v4787
    sp = v4861 [from 0x80483cc:leave  ]
    bp = v4860 [from 0x80483cc:leave  ]
    si = v4790
    di = v4791
    es = v4792
    cs = v4793
    ss = v4794
    ds = v4795
    fs = v4796
    gs = v4797
    cf = v4798
    ?1 = v4799
    pf = v4800
    ?3 = v4801
    af = v4802
    ?5 = v4803
    zf = v4804
    sf = v4805
    tf = v4806
    if = v4807
    df = v4808
    of = v4809
    iopl0 = v4810
    iopl1 = v4811
    nt = v4812
    ?15 = v4813
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v4784
    cx = v4785
    dx = v4786
    bx = v4787
    sp = v4903 [from 0x80483cd:ret    ]
    bp = v4860 [from 0x80483cc:leave  ]
    si = v4790
    di = v4791
    es = v4792
    cs = v4793
    ss = v4794
    ds = v4795
    fs = v4796
    gs = v4797
    cf = v4798
    ?1 = v4799
    pf = v4800
    ?3 = v4801
    af = v4802
    ?5 = v4803
    zf = v4804
    sf = v4805
    tf = v4806
    if = v4807
    df = v4808
    of = v4809
    iopl0 = v4810
    iopl1 = v4811
    nt = v4812
    ?15 = v4813
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v4901 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v4965
    cx = v4966
    dx = v4967
    bx = v4968
    sp = v5003 [from 0x80483d0:push   ebp]
    bp = v4970
    si = v4971
    di = v4972
    es = v4973
    cs = v4974
    ss = v4975
    ds = v4976
    fs = v4977
    gs = v4978
    cf = v4979
    ?1 = v4980
    pf = v4981
    ?3 = v4982
    af = v4983
    ?5 = v4984
    zf = v4985
    sf = v4986
    tf = v4987
    if = v4988
    df = v4989
    of = v4990
    iopl0 = v4991
    iopl1 = v4992
    nt = v4993
    ?15 = v4994
    memory = {
        size=4; addr=v4969-0x4 [from 0x80483d0:push   ebp]; value=v4970
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v4965
    cx = v4966
    dx = v4967
    bx = v4968
    sp = v5003 [from 0x80483d0:push   ebp]
    bp = v5038 [from 0x80483d1:mov    ebp, esp]
    si = v4971
    di = v4972
    es = v4973
    cs = v4974
    ss = v4975
    ds = v4976
    fs = v4977
    gs = v4978
    cf = v4979
    ?1 = v4980
    pf = v4981
    ?3 = v4982
    af = v4983
    ?5 = v4984
    zf = v4985
    sf = v4986
    tf = v4987
    if = v4988
    df = v4989
    of = v4990
    iopl0 = v4991
    iopl1 = v4992
    nt = v4993
    ?15 = v4994
    memory = {
        size=4; addr=v4969-0x4 [from 0x80483d0:push   ebp]; value=v4970
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v4965
    cx = v4966
    dx = v4967
    bx = v4968
    sp = v5116 [from 0x80483d3:sub    esp, 0x08]
    bp = v5038 [from 0x80483d1:mov    ebp, esp]
    si = v4971
    di = v4972
    es = v4973
    cs = v4974
    ss = v4975
    ds = v4976
    fs = v4977
    gs = v4978
    cf = -v5109-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4980
    pf = -v5099-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4982
    af = -v5106-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4984
    zf = v5104 [from 0x80483d3:sub    esp, 0x08]
    sf = v5102 [from 0x80483d3:sub    esp, 0x08]
    tf = v4987
    if = v4988
    df = v4989
    of = v5114 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4991
    iopl1 = v4992
    nt = v4993
    ?15 = v4994
    memory = {
        size=4; addr=v4969-0x4 [from 0x80483d0:push   ebp]; value=v4970
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v5153 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4966
    dx = v4967
    bx = v4968
    sp = v5116 [from 0x80483d3:sub    esp, 0x08]
    bp = v5038 [from 0x80483d1:mov    ebp, esp]
    si = v4971
    di = v4972
    es = v4973
    cs = v4974
    ss = v4975
    ds = v4976
    fs = v4977
    gs = v4978
    cf = -v5109-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4980
    pf = -v5099-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4982
    af = -v5106-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4984
    zf = v5104 [from 0x80483d3:sub    esp, 0x08]
    sf = v5102 [from 0x80483d3:sub    esp, 0x08]
    tf = v4987
    if = v4988
    df = v4989
    of = v5114 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4991
    iopl1 = v4992
    nt = v4993
    ?15 = v4994
    memory = {
        size=4; addr=v4969-0x4 [from 0x80483d0:push   ebp]; value=v4970
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v5153 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4966
    dx = v4967
    bx = v4968
    sp = v5116 [from 0x80483d3:sub    esp, 0x08]
    bp = v5038 [from 0x80483d1:mov    ebp, esp]
    si = v4971
    di = v4972
    es = v4973
    cs = v4974
    ss = v4975
    ds = v4976
    fs = v4977
    gs = v4978
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4980
    pf = -v5205-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4982
    af = <top>
    ?5 = v4984
    zf = v5210 [from 0x80483db:test   eax, eax]
    sf = v5208 [from 0x80483db:test   eax, eax]
    tf = v4987
    if = v4988
    df = v4989
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4991
    iopl1 = v4992
    nt = v4993
    ?15 = v4994
    memory = {
        size=4; addr=v4969-0x4 [from 0x80483d0:push   ebp]; value=v4970
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v5153 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4966
    dx = v4967
    bx = v4968
    sp = v5116 [from 0x80483d3:sub    esp, 0x08]
    bp = v5038 [from 0x80483d1:mov    ebp, esp]
    si = v4971
    di = v4972
    es = v4973
    cs = v4974
    ss = v4975
    ds = v4976
    fs = v4977
    gs = v4978
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4980
    pf = -v5205-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4982
    af = <top>
    ?5 = v4984
    zf = v5210 [from 0x80483db:test   eax, eax]
    sf = v5208 [from 0x80483db:test   eax, eax]
    tf = v4987
    if = v4988
    df = v4989
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4991
    iopl1 = v4992
    nt = v4993
    ?15 = v4994
    memory = {
        size=4; addr=v4969-0x4 [from 0x80483d0:push   ebp]; value=v4970
    }
    ip = v5254 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5378
    dx = v5379
    bx = v5380
    sp = v5381
    bp = v5382
    si = v5383
    di = v5384
    es = v5385
    cs = v5386
    ss = v5387
    ds = v5388
    fs = v5389
    gs = v5390
    cf = v5391
    ?1 = v5392
    pf = v5393
    ?3 = v5394
    af = v5395
    ?5 = v5396
    zf = v5397
    sf = v5398
    tf = v5399
    if = v5400
    df = v5401
    of = v5402
    iopl0 = v5403
    iopl1 = v5404
    nt = v5405
    ?15 = v5406
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5378
    dx = v5379
    bx = v5380
    sp = v5381
    bp = v5382
    si = v5383
    di = v5384
    es = v5385
    cs = v5386
    ss = v5387
    ds = v5388
    fs = v5389
    gs = v5390
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5392
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5394
    af = <top>
    ?5 = v5396
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5399
    if = v5400
    df = v5401
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5403
    iopl1 = v5404
    nt = v5405
    ?15 = v5406
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5378
    dx = v5379
    bx = v5380
    sp = v5381
    bp = v5382
    si = v5383
    di = v5384
    es = v5385
    cs = v5386
    ss = v5387
    ds = v5388
    fs = v5389
    gs = v5390
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5392
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5394
    af = <top>
    ?5 = v5396
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5399
    if = v5400
    df = v5401
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5403
    iopl1 = v5404
    nt = v5405
    ?15 = v5406
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5378
    dx = v5379
    bx = v5380
    sp = v5547 [from 0x8048400:mov    esp, ebp]
    bp = v5382
    si = v5383
    di = v5384
    es = v5385
    cs = v5386
    ss = v5387
    ds = v5388
    fs = v5389
    gs = v5390
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5392
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5394
    af = <top>
    ?5 = v5396
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5399
    if = v5400
    df = v5401
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5403
    iopl1 = v5404
    nt = v5405
    ?15 = v5406
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5378
    dx = v5379
    bx = v5380
    sp = v5584 [from 0x8048402:pop    ebp]
    bp = v5587 [from 0x8048402:pop    ebp]
    si = v5383
    di = v5384
    es = v5385
    cs = v5386
    ss = v5387
    ds = v5388
    fs = v5389
    gs = v5390
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5392
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5394
    af = <top>
    ?5 = v5396
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5399
    if = v5400
    df = v5401
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5403
    iopl1 = v5404
    nt = v5405
    ?15 = v5406
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5378
    dx = v5379
    bx = v5380
    sp = v5629 [from 0x8048403:ret    ]
    bp = v5587 [from 0x8048402:pop    ebp]
    si = v5383
    di = v5384
    es = v5385
    cs = v5386
    ss = v5387
    ds = v5388
    fs = v5389
    gs = v5390
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5392
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5394
    af = <top>
    ?5 = v5396
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5399
    if = v5400
    df = v5401
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5403
    iopl1 = v5404
    nt = v5405
    ?15 = v5406
    memory = {}
    ip = v5627 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = v5691
    cx = v5692
    dx = v5693
    bx = v5694
    sp = v5695
    bp = v5696
    si = v5697
    di = v5698
    es = v5699
    cs = v5700
    ss = v5701
    ds = v5702
    fs = v5703
    gs = v5704
    cf = v5705
    ?1 = v5706
    pf = v5707
    ?3 = v5708
    af = v5709
    ?5 = v5710
    zf = v5711
    sf = v5712
    tf = v5713
    if = v5714
    df = v5715
    of = v5716
    iopl0 = v5717
    iopl1 = v5718
    nt = v5719
    ?15 = v5720
    memory = {
        size=4; addr=v5695; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
0x80483ef:call   0x00000000
    ax = v5691
    cx = v5692
    dx = v5693
    bx = v5694
    sp = v5768 [from 0x80483ef:call   0x00000000]
    bp = v5696
    si = v5697
    di = v5698
    es = v5699
    cs = v5700
    ss = v5701
    ds = v5702
    fs = v5703
    gs = v5704
    cf = v5705
    ?1 = v5706
    pf = v5707
    ?3 = v5708
    af = v5709
    ?5 = v5710
    zf = v5711
    sf = v5712
    tf = v5713
    if = v5714
    df = v5715
    of = v5716
    iopl0 = v5717
    iopl1 = v5718
    nt = v5719
    ?15 = v5720
    memory = {
        size=4; addr=v5695; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=v5695-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v5950
    cx = v5951
    dx = v5952
    bx = v5953
    sp = v5954
    bp = v5955
    si = v5985 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v5957
    es = v5958
    cs = v5959
    ss = v5960
    ds = v5961
    fs = v5962
    gs = v5963
    cf = v5964
    ?1 = v5965
    pf = v5966
    ?3 = v5967
    af = v5968
    ?5 = v5969
    zf = v5970
    sf = v5971
    tf = v5972
    if = v5973
    df = v5974
    of = v5975
    iopl0 = v5976
    iopl1 = v5977
    nt = v5978
    ?15 = v5979
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v5950
    cx = v5951
    dx = v5952
    bx = v5953
    sp = v5954
    bp = v5955
    si = v5985 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v6022 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v5958
    cs = v5959
    ss = v5960
    ds = v5961
    fs = v5962
    gs = v5963
    cf = v5964
    ?1 = v5965
    pf = v5966
    ?3 = v5967
    af = v5968
    ?5 = v5969
    zf = v5970
    sf = v5971
    tf = v5972
    if = v5973
    df = v5974
    of = v5975
    iopl0 = v5976
    iopl1 = v5977
    nt = v5978
    ?15 = v5979
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    ax = v6114
    cx = v6115
    dx = v6116
    bx = v6117
    sp = v6152 [from 0x8048410:push   ebp]
    bp = v6119
    si = v6120
    di = v6121
    es = v6122
    cs = v6123
    ss = v6124
    ds = v6125
    fs = v6126
    gs = v6127
    cf = v6128
    ?1 = v6129
    pf = v6130
    ?3 = v6131
    af = v6132
    ?5 = v6133
    zf = v6134
    sf = v6135
    tf = v6136
    if = v6137
    df = v6138
    of = v6139
    iopl0 = v6140
    iopl1 = v6141
    nt = v6142
    ?15 = v6143
    memory = {
        size=4; addr=v6118-0x4 [from 0x8048410:push   ebp]; value=v6119
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v6114
    cx = v6115
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6117
    sp = v6152 [from 0x8048410:push   ebp]
    bp = v6119
    si = v6120
    di = v6121
    es = v6122
    cs = v6123
    ss = v6124
    ds = v6125
    fs = v6126
    gs = v6127
    cf = v6128
    ?1 = v6129
    pf = v6130
    ?3 = v6131
    af = v6132
    ?5 = v6133
    zf = v6134
    sf = v6135
    tf = v6136
    if = v6137
    df = v6138
    of = v6139
    iopl0 = v6140
    iopl1 = v6141
    nt = v6142
    ?15 = v6143
    memory = {
        size=4; addr=v6118-0x4 [from 0x8048410:push   ebp]; value=v6119
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v6114
    cx = v6115
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6117
    sp = v6152 [from 0x8048410:push   ebp]
    bp = v6222 [from 0x8048416:mov    ebp, esp]
    si = v6120
    di = v6121
    es = v6122
    cs = v6123
    ss = v6124
    ds = v6125
    fs = v6126
    gs = v6127
    cf = v6128
    ?1 = v6129
    pf = v6130
    ?3 = v6131
    af = v6132
    ?5 = v6133
    zf = v6134
    sf = v6135
    tf = v6136
    if = v6137
    df = v6138
    of = v6139
    iopl0 = v6140
    iopl1 = v6141
    nt = v6142
    ?15 = v6143
    memory = {
        size=4; addr=v6118-0x4 [from 0x8048410:push   ebp]; value=v6119
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v6114
    cx = v6115
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6117
    sp = v6300 [from 0x8048418:sub    esp, 0x08]
    bp = v6222 [from 0x8048416:mov    ebp, esp]
    si = v6120
    di = v6121
    es = v6122
    cs = v6123
    ss = v6124
    ds = v6125
    fs = v6126
    gs = v6127
    cf = -v6293-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v6129
    pf = -v6283-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v6131
    af = -v6290-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v6133
    zf = v6288 [from 0x8048418:sub    esp, 0x08]
    sf = v6286 [from 0x8048418:sub    esp, 0x08]
    tf = v6136
    if = v6137
    df = v6138
    of = v6298 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v6140
    iopl1 = v6141
    nt = v6142
    ?15 = v6143
    memory = {
        size=4; addr=v6118-0x4 [from 0x8048410:push   ebp]; value=v6119
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v6114
    cx = v6115
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6117
    sp = v6359 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6222 [from 0x8048416:mov    ebp, esp]
    si = v6120
    di = v6121
    es = v6122
    cs = v6123
    ss = v6124
    ds = v6125
    fs = v6126
    gs = v6127
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6129
    pf = -v6352-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6131
    af = <top>
    ?5 = v6133
    zf = v6357 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6355 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6136
    if = v6137
    df = v6138
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6140
    iopl1 = v6141
    nt = v6142
    ?15 = v6143
    memory = {
        size=4; addr=v6118-0x4 [from 0x8048410:push   ebp]; value=v6119
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v6114
    cx = v6115
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6117
    sp = v6359 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6222 [from 0x8048416:mov    ebp, esp]
    si = v6120
    di = v6121
    es = v6122
    cs = v6123
    ss = v6124
    ds = v6125
    fs = v6126
    gs = v6127
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6129
    pf = -v6352-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6131
    af = <top>
    ?5 = v6133
    zf = v6357 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6355 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6136
    if = v6137
    df = v6138
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6140
    iopl1 = v6141
    nt = v6142
    ?15 = v6143
    memory = {
        size=4; addr=v6359+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v6114
    cx = v6115
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6117
    sp = v6359 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6222 [from 0x8048416:mov    ebp, esp]
    si = v6120
    di = v6121
    es = v6122
    cs = v6123
    ss = v6124
    ds = v6125
    fs = v6126
    gs = v6127
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6129
    pf = -v6352-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6131
    af = <top>
    ?5 = v6133
    zf = v6357 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6355 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6136
    if = v6137
    df = v6138
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6140
    iopl1 = v6141
    nt = v6142
    ?15 = v6143
    memory = {
        size=4; addr=v6359 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v6359+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v6114
    cx = v6115
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6117
    sp = v6483 [from 0x8048429:call   0x080482f0]
    bp = v6222 [from 0x8048416:mov    ebp, esp]
    si = v6120
    di = v6121
    es = v6122
    cs = v6123
    ss = v6124
    ds = v6125
    fs = v6126
    gs = v6127
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6129
    pf = -v6352-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6131
    af = <top>
    ?5 = v6133
    zf = v6357 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6355 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6136
    if = v6137
    df = v6138
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6140
    iopl1 = v6141
    nt = v6142
    ?15 = v6143
    memory = {
        size=4; addr=v6359 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v6359+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v6359-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v6665
    cx = v6666
    dx = v6667
    bx = v6668
    sp = v6698 [from 0x804842e:mov    esp, ebp]
    bp = v6670
    si = v6671
    di = v6672
    es = v6673
    cs = v6674
    ss = v6675
    ds = v6676
    fs = v6677
    gs = v6678
    cf = v6679
    ?1 = v6680
    pf = v6681
    ?3 = v6682
    af = v6683
    ?5 = v6684
    zf = v6685
    sf = v6686
    tf = v6687
    if = v6688
    df = v6689
    of = v6690
    iopl0 = v6691
    iopl1 = v6692
    nt = v6693
    ?15 = v6694
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6666
    dx = v6667
    bx = v6668
    sp = v6698 [from 0x804842e:mov    esp, ebp]
    bp = v6670
    si = v6671
    di = v6672
    es = v6673
    cs = v6674
    ss = v6675
    ds = v6676
    fs = v6677
    gs = v6678
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6680
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6682
    af = <top>
    ?5 = v6684
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6687
    if = v6688
    df = v6689
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6691
    iopl1 = v6692
    nt = v6693
    ?15 = v6694
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6666
    dx = v6667
    bx = v6668
    sp = v6800 [from 0x8048432:pop    ebp]
    bp = v6803 [from 0x8048432:pop    ebp]
    si = v6671
    di = v6672
    es = v6673
    cs = v6674
    ss = v6675
    ds = v6676
    fs = v6677
    gs = v6678
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6680
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6682
    af = <top>
    ?5 = v6684
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6687
    if = v6688
    df = v6689
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6691
    iopl1 = v6692
    nt = v6693
    ?15 = v6694
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6666
    dx = v6667
    bx = v6668
    sp = v6845 [from 0x8048433:ret    ]
    bp = v6803 [from 0x8048432:pop    ebp]
    si = v6671
    di = v6672
    es = v6673
    cs = v6674
    ss = v6675
    ds = v6676
    fs = v6677
    gs = v6678
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6680
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6682
    af = <top>
    ?5 = v6684
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6687
    if = v6688
    df = v6689
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6691
    iopl1 = v6692
    nt = v6693
    ?15 = v6694
    memory = {}
    ip = v6843 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v6907
    cx = v6908
    dx = v6909
    bx = v6910
    sp = v6945 [from 0x8048440:push   ebp]
    bp = v6912
    si = v6913
    di = v6914
    es = v6915
    cs = v6916
    ss = v6917
    ds = v6918
    fs = v6919
    gs = v6920
    cf = v6921
    ?1 = v6922
    pf = v6923
    ?3 = v6924
    af = v6925
    ?5 = v6926
    zf = v6927
    sf = v6928
    tf = v6929
    if = v6930
    df = v6931
    of = v6932
    iopl0 = v6933
    iopl1 = v6934
    nt = v6935
    ?15 = v6936
    memory = {
        size=4; addr=v6911-0x4 [from 0x8048440:push   ebp]; value=v6912
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v6907
    cx = v6908
    dx = v6909
    bx = v6910
    sp = v6945 [from 0x8048440:push   ebp]
    bp = v6980 [from 0x8048441:mov    ebp, esp]
    si = v6913
    di = v6914
    es = v6915
    cs = v6916
    ss = v6917
    ds = v6918
    fs = v6919
    gs = v6920
    cf = v6921
    ?1 = v6922
    pf = v6923
    ?3 = v6924
    af = v6925
    ?5 = v6926
    zf = v6927
    sf = v6928
    tf = v6929
    if = v6930
    df = v6931
    of = v6932
    iopl0 = v6933
    iopl1 = v6934
    nt = v6935
    ?15 = v6936
    memory = {
        size=4; addr=v6911-0x4 [from 0x8048440:push   ebp]; value=v6912
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v6907
    cx = v6908
    dx = v6909
    bx = v6910
    sp = v7058 [from 0x8048443:sub    esp, 0x08]
    bp = v6980 [from 0x8048441:mov    ebp, esp]
    si = v6913
    di = v6914
    es = v6915
    cs = v6916
    ss = v6917
    ds = v6918
    fs = v6919
    gs = v6920
    cf = -v7051-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6922
    pf = -v7041-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6924
    af = -v7048-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6926
    zf = v7046 [from 0x8048443:sub    esp, 0x08]
    sf = v7044 [from 0x8048443:sub    esp, 0x08]
    tf = v6929
    if = v6930
    df = v6931
    of = v7056 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6933
    iopl1 = v6934
    nt = v6935
    ?15 = v6936
    memory = {
        size=4; addr=v6911-0x4 [from 0x8048440:push   ebp]; value=v6912
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6907
    cx = v6908
    dx = v6909
    bx = v6910
    sp = v7058 [from 0x8048443:sub    esp, 0x08]
    bp = v6980 [from 0x8048441:mov    ebp, esp]
    si = v6913
    di = v6914
    es = v6915
    cs = v6916
    ss = v6917
    ds = v6918
    fs = v6919
    gs = v6920
    cf = -v7051-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6922
    pf = -v7041-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6924
    af = -v7048-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6926
    zf = v7046 [from 0x8048443:sub    esp, 0x08]
    sf = v7044 [from 0x8048443:sub    esp, 0x08]
    tf = v6929
    if = v6930
    df = v6931
    of = v7056 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6933
    iopl1 = v6934
    nt = v6935
    ?15 = v6936
    memory = {
        size=4; addr=v7058 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v6907
    cx = v6908
    dx = v6909
    bx = v6910
    sp = v7137 [from 0x804844d:call   0x08048300]
    bp = v6980 [from 0x8048441:mov    ebp, esp]
    si = v6913
    di = v6914
    es = v6915
    cs = v6916
    ss = v6917
    ds = v6918
    fs = v6919
    gs = v6920
    cf = -v7051-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6922
    pf = -v7041-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6924
    af = -v7048-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6926
    zf = v7046 [from 0x8048443:sub    esp, 0x08]
    sf = v7044 [from 0x8048443:sub    esp, 0x08]
    tf = v6929
    if = v6930
    df = v6931
    of = v7056 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6933
    iopl1 = v6934
    nt = v6935
    ?15 = v6936
    memory = {
        size=4; addr=v7058 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7058-0x4 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v7319
    cx = v7320
    dx = v7321
    bx = v7322
    sp = v7352 [from 0x8048452:mov    esp, ebp]
    bp = v7324
    si = v7325
    di = v7326
    es = v7327
    cs = v7328
    ss = v7329
    ds = v7330
    fs = v7331
    gs = v7332
    cf = v7333
    ?1 = v7334
    pf = v7335
    ?3 = v7336
    af = v7337
    ?5 = v7338
    zf = v7339
    sf = v7340
    tf = v7341
    if = v7342
    df = v7343
    of = v7344
    iopl0 = v7345
    iopl1 = v7346
    nt = v7347
    ?15 = v7348
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v7319
    cx = v7320
    dx = v7321
    bx = v7322
    sp = v7389 [from 0x8048454:pop    ebp]
    bp = v7392 [from 0x8048454:pop    ebp]
    si = v7325
    di = v7326
    es = v7327
    cs = v7328
    ss = v7329
    ds = v7330
    fs = v7331
    gs = v7332
    cf = v7333
    ?1 = v7334
    pf = v7335
    ?3 = v7336
    af = v7337
    ?5 = v7338
    zf = v7339
    sf = v7340
    tf = v7341
    if = v7342
    df = v7343
    of = v7344
    iopl0 = v7345
    iopl1 = v7346
    nt = v7347
    ?15 = v7348
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v7319
    cx = v7320
    dx = v7321
    bx = v7322
    sp = v7434 [from 0x8048455:ret    ]
    bp = v7392 [from 0x8048454:pop    ebp]
    si = v7325
    di = v7326
    es = v7327
    cs = v7328
    ss = v7329
    ds = v7330
    fs = v7331
    gs = v7332
    cf = v7333
    ?1 = v7334
    pf = v7335
    ?3 = v7336
    af = v7337
    ?5 = v7338
    zf = v7339
    sf = v7340
    tf = v7341
    if = v7342
    df = v7343
    of = v7344
    iopl0 = v7345
    iopl1 = v7346
    nt = v7347
    ?15 = v7348
    memory = {}
    ip = v7432 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v7496
    cx = v7497
    dx = v7498
    bx = v7499
    sp = v7534 [from 0x8048460:push   ebp]
    bp = v7501
    si = v7502
    di = v7503
    es = v7504
    cs = v7505
    ss = v7506
    ds = v7507
    fs = v7508
    gs = v7509
    cf = v7510
    ?1 = v7511
    pf = v7512
    ?3 = v7513
    af = v7514
    ?5 = v7515
    zf = v7516
    sf = v7517
    tf = v7518
    if = v7519
    df = v7520
    of = v7521
    iopl0 = v7522
    iopl1 = v7523
    nt = v7524
    ?15 = v7525
    memory = {
        size=4; addr=v7500-0x4 [from 0x8048460:push   ebp]; value=v7501
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v7496
    cx = v7497
    dx = v7498
    bx = v7499
    sp = v7534 [from 0x8048460:push   ebp]
    bp = v7569 [from 0x8048461:mov    ebp, esp]
    si = v7502
    di = v7503
    es = v7504
    cs = v7505
    ss = v7506
    ds = v7507
    fs = v7508
    gs = v7509
    cf = v7510
    ?1 = v7511
    pf = v7512
    ?3 = v7513
    af = v7514
    ?5 = v7515
    zf = v7516
    sf = v7517
    tf = v7518
    if = v7519
    df = v7520
    of = v7521
    iopl0 = v7522
    iopl1 = v7523
    nt = v7524
    ?15 = v7525
    memory = {
        size=4; addr=v7500-0x4 [from 0x8048460:push   ebp]; value=v7501
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v7496
    cx = v7497
    dx = v7498
    bx = v7499
    sp = v7647 [from 0x8048463:sub    esp, 0x08]
    bp = v7569 [from 0x8048461:mov    ebp, esp]
    si = v7502
    di = v7503
    es = v7504
    cs = v7505
    ss = v7506
    ds = v7507
    fs = v7508
    gs = v7509
    cf = -v7640-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7511
    pf = -v7630-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7513
    af = -v7637-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7515
    zf = v7635 [from 0x8048463:sub    esp, 0x08]
    sf = v7633 [from 0x8048463:sub    esp, 0x08]
    tf = v7518
    if = v7519
    df = v7520
    of = v7645 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7522
    iopl1 = v7523
    nt = v7524
    ?15 = v7525
    memory = {
        size=4; addr=v7500-0x4 [from 0x8048460:push   ebp]; value=v7501
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7496
    cx = v7497
    dx = v7498
    bx = v7499
    sp = v7647 [from 0x8048463:sub    esp, 0x08]
    bp = v7569 [from 0x8048461:mov    ebp, esp]
    si = v7502
    di = v7503
    es = v7504
    cs = v7505
    ss = v7506
    ds = v7507
    fs = v7508
    gs = v7509
    cf = -v7640-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7511
    pf = -v7630-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7513
    af = -v7637-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7515
    zf = v7635 [from 0x8048463:sub    esp, 0x08]
    sf = v7633 [from 0x8048463:sub    esp, 0x08]
    tf = v7518
    if = v7519
    df = v7520
    of = v7645 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7522
    iopl1 = v7523
    nt = v7524
    ?15 = v7525
    memory = {
        size=4; addr=v7647 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v7496
    cx = v7497
    dx = v7498
    bx = v7499
    sp = v7726 [from 0x804846d:call   0x08048300]
    bp = v7569 [from 0x8048461:mov    ebp, esp]
    si = v7502
    di = v7503
    es = v7504
    cs = v7505
    ss = v7506
    ds = v7507
    fs = v7508
    gs = v7509
    cf = -v7640-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7511
    pf = -v7630-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7513
    af = -v7637-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7515
    zf = v7635 [from 0x8048463:sub    esp, 0x08]
    sf = v7633 [from 0x8048463:sub    esp, 0x08]
    tf = v7518
    if = v7519
    df = v7520
    of = v7645 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7522
    iopl1 = v7523
    nt = v7524
    ?15 = v7525
    memory = {
        size=4; addr=v7647 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7647-0x4 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7908
    cx = v7909
    dx = v7910
    bx = v7911
    sp = v7912
    bp = v7913
    si = v7914
    di = v7915
    es = v7916
    cs = v7917
    ss = v7918
    ds = v7919
    fs = v7920
    gs = v7921
    cf = v7922
    ?1 = v7923
    pf = v7924
    ?3 = v7925
    af = v7926
    ?5 = v7927
    zf = v7928
    sf = v7929
    tf = v7930
    if = v7931
    df = v7932
    of = v7933
    iopl0 = v7934
    iopl1 = v7935
    nt = v7936
    ?15 = v7937
    memory = {
        size=4; addr=v7912; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v7908
    cx = v7909
    dx = v7910
    bx = v7911
    sp = v7985 [from 0x8048479:call   0x08048320]
    bp = v7913
    si = v7914
    di = v7915
    es = v7916
    cs = v7917
    ss = v7918
    ds = v7919
    fs = v7920
    gs = v7921
    cf = v7922
    ?1 = v7923
    pf = v7924
    ?3 = v7925
    af = v7926
    ?5 = v7927
    zf = v7928
    sf = v7929
    tf = v7930
    if = v7931
    df = v7932
    of = v7933
    iopl0 = v7934
    iopl1 = v7935
    nt = v7936
    ?15 = v7937
    memory = {
        size=4; addr=v7912; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7912-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v8167
    cx = v8168
    dx = v8169
    bx = v8170
    sp = v8205 [from 0x8048480:push   ebp]
    bp = v8172
    si = v8173
    di = v8174
    es = v8175
    cs = v8176
    ss = v8177
    ds = v8178
    fs = v8179
    gs = v8180
    cf = v8181
    ?1 = v8182
    pf = v8183
    ?3 = v8184
    af = v8185
    ?5 = v8186
    zf = v8187
    sf = v8188
    tf = v8189
    if = v8190
    df = v8191
    of = v8192
    iopl0 = v8193
    iopl1 = v8194
    nt = v8195
    ?15 = v8196
    memory = {
        size=4; addr=v8171-0x4 [from 0x8048480:push   ebp]; value=v8172
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v8167
    cx = v8168
    dx = v8169
    bx = v8170
    sp = v8205 [from 0x8048480:push   ebp]
    bp = v8240 [from 0x8048481:mov    ebp, esp]
    si = v8173
    di = v8174
    es = v8175
    cs = v8176
    ss = v8177
    ds = v8178
    fs = v8179
    gs = v8180
    cf = v8181
    ?1 = v8182
    pf = v8183
    ?3 = v8184
    af = v8185
    ?5 = v8186
    zf = v8187
    sf = v8188
    tf = v8189
    if = v8190
    df = v8191
    of = v8192
    iopl0 = v8193
    iopl1 = v8194
    nt = v8195
    ?15 = v8196
    memory = {
        size=4; addr=v8171-0x4 [from 0x8048480:push   ebp]; value=v8172
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v8167
    cx = v8168
    dx = v8169
    bx = v8170
    sp = v8318 [from 0x8048483:sub    esp, 0x08]
    bp = v8240 [from 0x8048481:mov    ebp, esp]
    si = v8173
    di = v8174
    es = v8175
    cs = v8176
    ss = v8177
    ds = v8178
    fs = v8179
    gs = v8180
    cf = -v8311-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8182
    pf = -v8301-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v8184
    af = -v8308-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v8186
    zf = v8306 [from 0x8048483:sub    esp, 0x08]
    sf = v8304 [from 0x8048483:sub    esp, 0x08]
    tf = v8189
    if = v8190
    df = v8191
    of = v8316 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v8193
    iopl1 = v8194
    nt = v8195
    ?15 = v8196
    memory = {
        size=4; addr=v8171-0x4 [from 0x8048480:push   ebp]; value=v8172
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v8167
    cx = v8168
    dx = v8169
    bx = v8170
    sp = v8318 [from 0x8048483:sub    esp, 0x08]
    bp = v8240 [from 0x8048481:mov    ebp, esp]
    si = v8173
    di = v8174
    es = v8175
    cs = v8176
    ss = v8177
    ds = v8178
    fs = v8179
    gs = v8180
    cf = -v8311-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8182
    pf = -v8379-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8184
    af = v8386 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8186
    zf = v8384 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8382 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8189
    if = v8190
    df = v8191
    of = v8390 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8193
    iopl1 = v8194
    nt = v8195
    ?15 = v8196
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v8354+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v8167
    cx = v8168
    dx = v8169
    bx = v8170
    sp = v8318 [from 0x8048483:sub    esp, 0x08]
    bp = v8240 [from 0x8048481:mov    ebp, esp]
    si = v8173
    di = v8174
    es = v8175
    cs = v8176
    ss = v8177
    ds = v8178
    fs = v8179
    gs = v8180
    cf = -v8311-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8182
    pf = -v8379-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8184
    af = v8386 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8186
    zf = v8384 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8382 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8189
    if = v8190
    df = v8191
    of = v8390 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8193
    iopl1 = v8194
    nt = v8195
    ?15 = v8196
    memory = {
        size=4; addr=v8318 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v8167
    cx = v8168
    dx = v8169
    bx = v8170
    sp = v8473 [from 0x8048493:call   0x08048300]
    bp = v8240 [from 0x8048481:mov    ebp, esp]
    si = v8173
    di = v8174
    es = v8175
    cs = v8176
    ss = v8177
    ds = v8178
    fs = v8179
    gs = v8180
    cf = -v8311-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8182
    pf = -v8379-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8184
    af = v8386 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8186
    zf = v8384 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8382 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8189
    if = v8190
    df = v8191
    of = v8390 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8193
    iopl1 = v8194
    nt = v8195
    ?15 = v8196
    memory = {
        size=4; addr=v8318 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8318-0x4 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v8655
    cx = v8656
    dx = v8657
    bx = v8658
    sp = v8659
    bp = v8660
    si = v8661
    di = v8662
    es = v8663
    cs = v8664
    ss = v8665
    ds = v8666
    fs = v8667
    gs = v8668
    cf = v8669
    ?1 = v8670
    pf = v8671
    ?3 = v8672
    af = v8673
    ?5 = v8674
    zf = v8675
    sf = v8676
    tf = v8677
    if = v8678
    df = v8679
    of = v8680
    iopl0 = v8681
    iopl1 = v8682
    nt = v8683
    ?15 = v8684
    memory = {
        size=4; addr=v8659; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v8655
    cx = v8656
    dx = v8657
    bx = v8658
    sp = v8732 [from 0x804849f:call   0x08048320]
    bp = v8660
    si = v8661
    di = v8662
    es = v8663
    cs = v8664
    ss = v8665
    ds = v8666
    fs = v8667
    gs = v8668
    cf = v8669
    ?1 = v8670
    pf = v8671
    ?3 = v8672
    af = v8673
    ?5 = v8674
    zf = v8675
    sf = v8676
    tf = v8677
    if = v8678
    df = v8679
    of = v8680
    iopl0 = v8681
    iopl1 = v8682
    nt = v8683
    ?15 = v8684
    memory = {
        size=4; addr=v8659; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v8659-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    ax = v8914
    cx = v8915
    dx = v8916
    bx = v8917
    sp = v8952 [from 0x80484b0:push   ebp]
    bp = v8919
    si = v8920
    di = v8921
    es = v8922
    cs = v8923
    ss = v8924
    ds = v8925
    fs = v8926
    gs = v8927
    cf = v8928
    ?1 = v8929
    pf = v8930
    ?3 = v8931
    af = v8932
    ?5 = v8933
    zf = v8934
    sf = v8935
    tf = v8936
    if = v8937
    df = v8938
    of = v8939
    iopl0 = v8940
    iopl1 = v8941
    nt = v8942
    ?15 = v8943
    memory = {
        size=4; addr=v8918-0x4 [from 0x80484b0:push   ebp]; value=v8919
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v8914
    cx = v8915
    dx = v8916
    bx = v8917
    sp = v8952 [from 0x80484b0:push   ebp]
    bp = v8987 [from 0x80484b1:mov    ebp, esp]
    si = v8920
    di = v8921
    es = v8922
    cs = v8923
    ss = v8924
    ds = v8925
    fs = v8926
    gs = v8927
    cf = v8928
    ?1 = v8929
    pf = v8930
    ?3 = v8931
    af = v8932
    ?5 = v8933
    zf = v8934
    sf = v8935
    tf = v8936
    if = v8937
    df = v8938
    of = v8939
    iopl0 = v8940
    iopl1 = v8941
    nt = v8942
    ?15 = v8943
    memory = {
        size=4; addr=v8918-0x4 [from 0x80484b0:push   ebp]; value=v8919
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v8914
    cx = v8915
    dx = v8916
    bx = v8917
    sp = v9027 [from 0x80484b3:push   edi]
    bp = v8987 [from 0x80484b1:mov    ebp, esp]
    si = v8920
    di = v8921
    es = v8922
    cs = v8923
    ss = v8924
    ds = v8925
    fs = v8926
    gs = v8927
    cf = v8928
    ?1 = v8929
    pf = v8930
    ?3 = v8931
    af = v8932
    ?5 = v8933
    zf = v8934
    sf = v8935
    tf = v8936
    if = v8937
    df = v8938
    of = v8939
    iopl0 = v8940
    iopl1 = v8941
    nt = v8942
    ?15 = v8943
    memory = {
        size=4; addr=v8952-0x4 [from 0x80484b3:push   edi]; value=v8921
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v8914
    cx = v8915
    dx = v8916
    bx = v8917
    sp = v9067 [from 0x80484b4:push   esi]
    bp = v8987 [from 0x80484b1:mov    ebp, esp]
    si = v8920
    di = v8921
    es = v8922
    cs = v8923
    ss = v8924
    ds = v8925
    fs = v8926
    gs = v8927
    cf = v8928
    ?1 = v8929
    pf = v8930
    ?3 = v8931
    af = v8932
    ?5 = v8933
    zf = v8934
    sf = v8935
    tf = v8936
    if = v8937
    df = v8938
    of = v8939
    iopl0 = v8940
    iopl1 = v8941
    nt = v8942
    ?15 = v8943
    memory = {
        size=4; addr=v9027-0x4 [from 0x80484b4:push   esi]; value=v8920
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v8914
    cx = v8915
    dx = v8916
    bx = v8917
    sp = v9107 [from 0x80484b5:push   ebx]
    bp = v8987 [from 0x80484b1:mov    ebp, esp]
    si = v8920
    di = v8921
    es = v8922
    cs = v8923
    ss = v8924
    ds = v8925
    fs = v8926
    gs = v8927
    cf = v8928
    ?1 = v8929
    pf = v8930
    ?3 = v8931
    af = v8932
    ?5 = v8933
    zf = v8934
    sf = v8935
    tf = v8936
    if = v8937
    df = v8938
    of = v8939
    iopl0 = v8940
    iopl1 = v8941
    nt = v8942
    ?15 = v8943
    memory = {
        size=4; addr=v9067-0x4 [from 0x80484b5:push   ebx]; value=v8917
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v8914
    cx = v8915
    dx = v8916
    bx = v8917
    sp = v9185 [from 0x80484b6:sub    esp, 0x0c]
    bp = v8987 [from 0x80484b1:mov    ebp, esp]
    si = v8920
    di = v8921
    es = v8922
    cs = v8923
    ss = v8924
    ds = v8925
    fs = v8926
    gs = v8927
    cf = -v9178-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8929
    pf = -v9168-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8931
    af = -v9175-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8933
    zf = v9173 [from 0x80484b6:sub    esp, 0x0c]
    sf = v9171 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8936
    if = v8937
    df = v8938
    of = v9183 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8940
    iopl1 = v8941
    nt = v8942
    ?15 = v8943
    memory = {
        size=4; addr=v9067-0x4 [from 0x80484b5:push   ebx]; value=v8917
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v8914
    cx = v8915
    dx = v8916
    bx = v8917
    sp = v9227 [from 0x80484b9:call   0x080484be]
    bp = v8987 [from 0x80484b1:mov    ebp, esp]
    si = v8920
    di = v8921
    es = v8922
    cs = v8923
    ss = v8924
    ds = v8925
    fs = v8926
    gs = v8927
    cf = -v9178-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8929
    pf = -v9168-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8931
    af = -v9175-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8933
    zf = v9173 [from 0x80484b6:sub    esp, 0x0c]
    sf = v9171 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8936
    if = v8937
    df = v8938
    of = v9183 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8940
    iopl1 = v8941
    nt = v8942
    ?15 = v8943
    memory = {
        size=4; addr=v9185-0x4 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v9319
    cx = v9320
    dx = v9321
    bx = v9357 [from 0x80484be:pop    ebx]
    sp = v9354 [from 0x80484be:pop    ebx]
    bp = v9324
    si = v9325
    di = v9326
    es = v9327
    cs = v9328
    ss = v9329
    ds = v9330
    fs = v9331
    gs = v9332
    cf = v9333
    ?1 = v9334
    pf = v9335
    ?3 = v9336
    af = v9337
    ?5 = v9338
    zf = v9339
    sf = v9340
    tf = v9341
    if = v9342
    df = v9343
    of = v9344
    iopl0 = v9345
    iopl1 = v9346
    nt = v9347
    ?15 = v9348
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v9319
    cx = v9320
    dx = v9321
    bx = v9431 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v9354 [from 0x80484be:pop    ebx]
    bp = v9324
    si = v9325
    di = v9326
    es = v9327
    cs = v9328
    ss = v9329
    ds = v9330
    fs = v9331
    gs = v9332
    cf = v9425 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v9334
    pf = -v9416-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v9336
    af = v9423 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v9338
    zf = v9421 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v9419 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v9341
    if = v9342
    df = v9343
    of = v9429 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v9345
    iopl1 = v9346
    nt = v9347
    ?15 = v9348
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v9319
    cx = v9320
    dx = v9321
    bx = v9431 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v9473 [from 0x80484c5:call   0x080482c8]
    bp = v9324
    si = v9325
    di = v9326
    es = v9327
    cs = v9328
    ss = v9329
    ds = v9330
    fs = v9331
    gs = v9332
    cf = v9425 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v9334
    pf = -v9416-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v9336
    af = v9423 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v9338
    zf = v9421 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v9419 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v9341
    if = v9342
    df = v9343
    of = v9429 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v9345
    iopl1 = v9346
    nt = v9347
    ?15 = v9348
    memory = {
        size=4; addr=v9354-0x4 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9690 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9656
    dx = v9657
    bx = v9658
    sp = v9659
    bp = v9660
    si = v9661
    di = v9662
    es = v9663
    cs = v9664
    ss = v9665
    ds = v9666
    fs = v9667
    gs = v9668
    cf = v9669
    ?1 = v9670
    pf = v9671
    ?3 = v9672
    af = v9673
    ?5 = v9674
    zf = v9675
    sf = v9676
    tf = v9677
    if = v9678
    df = v9679
    of = v9680
    iopl0 = v9681
    iopl1 = v9682
    nt = v9683
    ?15 = v9684
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9690 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9656
    dx = v9727 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9658
    sp = v9659
    bp = v9660
    si = v9661
    di = v9662
    es = v9663
    cs = v9664
    ss = v9665
    ds = v9666
    fs = v9667
    gs = v9668
    cf = v9669
    ?1 = v9670
    pf = v9671
    ?3 = v9672
    af = v9673
    ?5 = v9674
    zf = v9675
    sf = v9676
    tf = v9677
    if = v9678
    df = v9679
    of = v9680
    iopl0 = v9681
    iopl1 = v9682
    nt = v9683
    ?15 = v9684
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = v9805 [from 0x80484d6:sub    eax, edx]
    cx = v9656
    dx = v9727 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9658
    sp = v9659
    bp = v9660
    si = v9661
    di = v9662
    es = v9663
    cs = v9664
    ss = v9665
    ds = v9666
    fs = v9667
    gs = v9668
    cf = -v9798-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v9670
    pf = -v9788-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v9672
    af = -v9795-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v9674
    zf = v9793 [from 0x80484d6:sub    eax, edx]
    sf = v9791 [from 0x80484d6:sub    eax, edx]
    tf = v9677
    if = v9678
    df = v9679
    of = v9803 [from 0x80484d6:sub    eax, edx]
    iopl0 = v9681
    iopl1 = v9682
    nt = v9683
    ?15 = v9684
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v9860 [from 0x80484d8:sar    eax, 0x02]
    cx = v9656
    dx = v9727 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9658
    sp = v9659
    bp = v9660
    si = v9661
    di = v9662
    es = v9663
    cs = v9664
    ss = v9665
    ds = v9666
    fs = v9667
    gs = v9668
    cf = v9851 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9670
    pf = -v9877-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9672
    af = <top>
    ?5 = v9674
    zf = v9886 [from 0x80484d8:sar    eax, 0x02]
    sf = v9882 [from 0x80484d8:sar    eax, 0x02]
    tf = v9677
    if = v9678
    df = v9679
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9681
    iopl1 = v9682
    nt = v9683
    ?15 = v9684
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v9860 [from 0x80484d8:sar    eax, 0x02]
    cx = v9656
    dx = v9727 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9658
    sp = v9659
    bp = v9660
    si = v9661
    di = v9662
    es = v9663
    cs = v9664
    ss = v9665
    ds = v9666
    fs = v9667
    gs = v9668
    cf = v9851 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9670
    pf = -v9877-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9672
    af = <top>
    ?5 = v9674
    zf = v9886 [from 0x80484d8:sar    eax, 0x02]
    sf = v9882 [from 0x80484d8:sar    eax, 0x02]
    tf = v9677
    if = v9678
    df = v9679
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9681
    iopl1 = v9682
    nt = v9683
    ?15 = v9684
    memory = {
        size=4; addr=v9660-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9860 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v9860 [from 0x80484d8:sar    eax, 0x02]
    cx = v9656
    dx = v9727 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9658
    sp = v9659
    bp = v9660
    si = v9661
    di = v9662
    es = v9663
    cs = v9664
    ss = v9665
    ds = v9666
    fs = v9667
    gs = v9668
    cf = v9851 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9670
    pf = -v9877-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9672
    af = <top>
    ?5 = v9674
    zf = v9886 [from 0x80484d8:sar    eax, 0x02]
    sf = v9882 [from 0x80484d8:sar    eax, 0x02]
    tf = v9677
    if = v9678
    df = v9679
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9681
    iopl1 = v9682
    nt = v9683
    ?15 = v9684
    memory = {
        size=4; addr=v9660-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9860 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v9965 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v10088
    cx = v10089
    dx = v10090
    bx = v10091
    sp = v10160 [from 0x80484e0:add    esp, 0x0c]
    bp = v10093
    si = v10094
    di = v10095
    es = v10096
    cs = v10097
    ss = v10098
    ds = v10099
    fs = v10100
    gs = v10101
    cf = v10154 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10103
    pf = -v10145-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10105
    af = v10152 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10107
    zf = v10150 [from 0x80484e0:add    esp, 0x0c]
    sf = v10148 [from 0x80484e0:add    esp, 0x0c]
    tf = v10110
    if = v10111
    df = v10112
    of = v10158 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10114
    iopl1 = v10115
    nt = v10116
    ?15 = v10117
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v10088
    cx = v10089
    dx = v10090
    bx = v10200 [from 0x80484e3:pop    ebx]
    sp = v10197 [from 0x80484e3:pop    ebx]
    bp = v10093
    si = v10094
    di = v10095
    es = v10096
    cs = v10097
    ss = v10098
    ds = v10099
    fs = v10100
    gs = v10101
    cf = v10154 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10103
    pf = -v10145-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10105
    af = v10152 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10107
    zf = v10150 [from 0x80484e0:add    esp, 0x0c]
    sf = v10148 [from 0x80484e0:add    esp, 0x0c]
    tf = v10110
    if = v10111
    df = v10112
    of = v10158 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10114
    iopl1 = v10115
    nt = v10116
    ?15 = v10117
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v10088
    cx = v10089
    dx = v10090
    bx = v10200 [from 0x80484e3:pop    ebx]
    sp = v10237 [from 0x80484e4:pop    esi]
    bp = v10093
    si = v10240 [from 0x80484e4:pop    esi]
    di = v10095
    es = v10096
    cs = v10097
    ss = v10098
    ds = v10099
    fs = v10100
    gs = v10101
    cf = v10154 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10103
    pf = -v10145-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10105
    af = v10152 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10107
    zf = v10150 [from 0x80484e0:add    esp, 0x0c]
    sf = v10148 [from 0x80484e0:add    esp, 0x0c]
    tf = v10110
    if = v10111
    df = v10112
    of = v10158 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10114
    iopl1 = v10115
    nt = v10116
    ?15 = v10117
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v10088
    cx = v10089
    dx = v10090
    bx = v10200 [from 0x80484e3:pop    ebx]
    sp = v10277 [from 0x80484e5:pop    edi]
    bp = v10093
    si = v10240 [from 0x80484e4:pop    esi]
    di = v10280 [from 0x80484e5:pop    edi]
    es = v10096
    cs = v10097
    ss = v10098
    ds = v10099
    fs = v10100
    gs = v10101
    cf = v10154 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10103
    pf = -v10145-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10105
    af = v10152 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10107
    zf = v10150 [from 0x80484e0:add    esp, 0x0c]
    sf = v10148 [from 0x80484e0:add    esp, 0x0c]
    tf = v10110
    if = v10111
    df = v10112
    of = v10158 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10114
    iopl1 = v10115
    nt = v10116
    ?15 = v10117
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v10088
    cx = v10089
    dx = v10090
    bx = v10200 [from 0x80484e3:pop    ebx]
    sp = v10317 [from 0x80484e6:pop    ebp]
    bp = v10320 [from 0x80484e6:pop    ebp]
    si = v10240 [from 0x80484e4:pop    esi]
    di = v10280 [from 0x80484e5:pop    edi]
    es = v10096
    cs = v10097
    ss = v10098
    ds = v10099
    fs = v10100
    gs = v10101
    cf = v10154 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10103
    pf = -v10145-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10105
    af = v10152 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10107
    zf = v10150 [from 0x80484e0:add    esp, 0x0c]
    sf = v10148 [from 0x80484e0:add    esp, 0x0c]
    tf = v10110
    if = v10111
    df = v10112
    of = v10158 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10114
    iopl1 = v10115
    nt = v10116
    ?15 = v10117
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v10088
    cx = v10089
    dx = v10090
    bx = v10200 [from 0x80484e3:pop    ebx]
    sp = v10362 [from 0x80484e7:ret    ]
    bp = v10320 [from 0x80484e6:pop    ebp]
    si = v10240 [from 0x80484e4:pop    esi]
    di = v10280 [from 0x80484e5:pop    edi]
    es = v10096
    cs = v10097
    ss = v10098
    ds = v10099
    fs = v10100
    gs = v10101
    cf = v10154 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10103
    pf = -v10145-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10105
    af = v10152 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10107
    zf = v10150 [from 0x80484e0:add    esp, 0x0c]
    sf = v10148 [from 0x80484e0:add    esp, 0x0c]
    tf = v10110
    if = v10111
    df = v10112
    of = v10158 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10114
    iopl1 = v10115
    nt = v10116
    ?15 = v10117
    memory = {}
    ip = v10360 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10427
    sp = v10462 [from 0x8048520:push   ebp]
    bp = v10429
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10438
    ?1 = v10439
    pf = v10440
    ?3 = v10441
    af = v10442
    ?5 = v10443
    zf = v10444
    sf = v10445
    tf = v10446
    if = v10447
    df = v10448
    of = v10449
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {
        size=4; addr=v10428-0x4 [from 0x8048520:push   ebp]; value=v10429
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10427
    sp = v10462 [from 0x8048520:push   ebp]
    bp = v10497 [from 0x8048521:mov    ebp, esp]
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10438
    ?1 = v10439
    pf = v10440
    ?3 = v10441
    af = v10442
    ?5 = v10443
    zf = v10444
    sf = v10445
    tf = v10446
    if = v10447
    df = v10448
    of = v10449
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {
        size=4; addr=v10428-0x4 [from 0x8048520:push   ebp]; value=v10429
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10427
    sp = v10537 [from 0x8048523:push   edi]
    bp = v10497 [from 0x8048521:mov    ebp, esp]
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10438
    ?1 = v10439
    pf = v10440
    ?3 = v10441
    af = v10442
    ?5 = v10443
    zf = v10444
    sf = v10445
    tf = v10446
    if = v10447
    df = v10448
    of = v10449
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {
        size=4; addr=v10462-0x4 [from 0x8048523:push   edi]; value=v10431
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10427
    sp = v10577 [from 0x8048524:push   esi]
    bp = v10497 [from 0x8048521:mov    ebp, esp]
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10438
    ?1 = v10439
    pf = v10440
    ?3 = v10441
    af = v10442
    ?5 = v10443
    zf = v10444
    sf = v10445
    tf = v10446
    if = v10447
    df = v10448
    of = v10449
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {
        size=4; addr=v10537-0x4 [from 0x8048524:push   esi]; value=v10430
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10427
    sp = v10617 [from 0x8048525:push   ebx]
    bp = v10497 [from 0x8048521:mov    ebp, esp]
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = v10438
    ?1 = v10439
    pf = v10440
    ?3 = v10441
    af = v10442
    ?5 = v10443
    zf = v10444
    sf = v10445
    tf = v10446
    if = v10447
    df = v10448
    of = v10449
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {
        size=4; addr=v10577-0x4 [from 0x8048525:push   ebx]; value=v10427
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10427
    sp = v10695 [from 0x8048526:sub    esp, 0x0c]
    bp = v10497 [from 0x8048521:mov    ebp, esp]
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = -v10688-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v10439
    pf = -v10678-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v10441
    af = -v10685-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v10443
    zf = v10683 [from 0x8048526:sub    esp, 0x0c]
    sf = v10681 [from 0x8048526:sub    esp, 0x0c]
    tf = v10446
    if = v10447
    df = v10448
    of = v10693 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {
        size=4; addr=v10577-0x4 [from 0x8048525:push   ebx]; value=v10427
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v10424
    cx = v10425
    dx = v10426
    bx = v10427
    sp = v10737 [from 0x8048529:call   0x0804852e]
    bp = v10497 [from 0x8048521:mov    ebp, esp]
    si = v10430
    di = v10431
    es = v10432
    cs = v10433
    ss = v10434
    ds = v10435
    fs = v10436
    gs = v10437
    cf = -v10688-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v10439
    pf = -v10678-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v10441
    af = -v10685-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v10443
    zf = v10683 [from 0x8048526:sub    esp, 0x0c]
    sf = v10681 [from 0x8048526:sub    esp, 0x0c]
    tf = v10446
    if = v10447
    df = v10448
    of = v10693 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v10450
    iopl1 = v10451
    nt = v10452
    ?15 = v10453
    memory = {
        size=4; addr=v10695-0x4 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v10829
    cx = v10830
    dx = v10831
    bx = v10867 [from 0x804852e:pop    ebx]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = v10843
    ?1 = v10844
    pf = v10845
    ?3 = v10846
    af = v10847
    ?5 = v10848
    zf = v10849
    sf = v10850
    tf = v10851
    if = v10852
    df = v10853
    of = v10854
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v10829
    cx = v10830
    dx = v10831
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = v10935 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10844
    pf = -v10926-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10846
    af = v10933 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10848
    zf = v10931 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10929 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10851
    if = v10852
    df = v10853
    of = v10939 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10978 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v10830
    dx = v10831
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = v10935 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10844
    pf = -v10926-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10846
    af = v10933 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10848
    zf = v10931 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10929 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10851
    if = v10852
    df = v10853
    of = v10939 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10978 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v10830
    dx = v11015 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = v10935 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10844
    pf = -v10926-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10846
    af = v10933 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10848
    zf = v10931 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10929 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10851
    if = v10852
    df = v10853
    of = v10939 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = v11093 [from 0x8048541:sub    eax, edx]
    cx = v10830
    dx = v11015 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = -v11086-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v10844
    pf = -v11076-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v10846
    af = -v11083-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v10848
    zf = v11081 [from 0x8048541:sub    eax, edx]
    sf = v11079 [from 0x8048541:sub    eax, edx]
    tf = v10851
    if = v10852
    df = v10853
    of = v11091 [from 0x8048541:sub    eax, edx]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v11148 [from 0x8048543:sar    eax, 0x02]
    cx = v10830
    dx = v11015 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = v11139 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10844
    pf = -v11165-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v10846
    af = <top>
    ?5 = v10848
    zf = v11174 [from 0x8048543:sar    eax, 0x02]
    sf = v11170 [from 0x8048543:sar    eax, 0x02]
    tf = v10851
    if = v10852
    df = v10853
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v11148 [from 0x8048543:sar    eax, 0x02]
    cx = v10830
    dx = v11015 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = v11139 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10844
    pf = -v11165-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v10846
    af = <top>
    ?5 = v10848
    zf = v11174 [from 0x8048543:sar    eax, 0x02]
    sf = v11170 [from 0x8048543:sar    eax, 0x02]
    tf = v10851
    if = v10852
    df = v10853
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {
        size=4; addr=v10834-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11148 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v11288 [from 0x8048549:dec    eax]
    cx = v10830
    dx = v11015 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = v11139 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10844
    pf = -v11274-0x1 [from 0x8048549:dec    eax]
    ?3 = v10846
    af = -v11281-0x1 [from 0x8048549:dec    eax]
    ?5 = v10848
    zf = v11279 [from 0x8048549:dec    eax]
    sf = v11277 [from 0x8048549:dec    eax]
    tf = v10851
    if = v10852
    df = v10853
    of = v11286 [from 0x8048549:dec    eax]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {
        size=4; addr=v10834-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11148 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v11288 [from 0x8048549:dec    eax]
    cx = v10830
    dx = v11015 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = -v11359-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v10844
    pf = -v11349-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v10846
    af = -v11356-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v10848
    zf = v11354 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v11352 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v10851
    if = v10852
    df = v10853
    of = v11364 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {
        size=4; addr=v10834-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11148 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v11288 [from 0x8048549:dec    eax]
    cx = v10830
    dx = v11015 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10941 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10864 [from 0x804852e:pop    ebx]
    bp = v10834
    si = v10835
    di = v10836
    es = v10837
    cs = v10838
    ss = v10839
    ds = v10840
    fs = v10841
    gs = v10842
    cf = -v11359-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v10844
    pf = -v11349-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v10846
    af = -v11356-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v10848
    zf = v11354 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v11352 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v10851
    if = v10852
    df = v10853
    of = v11364 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v10855
    iopl1 = v10856
    nt = v10857
    ?15 = v10858
    memory = {
        size=4; addr=v10834-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11148 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v11402 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax = v11525
    cx = v11526
    dx = v11527
    bx = v11528
    sp = v11529
    bp = v11530
    si = v11563 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v11532
    es = v11533
    cs = v11534
    ss = v11535
    ds = v11536
    fs = v11537
    gs = v11538
    cf = v11539
    ?1 = v11540
    pf = v11541
    ?3 = v11542
    af = v11543
    ?5 = v11544
    zf = v11545
    sf = v11546
    tf = v11547
    if = v11548
    df = v11549
    of = v11550
    iopl0 = v11551
    iopl1 = v11552
    nt = v11553
    ?15 = v11554
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]
0x8048552:xor    edi, edi
    ax = v11525
    cx = v11526
    dx = v11527
    bx = v11528
    sp = v11529
    bp = v11530
    si = v11563 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v11533
    cs = v11534
    ss = v11535
    ds = v11536
    fs = v11537
    gs = v11538
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11540
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11542
    af = <top>
    ?5 = v11544
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11547
    if = v11548
    df = v11549
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11551
    iopl1 = v11552
    nt = v11553
    ?15 = v11554
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]
0x8048554:lea    esi, [esi + 0x00000000]
    ax = v11525
    cx = v11526
    dx = v11527
    bx = v11528
    sp = v11529
    bp = v11530
    si = v11665 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v11533
    cs = v11534
    ss = v11535
    ds = v11536
    fs = v11537
    gs = v11538
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11540
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11542
    af = <top>
    ?5 = v11544
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11547
    if = v11548
    df = v11549
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11551
    iopl1 = v11552
    nt = v11553
    ?15 = v11554
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]
0x804855a:lea    edi, [edi + 0x00000000]
    ax = v11525
    cx = v11526
    dx = v11527
    bx = v11528
    sp = v11529
    bp = v11530
    si = v11665 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v11533
    cs = v11534
    ss = v11535
    ds = v11536
    fs = v11537
    gs = v11538
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11540
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11542
    af = <top>
    ?5 = v11544
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11547
    if = v11548
    df = v11549
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11551
    iopl1 = v11552
    nt = v11553
    ?15 = v11554
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]
0x8048560:call   DWORD PTR ds:[esi]
    ax = v11525
    cx = v11526
    dx = v11527
    bx = v11528
    sp = v11746 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v11530
    si = v11665 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v11533
    cs = v11534
    ss = v11535
    ds = v11536
    fs = v11537
    gs = v11538
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v11540
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v11542
    af = <top>
    ?5 = v11544
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v11547
    if = v11548
    df = v11549
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v11551
    iopl1 = v11552
    nt = v11553
    ?15 = v11554
    memory = {
        size=4; addr=v11529-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v11744 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax = v11898
    cx = v11899
    dx = v11900
    bx = v11901
    sp = v11902
    bp = v11903
    si = v11904
    di = v11968 [from 0x8048562:inc    edi]
    es = v11906
    cs = v11907
    ss = v11908
    ds = v11909
    fs = v11910
    gs = v11911
    cf = v11912
    ?1 = v11913
    pf = -v11955-0x1 [from 0x8048562:inc    edi]
    ?3 = v11915
    af = v11962 [from 0x8048562:inc    edi]
    ?5 = v11917
    zf = v11960 [from 0x8048562:inc    edi]
    sf = v11958 [from 0x8048562:inc    edi]
    tf = v11920
    if = v11921
    df = v11922
    of = v11966 [from 0x8048562:inc    edi]
    iopl0 = v11924
    iopl1 = v11925
    nt = v11926
    ?15 = v11927
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]
0x8048563:sub    esi, 0x04
    ax = v11898
    cx = v11899
    dx = v11900
    bx = v11901
    sp = v11902
    bp = v11903
    si = v12046 [from 0x8048563:sub    esi, 0x04]
    di = v11968 [from 0x8048562:inc    edi]
    es = v11906
    cs = v11907
    ss = v11908
    ds = v11909
    fs = v11910
    gs = v11911
    cf = -v12039-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v11913
    pf = -v12029-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v11915
    af = -v12036-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v11917
    zf = v12034 [from 0x8048563:sub    esi, 0x04]
    sf = v12032 [from 0x8048563:sub    esi, 0x04]
    tf = v11920
    if = v11921
    df = v11922
    of = v12044 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v11924
    iopl1 = v11925
    nt = v11926
    ?15 = v11927
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v11898
    cx = v11899
    dx = v11900
    bx = v11901
    sp = v11902
    bp = v11903
    si = v12046 [from 0x8048563:sub    esi, 0x04]
    di = v11968 [from 0x8048562:inc    edi]
    es = v11906
    cs = v11907
    ss = v11908
    ds = v11909
    fs = v11910
    gs = v11911
    cf = -v12121-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v11913
    pf = -v12111-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v11915
    af = -v12118-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v11917
    zf = v12116 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v12114 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v11920
    if = v11921
    df = v11922
    of = v12126 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v11924
    iopl1 = v11925
    nt = v11926
    ?15 = v11927
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
0x8048569:jne    0x08048560
    ax = v11898
    cx = v11899
    dx = v11900
    bx = v11901
    sp = v11902
    bp = v11903
    si = v12046 [from 0x8048563:sub    esi, 0x04]
    di = v11968 [from 0x8048562:inc    edi]
    es = v11906
    cs = v11907
    ss = v11908
    ds = v11909
    fs = v11910
    gs = v11911
    cf = -v12121-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v11913
    pf = -v12111-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v11915
    af = -v12118-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v11917
    zf = v12116 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v12114 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v11920
    if = v11921
    df = v11922
    of = v12126 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v11924
    iopl1 = v11925
    nt = v11926
    ?15 = v11927
    memory = {}
    ip = v12165 [from 0x8048569:jne    0x08048560]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v12288
    cx = v12289
    dx = v12290
    bx = v12291
    sp = v12328 [from 0x804856b:call   0x080485b0]
    bp = v12293
    si = v12294
    di = v12295
    es = v12296
    cs = v12297
    ss = v12298
    ds = v12299
    fs = v12300
    gs = v12301
    cf = v12302
    ?1 = v12303
    pf = v12304
    ?3 = v12305
    af = v12306
    ?5 = v12307
    zf = v12308
    sf = v12309
    tf = v12310
    if = v12311
    df = v12312
    of = v12313
    iopl0 = v12314
    iopl1 = v12315
    nt = v12316
    ?15 = v12317
    memory = {
        size=4; addr=v12292-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v12510
    cx = v12511
    dx = v12512
    bx = v12513
    sp = v12582 [from 0x8048570:add    esp, 0x0c]
    bp = v12515
    si = v12516
    di = v12517
    es = v12518
    cs = v12519
    ss = v12520
    ds = v12521
    fs = v12522
    gs = v12523
    cf = v12576 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12525
    pf = -v12567-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12527
    af = v12574 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12529
    zf = v12572 [from 0x8048570:add    esp, 0x0c]
    sf = v12570 [from 0x8048570:add    esp, 0x0c]
    tf = v12532
    if = v12533
    df = v12534
    of = v12580 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12536
    iopl1 = v12537
    nt = v12538
    ?15 = v12539
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v12510
    cx = v12511
    dx = v12512
    bx = v12622 [from 0x8048573:pop    ebx]
    sp = v12619 [from 0x8048573:pop    ebx]
    bp = v12515
    si = v12516
    di = v12517
    es = v12518
    cs = v12519
    ss = v12520
    ds = v12521
    fs = v12522
    gs = v12523
    cf = v12576 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12525
    pf = -v12567-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12527
    af = v12574 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12529
    zf = v12572 [from 0x8048570:add    esp, 0x0c]
    sf = v12570 [from 0x8048570:add    esp, 0x0c]
    tf = v12532
    if = v12533
    df = v12534
    of = v12580 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12536
    iopl1 = v12537
    nt = v12538
    ?15 = v12539
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v12510
    cx = v12511
    dx = v12512
    bx = v12622 [from 0x8048573:pop    ebx]
    sp = v12659 [from 0x8048574:pop    esi]
    bp = v12515
    si = v12662 [from 0x8048574:pop    esi]
    di = v12517
    es = v12518
    cs = v12519
    ss = v12520
    ds = v12521
    fs = v12522
    gs = v12523
    cf = v12576 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12525
    pf = -v12567-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12527
    af = v12574 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12529
    zf = v12572 [from 0x8048570:add    esp, 0x0c]
    sf = v12570 [from 0x8048570:add    esp, 0x0c]
    tf = v12532
    if = v12533
    df = v12534
    of = v12580 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12536
    iopl1 = v12537
    nt = v12538
    ?15 = v12539
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v12510
    cx = v12511
    dx = v12512
    bx = v12622 [from 0x8048573:pop    ebx]
    sp = v12699 [from 0x8048575:pop    edi]
    bp = v12515
    si = v12662 [from 0x8048574:pop    esi]
    di = v12702 [from 0x8048575:pop    edi]
    es = v12518
    cs = v12519
    ss = v12520
    ds = v12521
    fs = v12522
    gs = v12523
    cf = v12576 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12525
    pf = -v12567-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12527
    af = v12574 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12529
    zf = v12572 [from 0x8048570:add    esp, 0x0c]
    sf = v12570 [from 0x8048570:add    esp, 0x0c]
    tf = v12532
    if = v12533
    df = v12534
    of = v12580 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12536
    iopl1 = v12537
    nt = v12538
    ?15 = v12539
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v12510
    cx = v12511
    dx = v12512
    bx = v12622 [from 0x8048573:pop    ebx]
    sp = v12739 [from 0x8048576:pop    ebp]
    bp = v12742 [from 0x8048576:pop    ebp]
    si = v12662 [from 0x8048574:pop    esi]
    di = v12702 [from 0x8048575:pop    edi]
    es = v12518
    cs = v12519
    ss = v12520
    ds = v12521
    fs = v12522
    gs = v12523
    cf = v12576 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12525
    pf = -v12567-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12527
    af = v12574 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12529
    zf = v12572 [from 0x8048570:add    esp, 0x0c]
    sf = v12570 [from 0x8048570:add    esp, 0x0c]
    tf = v12532
    if = v12533
    df = v12534
    of = v12580 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12536
    iopl1 = v12537
    nt = v12538
    ?15 = v12539
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v12510
    cx = v12511
    dx = v12512
    bx = v12622 [from 0x8048573:pop    ebx]
    sp = v12784 [from 0x8048577:ret    ]
    bp = v12742 [from 0x8048576:pop    ebp]
    si = v12662 [from 0x8048574:pop    esi]
    di = v12702 [from 0x8048575:pop    edi]
    es = v12518
    cs = v12519
    ss = v12520
    ds = v12521
    fs = v12522
    gs = v12523
    cf = v12576 [from 0x8048570:add    esp, 0x0c]
    ?1 = v12525
    pf = -v12567-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v12527
    af = v12574 [from 0x8048570:add    esp, 0x0c]
    ?5 = v12529
    zf = v12572 [from 0x8048570:add    esp, 0x0c]
    sf = v12570 [from 0x8048570:add    esp, 0x0c]
    tf = v12532
    if = v12533
    df = v12534
    of = v12580 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v12536
    iopl1 = v12537
    nt = v12538
    ?15 = v12539
    memory = {}
    ip = v12782 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    ax = v12846
    cx = v12847
    dx = v12848
    bx = v12849
    sp = v12884 [from 0x8048580:push   ebp]
    bp = v12851
    si = v12852
    di = v12853
    es = v12854
    cs = v12855
    ss = v12856
    ds = v12857
    fs = v12858
    gs = v12859
    cf = v12860
    ?1 = v12861
    pf = v12862
    ?3 = v12863
    af = v12864
    ?5 = v12865
    zf = v12866
    sf = v12867
    tf = v12868
    if = v12869
    df = v12870
    of = v12871
    iopl0 = v12872
    iopl1 = v12873
    nt = v12874
    ?15 = v12875
    memory = {
        size=4; addr=v12850-0x4 [from 0x8048580:push   ebp]; value=v12851
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v12846
    cx = v12847
    dx = v12848
    bx = v12849
    sp = v12884 [from 0x8048580:push   ebp]
    bp = v12919 [from 0x8048581:mov    ebp, esp]
    si = v12852
    di = v12853
    es = v12854
    cs = v12855
    ss = v12856
    ds = v12857
    fs = v12858
    gs = v12859
    cf = v12860
    ?1 = v12861
    pf = v12862
    ?3 = v12863
    af = v12864
    ?5 = v12865
    zf = v12866
    sf = v12867
    tf = v12868
    if = v12869
    df = v12870
    of = v12871
    iopl0 = v12872
    iopl1 = v12873
    nt = v12874
    ?15 = v12875
    memory = {
        size=4; addr=v12850-0x4 [from 0x8048580:push   ebp]; value=v12851
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v12846
    cx = v12847
    dx = v12848
    bx = v12849
    sp = v12959 [from 0x8048583:push   ebx]
    bp = v12919 [from 0x8048581:mov    ebp, esp]
    si = v12852
    di = v12853
    es = v12854
    cs = v12855
    ss = v12856
    ds = v12857
    fs = v12858
    gs = v12859
    cf = v12860
    ?1 = v12861
    pf = v12862
    ?3 = v12863
    af = v12864
    ?5 = v12865
    zf = v12866
    sf = v12867
    tf = v12868
    if = v12869
    df = v12870
    of = v12871
    iopl0 = v12872
    iopl1 = v12873
    nt = v12874
    ?15 = v12875
    memory = {
        size=4; addr=v12884-0x4 [from 0x8048583:push   ebx]; value=v12849
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v12846
    cx = v12847
    dx = v12848
    bx = v12849
    sp = v13037 [from 0x8048584:sub    esp, 0x04]
    bp = v12919 [from 0x8048581:mov    ebp, esp]
    si = v12852
    di = v12853
    es = v12854
    cs = v12855
    ss = v12856
    ds = v12857
    fs = v12858
    gs = v12859
    cf = -v13030-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12861
    pf = -v13020-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12863
    af = -v13027-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12865
    zf = v13025 [from 0x8048584:sub    esp, 0x04]
    sf = v13023 [from 0x8048584:sub    esp, 0x04]
    tf = v12868
    if = v12869
    df = v12870
    of = v13035 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12872
    iopl1 = v12873
    nt = v12874
    ?15 = v12875
    memory = {
        size=4; addr=v12884-0x4 [from 0x8048583:push   ebx]; value=v12849
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v12846
    cx = v12847
    dx = v12848
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v13037 [from 0x8048584:sub    esp, 0x04]
    bp = v12919 [from 0x8048581:mov    ebp, esp]
    si = v12852
    di = v12853
    es = v12854
    cs = v12855
    ss = v12856
    ds = v12857
    fs = v12858
    gs = v12859
    cf = -v13030-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12861
    pf = -v13020-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12863
    af = -v13027-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12865
    zf = v13025 [from 0x8048584:sub    esp, 0x04]
    sf = v13023 [from 0x8048584:sub    esp, 0x04]
    tf = v12868
    if = v12869
    df = v12870
    of = v13035 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12872
    iopl1 = v12873
    nt = v12874
    ?15 = v12875
    memory = {
        size=4; addr=v12884-0x4 [from 0x8048583:push   ebx]; value=v12849
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v13109 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12847
    dx = v12848
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v13037 [from 0x8048584:sub    esp, 0x04]
    bp = v12919 [from 0x8048581:mov    ebp, esp]
    si = v12852
    di = v12853
    es = v12854
    cs = v12855
    ss = v12856
    ds = v12857
    fs = v12858
    gs = v12859
    cf = -v13030-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12861
    pf = -v13020-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12863
    af = -v13027-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12865
    zf = v13025 [from 0x8048584:sub    esp, 0x04]
    sf = v13023 [from 0x8048584:sub    esp, 0x04]
    tf = v12868
    if = v12869
    df = v12870
    of = v13035 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12872
    iopl1 = v12873
    nt = v12874
    ?15 = v12875
    memory = {
        size=4; addr=v12884-0x4 [from 0x8048583:push   ebx]; value=v12849
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v13109 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12847
    dx = v12848
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v13037 [from 0x8048584:sub    esp, 0x04]
    bp = v12919 [from 0x8048581:mov    ebp, esp]
    si = v12852
    di = v12853
    es = v12854
    cs = v12855
    ss = v12856
    ds = v12857
    fs = v12858
    gs = v12859
    cf = -v13180-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v12861
    pf = -v13170-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v12863
    af = -v13177-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v12865
    zf = v13175 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v13173 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v12868
    if = v12869
    df = v12870
    of = v13185 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v12872
    iopl1 = v12873
    nt = v12874
    ?15 = v12875
    memory = {
        size=4; addr=v12884-0x4 [from 0x8048583:push   ebx]; value=v12849
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v13109 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12847
    dx = v12848
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v13037 [from 0x8048584:sub    esp, 0x04]
    bp = v12919 [from 0x8048581:mov    ebp, esp]
    si = v12852
    di = v12853
    es = v12854
    cs = v12855
    ss = v12856
    ds = v12857
    fs = v12858
    gs = v12859
    cf = -v13180-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v12861
    pf = -v13170-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v12863
    af = -v13177-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v12865
    zf = v13175 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v13173 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v12868
    if = v12869
    df = v12870
    of = v13185 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v12872
    iopl1 = v12873
    nt = v12874
    ?15 = v12875
    memory = {
        size=4; addr=v12884-0x4 [from 0x8048583:push   ebx]; value=v12849
    }
    ip = v13223 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v13346
    cx = v13347
    dx = v13348
    bx = v13349
    sp = v13350
    bp = v13351
    si = v13381 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13353
    es = v13354
    cs = v13355
    ss = v13356
    ds = v13357
    fs = v13358
    gs = v13359
    cf = v13360
    ?1 = v13361
    pf = v13362
    ?3 = v13363
    af = v13364
    ?5 = v13365
    zf = v13366
    sf = v13367
    tf = v13368
    if = v13369
    df = v13370
    of = v13371
    iopl0 = v13372
    iopl1 = v13373
    nt = v13374
    ?15 = v13375
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v13346
    cx = v13347
    dx = v13348
    bx = v13349
    sp = v13350
    bp = v13351
    si = v13381 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13418 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13354
    cs = v13355
    ss = v13356
    ds = v13357
    fs = v13358
    gs = v13359
    cf = v13360
    ?1 = v13361
    pf = v13362
    ?3 = v13363
    af = v13364
    ?5 = v13365
    zf = v13366
    sf = v13367
    tf = v13368
    if = v13369
    df = v13370
    of = v13371
    iopl0 = v13372
    iopl1 = v13373
    nt = v13374
    ?15 = v13375
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v13346
    cx = v13347
    dx = v13348
    bx = v13496 [from 0x80485a0:sub    ebx, 0x04]
    sp = v13350
    bp = v13351
    si = v13381 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13418 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13354
    cs = v13355
    ss = v13356
    ds = v13357
    fs = v13358
    gs = v13359
    cf = -v13489-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v13361
    pf = -v13479-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v13363
    af = -v13486-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v13365
    zf = v13484 [from 0x80485a0:sub    ebx, 0x04]
    sf = v13482 [from 0x80485a0:sub    ebx, 0x04]
    tf = v13368
    if = v13369
    df = v13370
    of = v13494 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v13372
    iopl1 = v13373
    nt = v13374
    ?15 = v13375
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v13346
    cx = v13347
    dx = v13348
    bx = v13496 [from 0x80485a0:sub    ebx, 0x04]
    sp = v13538 [from 0x80485a3:call   eax]
    bp = v13351
    si = v13381 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v13418 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v13354
    cs = v13355
    ss = v13356
    ds = v13357
    fs = v13358
    gs = v13359
    cf = -v13489-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v13361
    pf = -v13479-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v13363
    af = -v13486-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v13365
    zf = v13484 [from 0x80485a0:sub    ebx, 0x04]
    sf = v13482 [from 0x80485a0:sub    ebx, 0x04]
    tf = v13368
    if = v13369
    df = v13370
    of = v13494 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v13372
    iopl1 = v13373
    nt = v13374
    ?15 = v13375
    memory = {
        size=4; addr=v13350-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v13346
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v13725 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v13691
    dx = v13692
    bx = v13693
    sp = v13694
    bp = v13695
    si = v13696
    di = v13697
    es = v13698
    cs = v13699
    ss = v13700
    ds = v13701
    fs = v13702
    gs = v13703
    cf = v13704
    ?1 = v13705
    pf = v13706
    ?3 = v13707
    af = v13708
    ?5 = v13709
    zf = v13710
    sf = v13711
    tf = v13712
    if = v13713
    df = v13714
    of = v13715
    iopl0 = v13716
    iopl1 = v13717
    nt = v13718
    ?15 = v13719
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v13725 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v13691
    dx = v13692
    bx = v13693
    sp = v13694
    bp = v13695
    si = v13696
    di = v13697
    es = v13698
    cs = v13699
    ss = v13700
    ds = v13701
    fs = v13702
    gs = v13703
    cf = -v13796-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v13705
    pf = -v13786-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v13707
    af = -v13793-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v13709
    zf = v13791 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v13789 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v13712
    if = v13713
    df = v13714
    of = v13801 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v13716
    iopl1 = v13717
    nt = v13718
    ?15 = v13719
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v13725 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v13691
    dx = v13692
    bx = v13693
    sp = v13694
    bp = v13695
    si = v13696
    di = v13697
    es = v13698
    cs = v13699
    ss = v13700
    ds = v13701
    fs = v13702
    gs = v13703
    cf = -v13796-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v13705
    pf = -v13786-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v13707
    af = -v13793-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v13709
    zf = v13791 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v13789 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v13712
    if = v13713
    df = v13714
    of = v13801 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v13716
    iopl1 = v13717
    nt = v13718
    ?15 = v13719
    memory = {}
    ip = v13840 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v14001 [from 0x80485ac:pop    eax]
    cx = v13964
    dx = v13965
    bx = v13966
    sp = v13998 [from 0x80485ac:pop    eax]
    bp = v13968
    si = v13969
    di = v13970
    es = v13971
    cs = v13972
    ss = v13973
    ds = v13974
    fs = v13975
    gs = v13976
    cf = v13977
    ?1 = v13978
    pf = v13979
    ?3 = v13980
    af = v13981
    ?5 = v13982
    zf = v13983
    sf = v13984
    tf = v13985
    if = v13986
    df = v13987
    of = v13988
    iopl0 = v13989
    iopl1 = v13990
    nt = v13991
    ?15 = v13992
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v14001 [from 0x80485ac:pop    eax]
    cx = v13964
    dx = v13965
    bx = v14041 [from 0x80485ad:pop    ebx]
    sp = v14038 [from 0x80485ad:pop    ebx]
    bp = v13968
    si = v13969
    di = v13970
    es = v13971
    cs = v13972
    ss = v13973
    ds = v13974
    fs = v13975
    gs = v13976
    cf = v13977
    ?1 = v13978
    pf = v13979
    ?3 = v13980
    af = v13981
    ?5 = v13982
    zf = v13983
    sf = v13984
    tf = v13985
    if = v13986
    df = v13987
    of = v13988
    iopl0 = v13989
    iopl1 = v13990
    nt = v13991
    ?15 = v13992
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v14001 [from 0x80485ac:pop    eax]
    cx = v13964
    dx = v13965
    bx = v14041 [from 0x80485ad:pop    ebx]
    sp = v14078 [from 0x80485ae:pop    ebp]
    bp = v14081 [from 0x80485ae:pop    ebp]
    si = v13969
    di = v13970
    es = v13971
    cs = v13972
    ss = v13973
    ds = v13974
    fs = v13975
    gs = v13976
    cf = v13977
    ?1 = v13978
    pf = v13979
    ?3 = v13980
    af = v13981
    ?5 = v13982
    zf = v13983
    sf = v13984
    tf = v13985
    if = v13986
    df = v13987
    of = v13988
    iopl0 = v13989
    iopl1 = v13990
    nt = v13991
    ?15 = v13992
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v14001 [from 0x80485ac:pop    eax]
    cx = v13964
    dx = v13965
    bx = v14041 [from 0x80485ad:pop    ebx]
    sp = v14123 [from 0x80485af:ret    ]
    bp = v14081 [from 0x80485ae:pop    ebp]
    si = v13969
    di = v13970
    es = v13971
    cs = v13972
    ss = v13973
    ds = v13974
    fs = v13975
    gs = v13976
    cf = v13977
    ?1 = v13978
    pf = v13979
    ?3 = v13980
    af = v13981
    ?5 = v13982
    zf = v13983
    sf = v13984
    tf = v13985
    if = v13986
    df = v13987
    of = v13988
    iopl0 = v13989
    iopl1 = v13990
    nt = v13991
    ?15 = v13992
    memory = {}
    ip = v14121 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v14185
    cx = v14186
    dx = v14187
    bx = v14188
    sp = v14223 [from 0x80485b0:push   ebp]
    bp = v14190
    si = v14191
    di = v14192
    es = v14193
    cs = v14194
    ss = v14195
    ds = v14196
    fs = v14197
    gs = v14198
    cf = v14199
    ?1 = v14200
    pf = v14201
    ?3 = v14202
    af = v14203
    ?5 = v14204
    zf = v14205
    sf = v14206
    tf = v14207
    if = v14208
    df = v14209
    of = v14210
    iopl0 = v14211
    iopl1 = v14212
    nt = v14213
    ?15 = v14214
    memory = {
        size=4; addr=v14189-0x4 [from 0x80485b0:push   ebp]; value=v14190
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v14185
    cx = v14186
    dx = v14187
    bx = v14188
    sp = v14223 [from 0x80485b0:push   ebp]
    bp = v14258 [from 0x80485b1:mov    ebp, esp]
    si = v14191
    di = v14192
    es = v14193
    cs = v14194
    ss = v14195
    ds = v14196
    fs = v14197
    gs = v14198
    cf = v14199
    ?1 = v14200
    pf = v14201
    ?3 = v14202
    af = v14203
    ?5 = v14204
    zf = v14205
    sf = v14206
    tf = v14207
    if = v14208
    df = v14209
    of = v14210
    iopl0 = v14211
    iopl1 = v14212
    nt = v14213
    ?15 = v14214
    memory = {
        size=4; addr=v14189-0x4 [from 0x80485b0:push   ebp]; value=v14190
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v14185
    cx = v14186
    dx = v14187
    bx = v14188
    sp = v14298 [from 0x80485b3:push   ebx]
    bp = v14258 [from 0x80485b1:mov    ebp, esp]
    si = v14191
    di = v14192
    es = v14193
    cs = v14194
    ss = v14195
    ds = v14196
    fs = v14197
    gs = v14198
    cf = v14199
    ?1 = v14200
    pf = v14201
    ?3 = v14202
    af = v14203
    ?5 = v14204
    zf = v14205
    sf = v14206
    tf = v14207
    if = v14208
    df = v14209
    of = v14210
    iopl0 = v14211
    iopl1 = v14212
    nt = v14213
    ?15 = v14214
    memory = {
        size=4; addr=v14223-0x4 [from 0x80485b3:push   ebx]; value=v14188
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v14185
    cx = v14186
    dx = v14187
    bx = v14188
    sp = v14338 [from 0x80485b4:push   eax]
    bp = v14258 [from 0x80485b1:mov    ebp, esp]
    si = v14191
    di = v14192
    es = v14193
    cs = v14194
    ss = v14195
    ds = v14196
    fs = v14197
    gs = v14198
    cf = v14199
    ?1 = v14200
    pf = v14201
    ?3 = v14202
    af = v14203
    ?5 = v14204
    zf = v14205
    sf = v14206
    tf = v14207
    if = v14208
    df = v14209
    of = v14210
    iopl0 = v14211
    iopl1 = v14212
    nt = v14213
    ?15 = v14214
    memory = {
        size=4; addr=v14298-0x4 [from 0x80485b4:push   eax]; value=v14185
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v14185
    cx = v14186
    dx = v14187
    bx = v14188
    sp = v14380 [from 0x80485b5:call   0x080485ba]
    bp = v14258 [from 0x80485b1:mov    ebp, esp]
    si = v14191
    di = v14192
    es = v14193
    cs = v14194
    ss = v14195
    ds = v14196
    fs = v14197
    gs = v14198
    cf = v14199
    ?1 = v14200
    pf = v14201
    ?3 = v14202
    af = v14203
    ?5 = v14204
    zf = v14205
    sf = v14206
    tf = v14207
    if = v14208
    df = v14209
    of = v14210
    iopl0 = v14211
    iopl1 = v14212
    nt = v14213
    ?15 = v14214
    memory = {
        size=4; addr=v14338-0x4 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v14472
    cx = v14473
    dx = v14474
    bx = v14510 [from 0x80485ba:pop    ebx]
    sp = v14507 [from 0x80485ba:pop    ebx]
    bp = v14477
    si = v14478
    di = v14479
    es = v14480
    cs = v14481
    ss = v14482
    ds = v14483
    fs = v14484
    gs = v14485
    cf = v14486
    ?1 = v14487
    pf = v14488
    ?3 = v14489
    af = v14490
    ?5 = v14491
    zf = v14492
    sf = v14493
    tf = v14494
    if = v14495
    df = v14496
    of = v14497
    iopl0 = v14498
    iopl1 = v14499
    nt = v14500
    ?15 = v14501
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v14472
    cx = v14473
    dx = v14474
    bx = v14584 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v14507 [from 0x80485ba:pop    ebx]
    bp = v14477
    si = v14478
    di = v14479
    es = v14480
    cs = v14481
    ss = v14482
    ds = v14483
    fs = v14484
    gs = v14485
    cf = v14578 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v14487
    pf = -v14569-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v14489
    af = v14576 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v14491
    zf = v14574 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v14572 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v14494
    if = v14495
    df = v14496
    of = v14582 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v14498
    iopl1 = v14499
    nt = v14500
    ?15 = v14501
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v14472
    cx = v14473
    dx = v14474
    bx = v14584 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v14626 [from 0x80485c1:call   0x08048390]
    bp = v14477
    si = v14478
    di = v14479
    es = v14480
    cs = v14481
    ss = v14482
    ds = v14483
    fs = v14484
    gs = v14485
    cf = v14578 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v14487
    pf = -v14569-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v14489
    af = v14576 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v14491
    zf = v14574 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v14572 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v14494
    if = v14495
    df = v14496
    of = v14582 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v14498
    iopl1 = v14499
    nt = v14500
    ?15 = v14501
    memory = {
        size=4; addr=v14507-0x4 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v14846 [from 0x80485c6:pop    eax]
    cx = v14809
    dx = v14810
    bx = v14811
    sp = v14843 [from 0x80485c6:pop    eax]
    bp = v14813
    si = v14814
    di = v14815
    es = v14816
    cs = v14817
    ss = v14818
    ds = v14819
    fs = v14820
    gs = v14821
    cf = v14822
    ?1 = v14823
    pf = v14824
    ?3 = v14825
    af = v14826
    ?5 = v14827
    zf = v14828
    sf = v14829
    tf = v14830
    if = v14831
    df = v14832
    of = v14833
    iopl0 = v14834
    iopl1 = v14835
    nt = v14836
    ?15 = v14837
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v14846 [from 0x80485c6:pop    eax]
    cx = v14809
    dx = v14810
    bx = v14886 [from 0x80485c7:pop    ebx]
    sp = v14883 [from 0x80485c7:pop    ebx]
    bp = v14813
    si = v14814
    di = v14815
    es = v14816
    cs = v14817
    ss = v14818
    ds = v14819
    fs = v14820
    gs = v14821
    cf = v14822
    ?1 = v14823
    pf = v14824
    ?3 = v14825
    af = v14826
    ?5 = v14827
    zf = v14828
    sf = v14829
    tf = v14830
    if = v14831
    df = v14832
    of = v14833
    iopl0 = v14834
    iopl1 = v14835
    nt = v14836
    ?15 = v14837
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v14846 [from 0x80485c6:pop    eax]
    cx = v14809
    dx = v14810
    bx = v14886 [from 0x80485c7:pop    ebx]
    sp = v14928 [from 0x80485c8:leave  ]
    bp = v14927 [from 0x80485c8:leave  ]
    si = v14814
    di = v14815
    es = v14816
    cs = v14817
    ss = v14818
    ds = v14819
    fs = v14820
    gs = v14821
    cf = v14822
    ?1 = v14823
    pf = v14824
    ?3 = v14825
    af = v14826
    ?5 = v14827
    zf = v14828
    sf = v14829
    tf = v14830
    if = v14831
    df = v14832
    of = v14833
    iopl0 = v14834
    iopl1 = v14835
    nt = v14836
    ?15 = v14837
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v14846 [from 0x80485c6:pop    eax]
    cx = v14809
    dx = v14810
    bx = v14886 [from 0x80485c7:pop    ebx]
    sp = v14970 [from 0x80485c9:ret    ]
    bp = v14927 [from 0x80485c8:leave  ]
    si = v14814
    di = v14815
    es = v14816
    cs = v14817
    ss = v14818
    ds = v14819
    fs = v14820
    gs = v14821
    cf = v14822
    ?1 = v14823
    pf = v14824
    ?3 = v14825
    af = v14826
    ?5 = v14827
    zf = v14828
    sf = v14829
    tf = v14830
    if = v14831
    df = v14832
    of = v14833
    iopl0 = v14834
    iopl1 = v14835
    nt = v14836
    ?15 = v14837
    memory = {}
    ip = v14968 [from 0x80485c9:ret    ]
analyzed headers: 1
