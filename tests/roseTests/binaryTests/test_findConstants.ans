==============================================
Constant propagation in function "_init"
==============================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482cb:sub    esp, 0x8
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x8]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x8]
    sf = v189 [from 0x80482cb:sub    esp, 0x8]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x8]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482ce:call   0x8048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x8048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x8]
    sf = v189 [from 0x80482cb:sub    esp, 0x8]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x8]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x8048364]; value=0x80482d3 [from 0x80482ce:call   0x8048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482d3:call   0x80483d0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482d8 [from 0x80482d3:call   0x80483d0]
    }
0x80482d8:call   0x8048580
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482dd [from 0x80482d8:call   0x8048580]
    }
0x80482dd:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482de:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482df:add    bh, bh
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482e1:xor    eax, 0x80496cc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x80482e0"
==============================================
0x80482e0:push   DWORD PTR ds:[0x80496cc]
    ax = v720
    cx = v721
    dx = v722
    bx = v723
    sp = v724-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    bp = v725
    si = v726
    di = v727
    es = v728
    cs = v729
    ss = v730
    ds = v731
    fs = v732
    gs = v733
    cf = v734
    ?1 = v735
    pf = v736
    ?3 = v737
    af = v738
    ?5 = v739
    zf = v740
    sf = v741
    tf = v742
    if = v743
    df = v744
    of = v745
    iopl0 = v746
    iopl1 = v747
    nt = v748
    ?15 = v749
    memory = {
        size=4; addr=v724-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]; value=v756 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    }
0x80482e6:jmp    DWORD PTR ds:[0x80496d0]
    ax = v720
    cx = v721
    dx = v722
    bx = v723
    sp = v724-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    bp = v725
    si = v726
    di = v727
    es = v728
    cs = v729
    ss = v730
    ds = v731
    fs = v732
    gs = v733
    cf = v734
    ?1 = v735
    pf = v736
    ?3 = v737
    af = v738
    ?5 = v739
    zf = v740
    sf = v741
    tf = v742
    if = v743
    df = v744
    of = v745
    iopl0 = v746
    iopl1 = v747
    nt = v748
    ?15 = v749
    memory = {
        size=4; addr=v724-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]; value=v756 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    }
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
        size=1; addr=<top>; value=<top>
    }
==============================================
Constant propagation in function "signal"
==============================================
0x80482f0:jmp    DWORD PTR ds:[0x80496d4]
    ax = v1022
    cx = v1023
    dx = v1024
    bx = v1025
    sp = v1026
    bp = v1027
    si = v1028
    di = v1029
    es = v1030
    cs = v1031
    ss = v1032
    ds = v1033
    fs = v1034
    gs = v1035
    cf = v1036
    ?1 = v1037
    pf = v1038
    ?3 = v1039
    af = v1040
    ?5 = v1041
    zf = v1042
    sf = v1043
    tf = v1044
    if = v1045
    df = v1046
    of = v1047
    iopl0 = v1048
    iopl1 = v1049
    nt = v1050
    ?15 = v1051
    memory = {}
0x80482f6:push   0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x0]
    }
0x80482fb:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x0]
    }
==============================================
Constant propagation in function "puts"
==============================================
0x8048300:jmp    DWORD PTR ds:[0x80496d8]
    ax = v1217
    cx = v1218
    dx = v1219
    bx = v1220
    sp = v1221
    bp = v1222
    si = v1223
    di = v1224
    es = v1225
    cs = v1226
    ss = v1227
    ds = v1228
    fs = v1229
    gs = v1230
    cf = v1231
    ?1 = v1232
    pf = v1233
    ?3 = v1234
    af = v1235
    ?5 = v1236
    zf = v1237
    sf = v1238
    tf = v1239
    if = v1240
    df = v1241
    of = v1242
    iopl0 = v1243
    iopl1 = v1244
    nt = v1245
    ?15 = v1246
    memory = {}
0x8048306:push   0x8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x8]
    }
0x804830b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x8]
    }
==============================================
Constant propagation in function "__libc_start_main"
==============================================
0x8048310:jmp    DWORD PTR ds:[0x80496dc]
    ax = v1412
    cx = v1413
    dx = v1414
    bx = v1415
    sp = v1416
    bp = v1417
    si = v1418
    di = v1419
    es = v1420
    cs = v1421
    ss = v1422
    ds = v1423
    fs = v1424
    gs = v1425
    cf = v1426
    ?1 = v1427
    pf = v1428
    ?3 = v1429
    af = v1430
    ?5 = v1431
    zf = v1432
    sf = v1433
    tf = v1434
    if = v1435
    df = v1436
    of = v1437
    iopl0 = v1438
    iopl1 = v1439
    nt = v1440
    ?15 = v1441
    memory = {}
0x8048316:push   0x10
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x10]
    }
0x804831b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x10]
    }
==============================================
Constant propagation in function "_exit"
==============================================
0x8048320:jmp    DWORD PTR ds:[0x80496e0]
    ax = v1607
    cx = v1608
    dx = v1609
    bx = v1610
    sp = v1611
    bp = v1612
    si = v1613
    di = v1614
    es = v1615
    cs = v1616
    ss = v1617
    ds = v1618
    fs = v1619
    gs = v1620
    cf = v1621
    ?1 = v1622
    pf = v1623
    ?3 = v1624
    af = v1625
    ?5 = v1626
    zf = v1627
    sf = v1628
    tf = v1629
    if = v1630
    df = v1631
    of = v1632
    iopl0 = v1633
    iopl1 = v1634
    nt = v1635
    ?15 = v1636
    memory = {}
0x8048326:push   0x18
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x18]
    }
0x804832b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x18]
    }
==============================================
Constant propagation in function "__gmon_start__"
==============================================
0x8048330:jmp    DWORD PTR ds:[0x80496e4]
    ax = v1802
    cx = v1803
    dx = v1804
    bx = v1805
    sp = v1806
    bp = v1807
    si = v1808
    di = v1809
    es = v1810
    cs = v1811
    ss = v1812
    ds = v1813
    fs = v1814
    gs = v1815
    cf = v1816
    ?1 = v1817
    pf = v1818
    ?3 = v1819
    af = v1820
    ?5 = v1821
    zf = v1822
    sf = v1823
    tf = v1824
    if = v1825
    df = v1826
    of = v1827
    iopl0 = v1828
    iopl1 = v1829
    nt = v1830
    ?15 = v1831
    memory = {}
0x8048336:push   0x20
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x20]
    }
0x804833b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x20]
    }
==============================================
Constant propagation in function "_start"
==============================================
0x8048340:xor    ebp, ebp
    ax = v1997
    cx = v1998
    dx = v1999
    bx = v2000
    sp = v2001
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2003
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2012
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {}
0x8048342:pop    esi
    ax = v1997
    cx = v1998
    dx = v1999
    bx = v2000
    sp = v2001+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2012
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {}
0x8048343:mov    ecx, esp
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2001+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2012
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {}
0x8048345:and    esp, 0xfffffff0
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152 [from 0x8048345:and    esp, 0xfffffff0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {}
0x8048348:push   eax
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x8048349:push   esp
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0x8 [from 0x8048349:push   esp]; value=v2152-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x804834a:push   edx
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0xc [from 0x804834a:push   edx]; value=v1999
        size=4; addr=v2152-0x8 [from 0x8048349:push   esp]; value=v2152-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x804834b:push   0x8048520
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0x10 [from 0x804834b:push   0x8048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2152-0xc [from 0x804834a:push   edx]; value=v1999
        size=4; addr=v2152-0x8 [from 0x8048349:push   esp]; value=v2152-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x8048350:push   0x80484b0
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0x14 [from 0x8048350:push   0x80484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2152-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2152-0xc [from 0x804834a:push   edx]; value=v1999
        size=4; addr=v2152-0x8 [from 0x8048349:push   esp]; value=v2152-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x8048355:push   ecx
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0x18 [from 0x8048355:push   ecx]; value=v2001+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2152-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2152-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2152-0xc [from 0x804834a:push   edx]; value=v1999
        size=4; addr=v2152-0x8 [from 0x8048349:push   esp]; value=v2152-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x8048356:push   esi
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0x1c [from 0x8048356:push   esi]; value=v2086 [from 0x8048342:pop    esi]
        size=4; addr=v2152-0x18 [from 0x8048355:push   ecx]; value=v2001+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2152-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2152-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2152-0xc [from 0x804834a:push   edx]; value=v1999
        size=4; addr=v2152-0x8 [from 0x8048349:push   esp]; value=v2152-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x8048357:push   0x8048410
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0x20 [from 0x8048357:push   0x8048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0x20 [from 0x8048357:push   0x8048410]; value=0x8048410 [from 0x8048357:push   0x8048410]
        size=4; addr=v2152-0x1c [from 0x8048356:push   esi]; value=v2086 [from 0x8048342:pop    esi]
        size=4; addr=v2152-0x18 [from 0x8048355:push   ecx]; value=v2001+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2152-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2152-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2152-0xc [from 0x804834a:push   edx]; value=v1999
        size=4; addr=v2152-0x8 [from 0x8048349:push   esp]; value=v2152-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x804835c:call   0x8048310
    ax = v1997
    cx = v2001+0x4 [from 0x8048342:pop    esi]
    dx = v1999
    bx = v2000
    sp = v2152-0x24 [from 0x804835c:call   0x8048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2086 [from 0x8048342:pop    esi]
    di = v2004
    es = v2005
    cs = v2006
    ss = v2007
    ds = v2008
    fs = v2009
    gs = v2010
    cf = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    ?1 = v2012
    pf = -v2168-0x1 [from 0x8048345:and    esp, 0xfffffff0]
    ?3 = v2014
    af = <top>
    ?5 = v2016
    zf = v2171 [from 0x8048345:and    esp, 0xfffffff0]
    sf = v2170 [from 0x8048345:and    esp, 0xfffffff0]
    tf = v2019
    if = v2020
    df = v2021
    of = 0x0 [from 0x8048345:and    esp, 0xfffffff0]
    iopl0 = v2023
    iopl1 = v2024
    nt = v2025
    ?15 = v2026
    memory = {
        size=4; addr=v2152-0x24 [from 0x804835c:call   0x8048310]; value=0x8048361 [from 0x804835c:call   0x8048310]
        size=4; addr=v2152-0x20 [from 0x8048357:push   0x8048410]; value=0x8048410 [from 0x8048357:push   0x8048410]
        size=4; addr=v2152-0x1c [from 0x8048356:push   esi]; value=v2086 [from 0x8048342:pop    esi]
        size=4; addr=v2152-0x18 [from 0x8048355:push   ecx]; value=v2001+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2152-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2152-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2152-0xc [from 0x804834a:push   edx]; value=v1999
        size=4; addr=v2152-0x8 [from 0x8048349:push   esp]; value=v2152-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2152-0x4 [from 0x8048348:push   eax]; value=v1997
    }
0x8048361:hlt    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048362:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048363:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "call_gmon_start"
==============================================
0x8048364:push   ebp
    ax = v2721
    cx = v2722
    dx = v2723
    bx = v2724
    sp = v2725-0x4 [from 0x8048364:push   ebp]
    bp = v2726
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = v2735
    ?1 = v2736
    pf = v2737
    ?3 = v2738
    af = v2739
    ?5 = v2740
    zf = v2741
    sf = v2742
    tf = v2743
    if = v2744
    df = v2745
    of = v2746
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048365:mov    ebp, esp
    ax = v2721
    cx = v2722
    dx = v2723
    bx = v2724
    sp = v2725-0x4 [from 0x8048364:push   ebp]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = v2735
    ?1 = v2736
    pf = v2737
    ?3 = v2738
    af = v2739
    ?5 = v2740
    zf = v2741
    sf = v2742
    tf = v2743
    if = v2744
    df = v2745
    of = v2746
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048367:push   ebx
    ax = v2721
    cx = v2722
    dx = v2723
    bx = v2724
    sp = v2725-0x8 [from 0x8048367:push   ebx]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = v2735
    ?1 = v2736
    pf = v2737
    ?3 = v2738
    af = v2739
    ?5 = v2740
    zf = v2741
    sf = v2742
    tf = v2743
    if = v2744
    df = v2745
    of = v2746
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048368:push   ecx
    ax = v2721
    cx = v2722
    dx = v2723
    bx = v2724
    sp = v2725-0xc [from 0x8048368:push   ecx]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = v2735
    ?1 = v2736
    pf = v2737
    ?3 = v2738
    af = v2739
    ?5 = v2740
    zf = v2741
    sf = v2742
    tf = v2743
    if = v2744
    df = v2745
    of = v2746
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048369:call   0x804836e
    ax = v2721
    cx = v2722
    dx = v2723
    bx = v2724
    sp = v2725-0x10 [from 0x8048369:call   0x804836e]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = v2735
    ?1 = v2736
    pf = v2737
    ?3 = v2738
    af = v2739
    ?5 = v2740
    zf = v2741
    sf = v2742
    tf = v2743
    if = v2744
    df = v2745
    of = v2746
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x804836e:pop    ebx
    ax = v2721
    cx = v2722
    dx = v2723
    bx = 0x804836e [from 0x8048369:call   0x804836e]
    sp = v2725-0xc [from 0x804836e:pop    ebx]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = v2735
    ?1 = v2736
    pf = v2737
    ?3 = v2738
    af = v2739
    ?5 = v2740
    zf = v2741
    sf = v2742
    tf = v2743
    if = v2744
    df = v2745
    of = v2746
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x804836f:add    ebx, 0x135a
    ax = v2721
    cx = v2722
    dx = v2723
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2725-0xc [from 0x804836e:pop    ebx]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?1 = v2736
    pf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?3 = v2738
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x135a]
    ?5 = v2740
    zf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804836f:add    ebx, 0x135a]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]
    ax = v2721
    cx = v2722
    dx = v3033 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2725-0xc [from 0x804836e:pop    ebx]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?1 = v2736
    pf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?3 = v2738
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x135a]
    ?5 = v2740
    zf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804836f:add    ebx, 0x135a]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x804837b:test   edx, edx
    ax = v2721
    cx = v2722
    dx = v3033 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2725-0xc [from 0x804836e:pop    ebx]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2736
    pf = -v3082-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2738
    af = <top>
    ?5 = v2740
    zf = v3085 [from 0x804837b:test   edx, edx]
    sf = v3084 [from 0x804837b:test   edx, edx]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x804837d:je     0x8048384
    ax = v2721
    cx = v2722
    dx = v3033 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2725-0xc [from 0x804836e:pop    ebx]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2736
    pf = -v3082-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2738
    af = <top>
    ?5 = v2740
    zf = v3085 [from 0x804837b:test   edx, edx]
    sf = v3084 [from 0x804837b:test   edx, edx]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x804837f:call   0x8048330
    ax = v2721
    cx = v2722
    dx = v3033 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2725-0x10 [from 0x804837f:call   0x8048330]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2736
    pf = -v3082-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2738
    af = <top>
    ?5 = v2740
    zf = v3085 [from 0x804837b:test   edx, edx]
    sf = v3084 [from 0x804837b:test   edx, edx]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x804837f:call   0x8048330]; value=0x8048384 [from 0x804837f:call   0x8048330]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048384:pop    eax
    ax = v2722
    cx = v2722
    dx = v3033 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2725-0x8 [from 0x8048384:pop    eax]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2736
    pf = -v3082-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2738
    af = <top>
    ?5 = v2740
    zf = v3085 [from 0x804837b:test   edx, edx]
    sf = v3084 [from 0x804837b:test   edx, edx]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048385:pop    ebx
    ax = v2722
    cx = v2722
    dx = v3033 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2724
    sp = v2725-0x4 [from 0x8048385:pop    ebx]
    bp = v2725-0x4 [from 0x8048364:push   ebp]
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2736
    pf = -v3082-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2738
    af = <top>
    ?5 = v2740
    zf = v3085 [from 0x804837b:test   edx, edx]
    sf = v3084 [from 0x804837b:test   edx, edx]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048386:leave  
    ax = v2722
    cx = v2722
    dx = v3033 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2724
    sp = v2725 [from 0x8048386:leave  ]
    bp = v2726
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2736
    pf = -v3082-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2738
    af = <top>
    ?5 = v2740
    zf = v3085 [from 0x804837b:test   edx, edx]
    sf = v3084 [from 0x804837b:test   edx, edx]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048387:ret    
    ax = v2722
    cx = v2722
    dx = v3033 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2724
    sp = v2725+0x4 [from 0x8048387:ret    ]
    bp = v2726
    si = v2727
    di = v2728
    es = v2729
    cs = v2730
    ss = v2731
    ds = v2732
    fs = v2733
    gs = v2734
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2736
    pf = -v3082-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2738
    af = <top>
    ?5 = v2740
    zf = v3085 [from 0x804837b:test   edx, edx]
    sf = v3084 [from 0x804837b:test   edx, edx]
    tf = v2743
    if = v2744
    df = v2745
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2747
    iopl1 = v2748
    nt = v2749
    ?15 = v2750
    memory = {
        size=4; addr=v2725-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2725-0xc [from 0x8048368:push   ecx]; value=v2722
        size=4; addr=v2725-0x8 [from 0x8048367:push   ebx]; value=v2724
        size=4; addr=v2725-0x4 [from 0x8048364:push   ebp]; value=v2726
    }
0x8048388:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048389:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804838a:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804838b:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804838c:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804838d:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804838e:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804838f:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__do_global_dtors_aux"
==============================================
0x8048390:push   ebp
    ax = v3683
    cx = v3684
    dx = v3685
    bx = v3686
    sp = v3687-0x4 [from 0x8048390:push   ebp]
    bp = v3688
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = v3697
    ?1 = v3698
    pf = v3699
    ?3 = v3700
    af = v3701
    ?5 = v3702
    zf = v3703
    sf = v3704
    tf = v3705
    if = v3706
    df = v3707
    of = v3708
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x8048391:mov    ebp, esp
    ax = v3683
    cx = v3684
    dx = v3685
    bx = v3686
    sp = v3687-0x4 [from 0x8048390:push   ebp]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = v3697
    ?1 = v3698
    pf = v3699
    ?3 = v3700
    af = v3701
    ?5 = v3702
    zf = v3703
    sf = v3704
    tf = v3705
    if = v3706
    df = v3707
    of = v3708
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x8048393:sub    esp, 0x8
    ax = v3683
    cx = v3684
    dx = v3685
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = -v3814-0x1 [from 0x8048393:sub    esp, 0x8]
    ?1 = v3698
    pf = -v3808-0x1 [from 0x8048393:sub    esp, 0x8]
    ?3 = v3700
    af = -v3812-0x1 [from 0x8048393:sub    esp, 0x8]
    ?5 = v3702
    zf = v3811 [from 0x8048393:sub    esp, 0x8]
    sf = v3810 [from 0x8048393:sub    esp, 0x8]
    tf = v3705
    if = v3706
    df = v3707
    of = v3818 [from 0x8048393:sub    esp, 0x8]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0
    ax = v3683
    cx = v3684
    dx = v3685
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = -v3886-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3698
    pf = -v3880-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3700
    af = -v3884-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3702
    zf = v3883 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v3882 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3705
    if = v3706
    df = v3707
    of = v3890 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x804839d:jne    0x80483cc
    ax = v3683
    cx = v3684
    dx = v3685
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = -v3886-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3698
    pf = -v3880-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3700
    af = -v3884-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3702
    zf = v3883 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v3882 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3705
    if = v3706
    df = v3707
    of = v3890 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]
    ax = v3990 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3684
    dx = v3685
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = -v3886-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3698
    pf = -v3880-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3700
    af = -v3884-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3702
    zf = v3883 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v3882 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3705
    if = v3706
    df = v3707
    of = v3890 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3990 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3684
    dx = v4024 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = -v3886-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3698
    pf = -v3880-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3700
    af = -v3884-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3702
    zf = v3883 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v3882 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3705
    if = v3706
    df = v3707
    of = v3890 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x80483a6:test   edx, edx
    ax = v3990 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3684
    dx = v4024 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3698
    pf = -v4073-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3700
    af = <top>
    ?5 = v3702
    zf = v4076 [from 0x80483a6:test   edx, edx]
    sf = v4075 [from 0x80483a6:test   edx, edx]
    tf = v3705
    if = v3706
    df = v3707
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x80483a8:je     0x80483c5
    ax = v3990 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3684
    dx = v4024 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3698
    pf = -v4073-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3700
    af = <top>
    ?5 = v3702
    zf = v4076 [from 0x80483a6:test   edx, edx]
    sf = v4075 [from 0x80483a6:test   edx, edx]
    tf = v3705
    if = v3706
    df = v3707
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x80483aa:lea    esi, [esi + 0x0]
    ax = v3990 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3684
    dx = v4024 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3698
    pf = -v4073-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3700
    af = <top>
    ?5 = v3702
    zf = v4076 [from 0x80483a6:test   edx, edx]
    sf = v4075 [from 0x80483a6:test   edx, edx]
    tf = v3705
    if = v3706
    df = v3707
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x80483b0:add    eax, 0x4
    ax = v3990+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3684
    dx = v4024 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = v4239 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3698
    pf = -v4234-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3700
    af = v4238 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3702
    zf = v4237 [from 0x80483b0:add    eax, 0x4]
    sf = v4236 [from 0x80483b0:add    eax, 0x4]
    tf = v3705
    if = v3706
    df = v3707
    of = v4242 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x4 [from 0x8048390:push   ebp]; value=v3688
    }
0x80483b3:mov    DWORD PTR ds:[0x80496f0], eax
    ax = v3990+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3684
    dx = v4024 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = v4239 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3698
    pf = -v4234-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3700
    af = v4238 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3702
    zf = v4237 [from 0x80483b0:add    eax, 0x4]
    sf = v4236 [from 0x80483b0:add    eax, 0x4]
    tf = v3705
    if = v3706
    df = v3707
    of = v4242 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x80496f0], eax]; value=v3990+0x4 [from 0x80483b0:add    eax, 0x4]
    }
0x80483b8:call   edx
    ax = v3990+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3684
    dx = v4024 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3686
    sp = v3687-0x10 [from 0x80483b8:call   edx]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = v4239 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3698
    pf = -v4234-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3700
    af = v4238 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3702
    zf = v4237 [from 0x80483b0:add    eax, 0x4]
    sf = v4236 [from 0x80483b0:add    eax, 0x4]
    tf = v3705
    if = v3706
    df = v3707
    of = v4242 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=4; addr=v3687-0x10 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
0x80483ba:mov    eax, DWORD PTR ds:[0x80496f0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c1:test   edx, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c3:jne    0x80483b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1
    ax = v3990 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3684
    dx = v4024 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3686
    sp = v3687-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3687-0x4 [from 0x8048390:push   ebp]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3698
    pf = -v4073-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3700
    af = <top>
    ?5 = v3702
    zf = v4076 [from 0x80483a6:test   edx, edx]
    sf = v4075 [from 0x80483a6:test   edx, edx]
    tf = v3705
    if = v3706
    df = v3707
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1]
    }
0x80483cc:leave  
    ax = v3956
    cx = v3684
    dx = v3958
    bx = v3686
    sp = v3687 [from 0x80483cc:leave  ]
    bp = v4484 [from 0x80483cc:leave  ]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = v3970
    ?1 = v3698
    pf = v3972
    ?3 = v3700
    af = -v3884-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3702
    zf = v3976
    sf = v3977
    tf = v3705
    if = v3706
    df = v3707
    of = v3981
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {}
0x80483cd:ret    
    ax = v3956
    cx = v3684
    dx = v3958
    bx = v3686
    sp = v3687+0x4 [from 0x80483cd:ret    ]
    bp = v4484 [from 0x80483cc:leave  ]
    si = v3689
    di = v3690
    es = v3691
    cs = v3692
    ss = v3693
    ds = v3694
    fs = v3695
    gs = v3696
    cf = v3970
    ?1 = v3698
    pf = v3972
    ?3 = v3700
    af = -v3884-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3702
    zf = v3976
    sf = v3977
    tf = v3705
    if = v3706
    df = v3707
    of = v3981
    iopl0 = v3709
    iopl1 = v3710
    nt = v3711
    ?15 = v3712
    memory = {}
0x80483ce:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "frame_dummy"
==============================================
0x80483d0:push   ebp
    ax = v4646
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0x4 [from 0x80483d0:push   ebp]
    bp = v4651
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = v4660
    ?1 = v4661
    pf = v4662
    ?3 = v4663
    af = v4664
    ?5 = v4665
    zf = v4666
    sf = v4667
    tf = v4668
    if = v4669
    df = v4670
    of = v4671
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483d1:mov    ebp, esp
    ax = v4646
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0x4 [from 0x80483d0:push   ebp]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = v4660
    ?1 = v4661
    pf = v4662
    ?3 = v4663
    af = v4664
    ?5 = v4665
    zf = v4666
    sf = v4667
    tf = v4668
    if = v4669
    df = v4670
    of = v4671
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483d3:sub    esp, 0x8
    ax = v4646
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = -v4777-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?1 = v4661
    pf = -v4771-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?3 = v4663
    af = -v4775-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?5 = v4665
    zf = v4774 [from 0x80483d3:sub    esp, 0x8]
    sf = v4773 [from 0x80483d3:sub    esp, 0x8]
    tf = v4668
    if = v4669
    df = v4670
    of = v4781 [from 0x80483d3:sub    esp, 0x8]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]
    ax = v4816 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = -v4777-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?1 = v4661
    pf = -v4771-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?3 = v4663
    af = -v4775-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?5 = v4665
    zf = v4774 [from 0x80483d3:sub    esp, 0x8]
    sf = v4773 [from 0x80483d3:sub    esp, 0x8]
    tf = v4668
    if = v4669
    df = v4670
    of = v4781 [from 0x80483d3:sub    esp, 0x8]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483db:test   eax, eax
    ax = v4816 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4661
    pf = -v4865-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4663
    af = <top>
    ?5 = v4665
    zf = v4868 [from 0x80483db:test   eax, eax]
    sf = v4867 [from 0x80483db:test   eax, eax]
    tf = v4668
    if = v4669
    df = v4670
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483dd:je     0x8048400
    ax = v4816 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4661
    pf = -v4865-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4663
    af = <top>
    ?5 = v4665
    zf = v4868 [from 0x80483db:test   eax, eax]
    sf = v4867 [from 0x80483db:test   eax, eax]
    tf = v4668
    if = v4669
    df = v4670
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483df:mov    eax, 0x0
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4661
    pf = -v4865-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4663
    af = <top>
    ?5 = v4665
    zf = v4868 [from 0x80483db:test   eax, eax]
    sf = v4867 [from 0x80483db:test   eax, eax]
    tf = v4668
    if = v4669
    df = v4670
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4661
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4663
    af = <top>
    ?5 = v4665
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4668
    if = v4669
    df = v4670
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483e6:je     0x8048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4661
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4663
    af = <top>
    ?5 = v4665
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4668
    if = v4669
    df = v4670
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {
        size=4; addr=v4650-0x4 [from 0x80483d0:push   ebp]; value=v4651
    }
0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8]
    }
0x80483ef:call   0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8]
        size=4; addr=<top>; value=0x80483f4 [from 0x80483ef:call   0x0]
    }
0x80483f4:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483fa:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048400:mov    esp, ebp
    ax = v4936
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650-0x4 [from 0x80483d0:push   ebp]
    bp = v4650-0x4 [from 0x80483d0:push   ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4661
    pf = v4952
    ?3 = v4663
    af = <top>
    ?5 = v4665
    zf = v4956
    sf = v4957
    tf = v4668
    if = v4669
    df = v4670
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {}
0x8048402:pop    ebp
    ax = v4936
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650 [from 0x8048402:pop    ebp]
    bp = v5265 [from 0x8048402:pop    ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4661
    pf = v4952
    ?3 = v4663
    af = <top>
    ?5 = v4665
    zf = v4956
    sf = v4957
    tf = v4668
    if = v4669
    df = v4670
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {}
0x8048403:ret    
    ax = v4936
    cx = v4647
    dx = v4648
    bx = v4649
    sp = v4650+0x4 [from 0x8048403:ret    ]
    bp = v5265 [from 0x8048402:pop    ebp]
    si = v4652
    di = v4653
    es = v4654
    cs = v4655
    ss = v4656
    ds = v4657
    fs = v4658
    gs = v4659
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4661
    pf = v4952
    ?3 = v4663
    af = <top>
    ?5 = v4665
    zf = v4956
    sf = v4957
    tf = v4668
    if = v4669
    df = v4670
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4672
    iopl1 = v4673
    nt = v4674
    ?15 = v4675
    memory = {}
0x8048404:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048405:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048406:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048407:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048408:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048409:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804840a:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804840b:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804840c:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804840d:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804840e:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804840f:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "main"
==============================================
0x8048410:push   ebp
    ax = v5779
    cx = v5780
    dx = v5781
    bx = v5782
    sp = v5783-0x4 [from 0x8048410:push   ebp]
    bp = v5784
    si = v5785
    di = v5786
    es = v5787
    cs = v5788
    ss = v5789
    ds = v5790
    fs = v5791
    gs = v5792
    cf = v5793
    ?1 = v5794
    pf = v5795
    ?3 = v5796
    af = v5797
    ?5 = v5798
    zf = v5799
    sf = v5800
    tf = v5801
    if = v5802
    df = v5803
    of = v5804
    iopl0 = v5805
    iopl1 = v5806
    nt = v5807
    ?15 = v5808
    memory = {
        size=4; addr=v5783-0x4 [from 0x8048410:push   ebp]; value=v5784
    }
0x8048411:mov    edx, 0x8048480
    ax = v5779
    cx = v5780
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v5782
    sp = v5783-0x4 [from 0x8048410:push   ebp]
    bp = v5784
    si = v5785
    di = v5786
    es = v5787
    cs = v5788
    ss = v5789
    ds = v5790
    fs = v5791
    gs = v5792
    cf = v5793
    ?1 = v5794
    pf = v5795
    ?3 = v5796
    af = v5797
    ?5 = v5798
    zf = v5799
    sf = v5800
    tf = v5801
    if = v5802
    df = v5803
    of = v5804
    iopl0 = v5805
    iopl1 = v5806
    nt = v5807
    ?15 = v5808
    memory = {
        size=4; addr=v5783-0x4 [from 0x8048410:push   ebp]; value=v5784
    }
0x8048416:mov    ebp, esp
    ax = v5779
    cx = v5780
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v5782
    sp = v5783-0x4 [from 0x8048410:push   ebp]
    bp = v5783-0x4 [from 0x8048410:push   ebp]
    si = v5785
    di = v5786
    es = v5787
    cs = v5788
    ss = v5789
    ds = v5790
    fs = v5791
    gs = v5792
    cf = v5793
    ?1 = v5794
    pf = v5795
    ?3 = v5796
    af = v5797
    ?5 = v5798
    zf = v5799
    sf = v5800
    tf = v5801
    if = v5802
    df = v5803
    of = v5804
    iopl0 = v5805
    iopl1 = v5806
    nt = v5807
    ?15 = v5808
    memory = {
        size=4; addr=v5783-0x4 [from 0x8048410:push   ebp]; value=v5784
    }
0x8048418:sub    esp, 0x8
    ax = v5779
    cx = v5780
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v5782
    sp = v5783-0xc [from 0x8048418:sub    esp, 0x8]
    bp = v5783-0x4 [from 0x8048410:push   ebp]
    si = v5785
    di = v5786
    es = v5787
    cs = v5788
    ss = v5789
    ds = v5790
    fs = v5791
    gs = v5792
    cf = -v5943-0x1 [from 0x8048418:sub    esp, 0x8]
    ?1 = v5794
    pf = -v5937-0x1 [from 0x8048418:sub    esp, 0x8]
    ?3 = v5796
    af = -v5941-0x1 [from 0x8048418:sub    esp, 0x8]
    ?5 = v5798
    zf = v5940 [from 0x8048418:sub    esp, 0x8]
    sf = v5939 [from 0x8048418:sub    esp, 0x8]
    tf = v5801
    if = v5802
    df = v5803
    of = v5947 [from 0x8048418:sub    esp, 0x8]
    iopl0 = v5805
    iopl1 = v5806
    nt = v5807
    ?15 = v5808
    memory = {
        size=4; addr=v5783-0x4 [from 0x8048410:push   ebp]; value=v5784
    }
0x804841b:and    esp, 0xfffffff0
    ax = v5779
    cx = v5780
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v5782
    sp = v5981 [from 0x804841b:and    esp, 0xfffffff0]
    bp = v5783-0x4 [from 0x8048410:push   ebp]
    si = v5785
    di = v5786
    es = v5787
    cs = v5788
    ss = v5789
    ds = v5790
    fs = v5791
    gs = v5792
    cf = 0x0 [from 0x804841b:and    esp, 0xfffffff0]
    ?1 = v5794
    pf = -v5997-0x1 [from 0x804841b:and    esp, 0xfffffff0]
    ?3 = v5796
    af = <top>
    ?5 = v5798
    zf = v6000 [from 0x804841b:and    esp, 0xfffffff0]
    sf = v5999 [from 0x804841b:and    esp, 0xfffffff0]
    tf = v5801
    if = v5802
    df = v5803
    of = 0x0 [from 0x804841b:and    esp, 0xfffffff0]
    iopl0 = v5805
    iopl1 = v5806
    nt = v5807
    ?15 = v5808
    memory = {
        size=4; addr=v5783-0x4 [from 0x8048410:push   ebp]; value=v5784
    }
0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx
    ax = v5779
    cx = v5780
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v5782
    sp = v5981 [from 0x804841b:and    esp, 0xfffffff0]
    bp = v5783-0x4 [from 0x8048410:push   ebp]
    si = v5785
    di = v5786
    es = v5787
    cs = v5788
    ss = v5789
    ds = v5790
    fs = v5791
    gs = v5792
    cf = 0x0 [from 0x804841b:and    esp, 0xfffffff0]
    ?1 = v5794
    pf = -v5997-0x1 [from 0x804841b:and    esp, 0xfffffff0]
    ?3 = v5796
    af = <top>
    ?5 = v5798
    zf = v6000 [from 0x804841b:and    esp, 0xfffffff0]
    sf = v5999 [from 0x804841b:and    esp, 0xfffffff0]
    tf = v5801
    if = v5802
    df = v5803
    of = 0x0 [from 0x804841b:and    esp, 0xfffffff0]
    iopl0 = v5805
    iopl1 = v5806
    nt = v5807
    ?15 = v5808
    memory = {
        size=4; addr=v5981+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    }
0x8048422:mov    DWORD PTR ss:[esp], 0xa
    ax = v5779
    cx = v5780
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v5782
    sp = v5981 [from 0x804841b:and    esp, 0xfffffff0]
    bp = v5783-0x4 [from 0x8048410:push   ebp]
    si = v5785
    di = v5786
    es = v5787
    cs = v5788
    ss = v5789
    ds = v5790
    fs = v5791
    gs = v5792
    cf = 0x0 [from 0x804841b:and    esp, 0xfffffff0]
    ?1 = v5794
    pf = -v5997-0x1 [from 0x804841b:and    esp, 0xfffffff0]
    ?3 = v5796
    af = <top>
    ?5 = v5798
    zf = v6000 [from 0x804841b:and    esp, 0xfffffff0]
    sf = v5999 [from 0x804841b:and    esp, 0xfffffff0]
    tf = v5801
    if = v5802
    df = v5803
    of = 0x0 [from 0x804841b:and    esp, 0xfffffff0]
    iopl0 = v5805
    iopl1 = v5806
    nt = v5807
    ?15 = v5808
    memory = {
        size=4; addr=v5981 [from 0x804841b:and    esp, 0xfffffff0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0xa]
        size=4; addr=v5981+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    }
0x8048429:call   0x80482f0
    ax = v5779
    cx = v5780
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v5782
    sp = v5981-0x4 [from 0x8048429:call   0x80482f0]
    bp = v5783-0x4 [from 0x8048410:push   ebp]
    si = v5785
    di = v5786
    es = v5787
    cs = v5788
    ss = v5789
    ds = v5790
    fs = v5791
    gs = v5792
    cf = 0x0 [from 0x804841b:and    esp, 0xfffffff0]
    ?1 = v5794
    pf = -v5997-0x1 [from 0x804841b:and    esp, 0xfffffff0]
    ?3 = v5796
    af = <top>
    ?5 = v5798
    zf = v6000 [from 0x804841b:and    esp, 0xfffffff0]
    sf = v5999 [from 0x804841b:and    esp, 0xfffffff0]
    tf = v5801
    if = v5802
    df = v5803
    of = 0x0 [from 0x804841b:and    esp, 0xfffffff0]
    iopl0 = v5805
    iopl1 = v5806
    nt = v5807
    ?15 = v5808
    memory = {
        size=4; addr=v5981 [from 0x804841b:and    esp, 0xfffffff0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0xa]
        size=4; addr=v5981+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
        size=4; addr=v5981-0x4 [from 0x8048429:call   0x80482f0]; value=0x804842e [from 0x8048429:call   0x80482f0]
    }
0x804842e:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048430:xor    eax, eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048432:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048433:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048434:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804843a:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "bar"
==============================================
0x8048440:push   ebp
    ax = v6492
    cx = v6493
    dx = v6494
    bx = v6495
    sp = v6496-0x4 [from 0x8048440:push   ebp]
    bp = v6497
    si = v6498
    di = v6499
    es = v6500
    cs = v6501
    ss = v6502
    ds = v6503
    fs = v6504
    gs = v6505
    cf = v6506
    ?1 = v6507
    pf = v6508
    ?3 = v6509
    af = v6510
    ?5 = v6511
    zf = v6512
    sf = v6513
    tf = v6514
    if = v6515
    df = v6516
    of = v6517
    iopl0 = v6518
    iopl1 = v6519
    nt = v6520
    ?15 = v6521
    memory = {
        size=4; addr=v6496-0x4 [from 0x8048440:push   ebp]; value=v6497
    }
0x8048441:mov    ebp, esp
    ax = v6492
    cx = v6493
    dx = v6494
    bx = v6495
    sp = v6496-0x4 [from 0x8048440:push   ebp]
    bp = v6496-0x4 [from 0x8048440:push   ebp]
    si = v6498
    di = v6499
    es = v6500
    cs = v6501
    ss = v6502
    ds = v6503
    fs = v6504
    gs = v6505
    cf = v6506
    ?1 = v6507
    pf = v6508
    ?3 = v6509
    af = v6510
    ?5 = v6511
    zf = v6512
    sf = v6513
    tf = v6514
    if = v6515
    df = v6516
    of = v6517
    iopl0 = v6518
    iopl1 = v6519
    nt = v6520
    ?15 = v6521
    memory = {
        size=4; addr=v6496-0x4 [from 0x8048440:push   ebp]; value=v6497
    }
0x8048443:sub    esp, 0x8
    ax = v6492
    cx = v6493
    dx = v6494
    bx = v6495
    sp = v6496-0xc [from 0x8048443:sub    esp, 0x8]
    bp = v6496-0x4 [from 0x8048440:push   ebp]
    si = v6498
    di = v6499
    es = v6500
    cs = v6501
    ss = v6502
    ds = v6503
    fs = v6504
    gs = v6505
    cf = -v6623-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6507
    pf = -v6617-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6509
    af = -v6621-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6511
    zf = v6620 [from 0x8048443:sub    esp, 0x8]
    sf = v6619 [from 0x8048443:sub    esp, 0x8]
    tf = v6514
    if = v6515
    df = v6516
    of = v6627 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6518
    iopl1 = v6519
    nt = v6520
    ?15 = v6521
    memory = {
        size=4; addr=v6496-0x4 [from 0x8048440:push   ebp]; value=v6497
    }
0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v6492
    cx = v6493
    dx = v6494
    bx = v6495
    sp = v6496-0xc [from 0x8048443:sub    esp, 0x8]
    bp = v6496-0x4 [from 0x8048440:push   ebp]
    si = v6498
    di = v6499
    es = v6500
    cs = v6501
    ss = v6502
    ds = v6503
    fs = v6504
    gs = v6505
    cf = -v6623-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6507
    pf = -v6617-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6509
    af = -v6621-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6511
    zf = v6620 [from 0x8048443:sub    esp, 0x8]
    sf = v6619 [from 0x8048443:sub    esp, 0x8]
    tf = v6514
    if = v6515
    df = v6516
    of = v6627 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6518
    iopl1 = v6519
    nt = v6520
    ?15 = v6521
    memory = {
        size=4; addr=v6496-0xc [from 0x8048443:sub    esp, 0x8]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v6496-0x4 [from 0x8048440:push   ebp]; value=v6497
    }
0x804844d:call   0x8048300
    ax = v6492
    cx = v6493
    dx = v6494
    bx = v6495
    sp = v6496-0x10 [from 0x804844d:call   0x8048300]
    bp = v6496-0x4 [from 0x8048440:push   ebp]
    si = v6498
    di = v6499
    es = v6500
    cs = v6501
    ss = v6502
    ds = v6503
    fs = v6504
    gs = v6505
    cf = -v6623-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6507
    pf = -v6617-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6509
    af = -v6621-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6511
    zf = v6620 [from 0x8048443:sub    esp, 0x8]
    sf = v6619 [from 0x8048443:sub    esp, 0x8]
    tf = v6514
    if = v6515
    df = v6516
    of = v6627 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6518
    iopl1 = v6519
    nt = v6520
    ?15 = v6521
    memory = {
        size=4; addr=v6496-0x10 [from 0x804844d:call   0x8048300]; value=0x8048452 [from 0x804844d:call   0x8048300]
        size=4; addr=v6496-0xc [from 0x8048443:sub    esp, 0x8]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v6496-0x4 [from 0x8048440:push   ebp]; value=v6497
    }
0x8048452:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048454:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048455:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048456:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048459:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "foo"
==============================================
0x8048460:push   ebp
    ax = v7025
    cx = v7026
    dx = v7027
    bx = v7028
    sp = v7029-0x4 [from 0x8048460:push   ebp]
    bp = v7030
    si = v7031
    di = v7032
    es = v7033
    cs = v7034
    ss = v7035
    ds = v7036
    fs = v7037
    gs = v7038
    cf = v7039
    ?1 = v7040
    pf = v7041
    ?3 = v7042
    af = v7043
    ?5 = v7044
    zf = v7045
    sf = v7046
    tf = v7047
    if = v7048
    df = v7049
    of = v7050
    iopl0 = v7051
    iopl1 = v7052
    nt = v7053
    ?15 = v7054
    memory = {
        size=4; addr=v7029-0x4 [from 0x8048460:push   ebp]; value=v7030
    }
0x8048461:mov    ebp, esp
    ax = v7025
    cx = v7026
    dx = v7027
    bx = v7028
    sp = v7029-0x4 [from 0x8048460:push   ebp]
    bp = v7029-0x4 [from 0x8048460:push   ebp]
    si = v7031
    di = v7032
    es = v7033
    cs = v7034
    ss = v7035
    ds = v7036
    fs = v7037
    gs = v7038
    cf = v7039
    ?1 = v7040
    pf = v7041
    ?3 = v7042
    af = v7043
    ?5 = v7044
    zf = v7045
    sf = v7046
    tf = v7047
    if = v7048
    df = v7049
    of = v7050
    iopl0 = v7051
    iopl1 = v7052
    nt = v7053
    ?15 = v7054
    memory = {
        size=4; addr=v7029-0x4 [from 0x8048460:push   ebp]; value=v7030
    }
0x8048463:sub    esp, 0x8
    ax = v7025
    cx = v7026
    dx = v7027
    bx = v7028
    sp = v7029-0xc [from 0x8048463:sub    esp, 0x8]
    bp = v7029-0x4 [from 0x8048460:push   ebp]
    si = v7031
    di = v7032
    es = v7033
    cs = v7034
    ss = v7035
    ds = v7036
    fs = v7037
    gs = v7038
    cf = -v7156-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7040
    pf = -v7150-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7042
    af = -v7154-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7044
    zf = v7153 [from 0x8048463:sub    esp, 0x8]
    sf = v7152 [from 0x8048463:sub    esp, 0x8]
    tf = v7047
    if = v7048
    df = v7049
    of = v7160 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7051
    iopl1 = v7052
    nt = v7053
    ?15 = v7054
    memory = {
        size=4; addr=v7029-0x4 [from 0x8048460:push   ebp]; value=v7030
    }
0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v7025
    cx = v7026
    dx = v7027
    bx = v7028
    sp = v7029-0xc [from 0x8048463:sub    esp, 0x8]
    bp = v7029-0x4 [from 0x8048460:push   ebp]
    si = v7031
    di = v7032
    es = v7033
    cs = v7034
    ss = v7035
    ds = v7036
    fs = v7037
    gs = v7038
    cf = -v7156-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7040
    pf = -v7150-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7042
    af = -v7154-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7044
    zf = v7153 [from 0x8048463:sub    esp, 0x8]
    sf = v7152 [from 0x8048463:sub    esp, 0x8]
    tf = v7047
    if = v7048
    df = v7049
    of = v7160 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7051
    iopl1 = v7052
    nt = v7053
    ?15 = v7054
    memory = {
        size=4; addr=v7029-0xc [from 0x8048463:sub    esp, 0x8]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v7029-0x4 [from 0x8048460:push   ebp]; value=v7030
    }
0x804846d:call   0x8048300
    ax = v7025
    cx = v7026
    dx = v7027
    bx = v7028
    sp = v7029-0x10 [from 0x804846d:call   0x8048300]
    bp = v7029-0x4 [from 0x8048460:push   ebp]
    si = v7031
    di = v7032
    es = v7033
    cs = v7034
    ss = v7035
    ds = v7036
    fs = v7037
    gs = v7038
    cf = -v7156-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7040
    pf = -v7150-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7042
    af = -v7154-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7044
    zf = v7153 [from 0x8048463:sub    esp, 0x8]
    sf = v7152 [from 0x8048463:sub    esp, 0x8]
    tf = v7047
    if = v7048
    df = v7049
    of = v7160 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7051
    iopl1 = v7052
    nt = v7053
    ?15 = v7054
    memory = {
        size=4; addr=v7029-0x10 [from 0x804846d:call   0x8048300]; value=0x8048472 [from 0x804846d:call   0x8048300]
        size=4; addr=v7029-0xc [from 0x8048463:sub    esp, 0x8]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v7029-0x4 [from 0x8048460:push   ebp]; value=v7030
    }
0x8048472:mov    DWORD PTR ss:[esp], 0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x0]
    }
0x8048479:call   0x8048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x0]
        size=4; addr=<top>; value=0x804847e [from 0x8048479:call   0x8048320]
    }
0x804847e:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "handler"
==============================================
0x8048480:push   ebp
    ax = v7488
    cx = v7489
    dx = v7490
    bx = v7491
    sp = v7492-0x4 [from 0x8048480:push   ebp]
    bp = v7493
    si = v7494
    di = v7495
    es = v7496
    cs = v7497
    ss = v7498
    ds = v7499
    fs = v7500
    gs = v7501
    cf = v7502
    ?1 = v7503
    pf = v7504
    ?3 = v7505
    af = v7506
    ?5 = v7507
    zf = v7508
    sf = v7509
    tf = v7510
    if = v7511
    df = v7512
    of = v7513
    iopl0 = v7514
    iopl1 = v7515
    nt = v7516
    ?15 = v7517
    memory = {
        size=4; addr=v7492-0x4 [from 0x8048480:push   ebp]; value=v7493
    }
0x8048481:mov    ebp, esp
    ax = v7488
    cx = v7489
    dx = v7490
    bx = v7491
    sp = v7492-0x4 [from 0x8048480:push   ebp]
    bp = v7492-0x4 [from 0x8048480:push   ebp]
    si = v7494
    di = v7495
    es = v7496
    cs = v7497
    ss = v7498
    ds = v7499
    fs = v7500
    gs = v7501
    cf = v7502
    ?1 = v7503
    pf = v7504
    ?3 = v7505
    af = v7506
    ?5 = v7507
    zf = v7508
    sf = v7509
    tf = v7510
    if = v7511
    df = v7512
    of = v7513
    iopl0 = v7514
    iopl1 = v7515
    nt = v7516
    ?15 = v7517
    memory = {
        size=4; addr=v7492-0x4 [from 0x8048480:push   ebp]; value=v7493
    }
0x8048483:sub    esp, 0x8
    ax = v7488
    cx = v7489
    dx = v7490
    bx = v7491
    sp = v7492-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7492-0x4 [from 0x8048480:push   ebp]
    si = v7494
    di = v7495
    es = v7496
    cs = v7497
    ss = v7498
    ds = v7499
    fs = v7500
    gs = v7501
    cf = -v7619-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7503
    pf = -v7613-0x1 [from 0x8048483:sub    esp, 0x8]
    ?3 = v7505
    af = -v7617-0x1 [from 0x8048483:sub    esp, 0x8]
    ?5 = v7507
    zf = v7616 [from 0x8048483:sub    esp, 0x8]
    sf = v7615 [from 0x8048483:sub    esp, 0x8]
    tf = v7510
    if = v7511
    df = v7512
    of = v7623 [from 0x8048483:sub    esp, 0x8]
    iopl0 = v7514
    iopl1 = v7515
    nt = v7516
    ?15 = v7517
    memory = {
        size=4; addr=v7492-0x4 [from 0x8048480:push   ebp]; value=v7493
    }
0x8048486:inc    DWORD PTR ds:[0x80496f8]
    ax = v7488
    cx = v7489
    dx = v7490
    bx = v7491
    sp = v7492-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7492-0x4 [from 0x8048480:push   ebp]
    si = v7494
    di = v7495
    es = v7496
    cs = v7497
    ss = v7498
    ds = v7499
    fs = v7500
    gs = v7501
    cf = -v7619-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7503
    pf = -v7683-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7505
    af = v7687 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7507
    zf = v7686 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v7685 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7510
    if = v7511
    df = v7512
    of = v7690 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7514
    iopl1 = v7515
    nt = v7516
    ?15 = v7517
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]; value=v7658+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    }
0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v7488
    cx = v7489
    dx = v7490
    bx = v7491
    sp = v7492-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7492-0x4 [from 0x8048480:push   ebp]
    si = v7494
    di = v7495
    es = v7496
    cs = v7497
    ss = v7498
    ds = v7499
    fs = v7500
    gs = v7501
    cf = -v7619-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7503
    pf = -v7683-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7505
    af = v7687 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7507
    zf = v7686 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v7685 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7510
    if = v7511
    df = v7512
    of = v7690 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7514
    iopl1 = v7515
    nt = v7516
    ?15 = v7517
    memory = {
        size=4; addr=v7492-0xc [from 0x8048483:sub    esp, 0x8]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4]
    }
0x8048493:call   0x8048300
    ax = v7488
    cx = v7489
    dx = v7490
    bx = v7491
    sp = v7492-0x10 [from 0x8048493:call   0x8048300]
    bp = v7492-0x4 [from 0x8048480:push   ebp]
    si = v7494
    di = v7495
    es = v7496
    cs = v7497
    ss = v7498
    ds = v7499
    fs = v7500
    gs = v7501
    cf = -v7619-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7503
    pf = -v7683-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7505
    af = v7687 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7507
    zf = v7686 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v7685 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7510
    if = v7511
    df = v7512
    of = v7690 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7514
    iopl1 = v7515
    nt = v7516
    ?15 = v7517
    memory = {
        size=4; addr=v7492-0x10 [from 0x8048493:call   0x8048300]; value=0x8048498 [from 0x8048493:call   0x8048300]
        size=4; addr=v7492-0xc [from 0x8048483:sub    esp, 0x8]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4]
    }
0x8048498:mov    DWORD PTR ss:[esp], 0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x0]
    }
0x804849f:call   0x8048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x0]
        size=4; addr=<top>; value=0x80484a4 [from 0x804849f:call   0x8048320]
    }
0x80484a4:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a5:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a6:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a7:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a9:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484aa:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ab:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ac:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ad:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ae:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484af:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_init"
==============================================
0x80484b0:push   ebp
    ax = v8373
    cx = v8374
    dx = v8375
    bx = v8376
    sp = v8377-0x4 [from 0x80484b0:push   ebp]
    bp = v8378
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = v8387
    ?1 = v8388
    pf = v8389
    ?3 = v8390
    af = v8391
    ?5 = v8392
    zf = v8393
    sf = v8394
    tf = v8395
    if = v8396
    df = v8397
    of = v8398
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484b1:mov    ebp, esp
    ax = v8373
    cx = v8374
    dx = v8375
    bx = v8376
    sp = v8377-0x4 [from 0x80484b0:push   ebp]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = v8387
    ?1 = v8388
    pf = v8389
    ?3 = v8390
    af = v8391
    ?5 = v8392
    zf = v8393
    sf = v8394
    tf = v8395
    if = v8396
    df = v8397
    of = v8398
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484b3:push   edi
    ax = v8373
    cx = v8374
    dx = v8375
    bx = v8376
    sp = v8377-0x8 [from 0x80484b3:push   edi]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = v8387
    ?1 = v8388
    pf = v8389
    ?3 = v8390
    af = v8391
    ?5 = v8392
    zf = v8393
    sf = v8394
    tf = v8395
    if = v8396
    df = v8397
    of = v8398
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x8 [from 0x80484b3:push   edi]; value=v8380
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484b4:push   esi
    ax = v8373
    cx = v8374
    dx = v8375
    bx = v8376
    sp = v8377-0xc [from 0x80484b4:push   esi]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = v8387
    ?1 = v8388
    pf = v8389
    ?3 = v8390
    af = v8391
    ?5 = v8392
    zf = v8393
    sf = v8394
    tf = v8395
    if = v8396
    df = v8397
    of = v8398
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0xc [from 0x80484b4:push   esi]; value=v8379
        size=4; addr=v8377-0x8 [from 0x80484b3:push   edi]; value=v8380
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484b5:push   ebx
    ax = v8373
    cx = v8374
    dx = v8375
    bx = v8376
    sp = v8377-0x10 [from 0x80484b5:push   ebx]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = v8387
    ?1 = v8388
    pf = v8389
    ?3 = v8390
    af = v8391
    ?5 = v8392
    zf = v8393
    sf = v8394
    tf = v8395
    if = v8396
    df = v8397
    of = v8398
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x10 [from 0x80484b5:push   ebx]; value=v8376
        size=4; addr=v8377-0xc [from 0x80484b4:push   esi]; value=v8379
        size=4; addr=v8377-0x8 [from 0x80484b3:push   edi]; value=v8380
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484b6:sub    esp, 0xc
    ax = v8373
    cx = v8374
    dx = v8375
    bx = v8376
    sp = v8377-0x1c [from 0x80484b6:sub    esp, 0xc]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = -v8612-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8388
    pf = -v8606-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8390
    af = -v8610-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8392
    zf = v8609 [from 0x80484b6:sub    esp, 0xc]
    sf = v8608 [from 0x80484b6:sub    esp, 0xc]
    tf = v8395
    if = v8396
    df = v8397
    of = v8616 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x10 [from 0x80484b5:push   ebx]; value=v8376
        size=4; addr=v8377-0xc [from 0x80484b4:push   esi]; value=v8379
        size=4; addr=v8377-0x8 [from 0x80484b3:push   edi]; value=v8380
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484b9:call   0x80484be
    ax = v8373
    cx = v8374
    dx = v8375
    bx = v8376
    sp = v8377-0x20 [from 0x80484b9:call   0x80484be]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = -v8612-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8388
    pf = -v8606-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8390
    af = -v8610-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8392
    zf = v8609 [from 0x80484b6:sub    esp, 0xc]
    sf = v8608 [from 0x80484b6:sub    esp, 0xc]
    tf = v8395
    if = v8396
    df = v8397
    of = v8616 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8377-0x10 [from 0x80484b5:push   ebx]; value=v8376
        size=4; addr=v8377-0xc [from 0x80484b4:push   esi]; value=v8379
        size=4; addr=v8377-0x8 [from 0x80484b3:push   edi]; value=v8380
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484be:pop    ebx
    ax = v8373
    cx = v8374
    dx = v8375
    bx = 0x80484be [from 0x80484b9:call   0x80484be]
    sp = v8377-0x1c [from 0x80484be:pop    ebx]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = -v8612-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8388
    pf = -v8606-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8390
    af = -v8610-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8392
    zf = v8609 [from 0x80484b6:sub    esp, 0xc]
    sf = v8608 [from 0x80484b6:sub    esp, 0xc]
    tf = v8395
    if = v8396
    df = v8397
    of = v8616 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8377-0x10 [from 0x80484b5:push   ebx]; value=v8376
        size=4; addr=v8377-0xc [from 0x80484b4:push   esi]; value=v8379
        size=4; addr=v8377-0x8 [from 0x80484b3:push   edi]; value=v8380
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484bf:add    ebx, 0x120a
    ax = v8373
    cx = v8374
    dx = v8375
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x120a]
    sp = v8377-0x1c [from 0x80484be:pop    ebx]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?1 = v8388
    pf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?3 = v8390
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x120a]
    ?5 = v8392
    zf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    tf = v8395
    if = v8396
    df = v8397
    of = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8377-0x10 [from 0x80484b5:push   ebx]; value=v8376
        size=4; addr=v8377-0xc [from 0x80484b4:push   esi]; value=v8379
        size=4; addr=v8377-0x8 [from 0x80484b3:push   edi]; value=v8380
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484c5:call   0x80482c8
    ax = v8373
    cx = v8374
    dx = v8375
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x120a]
    sp = v8377-0x20 [from 0x80484c5:call   0x80482c8]
    bp = v8377-0x4 [from 0x80484b0:push   ebp]
    si = v8379
    di = v8380
    es = v8381
    cs = v8382
    ss = v8383
    ds = v8384
    fs = v8385
    gs = v8386
    cf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?1 = v8388
    pf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?3 = v8390
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x120a]
    ?5 = v8392
    zf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    tf = v8395
    if = v8396
    df = v8397
    of = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    iopl0 = v8399
    iopl1 = v8400
    nt = v8401
    ?15 = v8402
    memory = {
        size=4; addr=v8377-0x20 [from 0x80484c5:call   0x80482c8]; value=0x80484ca [from 0x80484c5:call   0x80482c8]
        size=4; addr=v8377-0x10 [from 0x80484b5:push   ebx]; value=v8376
        size=4; addr=v8377-0xc [from 0x80484b4:push   esi]; value=v8379
        size=4; addr=v8377-0x8 [from 0x80484b3:push   edi]; value=v8380
        size=4; addr=v8377-0x4 [from 0x80484b0:push   ebp]; value=v8378
    }
0x80484ca:lea    eax, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d0:lea    edx, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d6:sub    eax, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d8:sar    eax, 0x2
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484db:mov    DWORD PTR ss:[ebp + 0xfffffff0], eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484de:jne    0x80484f0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e0:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e3:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9197 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e4:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9197 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v9233 [from 0x80484e4:pop    esi]
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e5:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9197 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v9233 [from 0x80484e4:pop    esi]
    di = v9269 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e6:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9197 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v9305 [from 0x80484e6:pop    ebp]
    si = v9233 [from 0x80484e4:pop    esi]
    di = v9269 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e7:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9197 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v9305 [from 0x80484e6:pop    ebp]
    si = v9233 [from 0x80484e4:pop    esi]
    di = v9269 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e9:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f0:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f2:mov    esi, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f4:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484fa:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048500:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
0x8048502:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048503:add    esi, 0x4
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xfffffff0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048509:jb     0x8048500
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850b:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850e:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850f:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048510:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048511:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048512:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048513:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048519:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_fini"
==============================================
0x8048520:push   ebp
    ax = v10274
    cx = v10275
    dx = v10276
    bx = v10277
    sp = v10278-0x4 [from 0x8048520:push   ebp]
    bp = v10279
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = v10288
    ?1 = v10289
    pf = v10290
    ?3 = v10291
    af = v10292
    ?5 = v10293
    zf = v10294
    sf = v10295
    tf = v10296
    if = v10297
    df = v10298
    of = v10299
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048521:mov    ebp, esp
    ax = v10274
    cx = v10275
    dx = v10276
    bx = v10277
    sp = v10278-0x4 [from 0x8048520:push   ebp]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = v10288
    ?1 = v10289
    pf = v10290
    ?3 = v10291
    af = v10292
    ?5 = v10293
    zf = v10294
    sf = v10295
    tf = v10296
    if = v10297
    df = v10298
    of = v10299
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048523:push   edi
    ax = v10274
    cx = v10275
    dx = v10276
    bx = v10277
    sp = v10278-0x8 [from 0x8048523:push   edi]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = v10288
    ?1 = v10289
    pf = v10290
    ?3 = v10291
    af = v10292
    ?5 = v10293
    zf = v10294
    sf = v10295
    tf = v10296
    if = v10297
    df = v10298
    of = v10299
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048524:push   esi
    ax = v10274
    cx = v10275
    dx = v10276
    bx = v10277
    sp = v10278-0xc [from 0x8048524:push   esi]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = v10288
    ?1 = v10289
    pf = v10290
    ?3 = v10291
    af = v10292
    ?5 = v10293
    zf = v10294
    sf = v10295
    tf = v10296
    if = v10297
    df = v10298
    of = v10299
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048525:push   ebx
    ax = v10274
    cx = v10275
    dx = v10276
    bx = v10277
    sp = v10278-0x10 [from 0x8048525:push   ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = v10288
    ?1 = v10289
    pf = v10290
    ?3 = v10291
    af = v10292
    ?5 = v10293
    zf = v10294
    sf = v10295
    tf = v10296
    if = v10297
    df = v10298
    of = v10299
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048526:sub    esp, 0xc
    ax = v10274
    cx = v10275
    dx = v10276
    bx = v10277
    sp = v10278-0x1c [from 0x8048526:sub    esp, 0xc]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = -v10513-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10289
    pf = -v10507-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10291
    af = -v10511-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10293
    zf = v10510 [from 0x8048526:sub    esp, 0xc]
    sf = v10509 [from 0x8048526:sub    esp, 0xc]
    tf = v10296
    if = v10297
    df = v10298
    of = v10517 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048529:call   0x804852e
    ax = v10274
    cx = v10275
    dx = v10276
    bx = v10277
    sp = v10278-0x20 [from 0x8048529:call   0x804852e]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = -v10513-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10289
    pf = -v10507-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10291
    af = -v10511-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10293
    zf = v10510 [from 0x8048526:sub    esp, 0xc]
    sf = v10509 [from 0x8048526:sub    esp, 0xc]
    tf = v10296
    if = v10297
    df = v10298
    of = v10517 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x804852e:pop    ebx
    ax = v10274
    cx = v10275
    dx = v10276
    bx = 0x804852e [from 0x8048529:call   0x804852e]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = -v10513-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10289
    pf = -v10507-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10291
    af = -v10511-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10293
    zf = v10510 [from 0x8048526:sub    esp, 0xc]
    sf = v10509 [from 0x8048526:sub    esp, 0xc]
    tf = v10296
    if = v10297
    df = v10298
    of = v10517 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x804852f:add    ebx, 0x119a
    ax = v10274
    cx = v10275
    dx = v10276
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10289
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10291
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10293
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048535:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v10275
    dx = v10276
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10289
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10291
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10293
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x804853b:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v10275
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10289
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10291
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10293
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048541:sub    eax, edx
    ax = 0x0 [from 0x8048541:sub    eax, edx]
    cx = v10275
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x8048541:sub    eax, edx]
    ?1 = v10289
    pf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    ?3 = v10291
    af = 0x0 [from 0x8048541:sub    eax, edx]
    ?5 = v10293
    zf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    sf = 0x0 [from 0x8048541:sub    eax, edx]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x8048541:sub    eax, edx]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048543:sar    eax, 0x2
    ax = 0x0 [from 0x8048543:sar    eax, 0x2]
    cx = v10275
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10289
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    ?3 = v10291
    af = <top>
    ?5 = v10293
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    sf = 0x0 [from 0x8048543:sar    eax, 0x2]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x8048543:sar    eax, 0x2]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048546:mov    DWORD PTR ss:[ebp + 0xfffffff0], eax
    ax = 0x0 [from 0x8048543:sar    eax, 0x2]
    cx = v10275
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10289
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    ?3 = v10291
    af = <top>
    ?5 = v10293
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    sf = 0x0 [from 0x8048543:sar    eax, 0x2]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x8048543:sar    eax, 0x2]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xfffffff0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048549:dec    eax
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10275
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10289
    pf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?3 = v10291
    af = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?5 = v10293
    zf = 0x0 [from 0x8048549:dec    eax]
    sf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x8048549:dec    eax]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xfffffff0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x804854a:cmp    eax, 0xffffffff
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10275
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    ?1 = v10289
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xffffffff]
    ?3 = v10291
    af = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    ?5 = v10293
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xffffffff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xfffffff0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x804854d:je     0x804856b
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10275
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x1c [from 0x804852e:pop    ebx]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    ?1 = v10289
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xffffffff]
    ?3 = v10291
    af = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    ?5 = v10293
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xffffffff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10278-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xfffffff0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x804854f:lea    esi, [edx + eax*0x4]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048552:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048554:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804855a:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048560:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
0x8048562:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048563:sub    esi, 0x4
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048566:cmp    DWORD PTR ss:[ebp + 0xfffffff0], edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048569:jne    0x8048560
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804856b:call   0x80485b0
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10275
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10278-0x20 [from 0x804856b:call   0x80485b0]
    bp = v10278-0x4 [from 0x8048520:push   ebp]
    si = v10280
    di = v10281
    es = v10282
    cs = v10283
    ss = v10284
    ds = v10285
    fs = v10286
    gs = v10287
    cf = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    ?1 = v10289
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xffffffff]
    ?3 = v10291
    af = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    ?5 = v10293
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xffffffff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    tf = v10296
    if = v10297
    df = v10298
    of = 0x0 [from 0x804854a:cmp    eax, 0xffffffff]
    iopl0 = v10300
    iopl1 = v10301
    nt = v10302
    ?15 = v10303
    memory = {
        size=4; addr=v10278-0x20 [from 0x804856b:call   0x80485b0]; value=0x8048570 [from 0x804856b:call   0x80485b0]
        size=4; addr=v10278-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xfffffff0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10278-0x10 [from 0x8048525:push   ebx]; value=v10277
        size=4; addr=v10278-0xc [from 0x8048524:push   esi]; value=v10280
        size=4; addr=v10278-0x8 [from 0x8048523:push   edi]; value=v10281
        size=4; addr=v10278-0x4 [from 0x8048520:push   ebp]; value=v10279
    }
0x8048570:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048573:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048574:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048575:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048576:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048577:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048578:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048579:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804857a:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804857b:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804857c:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804857d:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804857e:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804857f:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__do_global_ctors_aux"
==============================================
0x8048580:push   ebp
    ax = v12192
    cx = v12193
    dx = v12194
    bx = v12195
    sp = v12196-0x4 [from 0x8048580:push   ebp]
    bp = v12197
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = v12206
    ?1 = v12207
    pf = v12208
    ?3 = v12209
    af = v12210
    ?5 = v12211
    zf = v12212
    sf = v12213
    tf = v12214
    if = v12215
    df = v12216
    of = v12217
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x8048581:mov    ebp, esp
    ax = v12192
    cx = v12193
    dx = v12194
    bx = v12195
    sp = v12196-0x4 [from 0x8048580:push   ebp]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = v12206
    ?1 = v12207
    pf = v12208
    ?3 = v12209
    af = v12210
    ?5 = v12211
    zf = v12212
    sf = v12213
    tf = v12214
    if = v12215
    df = v12216
    of = v12217
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x8048583:push   ebx
    ax = v12192
    cx = v12193
    dx = v12194
    bx = v12195
    sp = v12196-0x8 [from 0x8048583:push   ebx]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = v12206
    ?1 = v12207
    pf = v12208
    ?3 = v12209
    af = v12210
    ?5 = v12211
    zf = v12212
    sf = v12213
    tf = v12214
    if = v12215
    df = v12216
    of = v12217
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x8048584:sub    esp, 0x4
    ax = v12192
    cx = v12193
    dx = v12194
    bx = v12195
    sp = v12196-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12359-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12207
    pf = -v12353-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12209
    af = -v12357-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12211
    zf = v12356 [from 0x8048584:sub    esp, 0x4]
    sf = v12355 [from 0x8048584:sub    esp, 0x4]
    tf = v12214
    if = v12215
    df = v12216
    of = v12363 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x8048587:mov    ebx, 0x80495e8
    ax = v12192
    cx = v12193
    dx = v12194
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12196-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12359-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12207
    pf = -v12353-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12209
    af = -v12357-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12211
    zf = v12356 [from 0x8048584:sub    esp, 0x4]
    sf = v12355 [from 0x8048584:sub    esp, 0x4]
    tf = v12214
    if = v12215
    df = v12216
    of = v12363 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]
    ax = v12431 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12193
    dx = v12194
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12196-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12359-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12207
    pf = -v12353-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12209
    af = -v12357-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12211
    zf = v12356 [from 0x8048584:sub    esp, 0x4]
    sf = v12355 [from 0x8048584:sub    esp, 0x4]
    tf = v12214
    if = v12215
    df = v12216
    of = v12363 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x8048591:cmp    eax, 0xffffffff
    ax = v12431 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12193
    dx = v12194
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12196-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12496-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?1 = v12207
    pf = -v12490-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?3 = v12209
    af = -v12494-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?5 = v12211
    zf = v12493 [from 0x8048591:cmp    eax, 0xffffffff]
    sf = v12492 [from 0x8048591:cmp    eax, 0xffffffff]
    tf = v12214
    if = v12215
    df = v12216
    of = v12500 [from 0x8048591:cmp    eax, 0xffffffff]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x8048594:je     0x80485ac
    ax = v12431 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12193
    dx = v12194
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12196-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12496-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?1 = v12207
    pf = -v12490-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?3 = v12209
    af = -v12494-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?5 = v12211
    zf = v12493 [from 0x8048591:cmp    eax, 0xffffffff]
    sf = v12492 [from 0x8048591:cmp    eax, 0xffffffff]
    tf = v12214
    if = v12215
    df = v12216
    of = v12500 [from 0x8048591:cmp    eax, 0xffffffff]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x8048596:lea    esi, [esi + 0x0]
    ax = v12431 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12193
    dx = v12194
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12196-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12496-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?1 = v12207
    pf = -v12490-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?3 = v12209
    af = -v12494-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?5 = v12211
    zf = v12493 [from 0x8048591:cmp    eax, 0xffffffff]
    sf = v12492 [from 0x8048591:cmp    eax, 0xffffffff]
    tf = v12214
    if = v12215
    df = v12216
    of = v12500 [from 0x8048591:cmp    eax, 0xffffffff]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x8048599:lea    edi, [edi + 0x0]
    ax = v12431 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12193
    dx = v12194
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12196-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12199 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12496-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?1 = v12207
    pf = -v12490-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?3 = v12209
    af = -v12494-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?5 = v12211
    zf = v12493 [from 0x8048591:cmp    eax, 0xffffffff]
    sf = v12492 [from 0x8048591:cmp    eax, 0xffffffff]
    tf = v12214
    if = v12215
    df = v12216
    of = v12500 [from 0x8048591:cmp    eax, 0xffffffff]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x80485a0:sub    ebx, 0x4
    ax = v12431 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12193
    dx = v12194
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x4]
    sp = v12196-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12199 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?1 = v12207
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x4]
    ?3 = v12209
    af = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?5 = v12211
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    tf = v12214
    if = v12215
    df = v12216
    of = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x80485a3:call   eax
    ax = v12431 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12193
    dx = v12194
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x4]
    sp = v12196-0x10 [from 0x80485a3:call   eax]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12199 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?1 = v12207
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x4]
    ?3 = v12209
    af = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?5 = v12211
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    tf = v12214
    if = v12215
    df = v12216
    of = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x10 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485a7:cmp    eax, 0xffffffff
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485aa:jne    0x80485a0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485ac:pop    eax
    ax = v12881 [from 0x80485ac:pop    eax]
    cx = v12193
    dx = v12194
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12196-0x8 [from 0x80485ac:pop    eax]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12496-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?1 = v12207
    pf = -v12490-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?3 = v12209
    af = -v12494-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?5 = v12211
    zf = v12493 [from 0x8048591:cmp    eax, 0xffffffff]
    sf = v12492 [from 0x8048591:cmp    eax, 0xffffffff]
    tf = v12214
    if = v12215
    df = v12216
    of = v12500 [from 0x8048591:cmp    eax, 0xffffffff]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x80485ad:pop    ebx
    ax = v12881 [from 0x80485ac:pop    eax]
    cx = v12193
    dx = v12194
    bx = v12195
    sp = v12196-0x4 [from 0x80485ad:pop    ebx]
    bp = v12196-0x4 [from 0x8048580:push   ebp]
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12496-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?1 = v12207
    pf = -v12490-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?3 = v12209
    af = -v12494-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?5 = v12211
    zf = v12493 [from 0x8048591:cmp    eax, 0xffffffff]
    sf = v12492 [from 0x8048591:cmp    eax, 0xffffffff]
    tf = v12214
    if = v12215
    df = v12216
    of = v12500 [from 0x8048591:cmp    eax, 0xffffffff]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x80485ae:pop    ebp
    ax = v12881 [from 0x80485ac:pop    eax]
    cx = v12193
    dx = v12194
    bx = v12195
    sp = v12196 [from 0x80485ae:pop    ebp]
    bp = v12197
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12496-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?1 = v12207
    pf = -v12490-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?3 = v12209
    af = -v12494-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?5 = v12211
    zf = v12493 [from 0x8048591:cmp    eax, 0xffffffff]
    sf = v12492 [from 0x8048591:cmp    eax, 0xffffffff]
    tf = v12214
    if = v12215
    df = v12216
    of = v12500 [from 0x8048591:cmp    eax, 0xffffffff]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
0x80485af:ret    
    ax = v12881 [from 0x80485ac:pop    eax]
    cx = v12193
    dx = v12194
    bx = v12195
    sp = v12196+0x4 [from 0x80485af:ret    ]
    bp = v12197
    si = v12198
    di = v12199
    es = v12200
    cs = v12201
    ss = v12202
    ds = v12203
    fs = v12204
    gs = v12205
    cf = -v12496-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?1 = v12207
    pf = -v12490-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?3 = v12209
    af = -v12494-0x1 [from 0x8048591:cmp    eax, 0xffffffff]
    ?5 = v12211
    zf = v12493 [from 0x8048591:cmp    eax, 0xffffffff]
    sf = v12492 [from 0x8048591:cmp    eax, 0xffffffff]
    tf = v12214
    if = v12215
    df = v12216
    of = v12500 [from 0x8048591:cmp    eax, 0xffffffff]
    iopl0 = v12218
    iopl1 = v12219
    nt = v12220
    ?15 = v12221
    memory = {
        size=4; addr=v12196-0x8 [from 0x8048583:push   ebx]; value=v12195
        size=4; addr=v12196-0x4 [from 0x8048580:push   ebp]; value=v12197
    }
==============================================
Constant propagation in function "_fini"
==============================================
0x80485b0:push   ebp
    ax = v13053
    cx = v13054
    dx = v13055
    bx = v13056
    sp = v13057-0x4 [from 0x80485b0:push   ebp]
    bp = v13058
    si = v13059
    di = v13060
    es = v13061
    cs = v13062
    ss = v13063
    ds = v13064
    fs = v13065
    gs = v13066
    cf = v13067
    ?1 = v13068
    pf = v13069
    ?3 = v13070
    af = v13071
    ?5 = v13072
    zf = v13073
    sf = v13074
    tf = v13075
    if = v13076
    df = v13077
    of = v13078
    iopl0 = v13079
    iopl1 = v13080
    nt = v13081
    ?15 = v13082
    memory = {
        size=4; addr=v13057-0x4 [from 0x80485b0:push   ebp]; value=v13058
    }
0x80485b1:mov    ebp, esp
    ax = v13053
    cx = v13054
    dx = v13055
    bx = v13056
    sp = v13057-0x4 [from 0x80485b0:push   ebp]
    bp = v13057-0x4 [from 0x80485b0:push   ebp]
    si = v13059
    di = v13060
    es = v13061
    cs = v13062
    ss = v13063
    ds = v13064
    fs = v13065
    gs = v13066
    cf = v13067
    ?1 = v13068
    pf = v13069
    ?3 = v13070
    af = v13071
    ?5 = v13072
    zf = v13073
    sf = v13074
    tf = v13075
    if = v13076
    df = v13077
    of = v13078
    iopl0 = v13079
    iopl1 = v13080
    nt = v13081
    ?15 = v13082
    memory = {
        size=4; addr=v13057-0x4 [from 0x80485b0:push   ebp]; value=v13058
    }
0x80485b3:push   ebx
    ax = v13053
    cx = v13054
    dx = v13055
    bx = v13056
    sp = v13057-0x8 [from 0x80485b3:push   ebx]
    bp = v13057-0x4 [from 0x80485b0:push   ebp]
    si = v13059
    di = v13060
    es = v13061
    cs = v13062
    ss = v13063
    ds = v13064
    fs = v13065
    gs = v13066
    cf = v13067
    ?1 = v13068
    pf = v13069
    ?3 = v13070
    af = v13071
    ?5 = v13072
    zf = v13073
    sf = v13074
    tf = v13075
    if = v13076
    df = v13077
    of = v13078
    iopl0 = v13079
    iopl1 = v13080
    nt = v13081
    ?15 = v13082
    memory = {
        size=4; addr=v13057-0x8 [from 0x80485b3:push   ebx]; value=v13056
        size=4; addr=v13057-0x4 [from 0x80485b0:push   ebp]; value=v13058
    }
0x80485b4:push   eax
    ax = v13053
    cx = v13054
    dx = v13055
    bx = v13056
    sp = v13057-0xc [from 0x80485b4:push   eax]
    bp = v13057-0x4 [from 0x80485b0:push   ebp]
    si = v13059
    di = v13060
    es = v13061
    cs = v13062
    ss = v13063
    ds = v13064
    fs = v13065
    gs = v13066
    cf = v13067
    ?1 = v13068
    pf = v13069
    ?3 = v13070
    af = v13071
    ?5 = v13072
    zf = v13073
    sf = v13074
    tf = v13075
    if = v13076
    df = v13077
    of = v13078
    iopl0 = v13079
    iopl1 = v13080
    nt = v13081
    ?15 = v13082
    memory = {
        size=4; addr=v13057-0xc [from 0x80485b4:push   eax]; value=v13053
        size=4; addr=v13057-0x8 [from 0x80485b3:push   ebx]; value=v13056
        size=4; addr=v13057-0x4 [from 0x80485b0:push   ebp]; value=v13058
    }
0x80485b5:call   0x80485ba
    ax = v13053
    cx = v13054
    dx = v13055
    bx = v13056
    sp = v13057-0x10 [from 0x80485b5:call   0x80485ba]
    bp = v13057-0x4 [from 0x80485b0:push   ebp]
    si = v13059
    di = v13060
    es = v13061
    cs = v13062
    ss = v13063
    ds = v13064
    fs = v13065
    gs = v13066
    cf = v13067
    ?1 = v13068
    pf = v13069
    ?3 = v13070
    af = v13071
    ?5 = v13072
    zf = v13073
    sf = v13074
    tf = v13075
    if = v13076
    df = v13077
    of = v13078
    iopl0 = v13079
    iopl1 = v13080
    nt = v13081
    ?15 = v13082
    memory = {
        size=4; addr=v13057-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13057-0xc [from 0x80485b4:push   eax]; value=v13053
        size=4; addr=v13057-0x8 [from 0x80485b3:push   ebx]; value=v13056
        size=4; addr=v13057-0x4 [from 0x80485b0:push   ebp]; value=v13058
    }
0x80485ba:pop    ebx
    ax = v13053
    cx = v13054
    dx = v13055
    bx = 0x80485ba [from 0x80485b5:call   0x80485ba]
    sp = v13057-0xc [from 0x80485ba:pop    ebx]
    bp = v13057-0x4 [from 0x80485b0:push   ebp]
    si = v13059
    di = v13060
    es = v13061
    cs = v13062
    ss = v13063
    ds = v13064
    fs = v13065
    gs = v13066
    cf = v13067
    ?1 = v13068
    pf = v13069
    ?3 = v13070
    af = v13071
    ?5 = v13072
    zf = v13073
    sf = v13074
    tf = v13075
    if = v13076
    df = v13077
    of = v13078
    iopl0 = v13079
    iopl1 = v13080
    nt = v13081
    ?15 = v13082
    memory = {
        size=4; addr=v13057-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13057-0xc [from 0x80485b4:push   eax]; value=v13053
        size=4; addr=v13057-0x8 [from 0x80485b3:push   ebx]; value=v13056
        size=4; addr=v13057-0x4 [from 0x80485b0:push   ebp]; value=v13058
    }
0x80485bb:add    ebx, 0x110e
    ax = v13053
    cx = v13054
    dx = v13055
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x110e]
    sp = v13057-0xc [from 0x80485ba:pop    ebx]
    bp = v13057-0x4 [from 0x80485b0:push   ebp]
    si = v13059
    di = v13060
    es = v13061
    cs = v13062
    ss = v13063
    ds = v13064
    fs = v13065
    gs = v13066
    cf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?1 = v13068
    pf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?3 = v13070
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x110e]
    ?5 = v13072
    zf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    tf = v13075
    if = v13076
    df = v13077
    of = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    iopl0 = v13079
    iopl1 = v13080
    nt = v13081
    ?15 = v13082
    memory = {
        size=4; addr=v13057-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13057-0xc [from 0x80485b4:push   eax]; value=v13053
        size=4; addr=v13057-0x8 [from 0x80485b3:push   ebx]; value=v13056
        size=4; addr=v13057-0x4 [from 0x80485b0:push   ebp]; value=v13058
    }
0x80485c1:call   0x8048390
    ax = v13053
    cx = v13054
    dx = v13055
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x110e]
    sp = v13057-0x10 [from 0x80485c1:call   0x8048390]
    bp = v13057-0x4 [from 0x80485b0:push   ebp]
    si = v13059
    di = v13060
    es = v13061
    cs = v13062
    ss = v13063
    ds = v13064
    fs = v13065
    gs = v13066
    cf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?1 = v13068
    pf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?3 = v13070
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x110e]
    ?5 = v13072
    zf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    tf = v13075
    if = v13076
    df = v13077
    of = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    iopl0 = v13079
    iopl1 = v13080
    nt = v13081
    ?15 = v13082
    memory = {
        size=4; addr=v13057-0x10 [from 0x80485c1:call   0x8048390]; value=0x80485c6 [from 0x80485c1:call   0x8048390]
        size=4; addr=v13057-0xc [from 0x80485b4:push   eax]; value=v13053
        size=4; addr=v13057-0x8 [from 0x80485b3:push   ebx]; value=v13056
        size=4; addr=v13057-0x4 [from 0x80485b0:push   ebp]; value=v13058
    }
0x80485c6:pop    eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c7:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c8:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c9:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485ca:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
    }
