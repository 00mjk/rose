==============================================
Constant propagation in function "_init"
==============================================
0x80482c8:push   ebp
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x4 [from 0x80482c8:push   ebp]
    bp = V6
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = V15
    ?1 = V16
    pf = V17
    ?3 = V18
    af = V19
    ?5 = V20
    zf = V21
    sf = V22
    tf = V23
    if = V24
    df = V25
    of = V26
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482c9:mov    ebp, esp
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x4 [from 0x80482c8:push   ebp]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = V15
    ?1 = V16
    pf = V17
    ?3 = V18
    af = V19
    ?5 = V20
    zf = V21
    sf = V22
    tf = V23
    if = V24
    df = V25
    of = V26
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482cb:sub    esp, 0x08
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = -V31-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = V16
    pf = -V32-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = V18
    af = -V33-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = V20
    zf = V34 [from 0x80482cb:sub    esp, 0x08]
    sf = V35 [from 0x80482cb:sub    esp, 0x08]
    tf = V23
    if = V24
    df = V25
    of = V36 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482ce:call   0x08048364
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x10 [from 0x80482ce:call   0x08048364]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = -V31-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = V16
    pf = -V32-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = V18
    af = -V33-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = V20
    zf = V34 [from 0x80482cb:sub    esp, 0x08]
    sf = V35 [from 0x80482cb:sub    esp, 0x08]
    tf = V23
    if = V24
    df = V25
    of = V36 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482d3:call   0x080483d0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
0x80482d8:call   0x08048580
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
0x80482dd:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482de:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "***uncategorized blocks***"
==============================================
0x80482df:add    bh, bh
    ax = V37
    cx = V38
    dx = V39
    bx = V40 [from 0x80482df:add    bh, bh]
    sp = V41
    bp = V42
    si = V43
    di = V44
    es = V45
    cs = V46
    ss = V47
    ds = V48
    fs = V49
    gs = V50
    cf = V51 [from 0x80482df:add    bh, bh]
    ?1 = V52
    pf = -V53-0x1 [from 0x80482df:add    bh, bh]
    ?3 = V54
    af = V55 [from 0x80482df:add    bh, bh]
    ?5 = V56
    zf = V57 [from 0x80482df:add    bh, bh]
    sf = V58 [from 0x80482df:add    bh, bh]
    tf = V59
    if = V60
    df = V61
    of = V62 [from 0x80482df:add    bh, bh]
    iopl0 = V63
    iopl1 = V64
    nt = V65
    ?15 = V66
    memory = {}
0x80482e1:xor    eax, 0x080496cc
    ax = V67 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = V38
    dx = V39
    bx = V40 [from 0x80482df:add    bh, bh]
    sp = V41
    bp = V42
    si = V43
    di = V44
    es = V45
    cs = V46
    ss = V47
    ds = V48
    fs = V49
    gs = V50
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = V52
    pf = -V68-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = V54
    af = <top>
    ?5 = V56
    zf = V69 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = V70 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = V59
    if = V60
    df = V61
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = V63
    iopl1 = V64
    nt = V65
    ?15 = V66
    memory = {}
0x80482e6:jmp    DWORD PTR ds:[0x080496d0]
    ax = V67 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = V38
    dx = V39
    bx = V40 [from 0x80482df:add    bh, bh]
    sp = V41
    bp = V42
    si = V43
    di = V44
    es = V45
    cs = V46
    ss = V47
    ds = V48
    fs = V49
    gs = V50
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = V52
    pf = -V68-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = V54
    af = <top>
    ?5 = V56
    zf = V69 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = V70 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = V59
    if = V60
    df = V61
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = V63
    iopl1 = V64
    nt = V65
    ?15 = V66
    memory = {}
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
        size=1; addr=<top>; value=<top>
    }
0x80482f6:push   0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
    }
0x80482fb:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
    }
0x8048306:push   0x00000008
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x00000008]
    }
0x804830b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x00000008]
    }
0x80482e0:push   DWORD PTR ds:[0x080496cc]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=V71 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    }
0x8048316:push   0x00000010
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x00000010]
    }
0x804831b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x00000010]
    }
0x8048326:push   0x00000018
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x00000018]
    }
0x804832b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x00000018]
    }
0x8048336:push   0x00000020
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x00000020]
    }
0x804833b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x00000020]
    }
0x80483ce:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
0x80483ef:call   0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=<top>; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048434:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804843a:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048456:lea    esi, [esi + 0x00]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048459:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e9:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048513:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048519:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804854f:lea    esi, [edx + eax*0x04]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048552:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048554:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804855a:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048560:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
0x8048562:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048563:sub    esi, 0x04
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0], edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048569:jne    0x08048560
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "puts@plt"
==============================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = V72
    cx = V73
    dx = V74
    bx = V75
    sp = V76
    bp = V77
    si = V78
    di = V79
    es = V80
    cs = V81
    ss = V82
    ds = V83
    fs = V84
    gs = V85
    cf = V86
    ?1 = V87
    pf = V88
    ?3 = V89
    af = V90
    ?5 = V91
    zf = V92
    sf = V93
    tf = V94
    if = V95
    df = V96
    of = V97
    iopl0 = V98
    iopl1 = V99
    nt = V100
    ?15 = V101
    memory = {}
==============================================
Constant propagation in function "_exit@plt"
==============================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = V102
    cx = V103
    dx = V104
    bx = V105
    sp = V106
    bp = V107
    si = V108
    di = V109
    es = V110
    cs = V111
    ss = V112
    ds = V113
    fs = V114
    gs = V115
    cf = V116
    ?1 = V117
    pf = V118
    ?3 = V119
    af = V120
    ?5 = V121
    zf = V122
    sf = V123
    tf = V124
    if = V125
    df = V126
    of = V127
    iopl0 = V128
    iopl1 = V129
    nt = V130
    ?15 = V131
    memory = {}
==============================================
Constant propagation in function "__gmon_start__@plt"
==============================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = V132
    cx = V133
    dx = V134
    bx = V135
    sp = V136
    bp = V137
    si = V138
    di = V139
    es = V140
    cs = V141
    ss = V142
    ds = V143
    fs = V144
    gs = V145
    cf = V146
    ?1 = V147
    pf = V148
    ?3 = V149
    af = V150
    ?5 = V151
    zf = V152
    sf = V153
    tf = V154
    if = V155
    df = V156
    of = V157
    iopl0 = V158
    iopl1 = V159
    nt = V160
    ?15 = V161
    memory = {}
==============================================
Constant propagation in function "_start"
==============================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = V162
    cx = V163
    dx = V164
    bx = V165
    sp = V166
    bp = V167
    si = V168
    di = V169
    es = V170
    cs = V171
    ss = V172
    ds = V173
    fs = V174
    gs = V175
    cf = V176
    ?1 = V177
    pf = V178
    ?3 = V179
    af = V180
    ?5 = V181
    zf = V182
    sf = V183
    tf = V184
    if = V185
    df = V186
    of = V187
    iopl0 = V188
    iopl1 = V189
    nt = V190
    ?15 = V191
    memory = {}
0x8048340:xor    ebp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048342:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048343:mov    ecx, esp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048345:and    esp, 0xf0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048348:push   eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x8048349:push   esp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
    }
0x804834a:push   edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
    }
0x804834b:push   0x08048520
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
    }
0x8048350:push   0x080484b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
    }
0x8048355:push   ecx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=<top>; value=<top>
    }
0x8048356:push   esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
    }
0x8048357:push   0x08048410
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048410 [from 0x8048357:push   0x08048410]
    }
0x804835c:call   0x08048310
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=<top>; value=0x8048361 [from 0x804835c:call   0x08048310]
    }
0x8048361:hlt    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048362"
==============================================
0x8048362:nop    
    ax = V192
    cx = V193
    dx = V194
    bx = V195
    sp = V196
    bp = V197
    si = V198
    di = V199
    es = V200
    cs = V201
    ss = V202
    ds = V203
    fs = V204
    gs = V205
    cf = V206
    ?1 = V207
    pf = V208
    ?3 = V209
    af = V210
    ?5 = V211
    zf = V212
    sf = V213
    tf = V214
    if = V215
    df = V216
    of = V217
    iopl0 = V218
    iopl1 = V219
    nt = V220
    ?15 = V221
    memory = {}
0x8048363:nop    
    ax = V192
    cx = V193
    dx = V194
    bx = V195
    sp = V196
    bp = V197
    si = V198
    di = V199
    es = V200
    cs = V201
    ss = V202
    ds = V203
    fs = V204
    gs = V205
    cf = V206
    ?1 = V207
    pf = V208
    ?3 = V209
    af = V210
    ?5 = V211
    zf = V212
    sf = V213
    tf = V214
    if = V215
    df = V216
    of = V217
    iopl0 = V218
    iopl1 = V219
    nt = V220
    ?15 = V221
    memory = {}
==============================================
Constant propagation in function "call_gmon_start"
==============================================
0x8048364:push   ebp
    ax = V222
    cx = V223
    dx = V224
    bx = V225
    sp = V226-0x4 [from 0x8048364:push   ebp]
    bp = V227
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = V236
    ?1 = V237
    pf = V238
    ?3 = V239
    af = V240
    ?5 = V241
    zf = V242
    sf = V243
    tf = V244
    if = V245
    df = V246
    of = V247
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048365:mov    ebp, esp
    ax = V222
    cx = V223
    dx = V224
    bx = V225
    sp = V226-0x4 [from 0x8048364:push   ebp]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = V236
    ?1 = V237
    pf = V238
    ?3 = V239
    af = V240
    ?5 = V241
    zf = V242
    sf = V243
    tf = V244
    if = V245
    df = V246
    of = V247
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048367:push   ebx
    ax = V222
    cx = V223
    dx = V224
    bx = V225
    sp = V226-0x8 [from 0x8048367:push   ebx]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = V236
    ?1 = V237
    pf = V238
    ?3 = V239
    af = V240
    ?5 = V241
    zf = V242
    sf = V243
    tf = V244
    if = V245
    df = V246
    of = V247
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048368:push   ecx
    ax = V222
    cx = V223
    dx = V224
    bx = V225
    sp = V226-0xc [from 0x8048368:push   ecx]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = V236
    ?1 = V237
    pf = V238
    ?3 = V239
    af = V240
    ?5 = V241
    zf = V242
    sf = V243
    tf = V244
    if = V245
    df = V246
    of = V247
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048369:call   0x0804836e
    ax = V222
    cx = V223
    dx = V224
    bx = V225
    sp = V226-0x10 [from 0x8048369:call   0x0804836e]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = V236
    ?1 = V237
    pf = V238
    ?3 = V239
    af = V240
    ?5 = V241
    zf = V242
    sf = V243
    tf = V244
    if = V245
    df = V246
    of = V247
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x804836e:pop    ebx
    ax = V222
    cx = V223
    dx = V224
    bx = 0x804836e [from 0x8048369:call   0x0804836e]
    sp = V226-0xc [from 0x804836e:pop    ebx]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = V236
    ?1 = V237
    pf = V238
    ?3 = V239
    af = V240
    ?5 = V241
    zf = V242
    sf = V243
    tf = V244
    if = V245
    df = V246
    of = V247
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x804836f:add    ebx, 0x0000135a
    ax = V222
    cx = V223
    dx = V224
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V226-0xc [from 0x804836e:pop    ebx]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = V237
    pf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = V239
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = V241
    zf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]
    ax = V222
    cx = V223
    dx = V252 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V226-0xc [from 0x804836e:pop    ebx]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = V237
    pf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = V239
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = V241
    zf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x804837b:test   edx, edx
    ax = V222
    cx = V223
    dx = V252 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V226-0xc [from 0x804836e:pop    ebx]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V237
    pf = -V253-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V239
    af = <top>
    ?5 = V241
    zf = V254 [from 0x804837b:test   edx, edx]
    sf = V255 [from 0x804837b:test   edx, edx]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x804837d:je     0x08048384
    ax = V222
    cx = V223
    dx = V252 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V226-0xc [from 0x804836e:pop    ebx]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V237
    pf = -V253-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V239
    af = <top>
    ?5 = V241
    zf = V254 [from 0x804837b:test   edx, edx]
    sf = V255 [from 0x804837b:test   edx, edx]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x804837f:call   0x08048330
    ax = V222
    cx = V223
    dx = V252 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V226-0x10 [from 0x804837f:call   0x08048330]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V237
    pf = -V253-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V239
    af = <top>
    ?5 = V241
    zf = V254 [from 0x804837b:test   edx, edx]
    sf = V255 [from 0x804837b:test   edx, edx]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048384:pop    eax
    ax = V223
    cx = V223
    dx = V252 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V226-0x8 [from 0x8048384:pop    eax]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V237
    pf = -V253-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V239
    af = <top>
    ?5 = V241
    zf = V254 [from 0x804837b:test   edx, edx]
    sf = V255 [from 0x804837b:test   edx, edx]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048385:pop    ebx
    ax = V223
    cx = V223
    dx = V252 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = V225
    sp = V226-0x4 [from 0x8048385:pop    ebx]
    bp = V226-0x4 [from 0x8048364:push   ebp]
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V237
    pf = -V253-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V239
    af = <top>
    ?5 = V241
    zf = V254 [from 0x804837b:test   edx, edx]
    sf = V255 [from 0x804837b:test   edx, edx]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048386:leave  
    ax = V223
    cx = V223
    dx = V252 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = V225
    sp = V226 [from 0x8048386:leave  ]
    bp = V227
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V237
    pf = -V253-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V239
    af = <top>
    ?5 = V241
    zf = V254 [from 0x804837b:test   edx, edx]
    sf = V255 [from 0x804837b:test   edx, edx]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
0x8048387:ret    
    ax = V223
    cx = V223
    dx = V252 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = V225
    sp = V226+0x4 [from 0x8048387:ret    ]
    bp = V227
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V237
    pf = -V253-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V239
    af = <top>
    ?5 = V241
    zf = V254 [from 0x804837b:test   edx, edx]
    sf = V255 [from 0x804837b:test   edx, edx]
    tf = V244
    if = V245
    df = V246
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {
        size=4; addr=V226-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V226-0xc [from 0x8048368:push   ecx]; value=V223
        size=4; addr=V226-0x8 [from 0x8048367:push   ebx]; value=V225
        size=4; addr=V226-0x4 [from 0x8048364:push   ebp]; value=V227
    }
==============================================
Constant propagation in function "0x8048388"
==============================================
0x8048388:nop    
    ax = V256
    cx = V257
    dx = V258
    bx = V259
    sp = V260
    bp = V261
    si = V262
    di = V263
    es = V264
    cs = V265
    ss = V266
    ds = V267
    fs = V268
    gs = V269
    cf = V270
    ?1 = V271
    pf = V272
    ?3 = V273
    af = V274
    ?5 = V275
    zf = V276
    sf = V277
    tf = V278
    if = V279
    df = V280
    of = V281
    iopl0 = V282
    iopl1 = V283
    nt = V284
    ?15 = V285
    memory = {}
0x8048389:nop    
    ax = V256
    cx = V257
    dx = V258
    bx = V259
    sp = V260
    bp = V261
    si = V262
    di = V263
    es = V264
    cs = V265
    ss = V266
    ds = V267
    fs = V268
    gs = V269
    cf = V270
    ?1 = V271
    pf = V272
    ?3 = V273
    af = V274
    ?5 = V275
    zf = V276
    sf = V277
    tf = V278
    if = V279
    df = V280
    of = V281
    iopl0 = V282
    iopl1 = V283
    nt = V284
    ?15 = V285
    memory = {}
0x804838a:nop    
    ax = V256
    cx = V257
    dx = V258
    bx = V259
    sp = V260
    bp = V261
    si = V262
    di = V263
    es = V264
    cs = V265
    ss = V266
    ds = V267
    fs = V268
    gs = V269
    cf = V270
    ?1 = V271
    pf = V272
    ?3 = V273
    af = V274
    ?5 = V275
    zf = V276
    sf = V277
    tf = V278
    if = V279
    df = V280
    of = V281
    iopl0 = V282
    iopl1 = V283
    nt = V284
    ?15 = V285
    memory = {}
0x804838b:nop    
    ax = V256
    cx = V257
    dx = V258
    bx = V259
    sp = V260
    bp = V261
    si = V262
    di = V263
    es = V264
    cs = V265
    ss = V266
    ds = V267
    fs = V268
    gs = V269
    cf = V270
    ?1 = V271
    pf = V272
    ?3 = V273
    af = V274
    ?5 = V275
    zf = V276
    sf = V277
    tf = V278
    if = V279
    df = V280
    of = V281
    iopl0 = V282
    iopl1 = V283
    nt = V284
    ?15 = V285
    memory = {}
0x804838c:nop    
    ax = V256
    cx = V257
    dx = V258
    bx = V259
    sp = V260
    bp = V261
    si = V262
    di = V263
    es = V264
    cs = V265
    ss = V266
    ds = V267
    fs = V268
    gs = V269
    cf = V270
    ?1 = V271
    pf = V272
    ?3 = V273
    af = V274
    ?5 = V275
    zf = V276
    sf = V277
    tf = V278
    if = V279
    df = V280
    of = V281
    iopl0 = V282
    iopl1 = V283
    nt = V284
    ?15 = V285
    memory = {}
0x804838d:nop    
    ax = V256
    cx = V257
    dx = V258
    bx = V259
    sp = V260
    bp = V261
    si = V262
    di = V263
    es = V264
    cs = V265
    ss = V266
    ds = V267
    fs = V268
    gs = V269
    cf = V270
    ?1 = V271
    pf = V272
    ?3 = V273
    af = V274
    ?5 = V275
    zf = V276
    sf = V277
    tf = V278
    if = V279
    df = V280
    of = V281
    iopl0 = V282
    iopl1 = V283
    nt = V284
    ?15 = V285
    memory = {}
0x804838e:nop    
    ax = V256
    cx = V257
    dx = V258
    bx = V259
    sp = V260
    bp = V261
    si = V262
    di = V263
    es = V264
    cs = V265
    ss = V266
    ds = V267
    fs = V268
    gs = V269
    cf = V270
    ?1 = V271
    pf = V272
    ?3 = V273
    af = V274
    ?5 = V275
    zf = V276
    sf = V277
    tf = V278
    if = V279
    df = V280
    of = V281
    iopl0 = V282
    iopl1 = V283
    nt = V284
    ?15 = V285
    memory = {}
0x804838f:nop    
    ax = V256
    cx = V257
    dx = V258
    bx = V259
    sp = V260
    bp = V261
    si = V262
    di = V263
    es = V264
    cs = V265
    ss = V266
    ds = V267
    fs = V268
    gs = V269
    cf = V270
    ?1 = V271
    pf = V272
    ?3 = V273
    af = V274
    ?5 = V275
    zf = V276
    sf = V277
    tf = V278
    if = V279
    df = V280
    of = V281
    iopl0 = V282
    iopl1 = V283
    nt = V284
    ?15 = V285
    memory = {}
==============================================
Constant propagation in function "__do_global_dtors_aux"
==============================================
0x8048390:push   ebp
    ax = V286
    cx = V287
    dx = V288
    bx = V289
    sp = V290-0x4 [from 0x8048390:push   ebp]
    bp = V291
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = V300
    ?1 = V301
    pf = V302
    ?3 = V303
    af = V304
    ?5 = V305
    zf = V306
    sf = V307
    tf = V308
    if = V309
    df = V310
    of = V311
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x8048391:mov    ebp, esp
    ax = V286
    cx = V287
    dx = V288
    bx = V289
    sp = V290-0x4 [from 0x8048390:push   ebp]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = V300
    ?1 = V301
    pf = V302
    ?3 = V303
    af = V304
    ?5 = V305
    zf = V306
    sf = V307
    tf = V308
    if = V309
    df = V310
    of = V311
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x8048393:sub    esp, 0x08
    ax = V286
    cx = V287
    dx = V288
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = -V316-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = V301
    pf = -V317-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = V303
    af = -V318-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = V305
    zf = V319 [from 0x8048393:sub    esp, 0x08]
    sf = V320 [from 0x8048393:sub    esp, 0x08]
    tf = V308
    if = V309
    df = V310
    of = V321 [from 0x8048393:sub    esp, 0x08]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = V286
    cx = V287
    dx = V288
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = -V322-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V301
    pf = -V323-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V303
    af = -V324-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V305
    zf = V325 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V326 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V308
    if = V309
    df = V310
    of = V327 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x804839d:jne    0x080483cc
    ax = V286
    cx = V287
    dx = V288
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = -V322-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V301
    pf = -V323-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V303
    af = -V324-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V305
    zf = V325 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V326 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V308
    if = V309
    df = V310
    of = V327 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = V328 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V287
    dx = V288
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = -V322-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V301
    pf = -V323-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V303
    af = -V324-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V305
    zf = V325 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V326 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V308
    if = V309
    df = V310
    of = V327 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = V328 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V287
    dx = V329 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = -V322-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V301
    pf = -V323-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V303
    af = -V324-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V305
    zf = V325 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V326 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V308
    if = V309
    df = V310
    of = V327 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x80483a6:test   edx, edx
    ax = V328 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V287
    dx = V329 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V301
    pf = -V330-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V303
    af = <top>
    ?5 = V305
    zf = V331 [from 0x80483a6:test   edx, edx]
    sf = V332 [from 0x80483a6:test   edx, edx]
    tf = V308
    if = V309
    df = V310
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x80483a8:je     0x080483c5
    ax = V328 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V287
    dx = V329 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V301
    pf = -V330-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V303
    af = <top>
    ?5 = V305
    zf = V331 [from 0x80483a6:test   edx, edx]
    sf = V332 [from 0x80483a6:test   edx, edx]
    tf = V308
    if = V309
    df = V310
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = V328 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V287
    dx = V329 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V301
    pf = -V330-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V303
    af = <top>
    ?5 = V305
    zf = V331 [from 0x80483a6:test   edx, edx]
    sf = V332 [from 0x80483a6:test   edx, edx]
    tf = V308
    if = V309
    df = V310
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x80483b0:add    eax, 0x04
    ax = V328+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V287
    dx = V329 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = V333 [from 0x80483b0:add    eax, 0x04]
    ?1 = V301
    pf = -V334-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V303
    af = V335 [from 0x80483b0:add    eax, 0x04]
    ?5 = V305
    zf = V336 [from 0x80483b0:add    eax, 0x04]
    sf = V337 [from 0x80483b0:add    eax, 0x04]
    tf = V308
    if = V309
    df = V310
    of = V338 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x4 [from 0x8048390:push   ebp]; value=V291
    }
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = V328+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V287
    dx = V329 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = V333 [from 0x80483b0:add    eax, 0x04]
    ?1 = V301
    pf = -V334-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V303
    af = V335 [from 0x80483b0:add    eax, 0x04]
    ?5 = V305
    zf = V336 [from 0x80483b0:add    eax, 0x04]
    sf = V337 [from 0x80483b0:add    eax, 0x04]
    tf = V308
    if = V309
    df = V310
    of = V338 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=V328+0x4 [from 0x80483b0:add    eax, 0x04]
    }
0x80483b8:call   edx
    ax = V328+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V287
    dx = V329 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V289
    sp = V290-0x10 [from 0x80483b8:call   edx]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = V333 [from 0x80483b0:add    eax, 0x04]
    ?1 = V301
    pf = -V334-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V303
    af = V335 [from 0x80483b0:add    eax, 0x04]
    ?5 = V305
    zf = V336 [from 0x80483b0:add    eax, 0x04]
    sf = V337 [from 0x80483b0:add    eax, 0x04]
    tf = V308
    if = V309
    df = V310
    of = V338 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=4; addr=V290-0x10 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c1:test   edx, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c3:jne    0x080483b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = V328 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V287
    dx = V329 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V289
    sp = V290-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V290-0x4 [from 0x8048390:push   ebp]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V301
    pf = -V330-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V303
    af = <top>
    ?5 = V305
    zf = V331 [from 0x80483a6:test   edx, edx]
    sf = V332 [from 0x80483a6:test   edx, edx]
    tf = V308
    if = V309
    df = V310
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
0x80483cc:leave  
    ax = V339
    cx = V287
    dx = V340
    bx = V289
    sp = V290 [from 0x80483cc:leave  ]
    bp = V341 [from 0x80483cc:leave  ]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = V342
    ?1 = V301
    pf = V343
    ?3 = V303
    af = -V324-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V305
    zf = V344
    sf = V345
    tf = V308
    if = V309
    df = V310
    of = V346
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {}
0x80483cd:ret    
    ax = V339
    cx = V287
    dx = V340
    bx = V289
    sp = V290+0x4 [from 0x80483cd:ret    ]
    bp = V341 [from 0x80483cc:leave  ]
    si = V292
    di = V293
    es = V294
    cs = V295
    ss = V296
    ds = V297
    fs = V298
    gs = V299
    cf = V342
    ?1 = V301
    pf = V343
    ?3 = V303
    af = -V324-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V305
    zf = V344
    sf = V345
    tf = V308
    if = V309
    df = V310
    of = V346
    iopl0 = V312
    iopl1 = V313
    nt = V314
    ?15 = V315
    memory = {}
==============================================
Constant propagation in function "frame_dummy"
==============================================
0x80483d0:push   ebp
    ax = V347
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0x4 [from 0x80483d0:push   ebp]
    bp = V352
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = V361
    ?1 = V362
    pf = V363
    ?3 = V364
    af = V365
    ?5 = V366
    zf = V367
    sf = V368
    tf = V369
    if = V370
    df = V371
    of = V372
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x80483d1:mov    ebp, esp
    ax = V347
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0x4 [from 0x80483d0:push   ebp]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = V361
    ?1 = V362
    pf = V363
    ?3 = V364
    af = V365
    ?5 = V366
    zf = V367
    sf = V368
    tf = V369
    if = V370
    df = V371
    of = V372
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x80483d3:sub    esp, 0x08
    ax = V347
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = -V377-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = V362
    pf = -V378-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = V364
    af = -V379-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = V366
    zf = V380 [from 0x80483d3:sub    esp, 0x08]
    sf = V381 [from 0x80483d3:sub    esp, 0x08]
    tf = V369
    if = V370
    df = V371
    of = V382 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = V383 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = -V377-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = V362
    pf = -V378-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = V364
    af = -V379-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = V366
    zf = V380 [from 0x80483d3:sub    esp, 0x08]
    sf = V381 [from 0x80483d3:sub    esp, 0x08]
    tf = V369
    if = V370
    df = V371
    of = V382 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x80483db:test   eax, eax
    ax = V383 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V362
    pf = -V384-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V364
    af = <top>
    ?5 = V366
    zf = V385 [from 0x80483db:test   eax, eax]
    sf = V386 [from 0x80483db:test   eax, eax]
    tf = V369
    if = V370
    df = V371
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x80483dd:je     0x08048400
    ax = V383 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V362
    pf = -V384-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V364
    af = <top>
    ?5 = V366
    zf = V385 [from 0x80483db:test   eax, eax]
    sf = V386 [from 0x80483db:test   eax, eax]
    tf = V369
    if = V370
    df = V371
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V362
    pf = -V384-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V364
    af = <top>
    ?5 = V366
    zf = V385 [from 0x80483db:test   eax, eax]
    sf = V386 [from 0x80483db:test   eax, eax]
    tf = V369
    if = V370
    df = V371
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = V362
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = V364
    af = <top>
    ?5 = V366
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = V369
    if = V370
    df = V371
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = V362
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = V364
    af = <top>
    ?5 = V366
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = V369
    if = V370
    df = V371
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {
        size=4; addr=V351-0x4 [from 0x80483d0:push   ebp]; value=V352
    }
0x8048400:mov    esp, ebp
    ax = V387
    cx = V348
    dx = V349
    bx = V350
    sp = V351-0x4 [from 0x80483d0:push   ebp]
    bp = V351-0x4 [from 0x80483d0:push   ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V362
    pf = V388
    ?3 = V364
    af = <top>
    ?5 = V366
    zf = V389
    sf = V390
    tf = V369
    if = V370
    df = V371
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {}
0x8048402:pop    ebp
    ax = V387
    cx = V348
    dx = V349
    bx = V350
    sp = V351 [from 0x8048402:pop    ebp]
    bp = V391 [from 0x8048402:pop    ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V362
    pf = V388
    ?3 = V364
    af = <top>
    ?5 = V366
    zf = V389
    sf = V390
    tf = V369
    if = V370
    df = V371
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {}
0x8048403:ret    
    ax = V387
    cx = V348
    dx = V349
    bx = V350
    sp = V351+0x4 [from 0x8048403:ret    ]
    bp = V391 [from 0x8048402:pop    ebp]
    si = V353
    di = V354
    es = V355
    cs = V356
    ss = V357
    ds = V358
    fs = V359
    gs = V360
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V362
    pf = V388
    ?3 = V364
    af = <top>
    ?5 = V366
    zf = V389
    sf = V390
    tf = V369
    if = V370
    df = V371
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V373
    iopl1 = V374
    nt = V375
    ?15 = V376
    memory = {}
==============================================
Constant propagation in function "0x8048404"
==============================================
0x8048404:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x8048405:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x8048406:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x8048407:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x8048408:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x8048409:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x804840a:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x804840b:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x804840c:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x804840d:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x804840e:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
0x804840f:nop    
    ax = V392
    cx = V393
    dx = V394
    bx = V395
    sp = V396
    bp = V397
    si = V398
    di = V399
    es = V400
    cs = V401
    ss = V402
    ds = V403
    fs = V404
    gs = V405
    cf = V406
    ?1 = V407
    pf = V408
    ?3 = V409
    af = V410
    ?5 = V411
    zf = V412
    sf = V413
    tf = V414
    if = V415
    df = V416
    of = V417
    iopl0 = V418
    iopl1 = V419
    nt = V420
    ?15 = V421
    memory = {}
==============================================
Constant propagation in function "main"
==============================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = V422
    cx = V423
    dx = V424
    bx = V425
    sp = V426
    bp = V427
    si = V428
    di = V429
    es = V430
    cs = V431
    ss = V432
    ds = V433
    fs = V434
    gs = V435
    cf = V436
    ?1 = V437
    pf = V438
    ?3 = V439
    af = V440
    ?5 = V441
    zf = V442
    sf = V443
    tf = V444
    if = V445
    df = V446
    of = V447
    iopl0 = V448
    iopl1 = V449
    nt = V450
    ?15 = V451
    memory = {}
0x8048410:push   ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x8048411:mov    edx, 0x08048480
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x8048416:mov    ebp, esp
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x8048418:sub    esp, 0x08
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x804841b:and    esp, 0xf0
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=<top>; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
    }
0x8048429:call   0x080482f0
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=<top>; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=<top>; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
0x804842e:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048430:xor    eax, eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048432:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048433:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "bar"
==============================================
0x8048440:push   ebp
    ax = V452
    cx = V453
    dx = V454
    bx = V455
    sp = V456-0x4 [from 0x8048440:push   ebp]
    bp = V457
    si = V458
    di = V459
    es = V460
    cs = V461
    ss = V462
    ds = V463
    fs = V464
    gs = V465
    cf = V466
    ?1 = V467
    pf = V468
    ?3 = V469
    af = V470
    ?5 = V471
    zf = V472
    sf = V473
    tf = V474
    if = V475
    df = V476
    of = V477
    iopl0 = V478
    iopl1 = V479
    nt = V480
    ?15 = V481
    memory = {
        size=4; addr=V456-0x4 [from 0x8048440:push   ebp]; value=V457
    }
0x8048441:mov    ebp, esp
    ax = V452
    cx = V453
    dx = V454
    bx = V455
    sp = V456-0x4 [from 0x8048440:push   ebp]
    bp = V456-0x4 [from 0x8048440:push   ebp]
    si = V458
    di = V459
    es = V460
    cs = V461
    ss = V462
    ds = V463
    fs = V464
    gs = V465
    cf = V466
    ?1 = V467
    pf = V468
    ?3 = V469
    af = V470
    ?5 = V471
    zf = V472
    sf = V473
    tf = V474
    if = V475
    df = V476
    of = V477
    iopl0 = V478
    iopl1 = V479
    nt = V480
    ?15 = V481
    memory = {
        size=4; addr=V456-0x4 [from 0x8048440:push   ebp]; value=V457
    }
0x8048443:sub    esp, 0x08
    ax = V452
    cx = V453
    dx = V454
    bx = V455
    sp = V456-0xc [from 0x8048443:sub    esp, 0x08]
    bp = V456-0x4 [from 0x8048440:push   ebp]
    si = V458
    di = V459
    es = V460
    cs = V461
    ss = V462
    ds = V463
    fs = V464
    gs = V465
    cf = -V482-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V467
    pf = -V483-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V469
    af = -V484-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V471
    zf = V485 [from 0x8048443:sub    esp, 0x08]
    sf = V486 [from 0x8048443:sub    esp, 0x08]
    tf = V474
    if = V475
    df = V476
    of = V487 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V478
    iopl1 = V479
    nt = V480
    ?15 = V481
    memory = {
        size=4; addr=V456-0x4 [from 0x8048440:push   ebp]; value=V457
    }
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V452
    cx = V453
    dx = V454
    bx = V455
    sp = V456-0xc [from 0x8048443:sub    esp, 0x08]
    bp = V456-0x4 [from 0x8048440:push   ebp]
    si = V458
    di = V459
    es = V460
    cs = V461
    ss = V462
    ds = V463
    fs = V464
    gs = V465
    cf = -V482-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V467
    pf = -V483-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V469
    af = -V484-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V471
    zf = V485 [from 0x8048443:sub    esp, 0x08]
    sf = V486 [from 0x8048443:sub    esp, 0x08]
    tf = V474
    if = V475
    df = V476
    of = V487 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V478
    iopl1 = V479
    nt = V480
    ?15 = V481
    memory = {
        size=4; addr=V456-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V456-0x4 [from 0x8048440:push   ebp]; value=V457
    }
0x804844d:call   0x08048300
    ax = V452
    cx = V453
    dx = V454
    bx = V455
    sp = V456-0x10 [from 0x804844d:call   0x08048300]
    bp = V456-0x4 [from 0x8048440:push   ebp]
    si = V458
    di = V459
    es = V460
    cs = V461
    ss = V462
    ds = V463
    fs = V464
    gs = V465
    cf = -V482-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V467
    pf = -V483-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V469
    af = -V484-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V471
    zf = V485 [from 0x8048443:sub    esp, 0x08]
    sf = V486 [from 0x8048443:sub    esp, 0x08]
    tf = V474
    if = V475
    df = V476
    of = V487 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V478
    iopl1 = V479
    nt = V480
    ?15 = V481
    memory = {
        size=4; addr=V456-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=V456-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V456-0x4 [from 0x8048440:push   ebp]; value=V457
    }
0x8048452:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048454:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048455:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "foo"
==============================================
0x8048460:push   ebp
    ax = V488
    cx = V489
    dx = V490
    bx = V491
    sp = V492-0x4 [from 0x8048460:push   ebp]
    bp = V493
    si = V494
    di = V495
    es = V496
    cs = V497
    ss = V498
    ds = V499
    fs = V500
    gs = V501
    cf = V502
    ?1 = V503
    pf = V504
    ?3 = V505
    af = V506
    ?5 = V507
    zf = V508
    sf = V509
    tf = V510
    if = V511
    df = V512
    of = V513
    iopl0 = V514
    iopl1 = V515
    nt = V516
    ?15 = V517
    memory = {
        size=4; addr=V492-0x4 [from 0x8048460:push   ebp]; value=V493
    }
0x8048461:mov    ebp, esp
    ax = V488
    cx = V489
    dx = V490
    bx = V491
    sp = V492-0x4 [from 0x8048460:push   ebp]
    bp = V492-0x4 [from 0x8048460:push   ebp]
    si = V494
    di = V495
    es = V496
    cs = V497
    ss = V498
    ds = V499
    fs = V500
    gs = V501
    cf = V502
    ?1 = V503
    pf = V504
    ?3 = V505
    af = V506
    ?5 = V507
    zf = V508
    sf = V509
    tf = V510
    if = V511
    df = V512
    of = V513
    iopl0 = V514
    iopl1 = V515
    nt = V516
    ?15 = V517
    memory = {
        size=4; addr=V492-0x4 [from 0x8048460:push   ebp]; value=V493
    }
0x8048463:sub    esp, 0x08
    ax = V488
    cx = V489
    dx = V490
    bx = V491
    sp = V492-0xc [from 0x8048463:sub    esp, 0x08]
    bp = V492-0x4 [from 0x8048460:push   ebp]
    si = V494
    di = V495
    es = V496
    cs = V497
    ss = V498
    ds = V499
    fs = V500
    gs = V501
    cf = -V518-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V503
    pf = -V519-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V505
    af = -V520-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V507
    zf = V521 [from 0x8048463:sub    esp, 0x08]
    sf = V522 [from 0x8048463:sub    esp, 0x08]
    tf = V510
    if = V511
    df = V512
    of = V523 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V514
    iopl1 = V515
    nt = V516
    ?15 = V517
    memory = {
        size=4; addr=V492-0x4 [from 0x8048460:push   ebp]; value=V493
    }
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V488
    cx = V489
    dx = V490
    bx = V491
    sp = V492-0xc [from 0x8048463:sub    esp, 0x08]
    bp = V492-0x4 [from 0x8048460:push   ebp]
    si = V494
    di = V495
    es = V496
    cs = V497
    ss = V498
    ds = V499
    fs = V500
    gs = V501
    cf = -V518-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V503
    pf = -V519-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V505
    af = -V520-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V507
    zf = V521 [from 0x8048463:sub    esp, 0x08]
    sf = V522 [from 0x8048463:sub    esp, 0x08]
    tf = V510
    if = V511
    df = V512
    of = V523 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V514
    iopl1 = V515
    nt = V516
    ?15 = V517
    memory = {
        size=4; addr=V492-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V492-0x4 [from 0x8048460:push   ebp]; value=V493
    }
0x804846d:call   0x08048300
    ax = V488
    cx = V489
    dx = V490
    bx = V491
    sp = V492-0x10 [from 0x804846d:call   0x08048300]
    bp = V492-0x4 [from 0x8048460:push   ebp]
    si = V494
    di = V495
    es = V496
    cs = V497
    ss = V498
    ds = V499
    fs = V500
    gs = V501
    cf = -V518-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V503
    pf = -V519-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V505
    af = -V520-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V507
    zf = V521 [from 0x8048463:sub    esp, 0x08]
    sf = V522 [from 0x8048463:sub    esp, 0x08]
    tf = V510
    if = V511
    df = V512
    of = V523 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V514
    iopl1 = V515
    nt = V516
    ?15 = V517
    memory = {
        size=4; addr=V492-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=V492-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V492-0x4 [from 0x8048460:push   ebp]; value=V493
    }
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x8048479:call   0x08048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=<top>; value=0x804847e [from 0x8048479:call   0x08048320]
    }
0x804847e:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "handler"
==============================================
0x8048480:push   ebp
    ax = V524
    cx = V525
    dx = V526
    bx = V527
    sp = V528-0x4 [from 0x8048480:push   ebp]
    bp = V529
    si = V530
    di = V531
    es = V532
    cs = V533
    ss = V534
    ds = V535
    fs = V536
    gs = V537
    cf = V538
    ?1 = V539
    pf = V540
    ?3 = V541
    af = V542
    ?5 = V543
    zf = V544
    sf = V545
    tf = V546
    if = V547
    df = V548
    of = V549
    iopl0 = V550
    iopl1 = V551
    nt = V552
    ?15 = V553
    memory = {
        size=4; addr=V528-0x4 [from 0x8048480:push   ebp]; value=V529
    }
0x8048481:mov    ebp, esp
    ax = V524
    cx = V525
    dx = V526
    bx = V527
    sp = V528-0x4 [from 0x8048480:push   ebp]
    bp = V528-0x4 [from 0x8048480:push   ebp]
    si = V530
    di = V531
    es = V532
    cs = V533
    ss = V534
    ds = V535
    fs = V536
    gs = V537
    cf = V538
    ?1 = V539
    pf = V540
    ?3 = V541
    af = V542
    ?5 = V543
    zf = V544
    sf = V545
    tf = V546
    if = V547
    df = V548
    of = V549
    iopl0 = V550
    iopl1 = V551
    nt = V552
    ?15 = V553
    memory = {
        size=4; addr=V528-0x4 [from 0x8048480:push   ebp]; value=V529
    }
0x8048483:sub    esp, 0x08
    ax = V524
    cx = V525
    dx = V526
    bx = V527
    sp = V528-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V528-0x4 [from 0x8048480:push   ebp]
    si = V530
    di = V531
    es = V532
    cs = V533
    ss = V534
    ds = V535
    fs = V536
    gs = V537
    cf = -V554-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V539
    pf = -V555-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = V541
    af = -V556-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = V543
    zf = V557 [from 0x8048483:sub    esp, 0x08]
    sf = V558 [from 0x8048483:sub    esp, 0x08]
    tf = V546
    if = V547
    df = V548
    of = V559 [from 0x8048483:sub    esp, 0x08]
    iopl0 = V550
    iopl1 = V551
    nt = V552
    ?15 = V553
    memory = {
        size=4; addr=V528-0x4 [from 0x8048480:push   ebp]; value=V529
    }
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = V524
    cx = V525
    dx = V526
    bx = V527
    sp = V528-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V528-0x4 [from 0x8048480:push   ebp]
    si = V530
    di = V531
    es = V532
    cs = V533
    ss = V534
    ds = V535
    fs = V536
    gs = V537
    cf = -V554-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V539
    pf = -V560-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V541
    af = V561 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V543
    zf = V562 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V563 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V546
    if = V547
    df = V548
    of = V564 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V550
    iopl1 = V551
    nt = V552
    ?15 = V553
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=V565+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V524
    cx = V525
    dx = V526
    bx = V527
    sp = V528-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V528-0x4 [from 0x8048480:push   ebp]
    si = V530
    di = V531
    es = V532
    cs = V533
    ss = V534
    ds = V535
    fs = V536
    gs = V537
    cf = -V554-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V539
    pf = -V560-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V541
    af = V561 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V543
    zf = V562 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V563 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V546
    if = V547
    df = V548
    of = V564 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V550
    iopl1 = V551
    nt = V552
    ?15 = V553
    memory = {
        size=4; addr=V528-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
0x8048493:call   0x08048300
    ax = V524
    cx = V525
    dx = V526
    bx = V527
    sp = V528-0x10 [from 0x8048493:call   0x08048300]
    bp = V528-0x4 [from 0x8048480:push   ebp]
    si = V530
    di = V531
    es = V532
    cs = V533
    ss = V534
    ds = V535
    fs = V536
    gs = V537
    cf = -V554-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V539
    pf = -V560-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V541
    af = V561 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V543
    zf = V562 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V563 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V546
    if = V547
    df = V548
    of = V564 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V550
    iopl1 = V551
    nt = V552
    ?15 = V553
    memory = {
        size=4; addr=V528-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=V528-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x804849f:call   0x08048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=<top>; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
0x80484a4:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a5:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a6:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a7:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a9:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484aa:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ab:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ac:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ad:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ae:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484af:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_init"
==============================================
0x80484b0:push   ebp
    ax = V566
    cx = V567
    dx = V568
    bx = V569
    sp = V570-0x4 [from 0x80484b0:push   ebp]
    bp = V571
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = V580
    ?1 = V581
    pf = V582
    ?3 = V583
    af = V584
    ?5 = V585
    zf = V586
    sf = V587
    tf = V588
    if = V589
    df = V590
    of = V591
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484b1:mov    ebp, esp
    ax = V566
    cx = V567
    dx = V568
    bx = V569
    sp = V570-0x4 [from 0x80484b0:push   ebp]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = V580
    ?1 = V581
    pf = V582
    ?3 = V583
    af = V584
    ?5 = V585
    zf = V586
    sf = V587
    tf = V588
    if = V589
    df = V590
    of = V591
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484b3:push   edi
    ax = V566
    cx = V567
    dx = V568
    bx = V569
    sp = V570-0x8 [from 0x80484b3:push   edi]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = V580
    ?1 = V581
    pf = V582
    ?3 = V583
    af = V584
    ?5 = V585
    zf = V586
    sf = V587
    tf = V588
    if = V589
    df = V590
    of = V591
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x8 [from 0x80484b3:push   edi]; value=V573
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484b4:push   esi
    ax = V566
    cx = V567
    dx = V568
    bx = V569
    sp = V570-0xc [from 0x80484b4:push   esi]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = V580
    ?1 = V581
    pf = V582
    ?3 = V583
    af = V584
    ?5 = V585
    zf = V586
    sf = V587
    tf = V588
    if = V589
    df = V590
    of = V591
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0xc [from 0x80484b4:push   esi]; value=V572
        size=4; addr=V570-0x8 [from 0x80484b3:push   edi]; value=V573
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484b5:push   ebx
    ax = V566
    cx = V567
    dx = V568
    bx = V569
    sp = V570-0x10 [from 0x80484b5:push   ebx]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = V580
    ?1 = V581
    pf = V582
    ?3 = V583
    af = V584
    ?5 = V585
    zf = V586
    sf = V587
    tf = V588
    if = V589
    df = V590
    of = V591
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x10 [from 0x80484b5:push   ebx]; value=V569
        size=4; addr=V570-0xc [from 0x80484b4:push   esi]; value=V572
        size=4; addr=V570-0x8 [from 0x80484b3:push   edi]; value=V573
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484b6:sub    esp, 0x0c
    ax = V566
    cx = V567
    dx = V568
    bx = V569
    sp = V570-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = -V596-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V581
    pf = -V597-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V583
    af = -V598-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V585
    zf = V599 [from 0x80484b6:sub    esp, 0x0c]
    sf = V600 [from 0x80484b6:sub    esp, 0x0c]
    tf = V588
    if = V589
    df = V590
    of = V601 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x10 [from 0x80484b5:push   ebx]; value=V569
        size=4; addr=V570-0xc [from 0x80484b4:push   esi]; value=V572
        size=4; addr=V570-0x8 [from 0x80484b3:push   edi]; value=V573
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484b9:call   0x080484be
    ax = V566
    cx = V567
    dx = V568
    bx = V569
    sp = V570-0x20 [from 0x80484b9:call   0x080484be]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = -V596-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V581
    pf = -V597-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V583
    af = -V598-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V585
    zf = V599 [from 0x80484b6:sub    esp, 0x0c]
    sf = V600 [from 0x80484b6:sub    esp, 0x0c]
    tf = V588
    if = V589
    df = V590
    of = V601 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V570-0x10 [from 0x80484b5:push   ebx]; value=V569
        size=4; addr=V570-0xc [from 0x80484b4:push   esi]; value=V572
        size=4; addr=V570-0x8 [from 0x80484b3:push   edi]; value=V573
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484be:pop    ebx
    ax = V566
    cx = V567
    dx = V568
    bx = 0x80484be [from 0x80484b9:call   0x080484be]
    sp = V570-0x1c [from 0x80484be:pop    ebx]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = -V596-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V581
    pf = -V597-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V583
    af = -V598-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V585
    zf = V599 [from 0x80484b6:sub    esp, 0x0c]
    sf = V600 [from 0x80484b6:sub    esp, 0x0c]
    tf = V588
    if = V589
    df = V590
    of = V601 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V570-0x10 [from 0x80484b5:push   ebx]; value=V569
        size=4; addr=V570-0xc [from 0x80484b4:push   esi]; value=V572
        size=4; addr=V570-0x8 [from 0x80484b3:push   edi]; value=V573
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484bf:add    ebx, 0x0000120a
    ax = V566
    cx = V567
    dx = V568
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V570-0x1c [from 0x80484be:pop    ebx]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = V581
    pf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = V583
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = V585
    zf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = V588
    if = V589
    df = V590
    of = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V570-0x10 [from 0x80484b5:push   ebx]; value=V569
        size=4; addr=V570-0xc [from 0x80484b4:push   esi]; value=V572
        size=4; addr=V570-0x8 [from 0x80484b3:push   edi]; value=V573
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484c5:call   0x080482c8
    ax = V566
    cx = V567
    dx = V568
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V570-0x20 [from 0x80484c5:call   0x080482c8]
    bp = V570-0x4 [from 0x80484b0:push   ebp]
    si = V572
    di = V573
    es = V574
    cs = V575
    ss = V576
    ds = V577
    fs = V578
    gs = V579
    cf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = V581
    pf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = V583
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = V585
    zf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = V588
    if = V589
    df = V590
    of = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = V592
    iopl1 = V593
    nt = V594
    ?15 = V595
    memory = {
        size=4; addr=V570-0x20 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
        size=4; addr=V570-0x10 [from 0x80484b5:push   ebx]; value=V569
        size=4; addr=V570-0xc [from 0x80484b4:push   esi]; value=V572
        size=4; addr=V570-0x8 [from 0x80484b3:push   edi]; value=V573
        size=4; addr=V570-0x4 [from 0x80484b0:push   ebp]; value=V571
    }
0x80484ca:lea    eax, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d0:lea    edx, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d6:sub    eax, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d8:sar    eax, 0x02
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484de:jne    0x080484f0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e0:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e3:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V602 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e4:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V602 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = V603 [from 0x80484e4:pop    esi]
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e5:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V602 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = V603 [from 0x80484e4:pop    esi]
    di = V604 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e6:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V602 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = V605 [from 0x80484e6:pop    ebp]
    si = V603 [from 0x80484e4:pop    esi]
    di = V604 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e7:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V602 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = V605 [from 0x80484e6:pop    ebp]
    si = V603 [from 0x80484e4:pop    esi]
    di = V604 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484f0:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f2:mov    esi, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f4:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484fa:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048500:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
0x8048502:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048503:add    esi, 0x04
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048509:jb     0x08048500
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850b:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850e:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850f:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048510:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048511:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048512:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_fini"
==============================================
0x8048520:push   ebp
    ax = V606
    cx = V607
    dx = V608
    bx = V609
    sp = V610-0x4 [from 0x8048520:push   ebp]
    bp = V611
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = V620
    ?1 = V621
    pf = V622
    ?3 = V623
    af = V624
    ?5 = V625
    zf = V626
    sf = V627
    tf = V628
    if = V629
    df = V630
    of = V631
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048521:mov    ebp, esp
    ax = V606
    cx = V607
    dx = V608
    bx = V609
    sp = V610-0x4 [from 0x8048520:push   ebp]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = V620
    ?1 = V621
    pf = V622
    ?3 = V623
    af = V624
    ?5 = V625
    zf = V626
    sf = V627
    tf = V628
    if = V629
    df = V630
    of = V631
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048523:push   edi
    ax = V606
    cx = V607
    dx = V608
    bx = V609
    sp = V610-0x8 [from 0x8048523:push   edi]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = V620
    ?1 = V621
    pf = V622
    ?3 = V623
    af = V624
    ?5 = V625
    zf = V626
    sf = V627
    tf = V628
    if = V629
    df = V630
    of = V631
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048524:push   esi
    ax = V606
    cx = V607
    dx = V608
    bx = V609
    sp = V610-0xc [from 0x8048524:push   esi]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = V620
    ?1 = V621
    pf = V622
    ?3 = V623
    af = V624
    ?5 = V625
    zf = V626
    sf = V627
    tf = V628
    if = V629
    df = V630
    of = V631
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048525:push   ebx
    ax = V606
    cx = V607
    dx = V608
    bx = V609
    sp = V610-0x10 [from 0x8048525:push   ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = V620
    ?1 = V621
    pf = V622
    ?3 = V623
    af = V624
    ?5 = V625
    zf = V626
    sf = V627
    tf = V628
    if = V629
    df = V630
    of = V631
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048526:sub    esp, 0x0c
    ax = V606
    cx = V607
    dx = V608
    bx = V609
    sp = V610-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = -V636-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V621
    pf = -V637-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V623
    af = -V638-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V625
    zf = V639 [from 0x8048526:sub    esp, 0x0c]
    sf = V640 [from 0x8048526:sub    esp, 0x0c]
    tf = V628
    if = V629
    df = V630
    of = V641 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048529:call   0x0804852e
    ax = V606
    cx = V607
    dx = V608
    bx = V609
    sp = V610-0x20 [from 0x8048529:call   0x0804852e]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = -V636-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V621
    pf = -V637-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V623
    af = -V638-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V625
    zf = V639 [from 0x8048526:sub    esp, 0x0c]
    sf = V640 [from 0x8048526:sub    esp, 0x0c]
    tf = V628
    if = V629
    df = V630
    of = V641 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x804852e:pop    ebx
    ax = V606
    cx = V607
    dx = V608
    bx = 0x804852e [from 0x8048529:call   0x0804852e]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = -V636-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V621
    pf = -V637-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V623
    af = -V638-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V625
    zf = V639 [from 0x8048526:sub    esp, 0x0c]
    sf = V640 [from 0x8048526:sub    esp, 0x0c]
    tf = V628
    if = V629
    df = V630
    of = V641 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x804852f:add    ebx, 0x0000119a
    ax = V606
    cx = V607
    dx = V608
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V621
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V623
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V625
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048535:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = V607
    dx = V608
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V621
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V623
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V625
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x804853b:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = V607
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V621
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V623
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V625
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048541:sub    eax, edx
    ax = 0x0 [from 0x8048541:sub    eax, edx]
    cx = V607
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x8048541:sub    eax, edx]
    ?1 = V621
    pf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    ?3 = V623
    af = 0x0 [from 0x8048541:sub    eax, edx]
    ?5 = V625
    zf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    sf = 0x0 [from 0x8048541:sub    eax, edx]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x8048541:sub    eax, edx]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048543:sar    eax, 0x02
    ax = 0x0 [from 0x8048543:sar    eax, 0x02]
    cx = V607
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V621
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    ?3 = V623
    af = <top>
    ?5 = V625
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    sf = 0x0 [from 0x8048543:sar    eax, 0x02]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = 0x0 [from 0x8048543:sar    eax, 0x02]
    cx = V607
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V621
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    ?3 = V623
    af = <top>
    ?5 = V625
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    sf = 0x0 [from 0x8048543:sar    eax, 0x02]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048549:dec    eax
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V607
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V621
    pf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?3 = V623
    af = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?5 = V625
    zf = 0x0 [from 0x8048549:dec    eax]
    sf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x8048549:dec    eax]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x804854a:cmp    eax, 0xff
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V607
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V621
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V623
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V625
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x804854d:je     0x0804856b
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V607
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x1c [from 0x804852e:pop    ebx]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V621
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V623
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V625
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V610-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x804856b:call   0x080485b0
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V607
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V610-0x20 [from 0x804856b:call   0x080485b0]
    bp = V610-0x4 [from 0x8048520:push   ebp]
    si = V612
    di = V613
    es = V614
    cs = V615
    ss = V616
    ds = V617
    fs = V618
    gs = V619
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V621
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V623
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V625
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V628
    if = V629
    df = V630
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V632
    iopl1 = V633
    nt = V634
    ?15 = V635
    memory = {
        size=4; addr=V610-0x20 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
        size=4; addr=V610-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V610-0x10 [from 0x8048525:push   ebx]; value=V609
        size=4; addr=V610-0xc [from 0x8048524:push   esi]; value=V612
        size=4; addr=V610-0x8 [from 0x8048523:push   edi]; value=V613
        size=4; addr=V610-0x4 [from 0x8048520:push   ebp]; value=V611
    }
0x8048570:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048573:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048574:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048575:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048576:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048577:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048578"
==============================================
0x8048578:nop    
    ax = V642
    cx = V643
    dx = V644
    bx = V645
    sp = V646
    bp = V647
    si = V648
    di = V649
    es = V650
    cs = V651
    ss = V652
    ds = V653
    fs = V654
    gs = V655
    cf = V656
    ?1 = V657
    pf = V658
    ?3 = V659
    af = V660
    ?5 = V661
    zf = V662
    sf = V663
    tf = V664
    if = V665
    df = V666
    of = V667
    iopl0 = V668
    iopl1 = V669
    nt = V670
    ?15 = V671
    memory = {}
0x8048579:nop    
    ax = V642
    cx = V643
    dx = V644
    bx = V645
    sp = V646
    bp = V647
    si = V648
    di = V649
    es = V650
    cs = V651
    ss = V652
    ds = V653
    fs = V654
    gs = V655
    cf = V656
    ?1 = V657
    pf = V658
    ?3 = V659
    af = V660
    ?5 = V661
    zf = V662
    sf = V663
    tf = V664
    if = V665
    df = V666
    of = V667
    iopl0 = V668
    iopl1 = V669
    nt = V670
    ?15 = V671
    memory = {}
0x804857a:nop    
    ax = V642
    cx = V643
    dx = V644
    bx = V645
    sp = V646
    bp = V647
    si = V648
    di = V649
    es = V650
    cs = V651
    ss = V652
    ds = V653
    fs = V654
    gs = V655
    cf = V656
    ?1 = V657
    pf = V658
    ?3 = V659
    af = V660
    ?5 = V661
    zf = V662
    sf = V663
    tf = V664
    if = V665
    df = V666
    of = V667
    iopl0 = V668
    iopl1 = V669
    nt = V670
    ?15 = V671
    memory = {}
0x804857b:nop    
    ax = V642
    cx = V643
    dx = V644
    bx = V645
    sp = V646
    bp = V647
    si = V648
    di = V649
    es = V650
    cs = V651
    ss = V652
    ds = V653
    fs = V654
    gs = V655
    cf = V656
    ?1 = V657
    pf = V658
    ?3 = V659
    af = V660
    ?5 = V661
    zf = V662
    sf = V663
    tf = V664
    if = V665
    df = V666
    of = V667
    iopl0 = V668
    iopl1 = V669
    nt = V670
    ?15 = V671
    memory = {}
0x804857c:nop    
    ax = V642
    cx = V643
    dx = V644
    bx = V645
    sp = V646
    bp = V647
    si = V648
    di = V649
    es = V650
    cs = V651
    ss = V652
    ds = V653
    fs = V654
    gs = V655
    cf = V656
    ?1 = V657
    pf = V658
    ?3 = V659
    af = V660
    ?5 = V661
    zf = V662
    sf = V663
    tf = V664
    if = V665
    df = V666
    of = V667
    iopl0 = V668
    iopl1 = V669
    nt = V670
    ?15 = V671
    memory = {}
0x804857d:nop    
    ax = V642
    cx = V643
    dx = V644
    bx = V645
    sp = V646
    bp = V647
    si = V648
    di = V649
    es = V650
    cs = V651
    ss = V652
    ds = V653
    fs = V654
    gs = V655
    cf = V656
    ?1 = V657
    pf = V658
    ?3 = V659
    af = V660
    ?5 = V661
    zf = V662
    sf = V663
    tf = V664
    if = V665
    df = V666
    of = V667
    iopl0 = V668
    iopl1 = V669
    nt = V670
    ?15 = V671
    memory = {}
0x804857e:nop    
    ax = V642
    cx = V643
    dx = V644
    bx = V645
    sp = V646
    bp = V647
    si = V648
    di = V649
    es = V650
    cs = V651
    ss = V652
    ds = V653
    fs = V654
    gs = V655
    cf = V656
    ?1 = V657
    pf = V658
    ?3 = V659
    af = V660
    ?5 = V661
    zf = V662
    sf = V663
    tf = V664
    if = V665
    df = V666
    of = V667
    iopl0 = V668
    iopl1 = V669
    nt = V670
    ?15 = V671
    memory = {}
0x804857f:nop    
    ax = V642
    cx = V643
    dx = V644
    bx = V645
    sp = V646
    bp = V647
    si = V648
    di = V649
    es = V650
    cs = V651
    ss = V652
    ds = V653
    fs = V654
    gs = V655
    cf = V656
    ?1 = V657
    pf = V658
    ?3 = V659
    af = V660
    ?5 = V661
    zf = V662
    sf = V663
    tf = V664
    if = V665
    df = V666
    of = V667
    iopl0 = V668
    iopl1 = V669
    nt = V670
    ?15 = V671
    memory = {}
==============================================
Constant propagation in function "__do_global_ctors_aux"
==============================================
0x8048580:push   ebp
    ax = V672
    cx = V673
    dx = V674
    bx = V675
    sp = V676-0x4 [from 0x8048580:push   ebp]
    bp = V677
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = V686
    ?1 = V687
    pf = V688
    ?3 = V689
    af = V690
    ?5 = V691
    zf = V692
    sf = V693
    tf = V694
    if = V695
    df = V696
    of = V697
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x8048581:mov    ebp, esp
    ax = V672
    cx = V673
    dx = V674
    bx = V675
    sp = V676-0x4 [from 0x8048580:push   ebp]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = V686
    ?1 = V687
    pf = V688
    ?3 = V689
    af = V690
    ?5 = V691
    zf = V692
    sf = V693
    tf = V694
    if = V695
    df = V696
    of = V697
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x8048583:push   ebx
    ax = V672
    cx = V673
    dx = V674
    bx = V675
    sp = V676-0x8 [from 0x8048583:push   ebx]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = V686
    ?1 = V687
    pf = V688
    ?3 = V689
    af = V690
    ?5 = V691
    zf = V692
    sf = V693
    tf = V694
    if = V695
    df = V696
    of = V697
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x8048584:sub    esp, 0x04
    ax = V672
    cx = V673
    dx = V674
    bx = V675
    sp = V676-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V702-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V687
    pf = -V703-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V689
    af = -V704-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V691
    zf = V705 [from 0x8048584:sub    esp, 0x04]
    sf = V706 [from 0x8048584:sub    esp, 0x04]
    tf = V694
    if = V695
    df = V696
    of = V707 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x8048587:mov    ebx, 0x080495e8
    ax = V672
    cx = V673
    dx = V674
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V676-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V702-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V687
    pf = -V703-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V689
    af = -V704-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V691
    zf = V705 [from 0x8048584:sub    esp, 0x04]
    sf = V706 [from 0x8048584:sub    esp, 0x04]
    tf = V694
    if = V695
    df = V696
    of = V707 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = V708 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V673
    dx = V674
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V676-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V702-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V687
    pf = -V703-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V689
    af = -V704-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V691
    zf = V705 [from 0x8048584:sub    esp, 0x04]
    sf = V706 [from 0x8048584:sub    esp, 0x04]
    tf = V694
    if = V695
    df = V696
    of = V707 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x8048591:cmp    eax, 0xff
    ax = V708 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V673
    dx = V674
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V676-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V709-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V687
    pf = -V710-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V689
    af = -V711-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V691
    zf = V712 [from 0x8048591:cmp    eax, 0xff]
    sf = V713 [from 0x8048591:cmp    eax, 0xff]
    tf = V694
    if = V695
    df = V696
    of = V714 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x8048594:je     0x080485ac
    ax = V708 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V673
    dx = V674
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V676-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V709-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V687
    pf = -V710-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V689
    af = -V711-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V691
    zf = V712 [from 0x8048591:cmp    eax, 0xff]
    sf = V713 [from 0x8048591:cmp    eax, 0xff]
    tf = V694
    if = V695
    df = V696
    of = V714 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x8048596:lea    esi, [esi + 0x00]
    ax = V708 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V673
    dx = V674
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V676-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V709-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V687
    pf = -V710-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V689
    af = -V711-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V691
    zf = V712 [from 0x8048591:cmp    eax, 0xff]
    sf = V713 [from 0x8048591:cmp    eax, 0xff]
    tf = V694
    if = V695
    df = V696
    of = V714 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x8048599:lea    edi, [edi + 0x00000000]
    ax = V708 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V673
    dx = V674
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V676-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V679 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V709-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V687
    pf = -V710-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V689
    af = -V711-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V691
    zf = V712 [from 0x8048591:cmp    eax, 0xff]
    sf = V713 [from 0x8048591:cmp    eax, 0xff]
    tf = V694
    if = V695
    df = V696
    of = V714 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x80485a0:sub    ebx, 0x04
    ax = V708 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V673
    dx = V674
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = V676-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V679 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = V687
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x04]
    ?3 = V689
    af = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = V691
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    tf = V694
    if = V695
    df = V696
    of = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x80485a3:call   eax
    ax = V708 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V673
    dx = V674
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = V676-0x10 [from 0x80485a3:call   eax]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V679 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = V687
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x04]
    ?3 = V689
    af = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = V691
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    tf = V694
    if = V695
    df = V696
    of = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x10 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485a7:cmp    eax, 0xff
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485aa:jne    0x080485a0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485ac:pop    eax
    ax = V715 [from 0x80485ac:pop    eax]
    cx = V673
    dx = V674
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V676-0x8 [from 0x80485ac:pop    eax]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V709-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V687
    pf = -V710-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V689
    af = -V711-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V691
    zf = V712 [from 0x8048591:cmp    eax, 0xff]
    sf = V713 [from 0x8048591:cmp    eax, 0xff]
    tf = V694
    if = V695
    df = V696
    of = V714 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x80485ad:pop    ebx
    ax = V715 [from 0x80485ac:pop    eax]
    cx = V673
    dx = V674
    bx = V675
    sp = V676-0x4 [from 0x80485ad:pop    ebx]
    bp = V676-0x4 [from 0x8048580:push   ebp]
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V709-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V687
    pf = -V710-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V689
    af = -V711-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V691
    zf = V712 [from 0x8048591:cmp    eax, 0xff]
    sf = V713 [from 0x8048591:cmp    eax, 0xff]
    tf = V694
    if = V695
    df = V696
    of = V714 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x80485ae:pop    ebp
    ax = V715 [from 0x80485ac:pop    eax]
    cx = V673
    dx = V674
    bx = V675
    sp = V676 [from 0x80485ae:pop    ebp]
    bp = V677
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V709-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V687
    pf = -V710-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V689
    af = -V711-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V691
    zf = V712 [from 0x8048591:cmp    eax, 0xff]
    sf = V713 [from 0x8048591:cmp    eax, 0xff]
    tf = V694
    if = V695
    df = V696
    of = V714 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
0x80485af:ret    
    ax = V715 [from 0x80485ac:pop    eax]
    cx = V673
    dx = V674
    bx = V675
    sp = V676+0x4 [from 0x80485af:ret    ]
    bp = V677
    si = V678
    di = V679
    es = V680
    cs = V681
    ss = V682
    ds = V683
    fs = V684
    gs = V685
    cf = -V709-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V687
    pf = -V710-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V689
    af = -V711-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V691
    zf = V712 [from 0x8048591:cmp    eax, 0xff]
    sf = V713 [from 0x8048591:cmp    eax, 0xff]
    tf = V694
    if = V695
    df = V696
    of = V714 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V698
    iopl1 = V699
    nt = V700
    ?15 = V701
    memory = {
        size=4; addr=V676-0x8 [from 0x8048583:push   ebx]; value=V675
        size=4; addr=V676-0x4 [from 0x8048580:push   ebp]; value=V677
    }
==============================================
Constant propagation in function "_fini"
==============================================
0x80485b0:push   ebp
    ax = V716
    cx = V717
    dx = V718
    bx = V719
    sp = V720-0x4 [from 0x80485b0:push   ebp]
    bp = V721
    si = V722
    di = V723
    es = V724
    cs = V725
    ss = V726
    ds = V727
    fs = V728
    gs = V729
    cf = V730
    ?1 = V731
    pf = V732
    ?3 = V733
    af = V734
    ?5 = V735
    zf = V736
    sf = V737
    tf = V738
    if = V739
    df = V740
    of = V741
    iopl0 = V742
    iopl1 = V743
    nt = V744
    ?15 = V745
    memory = {
        size=4; addr=V720-0x4 [from 0x80485b0:push   ebp]; value=V721
    }
0x80485b1:mov    ebp, esp
    ax = V716
    cx = V717
    dx = V718
    bx = V719
    sp = V720-0x4 [from 0x80485b0:push   ebp]
    bp = V720-0x4 [from 0x80485b0:push   ebp]
    si = V722
    di = V723
    es = V724
    cs = V725
    ss = V726
    ds = V727
    fs = V728
    gs = V729
    cf = V730
    ?1 = V731
    pf = V732
    ?3 = V733
    af = V734
    ?5 = V735
    zf = V736
    sf = V737
    tf = V738
    if = V739
    df = V740
    of = V741
    iopl0 = V742
    iopl1 = V743
    nt = V744
    ?15 = V745
    memory = {
        size=4; addr=V720-0x4 [from 0x80485b0:push   ebp]; value=V721
    }
0x80485b3:push   ebx
    ax = V716
    cx = V717
    dx = V718
    bx = V719
    sp = V720-0x8 [from 0x80485b3:push   ebx]
    bp = V720-0x4 [from 0x80485b0:push   ebp]
    si = V722
    di = V723
    es = V724
    cs = V725
    ss = V726
    ds = V727
    fs = V728
    gs = V729
    cf = V730
    ?1 = V731
    pf = V732
    ?3 = V733
    af = V734
    ?5 = V735
    zf = V736
    sf = V737
    tf = V738
    if = V739
    df = V740
    of = V741
    iopl0 = V742
    iopl1 = V743
    nt = V744
    ?15 = V745
    memory = {
        size=4; addr=V720-0x8 [from 0x80485b3:push   ebx]; value=V719
        size=4; addr=V720-0x4 [from 0x80485b0:push   ebp]; value=V721
    }
0x80485b4:push   eax
    ax = V716
    cx = V717
    dx = V718
    bx = V719
    sp = V720-0xc [from 0x80485b4:push   eax]
    bp = V720-0x4 [from 0x80485b0:push   ebp]
    si = V722
    di = V723
    es = V724
    cs = V725
    ss = V726
    ds = V727
    fs = V728
    gs = V729
    cf = V730
    ?1 = V731
    pf = V732
    ?3 = V733
    af = V734
    ?5 = V735
    zf = V736
    sf = V737
    tf = V738
    if = V739
    df = V740
    of = V741
    iopl0 = V742
    iopl1 = V743
    nt = V744
    ?15 = V745
    memory = {
        size=4; addr=V720-0xc [from 0x80485b4:push   eax]; value=V716
        size=4; addr=V720-0x8 [from 0x80485b3:push   ebx]; value=V719
        size=4; addr=V720-0x4 [from 0x80485b0:push   ebp]; value=V721
    }
0x80485b5:call   0x080485ba
    ax = V716
    cx = V717
    dx = V718
    bx = V719
    sp = V720-0x10 [from 0x80485b5:call   0x080485ba]
    bp = V720-0x4 [from 0x80485b0:push   ebp]
    si = V722
    di = V723
    es = V724
    cs = V725
    ss = V726
    ds = V727
    fs = V728
    gs = V729
    cf = V730
    ?1 = V731
    pf = V732
    ?3 = V733
    af = V734
    ?5 = V735
    zf = V736
    sf = V737
    tf = V738
    if = V739
    df = V740
    of = V741
    iopl0 = V742
    iopl1 = V743
    nt = V744
    ?15 = V745
    memory = {
        size=4; addr=V720-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V720-0xc [from 0x80485b4:push   eax]; value=V716
        size=4; addr=V720-0x8 [from 0x80485b3:push   ebx]; value=V719
        size=4; addr=V720-0x4 [from 0x80485b0:push   ebp]; value=V721
    }
0x80485ba:pop    ebx
    ax = V716
    cx = V717
    dx = V718
    bx = 0x80485ba [from 0x80485b5:call   0x080485ba]
    sp = V720-0xc [from 0x80485ba:pop    ebx]
    bp = V720-0x4 [from 0x80485b0:push   ebp]
    si = V722
    di = V723
    es = V724
    cs = V725
    ss = V726
    ds = V727
    fs = V728
    gs = V729
    cf = V730
    ?1 = V731
    pf = V732
    ?3 = V733
    af = V734
    ?5 = V735
    zf = V736
    sf = V737
    tf = V738
    if = V739
    df = V740
    of = V741
    iopl0 = V742
    iopl1 = V743
    nt = V744
    ?15 = V745
    memory = {
        size=4; addr=V720-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V720-0xc [from 0x80485b4:push   eax]; value=V716
        size=4; addr=V720-0x8 [from 0x80485b3:push   ebx]; value=V719
        size=4; addr=V720-0x4 [from 0x80485b0:push   ebp]; value=V721
    }
0x80485bb:add    ebx, 0x0000110e
    ax = V716
    cx = V717
    dx = V718
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = V720-0xc [from 0x80485ba:pop    ebx]
    bp = V720-0x4 [from 0x80485b0:push   ebp]
    si = V722
    di = V723
    es = V724
    cs = V725
    ss = V726
    ds = V727
    fs = V728
    gs = V729
    cf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = V731
    pf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = V733
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = V735
    zf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = V738
    if = V739
    df = V740
    of = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = V742
    iopl1 = V743
    nt = V744
    ?15 = V745
    memory = {
        size=4; addr=V720-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V720-0xc [from 0x80485b4:push   eax]; value=V716
        size=4; addr=V720-0x8 [from 0x80485b3:push   ebx]; value=V719
        size=4; addr=V720-0x4 [from 0x80485b0:push   ebp]; value=V721
    }
0x80485c1:call   0x08048390
    ax = V716
    cx = V717
    dx = V718
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = V720-0x10 [from 0x80485c1:call   0x08048390]
    bp = V720-0x4 [from 0x80485b0:push   ebp]
    si = V722
    di = V723
    es = V724
    cs = V725
    ss = V726
    ds = V727
    fs = V728
    gs = V729
    cf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = V731
    pf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = V733
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = V735
    zf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = V738
    if = V739
    df = V740
    of = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = V742
    iopl1 = V743
    nt = V744
    ?15 = V745
    memory = {
        size=4; addr=V720-0x10 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
        size=4; addr=V720-0xc [from 0x80485b4:push   eax]; value=V716
        size=4; addr=V720-0x8 [from 0x80485b3:push   ebx]; value=V719
        size=4; addr=V720-0x4 [from 0x80485b0:push   ebp]; value=V721
    }
0x80485c6:pop    eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c7:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c8:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c9:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
analyzed headers: 1
