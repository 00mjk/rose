==============================================
Constant propagation in function "_init"
==============================================
0x80482c8:push   ebp
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x4 [from 0x80482c8:push   ebp]
    bp = V6
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = V15
    ?1 = V16
    pf = V17
    ?3 = V18
    af = V19
    ?5 = V20
    zf = V21
    sf = V22
    tf = V23
    if = V24
    df = V25
    of = V26
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482c9:mov    ebp, esp
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x4 [from 0x80482c8:push   ebp]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = V15
    ?1 = V16
    pf = V17
    ?3 = V18
    af = V19
    ?5 = V20
    zf = V21
    sf = V22
    tf = V23
    if = V24
    df = V25
    of = V26
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482cb:sub    esp, 0x08
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = -V31-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = V16
    pf = -V32-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = V18
    af = -V33-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = V20
    zf = V34 [from 0x80482cb:sub    esp, 0x08]
    sf = V35 [from 0x80482cb:sub    esp, 0x08]
    tf = V23
    if = V24
    df = V25
    of = V36 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482ce:call   0x08048364
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x10 [from 0x80482ce:call   0x08048364]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = -V31-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = V16
    pf = -V32-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = V18
    af = -V33-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = V20
    zf = V34 [from 0x80482cb:sub    esp, 0x08]
    sf = V35 [from 0x80482cb:sub    esp, 0x08]
    tf = V23
    if = V24
    df = V25
    of = V36 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482d3:call   0x080483d0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
0x80482d8:call   0x08048580
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
0x80482dd:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482de:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "***uncategorized blocks***"
==============================================
0x80482df:add    bh, bh
    ax = V37
    cx = V38
    dx = V39
    bx = V40 [from 0x80482df:add    bh, bh]
    sp = V41
    bp = V42
    si = V43
    di = V44
    es = V45
    cs = V46
    ss = V47
    ds = V48
    fs = V49
    gs = V50
    cf = V51 [from 0x80482df:add    bh, bh]
    ?1 = V52
    pf = -V53-0x1 [from 0x80482df:add    bh, bh]
    ?3 = V54
    af = V55 [from 0x80482df:add    bh, bh]
    ?5 = V56
    zf = V57 [from 0x80482df:add    bh, bh]
    sf = V58 [from 0x80482df:add    bh, bh]
    tf = V59
    if = V60
    df = V61
    of = V62 [from 0x80482df:add    bh, bh]
    iopl0 = V63
    iopl1 = V64
    nt = V65
    ?15 = V66
    memory = {}
0x80482e1:xor    eax, 0x080496cc
    ax = V67 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = V38
    dx = V39
    bx = V40 [from 0x80482df:add    bh, bh]
    sp = V41
    bp = V42
    si = V43
    di = V44
    es = V45
    cs = V46
    ss = V47
    ds = V48
    fs = V49
    gs = V50
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = V52
    pf = -V68-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = V54
    af = <top>
    ?5 = V56
    zf = V69 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = V70 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = V59
    if = V60
    df = V61
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = V63
    iopl1 = V64
    nt = V65
    ?15 = V66
    memory = {}
0x80482e6:jmp    DWORD PTR ds:[0x080496d0]
    ax = V67 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = V38
    dx = V39
    bx = V40 [from 0x80482df:add    bh, bh]
    sp = V41
    bp = V42
    si = V43
    di = V44
    es = V45
    cs = V46
    ss = V47
    ds = V48
    fs = V49
    gs = V50
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = V52
    pf = -V68-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = V54
    af = <top>
    ?5 = V56
    zf = V69 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = V70 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = V59
    if = V60
    df = V61
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = V63
    iopl1 = V64
    nt = V65
    ?15 = V66
    memory = {}
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
        size=1; addr=<top>; value=<top>
    }
0x80482f6:push   0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
    }
0x80482fb:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
    }
0x80482e0:push   DWORD PTR ds:[0x080496cc]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
        size=4; addr=<top>; value=V71 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    }
0x8048306:push   0x00000008
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x00000008]
    }
0x804830b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x00000008]
    }
0x8048316:push   0x00000010
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x00000010]
    }
0x804831b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x00000010]
    }
0x8048326:push   0x00000018
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x00000018]
    }
0x804832b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x00000018]
    }
0x8048336:push   0x00000020
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x00000020]
    }
0x804833b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x00000020]
    }
0x80483ce:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
0x80483ef:call   0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=<top>; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048434:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804843a:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048456:lea    esi, [esi + 0x00]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048459:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e9:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048513:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048519:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804854f:lea    esi, [edx + eax*0x04]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048552:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048554:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804855a:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048560:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
0x8048562:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048563:sub    esi, 0x04
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0], edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048569:jne    0x08048560
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "signal@plt"
==============================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = V72
    cx = V73
    dx = V74
    bx = V75
    sp = V76
    bp = V77
    si = V78
    di = V79
    es = V80
    cs = V81
    ss = V82
    ds = V83
    fs = V84
    gs = V85
    cf = V86
    ?1 = V87
    pf = V88
    ?3 = V89
    af = V90
    ?5 = V91
    zf = V92
    sf = V93
    tf = V94
    if = V95
    df = V96
    of = V97
    iopl0 = V98
    iopl1 = V99
    nt = V100
    ?15 = V101
    memory = {}
==============================================
Constant propagation in function "puts@plt"
==============================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = V102
    cx = V103
    dx = V104
    bx = V105
    sp = V106
    bp = V107
    si = V108
    di = V109
    es = V110
    cs = V111
    ss = V112
    ds = V113
    fs = V114
    gs = V115
    cf = V116
    ?1 = V117
    pf = V118
    ?3 = V119
    af = V120
    ?5 = V121
    zf = V122
    sf = V123
    tf = V124
    if = V125
    df = V126
    of = V127
    iopl0 = V128
    iopl1 = V129
    nt = V130
    ?15 = V131
    memory = {}
==============================================
Constant propagation in function "__libc_start_main@plt"
==============================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = V132
    cx = V133
    dx = V134
    bx = V135
    sp = V136
    bp = V137
    si = V138
    di = V139
    es = V140
    cs = V141
    ss = V142
    ds = V143
    fs = V144
    gs = V145
    cf = V146
    ?1 = V147
    pf = V148
    ?3 = V149
    af = V150
    ?5 = V151
    zf = V152
    sf = V153
    tf = V154
    if = V155
    df = V156
    of = V157
    iopl0 = V158
    iopl1 = V159
    nt = V160
    ?15 = V161
    memory = {}
==============================================
Constant propagation in function "_exit@plt"
==============================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = V162
    cx = V163
    dx = V164
    bx = V165
    sp = V166
    bp = V167
    si = V168
    di = V169
    es = V170
    cs = V171
    ss = V172
    ds = V173
    fs = V174
    gs = V175
    cf = V176
    ?1 = V177
    pf = V178
    ?3 = V179
    af = V180
    ?5 = V181
    zf = V182
    sf = V183
    tf = V184
    if = V185
    df = V186
    of = V187
    iopl0 = V188
    iopl1 = V189
    nt = V190
    ?15 = V191
    memory = {}
==============================================
Constant propagation in function "__gmon_start__@plt"
==============================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = V192
    cx = V193
    dx = V194
    bx = V195
    sp = V196
    bp = V197
    si = V198
    di = V199
    es = V200
    cs = V201
    ss = V202
    ds = V203
    fs = V204
    gs = V205
    cf = V206
    ?1 = V207
    pf = V208
    ?3 = V209
    af = V210
    ?5 = V211
    zf = V212
    sf = V213
    tf = V214
    if = V215
    df = V216
    of = V217
    iopl0 = V218
    iopl1 = V219
    nt = V220
    ?15 = V221
    memory = {}
==============================================
Constant propagation in function "_start"
==============================================
0x8048340:xor    ebp, ebp
    ax = V222
    cx = V223
    dx = V224
    bx = V225
    sp = V226
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V227
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = V235
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {}
0x8048342:pop    esi
    ax = V222
    cx = V223
    dx = V224
    bx = V225
    sp = V226+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = V235
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {}
0x8048343:mov    ecx, esp
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V226+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = V235
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {}
0x8048345:and    esp, 0xf0
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246 [from 0x8048345:and    esp, 0xf0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {}
0x8048348:push   eax
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x8048349:push   esp
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0x8 [from 0x8048349:push   esp]; value=V246-0x4 [from 0x8048348:push   eax]
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x804834a:push   edx
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0xc [from 0x804834a:push   edx]; value=V224
        size=4; addr=V246-0x8 [from 0x8048349:push   esp]; value=V246-0x4 [from 0x8048348:push   eax]
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x804834b:push   0x08048520
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=V246-0xc [from 0x804834a:push   edx]; value=V224
        size=4; addr=V246-0x8 [from 0x8048349:push   esp]; value=V246-0x4 [from 0x8048348:push   eax]
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x8048350:push   0x080484b0
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=V246-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=V246-0xc [from 0x804834a:push   edx]; value=V224
        size=4; addr=V246-0x8 [from 0x8048349:push   esp]; value=V246-0x4 [from 0x8048348:push   eax]
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x8048355:push   ecx
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0x18 [from 0x8048355:push   ecx]; value=V226+0x4 [from 0x8048342:pop    esi]
        size=4; addr=V246-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=V246-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=V246-0xc [from 0x804834a:push   edx]; value=V224
        size=4; addr=V246-0x8 [from 0x8048349:push   esp]; value=V246-0x4 [from 0x8048348:push   eax]
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x8048356:push   esi
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0x1c [from 0x8048356:push   esi]; value=V245 [from 0x8048342:pop    esi]
        size=4; addr=V246-0x18 [from 0x8048355:push   ecx]; value=V226+0x4 [from 0x8048342:pop    esi]
        size=4; addr=V246-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=V246-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=V246-0xc [from 0x804834a:push   edx]; value=V224
        size=4; addr=V246-0x8 [from 0x8048349:push   esp]; value=V246-0x4 [from 0x8048348:push   eax]
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x8048357:push   0x08048410
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=V246-0x1c [from 0x8048356:push   esi]; value=V245 [from 0x8048342:pop    esi]
        size=4; addr=V246-0x18 [from 0x8048355:push   ecx]; value=V226+0x4 [from 0x8048342:pop    esi]
        size=4; addr=V246-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=V246-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=V246-0xc [from 0x804834a:push   edx]; value=V224
        size=4; addr=V246-0x8 [from 0x8048349:push   esp]; value=V246-0x4 [from 0x8048348:push   eax]
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x804835c:call   0x08048310
    ax = V222
    cx = V226+0x4 [from 0x8048342:pop    esi]
    dx = V224
    bx = V225
    sp = V246-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = V245 [from 0x8048342:pop    esi]
    di = V228
    es = V229
    cs = V230
    ss = V231
    ds = V232
    fs = V233
    gs = V234
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = V235
    pf = -V247-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = V236
    af = <top>
    ?5 = V237
    zf = V248 [from 0x8048345:and    esp, 0xf0]
    sf = V249 [from 0x8048345:and    esp, 0xf0]
    tf = V238
    if = V239
    df = V240
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = V241
    iopl1 = V242
    nt = V243
    ?15 = V244
    memory = {
        size=4; addr=V246-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=V246-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=V246-0x1c [from 0x8048356:push   esi]; value=V245 [from 0x8048342:pop    esi]
        size=4; addr=V246-0x18 [from 0x8048355:push   ecx]; value=V226+0x4 [from 0x8048342:pop    esi]
        size=4; addr=V246-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=V246-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=V246-0xc [from 0x804834a:push   edx]; value=V224
        size=4; addr=V246-0x8 [from 0x8048349:push   esp]; value=V246-0x4 [from 0x8048348:push   eax]
        size=4; addr=V246-0x4 [from 0x8048348:push   eax]; value=V222
    }
0x8048361:hlt    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048362"
==============================================
0x8048362:nop    
    ax = V250
    cx = V251
    dx = V252
    bx = V253
    sp = V254
    bp = V255
    si = V256
    di = V257
    es = V258
    cs = V259
    ss = V260
    ds = V261
    fs = V262
    gs = V263
    cf = V264
    ?1 = V265
    pf = V266
    ?3 = V267
    af = V268
    ?5 = V269
    zf = V270
    sf = V271
    tf = V272
    if = V273
    df = V274
    of = V275
    iopl0 = V276
    iopl1 = V277
    nt = V278
    ?15 = V279
    memory = {}
0x8048363:nop    
    ax = V250
    cx = V251
    dx = V252
    bx = V253
    sp = V254
    bp = V255
    si = V256
    di = V257
    es = V258
    cs = V259
    ss = V260
    ds = V261
    fs = V262
    gs = V263
    cf = V264
    ?1 = V265
    pf = V266
    ?3 = V267
    af = V268
    ?5 = V269
    zf = V270
    sf = V271
    tf = V272
    if = V273
    df = V274
    of = V275
    iopl0 = V276
    iopl1 = V277
    nt = V278
    ?15 = V279
    memory = {}
==============================================
Constant propagation in function "call_gmon_start"
==============================================
0x8048364:push   ebp
    ax = V280
    cx = V281
    dx = V282
    bx = V283
    sp = V284-0x4 [from 0x8048364:push   ebp]
    bp = V285
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = V294
    ?1 = V295
    pf = V296
    ?3 = V297
    af = V298
    ?5 = V299
    zf = V300
    sf = V301
    tf = V302
    if = V303
    df = V304
    of = V305
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048365:mov    ebp, esp
    ax = V280
    cx = V281
    dx = V282
    bx = V283
    sp = V284-0x4 [from 0x8048364:push   ebp]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = V294
    ?1 = V295
    pf = V296
    ?3 = V297
    af = V298
    ?5 = V299
    zf = V300
    sf = V301
    tf = V302
    if = V303
    df = V304
    of = V305
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048367:push   ebx
    ax = V280
    cx = V281
    dx = V282
    bx = V283
    sp = V284-0x8 [from 0x8048367:push   ebx]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = V294
    ?1 = V295
    pf = V296
    ?3 = V297
    af = V298
    ?5 = V299
    zf = V300
    sf = V301
    tf = V302
    if = V303
    df = V304
    of = V305
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048368:push   ecx
    ax = V280
    cx = V281
    dx = V282
    bx = V283
    sp = V284-0xc [from 0x8048368:push   ecx]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = V294
    ?1 = V295
    pf = V296
    ?3 = V297
    af = V298
    ?5 = V299
    zf = V300
    sf = V301
    tf = V302
    if = V303
    df = V304
    of = V305
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048369:call   0x0804836e
    ax = V280
    cx = V281
    dx = V282
    bx = V283
    sp = V284-0x10 [from 0x8048369:call   0x0804836e]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = V294
    ?1 = V295
    pf = V296
    ?3 = V297
    af = V298
    ?5 = V299
    zf = V300
    sf = V301
    tf = V302
    if = V303
    df = V304
    of = V305
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x804836e:pop    ebx
    ax = V280
    cx = V281
    dx = V282
    bx = 0x804836e [from 0x8048369:call   0x0804836e]
    sp = V284-0xc [from 0x804836e:pop    ebx]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = V294
    ?1 = V295
    pf = V296
    ?3 = V297
    af = V298
    ?5 = V299
    zf = V300
    sf = V301
    tf = V302
    if = V303
    df = V304
    of = V305
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x804836f:add    ebx, 0x0000135a
    ax = V280
    cx = V281
    dx = V282
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V284-0xc [from 0x804836e:pop    ebx]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = V295
    pf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = V297
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = V299
    zf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]
    ax = V280
    cx = V281
    dx = V310 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V284-0xc [from 0x804836e:pop    ebx]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = V295
    pf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = V297
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = V299
    zf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x804837b:test   edx, edx
    ax = V280
    cx = V281
    dx = V310 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V284-0xc [from 0x804836e:pop    ebx]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V295
    pf = -V311-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V297
    af = <top>
    ?5 = V299
    zf = V312 [from 0x804837b:test   edx, edx]
    sf = V313 [from 0x804837b:test   edx, edx]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x804837d:je     0x08048384
    ax = V280
    cx = V281
    dx = V310 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V284-0xc [from 0x804836e:pop    ebx]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V295
    pf = -V311-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V297
    af = <top>
    ?5 = V299
    zf = V312 [from 0x804837b:test   edx, edx]
    sf = V313 [from 0x804837b:test   edx, edx]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x804837f:call   0x08048330
    ax = V280
    cx = V281
    dx = V310 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V284-0x10 [from 0x804837f:call   0x08048330]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V295
    pf = -V311-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V297
    af = <top>
    ?5 = V299
    zf = V312 [from 0x804837b:test   edx, edx]
    sf = V313 [from 0x804837b:test   edx, edx]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048384:pop    eax
    ax = V281
    cx = V281
    dx = V310 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V284-0x8 [from 0x8048384:pop    eax]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V295
    pf = -V311-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V297
    af = <top>
    ?5 = V299
    zf = V312 [from 0x804837b:test   edx, edx]
    sf = V313 [from 0x804837b:test   edx, edx]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048385:pop    ebx
    ax = V281
    cx = V281
    dx = V310 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = V283
    sp = V284-0x4 [from 0x8048385:pop    ebx]
    bp = V284-0x4 [from 0x8048364:push   ebp]
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V295
    pf = -V311-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V297
    af = <top>
    ?5 = V299
    zf = V312 [from 0x804837b:test   edx, edx]
    sf = V313 [from 0x804837b:test   edx, edx]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048386:leave  
    ax = V281
    cx = V281
    dx = V310 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = V283
    sp = V284 [from 0x8048386:leave  ]
    bp = V285
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V295
    pf = -V311-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V297
    af = <top>
    ?5 = V299
    zf = V312 [from 0x804837b:test   edx, edx]
    sf = V313 [from 0x804837b:test   edx, edx]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
0x8048387:ret    
    ax = V281
    cx = V281
    dx = V310 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = V283
    sp = V284+0x4 [from 0x8048387:ret    ]
    bp = V285
    si = V286
    di = V287
    es = V288
    cs = V289
    ss = V290
    ds = V291
    fs = V292
    gs = V293
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V295
    pf = -V311-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V297
    af = <top>
    ?5 = V299
    zf = V312 [from 0x804837b:test   edx, edx]
    sf = V313 [from 0x804837b:test   edx, edx]
    tf = V302
    if = V303
    df = V304
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V306
    iopl1 = V307
    nt = V308
    ?15 = V309
    memory = {
        size=4; addr=V284-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V284-0xc [from 0x8048368:push   ecx]; value=V281
        size=4; addr=V284-0x8 [from 0x8048367:push   ebx]; value=V283
        size=4; addr=V284-0x4 [from 0x8048364:push   ebp]; value=V285
    }
==============================================
Constant propagation in function "0x8048388"
==============================================
0x8048388:nop    
    ax = V314
    cx = V315
    dx = V316
    bx = V317
    sp = V318
    bp = V319
    si = V320
    di = V321
    es = V322
    cs = V323
    ss = V324
    ds = V325
    fs = V326
    gs = V327
    cf = V328
    ?1 = V329
    pf = V330
    ?3 = V331
    af = V332
    ?5 = V333
    zf = V334
    sf = V335
    tf = V336
    if = V337
    df = V338
    of = V339
    iopl0 = V340
    iopl1 = V341
    nt = V342
    ?15 = V343
    memory = {}
0x8048389:nop    
    ax = V314
    cx = V315
    dx = V316
    bx = V317
    sp = V318
    bp = V319
    si = V320
    di = V321
    es = V322
    cs = V323
    ss = V324
    ds = V325
    fs = V326
    gs = V327
    cf = V328
    ?1 = V329
    pf = V330
    ?3 = V331
    af = V332
    ?5 = V333
    zf = V334
    sf = V335
    tf = V336
    if = V337
    df = V338
    of = V339
    iopl0 = V340
    iopl1 = V341
    nt = V342
    ?15 = V343
    memory = {}
0x804838a:nop    
    ax = V314
    cx = V315
    dx = V316
    bx = V317
    sp = V318
    bp = V319
    si = V320
    di = V321
    es = V322
    cs = V323
    ss = V324
    ds = V325
    fs = V326
    gs = V327
    cf = V328
    ?1 = V329
    pf = V330
    ?3 = V331
    af = V332
    ?5 = V333
    zf = V334
    sf = V335
    tf = V336
    if = V337
    df = V338
    of = V339
    iopl0 = V340
    iopl1 = V341
    nt = V342
    ?15 = V343
    memory = {}
0x804838b:nop    
    ax = V314
    cx = V315
    dx = V316
    bx = V317
    sp = V318
    bp = V319
    si = V320
    di = V321
    es = V322
    cs = V323
    ss = V324
    ds = V325
    fs = V326
    gs = V327
    cf = V328
    ?1 = V329
    pf = V330
    ?3 = V331
    af = V332
    ?5 = V333
    zf = V334
    sf = V335
    tf = V336
    if = V337
    df = V338
    of = V339
    iopl0 = V340
    iopl1 = V341
    nt = V342
    ?15 = V343
    memory = {}
0x804838c:nop    
    ax = V314
    cx = V315
    dx = V316
    bx = V317
    sp = V318
    bp = V319
    si = V320
    di = V321
    es = V322
    cs = V323
    ss = V324
    ds = V325
    fs = V326
    gs = V327
    cf = V328
    ?1 = V329
    pf = V330
    ?3 = V331
    af = V332
    ?5 = V333
    zf = V334
    sf = V335
    tf = V336
    if = V337
    df = V338
    of = V339
    iopl0 = V340
    iopl1 = V341
    nt = V342
    ?15 = V343
    memory = {}
0x804838d:nop    
    ax = V314
    cx = V315
    dx = V316
    bx = V317
    sp = V318
    bp = V319
    si = V320
    di = V321
    es = V322
    cs = V323
    ss = V324
    ds = V325
    fs = V326
    gs = V327
    cf = V328
    ?1 = V329
    pf = V330
    ?3 = V331
    af = V332
    ?5 = V333
    zf = V334
    sf = V335
    tf = V336
    if = V337
    df = V338
    of = V339
    iopl0 = V340
    iopl1 = V341
    nt = V342
    ?15 = V343
    memory = {}
0x804838e:nop    
    ax = V314
    cx = V315
    dx = V316
    bx = V317
    sp = V318
    bp = V319
    si = V320
    di = V321
    es = V322
    cs = V323
    ss = V324
    ds = V325
    fs = V326
    gs = V327
    cf = V328
    ?1 = V329
    pf = V330
    ?3 = V331
    af = V332
    ?5 = V333
    zf = V334
    sf = V335
    tf = V336
    if = V337
    df = V338
    of = V339
    iopl0 = V340
    iopl1 = V341
    nt = V342
    ?15 = V343
    memory = {}
0x804838f:nop    
    ax = V314
    cx = V315
    dx = V316
    bx = V317
    sp = V318
    bp = V319
    si = V320
    di = V321
    es = V322
    cs = V323
    ss = V324
    ds = V325
    fs = V326
    gs = V327
    cf = V328
    ?1 = V329
    pf = V330
    ?3 = V331
    af = V332
    ?5 = V333
    zf = V334
    sf = V335
    tf = V336
    if = V337
    df = V338
    of = V339
    iopl0 = V340
    iopl1 = V341
    nt = V342
    ?15 = V343
    memory = {}
==============================================
Constant propagation in function "__do_global_dtors_aux"
==============================================
0x8048390:push   ebp
    ax = V344
    cx = V345
    dx = V346
    bx = V347
    sp = V348-0x4 [from 0x8048390:push   ebp]
    bp = V349
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = V358
    ?1 = V359
    pf = V360
    ?3 = V361
    af = V362
    ?5 = V363
    zf = V364
    sf = V365
    tf = V366
    if = V367
    df = V368
    of = V369
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x8048391:mov    ebp, esp
    ax = V344
    cx = V345
    dx = V346
    bx = V347
    sp = V348-0x4 [from 0x8048390:push   ebp]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = V358
    ?1 = V359
    pf = V360
    ?3 = V361
    af = V362
    ?5 = V363
    zf = V364
    sf = V365
    tf = V366
    if = V367
    df = V368
    of = V369
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x8048393:sub    esp, 0x08
    ax = V344
    cx = V345
    dx = V346
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = -V374-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = V359
    pf = -V375-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = V361
    af = -V376-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = V363
    zf = V377 [from 0x8048393:sub    esp, 0x08]
    sf = V378 [from 0x8048393:sub    esp, 0x08]
    tf = V366
    if = V367
    df = V368
    of = V379 [from 0x8048393:sub    esp, 0x08]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = V344
    cx = V345
    dx = V346
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = -V380-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V359
    pf = -V381-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V361
    af = -V382-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V363
    zf = V383 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V384 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V366
    if = V367
    df = V368
    of = V385 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x804839d:jne    0x080483cc
    ax = V344
    cx = V345
    dx = V346
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = -V380-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V359
    pf = -V381-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V361
    af = -V382-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V363
    zf = V383 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V384 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V366
    if = V367
    df = V368
    of = V385 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = V386 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V345
    dx = V346
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = -V380-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V359
    pf = -V381-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V361
    af = -V382-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V363
    zf = V383 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V384 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V366
    if = V367
    df = V368
    of = V385 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = V386 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V345
    dx = V387 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = -V380-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V359
    pf = -V381-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V361
    af = -V382-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V363
    zf = V383 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V384 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V366
    if = V367
    df = V368
    of = V385 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x80483a6:test   edx, edx
    ax = V386 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V345
    dx = V387 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V359
    pf = -V388-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V361
    af = <top>
    ?5 = V363
    zf = V389 [from 0x80483a6:test   edx, edx]
    sf = V390 [from 0x80483a6:test   edx, edx]
    tf = V366
    if = V367
    df = V368
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x80483a8:je     0x080483c5
    ax = V386 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V345
    dx = V387 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V359
    pf = -V388-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V361
    af = <top>
    ?5 = V363
    zf = V389 [from 0x80483a6:test   edx, edx]
    sf = V390 [from 0x80483a6:test   edx, edx]
    tf = V366
    if = V367
    df = V368
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = V386 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V345
    dx = V387 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V359
    pf = -V388-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V361
    af = <top>
    ?5 = V363
    zf = V389 [from 0x80483a6:test   edx, edx]
    sf = V390 [from 0x80483a6:test   edx, edx]
    tf = V366
    if = V367
    df = V368
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x80483b0:add    eax, 0x04
    ax = V386+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V345
    dx = V387 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = V391 [from 0x80483b0:add    eax, 0x04]
    ?1 = V359
    pf = -V392-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V361
    af = V393 [from 0x80483b0:add    eax, 0x04]
    ?5 = V363
    zf = V394 [from 0x80483b0:add    eax, 0x04]
    sf = V395 [from 0x80483b0:add    eax, 0x04]
    tf = V366
    if = V367
    df = V368
    of = V396 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x4 [from 0x8048390:push   ebp]; value=V349
    }
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = V386+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V345
    dx = V387 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = V391 [from 0x80483b0:add    eax, 0x04]
    ?1 = V359
    pf = -V392-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V361
    af = V393 [from 0x80483b0:add    eax, 0x04]
    ?5 = V363
    zf = V394 [from 0x80483b0:add    eax, 0x04]
    sf = V395 [from 0x80483b0:add    eax, 0x04]
    tf = V366
    if = V367
    df = V368
    of = V396 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=V386+0x4 [from 0x80483b0:add    eax, 0x04]
    }
0x80483b8:call   edx
    ax = V386+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V345
    dx = V387 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V347
    sp = V348-0x10 [from 0x80483b8:call   edx]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = V391 [from 0x80483b0:add    eax, 0x04]
    ?1 = V359
    pf = -V392-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V361
    af = V393 [from 0x80483b0:add    eax, 0x04]
    ?5 = V363
    zf = V394 [from 0x80483b0:add    eax, 0x04]
    sf = V395 [from 0x80483b0:add    eax, 0x04]
    tf = V366
    if = V367
    df = V368
    of = V396 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=4; addr=V348-0x10 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c1:test   edx, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c3:jne    0x080483b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = V386 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V345
    dx = V387 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V347
    sp = V348-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V348-0x4 [from 0x8048390:push   ebp]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V359
    pf = -V388-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V361
    af = <top>
    ?5 = V363
    zf = V389 [from 0x80483a6:test   edx, edx]
    sf = V390 [from 0x80483a6:test   edx, edx]
    tf = V366
    if = V367
    df = V368
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
0x80483cc:leave  
    ax = V397
    cx = V345
    dx = V398
    bx = V347
    sp = V348 [from 0x80483cc:leave  ]
    bp = V399 [from 0x80483cc:leave  ]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = V400
    ?1 = V359
    pf = V401
    ?3 = V361
    af = -V382-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V363
    zf = V402
    sf = V403
    tf = V366
    if = V367
    df = V368
    of = V404
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {}
0x80483cd:ret    
    ax = V397
    cx = V345
    dx = V398
    bx = V347
    sp = V348+0x4 [from 0x80483cd:ret    ]
    bp = V399 [from 0x80483cc:leave  ]
    si = V350
    di = V351
    es = V352
    cs = V353
    ss = V354
    ds = V355
    fs = V356
    gs = V357
    cf = V400
    ?1 = V359
    pf = V401
    ?3 = V361
    af = -V382-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V363
    zf = V402
    sf = V403
    tf = V366
    if = V367
    df = V368
    of = V404
    iopl0 = V370
    iopl1 = V371
    nt = V372
    ?15 = V373
    memory = {}
==============================================
Constant propagation in function "frame_dummy"
==============================================
0x80483d0:push   ebp
    ax = V405
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0x4 [from 0x80483d0:push   ebp]
    bp = V410
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = V419
    ?1 = V420
    pf = V421
    ?3 = V422
    af = V423
    ?5 = V424
    zf = V425
    sf = V426
    tf = V427
    if = V428
    df = V429
    of = V430
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x80483d1:mov    ebp, esp
    ax = V405
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0x4 [from 0x80483d0:push   ebp]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = V419
    ?1 = V420
    pf = V421
    ?3 = V422
    af = V423
    ?5 = V424
    zf = V425
    sf = V426
    tf = V427
    if = V428
    df = V429
    of = V430
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x80483d3:sub    esp, 0x08
    ax = V405
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = -V435-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = V420
    pf = -V436-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = V422
    af = -V437-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = V424
    zf = V438 [from 0x80483d3:sub    esp, 0x08]
    sf = V439 [from 0x80483d3:sub    esp, 0x08]
    tf = V427
    if = V428
    df = V429
    of = V440 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = V441 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = -V435-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = V420
    pf = -V436-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = V422
    af = -V437-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = V424
    zf = V438 [from 0x80483d3:sub    esp, 0x08]
    sf = V439 [from 0x80483d3:sub    esp, 0x08]
    tf = V427
    if = V428
    df = V429
    of = V440 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x80483db:test   eax, eax
    ax = V441 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V420
    pf = -V442-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V422
    af = <top>
    ?5 = V424
    zf = V443 [from 0x80483db:test   eax, eax]
    sf = V444 [from 0x80483db:test   eax, eax]
    tf = V427
    if = V428
    df = V429
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x80483dd:je     0x08048400
    ax = V441 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V420
    pf = -V442-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V422
    af = <top>
    ?5 = V424
    zf = V443 [from 0x80483db:test   eax, eax]
    sf = V444 [from 0x80483db:test   eax, eax]
    tf = V427
    if = V428
    df = V429
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V420
    pf = -V442-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V422
    af = <top>
    ?5 = V424
    zf = V443 [from 0x80483db:test   eax, eax]
    sf = V444 [from 0x80483db:test   eax, eax]
    tf = V427
    if = V428
    df = V429
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = V420
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = V422
    af = <top>
    ?5 = V424
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = V427
    if = V428
    df = V429
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = V420
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = V422
    af = <top>
    ?5 = V424
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = V427
    if = V428
    df = V429
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {
        size=4; addr=V409-0x4 [from 0x80483d0:push   ebp]; value=V410
    }
0x8048400:mov    esp, ebp
    ax = V445
    cx = V406
    dx = V407
    bx = V408
    sp = V409-0x4 [from 0x80483d0:push   ebp]
    bp = V409-0x4 [from 0x80483d0:push   ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V420
    pf = V446
    ?3 = V422
    af = <top>
    ?5 = V424
    zf = V447
    sf = V448
    tf = V427
    if = V428
    df = V429
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {}
0x8048402:pop    ebp
    ax = V445
    cx = V406
    dx = V407
    bx = V408
    sp = V409 [from 0x8048402:pop    ebp]
    bp = V449 [from 0x8048402:pop    ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V420
    pf = V446
    ?3 = V422
    af = <top>
    ?5 = V424
    zf = V447
    sf = V448
    tf = V427
    if = V428
    df = V429
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {}
0x8048403:ret    
    ax = V445
    cx = V406
    dx = V407
    bx = V408
    sp = V409+0x4 [from 0x8048403:ret    ]
    bp = V449 [from 0x8048402:pop    ebp]
    si = V411
    di = V412
    es = V413
    cs = V414
    ss = V415
    ds = V416
    fs = V417
    gs = V418
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V420
    pf = V446
    ?3 = V422
    af = <top>
    ?5 = V424
    zf = V447
    sf = V448
    tf = V427
    if = V428
    df = V429
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V431
    iopl1 = V432
    nt = V433
    ?15 = V434
    memory = {}
==============================================
Constant propagation in function "0x8048404"
==============================================
0x8048404:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x8048405:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x8048406:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x8048407:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x8048408:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x8048409:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x804840a:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x804840b:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x804840c:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x804840d:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x804840e:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
0x804840f:nop    
    ax = V450
    cx = V451
    dx = V452
    bx = V453
    sp = V454
    bp = V455
    si = V456
    di = V457
    es = V458
    cs = V459
    ss = V460
    ds = V461
    fs = V462
    gs = V463
    cf = V464
    ?1 = V465
    pf = V466
    ?3 = V467
    af = V468
    ?5 = V469
    zf = V470
    sf = V471
    tf = V472
    if = V473
    df = V474
    of = V475
    iopl0 = V476
    iopl1 = V477
    nt = V478
    ?15 = V479
    memory = {}
==============================================
Constant propagation in function "main"
==============================================
0x8048410:push   ebp
    ax = V480
    cx = V481
    dx = V482
    bx = V483
    sp = V484-0x4 [from 0x8048410:push   ebp]
    bp = V485
    si = V486
    di = V487
    es = V488
    cs = V489
    ss = V490
    ds = V491
    fs = V492
    gs = V493
    cf = V494
    ?1 = V495
    pf = V496
    ?3 = V497
    af = V498
    ?5 = V499
    zf = V500
    sf = V501
    tf = V502
    if = V503
    df = V504
    of = V505
    iopl0 = V506
    iopl1 = V507
    nt = V508
    ?15 = V509
    memory = {
        size=4; addr=V484-0x4 [from 0x8048410:push   ebp]; value=V485
    }
0x8048411:mov    edx, 0x08048480
    ax = V480
    cx = V481
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = V483
    sp = V484-0x4 [from 0x8048410:push   ebp]
    bp = V485
    si = V486
    di = V487
    es = V488
    cs = V489
    ss = V490
    ds = V491
    fs = V492
    gs = V493
    cf = V494
    ?1 = V495
    pf = V496
    ?3 = V497
    af = V498
    ?5 = V499
    zf = V500
    sf = V501
    tf = V502
    if = V503
    df = V504
    of = V505
    iopl0 = V506
    iopl1 = V507
    nt = V508
    ?15 = V509
    memory = {
        size=4; addr=V484-0x4 [from 0x8048410:push   ebp]; value=V485
    }
0x8048416:mov    ebp, esp
    ax = V480
    cx = V481
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = V483
    sp = V484-0x4 [from 0x8048410:push   ebp]
    bp = V484-0x4 [from 0x8048410:push   ebp]
    si = V486
    di = V487
    es = V488
    cs = V489
    ss = V490
    ds = V491
    fs = V492
    gs = V493
    cf = V494
    ?1 = V495
    pf = V496
    ?3 = V497
    af = V498
    ?5 = V499
    zf = V500
    sf = V501
    tf = V502
    if = V503
    df = V504
    of = V505
    iopl0 = V506
    iopl1 = V507
    nt = V508
    ?15 = V509
    memory = {
        size=4; addr=V484-0x4 [from 0x8048410:push   ebp]; value=V485
    }
0x8048418:sub    esp, 0x08
    ax = V480
    cx = V481
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = V483
    sp = V484-0xc [from 0x8048418:sub    esp, 0x08]
    bp = V484-0x4 [from 0x8048410:push   ebp]
    si = V486
    di = V487
    es = V488
    cs = V489
    ss = V490
    ds = V491
    fs = V492
    gs = V493
    cf = -V510-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = V495
    pf = -V511-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = V497
    af = -V512-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = V499
    zf = V513 [from 0x8048418:sub    esp, 0x08]
    sf = V514 [from 0x8048418:sub    esp, 0x08]
    tf = V502
    if = V503
    df = V504
    of = V515 [from 0x8048418:sub    esp, 0x08]
    iopl0 = V506
    iopl1 = V507
    nt = V508
    ?15 = V509
    memory = {
        size=4; addr=V484-0x4 [from 0x8048410:push   ebp]; value=V485
    }
0x804841b:and    esp, 0xf0
    ax = V480
    cx = V481
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = V483
    sp = V516 [from 0x804841b:and    esp, 0xf0]
    bp = V484-0x4 [from 0x8048410:push   ebp]
    si = V486
    di = V487
    es = V488
    cs = V489
    ss = V490
    ds = V491
    fs = V492
    gs = V493
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = V495
    pf = -V517-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = V497
    af = <top>
    ?5 = V499
    zf = V518 [from 0x804841b:and    esp, 0xf0]
    sf = V519 [from 0x804841b:and    esp, 0xf0]
    tf = V502
    if = V503
    df = V504
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = V506
    iopl1 = V507
    nt = V508
    ?15 = V509
    memory = {
        size=4; addr=V484-0x4 [from 0x8048410:push   ebp]; value=V485
    }
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = V480
    cx = V481
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = V483
    sp = V516 [from 0x804841b:and    esp, 0xf0]
    bp = V484-0x4 [from 0x8048410:push   ebp]
    si = V486
    di = V487
    es = V488
    cs = V489
    ss = V490
    ds = V491
    fs = V492
    gs = V493
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = V495
    pf = -V517-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = V497
    af = <top>
    ?5 = V499
    zf = V518 [from 0x804841b:and    esp, 0xf0]
    sf = V519 [from 0x804841b:and    esp, 0xf0]
    tf = V502
    if = V503
    df = V504
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = V506
    iopl1 = V507
    nt = V508
    ?15 = V509
    memory = {
        size=4; addr=V516+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = V480
    cx = V481
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = V483
    sp = V516 [from 0x804841b:and    esp, 0xf0]
    bp = V484-0x4 [from 0x8048410:push   ebp]
    si = V486
    di = V487
    es = V488
    cs = V489
    ss = V490
    ds = V491
    fs = V492
    gs = V493
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = V495
    pf = -V517-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = V497
    af = <top>
    ?5 = V499
    zf = V518 [from 0x804841b:and    esp, 0xf0]
    sf = V519 [from 0x804841b:and    esp, 0xf0]
    tf = V502
    if = V503
    df = V504
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = V506
    iopl1 = V507
    nt = V508
    ?15 = V509
    memory = {
        size=4; addr=V516 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=V516+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
0x8048429:call   0x080482f0
    ax = V480
    cx = V481
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = V483
    sp = V516-0x4 [from 0x8048429:call   0x080482f0]
    bp = V484-0x4 [from 0x8048410:push   ebp]
    si = V486
    di = V487
    es = V488
    cs = V489
    ss = V490
    ds = V491
    fs = V492
    gs = V493
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = V495
    pf = -V517-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = V497
    af = <top>
    ?5 = V499
    zf = V518 [from 0x804841b:and    esp, 0xf0]
    sf = V519 [from 0x804841b:and    esp, 0xf0]
    tf = V502
    if = V503
    df = V504
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = V506
    iopl1 = V507
    nt = V508
    ?15 = V509
    memory = {
        size=4; addr=V516 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=V516+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=V516-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
0x804842e:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048430:xor    eax, eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048432:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048433:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "bar"
==============================================
0x8048440:push   ebp
    ax = V520
    cx = V521
    dx = V522
    bx = V523
    sp = V524-0x4 [from 0x8048440:push   ebp]
    bp = V525
    si = V526
    di = V527
    es = V528
    cs = V529
    ss = V530
    ds = V531
    fs = V532
    gs = V533
    cf = V534
    ?1 = V535
    pf = V536
    ?3 = V537
    af = V538
    ?5 = V539
    zf = V540
    sf = V541
    tf = V542
    if = V543
    df = V544
    of = V545
    iopl0 = V546
    iopl1 = V547
    nt = V548
    ?15 = V549
    memory = {
        size=4; addr=V524-0x4 [from 0x8048440:push   ebp]; value=V525
    }
0x8048441:mov    ebp, esp
    ax = V520
    cx = V521
    dx = V522
    bx = V523
    sp = V524-0x4 [from 0x8048440:push   ebp]
    bp = V524-0x4 [from 0x8048440:push   ebp]
    si = V526
    di = V527
    es = V528
    cs = V529
    ss = V530
    ds = V531
    fs = V532
    gs = V533
    cf = V534
    ?1 = V535
    pf = V536
    ?3 = V537
    af = V538
    ?5 = V539
    zf = V540
    sf = V541
    tf = V542
    if = V543
    df = V544
    of = V545
    iopl0 = V546
    iopl1 = V547
    nt = V548
    ?15 = V549
    memory = {
        size=4; addr=V524-0x4 [from 0x8048440:push   ebp]; value=V525
    }
0x8048443:sub    esp, 0x08
    ax = V520
    cx = V521
    dx = V522
    bx = V523
    sp = V524-0xc [from 0x8048443:sub    esp, 0x08]
    bp = V524-0x4 [from 0x8048440:push   ebp]
    si = V526
    di = V527
    es = V528
    cs = V529
    ss = V530
    ds = V531
    fs = V532
    gs = V533
    cf = -V550-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V535
    pf = -V551-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V537
    af = -V552-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V539
    zf = V553 [from 0x8048443:sub    esp, 0x08]
    sf = V554 [from 0x8048443:sub    esp, 0x08]
    tf = V542
    if = V543
    df = V544
    of = V555 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V546
    iopl1 = V547
    nt = V548
    ?15 = V549
    memory = {
        size=4; addr=V524-0x4 [from 0x8048440:push   ebp]; value=V525
    }
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V520
    cx = V521
    dx = V522
    bx = V523
    sp = V524-0xc [from 0x8048443:sub    esp, 0x08]
    bp = V524-0x4 [from 0x8048440:push   ebp]
    si = V526
    di = V527
    es = V528
    cs = V529
    ss = V530
    ds = V531
    fs = V532
    gs = V533
    cf = -V550-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V535
    pf = -V551-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V537
    af = -V552-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V539
    zf = V553 [from 0x8048443:sub    esp, 0x08]
    sf = V554 [from 0x8048443:sub    esp, 0x08]
    tf = V542
    if = V543
    df = V544
    of = V555 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V546
    iopl1 = V547
    nt = V548
    ?15 = V549
    memory = {
        size=4; addr=V524-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V524-0x4 [from 0x8048440:push   ebp]; value=V525
    }
0x804844d:call   0x08048300
    ax = V520
    cx = V521
    dx = V522
    bx = V523
    sp = V524-0x10 [from 0x804844d:call   0x08048300]
    bp = V524-0x4 [from 0x8048440:push   ebp]
    si = V526
    di = V527
    es = V528
    cs = V529
    ss = V530
    ds = V531
    fs = V532
    gs = V533
    cf = -V550-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V535
    pf = -V551-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V537
    af = -V552-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V539
    zf = V553 [from 0x8048443:sub    esp, 0x08]
    sf = V554 [from 0x8048443:sub    esp, 0x08]
    tf = V542
    if = V543
    df = V544
    of = V555 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V546
    iopl1 = V547
    nt = V548
    ?15 = V549
    memory = {
        size=4; addr=V524-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=V524-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V524-0x4 [from 0x8048440:push   ebp]; value=V525
    }
0x8048452:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048454:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048455:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "foo"
==============================================
0x8048460:push   ebp
    ax = V556
    cx = V557
    dx = V558
    bx = V559
    sp = V560-0x4 [from 0x8048460:push   ebp]
    bp = V561
    si = V562
    di = V563
    es = V564
    cs = V565
    ss = V566
    ds = V567
    fs = V568
    gs = V569
    cf = V570
    ?1 = V571
    pf = V572
    ?3 = V573
    af = V574
    ?5 = V575
    zf = V576
    sf = V577
    tf = V578
    if = V579
    df = V580
    of = V581
    iopl0 = V582
    iopl1 = V583
    nt = V584
    ?15 = V585
    memory = {
        size=4; addr=V560-0x4 [from 0x8048460:push   ebp]; value=V561
    }
0x8048461:mov    ebp, esp
    ax = V556
    cx = V557
    dx = V558
    bx = V559
    sp = V560-0x4 [from 0x8048460:push   ebp]
    bp = V560-0x4 [from 0x8048460:push   ebp]
    si = V562
    di = V563
    es = V564
    cs = V565
    ss = V566
    ds = V567
    fs = V568
    gs = V569
    cf = V570
    ?1 = V571
    pf = V572
    ?3 = V573
    af = V574
    ?5 = V575
    zf = V576
    sf = V577
    tf = V578
    if = V579
    df = V580
    of = V581
    iopl0 = V582
    iopl1 = V583
    nt = V584
    ?15 = V585
    memory = {
        size=4; addr=V560-0x4 [from 0x8048460:push   ebp]; value=V561
    }
0x8048463:sub    esp, 0x08
    ax = V556
    cx = V557
    dx = V558
    bx = V559
    sp = V560-0xc [from 0x8048463:sub    esp, 0x08]
    bp = V560-0x4 [from 0x8048460:push   ebp]
    si = V562
    di = V563
    es = V564
    cs = V565
    ss = V566
    ds = V567
    fs = V568
    gs = V569
    cf = -V586-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V571
    pf = -V587-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V573
    af = -V588-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V575
    zf = V589 [from 0x8048463:sub    esp, 0x08]
    sf = V590 [from 0x8048463:sub    esp, 0x08]
    tf = V578
    if = V579
    df = V580
    of = V591 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V582
    iopl1 = V583
    nt = V584
    ?15 = V585
    memory = {
        size=4; addr=V560-0x4 [from 0x8048460:push   ebp]; value=V561
    }
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V556
    cx = V557
    dx = V558
    bx = V559
    sp = V560-0xc [from 0x8048463:sub    esp, 0x08]
    bp = V560-0x4 [from 0x8048460:push   ebp]
    si = V562
    di = V563
    es = V564
    cs = V565
    ss = V566
    ds = V567
    fs = V568
    gs = V569
    cf = -V586-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V571
    pf = -V587-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V573
    af = -V588-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V575
    zf = V589 [from 0x8048463:sub    esp, 0x08]
    sf = V590 [from 0x8048463:sub    esp, 0x08]
    tf = V578
    if = V579
    df = V580
    of = V591 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V582
    iopl1 = V583
    nt = V584
    ?15 = V585
    memory = {
        size=4; addr=V560-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V560-0x4 [from 0x8048460:push   ebp]; value=V561
    }
0x804846d:call   0x08048300
    ax = V556
    cx = V557
    dx = V558
    bx = V559
    sp = V560-0x10 [from 0x804846d:call   0x08048300]
    bp = V560-0x4 [from 0x8048460:push   ebp]
    si = V562
    di = V563
    es = V564
    cs = V565
    ss = V566
    ds = V567
    fs = V568
    gs = V569
    cf = -V586-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V571
    pf = -V587-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V573
    af = -V588-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V575
    zf = V589 [from 0x8048463:sub    esp, 0x08]
    sf = V590 [from 0x8048463:sub    esp, 0x08]
    tf = V578
    if = V579
    df = V580
    of = V591 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V582
    iopl1 = V583
    nt = V584
    ?15 = V585
    memory = {
        size=4; addr=V560-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=V560-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V560-0x4 [from 0x8048460:push   ebp]; value=V561
    }
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x8048479:call   0x08048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=<top>; value=0x804847e [from 0x8048479:call   0x08048320]
    }
0x804847e:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "handler"
==============================================
0x8048480:push   ebp
    ax = V592
    cx = V593
    dx = V594
    bx = V595
    sp = V596-0x4 [from 0x8048480:push   ebp]
    bp = V597
    si = V598
    di = V599
    es = V600
    cs = V601
    ss = V602
    ds = V603
    fs = V604
    gs = V605
    cf = V606
    ?1 = V607
    pf = V608
    ?3 = V609
    af = V610
    ?5 = V611
    zf = V612
    sf = V613
    tf = V614
    if = V615
    df = V616
    of = V617
    iopl0 = V618
    iopl1 = V619
    nt = V620
    ?15 = V621
    memory = {
        size=4; addr=V596-0x4 [from 0x8048480:push   ebp]; value=V597
    }
0x8048481:mov    ebp, esp
    ax = V592
    cx = V593
    dx = V594
    bx = V595
    sp = V596-0x4 [from 0x8048480:push   ebp]
    bp = V596-0x4 [from 0x8048480:push   ebp]
    si = V598
    di = V599
    es = V600
    cs = V601
    ss = V602
    ds = V603
    fs = V604
    gs = V605
    cf = V606
    ?1 = V607
    pf = V608
    ?3 = V609
    af = V610
    ?5 = V611
    zf = V612
    sf = V613
    tf = V614
    if = V615
    df = V616
    of = V617
    iopl0 = V618
    iopl1 = V619
    nt = V620
    ?15 = V621
    memory = {
        size=4; addr=V596-0x4 [from 0x8048480:push   ebp]; value=V597
    }
0x8048483:sub    esp, 0x08
    ax = V592
    cx = V593
    dx = V594
    bx = V595
    sp = V596-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V596-0x4 [from 0x8048480:push   ebp]
    si = V598
    di = V599
    es = V600
    cs = V601
    ss = V602
    ds = V603
    fs = V604
    gs = V605
    cf = -V622-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V607
    pf = -V623-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = V609
    af = -V624-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = V611
    zf = V625 [from 0x8048483:sub    esp, 0x08]
    sf = V626 [from 0x8048483:sub    esp, 0x08]
    tf = V614
    if = V615
    df = V616
    of = V627 [from 0x8048483:sub    esp, 0x08]
    iopl0 = V618
    iopl1 = V619
    nt = V620
    ?15 = V621
    memory = {
        size=4; addr=V596-0x4 [from 0x8048480:push   ebp]; value=V597
    }
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = V592
    cx = V593
    dx = V594
    bx = V595
    sp = V596-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V596-0x4 [from 0x8048480:push   ebp]
    si = V598
    di = V599
    es = V600
    cs = V601
    ss = V602
    ds = V603
    fs = V604
    gs = V605
    cf = -V622-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V607
    pf = -V628-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V609
    af = V629 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V611
    zf = V630 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V631 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V614
    if = V615
    df = V616
    of = V632 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V618
    iopl1 = V619
    nt = V620
    ?15 = V621
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=V633+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V592
    cx = V593
    dx = V594
    bx = V595
    sp = V596-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V596-0x4 [from 0x8048480:push   ebp]
    si = V598
    di = V599
    es = V600
    cs = V601
    ss = V602
    ds = V603
    fs = V604
    gs = V605
    cf = -V622-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V607
    pf = -V628-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V609
    af = V629 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V611
    zf = V630 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V631 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V614
    if = V615
    df = V616
    of = V632 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V618
    iopl1 = V619
    nt = V620
    ?15 = V621
    memory = {
        size=4; addr=V596-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
0x8048493:call   0x08048300
    ax = V592
    cx = V593
    dx = V594
    bx = V595
    sp = V596-0x10 [from 0x8048493:call   0x08048300]
    bp = V596-0x4 [from 0x8048480:push   ebp]
    si = V598
    di = V599
    es = V600
    cs = V601
    ss = V602
    ds = V603
    fs = V604
    gs = V605
    cf = -V622-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V607
    pf = -V628-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V609
    af = V629 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V611
    zf = V630 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V631 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V614
    if = V615
    df = V616
    of = V632 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V618
    iopl1 = V619
    nt = V620
    ?15 = V621
    memory = {
        size=4; addr=V596-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=V596-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x804849f:call   0x08048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=<top>; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
0x80484a4:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a5:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a6:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a7:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a9:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484aa:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ab:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ac:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ad:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ae:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484af:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_init"
==============================================
0x80484b0:push   ebp
    ax = V634
    cx = V635
    dx = V636
    bx = V637
    sp = V638-0x4 [from 0x80484b0:push   ebp]
    bp = V639
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = V648
    ?1 = V649
    pf = V650
    ?3 = V651
    af = V652
    ?5 = V653
    zf = V654
    sf = V655
    tf = V656
    if = V657
    df = V658
    of = V659
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484b1:mov    ebp, esp
    ax = V634
    cx = V635
    dx = V636
    bx = V637
    sp = V638-0x4 [from 0x80484b0:push   ebp]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = V648
    ?1 = V649
    pf = V650
    ?3 = V651
    af = V652
    ?5 = V653
    zf = V654
    sf = V655
    tf = V656
    if = V657
    df = V658
    of = V659
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484b3:push   edi
    ax = V634
    cx = V635
    dx = V636
    bx = V637
    sp = V638-0x8 [from 0x80484b3:push   edi]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = V648
    ?1 = V649
    pf = V650
    ?3 = V651
    af = V652
    ?5 = V653
    zf = V654
    sf = V655
    tf = V656
    if = V657
    df = V658
    of = V659
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x8 [from 0x80484b3:push   edi]; value=V641
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484b4:push   esi
    ax = V634
    cx = V635
    dx = V636
    bx = V637
    sp = V638-0xc [from 0x80484b4:push   esi]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = V648
    ?1 = V649
    pf = V650
    ?3 = V651
    af = V652
    ?5 = V653
    zf = V654
    sf = V655
    tf = V656
    if = V657
    df = V658
    of = V659
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0xc [from 0x80484b4:push   esi]; value=V640
        size=4; addr=V638-0x8 [from 0x80484b3:push   edi]; value=V641
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484b5:push   ebx
    ax = V634
    cx = V635
    dx = V636
    bx = V637
    sp = V638-0x10 [from 0x80484b5:push   ebx]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = V648
    ?1 = V649
    pf = V650
    ?3 = V651
    af = V652
    ?5 = V653
    zf = V654
    sf = V655
    tf = V656
    if = V657
    df = V658
    of = V659
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x10 [from 0x80484b5:push   ebx]; value=V637
        size=4; addr=V638-0xc [from 0x80484b4:push   esi]; value=V640
        size=4; addr=V638-0x8 [from 0x80484b3:push   edi]; value=V641
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484b6:sub    esp, 0x0c
    ax = V634
    cx = V635
    dx = V636
    bx = V637
    sp = V638-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = -V664-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V649
    pf = -V665-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V651
    af = -V666-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V653
    zf = V667 [from 0x80484b6:sub    esp, 0x0c]
    sf = V668 [from 0x80484b6:sub    esp, 0x0c]
    tf = V656
    if = V657
    df = V658
    of = V669 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x10 [from 0x80484b5:push   ebx]; value=V637
        size=4; addr=V638-0xc [from 0x80484b4:push   esi]; value=V640
        size=4; addr=V638-0x8 [from 0x80484b3:push   edi]; value=V641
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484b9:call   0x080484be
    ax = V634
    cx = V635
    dx = V636
    bx = V637
    sp = V638-0x20 [from 0x80484b9:call   0x080484be]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = -V664-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V649
    pf = -V665-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V651
    af = -V666-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V653
    zf = V667 [from 0x80484b6:sub    esp, 0x0c]
    sf = V668 [from 0x80484b6:sub    esp, 0x0c]
    tf = V656
    if = V657
    df = V658
    of = V669 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V638-0x10 [from 0x80484b5:push   ebx]; value=V637
        size=4; addr=V638-0xc [from 0x80484b4:push   esi]; value=V640
        size=4; addr=V638-0x8 [from 0x80484b3:push   edi]; value=V641
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484be:pop    ebx
    ax = V634
    cx = V635
    dx = V636
    bx = 0x80484be [from 0x80484b9:call   0x080484be]
    sp = V638-0x1c [from 0x80484be:pop    ebx]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = -V664-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V649
    pf = -V665-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V651
    af = -V666-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V653
    zf = V667 [from 0x80484b6:sub    esp, 0x0c]
    sf = V668 [from 0x80484b6:sub    esp, 0x0c]
    tf = V656
    if = V657
    df = V658
    of = V669 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V638-0x10 [from 0x80484b5:push   ebx]; value=V637
        size=4; addr=V638-0xc [from 0x80484b4:push   esi]; value=V640
        size=4; addr=V638-0x8 [from 0x80484b3:push   edi]; value=V641
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484bf:add    ebx, 0x0000120a
    ax = V634
    cx = V635
    dx = V636
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V638-0x1c [from 0x80484be:pop    ebx]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = V649
    pf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = V651
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = V653
    zf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = V656
    if = V657
    df = V658
    of = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V638-0x10 [from 0x80484b5:push   ebx]; value=V637
        size=4; addr=V638-0xc [from 0x80484b4:push   esi]; value=V640
        size=4; addr=V638-0x8 [from 0x80484b3:push   edi]; value=V641
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484c5:call   0x080482c8
    ax = V634
    cx = V635
    dx = V636
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V638-0x20 [from 0x80484c5:call   0x080482c8]
    bp = V638-0x4 [from 0x80484b0:push   ebp]
    si = V640
    di = V641
    es = V642
    cs = V643
    ss = V644
    ds = V645
    fs = V646
    gs = V647
    cf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = V649
    pf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = V651
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = V653
    zf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = V656
    if = V657
    df = V658
    of = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = V660
    iopl1 = V661
    nt = V662
    ?15 = V663
    memory = {
        size=4; addr=V638-0x20 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
        size=4; addr=V638-0x10 [from 0x80484b5:push   ebx]; value=V637
        size=4; addr=V638-0xc [from 0x80484b4:push   esi]; value=V640
        size=4; addr=V638-0x8 [from 0x80484b3:push   edi]; value=V641
        size=4; addr=V638-0x4 [from 0x80484b0:push   ebp]; value=V639
    }
0x80484ca:lea    eax, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d0:lea    edx, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d6:sub    eax, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d8:sar    eax, 0x02
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484de:jne    0x080484f0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e0:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e3:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V670 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e4:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V670 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = V671 [from 0x80484e4:pop    esi]
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e5:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V670 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = V671 [from 0x80484e4:pop    esi]
    di = V672 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e6:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V670 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = V673 [from 0x80484e6:pop    ebp]
    si = V671 [from 0x80484e4:pop    esi]
    di = V672 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e7:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = V670 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = V673 [from 0x80484e6:pop    ebp]
    si = V671 [from 0x80484e4:pop    esi]
    di = V672 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484f0:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f2:mov    esi, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f4:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484fa:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048500:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
0x8048502:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048503:add    esi, 0x04
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048509:jb     0x08048500
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850b:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850e:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850f:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048510:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048511:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048512:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_fini"
==============================================
0x8048520:push   ebp
    ax = V674
    cx = V675
    dx = V676
    bx = V677
    sp = V678-0x4 [from 0x8048520:push   ebp]
    bp = V679
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = V688
    ?1 = V689
    pf = V690
    ?3 = V691
    af = V692
    ?5 = V693
    zf = V694
    sf = V695
    tf = V696
    if = V697
    df = V698
    of = V699
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048521:mov    ebp, esp
    ax = V674
    cx = V675
    dx = V676
    bx = V677
    sp = V678-0x4 [from 0x8048520:push   ebp]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = V688
    ?1 = V689
    pf = V690
    ?3 = V691
    af = V692
    ?5 = V693
    zf = V694
    sf = V695
    tf = V696
    if = V697
    df = V698
    of = V699
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048523:push   edi
    ax = V674
    cx = V675
    dx = V676
    bx = V677
    sp = V678-0x8 [from 0x8048523:push   edi]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = V688
    ?1 = V689
    pf = V690
    ?3 = V691
    af = V692
    ?5 = V693
    zf = V694
    sf = V695
    tf = V696
    if = V697
    df = V698
    of = V699
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048524:push   esi
    ax = V674
    cx = V675
    dx = V676
    bx = V677
    sp = V678-0xc [from 0x8048524:push   esi]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = V688
    ?1 = V689
    pf = V690
    ?3 = V691
    af = V692
    ?5 = V693
    zf = V694
    sf = V695
    tf = V696
    if = V697
    df = V698
    of = V699
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048525:push   ebx
    ax = V674
    cx = V675
    dx = V676
    bx = V677
    sp = V678-0x10 [from 0x8048525:push   ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = V688
    ?1 = V689
    pf = V690
    ?3 = V691
    af = V692
    ?5 = V693
    zf = V694
    sf = V695
    tf = V696
    if = V697
    df = V698
    of = V699
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048526:sub    esp, 0x0c
    ax = V674
    cx = V675
    dx = V676
    bx = V677
    sp = V678-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = -V704-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V689
    pf = -V705-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V691
    af = -V706-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V693
    zf = V707 [from 0x8048526:sub    esp, 0x0c]
    sf = V708 [from 0x8048526:sub    esp, 0x0c]
    tf = V696
    if = V697
    df = V698
    of = V709 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048529:call   0x0804852e
    ax = V674
    cx = V675
    dx = V676
    bx = V677
    sp = V678-0x20 [from 0x8048529:call   0x0804852e]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = -V704-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V689
    pf = -V705-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V691
    af = -V706-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V693
    zf = V707 [from 0x8048526:sub    esp, 0x0c]
    sf = V708 [from 0x8048526:sub    esp, 0x0c]
    tf = V696
    if = V697
    df = V698
    of = V709 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x804852e:pop    ebx
    ax = V674
    cx = V675
    dx = V676
    bx = 0x804852e [from 0x8048529:call   0x0804852e]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = -V704-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V689
    pf = -V705-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V691
    af = -V706-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V693
    zf = V707 [from 0x8048526:sub    esp, 0x0c]
    sf = V708 [from 0x8048526:sub    esp, 0x0c]
    tf = V696
    if = V697
    df = V698
    of = V709 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x804852f:add    ebx, 0x0000119a
    ax = V674
    cx = V675
    dx = V676
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V689
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V691
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V693
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048535:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = V675
    dx = V676
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V689
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V691
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V693
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x804853b:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = V675
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V689
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V691
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V693
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048541:sub    eax, edx
    ax = 0x0 [from 0x8048541:sub    eax, edx]
    cx = V675
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x8048541:sub    eax, edx]
    ?1 = V689
    pf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    ?3 = V691
    af = 0x0 [from 0x8048541:sub    eax, edx]
    ?5 = V693
    zf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    sf = 0x0 [from 0x8048541:sub    eax, edx]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x8048541:sub    eax, edx]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048543:sar    eax, 0x02
    ax = 0x0 [from 0x8048543:sar    eax, 0x02]
    cx = V675
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V689
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    ?3 = V691
    af = <top>
    ?5 = V693
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    sf = 0x0 [from 0x8048543:sar    eax, 0x02]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = 0x0 [from 0x8048543:sar    eax, 0x02]
    cx = V675
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V689
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    ?3 = V691
    af = <top>
    ?5 = V693
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    sf = 0x0 [from 0x8048543:sar    eax, 0x02]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048549:dec    eax
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V675
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V689
    pf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?3 = V691
    af = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?5 = V693
    zf = 0x0 [from 0x8048549:dec    eax]
    sf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x8048549:dec    eax]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x804854a:cmp    eax, 0xff
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V675
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V689
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V691
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V693
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x804854d:je     0x0804856b
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V675
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x1c [from 0x804852e:pop    ebx]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V689
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V691
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V693
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V678-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x804856b:call   0x080485b0
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V675
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V678-0x20 [from 0x804856b:call   0x080485b0]
    bp = V678-0x4 [from 0x8048520:push   ebp]
    si = V680
    di = V681
    es = V682
    cs = V683
    ss = V684
    ds = V685
    fs = V686
    gs = V687
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V689
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V691
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V693
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V696
    if = V697
    df = V698
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V700
    iopl1 = V701
    nt = V702
    ?15 = V703
    memory = {
        size=4; addr=V678-0x20 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
        size=4; addr=V678-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V678-0x10 [from 0x8048525:push   ebx]; value=V677
        size=4; addr=V678-0xc [from 0x8048524:push   esi]; value=V680
        size=4; addr=V678-0x8 [from 0x8048523:push   edi]; value=V681
        size=4; addr=V678-0x4 [from 0x8048520:push   ebp]; value=V679
    }
0x8048570:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048573:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048574:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048575:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048576:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048577:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048578"
==============================================
0x8048578:nop    
    ax = V710
    cx = V711
    dx = V712
    bx = V713
    sp = V714
    bp = V715
    si = V716
    di = V717
    es = V718
    cs = V719
    ss = V720
    ds = V721
    fs = V722
    gs = V723
    cf = V724
    ?1 = V725
    pf = V726
    ?3 = V727
    af = V728
    ?5 = V729
    zf = V730
    sf = V731
    tf = V732
    if = V733
    df = V734
    of = V735
    iopl0 = V736
    iopl1 = V737
    nt = V738
    ?15 = V739
    memory = {}
0x8048579:nop    
    ax = V710
    cx = V711
    dx = V712
    bx = V713
    sp = V714
    bp = V715
    si = V716
    di = V717
    es = V718
    cs = V719
    ss = V720
    ds = V721
    fs = V722
    gs = V723
    cf = V724
    ?1 = V725
    pf = V726
    ?3 = V727
    af = V728
    ?5 = V729
    zf = V730
    sf = V731
    tf = V732
    if = V733
    df = V734
    of = V735
    iopl0 = V736
    iopl1 = V737
    nt = V738
    ?15 = V739
    memory = {}
0x804857a:nop    
    ax = V710
    cx = V711
    dx = V712
    bx = V713
    sp = V714
    bp = V715
    si = V716
    di = V717
    es = V718
    cs = V719
    ss = V720
    ds = V721
    fs = V722
    gs = V723
    cf = V724
    ?1 = V725
    pf = V726
    ?3 = V727
    af = V728
    ?5 = V729
    zf = V730
    sf = V731
    tf = V732
    if = V733
    df = V734
    of = V735
    iopl0 = V736
    iopl1 = V737
    nt = V738
    ?15 = V739
    memory = {}
0x804857b:nop    
    ax = V710
    cx = V711
    dx = V712
    bx = V713
    sp = V714
    bp = V715
    si = V716
    di = V717
    es = V718
    cs = V719
    ss = V720
    ds = V721
    fs = V722
    gs = V723
    cf = V724
    ?1 = V725
    pf = V726
    ?3 = V727
    af = V728
    ?5 = V729
    zf = V730
    sf = V731
    tf = V732
    if = V733
    df = V734
    of = V735
    iopl0 = V736
    iopl1 = V737
    nt = V738
    ?15 = V739
    memory = {}
0x804857c:nop    
    ax = V710
    cx = V711
    dx = V712
    bx = V713
    sp = V714
    bp = V715
    si = V716
    di = V717
    es = V718
    cs = V719
    ss = V720
    ds = V721
    fs = V722
    gs = V723
    cf = V724
    ?1 = V725
    pf = V726
    ?3 = V727
    af = V728
    ?5 = V729
    zf = V730
    sf = V731
    tf = V732
    if = V733
    df = V734
    of = V735
    iopl0 = V736
    iopl1 = V737
    nt = V738
    ?15 = V739
    memory = {}
0x804857d:nop    
    ax = V710
    cx = V711
    dx = V712
    bx = V713
    sp = V714
    bp = V715
    si = V716
    di = V717
    es = V718
    cs = V719
    ss = V720
    ds = V721
    fs = V722
    gs = V723
    cf = V724
    ?1 = V725
    pf = V726
    ?3 = V727
    af = V728
    ?5 = V729
    zf = V730
    sf = V731
    tf = V732
    if = V733
    df = V734
    of = V735
    iopl0 = V736
    iopl1 = V737
    nt = V738
    ?15 = V739
    memory = {}
0x804857e:nop    
    ax = V710
    cx = V711
    dx = V712
    bx = V713
    sp = V714
    bp = V715
    si = V716
    di = V717
    es = V718
    cs = V719
    ss = V720
    ds = V721
    fs = V722
    gs = V723
    cf = V724
    ?1 = V725
    pf = V726
    ?3 = V727
    af = V728
    ?5 = V729
    zf = V730
    sf = V731
    tf = V732
    if = V733
    df = V734
    of = V735
    iopl0 = V736
    iopl1 = V737
    nt = V738
    ?15 = V739
    memory = {}
0x804857f:nop    
    ax = V710
    cx = V711
    dx = V712
    bx = V713
    sp = V714
    bp = V715
    si = V716
    di = V717
    es = V718
    cs = V719
    ss = V720
    ds = V721
    fs = V722
    gs = V723
    cf = V724
    ?1 = V725
    pf = V726
    ?3 = V727
    af = V728
    ?5 = V729
    zf = V730
    sf = V731
    tf = V732
    if = V733
    df = V734
    of = V735
    iopl0 = V736
    iopl1 = V737
    nt = V738
    ?15 = V739
    memory = {}
==============================================
Constant propagation in function "__do_global_ctors_aux"
==============================================
0x8048580:push   ebp
    ax = V740
    cx = V741
    dx = V742
    bx = V743
    sp = V744-0x4 [from 0x8048580:push   ebp]
    bp = V745
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = V754
    ?1 = V755
    pf = V756
    ?3 = V757
    af = V758
    ?5 = V759
    zf = V760
    sf = V761
    tf = V762
    if = V763
    df = V764
    of = V765
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x8048581:mov    ebp, esp
    ax = V740
    cx = V741
    dx = V742
    bx = V743
    sp = V744-0x4 [from 0x8048580:push   ebp]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = V754
    ?1 = V755
    pf = V756
    ?3 = V757
    af = V758
    ?5 = V759
    zf = V760
    sf = V761
    tf = V762
    if = V763
    df = V764
    of = V765
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x8048583:push   ebx
    ax = V740
    cx = V741
    dx = V742
    bx = V743
    sp = V744-0x8 [from 0x8048583:push   ebx]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = V754
    ?1 = V755
    pf = V756
    ?3 = V757
    af = V758
    ?5 = V759
    zf = V760
    sf = V761
    tf = V762
    if = V763
    df = V764
    of = V765
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x8048584:sub    esp, 0x04
    ax = V740
    cx = V741
    dx = V742
    bx = V743
    sp = V744-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V770-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V755
    pf = -V771-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V757
    af = -V772-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V759
    zf = V773 [from 0x8048584:sub    esp, 0x04]
    sf = V774 [from 0x8048584:sub    esp, 0x04]
    tf = V762
    if = V763
    df = V764
    of = V775 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x8048587:mov    ebx, 0x080495e8
    ax = V740
    cx = V741
    dx = V742
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V744-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V770-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V755
    pf = -V771-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V757
    af = -V772-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V759
    zf = V773 [from 0x8048584:sub    esp, 0x04]
    sf = V774 [from 0x8048584:sub    esp, 0x04]
    tf = V762
    if = V763
    df = V764
    of = V775 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = V776 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V741
    dx = V742
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V744-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V770-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V755
    pf = -V771-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V757
    af = -V772-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V759
    zf = V773 [from 0x8048584:sub    esp, 0x04]
    sf = V774 [from 0x8048584:sub    esp, 0x04]
    tf = V762
    if = V763
    df = V764
    of = V775 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x8048591:cmp    eax, 0xff
    ax = V776 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V741
    dx = V742
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V744-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V777-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V755
    pf = -V778-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V757
    af = -V779-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V759
    zf = V780 [from 0x8048591:cmp    eax, 0xff]
    sf = V781 [from 0x8048591:cmp    eax, 0xff]
    tf = V762
    if = V763
    df = V764
    of = V782 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x8048594:je     0x080485ac
    ax = V776 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V741
    dx = V742
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V744-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V777-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V755
    pf = -V778-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V757
    af = -V779-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V759
    zf = V780 [from 0x8048591:cmp    eax, 0xff]
    sf = V781 [from 0x8048591:cmp    eax, 0xff]
    tf = V762
    if = V763
    df = V764
    of = V782 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x8048596:lea    esi, [esi + 0x00]
    ax = V776 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V741
    dx = V742
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V744-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V777-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V755
    pf = -V778-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V757
    af = -V779-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V759
    zf = V780 [from 0x8048591:cmp    eax, 0xff]
    sf = V781 [from 0x8048591:cmp    eax, 0xff]
    tf = V762
    if = V763
    df = V764
    of = V782 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x8048599:lea    edi, [edi + 0x00000000]
    ax = V776 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V741
    dx = V742
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V744-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V747 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V777-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V755
    pf = -V778-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V757
    af = -V779-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V759
    zf = V780 [from 0x8048591:cmp    eax, 0xff]
    sf = V781 [from 0x8048591:cmp    eax, 0xff]
    tf = V762
    if = V763
    df = V764
    of = V782 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x80485a0:sub    ebx, 0x04
    ax = V776 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V741
    dx = V742
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = V744-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V747 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = V755
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x04]
    ?3 = V757
    af = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = V759
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    tf = V762
    if = V763
    df = V764
    of = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x80485a3:call   eax
    ax = V776 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V741
    dx = V742
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = V744-0x10 [from 0x80485a3:call   eax]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V747 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = V755
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x04]
    ?3 = V757
    af = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = V759
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    tf = V762
    if = V763
    df = V764
    of = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x10 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485a7:cmp    eax, 0xff
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485aa:jne    0x080485a0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485ac:pop    eax
    ax = V783 [from 0x80485ac:pop    eax]
    cx = V741
    dx = V742
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V744-0x8 [from 0x80485ac:pop    eax]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V777-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V755
    pf = -V778-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V757
    af = -V779-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V759
    zf = V780 [from 0x8048591:cmp    eax, 0xff]
    sf = V781 [from 0x8048591:cmp    eax, 0xff]
    tf = V762
    if = V763
    df = V764
    of = V782 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x80485ad:pop    ebx
    ax = V783 [from 0x80485ac:pop    eax]
    cx = V741
    dx = V742
    bx = V743
    sp = V744-0x4 [from 0x80485ad:pop    ebx]
    bp = V744-0x4 [from 0x8048580:push   ebp]
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V777-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V755
    pf = -V778-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V757
    af = -V779-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V759
    zf = V780 [from 0x8048591:cmp    eax, 0xff]
    sf = V781 [from 0x8048591:cmp    eax, 0xff]
    tf = V762
    if = V763
    df = V764
    of = V782 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x80485ae:pop    ebp
    ax = V783 [from 0x80485ac:pop    eax]
    cx = V741
    dx = V742
    bx = V743
    sp = V744 [from 0x80485ae:pop    ebp]
    bp = V745
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V777-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V755
    pf = -V778-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V757
    af = -V779-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V759
    zf = V780 [from 0x8048591:cmp    eax, 0xff]
    sf = V781 [from 0x8048591:cmp    eax, 0xff]
    tf = V762
    if = V763
    df = V764
    of = V782 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
0x80485af:ret    
    ax = V783 [from 0x80485ac:pop    eax]
    cx = V741
    dx = V742
    bx = V743
    sp = V744+0x4 [from 0x80485af:ret    ]
    bp = V745
    si = V746
    di = V747
    es = V748
    cs = V749
    ss = V750
    ds = V751
    fs = V752
    gs = V753
    cf = -V777-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V755
    pf = -V778-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V757
    af = -V779-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V759
    zf = V780 [from 0x8048591:cmp    eax, 0xff]
    sf = V781 [from 0x8048591:cmp    eax, 0xff]
    tf = V762
    if = V763
    df = V764
    of = V782 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V766
    iopl1 = V767
    nt = V768
    ?15 = V769
    memory = {
        size=4; addr=V744-0x8 [from 0x8048583:push   ebx]; value=V743
        size=4; addr=V744-0x4 [from 0x8048580:push   ebp]; value=V745
    }
==============================================
Constant propagation in function "_fini"
==============================================
0x80485b0:push   ebp
    ax = V784
    cx = V785
    dx = V786
    bx = V787
    sp = V788-0x4 [from 0x80485b0:push   ebp]
    bp = V789
    si = V790
    di = V791
    es = V792
    cs = V793
    ss = V794
    ds = V795
    fs = V796
    gs = V797
    cf = V798
    ?1 = V799
    pf = V800
    ?3 = V801
    af = V802
    ?5 = V803
    zf = V804
    sf = V805
    tf = V806
    if = V807
    df = V808
    of = V809
    iopl0 = V810
    iopl1 = V811
    nt = V812
    ?15 = V813
    memory = {
        size=4; addr=V788-0x4 [from 0x80485b0:push   ebp]; value=V789
    }
0x80485b1:mov    ebp, esp
    ax = V784
    cx = V785
    dx = V786
    bx = V787
    sp = V788-0x4 [from 0x80485b0:push   ebp]
    bp = V788-0x4 [from 0x80485b0:push   ebp]
    si = V790
    di = V791
    es = V792
    cs = V793
    ss = V794
    ds = V795
    fs = V796
    gs = V797
    cf = V798
    ?1 = V799
    pf = V800
    ?3 = V801
    af = V802
    ?5 = V803
    zf = V804
    sf = V805
    tf = V806
    if = V807
    df = V808
    of = V809
    iopl0 = V810
    iopl1 = V811
    nt = V812
    ?15 = V813
    memory = {
        size=4; addr=V788-0x4 [from 0x80485b0:push   ebp]; value=V789
    }
0x80485b3:push   ebx
    ax = V784
    cx = V785
    dx = V786
    bx = V787
    sp = V788-0x8 [from 0x80485b3:push   ebx]
    bp = V788-0x4 [from 0x80485b0:push   ebp]
    si = V790
    di = V791
    es = V792
    cs = V793
    ss = V794
    ds = V795
    fs = V796
    gs = V797
    cf = V798
    ?1 = V799
    pf = V800
    ?3 = V801
    af = V802
    ?5 = V803
    zf = V804
    sf = V805
    tf = V806
    if = V807
    df = V808
    of = V809
    iopl0 = V810
    iopl1 = V811
    nt = V812
    ?15 = V813
    memory = {
        size=4; addr=V788-0x8 [from 0x80485b3:push   ebx]; value=V787
        size=4; addr=V788-0x4 [from 0x80485b0:push   ebp]; value=V789
    }
0x80485b4:push   eax
    ax = V784
    cx = V785
    dx = V786
    bx = V787
    sp = V788-0xc [from 0x80485b4:push   eax]
    bp = V788-0x4 [from 0x80485b0:push   ebp]
    si = V790
    di = V791
    es = V792
    cs = V793
    ss = V794
    ds = V795
    fs = V796
    gs = V797
    cf = V798
    ?1 = V799
    pf = V800
    ?3 = V801
    af = V802
    ?5 = V803
    zf = V804
    sf = V805
    tf = V806
    if = V807
    df = V808
    of = V809
    iopl0 = V810
    iopl1 = V811
    nt = V812
    ?15 = V813
    memory = {
        size=4; addr=V788-0xc [from 0x80485b4:push   eax]; value=V784
        size=4; addr=V788-0x8 [from 0x80485b3:push   ebx]; value=V787
        size=4; addr=V788-0x4 [from 0x80485b0:push   ebp]; value=V789
    }
0x80485b5:call   0x080485ba
    ax = V784
    cx = V785
    dx = V786
    bx = V787
    sp = V788-0x10 [from 0x80485b5:call   0x080485ba]
    bp = V788-0x4 [from 0x80485b0:push   ebp]
    si = V790
    di = V791
    es = V792
    cs = V793
    ss = V794
    ds = V795
    fs = V796
    gs = V797
    cf = V798
    ?1 = V799
    pf = V800
    ?3 = V801
    af = V802
    ?5 = V803
    zf = V804
    sf = V805
    tf = V806
    if = V807
    df = V808
    of = V809
    iopl0 = V810
    iopl1 = V811
    nt = V812
    ?15 = V813
    memory = {
        size=4; addr=V788-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V788-0xc [from 0x80485b4:push   eax]; value=V784
        size=4; addr=V788-0x8 [from 0x80485b3:push   ebx]; value=V787
        size=4; addr=V788-0x4 [from 0x80485b0:push   ebp]; value=V789
    }
0x80485ba:pop    ebx
    ax = V784
    cx = V785
    dx = V786
    bx = 0x80485ba [from 0x80485b5:call   0x080485ba]
    sp = V788-0xc [from 0x80485ba:pop    ebx]
    bp = V788-0x4 [from 0x80485b0:push   ebp]
    si = V790
    di = V791
    es = V792
    cs = V793
    ss = V794
    ds = V795
    fs = V796
    gs = V797
    cf = V798
    ?1 = V799
    pf = V800
    ?3 = V801
    af = V802
    ?5 = V803
    zf = V804
    sf = V805
    tf = V806
    if = V807
    df = V808
    of = V809
    iopl0 = V810
    iopl1 = V811
    nt = V812
    ?15 = V813
    memory = {
        size=4; addr=V788-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V788-0xc [from 0x80485b4:push   eax]; value=V784
        size=4; addr=V788-0x8 [from 0x80485b3:push   ebx]; value=V787
        size=4; addr=V788-0x4 [from 0x80485b0:push   ebp]; value=V789
    }
0x80485bb:add    ebx, 0x0000110e
    ax = V784
    cx = V785
    dx = V786
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = V788-0xc [from 0x80485ba:pop    ebx]
    bp = V788-0x4 [from 0x80485b0:push   ebp]
    si = V790
    di = V791
    es = V792
    cs = V793
    ss = V794
    ds = V795
    fs = V796
    gs = V797
    cf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = V799
    pf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = V801
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = V803
    zf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = V806
    if = V807
    df = V808
    of = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = V810
    iopl1 = V811
    nt = V812
    ?15 = V813
    memory = {
        size=4; addr=V788-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V788-0xc [from 0x80485b4:push   eax]; value=V784
        size=4; addr=V788-0x8 [from 0x80485b3:push   ebx]; value=V787
        size=4; addr=V788-0x4 [from 0x80485b0:push   ebp]; value=V789
    }
0x80485c1:call   0x08048390
    ax = V784
    cx = V785
    dx = V786
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = V788-0x10 [from 0x80485c1:call   0x08048390]
    bp = V788-0x4 [from 0x80485b0:push   ebp]
    si = V790
    di = V791
    es = V792
    cs = V793
    ss = V794
    ds = V795
    fs = V796
    gs = V797
    cf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = V799
    pf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = V801
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = V803
    zf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = V806
    if = V807
    df = V808
    of = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = V810
    iopl1 = V811
    nt = V812
    ?15 = V813
    memory = {
        size=4; addr=V788-0x10 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
        size=4; addr=V788-0xc [from 0x80485b4:push   eax]; value=V784
        size=4; addr=V788-0x8 [from 0x80485b3:push   ebx]; value=V787
        size=4; addr=V788-0x4 [from 0x80485b0:push   ebp]; value=V789
    }
0x80485c6:pop    eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c7:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c8:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c9:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
analyzed headers: 1
