==============================================
Constant propagation in function "_init"
==============================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482cb:sub    esp, 0x8
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x8]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x8]
    sf = v189 [from 0x80482cb:sub    esp, 0x8]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x8]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482ce:call   0x8048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x8048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x8]
    sf = v189 [from 0x80482cb:sub    esp, 0x8]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x8]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x8048364]; value=0x80482d3 [from 0x80482ce:call   0x8048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482d3:call   0x80483d0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482d8 [from 0x80482d3:call   0x80483d0]
    }
0x80482d8:call   0x8048580
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482dd [from 0x80482d8:call   0x8048580]
    }
0x80482dd:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482de:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482df:add    bh, bh
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482e1:xor    eax, 0x80496cc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482e6:jmp    DWORD PTR ds:[0x80496d0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
        size=1; addr=<top>; value=<top>
    }
==============================================
Constant propagation in function "0x80482e0"
==============================================
0x80482e0:push   DWORD PTR ds:[0x80496cc]
    ax = v893
    cx = v894
    dx = v895
    bx = v896
    sp = v897-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    bp = v898
    si = v899
    di = v900
    es = v901
    cs = v902
    ss = v903
    ds = v904
    fs = v905
    gs = v906
    cf = v907
    ?1 = v908
    pf = v909
    ?3 = v910
    af = v911
    ?5 = v912
    zf = v913
    sf = v914
    tf = v915
    if = v916
    df = v917
    of = v918
    iopl0 = v919
    iopl1 = v920
    nt = v921
    ?15 = v922
    memory = {
        size=4; addr=v897-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]; value=v929 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    }
0x80482e6:jmp    DWORD PTR ds:[0x80496d0]
    ax = v893
    cx = v894
    dx = v895
    bx = v896
    sp = v897-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    bp = v898
    si = v899
    di = v900
    es = v901
    cs = v902
    ss = v903
    ds = v904
    fs = v905
    gs = v906
    cf = v907
    ?1 = v908
    pf = v909
    ?3 = v910
    af = v911
    ?5 = v912
    zf = v913
    sf = v914
    tf = v915
    if = v916
    df = v917
    of = v918
    iopl0 = v919
    iopl1 = v920
    nt = v921
    ?15 = v922
    memory = {
        size=4; addr=v897-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]; value=v929 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    }
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
        size=1; addr=<top>; value=<top>
    }
==============================================
Constant propagation in function "signal"
==============================================
0x80482f0:jmp    DWORD PTR ds:[0x80496d4]
    ax = v1195
    cx = v1196
    dx = v1197
    bx = v1198
    sp = v1199
    bp = v1200
    si = v1201
    di = v1202
    es = v1203
    cs = v1204
    ss = v1205
    ds = v1206
    fs = v1207
    gs = v1208
    cf = v1209
    ?1 = v1210
    pf = v1211
    ?3 = v1212
    af = v1213
    ?5 = v1214
    zf = v1215
    sf = v1216
    tf = v1217
    if = v1218
    df = v1219
    of = v1220
    iopl0 = v1221
    iopl1 = v1222
    nt = v1223
    ?15 = v1224
    memory = {}
0x80482f6:push   0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x0]
    }
0x80482fb:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x0]
    }
==============================================
Constant propagation in function "puts"
==============================================
0x8048300:jmp    DWORD PTR ds:[0x80496d8]
    ax = v1390
    cx = v1391
    dx = v1392
    bx = v1393
    sp = v1394
    bp = v1395
    si = v1396
    di = v1397
    es = v1398
    cs = v1399
    ss = v1400
    ds = v1401
    fs = v1402
    gs = v1403
    cf = v1404
    ?1 = v1405
    pf = v1406
    ?3 = v1407
    af = v1408
    ?5 = v1409
    zf = v1410
    sf = v1411
    tf = v1412
    if = v1413
    df = v1414
    of = v1415
    iopl0 = v1416
    iopl1 = v1417
    nt = v1418
    ?15 = v1419
    memory = {}
0x8048306:push   0x8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x8]
    }
0x804830b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x8]
    }
==============================================
Constant propagation in function "__libc_start_main"
==============================================
0x8048310:jmp    DWORD PTR ds:[0x80496dc]
    ax = v1585
    cx = v1586
    dx = v1587
    bx = v1588
    sp = v1589
    bp = v1590
    si = v1591
    di = v1592
    es = v1593
    cs = v1594
    ss = v1595
    ds = v1596
    fs = v1597
    gs = v1598
    cf = v1599
    ?1 = v1600
    pf = v1601
    ?3 = v1602
    af = v1603
    ?5 = v1604
    zf = v1605
    sf = v1606
    tf = v1607
    if = v1608
    df = v1609
    of = v1610
    iopl0 = v1611
    iopl1 = v1612
    nt = v1613
    ?15 = v1614
    memory = {}
0x8048316:push   0x10
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x10]
    }
0x804831b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x10]
    }
==============================================
Constant propagation in function "_exit"
==============================================
0x8048320:jmp    DWORD PTR ds:[0x80496e0]
    ax = v1780
    cx = v1781
    dx = v1782
    bx = v1783
    sp = v1784
    bp = v1785
    si = v1786
    di = v1787
    es = v1788
    cs = v1789
    ss = v1790
    ds = v1791
    fs = v1792
    gs = v1793
    cf = v1794
    ?1 = v1795
    pf = v1796
    ?3 = v1797
    af = v1798
    ?5 = v1799
    zf = v1800
    sf = v1801
    tf = v1802
    if = v1803
    df = v1804
    of = v1805
    iopl0 = v1806
    iopl1 = v1807
    nt = v1808
    ?15 = v1809
    memory = {}
0x8048326:push   0x18
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x18]
    }
0x804832b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x18]
    }
==============================================
Constant propagation in function "__gmon_start__"
==============================================
0x8048330:jmp    DWORD PTR ds:[0x80496e4]
    ax = v1975
    cx = v1976
    dx = v1977
    bx = v1978
    sp = v1979
    bp = v1980
    si = v1981
    di = v1982
    es = v1983
    cs = v1984
    ss = v1985
    ds = v1986
    fs = v1987
    gs = v1988
    cf = v1989
    ?1 = v1990
    pf = v1991
    ?3 = v1992
    af = v1993
    ?5 = v1994
    zf = v1995
    sf = v1996
    tf = v1997
    if = v1998
    df = v1999
    of = v2000
    iopl0 = v2001
    iopl1 = v2002
    nt = v2003
    ?15 = v2004
    memory = {}
0x8048336:push   0x20
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x20]
    }
0x804833b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x20]
    }
==============================================
Constant propagation in function "_start"
==============================================
0x8048340:xor    ebp, ebp
    ax = v2170
    cx = v2171
    dx = v2172
    bx = v2173
    sp = v2174
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2176
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2185
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {}
0x8048342:pop    esi
    ax = v2170
    cx = v2171
    dx = v2172
    bx = v2173
    sp = v2174+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2185
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {}
0x8048343:mov    ecx, esp
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2174+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2185
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {}
0x8048345:and    esp, 0xf0
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325 [from 0x8048345:and    esp, 0xf0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {}
0x8048348:push   eax
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x8048349:push   esp
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0x8 [from 0x8048349:push   esp]; value=v2325-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x804834a:push   edx
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0xc [from 0x804834a:push   edx]; value=v2172
        size=4; addr=v2325-0x8 [from 0x8048349:push   esp]; value=v2325-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x804834b:push   0x8048520
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0x10 [from 0x804834b:push   0x8048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2325-0xc [from 0x804834a:push   edx]; value=v2172
        size=4; addr=v2325-0x8 [from 0x8048349:push   esp]; value=v2325-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x8048350:push   0x80484b0
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0x14 [from 0x8048350:push   0x80484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2325-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2325-0xc [from 0x804834a:push   edx]; value=v2172
        size=4; addr=v2325-0x8 [from 0x8048349:push   esp]; value=v2325-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x8048355:push   ecx
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0x18 [from 0x8048355:push   ecx]; value=v2174+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2325-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2325-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2325-0xc [from 0x804834a:push   edx]; value=v2172
        size=4; addr=v2325-0x8 [from 0x8048349:push   esp]; value=v2325-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x8048356:push   esi
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0x1c [from 0x8048356:push   esi]; value=v2259 [from 0x8048342:pop    esi]
        size=4; addr=v2325-0x18 [from 0x8048355:push   ecx]; value=v2174+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2325-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2325-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2325-0xc [from 0x804834a:push   edx]; value=v2172
        size=4; addr=v2325-0x8 [from 0x8048349:push   esp]; value=v2325-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x8048357:push   0x8048410
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0x20 [from 0x8048357:push   0x8048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0x20 [from 0x8048357:push   0x8048410]; value=0x8048410 [from 0x8048357:push   0x8048410]
        size=4; addr=v2325-0x1c [from 0x8048356:push   esi]; value=v2259 [from 0x8048342:pop    esi]
        size=4; addr=v2325-0x18 [from 0x8048355:push   ecx]; value=v2174+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2325-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2325-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2325-0xc [from 0x804834a:push   edx]; value=v2172
        size=4; addr=v2325-0x8 [from 0x8048349:push   esp]; value=v2325-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x804835c:call   0x8048310
    ax = v2170
    cx = v2174+0x4 [from 0x8048342:pop    esi]
    dx = v2172
    bx = v2173
    sp = v2325-0x24 [from 0x804835c:call   0x8048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2259 [from 0x8048342:pop    esi]
    di = v2177
    es = v2178
    cs = v2179
    ss = v2180
    ds = v2181
    fs = v2182
    gs = v2183
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2185
    pf = -v2341-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2187
    af = <top>
    ?5 = v2189
    zf = v2344 [from 0x8048345:and    esp, 0xf0]
    sf = v2343 [from 0x8048345:and    esp, 0xf0]
    tf = v2192
    if = v2193
    df = v2194
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2196
    iopl1 = v2197
    nt = v2198
    ?15 = v2199
    memory = {
        size=4; addr=v2325-0x24 [from 0x804835c:call   0x8048310]; value=0x8048361 [from 0x804835c:call   0x8048310]
        size=4; addr=v2325-0x20 [from 0x8048357:push   0x8048410]; value=0x8048410 [from 0x8048357:push   0x8048410]
        size=4; addr=v2325-0x1c [from 0x8048356:push   esi]; value=v2259 [from 0x8048342:pop    esi]
        size=4; addr=v2325-0x18 [from 0x8048355:push   ecx]; value=v2174+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2325-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2325-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2325-0xc [from 0x804834a:push   edx]; value=v2172
        size=4; addr=v2325-0x8 [from 0x8048349:push   esp]; value=v2325-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2325-0x4 [from 0x8048348:push   eax]; value=v2170
    }
0x8048361:hlt    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048362"
==============================================
0x8048362:nop    
    ax = v2800
    cx = v2801
    dx = v2802
    bx = v2803
    sp = v2804
    bp = v2805
    si = v2806
    di = v2807
    es = v2808
    cs = v2809
    ss = v2810
    ds = v2811
    fs = v2812
    gs = v2813
    cf = v2814
    ?1 = v2815
    pf = v2816
    ?3 = v2817
    af = v2818
    ?5 = v2819
    zf = v2820
    sf = v2821
    tf = v2822
    if = v2823
    df = v2824
    of = v2825
    iopl0 = v2826
    iopl1 = v2827
    nt = v2828
    ?15 = v2829
    memory = {}
0x8048363:nop    
    ax = v2800
    cx = v2801
    dx = v2802
    bx = v2803
    sp = v2804
    bp = v2805
    si = v2806
    di = v2807
    es = v2808
    cs = v2809
    ss = v2810
    ds = v2811
    fs = v2812
    gs = v2813
    cf = v2814
    ?1 = v2815
    pf = v2816
    ?3 = v2817
    af = v2818
    ?5 = v2819
    zf = v2820
    sf = v2821
    tf = v2822
    if = v2823
    df = v2824
    of = v2825
    iopl0 = v2826
    iopl1 = v2827
    nt = v2828
    ?15 = v2829
    memory = {}
==============================================
Constant propagation in function "call_gmon_start"
==============================================
0x8048364:push   ebp
    ax = v2954
    cx = v2955
    dx = v2956
    bx = v2957
    sp = v2958-0x4 [from 0x8048364:push   ebp]
    bp = v2959
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = v2968
    ?1 = v2969
    pf = v2970
    ?3 = v2971
    af = v2972
    ?5 = v2973
    zf = v2974
    sf = v2975
    tf = v2976
    if = v2977
    df = v2978
    of = v2979
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048365:mov    ebp, esp
    ax = v2954
    cx = v2955
    dx = v2956
    bx = v2957
    sp = v2958-0x4 [from 0x8048364:push   ebp]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = v2968
    ?1 = v2969
    pf = v2970
    ?3 = v2971
    af = v2972
    ?5 = v2973
    zf = v2974
    sf = v2975
    tf = v2976
    if = v2977
    df = v2978
    of = v2979
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048367:push   ebx
    ax = v2954
    cx = v2955
    dx = v2956
    bx = v2957
    sp = v2958-0x8 [from 0x8048367:push   ebx]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = v2968
    ?1 = v2969
    pf = v2970
    ?3 = v2971
    af = v2972
    ?5 = v2973
    zf = v2974
    sf = v2975
    tf = v2976
    if = v2977
    df = v2978
    of = v2979
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048368:push   ecx
    ax = v2954
    cx = v2955
    dx = v2956
    bx = v2957
    sp = v2958-0xc [from 0x8048368:push   ecx]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = v2968
    ?1 = v2969
    pf = v2970
    ?3 = v2971
    af = v2972
    ?5 = v2973
    zf = v2974
    sf = v2975
    tf = v2976
    if = v2977
    df = v2978
    of = v2979
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048369:call   0x804836e
    ax = v2954
    cx = v2955
    dx = v2956
    bx = v2957
    sp = v2958-0x10 [from 0x8048369:call   0x804836e]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = v2968
    ?1 = v2969
    pf = v2970
    ?3 = v2971
    af = v2972
    ?5 = v2973
    zf = v2974
    sf = v2975
    tf = v2976
    if = v2977
    df = v2978
    of = v2979
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x804836e:pop    ebx
    ax = v2954
    cx = v2955
    dx = v2956
    bx = 0x804836e [from 0x8048369:call   0x804836e]
    sp = v2958-0xc [from 0x804836e:pop    ebx]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = v2968
    ?1 = v2969
    pf = v2970
    ?3 = v2971
    af = v2972
    ?5 = v2973
    zf = v2974
    sf = v2975
    tf = v2976
    if = v2977
    df = v2978
    of = v2979
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x804836f:add    ebx, 0x135a
    ax = v2954
    cx = v2955
    dx = v2956
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2958-0xc [from 0x804836e:pop    ebx]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?1 = v2969
    pf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?3 = v2971
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x135a]
    ?5 = v2973
    zf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804836f:add    ebx, 0x135a]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]
    ax = v2954
    cx = v2955
    dx = v3266 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2958-0xc [from 0x804836e:pop    ebx]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?1 = v2969
    pf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?3 = v2971
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x135a]
    ?5 = v2973
    zf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804836f:add    ebx, 0x135a]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x804837b:test   edx, edx
    ax = v2954
    cx = v2955
    dx = v3266 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2958-0xc [from 0x804836e:pop    ebx]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2969
    pf = -v3315-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2971
    af = <top>
    ?5 = v2973
    zf = v3318 [from 0x804837b:test   edx, edx]
    sf = v3317 [from 0x804837b:test   edx, edx]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x804837d:je     0x8048384
    ax = v2954
    cx = v2955
    dx = v3266 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2958-0xc [from 0x804836e:pop    ebx]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2969
    pf = -v3315-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2971
    af = <top>
    ?5 = v2973
    zf = v3318 [from 0x804837b:test   edx, edx]
    sf = v3317 [from 0x804837b:test   edx, edx]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x804837f:call   0x8048330
    ax = v2954
    cx = v2955
    dx = v3266 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2958-0x10 [from 0x804837f:call   0x8048330]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2969
    pf = -v3315-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2971
    af = <top>
    ?5 = v2973
    zf = v3318 [from 0x804837b:test   edx, edx]
    sf = v3317 [from 0x804837b:test   edx, edx]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x804837f:call   0x8048330]; value=0x8048384 [from 0x804837f:call   0x8048330]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048384:pop    eax
    ax = v2955
    cx = v2955
    dx = v3266 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2958-0x8 [from 0x8048384:pop    eax]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2969
    pf = -v3315-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2971
    af = <top>
    ?5 = v2973
    zf = v3318 [from 0x804837b:test   edx, edx]
    sf = v3317 [from 0x804837b:test   edx, edx]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048385:pop    ebx
    ax = v2955
    cx = v2955
    dx = v3266 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2957
    sp = v2958-0x4 [from 0x8048385:pop    ebx]
    bp = v2958-0x4 [from 0x8048364:push   ebp]
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2969
    pf = -v3315-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2971
    af = <top>
    ?5 = v2973
    zf = v3318 [from 0x804837b:test   edx, edx]
    sf = v3317 [from 0x804837b:test   edx, edx]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048386:leave  
    ax = v2955
    cx = v2955
    dx = v3266 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2957
    sp = v2958 [from 0x8048386:leave  ]
    bp = v2959
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2969
    pf = -v3315-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2971
    af = <top>
    ?5 = v2973
    zf = v3318 [from 0x804837b:test   edx, edx]
    sf = v3317 [from 0x804837b:test   edx, edx]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
0x8048387:ret    
    ax = v2955
    cx = v2955
    dx = v3266 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2957
    sp = v2958+0x4 [from 0x8048387:ret    ]
    bp = v2959
    si = v2960
    di = v2961
    es = v2962
    cs = v2963
    ss = v2964
    ds = v2965
    fs = v2966
    gs = v2967
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2969
    pf = -v3315-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2971
    af = <top>
    ?5 = v2973
    zf = v3318 [from 0x804837b:test   edx, edx]
    sf = v3317 [from 0x804837b:test   edx, edx]
    tf = v2976
    if = v2977
    df = v2978
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2980
    iopl1 = v2981
    nt = v2982
    ?15 = v2983
    memory = {
        size=4; addr=v2958-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2958-0xc [from 0x8048368:push   ecx]; value=v2955
        size=4; addr=v2958-0x8 [from 0x8048367:push   ebx]; value=v2957
        size=4; addr=v2958-0x4 [from 0x8048364:push   ebp]; value=v2959
    }
==============================================
Constant propagation in function "0x8048388"
==============================================
0x8048388:nop    
    ax = v3630
    cx = v3631
    dx = v3632
    bx = v3633
    sp = v3634
    bp = v3635
    si = v3636
    di = v3637
    es = v3638
    cs = v3639
    ss = v3640
    ds = v3641
    fs = v3642
    gs = v3643
    cf = v3644
    ?1 = v3645
    pf = v3646
    ?3 = v3647
    af = v3648
    ?5 = v3649
    zf = v3650
    sf = v3651
    tf = v3652
    if = v3653
    df = v3654
    of = v3655
    iopl0 = v3656
    iopl1 = v3657
    nt = v3658
    ?15 = v3659
    memory = {}
0x8048389:nop    
    ax = v3630
    cx = v3631
    dx = v3632
    bx = v3633
    sp = v3634
    bp = v3635
    si = v3636
    di = v3637
    es = v3638
    cs = v3639
    ss = v3640
    ds = v3641
    fs = v3642
    gs = v3643
    cf = v3644
    ?1 = v3645
    pf = v3646
    ?3 = v3647
    af = v3648
    ?5 = v3649
    zf = v3650
    sf = v3651
    tf = v3652
    if = v3653
    df = v3654
    of = v3655
    iopl0 = v3656
    iopl1 = v3657
    nt = v3658
    ?15 = v3659
    memory = {}
0x804838a:nop    
    ax = v3630
    cx = v3631
    dx = v3632
    bx = v3633
    sp = v3634
    bp = v3635
    si = v3636
    di = v3637
    es = v3638
    cs = v3639
    ss = v3640
    ds = v3641
    fs = v3642
    gs = v3643
    cf = v3644
    ?1 = v3645
    pf = v3646
    ?3 = v3647
    af = v3648
    ?5 = v3649
    zf = v3650
    sf = v3651
    tf = v3652
    if = v3653
    df = v3654
    of = v3655
    iopl0 = v3656
    iopl1 = v3657
    nt = v3658
    ?15 = v3659
    memory = {}
0x804838b:nop    
    ax = v3630
    cx = v3631
    dx = v3632
    bx = v3633
    sp = v3634
    bp = v3635
    si = v3636
    di = v3637
    es = v3638
    cs = v3639
    ss = v3640
    ds = v3641
    fs = v3642
    gs = v3643
    cf = v3644
    ?1 = v3645
    pf = v3646
    ?3 = v3647
    af = v3648
    ?5 = v3649
    zf = v3650
    sf = v3651
    tf = v3652
    if = v3653
    df = v3654
    of = v3655
    iopl0 = v3656
    iopl1 = v3657
    nt = v3658
    ?15 = v3659
    memory = {}
0x804838c:nop    
    ax = v3630
    cx = v3631
    dx = v3632
    bx = v3633
    sp = v3634
    bp = v3635
    si = v3636
    di = v3637
    es = v3638
    cs = v3639
    ss = v3640
    ds = v3641
    fs = v3642
    gs = v3643
    cf = v3644
    ?1 = v3645
    pf = v3646
    ?3 = v3647
    af = v3648
    ?5 = v3649
    zf = v3650
    sf = v3651
    tf = v3652
    if = v3653
    df = v3654
    of = v3655
    iopl0 = v3656
    iopl1 = v3657
    nt = v3658
    ?15 = v3659
    memory = {}
0x804838d:nop    
    ax = v3630
    cx = v3631
    dx = v3632
    bx = v3633
    sp = v3634
    bp = v3635
    si = v3636
    di = v3637
    es = v3638
    cs = v3639
    ss = v3640
    ds = v3641
    fs = v3642
    gs = v3643
    cf = v3644
    ?1 = v3645
    pf = v3646
    ?3 = v3647
    af = v3648
    ?5 = v3649
    zf = v3650
    sf = v3651
    tf = v3652
    if = v3653
    df = v3654
    of = v3655
    iopl0 = v3656
    iopl1 = v3657
    nt = v3658
    ?15 = v3659
    memory = {}
0x804838e:nop    
    ax = v3630
    cx = v3631
    dx = v3632
    bx = v3633
    sp = v3634
    bp = v3635
    si = v3636
    di = v3637
    es = v3638
    cs = v3639
    ss = v3640
    ds = v3641
    fs = v3642
    gs = v3643
    cf = v3644
    ?1 = v3645
    pf = v3646
    ?3 = v3647
    af = v3648
    ?5 = v3649
    zf = v3650
    sf = v3651
    tf = v3652
    if = v3653
    df = v3654
    of = v3655
    iopl0 = v3656
    iopl1 = v3657
    nt = v3658
    ?15 = v3659
    memory = {}
0x804838f:nop    
    ax = v3630
    cx = v3631
    dx = v3632
    bx = v3633
    sp = v3634
    bp = v3635
    si = v3636
    di = v3637
    es = v3638
    cs = v3639
    ss = v3640
    ds = v3641
    fs = v3642
    gs = v3643
    cf = v3644
    ?1 = v3645
    pf = v3646
    ?3 = v3647
    af = v3648
    ?5 = v3649
    zf = v3650
    sf = v3651
    tf = v3652
    if = v3653
    df = v3654
    of = v3655
    iopl0 = v3656
    iopl1 = v3657
    nt = v3658
    ?15 = v3659
    memory = {}
==============================================
Constant propagation in function "__do_global_dtors_aux"
==============================================
0x8048390:push   ebp
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3980-0x4 [from 0x8048390:push   ebp]
    bp = v3981
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v3990
    ?1 = v3991
    pf = v3992
    ?3 = v3993
    af = v3994
    ?5 = v3995
    zf = v3996
    sf = v3997
    tf = v3998
    if = v3999
    df = v4000
    of = v4001
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x8048391:mov    ebp, esp
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3980-0x4 [from 0x8048390:push   ebp]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v3990
    ?1 = v3991
    pf = v3992
    ?3 = v3993
    af = v3994
    ?5 = v3995
    zf = v3996
    sf = v3997
    tf = v3998
    if = v3999
    df = v4000
    of = v4001
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x8048393:sub    esp, 0x8
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = -v4107-0x1 [from 0x8048393:sub    esp, 0x8]
    ?1 = v3991
    pf = -v4101-0x1 [from 0x8048393:sub    esp, 0x8]
    ?3 = v3993
    af = -v4105-0x1 [from 0x8048393:sub    esp, 0x8]
    ?5 = v3995
    zf = v4104 [from 0x8048393:sub    esp, 0x8]
    sf = v4103 [from 0x8048393:sub    esp, 0x8]
    tf = v3998
    if = v3999
    df = v4000
    of = v4111 [from 0x8048393:sub    esp, 0x8]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = -v4179-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3991
    pf = -v4173-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3993
    af = -v4177-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3995
    zf = v4176 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v4175 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3998
    if = v3999
    df = v4000
    of = v4183 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x804839d:jne    0x80483cc
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = -v4179-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3991
    pf = -v4173-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3993
    af = -v4177-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3995
    zf = v4176 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v4175 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3998
    if = v3999
    df = v4000
    of = v4183 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]
    ax = v4283 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = -v4179-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3991
    pf = -v4173-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3993
    af = -v4177-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3995
    zf = v4176 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v4175 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3998
    if = v3999
    df = v4000
    of = v4183 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v4283 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3977
    dx = v4317 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = -v4179-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3991
    pf = -v4173-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3993
    af = -v4177-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3995
    zf = v4176 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v4175 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3998
    if = v3999
    df = v4000
    of = v4183 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x80483a6:test   edx, edx
    ax = v4283 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3977
    dx = v4317 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3991
    pf = -v4366-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3993
    af = <top>
    ?5 = v3995
    zf = v4369 [from 0x80483a6:test   edx, edx]
    sf = v4368 [from 0x80483a6:test   edx, edx]
    tf = v3998
    if = v3999
    df = v4000
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x80483a8:je     0x80483c5
    ax = v4283 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3977
    dx = v4317 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3991
    pf = -v4366-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3993
    af = <top>
    ?5 = v3995
    zf = v4369 [from 0x80483a6:test   edx, edx]
    sf = v4368 [from 0x80483a6:test   edx, edx]
    tf = v3998
    if = v3999
    df = v4000
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x80483aa:lea    esi, [esi + 0x0]
    ax = v4283 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3977
    dx = v4317 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3991
    pf = -v4366-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3993
    af = <top>
    ?5 = v3995
    zf = v4369 [from 0x80483a6:test   edx, edx]
    sf = v4368 [from 0x80483a6:test   edx, edx]
    tf = v3998
    if = v3999
    df = v4000
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x80483b0:add    eax, 0x4
    ax = v4283+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3977
    dx = v4317 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v4532 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3991
    pf = -v4527-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3993
    af = v4531 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3995
    zf = v4530 [from 0x80483b0:add    eax, 0x4]
    sf = v4529 [from 0x80483b0:add    eax, 0x4]
    tf = v3998
    if = v3999
    df = v4000
    of = v4535 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x4 [from 0x8048390:push   ebp]; value=v3981
    }
0x80483b3:mov    DWORD PTR ds:[0x80496f0], eax
    ax = v4283+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3977
    dx = v4317 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v4532 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3991
    pf = -v4527-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3993
    af = v4531 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3995
    zf = v4530 [from 0x80483b0:add    eax, 0x4]
    sf = v4529 [from 0x80483b0:add    eax, 0x4]
    tf = v3998
    if = v3999
    df = v4000
    of = v4535 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x80496f0], eax]; value=v4283+0x4 [from 0x80483b0:add    eax, 0x4]
    }
0x80483b8:call   edx
    ax = v4283+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3977
    dx = v4317 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3979
    sp = v3980-0x10 [from 0x80483b8:call   edx]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v4532 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3991
    pf = -v4527-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3993
    af = v4531 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3995
    zf = v4530 [from 0x80483b0:add    eax, 0x4]
    sf = v4529 [from 0x80483b0:add    eax, 0x4]
    tf = v3998
    if = v3999
    df = v4000
    of = v4535 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=4; addr=v3980-0x10 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
0x80483ba:mov    eax, DWORD PTR ds:[0x80496f0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c1:test   edx, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c3:jne    0x80483b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1
    ax = v4283 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3977
    dx = v4317 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3979
    sp = v3980-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3980-0x4 [from 0x8048390:push   ebp]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3991
    pf = -v4366-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3993
    af = <top>
    ?5 = v3995
    zf = v4369 [from 0x80483a6:test   edx, edx]
    sf = v4368 [from 0x80483a6:test   edx, edx]
    tf = v3998
    if = v3999
    df = v4000
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1]
    }
0x80483cc:leave  
    ax = v4249
    cx = v3977
    dx = v4251
    bx = v3979
    sp = v3980 [from 0x80483cc:leave  ]
    bp = v4777 [from 0x80483cc:leave  ]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v4263
    ?1 = v3991
    pf = v4265
    ?3 = v3993
    af = -v4177-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3995
    zf = v4269
    sf = v4270
    tf = v3998
    if = v3999
    df = v4000
    of = v4274
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {}
0x80483cd:ret    
    ax = v4249
    cx = v3977
    dx = v4251
    bx = v3979
    sp = v3980+0x4 [from 0x80483cd:ret    ]
    bp = v4777 [from 0x80483cc:leave  ]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v4263
    ?1 = v3991
    pf = v4265
    ?3 = v3993
    af = -v4177-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3995
    zf = v4269
    sf = v4270
    tf = v3998
    if = v3999
    df = v4000
    of = v4274
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {}
0x80483ce:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "frame_dummy"
==============================================
0x80483d0:push   ebp
    ax = v4939
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0x4 [from 0x80483d0:push   ebp]
    bp = v4944
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = v4953
    ?1 = v4954
    pf = v4955
    ?3 = v4956
    af = v4957
    ?5 = v4958
    zf = v4959
    sf = v4960
    tf = v4961
    if = v4962
    df = v4963
    of = v4964
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483d1:mov    ebp, esp
    ax = v4939
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0x4 [from 0x80483d0:push   ebp]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = v4953
    ?1 = v4954
    pf = v4955
    ?3 = v4956
    af = v4957
    ?5 = v4958
    zf = v4959
    sf = v4960
    tf = v4961
    if = v4962
    df = v4963
    of = v4964
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483d3:sub    esp, 0x8
    ax = v4939
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = -v5070-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?1 = v4954
    pf = -v5064-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?3 = v4956
    af = -v5068-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?5 = v4958
    zf = v5067 [from 0x80483d3:sub    esp, 0x8]
    sf = v5066 [from 0x80483d3:sub    esp, 0x8]
    tf = v4961
    if = v4962
    df = v4963
    of = v5074 [from 0x80483d3:sub    esp, 0x8]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]
    ax = v5109 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = -v5070-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?1 = v4954
    pf = -v5064-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?3 = v4956
    af = -v5068-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?5 = v4958
    zf = v5067 [from 0x80483d3:sub    esp, 0x8]
    sf = v5066 [from 0x80483d3:sub    esp, 0x8]
    tf = v4961
    if = v4962
    df = v4963
    of = v5074 [from 0x80483d3:sub    esp, 0x8]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483db:test   eax, eax
    ax = v5109 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4954
    pf = -v5158-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4956
    af = <top>
    ?5 = v4958
    zf = v5161 [from 0x80483db:test   eax, eax]
    sf = v5160 [from 0x80483db:test   eax, eax]
    tf = v4961
    if = v4962
    df = v4963
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483dd:je     0x8048400
    ax = v5109 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4954
    pf = -v5158-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4956
    af = <top>
    ?5 = v4958
    zf = v5161 [from 0x80483db:test   eax, eax]
    sf = v5160 [from 0x80483db:test   eax, eax]
    tf = v4961
    if = v4962
    df = v4963
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483df:mov    eax, 0x0
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4954
    pf = -v5158-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4956
    af = <top>
    ?5 = v4958
    zf = v5161 [from 0x80483db:test   eax, eax]
    sf = v5160 [from 0x80483db:test   eax, eax]
    tf = v4961
    if = v4962
    df = v4963
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4954
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4956
    af = <top>
    ?5 = v4958
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4961
    if = v4962
    df = v4963
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483e6:je     0x8048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4954
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4956
    af = <top>
    ?5 = v4958
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4961
    if = v4962
    df = v4963
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {
        size=4; addr=v4943-0x4 [from 0x80483d0:push   ebp]; value=v4944
    }
0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8]
    }
0x80483ef:call   0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8]
        size=4; addr=<top>; value=0x80483f4 [from 0x80483ef:call   0x0]
    }
0x80483f4:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483fa:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048400:mov    esp, ebp
    ax = v5229
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943-0x4 [from 0x80483d0:push   ebp]
    bp = v4943-0x4 [from 0x80483d0:push   ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4954
    pf = v5245
    ?3 = v4956
    af = <top>
    ?5 = v4958
    zf = v5249
    sf = v5250
    tf = v4961
    if = v4962
    df = v4963
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {}
0x8048402:pop    ebp
    ax = v5229
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943 [from 0x8048402:pop    ebp]
    bp = v5558 [from 0x8048402:pop    ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4954
    pf = v5245
    ?3 = v4956
    af = <top>
    ?5 = v4958
    zf = v5249
    sf = v5250
    tf = v4961
    if = v4962
    df = v4963
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {}
0x8048403:ret    
    ax = v5229
    cx = v4940
    dx = v4941
    bx = v4942
    sp = v4943+0x4 [from 0x8048403:ret    ]
    bp = v5558 [from 0x8048402:pop    ebp]
    si = v4945
    di = v4946
    es = v4947
    cs = v4948
    ss = v4949
    ds = v4950
    fs = v4951
    gs = v4952
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4954
    pf = v5245
    ?3 = v4956
    af = <top>
    ?5 = v4958
    zf = v5249
    sf = v5250
    tf = v4961
    if = v4962
    df = v4963
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4965
    iopl1 = v4966
    nt = v4967
    ?15 = v4968
    memory = {}
==============================================
Constant propagation in function "0x8048404"
==============================================
0x8048404:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x8048405:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x8048406:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x8048407:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x8048408:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x8048409:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x804840a:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x804840b:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x804840c:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x804840d:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x804840e:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
0x804840f:nop    
    ax = v5658
    cx = v5659
    dx = v5660
    bx = v5661
    sp = v5662
    bp = v5663
    si = v5664
    di = v5665
    es = v5666
    cs = v5667
    ss = v5668
    ds = v5669
    fs = v5670
    gs = v5671
    cf = v5672
    ?1 = v5673
    pf = v5674
    ?3 = v5675
    af = v5676
    ?5 = v5677
    zf = v5678
    sf = v5679
    tf = v5680
    if = v5681
    df = v5682
    of = v5683
    iopl0 = v5684
    iopl1 = v5685
    nt = v5686
    ?15 = v5687
    memory = {}
==============================================
Constant propagation in function "main"
==============================================
0x8048410:push   ebp
    ax = v6132
    cx = v6133
    dx = v6134
    bx = v6135
    sp = v6136-0x4 [from 0x8048410:push   ebp]
    bp = v6137
    si = v6138
    di = v6139
    es = v6140
    cs = v6141
    ss = v6142
    ds = v6143
    fs = v6144
    gs = v6145
    cf = v6146
    ?1 = v6147
    pf = v6148
    ?3 = v6149
    af = v6150
    ?5 = v6151
    zf = v6152
    sf = v6153
    tf = v6154
    if = v6155
    df = v6156
    of = v6157
    iopl0 = v6158
    iopl1 = v6159
    nt = v6160
    ?15 = v6161
    memory = {
        size=4; addr=v6136-0x4 [from 0x8048410:push   ebp]; value=v6137
    }
0x8048411:mov    edx, 0x8048480
    ax = v6132
    cx = v6133
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6135
    sp = v6136-0x4 [from 0x8048410:push   ebp]
    bp = v6137
    si = v6138
    di = v6139
    es = v6140
    cs = v6141
    ss = v6142
    ds = v6143
    fs = v6144
    gs = v6145
    cf = v6146
    ?1 = v6147
    pf = v6148
    ?3 = v6149
    af = v6150
    ?5 = v6151
    zf = v6152
    sf = v6153
    tf = v6154
    if = v6155
    df = v6156
    of = v6157
    iopl0 = v6158
    iopl1 = v6159
    nt = v6160
    ?15 = v6161
    memory = {
        size=4; addr=v6136-0x4 [from 0x8048410:push   ebp]; value=v6137
    }
0x8048416:mov    ebp, esp
    ax = v6132
    cx = v6133
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6135
    sp = v6136-0x4 [from 0x8048410:push   ebp]
    bp = v6136-0x4 [from 0x8048410:push   ebp]
    si = v6138
    di = v6139
    es = v6140
    cs = v6141
    ss = v6142
    ds = v6143
    fs = v6144
    gs = v6145
    cf = v6146
    ?1 = v6147
    pf = v6148
    ?3 = v6149
    af = v6150
    ?5 = v6151
    zf = v6152
    sf = v6153
    tf = v6154
    if = v6155
    df = v6156
    of = v6157
    iopl0 = v6158
    iopl1 = v6159
    nt = v6160
    ?15 = v6161
    memory = {
        size=4; addr=v6136-0x4 [from 0x8048410:push   ebp]; value=v6137
    }
0x8048418:sub    esp, 0x8
    ax = v6132
    cx = v6133
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6135
    sp = v6136-0xc [from 0x8048418:sub    esp, 0x8]
    bp = v6136-0x4 [from 0x8048410:push   ebp]
    si = v6138
    di = v6139
    es = v6140
    cs = v6141
    ss = v6142
    ds = v6143
    fs = v6144
    gs = v6145
    cf = -v6296-0x1 [from 0x8048418:sub    esp, 0x8]
    ?1 = v6147
    pf = -v6290-0x1 [from 0x8048418:sub    esp, 0x8]
    ?3 = v6149
    af = -v6294-0x1 [from 0x8048418:sub    esp, 0x8]
    ?5 = v6151
    zf = v6293 [from 0x8048418:sub    esp, 0x8]
    sf = v6292 [from 0x8048418:sub    esp, 0x8]
    tf = v6154
    if = v6155
    df = v6156
    of = v6300 [from 0x8048418:sub    esp, 0x8]
    iopl0 = v6158
    iopl1 = v6159
    nt = v6160
    ?15 = v6161
    memory = {
        size=4; addr=v6136-0x4 [from 0x8048410:push   ebp]; value=v6137
    }
0x804841b:and    esp, 0xf0
    ax = v6132
    cx = v6133
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6135
    sp = v6334 [from 0x804841b:and    esp, 0xf0]
    bp = v6136-0x4 [from 0x8048410:push   ebp]
    si = v6138
    di = v6139
    es = v6140
    cs = v6141
    ss = v6142
    ds = v6143
    fs = v6144
    gs = v6145
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v6147
    pf = -v6350-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v6149
    af = <top>
    ?5 = v6151
    zf = v6353 [from 0x804841b:and    esp, 0xf0]
    sf = v6352 [from 0x804841b:and    esp, 0xf0]
    tf = v6154
    if = v6155
    df = v6156
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v6158
    iopl1 = v6159
    nt = v6160
    ?15 = v6161
    memory = {
        size=4; addr=v6136-0x4 [from 0x8048410:push   ebp]; value=v6137
    }
0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx
    ax = v6132
    cx = v6133
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6135
    sp = v6334 [from 0x804841b:and    esp, 0xf0]
    bp = v6136-0x4 [from 0x8048410:push   ebp]
    si = v6138
    di = v6139
    es = v6140
    cs = v6141
    ss = v6142
    ds = v6143
    fs = v6144
    gs = v6145
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v6147
    pf = -v6350-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v6149
    af = <top>
    ?5 = v6151
    zf = v6353 [from 0x804841b:and    esp, 0xf0]
    sf = v6352 [from 0x804841b:and    esp, 0xf0]
    tf = v6154
    if = v6155
    df = v6156
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v6158
    iopl1 = v6159
    nt = v6160
    ?15 = v6161
    memory = {
        size=4; addr=v6334+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    }
0x8048422:mov    DWORD PTR ss:[esp], 0xa
    ax = v6132
    cx = v6133
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6135
    sp = v6334 [from 0x804841b:and    esp, 0xf0]
    bp = v6136-0x4 [from 0x8048410:push   ebp]
    si = v6138
    di = v6139
    es = v6140
    cs = v6141
    ss = v6142
    ds = v6143
    fs = v6144
    gs = v6145
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v6147
    pf = -v6350-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v6149
    af = <top>
    ?5 = v6151
    zf = v6353 [from 0x804841b:and    esp, 0xf0]
    sf = v6352 [from 0x804841b:and    esp, 0xf0]
    tf = v6154
    if = v6155
    df = v6156
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v6158
    iopl1 = v6159
    nt = v6160
    ?15 = v6161
    memory = {
        size=4; addr=v6334 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0xa]
        size=4; addr=v6334+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    }
0x8048429:call   0x80482f0
    ax = v6132
    cx = v6133
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6135
    sp = v6334-0x4 [from 0x8048429:call   0x80482f0]
    bp = v6136-0x4 [from 0x8048410:push   ebp]
    si = v6138
    di = v6139
    es = v6140
    cs = v6141
    ss = v6142
    ds = v6143
    fs = v6144
    gs = v6145
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v6147
    pf = -v6350-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v6149
    af = <top>
    ?5 = v6151
    zf = v6353 [from 0x804841b:and    esp, 0xf0]
    sf = v6352 [from 0x804841b:and    esp, 0xf0]
    tf = v6154
    if = v6155
    df = v6156
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v6158
    iopl1 = v6159
    nt = v6160
    ?15 = v6161
    memory = {
        size=4; addr=v6334 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0xa]
        size=4; addr=v6334+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
        size=4; addr=v6334-0x4 [from 0x8048429:call   0x80482f0]; value=0x804842e [from 0x8048429:call   0x80482f0]
    }
0x804842e:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048430:xor    eax, eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048432:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048433:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048434:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804843a:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "bar"
==============================================
0x8048440:push   ebp
    ax = v6845
    cx = v6846
    dx = v6847
    bx = v6848
    sp = v6849-0x4 [from 0x8048440:push   ebp]
    bp = v6850
    si = v6851
    di = v6852
    es = v6853
    cs = v6854
    ss = v6855
    ds = v6856
    fs = v6857
    gs = v6858
    cf = v6859
    ?1 = v6860
    pf = v6861
    ?3 = v6862
    af = v6863
    ?5 = v6864
    zf = v6865
    sf = v6866
    tf = v6867
    if = v6868
    df = v6869
    of = v6870
    iopl0 = v6871
    iopl1 = v6872
    nt = v6873
    ?15 = v6874
    memory = {
        size=4; addr=v6849-0x4 [from 0x8048440:push   ebp]; value=v6850
    }
0x8048441:mov    ebp, esp
    ax = v6845
    cx = v6846
    dx = v6847
    bx = v6848
    sp = v6849-0x4 [from 0x8048440:push   ebp]
    bp = v6849-0x4 [from 0x8048440:push   ebp]
    si = v6851
    di = v6852
    es = v6853
    cs = v6854
    ss = v6855
    ds = v6856
    fs = v6857
    gs = v6858
    cf = v6859
    ?1 = v6860
    pf = v6861
    ?3 = v6862
    af = v6863
    ?5 = v6864
    zf = v6865
    sf = v6866
    tf = v6867
    if = v6868
    df = v6869
    of = v6870
    iopl0 = v6871
    iopl1 = v6872
    nt = v6873
    ?15 = v6874
    memory = {
        size=4; addr=v6849-0x4 [from 0x8048440:push   ebp]; value=v6850
    }
0x8048443:sub    esp, 0x8
    ax = v6845
    cx = v6846
    dx = v6847
    bx = v6848
    sp = v6849-0xc [from 0x8048443:sub    esp, 0x8]
    bp = v6849-0x4 [from 0x8048440:push   ebp]
    si = v6851
    di = v6852
    es = v6853
    cs = v6854
    ss = v6855
    ds = v6856
    fs = v6857
    gs = v6858
    cf = -v6976-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6860
    pf = -v6970-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6862
    af = -v6974-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6864
    zf = v6973 [from 0x8048443:sub    esp, 0x8]
    sf = v6972 [from 0x8048443:sub    esp, 0x8]
    tf = v6867
    if = v6868
    df = v6869
    of = v6980 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6871
    iopl1 = v6872
    nt = v6873
    ?15 = v6874
    memory = {
        size=4; addr=v6849-0x4 [from 0x8048440:push   ebp]; value=v6850
    }
0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v6845
    cx = v6846
    dx = v6847
    bx = v6848
    sp = v6849-0xc [from 0x8048443:sub    esp, 0x8]
    bp = v6849-0x4 [from 0x8048440:push   ebp]
    si = v6851
    di = v6852
    es = v6853
    cs = v6854
    ss = v6855
    ds = v6856
    fs = v6857
    gs = v6858
    cf = -v6976-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6860
    pf = -v6970-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6862
    af = -v6974-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6864
    zf = v6973 [from 0x8048443:sub    esp, 0x8]
    sf = v6972 [from 0x8048443:sub    esp, 0x8]
    tf = v6867
    if = v6868
    df = v6869
    of = v6980 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6871
    iopl1 = v6872
    nt = v6873
    ?15 = v6874
    memory = {
        size=4; addr=v6849-0xc [from 0x8048443:sub    esp, 0x8]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v6849-0x4 [from 0x8048440:push   ebp]; value=v6850
    }
0x804844d:call   0x8048300
    ax = v6845
    cx = v6846
    dx = v6847
    bx = v6848
    sp = v6849-0x10 [from 0x804844d:call   0x8048300]
    bp = v6849-0x4 [from 0x8048440:push   ebp]
    si = v6851
    di = v6852
    es = v6853
    cs = v6854
    ss = v6855
    ds = v6856
    fs = v6857
    gs = v6858
    cf = -v6976-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6860
    pf = -v6970-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6862
    af = -v6974-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6864
    zf = v6973 [from 0x8048443:sub    esp, 0x8]
    sf = v6972 [from 0x8048443:sub    esp, 0x8]
    tf = v6867
    if = v6868
    df = v6869
    of = v6980 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6871
    iopl1 = v6872
    nt = v6873
    ?15 = v6874
    memory = {
        size=4; addr=v6849-0x10 [from 0x804844d:call   0x8048300]; value=0x8048452 [from 0x804844d:call   0x8048300]
        size=4; addr=v6849-0xc [from 0x8048443:sub    esp, 0x8]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v6849-0x4 [from 0x8048440:push   ebp]; value=v6850
    }
0x8048452:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048454:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048455:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048456:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048459:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "foo"
==============================================
0x8048460:push   ebp
    ax = v7378
    cx = v7379
    dx = v7380
    bx = v7381
    sp = v7382-0x4 [from 0x8048460:push   ebp]
    bp = v7383
    si = v7384
    di = v7385
    es = v7386
    cs = v7387
    ss = v7388
    ds = v7389
    fs = v7390
    gs = v7391
    cf = v7392
    ?1 = v7393
    pf = v7394
    ?3 = v7395
    af = v7396
    ?5 = v7397
    zf = v7398
    sf = v7399
    tf = v7400
    if = v7401
    df = v7402
    of = v7403
    iopl0 = v7404
    iopl1 = v7405
    nt = v7406
    ?15 = v7407
    memory = {
        size=4; addr=v7382-0x4 [from 0x8048460:push   ebp]; value=v7383
    }
0x8048461:mov    ebp, esp
    ax = v7378
    cx = v7379
    dx = v7380
    bx = v7381
    sp = v7382-0x4 [from 0x8048460:push   ebp]
    bp = v7382-0x4 [from 0x8048460:push   ebp]
    si = v7384
    di = v7385
    es = v7386
    cs = v7387
    ss = v7388
    ds = v7389
    fs = v7390
    gs = v7391
    cf = v7392
    ?1 = v7393
    pf = v7394
    ?3 = v7395
    af = v7396
    ?5 = v7397
    zf = v7398
    sf = v7399
    tf = v7400
    if = v7401
    df = v7402
    of = v7403
    iopl0 = v7404
    iopl1 = v7405
    nt = v7406
    ?15 = v7407
    memory = {
        size=4; addr=v7382-0x4 [from 0x8048460:push   ebp]; value=v7383
    }
0x8048463:sub    esp, 0x8
    ax = v7378
    cx = v7379
    dx = v7380
    bx = v7381
    sp = v7382-0xc [from 0x8048463:sub    esp, 0x8]
    bp = v7382-0x4 [from 0x8048460:push   ebp]
    si = v7384
    di = v7385
    es = v7386
    cs = v7387
    ss = v7388
    ds = v7389
    fs = v7390
    gs = v7391
    cf = -v7509-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7393
    pf = -v7503-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7395
    af = -v7507-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7397
    zf = v7506 [from 0x8048463:sub    esp, 0x8]
    sf = v7505 [from 0x8048463:sub    esp, 0x8]
    tf = v7400
    if = v7401
    df = v7402
    of = v7513 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7404
    iopl1 = v7405
    nt = v7406
    ?15 = v7407
    memory = {
        size=4; addr=v7382-0x4 [from 0x8048460:push   ebp]; value=v7383
    }
0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v7378
    cx = v7379
    dx = v7380
    bx = v7381
    sp = v7382-0xc [from 0x8048463:sub    esp, 0x8]
    bp = v7382-0x4 [from 0x8048460:push   ebp]
    si = v7384
    di = v7385
    es = v7386
    cs = v7387
    ss = v7388
    ds = v7389
    fs = v7390
    gs = v7391
    cf = -v7509-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7393
    pf = -v7503-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7395
    af = -v7507-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7397
    zf = v7506 [from 0x8048463:sub    esp, 0x8]
    sf = v7505 [from 0x8048463:sub    esp, 0x8]
    tf = v7400
    if = v7401
    df = v7402
    of = v7513 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7404
    iopl1 = v7405
    nt = v7406
    ?15 = v7407
    memory = {
        size=4; addr=v7382-0xc [from 0x8048463:sub    esp, 0x8]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v7382-0x4 [from 0x8048460:push   ebp]; value=v7383
    }
0x804846d:call   0x8048300
    ax = v7378
    cx = v7379
    dx = v7380
    bx = v7381
    sp = v7382-0x10 [from 0x804846d:call   0x8048300]
    bp = v7382-0x4 [from 0x8048460:push   ebp]
    si = v7384
    di = v7385
    es = v7386
    cs = v7387
    ss = v7388
    ds = v7389
    fs = v7390
    gs = v7391
    cf = -v7509-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7393
    pf = -v7503-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7395
    af = -v7507-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7397
    zf = v7506 [from 0x8048463:sub    esp, 0x8]
    sf = v7505 [from 0x8048463:sub    esp, 0x8]
    tf = v7400
    if = v7401
    df = v7402
    of = v7513 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7404
    iopl1 = v7405
    nt = v7406
    ?15 = v7407
    memory = {
        size=4; addr=v7382-0x10 [from 0x804846d:call   0x8048300]; value=0x8048472 [from 0x804846d:call   0x8048300]
        size=4; addr=v7382-0xc [from 0x8048463:sub    esp, 0x8]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v7382-0x4 [from 0x8048460:push   ebp]; value=v7383
    }
0x8048472:mov    DWORD PTR ss:[esp], 0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x0]
    }
0x8048479:call   0x8048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x0]
        size=4; addr=<top>; value=0x804847e [from 0x8048479:call   0x8048320]
    }
0x804847e:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "handler"
==============================================
0x8048480:push   ebp
    ax = v7841
    cx = v7842
    dx = v7843
    bx = v7844
    sp = v7845-0x4 [from 0x8048480:push   ebp]
    bp = v7846
    si = v7847
    di = v7848
    es = v7849
    cs = v7850
    ss = v7851
    ds = v7852
    fs = v7853
    gs = v7854
    cf = v7855
    ?1 = v7856
    pf = v7857
    ?3 = v7858
    af = v7859
    ?5 = v7860
    zf = v7861
    sf = v7862
    tf = v7863
    if = v7864
    df = v7865
    of = v7866
    iopl0 = v7867
    iopl1 = v7868
    nt = v7869
    ?15 = v7870
    memory = {
        size=4; addr=v7845-0x4 [from 0x8048480:push   ebp]; value=v7846
    }
0x8048481:mov    ebp, esp
    ax = v7841
    cx = v7842
    dx = v7843
    bx = v7844
    sp = v7845-0x4 [from 0x8048480:push   ebp]
    bp = v7845-0x4 [from 0x8048480:push   ebp]
    si = v7847
    di = v7848
    es = v7849
    cs = v7850
    ss = v7851
    ds = v7852
    fs = v7853
    gs = v7854
    cf = v7855
    ?1 = v7856
    pf = v7857
    ?3 = v7858
    af = v7859
    ?5 = v7860
    zf = v7861
    sf = v7862
    tf = v7863
    if = v7864
    df = v7865
    of = v7866
    iopl0 = v7867
    iopl1 = v7868
    nt = v7869
    ?15 = v7870
    memory = {
        size=4; addr=v7845-0x4 [from 0x8048480:push   ebp]; value=v7846
    }
0x8048483:sub    esp, 0x8
    ax = v7841
    cx = v7842
    dx = v7843
    bx = v7844
    sp = v7845-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7845-0x4 [from 0x8048480:push   ebp]
    si = v7847
    di = v7848
    es = v7849
    cs = v7850
    ss = v7851
    ds = v7852
    fs = v7853
    gs = v7854
    cf = -v7972-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7856
    pf = -v7966-0x1 [from 0x8048483:sub    esp, 0x8]
    ?3 = v7858
    af = -v7970-0x1 [from 0x8048483:sub    esp, 0x8]
    ?5 = v7860
    zf = v7969 [from 0x8048483:sub    esp, 0x8]
    sf = v7968 [from 0x8048483:sub    esp, 0x8]
    tf = v7863
    if = v7864
    df = v7865
    of = v7976 [from 0x8048483:sub    esp, 0x8]
    iopl0 = v7867
    iopl1 = v7868
    nt = v7869
    ?15 = v7870
    memory = {
        size=4; addr=v7845-0x4 [from 0x8048480:push   ebp]; value=v7846
    }
0x8048486:inc    DWORD PTR ds:[0x80496f8]
    ax = v7841
    cx = v7842
    dx = v7843
    bx = v7844
    sp = v7845-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7845-0x4 [from 0x8048480:push   ebp]
    si = v7847
    di = v7848
    es = v7849
    cs = v7850
    ss = v7851
    ds = v7852
    fs = v7853
    gs = v7854
    cf = -v7972-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7856
    pf = -v8036-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7858
    af = v8040 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7860
    zf = v8039 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v8038 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7863
    if = v7864
    df = v7865
    of = v8043 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7867
    iopl1 = v7868
    nt = v7869
    ?15 = v7870
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]; value=v8011+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    }
0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v7841
    cx = v7842
    dx = v7843
    bx = v7844
    sp = v7845-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7845-0x4 [from 0x8048480:push   ebp]
    si = v7847
    di = v7848
    es = v7849
    cs = v7850
    ss = v7851
    ds = v7852
    fs = v7853
    gs = v7854
    cf = -v7972-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7856
    pf = -v8036-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7858
    af = v8040 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7860
    zf = v8039 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v8038 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7863
    if = v7864
    df = v7865
    of = v8043 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7867
    iopl1 = v7868
    nt = v7869
    ?15 = v7870
    memory = {
        size=4; addr=v7845-0xc [from 0x8048483:sub    esp, 0x8]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4]
    }
0x8048493:call   0x8048300
    ax = v7841
    cx = v7842
    dx = v7843
    bx = v7844
    sp = v7845-0x10 [from 0x8048493:call   0x8048300]
    bp = v7845-0x4 [from 0x8048480:push   ebp]
    si = v7847
    di = v7848
    es = v7849
    cs = v7850
    ss = v7851
    ds = v7852
    fs = v7853
    gs = v7854
    cf = -v7972-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7856
    pf = -v8036-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7858
    af = v8040 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7860
    zf = v8039 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v8038 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7863
    if = v7864
    df = v7865
    of = v8043 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7867
    iopl1 = v7868
    nt = v7869
    ?15 = v7870
    memory = {
        size=4; addr=v7845-0x10 [from 0x8048493:call   0x8048300]; value=0x8048498 [from 0x8048493:call   0x8048300]
        size=4; addr=v7845-0xc [from 0x8048483:sub    esp, 0x8]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4]
    }
0x8048498:mov    DWORD PTR ss:[esp], 0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x0]
    }
0x804849f:call   0x8048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x0]
        size=4; addr=<top>; value=0x80484a4 [from 0x804849f:call   0x8048320]
    }
==============================================
Constant propagation in function "0x80484a4"
==============================================
0x80484a4:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484a5:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484a6:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484a7:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484a8:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484a9:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484aa:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484ab:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484ac:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484ad:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484ae:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
0x80484af:nop    
    ax = v8312
    cx = v8313
    dx = v8314
    bx = v8315
    sp = v8316
    bp = v8317
    si = v8318
    di = v8319
    es = v8320
    cs = v8321
    ss = v8322
    ds = v8323
    fs = v8324
    gs = v8325
    cf = v8326
    ?1 = v8327
    pf = v8328
    ?3 = v8329
    af = v8330
    ?5 = v8331
    zf = v8332
    sf = v8333
    tf = v8334
    if = v8335
    df = v8336
    of = v8337
    iopl0 = v8338
    iopl1 = v8339
    nt = v8340
    ?15 = v8341
    memory = {}
==============================================
Constant propagation in function "__libc_csu_init"
==============================================
0x80484b0:push   ebp
    ax = v8786
    cx = v8787
    dx = v8788
    bx = v8789
    sp = v8790-0x4 [from 0x80484b0:push   ebp]
    bp = v8791
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = v8800
    ?1 = v8801
    pf = v8802
    ?3 = v8803
    af = v8804
    ?5 = v8805
    zf = v8806
    sf = v8807
    tf = v8808
    if = v8809
    df = v8810
    of = v8811
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484b1:mov    ebp, esp
    ax = v8786
    cx = v8787
    dx = v8788
    bx = v8789
    sp = v8790-0x4 [from 0x80484b0:push   ebp]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = v8800
    ?1 = v8801
    pf = v8802
    ?3 = v8803
    af = v8804
    ?5 = v8805
    zf = v8806
    sf = v8807
    tf = v8808
    if = v8809
    df = v8810
    of = v8811
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484b3:push   edi
    ax = v8786
    cx = v8787
    dx = v8788
    bx = v8789
    sp = v8790-0x8 [from 0x80484b3:push   edi]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = v8800
    ?1 = v8801
    pf = v8802
    ?3 = v8803
    af = v8804
    ?5 = v8805
    zf = v8806
    sf = v8807
    tf = v8808
    if = v8809
    df = v8810
    of = v8811
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x8 [from 0x80484b3:push   edi]; value=v8793
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484b4:push   esi
    ax = v8786
    cx = v8787
    dx = v8788
    bx = v8789
    sp = v8790-0xc [from 0x80484b4:push   esi]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = v8800
    ?1 = v8801
    pf = v8802
    ?3 = v8803
    af = v8804
    ?5 = v8805
    zf = v8806
    sf = v8807
    tf = v8808
    if = v8809
    df = v8810
    of = v8811
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0xc [from 0x80484b4:push   esi]; value=v8792
        size=4; addr=v8790-0x8 [from 0x80484b3:push   edi]; value=v8793
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484b5:push   ebx
    ax = v8786
    cx = v8787
    dx = v8788
    bx = v8789
    sp = v8790-0x10 [from 0x80484b5:push   ebx]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = v8800
    ?1 = v8801
    pf = v8802
    ?3 = v8803
    af = v8804
    ?5 = v8805
    zf = v8806
    sf = v8807
    tf = v8808
    if = v8809
    df = v8810
    of = v8811
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x10 [from 0x80484b5:push   ebx]; value=v8789
        size=4; addr=v8790-0xc [from 0x80484b4:push   esi]; value=v8792
        size=4; addr=v8790-0x8 [from 0x80484b3:push   edi]; value=v8793
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484b6:sub    esp, 0xc
    ax = v8786
    cx = v8787
    dx = v8788
    bx = v8789
    sp = v8790-0x1c [from 0x80484b6:sub    esp, 0xc]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = -v9025-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8801
    pf = -v9019-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8803
    af = -v9023-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8805
    zf = v9022 [from 0x80484b6:sub    esp, 0xc]
    sf = v9021 [from 0x80484b6:sub    esp, 0xc]
    tf = v8808
    if = v8809
    df = v8810
    of = v9029 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x10 [from 0x80484b5:push   ebx]; value=v8789
        size=4; addr=v8790-0xc [from 0x80484b4:push   esi]; value=v8792
        size=4; addr=v8790-0x8 [from 0x80484b3:push   edi]; value=v8793
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484b9:call   0x80484be
    ax = v8786
    cx = v8787
    dx = v8788
    bx = v8789
    sp = v8790-0x20 [from 0x80484b9:call   0x80484be]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = -v9025-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8801
    pf = -v9019-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8803
    af = -v9023-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8805
    zf = v9022 [from 0x80484b6:sub    esp, 0xc]
    sf = v9021 [from 0x80484b6:sub    esp, 0xc]
    tf = v8808
    if = v8809
    df = v8810
    of = v9029 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8790-0x10 [from 0x80484b5:push   ebx]; value=v8789
        size=4; addr=v8790-0xc [from 0x80484b4:push   esi]; value=v8792
        size=4; addr=v8790-0x8 [from 0x80484b3:push   edi]; value=v8793
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484be:pop    ebx
    ax = v8786
    cx = v8787
    dx = v8788
    bx = 0x80484be [from 0x80484b9:call   0x80484be]
    sp = v8790-0x1c [from 0x80484be:pop    ebx]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = -v9025-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8801
    pf = -v9019-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8803
    af = -v9023-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8805
    zf = v9022 [from 0x80484b6:sub    esp, 0xc]
    sf = v9021 [from 0x80484b6:sub    esp, 0xc]
    tf = v8808
    if = v8809
    df = v8810
    of = v9029 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8790-0x10 [from 0x80484b5:push   ebx]; value=v8789
        size=4; addr=v8790-0xc [from 0x80484b4:push   esi]; value=v8792
        size=4; addr=v8790-0x8 [from 0x80484b3:push   edi]; value=v8793
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484bf:add    ebx, 0x120a
    ax = v8786
    cx = v8787
    dx = v8788
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x120a]
    sp = v8790-0x1c [from 0x80484be:pop    ebx]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?1 = v8801
    pf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?3 = v8803
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x120a]
    ?5 = v8805
    zf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    tf = v8808
    if = v8809
    df = v8810
    of = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8790-0x10 [from 0x80484b5:push   ebx]; value=v8789
        size=4; addr=v8790-0xc [from 0x80484b4:push   esi]; value=v8792
        size=4; addr=v8790-0x8 [from 0x80484b3:push   edi]; value=v8793
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484c5:call   0x80482c8
    ax = v8786
    cx = v8787
    dx = v8788
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x120a]
    sp = v8790-0x20 [from 0x80484c5:call   0x80482c8]
    bp = v8790-0x4 [from 0x80484b0:push   ebp]
    si = v8792
    di = v8793
    es = v8794
    cs = v8795
    ss = v8796
    ds = v8797
    fs = v8798
    gs = v8799
    cf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?1 = v8801
    pf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?3 = v8803
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x120a]
    ?5 = v8805
    zf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    tf = v8808
    if = v8809
    df = v8810
    of = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    iopl0 = v8812
    iopl1 = v8813
    nt = v8814
    ?15 = v8815
    memory = {
        size=4; addr=v8790-0x20 [from 0x80484c5:call   0x80482c8]; value=0x80484ca [from 0x80484c5:call   0x80482c8]
        size=4; addr=v8790-0x10 [from 0x80484b5:push   ebx]; value=v8789
        size=4; addr=v8790-0xc [from 0x80484b4:push   esi]; value=v8792
        size=4; addr=v8790-0x8 [from 0x80484b3:push   edi]; value=v8793
        size=4; addr=v8790-0x4 [from 0x80484b0:push   ebp]; value=v8791
    }
0x80484ca:lea    eax, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d0:lea    edx, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d6:sub    eax, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d8:sar    eax, 0x2
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484de:jne    0x80484f0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e0:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e3:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9610 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e4:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9610 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v9646 [from 0x80484e4:pop    esi]
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e5:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9610 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v9646 [from 0x80484e4:pop    esi]
    di = v9682 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e6:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9610 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v9718 [from 0x80484e6:pop    ebp]
    si = v9646 [from 0x80484e4:pop    esi]
    di = v9682 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e7:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9610 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v9718 [from 0x80484e6:pop    ebp]
    si = v9646 [from 0x80484e4:pop    esi]
    di = v9682 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e9:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f0:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f2:mov    esi, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f4:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484fa:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048500:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
0x8048502:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048503:add    esi, 0x4
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048509:jb     0x8048500
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850b:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850e:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850f:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048510:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048511:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048512:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048513:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048519:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_fini"
==============================================
0x8048520:push   ebp
    ax = v10687
    cx = v10688
    dx = v10689
    bx = v10690
    sp = v10691-0x4 [from 0x8048520:push   ebp]
    bp = v10692
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = v10701
    ?1 = v10702
    pf = v10703
    ?3 = v10704
    af = v10705
    ?5 = v10706
    zf = v10707
    sf = v10708
    tf = v10709
    if = v10710
    df = v10711
    of = v10712
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048521:mov    ebp, esp
    ax = v10687
    cx = v10688
    dx = v10689
    bx = v10690
    sp = v10691-0x4 [from 0x8048520:push   ebp]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = v10701
    ?1 = v10702
    pf = v10703
    ?3 = v10704
    af = v10705
    ?5 = v10706
    zf = v10707
    sf = v10708
    tf = v10709
    if = v10710
    df = v10711
    of = v10712
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048523:push   edi
    ax = v10687
    cx = v10688
    dx = v10689
    bx = v10690
    sp = v10691-0x8 [from 0x8048523:push   edi]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = v10701
    ?1 = v10702
    pf = v10703
    ?3 = v10704
    af = v10705
    ?5 = v10706
    zf = v10707
    sf = v10708
    tf = v10709
    if = v10710
    df = v10711
    of = v10712
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048524:push   esi
    ax = v10687
    cx = v10688
    dx = v10689
    bx = v10690
    sp = v10691-0xc [from 0x8048524:push   esi]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = v10701
    ?1 = v10702
    pf = v10703
    ?3 = v10704
    af = v10705
    ?5 = v10706
    zf = v10707
    sf = v10708
    tf = v10709
    if = v10710
    df = v10711
    of = v10712
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048525:push   ebx
    ax = v10687
    cx = v10688
    dx = v10689
    bx = v10690
    sp = v10691-0x10 [from 0x8048525:push   ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = v10701
    ?1 = v10702
    pf = v10703
    ?3 = v10704
    af = v10705
    ?5 = v10706
    zf = v10707
    sf = v10708
    tf = v10709
    if = v10710
    df = v10711
    of = v10712
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048526:sub    esp, 0xc
    ax = v10687
    cx = v10688
    dx = v10689
    bx = v10690
    sp = v10691-0x1c [from 0x8048526:sub    esp, 0xc]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = -v10926-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10702
    pf = -v10920-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10704
    af = -v10924-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10706
    zf = v10923 [from 0x8048526:sub    esp, 0xc]
    sf = v10922 [from 0x8048526:sub    esp, 0xc]
    tf = v10709
    if = v10710
    df = v10711
    of = v10930 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048529:call   0x804852e
    ax = v10687
    cx = v10688
    dx = v10689
    bx = v10690
    sp = v10691-0x20 [from 0x8048529:call   0x804852e]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = -v10926-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10702
    pf = -v10920-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10704
    af = -v10924-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10706
    zf = v10923 [from 0x8048526:sub    esp, 0xc]
    sf = v10922 [from 0x8048526:sub    esp, 0xc]
    tf = v10709
    if = v10710
    df = v10711
    of = v10930 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x804852e:pop    ebx
    ax = v10687
    cx = v10688
    dx = v10689
    bx = 0x804852e [from 0x8048529:call   0x804852e]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = -v10926-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10702
    pf = -v10920-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10704
    af = -v10924-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10706
    zf = v10923 [from 0x8048526:sub    esp, 0xc]
    sf = v10922 [from 0x8048526:sub    esp, 0xc]
    tf = v10709
    if = v10710
    df = v10711
    of = v10930 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x804852f:add    ebx, 0x119a
    ax = v10687
    cx = v10688
    dx = v10689
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10702
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10704
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10706
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048535:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v10688
    dx = v10689
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10702
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10704
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10706
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x804853b:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v10688
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10702
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10704
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10706
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048541:sub    eax, edx
    ax = 0x0 [from 0x8048541:sub    eax, edx]
    cx = v10688
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x8048541:sub    eax, edx]
    ?1 = v10702
    pf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    ?3 = v10704
    af = 0x0 [from 0x8048541:sub    eax, edx]
    ?5 = v10706
    zf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    sf = 0x0 [from 0x8048541:sub    eax, edx]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x8048541:sub    eax, edx]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048543:sar    eax, 0x2
    ax = 0x0 [from 0x8048543:sar    eax, 0x2]
    cx = v10688
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10702
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    ?3 = v10704
    af = <top>
    ?5 = v10706
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    sf = 0x0 [from 0x8048543:sar    eax, 0x2]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x8048543:sar    eax, 0x2]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = 0x0 [from 0x8048543:sar    eax, 0x2]
    cx = v10688
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10702
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    ?3 = v10704
    af = <top>
    ?5 = v10706
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    sf = 0x0 [from 0x8048543:sar    eax, 0x2]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x8048543:sar    eax, 0x2]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048549:dec    eax
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10688
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10702
    pf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?3 = v10704
    af = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?5 = v10706
    zf = 0x0 [from 0x8048549:dec    eax]
    sf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x8048549:dec    eax]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x804854a:cmp    eax, 0xff
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10688
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v10702
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v10704
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v10706
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x804854d:je     0x804856b
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10688
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x1c [from 0x804852e:pop    ebx]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v10702
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v10704
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v10706
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10691-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x804854f:lea    esi, [edx + eax*0x4]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048552:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048554:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804855a:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048560:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
0x8048562:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048563:sub    esi, 0x4
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0], edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048569:jne    0x8048560
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804856b:call   0x80485b0
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10688
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10691-0x20 [from 0x804856b:call   0x80485b0]
    bp = v10691-0x4 [from 0x8048520:push   ebp]
    si = v10693
    di = v10694
    es = v10695
    cs = v10696
    ss = v10697
    ds = v10698
    fs = v10699
    gs = v10700
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v10702
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v10704
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v10706
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v10709
    if = v10710
    df = v10711
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v10713
    iopl1 = v10714
    nt = v10715
    ?15 = v10716
    memory = {
        size=4; addr=v10691-0x20 [from 0x804856b:call   0x80485b0]; value=0x8048570 [from 0x804856b:call   0x80485b0]
        size=4; addr=v10691-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10691-0x10 [from 0x8048525:push   ebx]; value=v10690
        size=4; addr=v10691-0xc [from 0x8048524:push   esi]; value=v10693
        size=4; addr=v10691-0x8 [from 0x8048523:push   edi]; value=v10694
        size=4; addr=v10691-0x4 [from 0x8048520:push   ebp]; value=v10692
    }
0x8048570:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048573:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048574:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048575:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048576:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048577:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048578"
==============================================
0x8048578:nop    
    ax = v12319
    cx = v12320
    dx = v12321
    bx = v12322
    sp = v12323
    bp = v12324
    si = v12325
    di = v12326
    es = v12327
    cs = v12328
    ss = v12329
    ds = v12330
    fs = v12331
    gs = v12332
    cf = v12333
    ?1 = v12334
    pf = v12335
    ?3 = v12336
    af = v12337
    ?5 = v12338
    zf = v12339
    sf = v12340
    tf = v12341
    if = v12342
    df = v12343
    of = v12344
    iopl0 = v12345
    iopl1 = v12346
    nt = v12347
    ?15 = v12348
    memory = {}
0x8048579:nop    
    ax = v12319
    cx = v12320
    dx = v12321
    bx = v12322
    sp = v12323
    bp = v12324
    si = v12325
    di = v12326
    es = v12327
    cs = v12328
    ss = v12329
    ds = v12330
    fs = v12331
    gs = v12332
    cf = v12333
    ?1 = v12334
    pf = v12335
    ?3 = v12336
    af = v12337
    ?5 = v12338
    zf = v12339
    sf = v12340
    tf = v12341
    if = v12342
    df = v12343
    of = v12344
    iopl0 = v12345
    iopl1 = v12346
    nt = v12347
    ?15 = v12348
    memory = {}
0x804857a:nop    
    ax = v12319
    cx = v12320
    dx = v12321
    bx = v12322
    sp = v12323
    bp = v12324
    si = v12325
    di = v12326
    es = v12327
    cs = v12328
    ss = v12329
    ds = v12330
    fs = v12331
    gs = v12332
    cf = v12333
    ?1 = v12334
    pf = v12335
    ?3 = v12336
    af = v12337
    ?5 = v12338
    zf = v12339
    sf = v12340
    tf = v12341
    if = v12342
    df = v12343
    of = v12344
    iopl0 = v12345
    iopl1 = v12346
    nt = v12347
    ?15 = v12348
    memory = {}
0x804857b:nop    
    ax = v12319
    cx = v12320
    dx = v12321
    bx = v12322
    sp = v12323
    bp = v12324
    si = v12325
    di = v12326
    es = v12327
    cs = v12328
    ss = v12329
    ds = v12330
    fs = v12331
    gs = v12332
    cf = v12333
    ?1 = v12334
    pf = v12335
    ?3 = v12336
    af = v12337
    ?5 = v12338
    zf = v12339
    sf = v12340
    tf = v12341
    if = v12342
    df = v12343
    of = v12344
    iopl0 = v12345
    iopl1 = v12346
    nt = v12347
    ?15 = v12348
    memory = {}
0x804857c:nop    
    ax = v12319
    cx = v12320
    dx = v12321
    bx = v12322
    sp = v12323
    bp = v12324
    si = v12325
    di = v12326
    es = v12327
    cs = v12328
    ss = v12329
    ds = v12330
    fs = v12331
    gs = v12332
    cf = v12333
    ?1 = v12334
    pf = v12335
    ?3 = v12336
    af = v12337
    ?5 = v12338
    zf = v12339
    sf = v12340
    tf = v12341
    if = v12342
    df = v12343
    of = v12344
    iopl0 = v12345
    iopl1 = v12346
    nt = v12347
    ?15 = v12348
    memory = {}
0x804857d:nop    
    ax = v12319
    cx = v12320
    dx = v12321
    bx = v12322
    sp = v12323
    bp = v12324
    si = v12325
    di = v12326
    es = v12327
    cs = v12328
    ss = v12329
    ds = v12330
    fs = v12331
    gs = v12332
    cf = v12333
    ?1 = v12334
    pf = v12335
    ?3 = v12336
    af = v12337
    ?5 = v12338
    zf = v12339
    sf = v12340
    tf = v12341
    if = v12342
    df = v12343
    of = v12344
    iopl0 = v12345
    iopl1 = v12346
    nt = v12347
    ?15 = v12348
    memory = {}
0x804857e:nop    
    ax = v12319
    cx = v12320
    dx = v12321
    bx = v12322
    sp = v12323
    bp = v12324
    si = v12325
    di = v12326
    es = v12327
    cs = v12328
    ss = v12329
    ds = v12330
    fs = v12331
    gs = v12332
    cf = v12333
    ?1 = v12334
    pf = v12335
    ?3 = v12336
    af = v12337
    ?5 = v12338
    zf = v12339
    sf = v12340
    tf = v12341
    if = v12342
    df = v12343
    of = v12344
    iopl0 = v12345
    iopl1 = v12346
    nt = v12347
    ?15 = v12348
    memory = {}
0x804857f:nop    
    ax = v12319
    cx = v12320
    dx = v12321
    bx = v12322
    sp = v12323
    bp = v12324
    si = v12325
    di = v12326
    es = v12327
    cs = v12328
    ss = v12329
    ds = v12330
    fs = v12331
    gs = v12332
    cf = v12333
    ?1 = v12334
    pf = v12335
    ?3 = v12336
    af = v12337
    ?5 = v12338
    zf = v12339
    sf = v12340
    tf = v12341
    if = v12342
    df = v12343
    of = v12344
    iopl0 = v12345
    iopl1 = v12346
    nt = v12347
    ?15 = v12348
    memory = {}
==============================================
Constant propagation in function "__do_global_ctors_aux"
==============================================
0x8048580:push   ebp
    ax = v12665
    cx = v12666
    dx = v12667
    bx = v12668
    sp = v12669-0x4 [from 0x8048580:push   ebp]
    bp = v12670
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = v12679
    ?1 = v12680
    pf = v12681
    ?3 = v12682
    af = v12683
    ?5 = v12684
    zf = v12685
    sf = v12686
    tf = v12687
    if = v12688
    df = v12689
    of = v12690
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x8048581:mov    ebp, esp
    ax = v12665
    cx = v12666
    dx = v12667
    bx = v12668
    sp = v12669-0x4 [from 0x8048580:push   ebp]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = v12679
    ?1 = v12680
    pf = v12681
    ?3 = v12682
    af = v12683
    ?5 = v12684
    zf = v12685
    sf = v12686
    tf = v12687
    if = v12688
    df = v12689
    of = v12690
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x8048583:push   ebx
    ax = v12665
    cx = v12666
    dx = v12667
    bx = v12668
    sp = v12669-0x8 [from 0x8048583:push   ebx]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = v12679
    ?1 = v12680
    pf = v12681
    ?3 = v12682
    af = v12683
    ?5 = v12684
    zf = v12685
    sf = v12686
    tf = v12687
    if = v12688
    df = v12689
    of = v12690
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x8048584:sub    esp, 0x4
    ax = v12665
    cx = v12666
    dx = v12667
    bx = v12668
    sp = v12669-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12832-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12680
    pf = -v12826-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12682
    af = -v12830-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12684
    zf = v12829 [from 0x8048584:sub    esp, 0x4]
    sf = v12828 [from 0x8048584:sub    esp, 0x4]
    tf = v12687
    if = v12688
    df = v12689
    of = v12836 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x8048587:mov    ebx, 0x80495e8
    ax = v12665
    cx = v12666
    dx = v12667
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12669-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12832-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12680
    pf = -v12826-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12682
    af = -v12830-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12684
    zf = v12829 [from 0x8048584:sub    esp, 0x4]
    sf = v12828 [from 0x8048584:sub    esp, 0x4]
    tf = v12687
    if = v12688
    df = v12689
    of = v12836 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]
    ax = v12904 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12666
    dx = v12667
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12669-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12832-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12680
    pf = -v12826-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12682
    af = -v12830-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12684
    zf = v12829 [from 0x8048584:sub    esp, 0x4]
    sf = v12828 [from 0x8048584:sub    esp, 0x4]
    tf = v12687
    if = v12688
    df = v12689
    of = v12836 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x8048591:cmp    eax, 0xff
    ax = v12904 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12666
    dx = v12667
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12669-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12969-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12680
    pf = -v12963-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12682
    af = -v12967-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12684
    zf = v12966 [from 0x8048591:cmp    eax, 0xff]
    sf = v12965 [from 0x8048591:cmp    eax, 0xff]
    tf = v12687
    if = v12688
    df = v12689
    of = v12973 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x8048594:je     0x80485ac
    ax = v12904 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12666
    dx = v12667
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12669-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12969-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12680
    pf = -v12963-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12682
    af = -v12967-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12684
    zf = v12966 [from 0x8048591:cmp    eax, 0xff]
    sf = v12965 [from 0x8048591:cmp    eax, 0xff]
    tf = v12687
    if = v12688
    df = v12689
    of = v12973 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x8048596:lea    esi, [esi + 0x0]
    ax = v12904 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12666
    dx = v12667
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12669-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12969-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12680
    pf = -v12963-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12682
    af = -v12967-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12684
    zf = v12966 [from 0x8048591:cmp    eax, 0xff]
    sf = v12965 [from 0x8048591:cmp    eax, 0xff]
    tf = v12687
    if = v12688
    df = v12689
    of = v12973 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x8048599:lea    edi, [edi + 0x0]
    ax = v12904 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12666
    dx = v12667
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12669-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12672 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12969-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12680
    pf = -v12963-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12682
    af = -v12967-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12684
    zf = v12966 [from 0x8048591:cmp    eax, 0xff]
    sf = v12965 [from 0x8048591:cmp    eax, 0xff]
    tf = v12687
    if = v12688
    df = v12689
    of = v12973 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x80485a0:sub    ebx, 0x4
    ax = v12904 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12666
    dx = v12667
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x4]
    sp = v12669-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12672 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?1 = v12680
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x4]
    ?3 = v12682
    af = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?5 = v12684
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    tf = v12687
    if = v12688
    df = v12689
    of = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x80485a3:call   eax
    ax = v12904 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12666
    dx = v12667
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x4]
    sp = v12669-0x10 [from 0x80485a3:call   eax]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12672 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?1 = v12680
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x4]
    ?3 = v12682
    af = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?5 = v12684
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    tf = v12687
    if = v12688
    df = v12689
    of = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x10 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485a7:cmp    eax, 0xff
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485aa:jne    0x80485a0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485ac:pop    eax
    ax = v13354 [from 0x80485ac:pop    eax]
    cx = v12666
    dx = v12667
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12669-0x8 [from 0x80485ac:pop    eax]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12969-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12680
    pf = -v12963-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12682
    af = -v12967-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12684
    zf = v12966 [from 0x8048591:cmp    eax, 0xff]
    sf = v12965 [from 0x8048591:cmp    eax, 0xff]
    tf = v12687
    if = v12688
    df = v12689
    of = v12973 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x80485ad:pop    ebx
    ax = v13354 [from 0x80485ac:pop    eax]
    cx = v12666
    dx = v12667
    bx = v12668
    sp = v12669-0x4 [from 0x80485ad:pop    ebx]
    bp = v12669-0x4 [from 0x8048580:push   ebp]
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12969-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12680
    pf = -v12963-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12682
    af = -v12967-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12684
    zf = v12966 [from 0x8048591:cmp    eax, 0xff]
    sf = v12965 [from 0x8048591:cmp    eax, 0xff]
    tf = v12687
    if = v12688
    df = v12689
    of = v12973 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x80485ae:pop    ebp
    ax = v13354 [from 0x80485ac:pop    eax]
    cx = v12666
    dx = v12667
    bx = v12668
    sp = v12669 [from 0x80485ae:pop    ebp]
    bp = v12670
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12969-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12680
    pf = -v12963-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12682
    af = -v12967-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12684
    zf = v12966 [from 0x8048591:cmp    eax, 0xff]
    sf = v12965 [from 0x8048591:cmp    eax, 0xff]
    tf = v12687
    if = v12688
    df = v12689
    of = v12973 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
0x80485af:ret    
    ax = v13354 [from 0x80485ac:pop    eax]
    cx = v12666
    dx = v12667
    bx = v12668
    sp = v12669+0x4 [from 0x80485af:ret    ]
    bp = v12670
    si = v12671
    di = v12672
    es = v12673
    cs = v12674
    ss = v12675
    ds = v12676
    fs = v12677
    gs = v12678
    cf = -v12969-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12680
    pf = -v12963-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12682
    af = -v12967-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12684
    zf = v12966 [from 0x8048591:cmp    eax, 0xff]
    sf = v12965 [from 0x8048591:cmp    eax, 0xff]
    tf = v12687
    if = v12688
    df = v12689
    of = v12973 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12691
    iopl1 = v12692
    nt = v12693
    ?15 = v12694
    memory = {
        size=4; addr=v12669-0x8 [from 0x8048583:push   ebx]; value=v12668
        size=4; addr=v12669-0x4 [from 0x8048580:push   ebp]; value=v12670
    }
==============================================
Constant propagation in function "_fini"
==============================================
0x80485b0:push   ebp
    ax = v13526
    cx = v13527
    dx = v13528
    bx = v13529
    sp = v13530-0x4 [from 0x80485b0:push   ebp]
    bp = v13531
    si = v13532
    di = v13533
    es = v13534
    cs = v13535
    ss = v13536
    ds = v13537
    fs = v13538
    gs = v13539
    cf = v13540
    ?1 = v13541
    pf = v13542
    ?3 = v13543
    af = v13544
    ?5 = v13545
    zf = v13546
    sf = v13547
    tf = v13548
    if = v13549
    df = v13550
    of = v13551
    iopl0 = v13552
    iopl1 = v13553
    nt = v13554
    ?15 = v13555
    memory = {
        size=4; addr=v13530-0x4 [from 0x80485b0:push   ebp]; value=v13531
    }
0x80485b1:mov    ebp, esp
    ax = v13526
    cx = v13527
    dx = v13528
    bx = v13529
    sp = v13530-0x4 [from 0x80485b0:push   ebp]
    bp = v13530-0x4 [from 0x80485b0:push   ebp]
    si = v13532
    di = v13533
    es = v13534
    cs = v13535
    ss = v13536
    ds = v13537
    fs = v13538
    gs = v13539
    cf = v13540
    ?1 = v13541
    pf = v13542
    ?3 = v13543
    af = v13544
    ?5 = v13545
    zf = v13546
    sf = v13547
    tf = v13548
    if = v13549
    df = v13550
    of = v13551
    iopl0 = v13552
    iopl1 = v13553
    nt = v13554
    ?15 = v13555
    memory = {
        size=4; addr=v13530-0x4 [from 0x80485b0:push   ebp]; value=v13531
    }
0x80485b3:push   ebx
    ax = v13526
    cx = v13527
    dx = v13528
    bx = v13529
    sp = v13530-0x8 [from 0x80485b3:push   ebx]
    bp = v13530-0x4 [from 0x80485b0:push   ebp]
    si = v13532
    di = v13533
    es = v13534
    cs = v13535
    ss = v13536
    ds = v13537
    fs = v13538
    gs = v13539
    cf = v13540
    ?1 = v13541
    pf = v13542
    ?3 = v13543
    af = v13544
    ?5 = v13545
    zf = v13546
    sf = v13547
    tf = v13548
    if = v13549
    df = v13550
    of = v13551
    iopl0 = v13552
    iopl1 = v13553
    nt = v13554
    ?15 = v13555
    memory = {
        size=4; addr=v13530-0x8 [from 0x80485b3:push   ebx]; value=v13529
        size=4; addr=v13530-0x4 [from 0x80485b0:push   ebp]; value=v13531
    }
0x80485b4:push   eax
    ax = v13526
    cx = v13527
    dx = v13528
    bx = v13529
    sp = v13530-0xc [from 0x80485b4:push   eax]
    bp = v13530-0x4 [from 0x80485b0:push   ebp]
    si = v13532
    di = v13533
    es = v13534
    cs = v13535
    ss = v13536
    ds = v13537
    fs = v13538
    gs = v13539
    cf = v13540
    ?1 = v13541
    pf = v13542
    ?3 = v13543
    af = v13544
    ?5 = v13545
    zf = v13546
    sf = v13547
    tf = v13548
    if = v13549
    df = v13550
    of = v13551
    iopl0 = v13552
    iopl1 = v13553
    nt = v13554
    ?15 = v13555
    memory = {
        size=4; addr=v13530-0xc [from 0x80485b4:push   eax]; value=v13526
        size=4; addr=v13530-0x8 [from 0x80485b3:push   ebx]; value=v13529
        size=4; addr=v13530-0x4 [from 0x80485b0:push   ebp]; value=v13531
    }
0x80485b5:call   0x80485ba
    ax = v13526
    cx = v13527
    dx = v13528
    bx = v13529
    sp = v13530-0x10 [from 0x80485b5:call   0x80485ba]
    bp = v13530-0x4 [from 0x80485b0:push   ebp]
    si = v13532
    di = v13533
    es = v13534
    cs = v13535
    ss = v13536
    ds = v13537
    fs = v13538
    gs = v13539
    cf = v13540
    ?1 = v13541
    pf = v13542
    ?3 = v13543
    af = v13544
    ?5 = v13545
    zf = v13546
    sf = v13547
    tf = v13548
    if = v13549
    df = v13550
    of = v13551
    iopl0 = v13552
    iopl1 = v13553
    nt = v13554
    ?15 = v13555
    memory = {
        size=4; addr=v13530-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13530-0xc [from 0x80485b4:push   eax]; value=v13526
        size=4; addr=v13530-0x8 [from 0x80485b3:push   ebx]; value=v13529
        size=4; addr=v13530-0x4 [from 0x80485b0:push   ebp]; value=v13531
    }
0x80485ba:pop    ebx
    ax = v13526
    cx = v13527
    dx = v13528
    bx = 0x80485ba [from 0x80485b5:call   0x80485ba]
    sp = v13530-0xc [from 0x80485ba:pop    ebx]
    bp = v13530-0x4 [from 0x80485b0:push   ebp]
    si = v13532
    di = v13533
    es = v13534
    cs = v13535
    ss = v13536
    ds = v13537
    fs = v13538
    gs = v13539
    cf = v13540
    ?1 = v13541
    pf = v13542
    ?3 = v13543
    af = v13544
    ?5 = v13545
    zf = v13546
    sf = v13547
    tf = v13548
    if = v13549
    df = v13550
    of = v13551
    iopl0 = v13552
    iopl1 = v13553
    nt = v13554
    ?15 = v13555
    memory = {
        size=4; addr=v13530-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13530-0xc [from 0x80485b4:push   eax]; value=v13526
        size=4; addr=v13530-0x8 [from 0x80485b3:push   ebx]; value=v13529
        size=4; addr=v13530-0x4 [from 0x80485b0:push   ebp]; value=v13531
    }
0x80485bb:add    ebx, 0x110e
    ax = v13526
    cx = v13527
    dx = v13528
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x110e]
    sp = v13530-0xc [from 0x80485ba:pop    ebx]
    bp = v13530-0x4 [from 0x80485b0:push   ebp]
    si = v13532
    di = v13533
    es = v13534
    cs = v13535
    ss = v13536
    ds = v13537
    fs = v13538
    gs = v13539
    cf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?1 = v13541
    pf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?3 = v13543
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x110e]
    ?5 = v13545
    zf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    tf = v13548
    if = v13549
    df = v13550
    of = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    iopl0 = v13552
    iopl1 = v13553
    nt = v13554
    ?15 = v13555
    memory = {
        size=4; addr=v13530-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13530-0xc [from 0x80485b4:push   eax]; value=v13526
        size=4; addr=v13530-0x8 [from 0x80485b3:push   ebx]; value=v13529
        size=4; addr=v13530-0x4 [from 0x80485b0:push   ebp]; value=v13531
    }
0x80485c1:call   0x8048390
    ax = v13526
    cx = v13527
    dx = v13528
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x110e]
    sp = v13530-0x10 [from 0x80485c1:call   0x8048390]
    bp = v13530-0x4 [from 0x80485b0:push   ebp]
    si = v13532
    di = v13533
    es = v13534
    cs = v13535
    ss = v13536
    ds = v13537
    fs = v13538
    gs = v13539
    cf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?1 = v13541
    pf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?3 = v13543
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x110e]
    ?5 = v13545
    zf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    tf = v13548
    if = v13549
    df = v13550
    of = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    iopl0 = v13552
    iopl1 = v13553
    nt = v13554
    ?15 = v13555
    memory = {
        size=4; addr=v13530-0x10 [from 0x80485c1:call   0x8048390]; value=0x80485c6 [from 0x80485c1:call   0x8048390]
        size=4; addr=v13530-0xc [from 0x80485b4:push   eax]; value=v13526
        size=4; addr=v13530-0x8 [from 0x80485b3:push   ebx]; value=v13529
        size=4; addr=v13530-0x4 [from 0x80485b0:push   ebp]; value=v13531
    }
0x80485c6:pop    eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c7:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c8:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c9:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
analyzed headers: 1
