==============================================
Constant propagation in function "_init"
==============================================
0x80482c8:push   ebp
    ax = v25723
    cx = v25724
    dx = v25725
    bx = v25726
    sp = v25727-0x4 [from 0x80482c8:push   ebp]
    bp = v25728
    si = v25729
    di = v25730
    es = v25731
    cs = v25732
    ss = v25733
    ds = v25734
    fs = v25735
    gs = v25736
    cf = v25737
    ?1 = v25738
    pf = v25739
    ?3 = v25740
    af = v25741
    ?5 = v25742
    zf = v25743
    sf = v25744
    tf = v25745
    if = v25746
    df = v25747
    of = v25748
    iopl0 = v25749
    iopl1 = v25750
    nt = v25751
    ?15 = v25752
    memory = {
        size=4; addr=v25727-0x4 [from 0x80482c8:push   ebp]; value=v25728
    }
0x80482c9:mov    ebp, esp
    ax = v25723
    cx = v25724
    dx = v25725
    bx = v25726
    sp = v25727-0x4 [from 0x80482c8:push   ebp]
    bp = v25727-0x4 [from 0x80482c8:push   ebp]
    si = v25729
    di = v25730
    es = v25731
    cs = v25732
    ss = v25733
    ds = v25734
    fs = v25735
    gs = v25736
    cf = v25737
    ?1 = v25738
    pf = v25739
    ?3 = v25740
    af = v25741
    ?5 = v25742
    zf = v25743
    sf = v25744
    tf = v25745
    if = v25746
    df = v25747
    of = v25748
    iopl0 = v25749
    iopl1 = v25750
    nt = v25751
    ?15 = v25752
    memory = {
        size=4; addr=v25727-0x4 [from 0x80482c8:push   ebp]; value=v25728
    }
0x80482cb:sub    esp, 0x8
    ax = v25723
    cx = v25724
    dx = v25725
    bx = v25726
    sp = v25727-0xc [from 0x80482cb:sub    esp, 0x8]
    bp = v25727-0x4 [from 0x80482c8:push   ebp]
    si = v25729
    di = v25730
    es = v25731
    cs = v25732
    ss = v25733
    ds = v25734
    fs = v25735
    gs = v25736
    cf = -v25854-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?1 = v25738
    pf = -v25848-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?3 = v25740
    af = -v25852-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?5 = v25742
    zf = v25851 [from 0x80482cb:sub    esp, 0x8]
    sf = v25850 [from 0x80482cb:sub    esp, 0x8]
    tf = v25745
    if = v25746
    df = v25747
    of = v25858 [from 0x80482cb:sub    esp, 0x8]
    iopl0 = v25749
    iopl1 = v25750
    nt = v25751
    ?15 = v25752
    memory = {
        size=4; addr=v25727-0x4 [from 0x80482c8:push   ebp]; value=v25728
    }
0x80482ce:call   0x8048364
    ax = v25723
    cx = v25724
    dx = v25725
    bx = v25726
    sp = v25727-0x10 [from 0x80482ce:call   0x8048364]
    bp = v25727-0x4 [from 0x80482c8:push   ebp]
    si = v25729
    di = v25730
    es = v25731
    cs = v25732
    ss = v25733
    ds = v25734
    fs = v25735
    gs = v25736
    cf = -v25854-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?1 = v25738
    pf = -v25848-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?3 = v25740
    af = -v25852-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?5 = v25742
    zf = v25851 [from 0x80482cb:sub    esp, 0x8]
    sf = v25850 [from 0x80482cb:sub    esp, 0x8]
    tf = v25745
    if = v25746
    df = v25747
    of = v25858 [from 0x80482cb:sub    esp, 0x8]
    iopl0 = v25749
    iopl1 = v25750
    nt = v25751
    ?15 = v25752
    memory = {
        size=4; addr=v25727-0x10 [from 0x80482ce:call   0x8048364]; value=0x80482d3 [from 0x80482ce:call   0x8048364]
        size=4; addr=v25727-0x4 [from 0x80482c8:push   ebp]; value=v25728
    }
0x80482d3:call   0x80483d0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482d8 [from 0x80482d3:call   0x80483d0]
    }
0x80482d8:call   0x8048580
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482dd [from 0x80482d8:call   0x8048580]
    }
0x80482dd:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482de:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482df:add    bh, bh
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482e1:xor    eax, 0x80496cc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482e6:jmp    DWORD PTR ds:[0x80496d0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x80482e0"
==============================================
0x80482e0:push   DWORD PTR ds:[0x80496cc]
    ax = v26386
    cx = v26387
    dx = v26388
    bx = v26389
    sp = v26390-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    bp = v26391
    si = v26392
    di = v26393
    es = v26394
    cs = v26395
    ss = v26396
    ds = v26397
    fs = v26398
    gs = v26399
    cf = v26400
    ?1 = v26401
    pf = v26402
    ?3 = v26403
    af = v26404
    ?5 = v26405
    zf = v26406
    sf = v26407
    tf = v26408
    if = v26409
    df = v26410
    of = v26411
    iopl0 = v26412
    iopl1 = v26413
    nt = v26414
    ?15 = v26415
    memory = {
        size=4; addr=v26390-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]; value=v26422 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    }
0x80482e6:jmp    DWORD PTR ds:[0x80496d0]
    ax = v26386
    cx = v26387
    dx = v26388
    bx = v26389
    sp = v26390-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    bp = v26391
    si = v26392
    di = v26393
    es = v26394
    cs = v26395
    ss = v26396
    ds = v26397
    fs = v26398
    gs = v26399
    cf = v26400
    ?1 = v26401
    pf = v26402
    ?3 = v26403
    af = v26404
    ?5 = v26405
    zf = v26406
    sf = v26407
    tf = v26408
    if = v26409
    df = v26410
    of = v26411
    iopl0 = v26412
    iopl1 = v26413
    nt = v26414
    ?15 = v26415
    memory = {
        size=4; addr=v26390-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]; value=v26422 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    }
==============================================
Constant propagation in function "0x80482ec"
==============================================
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = v26520
    cx = v26521
    dx = v26522
    bx = v26523
    sp = v26524
    bp = v26525
    si = v26526
    di = v26527
    es = v26528
    cs = v26529
    ss = v26530
    ds = v26531
    fs = v26532
    gs = v26533
    cf = v26582 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?1 = v26535
    pf = -v26577-0x1 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?3 = v26537
    af = v26581 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?5 = v26539
    zf = v26580 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    sf = v26579 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    tf = v26542
    if = v26543
    df = v26544
    of = v26585 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    iopl0 = v26546
    iopl1 = v26547
    nt = v26548
    ?15 = v26549
    memory = {
        size=1; addr=v26520; value=v53074 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = v26520
    cx = v26521
    dx = v26522
    bx = v26523
    sp = v26524
    bp = v26525
    si = v26526
    di = v26527
    es = v26528
    cs = v26529
    ss = v26530
    ds = v26531
    fs = v26532
    gs = v26533
    cf = v26651 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?1 = v26535
    pf = -v26646-0x1 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?3 = v26537
    af = v26650 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?5 = v26539
    zf = v26649 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    sf = v26648 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    tf = v26542
    if = v26543
    df = v26544
    of = v26654 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    iopl0 = v26546
    iopl1 = v26547
    nt = v26548
    ?15 = v26549
    memory = {
        size=1; addr=v26520; value=v79594 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    }
==============================================
Constant propagation in function "signal"
==============================================
0x80482f0:jmp    DWORD PTR ds:[0x80496d4]
    ax = v26748
    cx = v26749
    dx = v26750
    bx = v26751
    sp = v26752
    bp = v26753
    si = v26754
    di = v26755
    es = v26756
    cs = v26757
    ss = v26758
    ds = v26759
    fs = v26760
    gs = v26761
    cf = v26762
    ?1 = v26763
    pf = v26764
    ?3 = v26765
    af = v26766
    ?5 = v26767
    zf = v26768
    sf = v26769
    tf = v26770
    if = v26771
    df = v26772
    of = v26773
    iopl0 = v26774
    iopl1 = v26775
    nt = v26776
    ?15 = v26777
    memory = {}
0x80482f6:push   0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x0]
    }
0x80482fb:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x0]
    }
==============================================
Constant propagation in function "puts"
==============================================
0x8048300:jmp    DWORD PTR ds:[0x80496d8]
    ax = v26943
    cx = v26944
    dx = v26945
    bx = v26946
    sp = v26947
    bp = v26948
    si = v26949
    di = v26950
    es = v26951
    cs = v26952
    ss = v26953
    ds = v26954
    fs = v26955
    gs = v26956
    cf = v26957
    ?1 = v26958
    pf = v26959
    ?3 = v26960
    af = v26961
    ?5 = v26962
    zf = v26963
    sf = v26964
    tf = v26965
    if = v26966
    df = v26967
    of = v26968
    iopl0 = v26969
    iopl1 = v26970
    nt = v26971
    ?15 = v26972
    memory = {}
0x8048306:push   0x8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x8]
    }
0x804830b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x8]
    }
==============================================
Constant propagation in function "__libc_start_main"
==============================================
0x8048310:jmp    DWORD PTR ds:[0x80496dc]
    ax = v27138
    cx = v27139
    dx = v27140
    bx = v27141
    sp = v27142
    bp = v27143
    si = v27144
    di = v27145
    es = v27146
    cs = v27147
    ss = v27148
    ds = v27149
    fs = v27150
    gs = v27151
    cf = v27152
    ?1 = v27153
    pf = v27154
    ?3 = v27155
    af = v27156
    ?5 = v27157
    zf = v27158
    sf = v27159
    tf = v27160
    if = v27161
    df = v27162
    of = v27163
    iopl0 = v27164
    iopl1 = v27165
    nt = v27166
    ?15 = v27167
    memory = {}
0x8048316:push   0x10
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x10]
    }
0x804831b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x10]
    }
==============================================
Constant propagation in function "_exit"
==============================================
0x8048320:jmp    DWORD PTR ds:[0x80496e0]
    ax = v27333
    cx = v27334
    dx = v27335
    bx = v27336
    sp = v27337
    bp = v27338
    si = v27339
    di = v27340
    es = v27341
    cs = v27342
    ss = v27343
    ds = v27344
    fs = v27345
    gs = v27346
    cf = v27347
    ?1 = v27348
    pf = v27349
    ?3 = v27350
    af = v27351
    ?5 = v27352
    zf = v27353
    sf = v27354
    tf = v27355
    if = v27356
    df = v27357
    of = v27358
    iopl0 = v27359
    iopl1 = v27360
    nt = v27361
    ?15 = v27362
    memory = {}
0x8048326:push   0x18
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x18]
    }
0x804832b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x18]
    }
==============================================
Constant propagation in function "__gmon_start__"
==============================================
0x8048330:jmp    DWORD PTR ds:[0x80496e4]
    ax = v27528
    cx = v27529
    dx = v27530
    bx = v27531
    sp = v27532
    bp = v27533
    si = v27534
    di = v27535
    es = v27536
    cs = v27537
    ss = v27538
    ds = v27539
    fs = v27540
    gs = v27541
    cf = v27542
    ?1 = v27543
    pf = v27544
    ?3 = v27545
    af = v27546
    ?5 = v27547
    zf = v27548
    sf = v27549
    tf = v27550
    if = v27551
    df = v27552
    of = v27553
    iopl0 = v27554
    iopl1 = v27555
    nt = v27556
    ?15 = v27557
    memory = {}
0x8048336:push   0x20
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x20]
    }
0x804833b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x20]
    }
==============================================
Constant propagation in function "_start"
==============================================
0x8048340:xor    ebp, ebp
    ax = v27723
    cx = v27724
    dx = v27725
    bx = v27726
    sp = v27727
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27729
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v27738
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {}
0x8048342:pop    esi
    ax = v27723
    cx = v27724
    dx = v27725
    bx = v27726
    sp = v27727+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v27738
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {}
0x8048343:mov    ecx, esp
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27727+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v27738
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {}
0x8048345:and    esp, 0xf0
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878 [from 0x8048345:and    esp, 0xf0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {}
0x8048348:push   eax
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x8048349:push   esp
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0x8 [from 0x8048349:push   esp]; value=v27878-0x4 [from 0x8048348:push   eax]
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x804834a:push   edx
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0xc [from 0x804834a:push   edx]; value=v27725
        size=4; addr=v27878-0x8 [from 0x8048349:push   esp]; value=v27878-0x4 [from 0x8048348:push   eax]
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x804834b:push   0x8048520
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0x10 [from 0x804834b:push   0x8048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v27878-0xc [from 0x804834a:push   edx]; value=v27725
        size=4; addr=v27878-0x8 [from 0x8048349:push   esp]; value=v27878-0x4 [from 0x8048348:push   eax]
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x8048350:push   0x80484b0
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0x14 [from 0x8048350:push   0x80484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v27878-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v27878-0xc [from 0x804834a:push   edx]; value=v27725
        size=4; addr=v27878-0x8 [from 0x8048349:push   esp]; value=v27878-0x4 [from 0x8048348:push   eax]
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x8048355:push   ecx
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0x18 [from 0x8048355:push   ecx]; value=v27727+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v27878-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v27878-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v27878-0xc [from 0x804834a:push   edx]; value=v27725
        size=4; addr=v27878-0x8 [from 0x8048349:push   esp]; value=v27878-0x4 [from 0x8048348:push   eax]
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x8048356:push   esi
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0x1c [from 0x8048356:push   esi]; value=v27812 [from 0x8048342:pop    esi]
        size=4; addr=v27878-0x18 [from 0x8048355:push   ecx]; value=v27727+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v27878-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v27878-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v27878-0xc [from 0x804834a:push   edx]; value=v27725
        size=4; addr=v27878-0x8 [from 0x8048349:push   esp]; value=v27878-0x4 [from 0x8048348:push   eax]
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x8048357:push   0x8048410
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0x20 [from 0x8048357:push   0x8048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0x20 [from 0x8048357:push   0x8048410]; value=0x8048410 [from 0x8048357:push   0x8048410]
        size=4; addr=v27878-0x1c [from 0x8048356:push   esi]; value=v27812 [from 0x8048342:pop    esi]
        size=4; addr=v27878-0x18 [from 0x8048355:push   ecx]; value=v27727+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v27878-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v27878-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v27878-0xc [from 0x804834a:push   edx]; value=v27725
        size=4; addr=v27878-0x8 [from 0x8048349:push   esp]; value=v27878-0x4 [from 0x8048348:push   eax]
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x804835c:call   0x8048310
    ax = v27723
    cx = v27727+0x4 [from 0x8048342:pop    esi]
    dx = v27725
    bx = v27726
    sp = v27878-0x24 [from 0x804835c:call   0x8048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v27812 [from 0x8048342:pop    esi]
    di = v27730
    es = v27731
    cs = v27732
    ss = v27733
    ds = v27734
    fs = v27735
    gs = v27736
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v27738
    pf = -v27894-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v27740
    af = <top>
    ?5 = v27742
    zf = v27897 [from 0x8048345:and    esp, 0xf0]
    sf = v27896 [from 0x8048345:and    esp, 0xf0]
    tf = v27745
    if = v27746
    df = v27747
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v27749
    iopl1 = v27750
    nt = v27751
    ?15 = v27752
    memory = {
        size=4; addr=v27878-0x24 [from 0x804835c:call   0x8048310]; value=0x8048361 [from 0x804835c:call   0x8048310]
        size=4; addr=v27878-0x20 [from 0x8048357:push   0x8048410]; value=0x8048410 [from 0x8048357:push   0x8048410]
        size=4; addr=v27878-0x1c [from 0x8048356:push   esi]; value=v27812 [from 0x8048342:pop    esi]
        size=4; addr=v27878-0x18 [from 0x8048355:push   ecx]; value=v27727+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v27878-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v27878-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v27878-0xc [from 0x804834a:push   edx]; value=v27725
        size=4; addr=v27878-0x8 [from 0x8048349:push   esp]; value=v27878-0x4 [from 0x8048348:push   eax]
        size=4; addr=v27878-0x4 [from 0x8048348:push   eax]; value=v27723
    }
0x8048361:hlt    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048362"
==============================================
0x8048362:nop    
    ax = v28353
    cx = v28354
    dx = v28355
    bx = v28356
    sp = v28357
    bp = v28358
    si = v28359
    di = v28360
    es = v28361
    cs = v28362
    ss = v28363
    ds = v28364
    fs = v28365
    gs = v28366
    cf = v28367
    ?1 = v28368
    pf = v28369
    ?3 = v28370
    af = v28371
    ?5 = v28372
    zf = v28373
    sf = v28374
    tf = v28375
    if = v28376
    df = v28377
    of = v28378
    iopl0 = v28379
    iopl1 = v28380
    nt = v28381
    ?15 = v28382
    memory = {}
0x8048363:nop    
    ax = v28353
    cx = v28354
    dx = v28355
    bx = v28356
    sp = v28357
    bp = v28358
    si = v28359
    di = v28360
    es = v28361
    cs = v28362
    ss = v28363
    ds = v28364
    fs = v28365
    gs = v28366
    cf = v28367
    ?1 = v28368
    pf = v28369
    ?3 = v28370
    af = v28371
    ?5 = v28372
    zf = v28373
    sf = v28374
    tf = v28375
    if = v28376
    df = v28377
    of = v28378
    iopl0 = v28379
    iopl1 = v28380
    nt = v28381
    ?15 = v28382
    memory = {}
==============================================
Constant propagation in function "call_gmon_start"
==============================================
0x8048364:push   ebp
    ax = v28507
    cx = v28508
    dx = v28509
    bx = v28510
    sp = v28511-0x4 [from 0x8048364:push   ebp]
    bp = v28512
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = v28521
    ?1 = v28522
    pf = v28523
    ?3 = v28524
    af = v28525
    ?5 = v28526
    zf = v28527
    sf = v28528
    tf = v28529
    if = v28530
    df = v28531
    of = v28532
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048365:mov    ebp, esp
    ax = v28507
    cx = v28508
    dx = v28509
    bx = v28510
    sp = v28511-0x4 [from 0x8048364:push   ebp]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = v28521
    ?1 = v28522
    pf = v28523
    ?3 = v28524
    af = v28525
    ?5 = v28526
    zf = v28527
    sf = v28528
    tf = v28529
    if = v28530
    df = v28531
    of = v28532
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048367:push   ebx
    ax = v28507
    cx = v28508
    dx = v28509
    bx = v28510
    sp = v28511-0x8 [from 0x8048367:push   ebx]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = v28521
    ?1 = v28522
    pf = v28523
    ?3 = v28524
    af = v28525
    ?5 = v28526
    zf = v28527
    sf = v28528
    tf = v28529
    if = v28530
    df = v28531
    of = v28532
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048368:push   ecx
    ax = v28507
    cx = v28508
    dx = v28509
    bx = v28510
    sp = v28511-0xc [from 0x8048368:push   ecx]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = v28521
    ?1 = v28522
    pf = v28523
    ?3 = v28524
    af = v28525
    ?5 = v28526
    zf = v28527
    sf = v28528
    tf = v28529
    if = v28530
    df = v28531
    of = v28532
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048369:call   0x804836e
    ax = v28507
    cx = v28508
    dx = v28509
    bx = v28510
    sp = v28511-0x10 [from 0x8048369:call   0x804836e]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = v28521
    ?1 = v28522
    pf = v28523
    ?3 = v28524
    af = v28525
    ?5 = v28526
    zf = v28527
    sf = v28528
    tf = v28529
    if = v28530
    df = v28531
    of = v28532
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x804836e:pop    ebx
    ax = v28507
    cx = v28508
    dx = v28509
    bx = 0x804836e [from 0x8048369:call   0x804836e]
    sp = v28511-0xc [from 0x804836e:pop    ebx]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = v28521
    ?1 = v28522
    pf = v28523
    ?3 = v28524
    af = v28525
    ?5 = v28526
    zf = v28527
    sf = v28528
    tf = v28529
    if = v28530
    df = v28531
    of = v28532
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x804836f:add    ebx, 0x135a
    ax = v28507
    cx = v28508
    dx = v28509
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v28511-0xc [from 0x804836e:pop    ebx]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?1 = v28522
    pf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?3 = v28524
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x135a]
    ?5 = v28526
    zf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804836f:add    ebx, 0x135a]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]
    ax = v28507
    cx = v28508
    dx = v28819 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v28511-0xc [from 0x804836e:pop    ebx]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?1 = v28522
    pf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?3 = v28524
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x135a]
    ?5 = v28526
    zf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804836f:add    ebx, 0x135a]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x804837b:test   edx, edx
    ax = v28507
    cx = v28508
    dx = v28819 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v28511-0xc [from 0x804836e:pop    ebx]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v28522
    pf = -v28868-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v28524
    af = <top>
    ?5 = v28526
    zf = v28871 [from 0x804837b:test   edx, edx]
    sf = v28870 [from 0x804837b:test   edx, edx]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x804837d:je     0x8048384
    ax = v28507
    cx = v28508
    dx = v28819 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v28511-0xc [from 0x804836e:pop    ebx]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v28522
    pf = -v28868-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v28524
    af = <top>
    ?5 = v28526
    zf = v28871 [from 0x804837b:test   edx, edx]
    sf = v28870 [from 0x804837b:test   edx, edx]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x804837f:call   0x8048330
    ax = v28507
    cx = v28508
    dx = v28819 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v28511-0x10 [from 0x804837f:call   0x8048330]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v28522
    pf = -v28868-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v28524
    af = <top>
    ?5 = v28526
    zf = v28871 [from 0x804837b:test   edx, edx]
    sf = v28870 [from 0x804837b:test   edx, edx]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x804837f:call   0x8048330]; value=0x8048384 [from 0x804837f:call   0x8048330]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048384:pop    eax
    ax = v28508
    cx = v28508
    dx = v28819 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v28511-0x8 [from 0x8048384:pop    eax]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v28522
    pf = -v28868-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v28524
    af = <top>
    ?5 = v28526
    zf = v28871 [from 0x804837b:test   edx, edx]
    sf = v28870 [from 0x804837b:test   edx, edx]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048385:pop    ebx
    ax = v28508
    cx = v28508
    dx = v28819 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v28510
    sp = v28511-0x4 [from 0x8048385:pop    ebx]
    bp = v28511-0x4 [from 0x8048364:push   ebp]
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v28522
    pf = -v28868-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v28524
    af = <top>
    ?5 = v28526
    zf = v28871 [from 0x804837b:test   edx, edx]
    sf = v28870 [from 0x804837b:test   edx, edx]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048386:leave  
    ax = v28508
    cx = v28508
    dx = v28819 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v28510
    sp = v28511 [from 0x8048386:leave  ]
    bp = v28512
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v28522
    pf = -v28868-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v28524
    af = <top>
    ?5 = v28526
    zf = v28871 [from 0x804837b:test   edx, edx]
    sf = v28870 [from 0x804837b:test   edx, edx]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
0x8048387:ret    
    ax = v28508
    cx = v28508
    dx = v28819 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v28510
    sp = v28511+0x4 [from 0x8048387:ret    ]
    bp = v28512
    si = v28513
    di = v28514
    es = v28515
    cs = v28516
    ss = v28517
    ds = v28518
    fs = v28519
    gs = v28520
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v28522
    pf = -v28868-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v28524
    af = <top>
    ?5 = v28526
    zf = v28871 [from 0x804837b:test   edx, edx]
    sf = v28870 [from 0x804837b:test   edx, edx]
    tf = v28529
    if = v28530
    df = v28531
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v28533
    iopl1 = v28534
    nt = v28535
    ?15 = v28536
    memory = {
        size=4; addr=v28511-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v28511-0xc [from 0x8048368:push   ecx]; value=v28508
        size=4; addr=v28511-0x8 [from 0x8048367:push   ebx]; value=v28510
        size=4; addr=v28511-0x4 [from 0x8048364:push   ebp]; value=v28512
    }
==============================================
Constant propagation in function "0x8048388"
==============================================
0x8048388:nop    
    ax = v29183
    cx = v29184
    dx = v29185
    bx = v29186
    sp = v29187
    bp = v29188
    si = v29189
    di = v29190
    es = v29191
    cs = v29192
    ss = v29193
    ds = v29194
    fs = v29195
    gs = v29196
    cf = v29197
    ?1 = v29198
    pf = v29199
    ?3 = v29200
    af = v29201
    ?5 = v29202
    zf = v29203
    sf = v29204
    tf = v29205
    if = v29206
    df = v29207
    of = v29208
    iopl0 = v29209
    iopl1 = v29210
    nt = v29211
    ?15 = v29212
    memory = {}
0x8048389:nop    
    ax = v29183
    cx = v29184
    dx = v29185
    bx = v29186
    sp = v29187
    bp = v29188
    si = v29189
    di = v29190
    es = v29191
    cs = v29192
    ss = v29193
    ds = v29194
    fs = v29195
    gs = v29196
    cf = v29197
    ?1 = v29198
    pf = v29199
    ?3 = v29200
    af = v29201
    ?5 = v29202
    zf = v29203
    sf = v29204
    tf = v29205
    if = v29206
    df = v29207
    of = v29208
    iopl0 = v29209
    iopl1 = v29210
    nt = v29211
    ?15 = v29212
    memory = {}
0x804838a:nop    
    ax = v29183
    cx = v29184
    dx = v29185
    bx = v29186
    sp = v29187
    bp = v29188
    si = v29189
    di = v29190
    es = v29191
    cs = v29192
    ss = v29193
    ds = v29194
    fs = v29195
    gs = v29196
    cf = v29197
    ?1 = v29198
    pf = v29199
    ?3 = v29200
    af = v29201
    ?5 = v29202
    zf = v29203
    sf = v29204
    tf = v29205
    if = v29206
    df = v29207
    of = v29208
    iopl0 = v29209
    iopl1 = v29210
    nt = v29211
    ?15 = v29212
    memory = {}
0x804838b:nop    
    ax = v29183
    cx = v29184
    dx = v29185
    bx = v29186
    sp = v29187
    bp = v29188
    si = v29189
    di = v29190
    es = v29191
    cs = v29192
    ss = v29193
    ds = v29194
    fs = v29195
    gs = v29196
    cf = v29197
    ?1 = v29198
    pf = v29199
    ?3 = v29200
    af = v29201
    ?5 = v29202
    zf = v29203
    sf = v29204
    tf = v29205
    if = v29206
    df = v29207
    of = v29208
    iopl0 = v29209
    iopl1 = v29210
    nt = v29211
    ?15 = v29212
    memory = {}
0x804838c:nop    
    ax = v29183
    cx = v29184
    dx = v29185
    bx = v29186
    sp = v29187
    bp = v29188
    si = v29189
    di = v29190
    es = v29191
    cs = v29192
    ss = v29193
    ds = v29194
    fs = v29195
    gs = v29196
    cf = v29197
    ?1 = v29198
    pf = v29199
    ?3 = v29200
    af = v29201
    ?5 = v29202
    zf = v29203
    sf = v29204
    tf = v29205
    if = v29206
    df = v29207
    of = v29208
    iopl0 = v29209
    iopl1 = v29210
    nt = v29211
    ?15 = v29212
    memory = {}
0x804838d:nop    
    ax = v29183
    cx = v29184
    dx = v29185
    bx = v29186
    sp = v29187
    bp = v29188
    si = v29189
    di = v29190
    es = v29191
    cs = v29192
    ss = v29193
    ds = v29194
    fs = v29195
    gs = v29196
    cf = v29197
    ?1 = v29198
    pf = v29199
    ?3 = v29200
    af = v29201
    ?5 = v29202
    zf = v29203
    sf = v29204
    tf = v29205
    if = v29206
    df = v29207
    of = v29208
    iopl0 = v29209
    iopl1 = v29210
    nt = v29211
    ?15 = v29212
    memory = {}
0x804838e:nop    
    ax = v29183
    cx = v29184
    dx = v29185
    bx = v29186
    sp = v29187
    bp = v29188
    si = v29189
    di = v29190
    es = v29191
    cs = v29192
    ss = v29193
    ds = v29194
    fs = v29195
    gs = v29196
    cf = v29197
    ?1 = v29198
    pf = v29199
    ?3 = v29200
    af = v29201
    ?5 = v29202
    zf = v29203
    sf = v29204
    tf = v29205
    if = v29206
    df = v29207
    of = v29208
    iopl0 = v29209
    iopl1 = v29210
    nt = v29211
    ?15 = v29212
    memory = {}
0x804838f:nop    
    ax = v29183
    cx = v29184
    dx = v29185
    bx = v29186
    sp = v29187
    bp = v29188
    si = v29189
    di = v29190
    es = v29191
    cs = v29192
    ss = v29193
    ds = v29194
    fs = v29195
    gs = v29196
    cf = v29197
    ?1 = v29198
    pf = v29199
    ?3 = v29200
    af = v29201
    ?5 = v29202
    zf = v29203
    sf = v29204
    tf = v29205
    if = v29206
    df = v29207
    of = v29208
    iopl0 = v29209
    iopl1 = v29210
    nt = v29211
    ?15 = v29212
    memory = {}
==============================================
Constant propagation in function "__do_global_dtors_aux"
==============================================
0x8048390:push   ebp
    ax = v29529
    cx = v29530
    dx = v29531
    bx = v29532
    sp = v29533-0x4 [from 0x8048390:push   ebp]
    bp = v29534
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = v29543
    ?1 = v29544
    pf = v29545
    ?3 = v29546
    af = v29547
    ?5 = v29548
    zf = v29549
    sf = v29550
    tf = v29551
    if = v29552
    df = v29553
    of = v29554
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x8048391:mov    ebp, esp
    ax = v29529
    cx = v29530
    dx = v29531
    bx = v29532
    sp = v29533-0x4 [from 0x8048390:push   ebp]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = v29543
    ?1 = v29544
    pf = v29545
    ?3 = v29546
    af = v29547
    ?5 = v29548
    zf = v29549
    sf = v29550
    tf = v29551
    if = v29552
    df = v29553
    of = v29554
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x8048393:sub    esp, 0x8
    ax = v29529
    cx = v29530
    dx = v29531
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = -v29660-0x1 [from 0x8048393:sub    esp, 0x8]
    ?1 = v29544
    pf = -v29654-0x1 [from 0x8048393:sub    esp, 0x8]
    ?3 = v29546
    af = -v29658-0x1 [from 0x8048393:sub    esp, 0x8]
    ?5 = v29548
    zf = v29657 [from 0x8048393:sub    esp, 0x8]
    sf = v29656 [from 0x8048393:sub    esp, 0x8]
    tf = v29551
    if = v29552
    df = v29553
    of = v29664 [from 0x8048393:sub    esp, 0x8]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0
    ax = v29529
    cx = v29530
    dx = v29531
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = -v29732-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v29544
    pf = -v29726-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v29546
    af = -v29730-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v29548
    zf = v29729 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v29728 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v29551
    if = v29552
    df = v29553
    of = v29736 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x804839d:jne    0x80483cc
    ax = v29529
    cx = v29530
    dx = v29531
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = -v29732-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v29544
    pf = -v29726-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v29546
    af = -v29730-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v29548
    zf = v29729 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v29728 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v29551
    if = v29552
    df = v29553
    of = v29736 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]
    ax = v29836 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v29530
    dx = v29531
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = -v29732-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v29544
    pf = -v29726-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v29546
    af = -v29730-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v29548
    zf = v29729 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v29728 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v29551
    if = v29552
    df = v29553
    of = v29736 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v29836 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v29530
    dx = v29870 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = -v29732-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v29544
    pf = -v29726-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v29546
    af = -v29730-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v29548
    zf = v29729 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v29728 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v29551
    if = v29552
    df = v29553
    of = v29736 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x80483a6:test   edx, edx
    ax = v29836 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v29530
    dx = v29870 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v29544
    pf = -v29919-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v29546
    af = <top>
    ?5 = v29548
    zf = v29922 [from 0x80483a6:test   edx, edx]
    sf = v29921 [from 0x80483a6:test   edx, edx]
    tf = v29551
    if = v29552
    df = v29553
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x80483a8:je     0x80483c5
    ax = v29836 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v29530
    dx = v29870 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v29544
    pf = -v29919-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v29546
    af = <top>
    ?5 = v29548
    zf = v29922 [from 0x80483a6:test   edx, edx]
    sf = v29921 [from 0x80483a6:test   edx, edx]
    tf = v29551
    if = v29552
    df = v29553
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x80483aa:lea    esi, [esi + 0x0]
    ax = v29836 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v29530
    dx = v29870 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v29544
    pf = -v29919-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v29546
    af = <top>
    ?5 = v29548
    zf = v29922 [from 0x80483a6:test   edx, edx]
    sf = v29921 [from 0x80483a6:test   edx, edx]
    tf = v29551
    if = v29552
    df = v29553
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x80483b0:add    eax, 0x4
    ax = v29836+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v29530
    dx = v29870 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = v30085 [from 0x80483b0:add    eax, 0x4]
    ?1 = v29544
    pf = -v30080-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v29546
    af = v30084 [from 0x80483b0:add    eax, 0x4]
    ?5 = v29548
    zf = v30083 [from 0x80483b0:add    eax, 0x4]
    sf = v30082 [from 0x80483b0:add    eax, 0x4]
    tf = v29551
    if = v29552
    df = v29553
    of = v30088 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x4 [from 0x8048390:push   ebp]; value=v29534
    }
0x80483b3:mov    DWORD PTR ds:[0x80496f0], eax
    ax = v29836+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v29530
    dx = v29870 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = v30085 [from 0x80483b0:add    eax, 0x4]
    ?1 = v29544
    pf = -v30080-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v29546
    af = v30084 [from 0x80483b0:add    eax, 0x4]
    ?5 = v29548
    zf = v30083 [from 0x80483b0:add    eax, 0x4]
    sf = v30082 [from 0x80483b0:add    eax, 0x4]
    tf = v29551
    if = v29552
    df = v29553
    of = v30088 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x80496f0], eax]; value=v29836+0x4 [from 0x80483b0:add    eax, 0x4]
    }
0x80483b8:call   edx
    ax = v29836+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v29530
    dx = v29870 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v29532
    sp = v29533-0x10 [from 0x80483b8:call   edx]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = v30085 [from 0x80483b0:add    eax, 0x4]
    ?1 = v29544
    pf = -v30080-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v29546
    af = v30084 [from 0x80483b0:add    eax, 0x4]
    ?5 = v29548
    zf = v30083 [from 0x80483b0:add    eax, 0x4]
    sf = v30082 [from 0x80483b0:add    eax, 0x4]
    tf = v29551
    if = v29552
    df = v29553
    of = v30088 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=4; addr=v29533-0x10 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
0x80483ba:mov    eax, DWORD PTR ds:[0x80496f0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c1:test   edx, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c3:jne    0x80483b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1
    ax = v29836 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v29530
    dx = v29870 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v29532
    sp = v29533-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v29533-0x4 [from 0x8048390:push   ebp]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v29544
    pf = -v29919-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v29546
    af = <top>
    ?5 = v29548
    zf = v29922 [from 0x80483a6:test   edx, edx]
    sf = v29921 [from 0x80483a6:test   edx, edx]
    tf = v29551
    if = v29552
    df = v29553
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1]
    }
0x80483cc:leave  
    ax = v29802
    cx = v29530
    dx = v29804
    bx = v29532
    sp = v29533 [from 0x80483cc:leave  ]
    bp = v30330 [from 0x80483cc:leave  ]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = v29816
    ?1 = v29544
    pf = v29818
    ?3 = v29546
    af = -v29730-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v29548
    zf = v29822
    sf = v29823
    tf = v29551
    if = v29552
    df = v29553
    of = v29827
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {}
0x80483cd:ret    
    ax = v29802
    cx = v29530
    dx = v29804
    bx = v29532
    sp = v29533+0x4 [from 0x80483cd:ret    ]
    bp = v30330 [from 0x80483cc:leave  ]
    si = v29535
    di = v29536
    es = v29537
    cs = v29538
    ss = v29539
    ds = v29540
    fs = v29541
    gs = v29542
    cf = v29816
    ?1 = v29544
    pf = v29818
    ?3 = v29546
    af = -v29730-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v29548
    zf = v29822
    sf = v29823
    tf = v29551
    if = v29552
    df = v29553
    of = v29827
    iopl0 = v29555
    iopl1 = v29556
    nt = v29557
    ?15 = v29558
    memory = {}
0x80483ce:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "frame_dummy"
==============================================
0x80483d0:push   ebp
    ax = v30492
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0x4 [from 0x80483d0:push   ebp]
    bp = v30497
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = v30506
    ?1 = v30507
    pf = v30508
    ?3 = v30509
    af = v30510
    ?5 = v30511
    zf = v30512
    sf = v30513
    tf = v30514
    if = v30515
    df = v30516
    of = v30517
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483d1:mov    ebp, esp
    ax = v30492
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0x4 [from 0x80483d0:push   ebp]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = v30506
    ?1 = v30507
    pf = v30508
    ?3 = v30509
    af = v30510
    ?5 = v30511
    zf = v30512
    sf = v30513
    tf = v30514
    if = v30515
    df = v30516
    of = v30517
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483d3:sub    esp, 0x8
    ax = v30492
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = -v30623-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?1 = v30507
    pf = -v30617-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?3 = v30509
    af = -v30621-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?5 = v30511
    zf = v30620 [from 0x80483d3:sub    esp, 0x8]
    sf = v30619 [from 0x80483d3:sub    esp, 0x8]
    tf = v30514
    if = v30515
    df = v30516
    of = v30627 [from 0x80483d3:sub    esp, 0x8]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]
    ax = v30662 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = -v30623-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?1 = v30507
    pf = -v30617-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?3 = v30509
    af = -v30621-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?5 = v30511
    zf = v30620 [from 0x80483d3:sub    esp, 0x8]
    sf = v30619 [from 0x80483d3:sub    esp, 0x8]
    tf = v30514
    if = v30515
    df = v30516
    of = v30627 [from 0x80483d3:sub    esp, 0x8]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483db:test   eax, eax
    ax = v30662 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v30507
    pf = -v30711-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v30509
    af = <top>
    ?5 = v30511
    zf = v30714 [from 0x80483db:test   eax, eax]
    sf = v30713 [from 0x80483db:test   eax, eax]
    tf = v30514
    if = v30515
    df = v30516
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483dd:je     0x8048400
    ax = v30662 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v30507
    pf = -v30711-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v30509
    af = <top>
    ?5 = v30511
    zf = v30714 [from 0x80483db:test   eax, eax]
    sf = v30713 [from 0x80483db:test   eax, eax]
    tf = v30514
    if = v30515
    df = v30516
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483df:mov    eax, 0x0
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v30507
    pf = -v30711-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v30509
    af = <top>
    ?5 = v30511
    zf = v30714 [from 0x80483db:test   eax, eax]
    sf = v30713 [from 0x80483db:test   eax, eax]
    tf = v30514
    if = v30515
    df = v30516
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v30507
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v30509
    af = <top>
    ?5 = v30511
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v30514
    if = v30515
    df = v30516
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483e6:je     0x8048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v30507
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v30509
    af = <top>
    ?5 = v30511
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v30514
    if = v30515
    df = v30516
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {
        size=4; addr=v30496-0x4 [from 0x80483d0:push   ebp]; value=v30497
    }
0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8]
    }
0x80483ef:call   0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8]
        size=4; addr=<top>; value=0x80483f4 [from 0x80483ef:call   0x0]
    }
0x80483f4:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483fa:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048400:mov    esp, ebp
    ax = v30782
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496-0x4 [from 0x80483d0:push   ebp]
    bp = v30496-0x4 [from 0x80483d0:push   ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v30507
    pf = v30798
    ?3 = v30509
    af = <top>
    ?5 = v30511
    zf = v30802
    sf = v30803
    tf = v30514
    if = v30515
    df = v30516
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {}
0x8048402:pop    ebp
    ax = v30782
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496 [from 0x8048402:pop    ebp]
    bp = v31111 [from 0x8048402:pop    ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v30507
    pf = v30798
    ?3 = v30509
    af = <top>
    ?5 = v30511
    zf = v30802
    sf = v30803
    tf = v30514
    if = v30515
    df = v30516
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {}
0x8048403:ret    
    ax = v30782
    cx = v30493
    dx = v30494
    bx = v30495
    sp = v30496+0x4 [from 0x8048403:ret    ]
    bp = v31111 [from 0x8048402:pop    ebp]
    si = v30498
    di = v30499
    es = v30500
    cs = v30501
    ss = v30502
    ds = v30503
    fs = v30504
    gs = v30505
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v30507
    pf = v30798
    ?3 = v30509
    af = <top>
    ?5 = v30511
    zf = v30802
    sf = v30803
    tf = v30514
    if = v30515
    df = v30516
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v30518
    iopl1 = v30519
    nt = v30520
    ?15 = v30521
    memory = {}
==============================================
Constant propagation in function "0x8048404"
==============================================
0x8048404:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x8048405:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x8048406:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x8048407:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x8048408:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x8048409:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x804840a:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x804840b:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x804840c:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x804840d:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x804840e:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
0x804840f:nop    
    ax = v31211
    cx = v31212
    dx = v31213
    bx = v31214
    sp = v31215
    bp = v31216
    si = v31217
    di = v31218
    es = v31219
    cs = v31220
    ss = v31221
    ds = v31222
    fs = v31223
    gs = v31224
    cf = v31225
    ?1 = v31226
    pf = v31227
    ?3 = v31228
    af = v31229
    ?5 = v31230
    zf = v31231
    sf = v31232
    tf = v31233
    if = v31234
    df = v31235
    of = v31236
    iopl0 = v31237
    iopl1 = v31238
    nt = v31239
    ?15 = v31240
    memory = {}
==============================================
Constant propagation in function "main"
==============================================
0x8048410:push   ebp
    ax = v31685
    cx = v31686
    dx = v31687
    bx = v31688
    sp = v31689-0x4 [from 0x8048410:push   ebp]
    bp = v31690
    si = v31691
    di = v31692
    es = v31693
    cs = v31694
    ss = v31695
    ds = v31696
    fs = v31697
    gs = v31698
    cf = v31699
    ?1 = v31700
    pf = v31701
    ?3 = v31702
    af = v31703
    ?5 = v31704
    zf = v31705
    sf = v31706
    tf = v31707
    if = v31708
    df = v31709
    of = v31710
    iopl0 = v31711
    iopl1 = v31712
    nt = v31713
    ?15 = v31714
    memory = {
        size=4; addr=v31689-0x4 [from 0x8048410:push   ebp]; value=v31690
    }
0x8048411:mov    edx, 0x8048480
    ax = v31685
    cx = v31686
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v31688
    sp = v31689-0x4 [from 0x8048410:push   ebp]
    bp = v31690
    si = v31691
    di = v31692
    es = v31693
    cs = v31694
    ss = v31695
    ds = v31696
    fs = v31697
    gs = v31698
    cf = v31699
    ?1 = v31700
    pf = v31701
    ?3 = v31702
    af = v31703
    ?5 = v31704
    zf = v31705
    sf = v31706
    tf = v31707
    if = v31708
    df = v31709
    of = v31710
    iopl0 = v31711
    iopl1 = v31712
    nt = v31713
    ?15 = v31714
    memory = {
        size=4; addr=v31689-0x4 [from 0x8048410:push   ebp]; value=v31690
    }
0x8048416:mov    ebp, esp
    ax = v31685
    cx = v31686
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v31688
    sp = v31689-0x4 [from 0x8048410:push   ebp]
    bp = v31689-0x4 [from 0x8048410:push   ebp]
    si = v31691
    di = v31692
    es = v31693
    cs = v31694
    ss = v31695
    ds = v31696
    fs = v31697
    gs = v31698
    cf = v31699
    ?1 = v31700
    pf = v31701
    ?3 = v31702
    af = v31703
    ?5 = v31704
    zf = v31705
    sf = v31706
    tf = v31707
    if = v31708
    df = v31709
    of = v31710
    iopl0 = v31711
    iopl1 = v31712
    nt = v31713
    ?15 = v31714
    memory = {
        size=4; addr=v31689-0x4 [from 0x8048410:push   ebp]; value=v31690
    }
0x8048418:sub    esp, 0x8
    ax = v31685
    cx = v31686
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v31688
    sp = v31689-0xc [from 0x8048418:sub    esp, 0x8]
    bp = v31689-0x4 [from 0x8048410:push   ebp]
    si = v31691
    di = v31692
    es = v31693
    cs = v31694
    ss = v31695
    ds = v31696
    fs = v31697
    gs = v31698
    cf = -v31849-0x1 [from 0x8048418:sub    esp, 0x8]
    ?1 = v31700
    pf = -v31843-0x1 [from 0x8048418:sub    esp, 0x8]
    ?3 = v31702
    af = -v31847-0x1 [from 0x8048418:sub    esp, 0x8]
    ?5 = v31704
    zf = v31846 [from 0x8048418:sub    esp, 0x8]
    sf = v31845 [from 0x8048418:sub    esp, 0x8]
    tf = v31707
    if = v31708
    df = v31709
    of = v31853 [from 0x8048418:sub    esp, 0x8]
    iopl0 = v31711
    iopl1 = v31712
    nt = v31713
    ?15 = v31714
    memory = {
        size=4; addr=v31689-0x4 [from 0x8048410:push   ebp]; value=v31690
    }
0x804841b:and    esp, 0xf0
    ax = v31685
    cx = v31686
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v31688
    sp = v31887 [from 0x804841b:and    esp, 0xf0]
    bp = v31689-0x4 [from 0x8048410:push   ebp]
    si = v31691
    di = v31692
    es = v31693
    cs = v31694
    ss = v31695
    ds = v31696
    fs = v31697
    gs = v31698
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v31700
    pf = -v31903-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v31702
    af = <top>
    ?5 = v31704
    zf = v31906 [from 0x804841b:and    esp, 0xf0]
    sf = v31905 [from 0x804841b:and    esp, 0xf0]
    tf = v31707
    if = v31708
    df = v31709
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v31711
    iopl1 = v31712
    nt = v31713
    ?15 = v31714
    memory = {
        size=4; addr=v31689-0x4 [from 0x8048410:push   ebp]; value=v31690
    }
0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx
    ax = v31685
    cx = v31686
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v31688
    sp = v31887 [from 0x804841b:and    esp, 0xf0]
    bp = v31689-0x4 [from 0x8048410:push   ebp]
    si = v31691
    di = v31692
    es = v31693
    cs = v31694
    ss = v31695
    ds = v31696
    fs = v31697
    gs = v31698
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v31700
    pf = -v31903-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v31702
    af = <top>
    ?5 = v31704
    zf = v31906 [from 0x804841b:and    esp, 0xf0]
    sf = v31905 [from 0x804841b:and    esp, 0xf0]
    tf = v31707
    if = v31708
    df = v31709
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v31711
    iopl1 = v31712
    nt = v31713
    ?15 = v31714
    memory = {
        size=4; addr=v31887+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    }
0x8048422:mov    DWORD PTR ss:[esp], 0xa
    ax = v31685
    cx = v31686
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v31688
    sp = v31887 [from 0x804841b:and    esp, 0xf0]
    bp = v31689-0x4 [from 0x8048410:push   ebp]
    si = v31691
    di = v31692
    es = v31693
    cs = v31694
    ss = v31695
    ds = v31696
    fs = v31697
    gs = v31698
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v31700
    pf = -v31903-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v31702
    af = <top>
    ?5 = v31704
    zf = v31906 [from 0x804841b:and    esp, 0xf0]
    sf = v31905 [from 0x804841b:and    esp, 0xf0]
    tf = v31707
    if = v31708
    df = v31709
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v31711
    iopl1 = v31712
    nt = v31713
    ?15 = v31714
    memory = {
        size=4; addr=v31887 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0xa]
        size=4; addr=v31887+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    }
0x8048429:call   0x80482f0
    ax = v31685
    cx = v31686
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v31688
    sp = v31887-0x4 [from 0x8048429:call   0x80482f0]
    bp = v31689-0x4 [from 0x8048410:push   ebp]
    si = v31691
    di = v31692
    es = v31693
    cs = v31694
    ss = v31695
    ds = v31696
    fs = v31697
    gs = v31698
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v31700
    pf = -v31903-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v31702
    af = <top>
    ?5 = v31704
    zf = v31906 [from 0x804841b:and    esp, 0xf0]
    sf = v31905 [from 0x804841b:and    esp, 0xf0]
    tf = v31707
    if = v31708
    df = v31709
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v31711
    iopl1 = v31712
    nt = v31713
    ?15 = v31714
    memory = {
        size=4; addr=v31887 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0xa]
        size=4; addr=v31887+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
        size=4; addr=v31887-0x4 [from 0x8048429:call   0x80482f0]; value=0x804842e [from 0x8048429:call   0x80482f0]
    }
0x804842e:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048430:xor    eax, eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048432:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048433:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048434:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804843a:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "bar"
==============================================
0x8048440:push   ebp
    ax = v32398
    cx = v32399
    dx = v32400
    bx = v32401
    sp = v32402-0x4 [from 0x8048440:push   ebp]
    bp = v32403
    si = v32404
    di = v32405
    es = v32406
    cs = v32407
    ss = v32408
    ds = v32409
    fs = v32410
    gs = v32411
    cf = v32412
    ?1 = v32413
    pf = v32414
    ?3 = v32415
    af = v32416
    ?5 = v32417
    zf = v32418
    sf = v32419
    tf = v32420
    if = v32421
    df = v32422
    of = v32423
    iopl0 = v32424
    iopl1 = v32425
    nt = v32426
    ?15 = v32427
    memory = {
        size=4; addr=v32402-0x4 [from 0x8048440:push   ebp]; value=v32403
    }
0x8048441:mov    ebp, esp
    ax = v32398
    cx = v32399
    dx = v32400
    bx = v32401
    sp = v32402-0x4 [from 0x8048440:push   ebp]
    bp = v32402-0x4 [from 0x8048440:push   ebp]
    si = v32404
    di = v32405
    es = v32406
    cs = v32407
    ss = v32408
    ds = v32409
    fs = v32410
    gs = v32411
    cf = v32412
    ?1 = v32413
    pf = v32414
    ?3 = v32415
    af = v32416
    ?5 = v32417
    zf = v32418
    sf = v32419
    tf = v32420
    if = v32421
    df = v32422
    of = v32423
    iopl0 = v32424
    iopl1 = v32425
    nt = v32426
    ?15 = v32427
    memory = {
        size=4; addr=v32402-0x4 [from 0x8048440:push   ebp]; value=v32403
    }
0x8048443:sub    esp, 0x8
    ax = v32398
    cx = v32399
    dx = v32400
    bx = v32401
    sp = v32402-0xc [from 0x8048443:sub    esp, 0x8]
    bp = v32402-0x4 [from 0x8048440:push   ebp]
    si = v32404
    di = v32405
    es = v32406
    cs = v32407
    ss = v32408
    ds = v32409
    fs = v32410
    gs = v32411
    cf = -v32529-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v32413
    pf = -v32523-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v32415
    af = -v32527-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v32417
    zf = v32526 [from 0x8048443:sub    esp, 0x8]
    sf = v32525 [from 0x8048443:sub    esp, 0x8]
    tf = v32420
    if = v32421
    df = v32422
    of = v32533 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v32424
    iopl1 = v32425
    nt = v32426
    ?15 = v32427
    memory = {
        size=4; addr=v32402-0x4 [from 0x8048440:push   ebp]; value=v32403
    }
0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v32398
    cx = v32399
    dx = v32400
    bx = v32401
    sp = v32402-0xc [from 0x8048443:sub    esp, 0x8]
    bp = v32402-0x4 [from 0x8048440:push   ebp]
    si = v32404
    di = v32405
    es = v32406
    cs = v32407
    ss = v32408
    ds = v32409
    fs = v32410
    gs = v32411
    cf = -v32529-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v32413
    pf = -v32523-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v32415
    af = -v32527-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v32417
    zf = v32526 [from 0x8048443:sub    esp, 0x8]
    sf = v32525 [from 0x8048443:sub    esp, 0x8]
    tf = v32420
    if = v32421
    df = v32422
    of = v32533 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v32424
    iopl1 = v32425
    nt = v32426
    ?15 = v32427
    memory = {
        size=4; addr=v32402-0xc [from 0x8048443:sub    esp, 0x8]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v32402-0x4 [from 0x8048440:push   ebp]; value=v32403
    }
0x804844d:call   0x8048300
    ax = v32398
    cx = v32399
    dx = v32400
    bx = v32401
    sp = v32402-0x10 [from 0x804844d:call   0x8048300]
    bp = v32402-0x4 [from 0x8048440:push   ebp]
    si = v32404
    di = v32405
    es = v32406
    cs = v32407
    ss = v32408
    ds = v32409
    fs = v32410
    gs = v32411
    cf = -v32529-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v32413
    pf = -v32523-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v32415
    af = -v32527-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v32417
    zf = v32526 [from 0x8048443:sub    esp, 0x8]
    sf = v32525 [from 0x8048443:sub    esp, 0x8]
    tf = v32420
    if = v32421
    df = v32422
    of = v32533 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v32424
    iopl1 = v32425
    nt = v32426
    ?15 = v32427
    memory = {
        size=4; addr=v32402-0x10 [from 0x804844d:call   0x8048300]; value=0x8048452 [from 0x804844d:call   0x8048300]
        size=4; addr=v32402-0xc [from 0x8048443:sub    esp, 0x8]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v32402-0x4 [from 0x8048440:push   ebp]; value=v32403
    }
0x8048452:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048454:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048455:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048456:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048459:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "foo"
==============================================
0x8048460:push   ebp
    ax = v32931
    cx = v32932
    dx = v32933
    bx = v32934
    sp = v32935-0x4 [from 0x8048460:push   ebp]
    bp = v32936
    si = v32937
    di = v32938
    es = v32939
    cs = v32940
    ss = v32941
    ds = v32942
    fs = v32943
    gs = v32944
    cf = v32945
    ?1 = v32946
    pf = v32947
    ?3 = v32948
    af = v32949
    ?5 = v32950
    zf = v32951
    sf = v32952
    tf = v32953
    if = v32954
    df = v32955
    of = v32956
    iopl0 = v32957
    iopl1 = v32958
    nt = v32959
    ?15 = v32960
    memory = {
        size=4; addr=v32935-0x4 [from 0x8048460:push   ebp]; value=v32936
    }
0x8048461:mov    ebp, esp
    ax = v32931
    cx = v32932
    dx = v32933
    bx = v32934
    sp = v32935-0x4 [from 0x8048460:push   ebp]
    bp = v32935-0x4 [from 0x8048460:push   ebp]
    si = v32937
    di = v32938
    es = v32939
    cs = v32940
    ss = v32941
    ds = v32942
    fs = v32943
    gs = v32944
    cf = v32945
    ?1 = v32946
    pf = v32947
    ?3 = v32948
    af = v32949
    ?5 = v32950
    zf = v32951
    sf = v32952
    tf = v32953
    if = v32954
    df = v32955
    of = v32956
    iopl0 = v32957
    iopl1 = v32958
    nt = v32959
    ?15 = v32960
    memory = {
        size=4; addr=v32935-0x4 [from 0x8048460:push   ebp]; value=v32936
    }
0x8048463:sub    esp, 0x8
    ax = v32931
    cx = v32932
    dx = v32933
    bx = v32934
    sp = v32935-0xc [from 0x8048463:sub    esp, 0x8]
    bp = v32935-0x4 [from 0x8048460:push   ebp]
    si = v32937
    di = v32938
    es = v32939
    cs = v32940
    ss = v32941
    ds = v32942
    fs = v32943
    gs = v32944
    cf = -v33062-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v32946
    pf = -v33056-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v32948
    af = -v33060-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v32950
    zf = v33059 [from 0x8048463:sub    esp, 0x8]
    sf = v33058 [from 0x8048463:sub    esp, 0x8]
    tf = v32953
    if = v32954
    df = v32955
    of = v33066 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v32957
    iopl1 = v32958
    nt = v32959
    ?15 = v32960
    memory = {
        size=4; addr=v32935-0x4 [from 0x8048460:push   ebp]; value=v32936
    }
0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v32931
    cx = v32932
    dx = v32933
    bx = v32934
    sp = v32935-0xc [from 0x8048463:sub    esp, 0x8]
    bp = v32935-0x4 [from 0x8048460:push   ebp]
    si = v32937
    di = v32938
    es = v32939
    cs = v32940
    ss = v32941
    ds = v32942
    fs = v32943
    gs = v32944
    cf = -v33062-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v32946
    pf = -v33056-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v32948
    af = -v33060-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v32950
    zf = v33059 [from 0x8048463:sub    esp, 0x8]
    sf = v33058 [from 0x8048463:sub    esp, 0x8]
    tf = v32953
    if = v32954
    df = v32955
    of = v33066 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v32957
    iopl1 = v32958
    nt = v32959
    ?15 = v32960
    memory = {
        size=4; addr=v32935-0xc [from 0x8048463:sub    esp, 0x8]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v32935-0x4 [from 0x8048460:push   ebp]; value=v32936
    }
0x804846d:call   0x8048300
    ax = v32931
    cx = v32932
    dx = v32933
    bx = v32934
    sp = v32935-0x10 [from 0x804846d:call   0x8048300]
    bp = v32935-0x4 [from 0x8048460:push   ebp]
    si = v32937
    di = v32938
    es = v32939
    cs = v32940
    ss = v32941
    ds = v32942
    fs = v32943
    gs = v32944
    cf = -v33062-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v32946
    pf = -v33056-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v32948
    af = -v33060-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v32950
    zf = v33059 [from 0x8048463:sub    esp, 0x8]
    sf = v33058 [from 0x8048463:sub    esp, 0x8]
    tf = v32953
    if = v32954
    df = v32955
    of = v33066 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v32957
    iopl1 = v32958
    nt = v32959
    ?15 = v32960
    memory = {
        size=4; addr=v32935-0x10 [from 0x804846d:call   0x8048300]; value=0x8048472 [from 0x804846d:call   0x8048300]
        size=4; addr=v32935-0xc [from 0x8048463:sub    esp, 0x8]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v32935-0x4 [from 0x8048460:push   ebp]; value=v32936
    }
0x8048472:mov    DWORD PTR ss:[esp], 0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x0]
    }
0x8048479:call   0x8048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x0]
        size=4; addr=<top>; value=0x804847e [from 0x8048479:call   0x8048320]
    }
0x804847e:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "handler"
==============================================
0x8048480:push   ebp
    ax = v33394
    cx = v33395
    dx = v33396
    bx = v33397
    sp = v33398-0x4 [from 0x8048480:push   ebp]
    bp = v33399
    si = v33400
    di = v33401
    es = v33402
    cs = v33403
    ss = v33404
    ds = v33405
    fs = v33406
    gs = v33407
    cf = v33408
    ?1 = v33409
    pf = v33410
    ?3 = v33411
    af = v33412
    ?5 = v33413
    zf = v33414
    sf = v33415
    tf = v33416
    if = v33417
    df = v33418
    of = v33419
    iopl0 = v33420
    iopl1 = v33421
    nt = v33422
    ?15 = v33423
    memory = {
        size=4; addr=v33398-0x4 [from 0x8048480:push   ebp]; value=v33399
    }
0x8048481:mov    ebp, esp
    ax = v33394
    cx = v33395
    dx = v33396
    bx = v33397
    sp = v33398-0x4 [from 0x8048480:push   ebp]
    bp = v33398-0x4 [from 0x8048480:push   ebp]
    si = v33400
    di = v33401
    es = v33402
    cs = v33403
    ss = v33404
    ds = v33405
    fs = v33406
    gs = v33407
    cf = v33408
    ?1 = v33409
    pf = v33410
    ?3 = v33411
    af = v33412
    ?5 = v33413
    zf = v33414
    sf = v33415
    tf = v33416
    if = v33417
    df = v33418
    of = v33419
    iopl0 = v33420
    iopl1 = v33421
    nt = v33422
    ?15 = v33423
    memory = {
        size=4; addr=v33398-0x4 [from 0x8048480:push   ebp]; value=v33399
    }
0x8048483:sub    esp, 0x8
    ax = v33394
    cx = v33395
    dx = v33396
    bx = v33397
    sp = v33398-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v33398-0x4 [from 0x8048480:push   ebp]
    si = v33400
    di = v33401
    es = v33402
    cs = v33403
    ss = v33404
    ds = v33405
    fs = v33406
    gs = v33407
    cf = -v33525-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v33409
    pf = -v33519-0x1 [from 0x8048483:sub    esp, 0x8]
    ?3 = v33411
    af = -v33523-0x1 [from 0x8048483:sub    esp, 0x8]
    ?5 = v33413
    zf = v33522 [from 0x8048483:sub    esp, 0x8]
    sf = v33521 [from 0x8048483:sub    esp, 0x8]
    tf = v33416
    if = v33417
    df = v33418
    of = v33529 [from 0x8048483:sub    esp, 0x8]
    iopl0 = v33420
    iopl1 = v33421
    nt = v33422
    ?15 = v33423
    memory = {
        size=4; addr=v33398-0x4 [from 0x8048480:push   ebp]; value=v33399
    }
0x8048486:inc    DWORD PTR ds:[0x80496f8]
    ax = v33394
    cx = v33395
    dx = v33396
    bx = v33397
    sp = v33398-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v33398-0x4 [from 0x8048480:push   ebp]
    si = v33400
    di = v33401
    es = v33402
    cs = v33403
    ss = v33404
    ds = v33405
    fs = v33406
    gs = v33407
    cf = -v33525-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v33409
    pf = -v33589-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v33411
    af = v33593 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v33413
    zf = v33592 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v33591 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v33416
    if = v33417
    df = v33418
    of = v33596 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v33420
    iopl1 = v33421
    nt = v33422
    ?15 = v33423
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]; value=v33564+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    }
0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v33394
    cx = v33395
    dx = v33396
    bx = v33397
    sp = v33398-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v33398-0x4 [from 0x8048480:push   ebp]
    si = v33400
    di = v33401
    es = v33402
    cs = v33403
    ss = v33404
    ds = v33405
    fs = v33406
    gs = v33407
    cf = -v33525-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v33409
    pf = -v33589-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v33411
    af = v33593 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v33413
    zf = v33592 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v33591 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v33416
    if = v33417
    df = v33418
    of = v33596 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v33420
    iopl1 = v33421
    nt = v33422
    ?15 = v33423
    memory = {
        size=4; addr=v33398-0xc [from 0x8048483:sub    esp, 0x8]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4]
    }
0x8048493:call   0x8048300
    ax = v33394
    cx = v33395
    dx = v33396
    bx = v33397
    sp = v33398-0x10 [from 0x8048493:call   0x8048300]
    bp = v33398-0x4 [from 0x8048480:push   ebp]
    si = v33400
    di = v33401
    es = v33402
    cs = v33403
    ss = v33404
    ds = v33405
    fs = v33406
    gs = v33407
    cf = -v33525-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v33409
    pf = -v33589-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v33411
    af = v33593 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v33413
    zf = v33592 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v33591 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v33416
    if = v33417
    df = v33418
    of = v33596 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v33420
    iopl1 = v33421
    nt = v33422
    ?15 = v33423
    memory = {
        size=4; addr=v33398-0x10 [from 0x8048493:call   0x8048300]; value=0x8048498 [from 0x8048493:call   0x8048300]
        size=4; addr=v33398-0xc [from 0x8048483:sub    esp, 0x8]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4]
    }
0x8048498:mov    DWORD PTR ss:[esp], 0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x0]
    }
0x804849f:call   0x8048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x0]
        size=4; addr=<top>; value=0x80484a4 [from 0x804849f:call   0x8048320]
    }
==============================================
Constant propagation in function "0x80484a4"
==============================================
0x80484a4:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484a5:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484a6:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484a7:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484a8:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484a9:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484aa:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484ab:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484ac:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484ad:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484ae:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
0x80484af:nop    
    ax = v33865
    cx = v33866
    dx = v33867
    bx = v33868
    sp = v33869
    bp = v33870
    si = v33871
    di = v33872
    es = v33873
    cs = v33874
    ss = v33875
    ds = v33876
    fs = v33877
    gs = v33878
    cf = v33879
    ?1 = v33880
    pf = v33881
    ?3 = v33882
    af = v33883
    ?5 = v33884
    zf = v33885
    sf = v33886
    tf = v33887
    if = v33888
    df = v33889
    of = v33890
    iopl0 = v33891
    iopl1 = v33892
    nt = v33893
    ?15 = v33894
    memory = {}
==============================================
Constant propagation in function "__libc_csu_init"
==============================================
0x80484b0:push   ebp
    ax = v34339
    cx = v34340
    dx = v34341
    bx = v34342
    sp = v34343-0x4 [from 0x80484b0:push   ebp]
    bp = v34344
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = v34353
    ?1 = v34354
    pf = v34355
    ?3 = v34356
    af = v34357
    ?5 = v34358
    zf = v34359
    sf = v34360
    tf = v34361
    if = v34362
    df = v34363
    of = v34364
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484b1:mov    ebp, esp
    ax = v34339
    cx = v34340
    dx = v34341
    bx = v34342
    sp = v34343-0x4 [from 0x80484b0:push   ebp]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = v34353
    ?1 = v34354
    pf = v34355
    ?3 = v34356
    af = v34357
    ?5 = v34358
    zf = v34359
    sf = v34360
    tf = v34361
    if = v34362
    df = v34363
    of = v34364
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484b3:push   edi
    ax = v34339
    cx = v34340
    dx = v34341
    bx = v34342
    sp = v34343-0x8 [from 0x80484b3:push   edi]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = v34353
    ?1 = v34354
    pf = v34355
    ?3 = v34356
    af = v34357
    ?5 = v34358
    zf = v34359
    sf = v34360
    tf = v34361
    if = v34362
    df = v34363
    of = v34364
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x8 [from 0x80484b3:push   edi]; value=v34346
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484b4:push   esi
    ax = v34339
    cx = v34340
    dx = v34341
    bx = v34342
    sp = v34343-0xc [from 0x80484b4:push   esi]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = v34353
    ?1 = v34354
    pf = v34355
    ?3 = v34356
    af = v34357
    ?5 = v34358
    zf = v34359
    sf = v34360
    tf = v34361
    if = v34362
    df = v34363
    of = v34364
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0xc [from 0x80484b4:push   esi]; value=v34345
        size=4; addr=v34343-0x8 [from 0x80484b3:push   edi]; value=v34346
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484b5:push   ebx
    ax = v34339
    cx = v34340
    dx = v34341
    bx = v34342
    sp = v34343-0x10 [from 0x80484b5:push   ebx]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = v34353
    ?1 = v34354
    pf = v34355
    ?3 = v34356
    af = v34357
    ?5 = v34358
    zf = v34359
    sf = v34360
    tf = v34361
    if = v34362
    df = v34363
    of = v34364
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x10 [from 0x80484b5:push   ebx]; value=v34342
        size=4; addr=v34343-0xc [from 0x80484b4:push   esi]; value=v34345
        size=4; addr=v34343-0x8 [from 0x80484b3:push   edi]; value=v34346
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484b6:sub    esp, 0xc
    ax = v34339
    cx = v34340
    dx = v34341
    bx = v34342
    sp = v34343-0x1c [from 0x80484b6:sub    esp, 0xc]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = -v34578-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v34354
    pf = -v34572-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v34356
    af = -v34576-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v34358
    zf = v34575 [from 0x80484b6:sub    esp, 0xc]
    sf = v34574 [from 0x80484b6:sub    esp, 0xc]
    tf = v34361
    if = v34362
    df = v34363
    of = v34582 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x10 [from 0x80484b5:push   ebx]; value=v34342
        size=4; addr=v34343-0xc [from 0x80484b4:push   esi]; value=v34345
        size=4; addr=v34343-0x8 [from 0x80484b3:push   edi]; value=v34346
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484b9:call   0x80484be
    ax = v34339
    cx = v34340
    dx = v34341
    bx = v34342
    sp = v34343-0x20 [from 0x80484b9:call   0x80484be]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = -v34578-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v34354
    pf = -v34572-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v34356
    af = -v34576-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v34358
    zf = v34575 [from 0x80484b6:sub    esp, 0xc]
    sf = v34574 [from 0x80484b6:sub    esp, 0xc]
    tf = v34361
    if = v34362
    df = v34363
    of = v34582 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v34343-0x10 [from 0x80484b5:push   ebx]; value=v34342
        size=4; addr=v34343-0xc [from 0x80484b4:push   esi]; value=v34345
        size=4; addr=v34343-0x8 [from 0x80484b3:push   edi]; value=v34346
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484be:pop    ebx
    ax = v34339
    cx = v34340
    dx = v34341
    bx = 0x80484be [from 0x80484b9:call   0x80484be]
    sp = v34343-0x1c [from 0x80484be:pop    ebx]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = -v34578-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v34354
    pf = -v34572-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v34356
    af = -v34576-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v34358
    zf = v34575 [from 0x80484b6:sub    esp, 0xc]
    sf = v34574 [from 0x80484b6:sub    esp, 0xc]
    tf = v34361
    if = v34362
    df = v34363
    of = v34582 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v34343-0x10 [from 0x80484b5:push   ebx]; value=v34342
        size=4; addr=v34343-0xc [from 0x80484b4:push   esi]; value=v34345
        size=4; addr=v34343-0x8 [from 0x80484b3:push   edi]; value=v34346
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484bf:add    ebx, 0x120a
    ax = v34339
    cx = v34340
    dx = v34341
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x120a]
    sp = v34343-0x1c [from 0x80484be:pop    ebx]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?1 = v34354
    pf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?3 = v34356
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x120a]
    ?5 = v34358
    zf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    tf = v34361
    if = v34362
    df = v34363
    of = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v34343-0x10 [from 0x80484b5:push   ebx]; value=v34342
        size=4; addr=v34343-0xc [from 0x80484b4:push   esi]; value=v34345
        size=4; addr=v34343-0x8 [from 0x80484b3:push   edi]; value=v34346
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484c5:call   0x80482c8
    ax = v34339
    cx = v34340
    dx = v34341
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x120a]
    sp = v34343-0x20 [from 0x80484c5:call   0x80482c8]
    bp = v34343-0x4 [from 0x80484b0:push   ebp]
    si = v34345
    di = v34346
    es = v34347
    cs = v34348
    ss = v34349
    ds = v34350
    fs = v34351
    gs = v34352
    cf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?1 = v34354
    pf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?3 = v34356
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x120a]
    ?5 = v34358
    zf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    tf = v34361
    if = v34362
    df = v34363
    of = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    iopl0 = v34365
    iopl1 = v34366
    nt = v34367
    ?15 = v34368
    memory = {
        size=4; addr=v34343-0x20 [from 0x80484c5:call   0x80482c8]; value=0x80484ca [from 0x80484c5:call   0x80482c8]
        size=4; addr=v34343-0x10 [from 0x80484b5:push   ebx]; value=v34342
        size=4; addr=v34343-0xc [from 0x80484b4:push   esi]; value=v34345
        size=4; addr=v34343-0x8 [from 0x80484b3:push   edi]; value=v34346
        size=4; addr=v34343-0x4 [from 0x80484b0:push   ebp]; value=v34344
    }
0x80484ca:lea    eax, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d0:lea    edx, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d6:sub    eax, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d8:sar    eax, 0x2
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484de:jne    0x80484f0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e0:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e3:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v35163 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e4:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v35163 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v35199 [from 0x80484e4:pop    esi]
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e5:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v35163 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v35199 [from 0x80484e4:pop    esi]
    di = v35235 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e6:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v35163 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v35271 [from 0x80484e6:pop    ebp]
    si = v35199 [from 0x80484e4:pop    esi]
    di = v35235 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e7:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v35163 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v35271 [from 0x80484e6:pop    ebp]
    si = v35199 [from 0x80484e4:pop    esi]
    di = v35235 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e9:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f0:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f2:mov    esi, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f4:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484fa:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048500:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
0x8048502:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048503:add    esi, 0x4
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048509:jb     0x8048500
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850b:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850e:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850f:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048510:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048511:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048512:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048513:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048519:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_fini"
==============================================
0x8048520:push   ebp
    ax = v36240
    cx = v36241
    dx = v36242
    bx = v36243
    sp = v36244-0x4 [from 0x8048520:push   ebp]
    bp = v36245
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = v36254
    ?1 = v36255
    pf = v36256
    ?3 = v36257
    af = v36258
    ?5 = v36259
    zf = v36260
    sf = v36261
    tf = v36262
    if = v36263
    df = v36264
    of = v36265
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048521:mov    ebp, esp
    ax = v36240
    cx = v36241
    dx = v36242
    bx = v36243
    sp = v36244-0x4 [from 0x8048520:push   ebp]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = v36254
    ?1 = v36255
    pf = v36256
    ?3 = v36257
    af = v36258
    ?5 = v36259
    zf = v36260
    sf = v36261
    tf = v36262
    if = v36263
    df = v36264
    of = v36265
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048523:push   edi
    ax = v36240
    cx = v36241
    dx = v36242
    bx = v36243
    sp = v36244-0x8 [from 0x8048523:push   edi]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = v36254
    ?1 = v36255
    pf = v36256
    ?3 = v36257
    af = v36258
    ?5 = v36259
    zf = v36260
    sf = v36261
    tf = v36262
    if = v36263
    df = v36264
    of = v36265
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048524:push   esi
    ax = v36240
    cx = v36241
    dx = v36242
    bx = v36243
    sp = v36244-0xc [from 0x8048524:push   esi]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = v36254
    ?1 = v36255
    pf = v36256
    ?3 = v36257
    af = v36258
    ?5 = v36259
    zf = v36260
    sf = v36261
    tf = v36262
    if = v36263
    df = v36264
    of = v36265
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048525:push   ebx
    ax = v36240
    cx = v36241
    dx = v36242
    bx = v36243
    sp = v36244-0x10 [from 0x8048525:push   ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = v36254
    ?1 = v36255
    pf = v36256
    ?3 = v36257
    af = v36258
    ?5 = v36259
    zf = v36260
    sf = v36261
    tf = v36262
    if = v36263
    df = v36264
    of = v36265
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048526:sub    esp, 0xc
    ax = v36240
    cx = v36241
    dx = v36242
    bx = v36243
    sp = v36244-0x1c [from 0x8048526:sub    esp, 0xc]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = -v36479-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v36255
    pf = -v36473-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v36257
    af = -v36477-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v36259
    zf = v36476 [from 0x8048526:sub    esp, 0xc]
    sf = v36475 [from 0x8048526:sub    esp, 0xc]
    tf = v36262
    if = v36263
    df = v36264
    of = v36483 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048529:call   0x804852e
    ax = v36240
    cx = v36241
    dx = v36242
    bx = v36243
    sp = v36244-0x20 [from 0x8048529:call   0x804852e]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = -v36479-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v36255
    pf = -v36473-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v36257
    af = -v36477-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v36259
    zf = v36476 [from 0x8048526:sub    esp, 0xc]
    sf = v36475 [from 0x8048526:sub    esp, 0xc]
    tf = v36262
    if = v36263
    df = v36264
    of = v36483 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x804852e:pop    ebx
    ax = v36240
    cx = v36241
    dx = v36242
    bx = 0x804852e [from 0x8048529:call   0x804852e]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = -v36479-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v36255
    pf = -v36473-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v36257
    af = -v36477-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v36259
    zf = v36476 [from 0x8048526:sub    esp, 0xc]
    sf = v36475 [from 0x8048526:sub    esp, 0xc]
    tf = v36262
    if = v36263
    df = v36264
    of = v36483 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x804852f:add    ebx, 0x119a
    ax = v36240
    cx = v36241
    dx = v36242
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v36255
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v36257
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v36259
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048535:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v36241
    dx = v36242
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v36255
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v36257
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v36259
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x804853b:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v36241
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v36255
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v36257
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v36259
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048541:sub    eax, edx
    ax = 0x0 [from 0x8048541:sub    eax, edx]
    cx = v36241
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x8048541:sub    eax, edx]
    ?1 = v36255
    pf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    ?3 = v36257
    af = 0x0 [from 0x8048541:sub    eax, edx]
    ?5 = v36259
    zf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    sf = 0x0 [from 0x8048541:sub    eax, edx]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x8048541:sub    eax, edx]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048543:sar    eax, 0x2
    ax = 0x0 [from 0x8048543:sar    eax, 0x2]
    cx = v36241
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v36255
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    ?3 = v36257
    af = <top>
    ?5 = v36259
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    sf = 0x0 [from 0x8048543:sar    eax, 0x2]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x8048543:sar    eax, 0x2]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = 0x0 [from 0x8048543:sar    eax, 0x2]
    cx = v36241
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v36255
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    ?3 = v36257
    af = <top>
    ?5 = v36259
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    sf = 0x0 [from 0x8048543:sar    eax, 0x2]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x8048543:sar    eax, 0x2]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048549:dec    eax
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v36241
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v36255
    pf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?3 = v36257
    af = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?5 = v36259
    zf = 0x0 [from 0x8048549:dec    eax]
    sf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x8048549:dec    eax]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x804854a:cmp    eax, 0xff
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v36241
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v36255
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v36257
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v36259
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x804854d:je     0x804856b
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v36241
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x1c [from 0x804852e:pop    ebx]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v36255
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v36257
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v36259
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v36244-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x804854f:lea    esi, [edx + eax*0x4]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048552:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048554:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804855a:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048560:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
0x8048562:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048563:sub    esi, 0x4
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0], edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048569:jne    0x8048560
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804856b:call   0x80485b0
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v36241
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v36244-0x20 [from 0x804856b:call   0x80485b0]
    bp = v36244-0x4 [from 0x8048520:push   ebp]
    si = v36246
    di = v36247
    es = v36248
    cs = v36249
    ss = v36250
    ds = v36251
    fs = v36252
    gs = v36253
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v36255
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v36257
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v36259
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v36262
    if = v36263
    df = v36264
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v36266
    iopl1 = v36267
    nt = v36268
    ?15 = v36269
    memory = {
        size=4; addr=v36244-0x20 [from 0x804856b:call   0x80485b0]; value=0x8048570 [from 0x804856b:call   0x80485b0]
        size=4; addr=v36244-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v36244-0x10 [from 0x8048525:push   ebx]; value=v36243
        size=4; addr=v36244-0xc [from 0x8048524:push   esi]; value=v36246
        size=4; addr=v36244-0x8 [from 0x8048523:push   edi]; value=v36247
        size=4; addr=v36244-0x4 [from 0x8048520:push   ebp]; value=v36245
    }
0x8048570:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048573:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048574:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048575:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048576:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048577:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048578"
==============================================
0x8048578:nop    
    ax = v37872
    cx = v37873
    dx = v37874
    bx = v37875
    sp = v37876
    bp = v37877
    si = v37878
    di = v37879
    es = v37880
    cs = v37881
    ss = v37882
    ds = v37883
    fs = v37884
    gs = v37885
    cf = v37886
    ?1 = v37887
    pf = v37888
    ?3 = v37889
    af = v37890
    ?5 = v37891
    zf = v37892
    sf = v37893
    tf = v37894
    if = v37895
    df = v37896
    of = v37897
    iopl0 = v37898
    iopl1 = v37899
    nt = v37900
    ?15 = v37901
    memory = {}
0x8048579:nop    
    ax = v37872
    cx = v37873
    dx = v37874
    bx = v37875
    sp = v37876
    bp = v37877
    si = v37878
    di = v37879
    es = v37880
    cs = v37881
    ss = v37882
    ds = v37883
    fs = v37884
    gs = v37885
    cf = v37886
    ?1 = v37887
    pf = v37888
    ?3 = v37889
    af = v37890
    ?5 = v37891
    zf = v37892
    sf = v37893
    tf = v37894
    if = v37895
    df = v37896
    of = v37897
    iopl0 = v37898
    iopl1 = v37899
    nt = v37900
    ?15 = v37901
    memory = {}
0x804857a:nop    
    ax = v37872
    cx = v37873
    dx = v37874
    bx = v37875
    sp = v37876
    bp = v37877
    si = v37878
    di = v37879
    es = v37880
    cs = v37881
    ss = v37882
    ds = v37883
    fs = v37884
    gs = v37885
    cf = v37886
    ?1 = v37887
    pf = v37888
    ?3 = v37889
    af = v37890
    ?5 = v37891
    zf = v37892
    sf = v37893
    tf = v37894
    if = v37895
    df = v37896
    of = v37897
    iopl0 = v37898
    iopl1 = v37899
    nt = v37900
    ?15 = v37901
    memory = {}
0x804857b:nop    
    ax = v37872
    cx = v37873
    dx = v37874
    bx = v37875
    sp = v37876
    bp = v37877
    si = v37878
    di = v37879
    es = v37880
    cs = v37881
    ss = v37882
    ds = v37883
    fs = v37884
    gs = v37885
    cf = v37886
    ?1 = v37887
    pf = v37888
    ?3 = v37889
    af = v37890
    ?5 = v37891
    zf = v37892
    sf = v37893
    tf = v37894
    if = v37895
    df = v37896
    of = v37897
    iopl0 = v37898
    iopl1 = v37899
    nt = v37900
    ?15 = v37901
    memory = {}
0x804857c:nop    
    ax = v37872
    cx = v37873
    dx = v37874
    bx = v37875
    sp = v37876
    bp = v37877
    si = v37878
    di = v37879
    es = v37880
    cs = v37881
    ss = v37882
    ds = v37883
    fs = v37884
    gs = v37885
    cf = v37886
    ?1 = v37887
    pf = v37888
    ?3 = v37889
    af = v37890
    ?5 = v37891
    zf = v37892
    sf = v37893
    tf = v37894
    if = v37895
    df = v37896
    of = v37897
    iopl0 = v37898
    iopl1 = v37899
    nt = v37900
    ?15 = v37901
    memory = {}
0x804857d:nop    
    ax = v37872
    cx = v37873
    dx = v37874
    bx = v37875
    sp = v37876
    bp = v37877
    si = v37878
    di = v37879
    es = v37880
    cs = v37881
    ss = v37882
    ds = v37883
    fs = v37884
    gs = v37885
    cf = v37886
    ?1 = v37887
    pf = v37888
    ?3 = v37889
    af = v37890
    ?5 = v37891
    zf = v37892
    sf = v37893
    tf = v37894
    if = v37895
    df = v37896
    of = v37897
    iopl0 = v37898
    iopl1 = v37899
    nt = v37900
    ?15 = v37901
    memory = {}
0x804857e:nop    
    ax = v37872
    cx = v37873
    dx = v37874
    bx = v37875
    sp = v37876
    bp = v37877
    si = v37878
    di = v37879
    es = v37880
    cs = v37881
    ss = v37882
    ds = v37883
    fs = v37884
    gs = v37885
    cf = v37886
    ?1 = v37887
    pf = v37888
    ?3 = v37889
    af = v37890
    ?5 = v37891
    zf = v37892
    sf = v37893
    tf = v37894
    if = v37895
    df = v37896
    of = v37897
    iopl0 = v37898
    iopl1 = v37899
    nt = v37900
    ?15 = v37901
    memory = {}
0x804857f:nop    
    ax = v37872
    cx = v37873
    dx = v37874
    bx = v37875
    sp = v37876
    bp = v37877
    si = v37878
    di = v37879
    es = v37880
    cs = v37881
    ss = v37882
    ds = v37883
    fs = v37884
    gs = v37885
    cf = v37886
    ?1 = v37887
    pf = v37888
    ?3 = v37889
    af = v37890
    ?5 = v37891
    zf = v37892
    sf = v37893
    tf = v37894
    if = v37895
    df = v37896
    of = v37897
    iopl0 = v37898
    iopl1 = v37899
    nt = v37900
    ?15 = v37901
    memory = {}
==============================================
Constant propagation in function "__do_global_ctors_aux"
==============================================
0x8048580:push   ebp
    ax = v38218
    cx = v38219
    dx = v38220
    bx = v38221
    sp = v38222-0x4 [from 0x8048580:push   ebp]
    bp = v38223
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = v38232
    ?1 = v38233
    pf = v38234
    ?3 = v38235
    af = v38236
    ?5 = v38237
    zf = v38238
    sf = v38239
    tf = v38240
    if = v38241
    df = v38242
    of = v38243
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x8048581:mov    ebp, esp
    ax = v38218
    cx = v38219
    dx = v38220
    bx = v38221
    sp = v38222-0x4 [from 0x8048580:push   ebp]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = v38232
    ?1 = v38233
    pf = v38234
    ?3 = v38235
    af = v38236
    ?5 = v38237
    zf = v38238
    sf = v38239
    tf = v38240
    if = v38241
    df = v38242
    of = v38243
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x8048583:push   ebx
    ax = v38218
    cx = v38219
    dx = v38220
    bx = v38221
    sp = v38222-0x8 [from 0x8048583:push   ebx]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = v38232
    ?1 = v38233
    pf = v38234
    ?3 = v38235
    af = v38236
    ?5 = v38237
    zf = v38238
    sf = v38239
    tf = v38240
    if = v38241
    df = v38242
    of = v38243
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x8048584:sub    esp, 0x4
    ax = v38218
    cx = v38219
    dx = v38220
    bx = v38221
    sp = v38222-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38385-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v38233
    pf = -v38379-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v38235
    af = -v38383-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v38237
    zf = v38382 [from 0x8048584:sub    esp, 0x4]
    sf = v38381 [from 0x8048584:sub    esp, 0x4]
    tf = v38240
    if = v38241
    df = v38242
    of = v38389 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x8048587:mov    ebx, 0x80495e8
    ax = v38218
    cx = v38219
    dx = v38220
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v38222-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38385-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v38233
    pf = -v38379-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v38235
    af = -v38383-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v38237
    zf = v38382 [from 0x8048584:sub    esp, 0x4]
    sf = v38381 [from 0x8048584:sub    esp, 0x4]
    tf = v38240
    if = v38241
    df = v38242
    of = v38389 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]
    ax = v38457 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v38219
    dx = v38220
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v38222-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38385-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v38233
    pf = -v38379-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v38235
    af = -v38383-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v38237
    zf = v38382 [from 0x8048584:sub    esp, 0x4]
    sf = v38381 [from 0x8048584:sub    esp, 0x4]
    tf = v38240
    if = v38241
    df = v38242
    of = v38389 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x8048591:cmp    eax, 0xff
    ax = v38457 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v38219
    dx = v38220
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v38222-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38522-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v38233
    pf = -v38516-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v38235
    af = -v38520-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v38237
    zf = v38519 [from 0x8048591:cmp    eax, 0xff]
    sf = v38518 [from 0x8048591:cmp    eax, 0xff]
    tf = v38240
    if = v38241
    df = v38242
    of = v38526 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x8048594:je     0x80485ac
    ax = v38457 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v38219
    dx = v38220
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v38222-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38522-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v38233
    pf = -v38516-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v38235
    af = -v38520-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v38237
    zf = v38519 [from 0x8048591:cmp    eax, 0xff]
    sf = v38518 [from 0x8048591:cmp    eax, 0xff]
    tf = v38240
    if = v38241
    df = v38242
    of = v38526 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x8048596:lea    esi, [esi + 0x0]
    ax = v38457 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v38219
    dx = v38220
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v38222-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38522-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v38233
    pf = -v38516-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v38235
    af = -v38520-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v38237
    zf = v38519 [from 0x8048591:cmp    eax, 0xff]
    sf = v38518 [from 0x8048591:cmp    eax, 0xff]
    tf = v38240
    if = v38241
    df = v38242
    of = v38526 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x8048599:lea    edi, [edi + 0x0]
    ax = v38457 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v38219
    dx = v38220
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v38222-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v38225 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38522-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v38233
    pf = -v38516-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v38235
    af = -v38520-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v38237
    zf = v38519 [from 0x8048591:cmp    eax, 0xff]
    sf = v38518 [from 0x8048591:cmp    eax, 0xff]
    tf = v38240
    if = v38241
    df = v38242
    of = v38526 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x80485a0:sub    ebx, 0x4
    ax = v38457 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v38219
    dx = v38220
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x4]
    sp = v38222-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v38225 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?1 = v38233
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x4]
    ?3 = v38235
    af = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?5 = v38237
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    tf = v38240
    if = v38241
    df = v38242
    of = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x80485a3:call   eax
    ax = v38457 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v38219
    dx = v38220
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x4]
    sp = v38222-0x10 [from 0x80485a3:call   eax]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v38225 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?1 = v38233
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x4]
    ?3 = v38235
    af = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?5 = v38237
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    tf = v38240
    if = v38241
    df = v38242
    of = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x10 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485a7:cmp    eax, 0xff
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485aa:jne    0x80485a0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485ac:pop    eax
    ax = v38907 [from 0x80485ac:pop    eax]
    cx = v38219
    dx = v38220
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v38222-0x8 [from 0x80485ac:pop    eax]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38522-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v38233
    pf = -v38516-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v38235
    af = -v38520-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v38237
    zf = v38519 [from 0x8048591:cmp    eax, 0xff]
    sf = v38518 [from 0x8048591:cmp    eax, 0xff]
    tf = v38240
    if = v38241
    df = v38242
    of = v38526 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x80485ad:pop    ebx
    ax = v38907 [from 0x80485ac:pop    eax]
    cx = v38219
    dx = v38220
    bx = v38221
    sp = v38222-0x4 [from 0x80485ad:pop    ebx]
    bp = v38222-0x4 [from 0x8048580:push   ebp]
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38522-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v38233
    pf = -v38516-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v38235
    af = -v38520-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v38237
    zf = v38519 [from 0x8048591:cmp    eax, 0xff]
    sf = v38518 [from 0x8048591:cmp    eax, 0xff]
    tf = v38240
    if = v38241
    df = v38242
    of = v38526 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x80485ae:pop    ebp
    ax = v38907 [from 0x80485ac:pop    eax]
    cx = v38219
    dx = v38220
    bx = v38221
    sp = v38222 [from 0x80485ae:pop    ebp]
    bp = v38223
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38522-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v38233
    pf = -v38516-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v38235
    af = -v38520-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v38237
    zf = v38519 [from 0x8048591:cmp    eax, 0xff]
    sf = v38518 [from 0x8048591:cmp    eax, 0xff]
    tf = v38240
    if = v38241
    df = v38242
    of = v38526 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
0x80485af:ret    
    ax = v38907 [from 0x80485ac:pop    eax]
    cx = v38219
    dx = v38220
    bx = v38221
    sp = v38222+0x4 [from 0x80485af:ret    ]
    bp = v38223
    si = v38224
    di = v38225
    es = v38226
    cs = v38227
    ss = v38228
    ds = v38229
    fs = v38230
    gs = v38231
    cf = -v38522-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v38233
    pf = -v38516-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v38235
    af = -v38520-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v38237
    zf = v38519 [from 0x8048591:cmp    eax, 0xff]
    sf = v38518 [from 0x8048591:cmp    eax, 0xff]
    tf = v38240
    if = v38241
    df = v38242
    of = v38526 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v38244
    iopl1 = v38245
    nt = v38246
    ?15 = v38247
    memory = {
        size=4; addr=v38222-0x8 [from 0x8048583:push   ebx]; value=v38221
        size=4; addr=v38222-0x4 [from 0x8048580:push   ebp]; value=v38223
    }
==============================================
Constant propagation in function "_fini"
==============================================
0x80485b0:push   ebp
    ax = v39079
    cx = v39080
    dx = v39081
    bx = v39082
    sp = v39083-0x4 [from 0x80485b0:push   ebp]
    bp = v39084
    si = v39085
    di = v39086
    es = v39087
    cs = v39088
    ss = v39089
    ds = v39090
    fs = v39091
    gs = v39092
    cf = v39093
    ?1 = v39094
    pf = v39095
    ?3 = v39096
    af = v39097
    ?5 = v39098
    zf = v39099
    sf = v39100
    tf = v39101
    if = v39102
    df = v39103
    of = v39104
    iopl0 = v39105
    iopl1 = v39106
    nt = v39107
    ?15 = v39108
    memory = {
        size=4; addr=v39083-0x4 [from 0x80485b0:push   ebp]; value=v39084
    }
0x80485b1:mov    ebp, esp
    ax = v39079
    cx = v39080
    dx = v39081
    bx = v39082
    sp = v39083-0x4 [from 0x80485b0:push   ebp]
    bp = v39083-0x4 [from 0x80485b0:push   ebp]
    si = v39085
    di = v39086
    es = v39087
    cs = v39088
    ss = v39089
    ds = v39090
    fs = v39091
    gs = v39092
    cf = v39093
    ?1 = v39094
    pf = v39095
    ?3 = v39096
    af = v39097
    ?5 = v39098
    zf = v39099
    sf = v39100
    tf = v39101
    if = v39102
    df = v39103
    of = v39104
    iopl0 = v39105
    iopl1 = v39106
    nt = v39107
    ?15 = v39108
    memory = {
        size=4; addr=v39083-0x4 [from 0x80485b0:push   ebp]; value=v39084
    }
0x80485b3:push   ebx
    ax = v39079
    cx = v39080
    dx = v39081
    bx = v39082
    sp = v39083-0x8 [from 0x80485b3:push   ebx]
    bp = v39083-0x4 [from 0x80485b0:push   ebp]
    si = v39085
    di = v39086
    es = v39087
    cs = v39088
    ss = v39089
    ds = v39090
    fs = v39091
    gs = v39092
    cf = v39093
    ?1 = v39094
    pf = v39095
    ?3 = v39096
    af = v39097
    ?5 = v39098
    zf = v39099
    sf = v39100
    tf = v39101
    if = v39102
    df = v39103
    of = v39104
    iopl0 = v39105
    iopl1 = v39106
    nt = v39107
    ?15 = v39108
    memory = {
        size=4; addr=v39083-0x8 [from 0x80485b3:push   ebx]; value=v39082
        size=4; addr=v39083-0x4 [from 0x80485b0:push   ebp]; value=v39084
    }
0x80485b4:push   eax
    ax = v39079
    cx = v39080
    dx = v39081
    bx = v39082
    sp = v39083-0xc [from 0x80485b4:push   eax]
    bp = v39083-0x4 [from 0x80485b0:push   ebp]
    si = v39085
    di = v39086
    es = v39087
    cs = v39088
    ss = v39089
    ds = v39090
    fs = v39091
    gs = v39092
    cf = v39093
    ?1 = v39094
    pf = v39095
    ?3 = v39096
    af = v39097
    ?5 = v39098
    zf = v39099
    sf = v39100
    tf = v39101
    if = v39102
    df = v39103
    of = v39104
    iopl0 = v39105
    iopl1 = v39106
    nt = v39107
    ?15 = v39108
    memory = {
        size=4; addr=v39083-0xc [from 0x80485b4:push   eax]; value=v39079
        size=4; addr=v39083-0x8 [from 0x80485b3:push   ebx]; value=v39082
        size=4; addr=v39083-0x4 [from 0x80485b0:push   ebp]; value=v39084
    }
0x80485b5:call   0x80485ba
    ax = v39079
    cx = v39080
    dx = v39081
    bx = v39082
    sp = v39083-0x10 [from 0x80485b5:call   0x80485ba]
    bp = v39083-0x4 [from 0x80485b0:push   ebp]
    si = v39085
    di = v39086
    es = v39087
    cs = v39088
    ss = v39089
    ds = v39090
    fs = v39091
    gs = v39092
    cf = v39093
    ?1 = v39094
    pf = v39095
    ?3 = v39096
    af = v39097
    ?5 = v39098
    zf = v39099
    sf = v39100
    tf = v39101
    if = v39102
    df = v39103
    of = v39104
    iopl0 = v39105
    iopl1 = v39106
    nt = v39107
    ?15 = v39108
    memory = {
        size=4; addr=v39083-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v39083-0xc [from 0x80485b4:push   eax]; value=v39079
        size=4; addr=v39083-0x8 [from 0x80485b3:push   ebx]; value=v39082
        size=4; addr=v39083-0x4 [from 0x80485b0:push   ebp]; value=v39084
    }
0x80485ba:pop    ebx
    ax = v39079
    cx = v39080
    dx = v39081
    bx = 0x80485ba [from 0x80485b5:call   0x80485ba]
    sp = v39083-0xc [from 0x80485ba:pop    ebx]
    bp = v39083-0x4 [from 0x80485b0:push   ebp]
    si = v39085
    di = v39086
    es = v39087
    cs = v39088
    ss = v39089
    ds = v39090
    fs = v39091
    gs = v39092
    cf = v39093
    ?1 = v39094
    pf = v39095
    ?3 = v39096
    af = v39097
    ?5 = v39098
    zf = v39099
    sf = v39100
    tf = v39101
    if = v39102
    df = v39103
    of = v39104
    iopl0 = v39105
    iopl1 = v39106
    nt = v39107
    ?15 = v39108
    memory = {
        size=4; addr=v39083-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v39083-0xc [from 0x80485b4:push   eax]; value=v39079
        size=4; addr=v39083-0x8 [from 0x80485b3:push   ebx]; value=v39082
        size=4; addr=v39083-0x4 [from 0x80485b0:push   ebp]; value=v39084
    }
0x80485bb:add    ebx, 0x110e
    ax = v39079
    cx = v39080
    dx = v39081
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x110e]
    sp = v39083-0xc [from 0x80485ba:pop    ebx]
    bp = v39083-0x4 [from 0x80485b0:push   ebp]
    si = v39085
    di = v39086
    es = v39087
    cs = v39088
    ss = v39089
    ds = v39090
    fs = v39091
    gs = v39092
    cf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?1 = v39094
    pf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?3 = v39096
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x110e]
    ?5 = v39098
    zf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    tf = v39101
    if = v39102
    df = v39103
    of = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    iopl0 = v39105
    iopl1 = v39106
    nt = v39107
    ?15 = v39108
    memory = {
        size=4; addr=v39083-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v39083-0xc [from 0x80485b4:push   eax]; value=v39079
        size=4; addr=v39083-0x8 [from 0x80485b3:push   ebx]; value=v39082
        size=4; addr=v39083-0x4 [from 0x80485b0:push   ebp]; value=v39084
    }
0x80485c1:call   0x8048390
    ax = v39079
    cx = v39080
    dx = v39081
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x110e]
    sp = v39083-0x10 [from 0x80485c1:call   0x8048390]
    bp = v39083-0x4 [from 0x80485b0:push   ebp]
    si = v39085
    di = v39086
    es = v39087
    cs = v39088
    ss = v39089
    ds = v39090
    fs = v39091
    gs = v39092
    cf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?1 = v39094
    pf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?3 = v39096
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x110e]
    ?5 = v39098
    zf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    tf = v39101
    if = v39102
    df = v39103
    of = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    iopl0 = v39105
    iopl1 = v39106
    nt = v39107
    ?15 = v39108
    memory = {
        size=4; addr=v39083-0x10 [from 0x80485c1:call   0x8048390]; value=0x80485c6 [from 0x80485c1:call   0x8048390]
        size=4; addr=v39083-0xc [from 0x80485b4:push   eax]; value=v39079
        size=4; addr=v39083-0x8 [from 0x80485b3:push   ebx]; value=v39082
        size=4; addr=v39083-0x4 [from 0x80485b0:push   ebp]; value=v39084
    }
0x80485c6:pop    eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c7:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c8:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c9:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
analyzed headers: 1
