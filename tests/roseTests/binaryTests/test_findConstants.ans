==============================================
Constant propagation in function "_init"
==============================================
0x80482c8:push   ebp
    ax = v19655
    cx = v19656
    dx = v19657
    bx = v19658
    sp = v19659-0x4 [from 0x80482c8:push   ebp]
    bp = v19660
    si = v19661
    di = v19662
    es = v19663
    cs = v19664
    ss = v19665
    ds = v19666
    fs = v19667
    gs = v19668
    cf = v19669
    ?1 = v19670
    pf = v19671
    ?3 = v19672
    af = v19673
    ?5 = v19674
    zf = v19675
    sf = v19676
    tf = v19677
    if = v19678
    df = v19679
    of = v19680
    iopl0 = v19681
    iopl1 = v19682
    nt = v19683
    ?15 = v19684
    memory = {
        size=4; addr=v19659-0x4 [from 0x80482c8:push   ebp]; value=v19660
    }
0x80482c9:mov    ebp, esp
    ax = v19655
    cx = v19656
    dx = v19657
    bx = v19658
    sp = v19659-0x4 [from 0x80482c8:push   ebp]
    bp = v19659-0x4 [from 0x80482c8:push   ebp]
    si = v19661
    di = v19662
    es = v19663
    cs = v19664
    ss = v19665
    ds = v19666
    fs = v19667
    gs = v19668
    cf = v19669
    ?1 = v19670
    pf = v19671
    ?3 = v19672
    af = v19673
    ?5 = v19674
    zf = v19675
    sf = v19676
    tf = v19677
    if = v19678
    df = v19679
    of = v19680
    iopl0 = v19681
    iopl1 = v19682
    nt = v19683
    ?15 = v19684
    memory = {
        size=4; addr=v19659-0x4 [from 0x80482c8:push   ebp]; value=v19660
    }
0x80482cb:sub    esp, 0x08
    ax = v19655
    cx = v19656
    dx = v19657
    bx = v19658
    sp = v19659-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v19659-0x4 [from 0x80482c8:push   ebp]
    si = v19661
    di = v19662
    es = v19663
    cs = v19664
    ss = v19665
    ds = v19666
    fs = v19667
    gs = v19668
    cf = -v19786-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v19670
    pf = -v19780-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v19672
    af = -v19784-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v19674
    zf = v19783 [from 0x80482cb:sub    esp, 0x08]
    sf = v19782 [from 0x80482cb:sub    esp, 0x08]
    tf = v19677
    if = v19678
    df = v19679
    of = v19790 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v19681
    iopl1 = v19682
    nt = v19683
    ?15 = v19684
    memory = {
        size=4; addr=v19659-0x4 [from 0x80482c8:push   ebp]; value=v19660
    }
0x80482ce:call   0x08048364
    ax = v19655
    cx = v19656
    dx = v19657
    bx = v19658
    sp = v19659-0x10 [from 0x80482ce:call   0x08048364]
    bp = v19659-0x4 [from 0x80482c8:push   ebp]
    si = v19661
    di = v19662
    es = v19663
    cs = v19664
    ss = v19665
    ds = v19666
    fs = v19667
    gs = v19668
    cf = -v19786-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v19670
    pf = -v19780-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v19672
    af = -v19784-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v19674
    zf = v19783 [from 0x80482cb:sub    esp, 0x08]
    sf = v19782 [from 0x80482cb:sub    esp, 0x08]
    tf = v19677
    if = v19678
    df = v19679
    of = v19790 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v19681
    iopl1 = v19682
    nt = v19683
    ?15 = v19684
    memory = {
        size=4; addr=v19659-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v19659-0x4 [from 0x80482c8:push   ebp]; value=v19660
    }
0x80482d3:call   0x080483d0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
0x80482d8:call   0x08048580
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
0x80482dd:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482de:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "***unassigned blocks***"
==============================================
0x80482df:add    bh, bh
    ax = v20157
    cx = v20158
    dx = v20159
    bx = v20225 [from 0x80482df:add    bh, bh]
    sp = v20161
    bp = v20162
    si = v20163
    di = v20164
    es = v20165
    cs = v20166
    ss = v20167
    ds = v20168
    fs = v20169
    gs = v20170
    cf = v20218 [from 0x80482df:add    bh, bh]
    ?1 = v20172
    pf = -v20213-0x1 [from 0x80482df:add    bh, bh]
    ?3 = v20174
    af = v20217 [from 0x80482df:add    bh, bh]
    ?5 = v20176
    zf = v20216 [from 0x80482df:add    bh, bh]
    sf = v20215 [from 0x80482df:add    bh, bh]
    tf = v20179
    if = v20180
    df = v20181
    of = v20221 [from 0x80482df:add    bh, bh]
    iopl0 = v20183
    iopl1 = v20184
    nt = v20185
    ?15 = v20186
    memory = {}
0x80482e1:xor    eax, 0x080496cc
    ax = v20259 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = v20158
    dx = v20159
    bx = v20225 [from 0x80482df:add    bh, bh]
    sp = v20161
    bp = v20162
    si = v20163
    di = v20164
    es = v20165
    cs = v20166
    ss = v20167
    ds = v20168
    fs = v20169
    gs = v20170
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = v20172
    pf = -v20275-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = v20174
    af = <top>
    ?5 = v20176
    zf = v20278 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = v20277 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = v20179
    if = v20180
    df = v20181
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = v20183
    iopl1 = v20184
    nt = v20185
    ?15 = v20186
    memory = {}
0x80482e6:jmp    DWORD PTR ds:[0x080496d0]
    ax = v20259 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = v20158
    dx = v20159
    bx = v20225 [from 0x80482df:add    bh, bh]
    sp = v20161
    bp = v20162
    si = v20163
    di = v20164
    es = v20165
    cs = v20166
    ss = v20167
    ds = v20168
    fs = v20169
    gs = v20170
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = v20172
    pf = -v20275-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = v20174
    af = <top>
    ?5 = v20176
    zf = v20278 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = v20277 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = v20179
    if = v20180
    df = v20181
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = v20183
    iopl1 = v20184
    nt = v20185
    ?15 = v20186
    memory = {}
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
        size=1; addr=<top>; value=<top>
    }
0x80482f6:push   0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
    }
0x80482fb:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
    }
0x80482e0:push   DWORD PTR ds:[0x080496cc]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
        size=4; addr=<top>; value=v20592 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    }
0x8048306:push   0x00000008
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x00000008]
    }
0x804830b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x00000008]
    }
0x8048316:push   0x00000010
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x00000010]
    }
0x804831b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x00000010]
    }
0x8048326:push   0x00000018
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x00000018]
    }
0x804832b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x00000018]
    }
0x8048336:push   0x00000020
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x00000020]
    }
0x804833b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x00000020]
    }
0x80483ce:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
0x80483ef:call   0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=<top>; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048434:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804843a:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048456:lea    esi, [esi + 0x00]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048459:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e9:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048513:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048519:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804854f:lea    esi, [edx + eax*0x04]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048552:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048554:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804855a:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048560:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
0x8048562:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048563:sub    esi, 0x04
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0], edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048569:jne    0x08048560
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "signal@plt"
==============================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v22055
    cx = v22056
    dx = v22057
    bx = v22058
    sp = v22059
    bp = v22060
    si = v22061
    di = v22062
    es = v22063
    cs = v22064
    ss = v22065
    ds = v22066
    fs = v22067
    gs = v22068
    cf = v22069
    ?1 = v22070
    pf = v22071
    ?3 = v22072
    af = v22073
    ?5 = v22074
    zf = v22075
    sf = v22076
    tf = v22077
    if = v22078
    df = v22079
    of = v22080
    iopl0 = v22081
    iopl1 = v22082
    nt = v22083
    ?15 = v22084
    memory = {}
==============================================
Constant propagation in function "puts@plt"
==============================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v22150
    cx = v22151
    dx = v22152
    bx = v22153
    sp = v22154
    bp = v22155
    si = v22156
    di = v22157
    es = v22158
    cs = v22159
    ss = v22160
    ds = v22161
    fs = v22162
    gs = v22163
    cf = v22164
    ?1 = v22165
    pf = v22166
    ?3 = v22167
    af = v22168
    ?5 = v22169
    zf = v22170
    sf = v22171
    tf = v22172
    if = v22173
    df = v22174
    of = v22175
    iopl0 = v22176
    iopl1 = v22177
    nt = v22178
    ?15 = v22179
    memory = {}
==============================================
Constant propagation in function "__libc_start_main@plt"
==============================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v22245
    cx = v22246
    dx = v22247
    bx = v22248
    sp = v22249
    bp = v22250
    si = v22251
    di = v22252
    es = v22253
    cs = v22254
    ss = v22255
    ds = v22256
    fs = v22257
    gs = v22258
    cf = v22259
    ?1 = v22260
    pf = v22261
    ?3 = v22262
    af = v22263
    ?5 = v22264
    zf = v22265
    sf = v22266
    tf = v22267
    if = v22268
    df = v22269
    of = v22270
    iopl0 = v22271
    iopl1 = v22272
    nt = v22273
    ?15 = v22274
    memory = {}
==============================================
Constant propagation in function "_exit@plt"
==============================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v22340
    cx = v22341
    dx = v22342
    bx = v22343
    sp = v22344
    bp = v22345
    si = v22346
    di = v22347
    es = v22348
    cs = v22349
    ss = v22350
    ds = v22351
    fs = v22352
    gs = v22353
    cf = v22354
    ?1 = v22355
    pf = v22356
    ?3 = v22357
    af = v22358
    ?5 = v22359
    zf = v22360
    sf = v22361
    tf = v22362
    if = v22363
    df = v22364
    of = v22365
    iopl0 = v22366
    iopl1 = v22367
    nt = v22368
    ?15 = v22369
    memory = {}
==============================================
Constant propagation in function "__gmon_start__@plt"
==============================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v22435
    cx = v22436
    dx = v22437
    bx = v22438
    sp = v22439
    bp = v22440
    si = v22441
    di = v22442
    es = v22443
    cs = v22444
    ss = v22445
    ds = v22446
    fs = v22447
    gs = v22448
    cf = v22449
    ?1 = v22450
    pf = v22451
    ?3 = v22452
    af = v22453
    ?5 = v22454
    zf = v22455
    sf = v22456
    tf = v22457
    if = v22458
    df = v22459
    of = v22460
    iopl0 = v22461
    iopl1 = v22462
    nt = v22463
    ?15 = v22464
    memory = {}
==============================================
Constant propagation in function "_start"
==============================================
0x8048340:xor    ebp, ebp
    ax = v22530
    cx = v22531
    dx = v22532
    bx = v22533
    sp = v22534
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22536
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v22545
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {}
0x8048342:pop    esi
    ax = v22530
    cx = v22531
    dx = v22532
    bx = v22533
    sp = v22534+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v22545
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {}
0x8048343:mov    ecx, esp
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22534+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v22545
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {}
0x8048345:and    esp, 0xf0
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685 [from 0x8048345:and    esp, 0xf0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {}
0x8048348:push   eax
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x8048349:push   esp
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0x8 [from 0x8048349:push   esp]; value=v22685-0x4 [from 0x8048348:push   eax]
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x804834a:push   edx
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0xc [from 0x804834a:push   edx]; value=v22532
        size=4; addr=v22685-0x8 [from 0x8048349:push   esp]; value=v22685-0x4 [from 0x8048348:push   eax]
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x804834b:push   0x08048520
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v22685-0xc [from 0x804834a:push   edx]; value=v22532
        size=4; addr=v22685-0x8 [from 0x8048349:push   esp]; value=v22685-0x4 [from 0x8048348:push   eax]
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x8048350:push   0x080484b0
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v22685-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v22685-0xc [from 0x804834a:push   edx]; value=v22532
        size=4; addr=v22685-0x8 [from 0x8048349:push   esp]; value=v22685-0x4 [from 0x8048348:push   eax]
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x8048355:push   ecx
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0x18 [from 0x8048355:push   ecx]; value=v22534+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v22685-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v22685-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v22685-0xc [from 0x804834a:push   edx]; value=v22532
        size=4; addr=v22685-0x8 [from 0x8048349:push   esp]; value=v22685-0x4 [from 0x8048348:push   eax]
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x8048356:push   esi
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0x1c [from 0x8048356:push   esi]; value=v22619 [from 0x8048342:pop    esi]
        size=4; addr=v22685-0x18 [from 0x8048355:push   ecx]; value=v22534+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v22685-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v22685-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v22685-0xc [from 0x804834a:push   edx]; value=v22532
        size=4; addr=v22685-0x8 [from 0x8048349:push   esp]; value=v22685-0x4 [from 0x8048348:push   eax]
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x8048357:push   0x08048410
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v22685-0x1c [from 0x8048356:push   esi]; value=v22619 [from 0x8048342:pop    esi]
        size=4; addr=v22685-0x18 [from 0x8048355:push   ecx]; value=v22534+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v22685-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v22685-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v22685-0xc [from 0x804834a:push   edx]; value=v22532
        size=4; addr=v22685-0x8 [from 0x8048349:push   esp]; value=v22685-0x4 [from 0x8048348:push   eax]
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x804835c:call   0x08048310
    ax = v22530
    cx = v22534+0x4 [from 0x8048342:pop    esi]
    dx = v22532
    bx = v22533
    sp = v22685-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v22619 [from 0x8048342:pop    esi]
    di = v22537
    es = v22538
    cs = v22539
    ss = v22540
    ds = v22541
    fs = v22542
    gs = v22543
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v22545
    pf = -v22701-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v22547
    af = <top>
    ?5 = v22549
    zf = v22704 [from 0x8048345:and    esp, 0xf0]
    sf = v22703 [from 0x8048345:and    esp, 0xf0]
    tf = v22552
    if = v22553
    df = v22554
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v22556
    iopl1 = v22557
    nt = v22558
    ?15 = v22559
    memory = {
        size=4; addr=v22685-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v22685-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v22685-0x1c [from 0x8048356:push   esi]; value=v22619 [from 0x8048342:pop    esi]
        size=4; addr=v22685-0x18 [from 0x8048355:push   ecx]; value=v22534+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v22685-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v22685-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v22685-0xc [from 0x804834a:push   edx]; value=v22532
        size=4; addr=v22685-0x8 [from 0x8048349:push   esp]; value=v22685-0x4 [from 0x8048348:push   eax]
        size=4; addr=v22685-0x4 [from 0x8048348:push   eax]; value=v22530
    }
0x8048361:hlt    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048362"
==============================================
0x8048362:nop    
    ax = v23160
    cx = v23161
    dx = v23162
    bx = v23163
    sp = v23164
    bp = v23165
    si = v23166
    di = v23167
    es = v23168
    cs = v23169
    ss = v23170
    ds = v23171
    fs = v23172
    gs = v23173
    cf = v23174
    ?1 = v23175
    pf = v23176
    ?3 = v23177
    af = v23178
    ?5 = v23179
    zf = v23180
    sf = v23181
    tf = v23182
    if = v23183
    df = v23184
    of = v23185
    iopl0 = v23186
    iopl1 = v23187
    nt = v23188
    ?15 = v23189
    memory = {}
0x8048363:nop    
    ax = v23160
    cx = v23161
    dx = v23162
    bx = v23163
    sp = v23164
    bp = v23165
    si = v23166
    di = v23167
    es = v23168
    cs = v23169
    ss = v23170
    ds = v23171
    fs = v23172
    gs = v23173
    cf = v23174
    ?1 = v23175
    pf = v23176
    ?3 = v23177
    af = v23178
    ?5 = v23179
    zf = v23180
    sf = v23181
    tf = v23182
    if = v23183
    df = v23184
    of = v23185
    iopl0 = v23186
    iopl1 = v23187
    nt = v23188
    ?15 = v23189
    memory = {}
==============================================
Constant propagation in function "call_gmon_start"
==============================================
0x8048364:push   ebp
    ax = v23314
    cx = v23315
    dx = v23316
    bx = v23317
    sp = v23318-0x4 [from 0x8048364:push   ebp]
    bp = v23319
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = v23328
    ?1 = v23329
    pf = v23330
    ?3 = v23331
    af = v23332
    ?5 = v23333
    zf = v23334
    sf = v23335
    tf = v23336
    if = v23337
    df = v23338
    of = v23339
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048365:mov    ebp, esp
    ax = v23314
    cx = v23315
    dx = v23316
    bx = v23317
    sp = v23318-0x4 [from 0x8048364:push   ebp]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = v23328
    ?1 = v23329
    pf = v23330
    ?3 = v23331
    af = v23332
    ?5 = v23333
    zf = v23334
    sf = v23335
    tf = v23336
    if = v23337
    df = v23338
    of = v23339
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048367:push   ebx
    ax = v23314
    cx = v23315
    dx = v23316
    bx = v23317
    sp = v23318-0x8 [from 0x8048367:push   ebx]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = v23328
    ?1 = v23329
    pf = v23330
    ?3 = v23331
    af = v23332
    ?5 = v23333
    zf = v23334
    sf = v23335
    tf = v23336
    if = v23337
    df = v23338
    of = v23339
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048368:push   ecx
    ax = v23314
    cx = v23315
    dx = v23316
    bx = v23317
    sp = v23318-0xc [from 0x8048368:push   ecx]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = v23328
    ?1 = v23329
    pf = v23330
    ?3 = v23331
    af = v23332
    ?5 = v23333
    zf = v23334
    sf = v23335
    tf = v23336
    if = v23337
    df = v23338
    of = v23339
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048369:call   0x0804836e
    ax = v23314
    cx = v23315
    dx = v23316
    bx = v23317
    sp = v23318-0x10 [from 0x8048369:call   0x0804836e]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = v23328
    ?1 = v23329
    pf = v23330
    ?3 = v23331
    af = v23332
    ?5 = v23333
    zf = v23334
    sf = v23335
    tf = v23336
    if = v23337
    df = v23338
    of = v23339
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x804836e:pop    ebx
    ax = v23314
    cx = v23315
    dx = v23316
    bx = 0x804836e [from 0x8048369:call   0x0804836e]
    sp = v23318-0xc [from 0x804836e:pop    ebx]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = v23328
    ?1 = v23329
    pf = v23330
    ?3 = v23331
    af = v23332
    ?5 = v23333
    zf = v23334
    sf = v23335
    tf = v23336
    if = v23337
    df = v23338
    of = v23339
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x804836f:add    ebx, 0x0000135a
    ax = v23314
    cx = v23315
    dx = v23316
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v23318-0xc [from 0x804836e:pop    ebx]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v23329
    pf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v23331
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v23333
    zf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]
    ax = v23314
    cx = v23315
    dx = v23626 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v23318-0xc [from 0x804836e:pop    ebx]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v23329
    pf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v23331
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v23333
    zf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x804837b:test   edx, edx
    ax = v23314
    cx = v23315
    dx = v23626 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v23318-0xc [from 0x804836e:pop    ebx]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v23329
    pf = -v23675-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v23331
    af = <top>
    ?5 = v23333
    zf = v23678 [from 0x804837b:test   edx, edx]
    sf = v23677 [from 0x804837b:test   edx, edx]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x804837d:je     0x08048384
    ax = v23314
    cx = v23315
    dx = v23626 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v23318-0xc [from 0x804836e:pop    ebx]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v23329
    pf = -v23675-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v23331
    af = <top>
    ?5 = v23333
    zf = v23678 [from 0x804837b:test   edx, edx]
    sf = v23677 [from 0x804837b:test   edx, edx]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x804837f:call   0x08048330
    ax = v23314
    cx = v23315
    dx = v23626 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v23318-0x10 [from 0x804837f:call   0x08048330]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v23329
    pf = -v23675-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v23331
    af = <top>
    ?5 = v23333
    zf = v23678 [from 0x804837b:test   edx, edx]
    sf = v23677 [from 0x804837b:test   edx, edx]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048384:pop    eax
    ax = v23315
    cx = v23315
    dx = v23626 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v23318-0x8 [from 0x8048384:pop    eax]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v23329
    pf = -v23675-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v23331
    af = <top>
    ?5 = v23333
    zf = v23678 [from 0x804837b:test   edx, edx]
    sf = v23677 [from 0x804837b:test   edx, edx]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048385:pop    ebx
    ax = v23315
    cx = v23315
    dx = v23626 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v23317
    sp = v23318-0x4 [from 0x8048385:pop    ebx]
    bp = v23318-0x4 [from 0x8048364:push   ebp]
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v23329
    pf = -v23675-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v23331
    af = <top>
    ?5 = v23333
    zf = v23678 [from 0x804837b:test   edx, edx]
    sf = v23677 [from 0x804837b:test   edx, edx]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048386:leave  
    ax = v23315
    cx = v23315
    dx = v23626 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v23317
    sp = v23318 [from 0x8048386:leave  ]
    bp = v23319
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v23329
    pf = -v23675-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v23331
    af = <top>
    ?5 = v23333
    zf = v23678 [from 0x804837b:test   edx, edx]
    sf = v23677 [from 0x804837b:test   edx, edx]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
0x8048387:ret    
    ax = v23315
    cx = v23315
    dx = v23626 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v23317
    sp = v23318+0x4 [from 0x8048387:ret    ]
    bp = v23319
    si = v23320
    di = v23321
    es = v23322
    cs = v23323
    ss = v23324
    ds = v23325
    fs = v23326
    gs = v23327
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v23329
    pf = -v23675-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v23331
    af = <top>
    ?5 = v23333
    zf = v23678 [from 0x804837b:test   edx, edx]
    sf = v23677 [from 0x804837b:test   edx, edx]
    tf = v23336
    if = v23337
    df = v23338
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v23340
    iopl1 = v23341
    nt = v23342
    ?15 = v23343
    memory = {
        size=4; addr=v23318-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v23318-0xc [from 0x8048368:push   ecx]; value=v23315
        size=4; addr=v23318-0x8 [from 0x8048367:push   ebx]; value=v23317
        size=4; addr=v23318-0x4 [from 0x8048364:push   ebp]; value=v23319
    }
==============================================
Constant propagation in function "0x8048388"
==============================================
0x8048388:nop    
    ax = v23990
    cx = v23991
    dx = v23992
    bx = v23993
    sp = v23994
    bp = v23995
    si = v23996
    di = v23997
    es = v23998
    cs = v23999
    ss = v24000
    ds = v24001
    fs = v24002
    gs = v24003
    cf = v24004
    ?1 = v24005
    pf = v24006
    ?3 = v24007
    af = v24008
    ?5 = v24009
    zf = v24010
    sf = v24011
    tf = v24012
    if = v24013
    df = v24014
    of = v24015
    iopl0 = v24016
    iopl1 = v24017
    nt = v24018
    ?15 = v24019
    memory = {}
0x8048389:nop    
    ax = v23990
    cx = v23991
    dx = v23992
    bx = v23993
    sp = v23994
    bp = v23995
    si = v23996
    di = v23997
    es = v23998
    cs = v23999
    ss = v24000
    ds = v24001
    fs = v24002
    gs = v24003
    cf = v24004
    ?1 = v24005
    pf = v24006
    ?3 = v24007
    af = v24008
    ?5 = v24009
    zf = v24010
    sf = v24011
    tf = v24012
    if = v24013
    df = v24014
    of = v24015
    iopl0 = v24016
    iopl1 = v24017
    nt = v24018
    ?15 = v24019
    memory = {}
0x804838a:nop    
    ax = v23990
    cx = v23991
    dx = v23992
    bx = v23993
    sp = v23994
    bp = v23995
    si = v23996
    di = v23997
    es = v23998
    cs = v23999
    ss = v24000
    ds = v24001
    fs = v24002
    gs = v24003
    cf = v24004
    ?1 = v24005
    pf = v24006
    ?3 = v24007
    af = v24008
    ?5 = v24009
    zf = v24010
    sf = v24011
    tf = v24012
    if = v24013
    df = v24014
    of = v24015
    iopl0 = v24016
    iopl1 = v24017
    nt = v24018
    ?15 = v24019
    memory = {}
0x804838b:nop    
    ax = v23990
    cx = v23991
    dx = v23992
    bx = v23993
    sp = v23994
    bp = v23995
    si = v23996
    di = v23997
    es = v23998
    cs = v23999
    ss = v24000
    ds = v24001
    fs = v24002
    gs = v24003
    cf = v24004
    ?1 = v24005
    pf = v24006
    ?3 = v24007
    af = v24008
    ?5 = v24009
    zf = v24010
    sf = v24011
    tf = v24012
    if = v24013
    df = v24014
    of = v24015
    iopl0 = v24016
    iopl1 = v24017
    nt = v24018
    ?15 = v24019
    memory = {}
0x804838c:nop    
    ax = v23990
    cx = v23991
    dx = v23992
    bx = v23993
    sp = v23994
    bp = v23995
    si = v23996
    di = v23997
    es = v23998
    cs = v23999
    ss = v24000
    ds = v24001
    fs = v24002
    gs = v24003
    cf = v24004
    ?1 = v24005
    pf = v24006
    ?3 = v24007
    af = v24008
    ?5 = v24009
    zf = v24010
    sf = v24011
    tf = v24012
    if = v24013
    df = v24014
    of = v24015
    iopl0 = v24016
    iopl1 = v24017
    nt = v24018
    ?15 = v24019
    memory = {}
0x804838d:nop    
    ax = v23990
    cx = v23991
    dx = v23992
    bx = v23993
    sp = v23994
    bp = v23995
    si = v23996
    di = v23997
    es = v23998
    cs = v23999
    ss = v24000
    ds = v24001
    fs = v24002
    gs = v24003
    cf = v24004
    ?1 = v24005
    pf = v24006
    ?3 = v24007
    af = v24008
    ?5 = v24009
    zf = v24010
    sf = v24011
    tf = v24012
    if = v24013
    df = v24014
    of = v24015
    iopl0 = v24016
    iopl1 = v24017
    nt = v24018
    ?15 = v24019
    memory = {}
0x804838e:nop    
    ax = v23990
    cx = v23991
    dx = v23992
    bx = v23993
    sp = v23994
    bp = v23995
    si = v23996
    di = v23997
    es = v23998
    cs = v23999
    ss = v24000
    ds = v24001
    fs = v24002
    gs = v24003
    cf = v24004
    ?1 = v24005
    pf = v24006
    ?3 = v24007
    af = v24008
    ?5 = v24009
    zf = v24010
    sf = v24011
    tf = v24012
    if = v24013
    df = v24014
    of = v24015
    iopl0 = v24016
    iopl1 = v24017
    nt = v24018
    ?15 = v24019
    memory = {}
0x804838f:nop    
    ax = v23990
    cx = v23991
    dx = v23992
    bx = v23993
    sp = v23994
    bp = v23995
    si = v23996
    di = v23997
    es = v23998
    cs = v23999
    ss = v24000
    ds = v24001
    fs = v24002
    gs = v24003
    cf = v24004
    ?1 = v24005
    pf = v24006
    ?3 = v24007
    af = v24008
    ?5 = v24009
    zf = v24010
    sf = v24011
    tf = v24012
    if = v24013
    df = v24014
    of = v24015
    iopl0 = v24016
    iopl1 = v24017
    nt = v24018
    ?15 = v24019
    memory = {}
==============================================
Constant propagation in function "__do_global_dtors_aux"
==============================================
0x8048390:push   ebp
    ax = v24336
    cx = v24337
    dx = v24338
    bx = v24339
    sp = v24340-0x4 [from 0x8048390:push   ebp]
    bp = v24341
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = v24350
    ?1 = v24351
    pf = v24352
    ?3 = v24353
    af = v24354
    ?5 = v24355
    zf = v24356
    sf = v24357
    tf = v24358
    if = v24359
    df = v24360
    of = v24361
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x8048391:mov    ebp, esp
    ax = v24336
    cx = v24337
    dx = v24338
    bx = v24339
    sp = v24340-0x4 [from 0x8048390:push   ebp]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = v24350
    ?1 = v24351
    pf = v24352
    ?3 = v24353
    af = v24354
    ?5 = v24355
    zf = v24356
    sf = v24357
    tf = v24358
    if = v24359
    df = v24360
    of = v24361
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x8048393:sub    esp, 0x08
    ax = v24336
    cx = v24337
    dx = v24338
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = -v24467-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v24351
    pf = -v24461-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v24353
    af = -v24465-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v24355
    zf = v24464 [from 0x8048393:sub    esp, 0x08]
    sf = v24463 [from 0x8048393:sub    esp, 0x08]
    tf = v24358
    if = v24359
    df = v24360
    of = v24471 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v24336
    cx = v24337
    dx = v24338
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = -v24539-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v24351
    pf = -v24533-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v24353
    af = -v24537-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v24355
    zf = v24536 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v24535 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v24358
    if = v24359
    df = v24360
    of = v24543 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x804839d:jne    0x080483cc
    ax = v24336
    cx = v24337
    dx = v24338
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = -v24539-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v24351
    pf = -v24533-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v24353
    af = -v24537-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v24355
    zf = v24536 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v24535 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v24358
    if = v24359
    df = v24360
    of = v24543 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v24643 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v24337
    dx = v24338
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = -v24539-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v24351
    pf = -v24533-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v24353
    af = -v24537-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v24355
    zf = v24536 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v24535 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v24358
    if = v24359
    df = v24360
    of = v24543 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v24643 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v24337
    dx = v24677 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = -v24539-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v24351
    pf = -v24533-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v24353
    af = -v24537-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v24355
    zf = v24536 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v24535 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v24358
    if = v24359
    df = v24360
    of = v24543 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x80483a6:test   edx, edx
    ax = v24643 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v24337
    dx = v24677 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v24351
    pf = -v24726-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v24353
    af = <top>
    ?5 = v24355
    zf = v24729 [from 0x80483a6:test   edx, edx]
    sf = v24728 [from 0x80483a6:test   edx, edx]
    tf = v24358
    if = v24359
    df = v24360
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x80483a8:je     0x080483c5
    ax = v24643 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v24337
    dx = v24677 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v24351
    pf = -v24726-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v24353
    af = <top>
    ?5 = v24355
    zf = v24729 [from 0x80483a6:test   edx, edx]
    sf = v24728 [from 0x80483a6:test   edx, edx]
    tf = v24358
    if = v24359
    df = v24360
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v24643 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v24337
    dx = v24677 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v24351
    pf = -v24726-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v24353
    af = <top>
    ?5 = v24355
    zf = v24729 [from 0x80483a6:test   edx, edx]
    sf = v24728 [from 0x80483a6:test   edx, edx]
    tf = v24358
    if = v24359
    df = v24360
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x80483b0:add    eax, 0x04
    ax = v24643+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v24337
    dx = v24677 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = v24892 [from 0x80483b0:add    eax, 0x04]
    ?1 = v24351
    pf = -v24887-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v24353
    af = v24891 [from 0x80483b0:add    eax, 0x04]
    ?5 = v24355
    zf = v24890 [from 0x80483b0:add    eax, 0x04]
    sf = v24889 [from 0x80483b0:add    eax, 0x04]
    tf = v24358
    if = v24359
    df = v24360
    of = v24895 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x4 [from 0x8048390:push   ebp]; value=v24341
    }
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v24643+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v24337
    dx = v24677 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = v24892 [from 0x80483b0:add    eax, 0x04]
    ?1 = v24351
    pf = -v24887-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v24353
    af = v24891 [from 0x80483b0:add    eax, 0x04]
    ?5 = v24355
    zf = v24890 [from 0x80483b0:add    eax, 0x04]
    sf = v24889 [from 0x80483b0:add    eax, 0x04]
    tf = v24358
    if = v24359
    df = v24360
    of = v24895 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v24643+0x4 [from 0x80483b0:add    eax, 0x04]
    }
0x80483b8:call   edx
    ax = v24643+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v24337
    dx = v24677 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v24339
    sp = v24340-0x10 [from 0x80483b8:call   edx]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = v24892 [from 0x80483b0:add    eax, 0x04]
    ?1 = v24351
    pf = -v24887-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v24353
    af = v24891 [from 0x80483b0:add    eax, 0x04]
    ?5 = v24355
    zf = v24890 [from 0x80483b0:add    eax, 0x04]
    sf = v24889 [from 0x80483b0:add    eax, 0x04]
    tf = v24358
    if = v24359
    df = v24360
    of = v24895 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=4; addr=v24340-0x10 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c1:test   edx, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c3:jne    0x080483b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v24643 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v24337
    dx = v24677 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v24339
    sp = v24340-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v24340-0x4 [from 0x8048390:push   ebp]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v24351
    pf = -v24726-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v24353
    af = <top>
    ?5 = v24355
    zf = v24729 [from 0x80483a6:test   edx, edx]
    sf = v24728 [from 0x80483a6:test   edx, edx]
    tf = v24358
    if = v24359
    df = v24360
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
0x80483cc:leave  
    ax = v24609
    cx = v24337
    dx = v24611
    bx = v24339
    sp = v24340 [from 0x80483cc:leave  ]
    bp = v25137 [from 0x80483cc:leave  ]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = v24623
    ?1 = v24351
    pf = v24625
    ?3 = v24353
    af = -v24537-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v24355
    zf = v24629
    sf = v24630
    tf = v24358
    if = v24359
    df = v24360
    of = v24634
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {}
0x80483cd:ret    
    ax = v24609
    cx = v24337
    dx = v24611
    bx = v24339
    sp = v24340+0x4 [from 0x80483cd:ret    ]
    bp = v25137 [from 0x80483cc:leave  ]
    si = v24342
    di = v24343
    es = v24344
    cs = v24345
    ss = v24346
    ds = v24347
    fs = v24348
    gs = v24349
    cf = v24623
    ?1 = v24351
    pf = v24625
    ?3 = v24353
    af = -v24537-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v24355
    zf = v24629
    sf = v24630
    tf = v24358
    if = v24359
    df = v24360
    of = v24634
    iopl0 = v24362
    iopl1 = v24363
    nt = v24364
    ?15 = v24365
    memory = {}
==============================================
Constant propagation in function "frame_dummy"
==============================================
0x80483d0:push   ebp
    ax = v25237
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0x4 [from 0x80483d0:push   ebp]
    bp = v25242
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = v25251
    ?1 = v25252
    pf = v25253
    ?3 = v25254
    af = v25255
    ?5 = v25256
    zf = v25257
    sf = v25258
    tf = v25259
    if = v25260
    df = v25261
    of = v25262
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x80483d1:mov    ebp, esp
    ax = v25237
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0x4 [from 0x80483d0:push   ebp]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = v25251
    ?1 = v25252
    pf = v25253
    ?3 = v25254
    af = v25255
    ?5 = v25256
    zf = v25257
    sf = v25258
    tf = v25259
    if = v25260
    df = v25261
    of = v25262
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x80483d3:sub    esp, 0x08
    ax = v25237
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = -v25368-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v25252
    pf = -v25362-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v25254
    af = -v25366-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v25256
    zf = v25365 [from 0x80483d3:sub    esp, 0x08]
    sf = v25364 [from 0x80483d3:sub    esp, 0x08]
    tf = v25259
    if = v25260
    df = v25261
    of = v25372 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v25407 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = -v25368-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v25252
    pf = -v25362-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v25254
    af = -v25366-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v25256
    zf = v25365 [from 0x80483d3:sub    esp, 0x08]
    sf = v25364 [from 0x80483d3:sub    esp, 0x08]
    tf = v25259
    if = v25260
    df = v25261
    of = v25372 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x80483db:test   eax, eax
    ax = v25407 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v25252
    pf = -v25456-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v25254
    af = <top>
    ?5 = v25256
    zf = v25459 [from 0x80483db:test   eax, eax]
    sf = v25458 [from 0x80483db:test   eax, eax]
    tf = v25259
    if = v25260
    df = v25261
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x80483dd:je     0x08048400
    ax = v25407 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v25252
    pf = -v25456-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v25254
    af = <top>
    ?5 = v25256
    zf = v25459 [from 0x80483db:test   eax, eax]
    sf = v25458 [from 0x80483db:test   eax, eax]
    tf = v25259
    if = v25260
    df = v25261
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v25252
    pf = -v25456-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v25254
    af = <top>
    ?5 = v25256
    zf = v25459 [from 0x80483db:test   eax, eax]
    sf = v25458 [from 0x80483db:test   eax, eax]
    tf = v25259
    if = v25260
    df = v25261
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v25252
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v25254
    af = <top>
    ?5 = v25256
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v25259
    if = v25260
    df = v25261
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v25252
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v25254
    af = <top>
    ?5 = v25256
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v25259
    if = v25260
    df = v25261
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {
        size=4; addr=v25241-0x4 [from 0x80483d0:push   ebp]; value=v25242
    }
0x8048400:mov    esp, ebp
    ax = v25527
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241-0x4 [from 0x80483d0:push   ebp]
    bp = v25241-0x4 [from 0x80483d0:push   ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v25252
    pf = v25543
    ?3 = v25254
    af = <top>
    ?5 = v25256
    zf = v25547
    sf = v25548
    tf = v25259
    if = v25260
    df = v25261
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {}
0x8048402:pop    ebp
    ax = v25527
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241 [from 0x8048402:pop    ebp]
    bp = v25686 [from 0x8048402:pop    ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v25252
    pf = v25543
    ?3 = v25254
    af = <top>
    ?5 = v25256
    zf = v25547
    sf = v25548
    tf = v25259
    if = v25260
    df = v25261
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {}
0x8048403:ret    
    ax = v25527
    cx = v25238
    dx = v25239
    bx = v25240
    sp = v25241+0x4 [from 0x8048403:ret    ]
    bp = v25686 [from 0x8048402:pop    ebp]
    si = v25243
    di = v25244
    es = v25245
    cs = v25246
    ss = v25247
    ds = v25248
    fs = v25249
    gs = v25250
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v25252
    pf = v25543
    ?3 = v25254
    af = <top>
    ?5 = v25256
    zf = v25547
    sf = v25548
    tf = v25259
    if = v25260
    df = v25261
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v25263
    iopl1 = v25264
    nt = v25265
    ?15 = v25266
    memory = {}
==============================================
Constant propagation in function "0x8048404"
==============================================
0x8048404:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x8048405:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x8048406:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x8048407:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x8048408:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x8048409:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x804840a:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x804840b:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x804840c:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x804840d:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x804840e:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
0x804840f:nop    
    ax = v25786
    cx = v25787
    dx = v25788
    bx = v25789
    sp = v25790
    bp = v25791
    si = v25792
    di = v25793
    es = v25794
    cs = v25795
    ss = v25796
    ds = v25797
    fs = v25798
    gs = v25799
    cf = v25800
    ?1 = v25801
    pf = v25802
    ?3 = v25803
    af = v25804
    ?5 = v25805
    zf = v25806
    sf = v25807
    tf = v25808
    if = v25809
    df = v25810
    of = v25811
    iopl0 = v25812
    iopl1 = v25813
    nt = v25814
    ?15 = v25815
    memory = {}
==============================================
Constant propagation in function "main"
==============================================
0x8048410:push   ebp
    ax = v26260
    cx = v26261
    dx = v26262
    bx = v26263
    sp = v26264-0x4 [from 0x8048410:push   ebp]
    bp = v26265
    si = v26266
    di = v26267
    es = v26268
    cs = v26269
    ss = v26270
    ds = v26271
    fs = v26272
    gs = v26273
    cf = v26274
    ?1 = v26275
    pf = v26276
    ?3 = v26277
    af = v26278
    ?5 = v26279
    zf = v26280
    sf = v26281
    tf = v26282
    if = v26283
    df = v26284
    of = v26285
    iopl0 = v26286
    iopl1 = v26287
    nt = v26288
    ?15 = v26289
    memory = {
        size=4; addr=v26264-0x4 [from 0x8048410:push   ebp]; value=v26265
    }
0x8048411:mov    edx, 0x08048480
    ax = v26260
    cx = v26261
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v26263
    sp = v26264-0x4 [from 0x8048410:push   ebp]
    bp = v26265
    si = v26266
    di = v26267
    es = v26268
    cs = v26269
    ss = v26270
    ds = v26271
    fs = v26272
    gs = v26273
    cf = v26274
    ?1 = v26275
    pf = v26276
    ?3 = v26277
    af = v26278
    ?5 = v26279
    zf = v26280
    sf = v26281
    tf = v26282
    if = v26283
    df = v26284
    of = v26285
    iopl0 = v26286
    iopl1 = v26287
    nt = v26288
    ?15 = v26289
    memory = {
        size=4; addr=v26264-0x4 [from 0x8048410:push   ebp]; value=v26265
    }
0x8048416:mov    ebp, esp
    ax = v26260
    cx = v26261
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v26263
    sp = v26264-0x4 [from 0x8048410:push   ebp]
    bp = v26264-0x4 [from 0x8048410:push   ebp]
    si = v26266
    di = v26267
    es = v26268
    cs = v26269
    ss = v26270
    ds = v26271
    fs = v26272
    gs = v26273
    cf = v26274
    ?1 = v26275
    pf = v26276
    ?3 = v26277
    af = v26278
    ?5 = v26279
    zf = v26280
    sf = v26281
    tf = v26282
    if = v26283
    df = v26284
    of = v26285
    iopl0 = v26286
    iopl1 = v26287
    nt = v26288
    ?15 = v26289
    memory = {
        size=4; addr=v26264-0x4 [from 0x8048410:push   ebp]; value=v26265
    }
0x8048418:sub    esp, 0x08
    ax = v26260
    cx = v26261
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v26263
    sp = v26264-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v26264-0x4 [from 0x8048410:push   ebp]
    si = v26266
    di = v26267
    es = v26268
    cs = v26269
    ss = v26270
    ds = v26271
    fs = v26272
    gs = v26273
    cf = -v26424-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v26275
    pf = -v26418-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v26277
    af = -v26422-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v26279
    zf = v26421 [from 0x8048418:sub    esp, 0x08]
    sf = v26420 [from 0x8048418:sub    esp, 0x08]
    tf = v26282
    if = v26283
    df = v26284
    of = v26428 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v26286
    iopl1 = v26287
    nt = v26288
    ?15 = v26289
    memory = {
        size=4; addr=v26264-0x4 [from 0x8048410:push   ebp]; value=v26265
    }
0x804841b:and    esp, 0xf0
    ax = v26260
    cx = v26261
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v26263
    sp = v26462 [from 0x804841b:and    esp, 0xf0]
    bp = v26264-0x4 [from 0x8048410:push   ebp]
    si = v26266
    di = v26267
    es = v26268
    cs = v26269
    ss = v26270
    ds = v26271
    fs = v26272
    gs = v26273
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v26275
    pf = -v26478-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v26277
    af = <top>
    ?5 = v26279
    zf = v26481 [from 0x804841b:and    esp, 0xf0]
    sf = v26480 [from 0x804841b:and    esp, 0xf0]
    tf = v26282
    if = v26283
    df = v26284
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v26286
    iopl1 = v26287
    nt = v26288
    ?15 = v26289
    memory = {
        size=4; addr=v26264-0x4 [from 0x8048410:push   ebp]; value=v26265
    }
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v26260
    cx = v26261
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v26263
    sp = v26462 [from 0x804841b:and    esp, 0xf0]
    bp = v26264-0x4 [from 0x8048410:push   ebp]
    si = v26266
    di = v26267
    es = v26268
    cs = v26269
    ss = v26270
    ds = v26271
    fs = v26272
    gs = v26273
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v26275
    pf = -v26478-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v26277
    af = <top>
    ?5 = v26279
    zf = v26481 [from 0x804841b:and    esp, 0xf0]
    sf = v26480 [from 0x804841b:and    esp, 0xf0]
    tf = v26282
    if = v26283
    df = v26284
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v26286
    iopl1 = v26287
    nt = v26288
    ?15 = v26289
    memory = {
        size=4; addr=v26462+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v26260
    cx = v26261
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v26263
    sp = v26462 [from 0x804841b:and    esp, 0xf0]
    bp = v26264-0x4 [from 0x8048410:push   ebp]
    si = v26266
    di = v26267
    es = v26268
    cs = v26269
    ss = v26270
    ds = v26271
    fs = v26272
    gs = v26273
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v26275
    pf = -v26478-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v26277
    af = <top>
    ?5 = v26279
    zf = v26481 [from 0x804841b:and    esp, 0xf0]
    sf = v26480 [from 0x804841b:and    esp, 0xf0]
    tf = v26282
    if = v26283
    df = v26284
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v26286
    iopl1 = v26287
    nt = v26288
    ?15 = v26289
    memory = {
        size=4; addr=v26462 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v26462+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
0x8048429:call   0x080482f0
    ax = v26260
    cx = v26261
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v26263
    sp = v26462-0x4 [from 0x8048429:call   0x080482f0]
    bp = v26264-0x4 [from 0x8048410:push   ebp]
    si = v26266
    di = v26267
    es = v26268
    cs = v26269
    ss = v26270
    ds = v26271
    fs = v26272
    gs = v26273
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v26275
    pf = -v26478-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v26277
    af = <top>
    ?5 = v26279
    zf = v26481 [from 0x804841b:and    esp, 0xf0]
    sf = v26480 [from 0x804841b:and    esp, 0xf0]
    tf = v26282
    if = v26283
    df = v26284
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v26286
    iopl1 = v26287
    nt = v26288
    ?15 = v26289
    memory = {
        size=4; addr=v26462 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v26462+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v26462-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
0x804842e:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048430:xor    eax, eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048432:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048433:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "bar"
==============================================
0x8048440:push   ebp
    ax = v26875
    cx = v26876
    dx = v26877
    bx = v26878
    sp = v26879-0x4 [from 0x8048440:push   ebp]
    bp = v26880
    si = v26881
    di = v26882
    es = v26883
    cs = v26884
    ss = v26885
    ds = v26886
    fs = v26887
    gs = v26888
    cf = v26889
    ?1 = v26890
    pf = v26891
    ?3 = v26892
    af = v26893
    ?5 = v26894
    zf = v26895
    sf = v26896
    tf = v26897
    if = v26898
    df = v26899
    of = v26900
    iopl0 = v26901
    iopl1 = v26902
    nt = v26903
    ?15 = v26904
    memory = {
        size=4; addr=v26879-0x4 [from 0x8048440:push   ebp]; value=v26880
    }
0x8048441:mov    ebp, esp
    ax = v26875
    cx = v26876
    dx = v26877
    bx = v26878
    sp = v26879-0x4 [from 0x8048440:push   ebp]
    bp = v26879-0x4 [from 0x8048440:push   ebp]
    si = v26881
    di = v26882
    es = v26883
    cs = v26884
    ss = v26885
    ds = v26886
    fs = v26887
    gs = v26888
    cf = v26889
    ?1 = v26890
    pf = v26891
    ?3 = v26892
    af = v26893
    ?5 = v26894
    zf = v26895
    sf = v26896
    tf = v26897
    if = v26898
    df = v26899
    of = v26900
    iopl0 = v26901
    iopl1 = v26902
    nt = v26903
    ?15 = v26904
    memory = {
        size=4; addr=v26879-0x4 [from 0x8048440:push   ebp]; value=v26880
    }
0x8048443:sub    esp, 0x08
    ax = v26875
    cx = v26876
    dx = v26877
    bx = v26878
    sp = v26879-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v26879-0x4 [from 0x8048440:push   ebp]
    si = v26881
    di = v26882
    es = v26883
    cs = v26884
    ss = v26885
    ds = v26886
    fs = v26887
    gs = v26888
    cf = -v27006-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v26890
    pf = -v27000-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v26892
    af = -v27004-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v26894
    zf = v27003 [from 0x8048443:sub    esp, 0x08]
    sf = v27002 [from 0x8048443:sub    esp, 0x08]
    tf = v26897
    if = v26898
    df = v26899
    of = v27010 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v26901
    iopl1 = v26902
    nt = v26903
    ?15 = v26904
    memory = {
        size=4; addr=v26879-0x4 [from 0x8048440:push   ebp]; value=v26880
    }
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v26875
    cx = v26876
    dx = v26877
    bx = v26878
    sp = v26879-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v26879-0x4 [from 0x8048440:push   ebp]
    si = v26881
    di = v26882
    es = v26883
    cs = v26884
    ss = v26885
    ds = v26886
    fs = v26887
    gs = v26888
    cf = -v27006-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v26890
    pf = -v27000-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v26892
    af = -v27004-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v26894
    zf = v27003 [from 0x8048443:sub    esp, 0x08]
    sf = v27002 [from 0x8048443:sub    esp, 0x08]
    tf = v26897
    if = v26898
    df = v26899
    of = v27010 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v26901
    iopl1 = v26902
    nt = v26903
    ?15 = v26904
    memory = {
        size=4; addr=v26879-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v26879-0x4 [from 0x8048440:push   ebp]; value=v26880
    }
0x804844d:call   0x08048300
    ax = v26875
    cx = v26876
    dx = v26877
    bx = v26878
    sp = v26879-0x10 [from 0x804844d:call   0x08048300]
    bp = v26879-0x4 [from 0x8048440:push   ebp]
    si = v26881
    di = v26882
    es = v26883
    cs = v26884
    ss = v26885
    ds = v26886
    fs = v26887
    gs = v26888
    cf = -v27006-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v26890
    pf = -v27000-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v26892
    af = -v27004-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v26894
    zf = v27003 [from 0x8048443:sub    esp, 0x08]
    sf = v27002 [from 0x8048443:sub    esp, 0x08]
    tf = v26897
    if = v26898
    df = v26899
    of = v27010 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v26901
    iopl1 = v26902
    nt = v26903
    ?15 = v26904
    memory = {
        size=4; addr=v26879-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v26879-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v26879-0x4 [from 0x8048440:push   ebp]; value=v26880
    }
0x8048452:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048454:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048455:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "foo"
==============================================
0x8048460:push   ebp
    ax = v27310
    cx = v27311
    dx = v27312
    bx = v27313
    sp = v27314-0x4 [from 0x8048460:push   ebp]
    bp = v27315
    si = v27316
    di = v27317
    es = v27318
    cs = v27319
    ss = v27320
    ds = v27321
    fs = v27322
    gs = v27323
    cf = v27324
    ?1 = v27325
    pf = v27326
    ?3 = v27327
    af = v27328
    ?5 = v27329
    zf = v27330
    sf = v27331
    tf = v27332
    if = v27333
    df = v27334
    of = v27335
    iopl0 = v27336
    iopl1 = v27337
    nt = v27338
    ?15 = v27339
    memory = {
        size=4; addr=v27314-0x4 [from 0x8048460:push   ebp]; value=v27315
    }
0x8048461:mov    ebp, esp
    ax = v27310
    cx = v27311
    dx = v27312
    bx = v27313
    sp = v27314-0x4 [from 0x8048460:push   ebp]
    bp = v27314-0x4 [from 0x8048460:push   ebp]
    si = v27316
    di = v27317
    es = v27318
    cs = v27319
    ss = v27320
    ds = v27321
    fs = v27322
    gs = v27323
    cf = v27324
    ?1 = v27325
    pf = v27326
    ?3 = v27327
    af = v27328
    ?5 = v27329
    zf = v27330
    sf = v27331
    tf = v27332
    if = v27333
    df = v27334
    of = v27335
    iopl0 = v27336
    iopl1 = v27337
    nt = v27338
    ?15 = v27339
    memory = {
        size=4; addr=v27314-0x4 [from 0x8048460:push   ebp]; value=v27315
    }
0x8048463:sub    esp, 0x08
    ax = v27310
    cx = v27311
    dx = v27312
    bx = v27313
    sp = v27314-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v27314-0x4 [from 0x8048460:push   ebp]
    si = v27316
    di = v27317
    es = v27318
    cs = v27319
    ss = v27320
    ds = v27321
    fs = v27322
    gs = v27323
    cf = -v27441-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v27325
    pf = -v27435-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v27327
    af = -v27439-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v27329
    zf = v27438 [from 0x8048463:sub    esp, 0x08]
    sf = v27437 [from 0x8048463:sub    esp, 0x08]
    tf = v27332
    if = v27333
    df = v27334
    of = v27445 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v27336
    iopl1 = v27337
    nt = v27338
    ?15 = v27339
    memory = {
        size=4; addr=v27314-0x4 [from 0x8048460:push   ebp]; value=v27315
    }
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v27310
    cx = v27311
    dx = v27312
    bx = v27313
    sp = v27314-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v27314-0x4 [from 0x8048460:push   ebp]
    si = v27316
    di = v27317
    es = v27318
    cs = v27319
    ss = v27320
    ds = v27321
    fs = v27322
    gs = v27323
    cf = -v27441-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v27325
    pf = -v27435-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v27327
    af = -v27439-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v27329
    zf = v27438 [from 0x8048463:sub    esp, 0x08]
    sf = v27437 [from 0x8048463:sub    esp, 0x08]
    tf = v27332
    if = v27333
    df = v27334
    of = v27445 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v27336
    iopl1 = v27337
    nt = v27338
    ?15 = v27339
    memory = {
        size=4; addr=v27314-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v27314-0x4 [from 0x8048460:push   ebp]; value=v27315
    }
0x804846d:call   0x08048300
    ax = v27310
    cx = v27311
    dx = v27312
    bx = v27313
    sp = v27314-0x10 [from 0x804846d:call   0x08048300]
    bp = v27314-0x4 [from 0x8048460:push   ebp]
    si = v27316
    di = v27317
    es = v27318
    cs = v27319
    ss = v27320
    ds = v27321
    fs = v27322
    gs = v27323
    cf = -v27441-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v27325
    pf = -v27435-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v27327
    af = -v27439-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v27329
    zf = v27438 [from 0x8048463:sub    esp, 0x08]
    sf = v27437 [from 0x8048463:sub    esp, 0x08]
    tf = v27332
    if = v27333
    df = v27334
    of = v27445 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v27336
    iopl1 = v27337
    nt = v27338
    ?15 = v27339
    memory = {
        size=4; addr=v27314-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v27314-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v27314-0x4 [from 0x8048460:push   ebp]; value=v27315
    }
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x8048479:call   0x08048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=<top>; value=0x804847e [from 0x8048479:call   0x08048320]
    }
0x804847e:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "handler"
==============================================
0x8048480:push   ebp
    ax = v27773
    cx = v27774
    dx = v27775
    bx = v27776
    sp = v27777-0x4 [from 0x8048480:push   ebp]
    bp = v27778
    si = v27779
    di = v27780
    es = v27781
    cs = v27782
    ss = v27783
    ds = v27784
    fs = v27785
    gs = v27786
    cf = v27787
    ?1 = v27788
    pf = v27789
    ?3 = v27790
    af = v27791
    ?5 = v27792
    zf = v27793
    sf = v27794
    tf = v27795
    if = v27796
    df = v27797
    of = v27798
    iopl0 = v27799
    iopl1 = v27800
    nt = v27801
    ?15 = v27802
    memory = {
        size=4; addr=v27777-0x4 [from 0x8048480:push   ebp]; value=v27778
    }
0x8048481:mov    ebp, esp
    ax = v27773
    cx = v27774
    dx = v27775
    bx = v27776
    sp = v27777-0x4 [from 0x8048480:push   ebp]
    bp = v27777-0x4 [from 0x8048480:push   ebp]
    si = v27779
    di = v27780
    es = v27781
    cs = v27782
    ss = v27783
    ds = v27784
    fs = v27785
    gs = v27786
    cf = v27787
    ?1 = v27788
    pf = v27789
    ?3 = v27790
    af = v27791
    ?5 = v27792
    zf = v27793
    sf = v27794
    tf = v27795
    if = v27796
    df = v27797
    of = v27798
    iopl0 = v27799
    iopl1 = v27800
    nt = v27801
    ?15 = v27802
    memory = {
        size=4; addr=v27777-0x4 [from 0x8048480:push   ebp]; value=v27778
    }
0x8048483:sub    esp, 0x08
    ax = v27773
    cx = v27774
    dx = v27775
    bx = v27776
    sp = v27777-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v27777-0x4 [from 0x8048480:push   ebp]
    si = v27779
    di = v27780
    es = v27781
    cs = v27782
    ss = v27783
    ds = v27784
    fs = v27785
    gs = v27786
    cf = -v27904-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v27788
    pf = -v27898-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v27790
    af = -v27902-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v27792
    zf = v27901 [from 0x8048483:sub    esp, 0x08]
    sf = v27900 [from 0x8048483:sub    esp, 0x08]
    tf = v27795
    if = v27796
    df = v27797
    of = v27908 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v27799
    iopl1 = v27800
    nt = v27801
    ?15 = v27802
    memory = {
        size=4; addr=v27777-0x4 [from 0x8048480:push   ebp]; value=v27778
    }
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v27773
    cx = v27774
    dx = v27775
    bx = v27776
    sp = v27777-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v27777-0x4 [from 0x8048480:push   ebp]
    si = v27779
    di = v27780
    es = v27781
    cs = v27782
    ss = v27783
    ds = v27784
    fs = v27785
    gs = v27786
    cf = -v27904-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v27788
    pf = -v27968-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v27790
    af = v27972 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v27792
    zf = v27971 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v27970 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v27795
    if = v27796
    df = v27797
    of = v27975 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v27799
    iopl1 = v27800
    nt = v27801
    ?15 = v27802
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v27943+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v27773
    cx = v27774
    dx = v27775
    bx = v27776
    sp = v27777-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v27777-0x4 [from 0x8048480:push   ebp]
    si = v27779
    di = v27780
    es = v27781
    cs = v27782
    ss = v27783
    ds = v27784
    fs = v27785
    gs = v27786
    cf = -v27904-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v27788
    pf = -v27968-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v27790
    af = v27972 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v27792
    zf = v27971 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v27970 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v27795
    if = v27796
    df = v27797
    of = v27975 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v27799
    iopl1 = v27800
    nt = v27801
    ?15 = v27802
    memory = {
        size=4; addr=v27777-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
0x8048493:call   0x08048300
    ax = v27773
    cx = v27774
    dx = v27775
    bx = v27776
    sp = v27777-0x10 [from 0x8048493:call   0x08048300]
    bp = v27777-0x4 [from 0x8048480:push   ebp]
    si = v27779
    di = v27780
    es = v27781
    cs = v27782
    ss = v27783
    ds = v27784
    fs = v27785
    gs = v27786
    cf = -v27904-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v27788
    pf = -v27968-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v27790
    af = v27972 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v27792
    zf = v27971 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v27970 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v27795
    if = v27796
    df = v27797
    of = v27975 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v27799
    iopl1 = v27800
    nt = v27801
    ?15 = v27802
    memory = {
        size=4; addr=v27777-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v27777-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x804849f:call   0x08048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=<top>; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
0x80484a4:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a5:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a6:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a7:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484a9:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484aa:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ab:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ac:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ad:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484ae:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484af:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_init"
==============================================
0x80484b0:push   ebp
    ax = v28658
    cx = v28659
    dx = v28660
    bx = v28661
    sp = v28662-0x4 [from 0x80484b0:push   ebp]
    bp = v28663
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = v28672
    ?1 = v28673
    pf = v28674
    ?3 = v28675
    af = v28676
    ?5 = v28677
    zf = v28678
    sf = v28679
    tf = v28680
    if = v28681
    df = v28682
    of = v28683
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484b1:mov    ebp, esp
    ax = v28658
    cx = v28659
    dx = v28660
    bx = v28661
    sp = v28662-0x4 [from 0x80484b0:push   ebp]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = v28672
    ?1 = v28673
    pf = v28674
    ?3 = v28675
    af = v28676
    ?5 = v28677
    zf = v28678
    sf = v28679
    tf = v28680
    if = v28681
    df = v28682
    of = v28683
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484b3:push   edi
    ax = v28658
    cx = v28659
    dx = v28660
    bx = v28661
    sp = v28662-0x8 [from 0x80484b3:push   edi]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = v28672
    ?1 = v28673
    pf = v28674
    ?3 = v28675
    af = v28676
    ?5 = v28677
    zf = v28678
    sf = v28679
    tf = v28680
    if = v28681
    df = v28682
    of = v28683
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x8 [from 0x80484b3:push   edi]; value=v28665
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484b4:push   esi
    ax = v28658
    cx = v28659
    dx = v28660
    bx = v28661
    sp = v28662-0xc [from 0x80484b4:push   esi]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = v28672
    ?1 = v28673
    pf = v28674
    ?3 = v28675
    af = v28676
    ?5 = v28677
    zf = v28678
    sf = v28679
    tf = v28680
    if = v28681
    df = v28682
    of = v28683
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0xc [from 0x80484b4:push   esi]; value=v28664
        size=4; addr=v28662-0x8 [from 0x80484b3:push   edi]; value=v28665
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484b5:push   ebx
    ax = v28658
    cx = v28659
    dx = v28660
    bx = v28661
    sp = v28662-0x10 [from 0x80484b5:push   ebx]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = v28672
    ?1 = v28673
    pf = v28674
    ?3 = v28675
    af = v28676
    ?5 = v28677
    zf = v28678
    sf = v28679
    tf = v28680
    if = v28681
    df = v28682
    of = v28683
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x10 [from 0x80484b5:push   ebx]; value=v28661
        size=4; addr=v28662-0xc [from 0x80484b4:push   esi]; value=v28664
        size=4; addr=v28662-0x8 [from 0x80484b3:push   edi]; value=v28665
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484b6:sub    esp, 0x0c
    ax = v28658
    cx = v28659
    dx = v28660
    bx = v28661
    sp = v28662-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = -v28897-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v28673
    pf = -v28891-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v28675
    af = -v28895-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v28677
    zf = v28894 [from 0x80484b6:sub    esp, 0x0c]
    sf = v28893 [from 0x80484b6:sub    esp, 0x0c]
    tf = v28680
    if = v28681
    df = v28682
    of = v28901 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x10 [from 0x80484b5:push   ebx]; value=v28661
        size=4; addr=v28662-0xc [from 0x80484b4:push   esi]; value=v28664
        size=4; addr=v28662-0x8 [from 0x80484b3:push   edi]; value=v28665
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484b9:call   0x080484be
    ax = v28658
    cx = v28659
    dx = v28660
    bx = v28661
    sp = v28662-0x20 [from 0x80484b9:call   0x080484be]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = -v28897-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v28673
    pf = -v28891-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v28675
    af = -v28895-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v28677
    zf = v28894 [from 0x80484b6:sub    esp, 0x0c]
    sf = v28893 [from 0x80484b6:sub    esp, 0x0c]
    tf = v28680
    if = v28681
    df = v28682
    of = v28901 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v28662-0x10 [from 0x80484b5:push   ebx]; value=v28661
        size=4; addr=v28662-0xc [from 0x80484b4:push   esi]; value=v28664
        size=4; addr=v28662-0x8 [from 0x80484b3:push   edi]; value=v28665
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484be:pop    ebx
    ax = v28658
    cx = v28659
    dx = v28660
    bx = 0x80484be [from 0x80484b9:call   0x080484be]
    sp = v28662-0x1c [from 0x80484be:pop    ebx]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = -v28897-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v28673
    pf = -v28891-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v28675
    af = -v28895-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v28677
    zf = v28894 [from 0x80484b6:sub    esp, 0x0c]
    sf = v28893 [from 0x80484b6:sub    esp, 0x0c]
    tf = v28680
    if = v28681
    df = v28682
    of = v28901 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v28662-0x10 [from 0x80484b5:push   ebx]; value=v28661
        size=4; addr=v28662-0xc [from 0x80484b4:push   esi]; value=v28664
        size=4; addr=v28662-0x8 [from 0x80484b3:push   edi]; value=v28665
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484bf:add    ebx, 0x0000120a
    ax = v28658
    cx = v28659
    dx = v28660
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v28662-0x1c [from 0x80484be:pop    ebx]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v28673
    pf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v28675
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v28677
    zf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v28680
    if = v28681
    df = v28682
    of = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v28662-0x10 [from 0x80484b5:push   ebx]; value=v28661
        size=4; addr=v28662-0xc [from 0x80484b4:push   esi]; value=v28664
        size=4; addr=v28662-0x8 [from 0x80484b3:push   edi]; value=v28665
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484c5:call   0x080482c8
    ax = v28658
    cx = v28659
    dx = v28660
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v28662-0x20 [from 0x80484c5:call   0x080482c8]
    bp = v28662-0x4 [from 0x80484b0:push   ebp]
    si = v28664
    di = v28665
    es = v28666
    cs = v28667
    ss = v28668
    ds = v28669
    fs = v28670
    gs = v28671
    cf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v28673
    pf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v28675
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v28677
    zf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v28680
    if = v28681
    df = v28682
    of = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v28684
    iopl1 = v28685
    nt = v28686
    ?15 = v28687
    memory = {
        size=4; addr=v28662-0x20 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
        size=4; addr=v28662-0x10 [from 0x80484b5:push   ebx]; value=v28661
        size=4; addr=v28662-0xc [from 0x80484b4:push   esi]; value=v28664
        size=4; addr=v28662-0x8 [from 0x80484b3:push   edi]; value=v28665
        size=4; addr=v28662-0x4 [from 0x80484b0:push   ebp]; value=v28663
    }
0x80484ca:lea    eax, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d0:lea    edx, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d6:sub    eax, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d8:sar    eax, 0x02
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484de:jne    0x080484f0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e0:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e3:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v29482 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e4:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v29482 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v29518 [from 0x80484e4:pop    esi]
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e5:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v29482 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v29518 [from 0x80484e4:pop    esi]
    di = v29554 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e6:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v29482 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v29590 [from 0x80484e6:pop    ebp]
    si = v29518 [from 0x80484e4:pop    esi]
    di = v29554 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e7:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v29482 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v29590 [from 0x80484e6:pop    ebp]
    si = v29518 [from 0x80484e4:pop    esi]
    di = v29554 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484f0:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f2:mov    esi, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f4:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484fa:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048500:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
0x8048502:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048503:add    esi, 0x04
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048509:jb     0x08048500
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850b:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850e:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850f:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048510:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048511:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048512:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_fini"
==============================================
0x8048520:push   ebp
    ax = v30395
    cx = v30396
    dx = v30397
    bx = v30398
    sp = v30399-0x4 [from 0x8048520:push   ebp]
    bp = v30400
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = v30409
    ?1 = v30410
    pf = v30411
    ?3 = v30412
    af = v30413
    ?5 = v30414
    zf = v30415
    sf = v30416
    tf = v30417
    if = v30418
    df = v30419
    of = v30420
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048521:mov    ebp, esp
    ax = v30395
    cx = v30396
    dx = v30397
    bx = v30398
    sp = v30399-0x4 [from 0x8048520:push   ebp]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = v30409
    ?1 = v30410
    pf = v30411
    ?3 = v30412
    af = v30413
    ?5 = v30414
    zf = v30415
    sf = v30416
    tf = v30417
    if = v30418
    df = v30419
    of = v30420
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048523:push   edi
    ax = v30395
    cx = v30396
    dx = v30397
    bx = v30398
    sp = v30399-0x8 [from 0x8048523:push   edi]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = v30409
    ?1 = v30410
    pf = v30411
    ?3 = v30412
    af = v30413
    ?5 = v30414
    zf = v30415
    sf = v30416
    tf = v30417
    if = v30418
    df = v30419
    of = v30420
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048524:push   esi
    ax = v30395
    cx = v30396
    dx = v30397
    bx = v30398
    sp = v30399-0xc [from 0x8048524:push   esi]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = v30409
    ?1 = v30410
    pf = v30411
    ?3 = v30412
    af = v30413
    ?5 = v30414
    zf = v30415
    sf = v30416
    tf = v30417
    if = v30418
    df = v30419
    of = v30420
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048525:push   ebx
    ax = v30395
    cx = v30396
    dx = v30397
    bx = v30398
    sp = v30399-0x10 [from 0x8048525:push   ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = v30409
    ?1 = v30410
    pf = v30411
    ?3 = v30412
    af = v30413
    ?5 = v30414
    zf = v30415
    sf = v30416
    tf = v30417
    if = v30418
    df = v30419
    of = v30420
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048526:sub    esp, 0x0c
    ax = v30395
    cx = v30396
    dx = v30397
    bx = v30398
    sp = v30399-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = -v30634-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v30410
    pf = -v30628-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v30412
    af = -v30632-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v30414
    zf = v30631 [from 0x8048526:sub    esp, 0x0c]
    sf = v30630 [from 0x8048526:sub    esp, 0x0c]
    tf = v30417
    if = v30418
    df = v30419
    of = v30638 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048529:call   0x0804852e
    ax = v30395
    cx = v30396
    dx = v30397
    bx = v30398
    sp = v30399-0x20 [from 0x8048529:call   0x0804852e]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = -v30634-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v30410
    pf = -v30628-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v30412
    af = -v30632-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v30414
    zf = v30631 [from 0x8048526:sub    esp, 0x0c]
    sf = v30630 [from 0x8048526:sub    esp, 0x0c]
    tf = v30417
    if = v30418
    df = v30419
    of = v30638 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x804852e:pop    ebx
    ax = v30395
    cx = v30396
    dx = v30397
    bx = 0x804852e [from 0x8048529:call   0x0804852e]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = -v30634-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v30410
    pf = -v30628-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v30412
    af = -v30632-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v30414
    zf = v30631 [from 0x8048526:sub    esp, 0x0c]
    sf = v30630 [from 0x8048526:sub    esp, 0x0c]
    tf = v30417
    if = v30418
    df = v30419
    of = v30638 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x804852f:add    ebx, 0x0000119a
    ax = v30395
    cx = v30396
    dx = v30397
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v30410
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v30412
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v30414
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048535:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v30396
    dx = v30397
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v30410
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v30412
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v30414
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x804853b:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v30396
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v30410
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v30412
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v30414
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048541:sub    eax, edx
    ax = 0x0 [from 0x8048541:sub    eax, edx]
    cx = v30396
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x8048541:sub    eax, edx]
    ?1 = v30410
    pf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    ?3 = v30412
    af = 0x0 [from 0x8048541:sub    eax, edx]
    ?5 = v30414
    zf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    sf = 0x0 [from 0x8048541:sub    eax, edx]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x8048541:sub    eax, edx]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048543:sar    eax, 0x02
    ax = 0x0 [from 0x8048543:sar    eax, 0x02]
    cx = v30396
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = v30410
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    ?3 = v30412
    af = <top>
    ?5 = v30414
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    sf = 0x0 [from 0x8048543:sar    eax, 0x02]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = 0x0 [from 0x8048543:sar    eax, 0x02]
    cx = v30396
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = v30410
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    ?3 = v30412
    af = <top>
    ?5 = v30414
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    sf = 0x0 [from 0x8048543:sar    eax, 0x02]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048549:dec    eax
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v30396
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = v30410
    pf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?3 = v30412
    af = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?5 = v30414
    zf = 0x0 [from 0x8048549:dec    eax]
    sf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x8048549:dec    eax]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x804854a:cmp    eax, 0xff
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v30396
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v30410
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v30412
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v30414
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x804854d:je     0x0804856b
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v30396
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x1c [from 0x804852e:pop    ebx]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v30410
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v30412
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v30414
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v30399-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x804856b:call   0x080485b0
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v30396
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v30399-0x20 [from 0x804856b:call   0x080485b0]
    bp = v30399-0x4 [from 0x8048520:push   ebp]
    si = v30401
    di = v30402
    es = v30403
    cs = v30404
    ss = v30405
    ds = v30406
    fs = v30407
    gs = v30408
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v30410
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v30412
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v30414
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v30417
    if = v30418
    df = v30419
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v30421
    iopl1 = v30422
    nt = v30423
    ?15 = v30424
    memory = {
        size=4; addr=v30399-0x20 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
        size=4; addr=v30399-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=v30399-0x10 [from 0x8048525:push   ebx]; value=v30398
        size=4; addr=v30399-0xc [from 0x8048524:push   esi]; value=v30401
        size=4; addr=v30399-0x8 [from 0x8048523:push   edi]; value=v30402
        size=4; addr=v30399-0x4 [from 0x8048520:push   ebp]; value=v30400
    }
0x8048570:add    esp, 0x0c
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048573:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048574:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048575:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048576:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048577:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048578"
==============================================
0x8048578:nop    
    ax = v31590
    cx = v31591
    dx = v31592
    bx = v31593
    sp = v31594
    bp = v31595
    si = v31596
    di = v31597
    es = v31598
    cs = v31599
    ss = v31600
    ds = v31601
    fs = v31602
    gs = v31603
    cf = v31604
    ?1 = v31605
    pf = v31606
    ?3 = v31607
    af = v31608
    ?5 = v31609
    zf = v31610
    sf = v31611
    tf = v31612
    if = v31613
    df = v31614
    of = v31615
    iopl0 = v31616
    iopl1 = v31617
    nt = v31618
    ?15 = v31619
    memory = {}
0x8048579:nop    
    ax = v31590
    cx = v31591
    dx = v31592
    bx = v31593
    sp = v31594
    bp = v31595
    si = v31596
    di = v31597
    es = v31598
    cs = v31599
    ss = v31600
    ds = v31601
    fs = v31602
    gs = v31603
    cf = v31604
    ?1 = v31605
    pf = v31606
    ?3 = v31607
    af = v31608
    ?5 = v31609
    zf = v31610
    sf = v31611
    tf = v31612
    if = v31613
    df = v31614
    of = v31615
    iopl0 = v31616
    iopl1 = v31617
    nt = v31618
    ?15 = v31619
    memory = {}
0x804857a:nop    
    ax = v31590
    cx = v31591
    dx = v31592
    bx = v31593
    sp = v31594
    bp = v31595
    si = v31596
    di = v31597
    es = v31598
    cs = v31599
    ss = v31600
    ds = v31601
    fs = v31602
    gs = v31603
    cf = v31604
    ?1 = v31605
    pf = v31606
    ?3 = v31607
    af = v31608
    ?5 = v31609
    zf = v31610
    sf = v31611
    tf = v31612
    if = v31613
    df = v31614
    of = v31615
    iopl0 = v31616
    iopl1 = v31617
    nt = v31618
    ?15 = v31619
    memory = {}
0x804857b:nop    
    ax = v31590
    cx = v31591
    dx = v31592
    bx = v31593
    sp = v31594
    bp = v31595
    si = v31596
    di = v31597
    es = v31598
    cs = v31599
    ss = v31600
    ds = v31601
    fs = v31602
    gs = v31603
    cf = v31604
    ?1 = v31605
    pf = v31606
    ?3 = v31607
    af = v31608
    ?5 = v31609
    zf = v31610
    sf = v31611
    tf = v31612
    if = v31613
    df = v31614
    of = v31615
    iopl0 = v31616
    iopl1 = v31617
    nt = v31618
    ?15 = v31619
    memory = {}
0x804857c:nop    
    ax = v31590
    cx = v31591
    dx = v31592
    bx = v31593
    sp = v31594
    bp = v31595
    si = v31596
    di = v31597
    es = v31598
    cs = v31599
    ss = v31600
    ds = v31601
    fs = v31602
    gs = v31603
    cf = v31604
    ?1 = v31605
    pf = v31606
    ?3 = v31607
    af = v31608
    ?5 = v31609
    zf = v31610
    sf = v31611
    tf = v31612
    if = v31613
    df = v31614
    of = v31615
    iopl0 = v31616
    iopl1 = v31617
    nt = v31618
    ?15 = v31619
    memory = {}
0x804857d:nop    
    ax = v31590
    cx = v31591
    dx = v31592
    bx = v31593
    sp = v31594
    bp = v31595
    si = v31596
    di = v31597
    es = v31598
    cs = v31599
    ss = v31600
    ds = v31601
    fs = v31602
    gs = v31603
    cf = v31604
    ?1 = v31605
    pf = v31606
    ?3 = v31607
    af = v31608
    ?5 = v31609
    zf = v31610
    sf = v31611
    tf = v31612
    if = v31613
    df = v31614
    of = v31615
    iopl0 = v31616
    iopl1 = v31617
    nt = v31618
    ?15 = v31619
    memory = {}
0x804857e:nop    
    ax = v31590
    cx = v31591
    dx = v31592
    bx = v31593
    sp = v31594
    bp = v31595
    si = v31596
    di = v31597
    es = v31598
    cs = v31599
    ss = v31600
    ds = v31601
    fs = v31602
    gs = v31603
    cf = v31604
    ?1 = v31605
    pf = v31606
    ?3 = v31607
    af = v31608
    ?5 = v31609
    zf = v31610
    sf = v31611
    tf = v31612
    if = v31613
    df = v31614
    of = v31615
    iopl0 = v31616
    iopl1 = v31617
    nt = v31618
    ?15 = v31619
    memory = {}
0x804857f:nop    
    ax = v31590
    cx = v31591
    dx = v31592
    bx = v31593
    sp = v31594
    bp = v31595
    si = v31596
    di = v31597
    es = v31598
    cs = v31599
    ss = v31600
    ds = v31601
    fs = v31602
    gs = v31603
    cf = v31604
    ?1 = v31605
    pf = v31606
    ?3 = v31607
    af = v31608
    ?5 = v31609
    zf = v31610
    sf = v31611
    tf = v31612
    if = v31613
    df = v31614
    of = v31615
    iopl0 = v31616
    iopl1 = v31617
    nt = v31618
    ?15 = v31619
    memory = {}
==============================================
Constant propagation in function "__do_global_ctors_aux"
==============================================
0x8048580:push   ebp
    ax = v31936
    cx = v31937
    dx = v31938
    bx = v31939
    sp = v31940-0x4 [from 0x8048580:push   ebp]
    bp = v31941
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = v31950
    ?1 = v31951
    pf = v31952
    ?3 = v31953
    af = v31954
    ?5 = v31955
    zf = v31956
    sf = v31957
    tf = v31958
    if = v31959
    df = v31960
    of = v31961
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x8048581:mov    ebp, esp
    ax = v31936
    cx = v31937
    dx = v31938
    bx = v31939
    sp = v31940-0x4 [from 0x8048580:push   ebp]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = v31950
    ?1 = v31951
    pf = v31952
    ?3 = v31953
    af = v31954
    ?5 = v31955
    zf = v31956
    sf = v31957
    tf = v31958
    if = v31959
    df = v31960
    of = v31961
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x8048583:push   ebx
    ax = v31936
    cx = v31937
    dx = v31938
    bx = v31939
    sp = v31940-0x8 [from 0x8048583:push   ebx]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = v31950
    ?1 = v31951
    pf = v31952
    ?3 = v31953
    af = v31954
    ?5 = v31955
    zf = v31956
    sf = v31957
    tf = v31958
    if = v31959
    df = v31960
    of = v31961
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x8048584:sub    esp, 0x04
    ax = v31936
    cx = v31937
    dx = v31938
    bx = v31939
    sp = v31940-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32103-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v31951
    pf = -v32097-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v31953
    af = -v32101-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v31955
    zf = v32100 [from 0x8048584:sub    esp, 0x04]
    sf = v32099 [from 0x8048584:sub    esp, 0x04]
    tf = v31958
    if = v31959
    df = v31960
    of = v32107 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x8048587:mov    ebx, 0x080495e8
    ax = v31936
    cx = v31937
    dx = v31938
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v31940-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32103-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v31951
    pf = -v32097-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v31953
    af = -v32101-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v31955
    zf = v32100 [from 0x8048584:sub    esp, 0x04]
    sf = v32099 [from 0x8048584:sub    esp, 0x04]
    tf = v31958
    if = v31959
    df = v31960
    of = v32107 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v32175 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v31937
    dx = v31938
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v31940-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32103-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v31951
    pf = -v32097-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v31953
    af = -v32101-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v31955
    zf = v32100 [from 0x8048584:sub    esp, 0x04]
    sf = v32099 [from 0x8048584:sub    esp, 0x04]
    tf = v31958
    if = v31959
    df = v31960
    of = v32107 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x8048591:cmp    eax, 0xff
    ax = v32175 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v31937
    dx = v31938
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v31940-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32240-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v31951
    pf = -v32234-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v31953
    af = -v32238-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v31955
    zf = v32237 [from 0x8048591:cmp    eax, 0xff]
    sf = v32236 [from 0x8048591:cmp    eax, 0xff]
    tf = v31958
    if = v31959
    df = v31960
    of = v32244 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x8048594:je     0x080485ac
    ax = v32175 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v31937
    dx = v31938
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v31940-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32240-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v31951
    pf = -v32234-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v31953
    af = -v32238-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v31955
    zf = v32237 [from 0x8048591:cmp    eax, 0xff]
    sf = v32236 [from 0x8048591:cmp    eax, 0xff]
    tf = v31958
    if = v31959
    df = v31960
    of = v32244 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x8048596:lea    esi, [esi + 0x00]
    ax = v32175 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v31937
    dx = v31938
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v31940-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32240-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v31951
    pf = -v32234-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v31953
    af = -v32238-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v31955
    zf = v32237 [from 0x8048591:cmp    eax, 0xff]
    sf = v32236 [from 0x8048591:cmp    eax, 0xff]
    tf = v31958
    if = v31959
    df = v31960
    of = v32244 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v32175 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v31937
    dx = v31938
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v31940-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v31943 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32240-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v31951
    pf = -v32234-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v31953
    af = -v32238-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v31955
    zf = v32237 [from 0x8048591:cmp    eax, 0xff]
    sf = v32236 [from 0x8048591:cmp    eax, 0xff]
    tf = v31958
    if = v31959
    df = v31960
    of = v32244 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x80485a0:sub    ebx, 0x04
    ax = v32175 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v31937
    dx = v31938
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v31940-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v31943 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v31951
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v31953
    af = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v31955
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    tf = v31958
    if = v31959
    df = v31960
    of = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x80485a3:call   eax
    ax = v32175 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v31937
    dx = v31938
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v31940-0x10 [from 0x80485a3:call   eax]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v31943 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v31951
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v31953
    af = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v31955
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    tf = v31958
    if = v31959
    df = v31960
    of = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x10 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485a7:cmp    eax, 0xff
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485aa:jne    0x080485a0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485ac:pop    eax
    ax = v32625 [from 0x80485ac:pop    eax]
    cx = v31937
    dx = v31938
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v31940-0x8 [from 0x80485ac:pop    eax]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32240-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v31951
    pf = -v32234-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v31953
    af = -v32238-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v31955
    zf = v32237 [from 0x8048591:cmp    eax, 0xff]
    sf = v32236 [from 0x8048591:cmp    eax, 0xff]
    tf = v31958
    if = v31959
    df = v31960
    of = v32244 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x80485ad:pop    ebx
    ax = v32625 [from 0x80485ac:pop    eax]
    cx = v31937
    dx = v31938
    bx = v31939
    sp = v31940-0x4 [from 0x80485ad:pop    ebx]
    bp = v31940-0x4 [from 0x8048580:push   ebp]
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32240-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v31951
    pf = -v32234-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v31953
    af = -v32238-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v31955
    zf = v32237 [from 0x8048591:cmp    eax, 0xff]
    sf = v32236 [from 0x8048591:cmp    eax, 0xff]
    tf = v31958
    if = v31959
    df = v31960
    of = v32244 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x80485ae:pop    ebp
    ax = v32625 [from 0x80485ac:pop    eax]
    cx = v31937
    dx = v31938
    bx = v31939
    sp = v31940 [from 0x80485ae:pop    ebp]
    bp = v31941
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32240-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v31951
    pf = -v32234-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v31953
    af = -v32238-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v31955
    zf = v32237 [from 0x8048591:cmp    eax, 0xff]
    sf = v32236 [from 0x8048591:cmp    eax, 0xff]
    tf = v31958
    if = v31959
    df = v31960
    of = v32244 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
0x80485af:ret    
    ax = v32625 [from 0x80485ac:pop    eax]
    cx = v31937
    dx = v31938
    bx = v31939
    sp = v31940+0x4 [from 0x80485af:ret    ]
    bp = v31941
    si = v31942
    di = v31943
    es = v31944
    cs = v31945
    ss = v31946
    ds = v31947
    fs = v31948
    gs = v31949
    cf = -v32240-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v31951
    pf = -v32234-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v31953
    af = -v32238-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v31955
    zf = v32237 [from 0x8048591:cmp    eax, 0xff]
    sf = v32236 [from 0x8048591:cmp    eax, 0xff]
    tf = v31958
    if = v31959
    df = v31960
    of = v32244 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v31962
    iopl1 = v31963
    nt = v31964
    ?15 = v31965
    memory = {
        size=4; addr=v31940-0x8 [from 0x8048583:push   ebx]; value=v31939
        size=4; addr=v31940-0x4 [from 0x8048580:push   ebp]; value=v31941
    }
==============================================
Constant propagation in function "_fini"
==============================================
0x80485b0:push   ebp
    ax = v32797
    cx = v32798
    dx = v32799
    bx = v32800
    sp = v32801-0x4 [from 0x80485b0:push   ebp]
    bp = v32802
    si = v32803
    di = v32804
    es = v32805
    cs = v32806
    ss = v32807
    ds = v32808
    fs = v32809
    gs = v32810
    cf = v32811
    ?1 = v32812
    pf = v32813
    ?3 = v32814
    af = v32815
    ?5 = v32816
    zf = v32817
    sf = v32818
    tf = v32819
    if = v32820
    df = v32821
    of = v32822
    iopl0 = v32823
    iopl1 = v32824
    nt = v32825
    ?15 = v32826
    memory = {
        size=4; addr=v32801-0x4 [from 0x80485b0:push   ebp]; value=v32802
    }
0x80485b1:mov    ebp, esp
    ax = v32797
    cx = v32798
    dx = v32799
    bx = v32800
    sp = v32801-0x4 [from 0x80485b0:push   ebp]
    bp = v32801-0x4 [from 0x80485b0:push   ebp]
    si = v32803
    di = v32804
    es = v32805
    cs = v32806
    ss = v32807
    ds = v32808
    fs = v32809
    gs = v32810
    cf = v32811
    ?1 = v32812
    pf = v32813
    ?3 = v32814
    af = v32815
    ?5 = v32816
    zf = v32817
    sf = v32818
    tf = v32819
    if = v32820
    df = v32821
    of = v32822
    iopl0 = v32823
    iopl1 = v32824
    nt = v32825
    ?15 = v32826
    memory = {
        size=4; addr=v32801-0x4 [from 0x80485b0:push   ebp]; value=v32802
    }
0x80485b3:push   ebx
    ax = v32797
    cx = v32798
    dx = v32799
    bx = v32800
    sp = v32801-0x8 [from 0x80485b3:push   ebx]
    bp = v32801-0x4 [from 0x80485b0:push   ebp]
    si = v32803
    di = v32804
    es = v32805
    cs = v32806
    ss = v32807
    ds = v32808
    fs = v32809
    gs = v32810
    cf = v32811
    ?1 = v32812
    pf = v32813
    ?3 = v32814
    af = v32815
    ?5 = v32816
    zf = v32817
    sf = v32818
    tf = v32819
    if = v32820
    df = v32821
    of = v32822
    iopl0 = v32823
    iopl1 = v32824
    nt = v32825
    ?15 = v32826
    memory = {
        size=4; addr=v32801-0x8 [from 0x80485b3:push   ebx]; value=v32800
        size=4; addr=v32801-0x4 [from 0x80485b0:push   ebp]; value=v32802
    }
0x80485b4:push   eax
    ax = v32797
    cx = v32798
    dx = v32799
    bx = v32800
    sp = v32801-0xc [from 0x80485b4:push   eax]
    bp = v32801-0x4 [from 0x80485b0:push   ebp]
    si = v32803
    di = v32804
    es = v32805
    cs = v32806
    ss = v32807
    ds = v32808
    fs = v32809
    gs = v32810
    cf = v32811
    ?1 = v32812
    pf = v32813
    ?3 = v32814
    af = v32815
    ?5 = v32816
    zf = v32817
    sf = v32818
    tf = v32819
    if = v32820
    df = v32821
    of = v32822
    iopl0 = v32823
    iopl1 = v32824
    nt = v32825
    ?15 = v32826
    memory = {
        size=4; addr=v32801-0xc [from 0x80485b4:push   eax]; value=v32797
        size=4; addr=v32801-0x8 [from 0x80485b3:push   ebx]; value=v32800
        size=4; addr=v32801-0x4 [from 0x80485b0:push   ebp]; value=v32802
    }
0x80485b5:call   0x080485ba
    ax = v32797
    cx = v32798
    dx = v32799
    bx = v32800
    sp = v32801-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v32801-0x4 [from 0x80485b0:push   ebp]
    si = v32803
    di = v32804
    es = v32805
    cs = v32806
    ss = v32807
    ds = v32808
    fs = v32809
    gs = v32810
    cf = v32811
    ?1 = v32812
    pf = v32813
    ?3 = v32814
    af = v32815
    ?5 = v32816
    zf = v32817
    sf = v32818
    tf = v32819
    if = v32820
    df = v32821
    of = v32822
    iopl0 = v32823
    iopl1 = v32824
    nt = v32825
    ?15 = v32826
    memory = {
        size=4; addr=v32801-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v32801-0xc [from 0x80485b4:push   eax]; value=v32797
        size=4; addr=v32801-0x8 [from 0x80485b3:push   ebx]; value=v32800
        size=4; addr=v32801-0x4 [from 0x80485b0:push   ebp]; value=v32802
    }
0x80485ba:pop    ebx
    ax = v32797
    cx = v32798
    dx = v32799
    bx = 0x80485ba [from 0x80485b5:call   0x080485ba]
    sp = v32801-0xc [from 0x80485ba:pop    ebx]
    bp = v32801-0x4 [from 0x80485b0:push   ebp]
    si = v32803
    di = v32804
    es = v32805
    cs = v32806
    ss = v32807
    ds = v32808
    fs = v32809
    gs = v32810
    cf = v32811
    ?1 = v32812
    pf = v32813
    ?3 = v32814
    af = v32815
    ?5 = v32816
    zf = v32817
    sf = v32818
    tf = v32819
    if = v32820
    df = v32821
    of = v32822
    iopl0 = v32823
    iopl1 = v32824
    nt = v32825
    ?15 = v32826
    memory = {
        size=4; addr=v32801-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v32801-0xc [from 0x80485b4:push   eax]; value=v32797
        size=4; addr=v32801-0x8 [from 0x80485b3:push   ebx]; value=v32800
        size=4; addr=v32801-0x4 [from 0x80485b0:push   ebp]; value=v32802
    }
0x80485bb:add    ebx, 0x0000110e
    ax = v32797
    cx = v32798
    dx = v32799
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v32801-0xc [from 0x80485ba:pop    ebx]
    bp = v32801-0x4 [from 0x80485b0:push   ebp]
    si = v32803
    di = v32804
    es = v32805
    cs = v32806
    ss = v32807
    ds = v32808
    fs = v32809
    gs = v32810
    cf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v32812
    pf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v32814
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v32816
    zf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v32819
    if = v32820
    df = v32821
    of = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v32823
    iopl1 = v32824
    nt = v32825
    ?15 = v32826
    memory = {
        size=4; addr=v32801-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v32801-0xc [from 0x80485b4:push   eax]; value=v32797
        size=4; addr=v32801-0x8 [from 0x80485b3:push   ebx]; value=v32800
        size=4; addr=v32801-0x4 [from 0x80485b0:push   ebp]; value=v32802
    }
0x80485c1:call   0x08048390
    ax = v32797
    cx = v32798
    dx = v32799
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v32801-0x10 [from 0x80485c1:call   0x08048390]
    bp = v32801-0x4 [from 0x80485b0:push   ebp]
    si = v32803
    di = v32804
    es = v32805
    cs = v32806
    ss = v32807
    ds = v32808
    fs = v32809
    gs = v32810
    cf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v32812
    pf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v32814
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v32816
    zf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v32819
    if = v32820
    df = v32821
    of = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v32823
    iopl1 = v32824
    nt = v32825
    ?15 = v32826
    memory = {
        size=4; addr=v32801-0x10 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
        size=4; addr=v32801-0xc [from 0x80485b4:push   eax]; value=v32797
        size=4; addr=v32801-0x8 [from 0x80485b3:push   ebx]; value=v32800
        size=4; addr=v32801-0x4 [from 0x80485b0:push   ebp]; value=v32802
    }
0x80485c6:pop    eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c7:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c8:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c9:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
analyzed headers: 1
