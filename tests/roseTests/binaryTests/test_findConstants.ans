==============================================
Constant propagation in function "_init"
==============================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482cb:sub    esp, 0x8
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x8]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x8]
    sf = v189 [from 0x80482cb:sub    esp, 0x8]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x8]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482ce:call   0x8048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x8048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x8]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x8]
    sf = v189 [from 0x80482cb:sub    esp, 0x8]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x8]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x8048364]; value=0x80482d3 [from 0x80482ce:call   0x8048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
0x80482d3:call   0x80483d0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482d8 [from 0x80482d3:call   0x80483d0]
    }
0x80482d8:call   0x8048580
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80482dd [from 0x80482d8:call   0x8048580]
    }
0x80482dd:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482de:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482df:add    bh, bh
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482e1:xor    eax, 0x80496cc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80482e6:jmp    DWORD PTR ds:[0x80496d0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80482e1:xor    eax, 0x80496cc]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x80482e0"
==============================================
0x80482e0:push   DWORD PTR ds:[0x80496cc]
    ax = v725
    cx = v726
    dx = v727
    bx = v728
    sp = v729-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    bp = v730
    si = v731
    di = v732
    es = v733
    cs = v734
    ss = v735
    ds = v736
    fs = v737
    gs = v738
    cf = v739
    ?1 = v740
    pf = v741
    ?3 = v742
    af = v743
    ?5 = v744
    zf = v745
    sf = v746
    tf = v747
    if = v748
    df = v749
    of = v750
    iopl0 = v751
    iopl1 = v752
    nt = v753
    ?15 = v754
    memory = {
        size=4; addr=v729-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]; value=v761 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    }
0x80482e6:jmp    DWORD PTR ds:[0x80496d0]
    ax = v725
    cx = v726
    dx = v727
    bx = v728
    sp = v729-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    bp = v730
    si = v731
    di = v732
    es = v733
    cs = v734
    ss = v735
    ds = v736
    fs = v737
    gs = v738
    cf = v739
    ?1 = v740
    pf = v741
    ?3 = v742
    af = v743
    ?5 = v744
    zf = v745
    sf = v746
    tf = v747
    if = v748
    df = v749
    of = v750
    iopl0 = v751
    iopl1 = v752
    nt = v753
    ?15 = v754
    memory = {
        size=4; addr=v729-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]; value=v761 [from 0x80482e0:push   DWORD PTR ds:[0x80496cc]]
    }
==============================================
Constant propagation in function "0x80482ec"
==============================================
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = v859
    cx = v860
    dx = v861
    bx = v862
    sp = v863
    bp = v864
    si = v865
    di = v866
    es = v867
    cs = v868
    ss = v869
    ds = v870
    fs = v871
    gs = v872
    cf = v921 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?1 = v874
    pf = -v916-0x1 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?3 = v876
    af = v920 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?5 = v878
    zf = v919 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    sf = v918 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    tf = v881
    if = v882
    df = v883
    of = v924 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    iopl0 = v885
    iopl1 = v886
    nt = v887
    ?15 = v888
    memory = {
        size=1; addr=v859; value=v1752 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = v859
    cx = v860
    dx = v861
    bx = v862
    sp = v863
    bp = v864
    si = v865
    di = v866
    es = v867
    cs = v868
    ss = v869
    ds = v870
    fs = v871
    gs = v872
    cf = v990 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?1 = v874
    pf = -v985-0x1 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?3 = v876
    af = v989 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?5 = v878
    zf = v988 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    sf = v987 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    tf = v881
    if = v882
    df = v883
    of = v993 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    iopl0 = v885
    iopl1 = v886
    nt = v887
    ?15 = v888
    memory = {
        size=1; addr=v859; value=v2611 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    }
==============================================
Constant propagation in function "signal"
==============================================
0x80482f0:jmp    DWORD PTR ds:[0x80496d4]
    ax = v1087
    cx = v1088
    dx = v1089
    bx = v1090
    sp = v1091
    bp = v1092
    si = v1093
    di = v1094
    es = v1095
    cs = v1096
    ss = v1097
    ds = v1098
    fs = v1099
    gs = v1100
    cf = v1101
    ?1 = v1102
    pf = v1103
    ?3 = v1104
    af = v1105
    ?5 = v1106
    zf = v1107
    sf = v1108
    tf = v1109
    if = v1110
    df = v1111
    of = v1112
    iopl0 = v1113
    iopl1 = v1114
    nt = v1115
    ?15 = v1116
    memory = {}
0x80482f6:push   0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x0]
    }
0x80482fb:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x0]
    }
==============================================
Constant propagation in function "puts"
==============================================
0x8048300:jmp    DWORD PTR ds:[0x80496d8]
    ax = v1282
    cx = v1283
    dx = v1284
    bx = v1285
    sp = v1286
    bp = v1287
    si = v1288
    di = v1289
    es = v1290
    cs = v1291
    ss = v1292
    ds = v1293
    fs = v1294
    gs = v1295
    cf = v1296
    ?1 = v1297
    pf = v1298
    ?3 = v1299
    af = v1300
    ?5 = v1301
    zf = v1302
    sf = v1303
    tf = v1304
    if = v1305
    df = v1306
    of = v1307
    iopl0 = v1308
    iopl1 = v1309
    nt = v1310
    ?15 = v1311
    memory = {}
0x8048306:push   0x8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x8]
    }
0x804830b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x8]
    }
==============================================
Constant propagation in function "__libc_start_main"
==============================================
0x8048310:jmp    DWORD PTR ds:[0x80496dc]
    ax = v1477
    cx = v1478
    dx = v1479
    bx = v1480
    sp = v1481
    bp = v1482
    si = v1483
    di = v1484
    es = v1485
    cs = v1486
    ss = v1487
    ds = v1488
    fs = v1489
    gs = v1490
    cf = v1491
    ?1 = v1492
    pf = v1493
    ?3 = v1494
    af = v1495
    ?5 = v1496
    zf = v1497
    sf = v1498
    tf = v1499
    if = v1500
    df = v1501
    of = v1502
    iopl0 = v1503
    iopl1 = v1504
    nt = v1505
    ?15 = v1506
    memory = {}
0x8048316:push   0x10
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x10]
    }
0x804831b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x10]
    }
==============================================
Constant propagation in function "_exit"
==============================================
0x8048320:jmp    DWORD PTR ds:[0x80496e0]
    ax = v1672
    cx = v1673
    dx = v1674
    bx = v1675
    sp = v1676
    bp = v1677
    si = v1678
    di = v1679
    es = v1680
    cs = v1681
    ss = v1682
    ds = v1683
    fs = v1684
    gs = v1685
    cf = v1686
    ?1 = v1687
    pf = v1688
    ?3 = v1689
    af = v1690
    ?5 = v1691
    zf = v1692
    sf = v1693
    tf = v1694
    if = v1695
    df = v1696
    of = v1697
    iopl0 = v1698
    iopl1 = v1699
    nt = v1700
    ?15 = v1701
    memory = {}
0x8048326:push   0x18
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x18]
    }
0x804832b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x18]
    }
==============================================
Constant propagation in function "__gmon_start__"
==============================================
0x8048330:jmp    DWORD PTR ds:[0x80496e4]
    ax = v1867
    cx = v1868
    dx = v1869
    bx = v1870
    sp = v1871
    bp = v1872
    si = v1873
    di = v1874
    es = v1875
    cs = v1876
    ss = v1877
    ds = v1878
    fs = v1879
    gs = v1880
    cf = v1881
    ?1 = v1882
    pf = v1883
    ?3 = v1884
    af = v1885
    ?5 = v1886
    zf = v1887
    sf = v1888
    tf = v1889
    if = v1890
    df = v1891
    of = v1892
    iopl0 = v1893
    iopl1 = v1894
    nt = v1895
    ?15 = v1896
    memory = {}
0x8048336:push   0x20
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x20]
    }
0x804833b:jmp    0x80482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x20]
    }
==============================================
Constant propagation in function "_start"
==============================================
0x8048340:xor    ebp, ebp
    ax = v2062
    cx = v2063
    dx = v2064
    bx = v2065
    sp = v2066
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2068
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2077
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {}
0x8048342:pop    esi
    ax = v2062
    cx = v2063
    dx = v2064
    bx = v2065
    sp = v2066+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2077
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {}
0x8048343:mov    ecx, esp
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2066+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2077
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {}
0x8048345:and    esp, 0xf0
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217 [from 0x8048345:and    esp, 0xf0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {}
0x8048348:push   eax
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x8048349:push   esp
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0x8 [from 0x8048349:push   esp]; value=v2217-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x804834a:push   edx
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0xc [from 0x804834a:push   edx]; value=v2064
        size=4; addr=v2217-0x8 [from 0x8048349:push   esp]; value=v2217-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x804834b:push   0x8048520
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0x10 [from 0x804834b:push   0x8048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2217-0xc [from 0x804834a:push   edx]; value=v2064
        size=4; addr=v2217-0x8 [from 0x8048349:push   esp]; value=v2217-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x8048350:push   0x80484b0
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0x14 [from 0x8048350:push   0x80484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2217-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2217-0xc [from 0x804834a:push   edx]; value=v2064
        size=4; addr=v2217-0x8 [from 0x8048349:push   esp]; value=v2217-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x8048355:push   ecx
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0x18 [from 0x8048355:push   ecx]; value=v2066+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2217-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2217-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2217-0xc [from 0x804834a:push   edx]; value=v2064
        size=4; addr=v2217-0x8 [from 0x8048349:push   esp]; value=v2217-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x8048356:push   esi
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0x1c [from 0x8048356:push   esi]; value=v2151 [from 0x8048342:pop    esi]
        size=4; addr=v2217-0x18 [from 0x8048355:push   ecx]; value=v2066+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2217-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2217-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2217-0xc [from 0x804834a:push   edx]; value=v2064
        size=4; addr=v2217-0x8 [from 0x8048349:push   esp]; value=v2217-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x8048357:push   0x8048410
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0x20 [from 0x8048357:push   0x8048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0x20 [from 0x8048357:push   0x8048410]; value=0x8048410 [from 0x8048357:push   0x8048410]
        size=4; addr=v2217-0x1c [from 0x8048356:push   esi]; value=v2151 [from 0x8048342:pop    esi]
        size=4; addr=v2217-0x18 [from 0x8048355:push   ecx]; value=v2066+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2217-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2217-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2217-0xc [from 0x804834a:push   edx]; value=v2064
        size=4; addr=v2217-0x8 [from 0x8048349:push   esp]; value=v2217-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x804835c:call   0x8048310
    ax = v2062
    cx = v2066+0x4 [from 0x8048342:pop    esi]
    dx = v2064
    bx = v2065
    sp = v2217-0x24 [from 0x804835c:call   0x8048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2151 [from 0x8048342:pop    esi]
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = v2077
    pf = -v2233-0x1 [from 0x8048345:and    esp, 0xf0]
    ?3 = v2079
    af = <top>
    ?5 = v2081
    zf = v2236 [from 0x8048345:and    esp, 0xf0]
    sf = v2235 [from 0x8048345:and    esp, 0xf0]
    tf = v2084
    if = v2085
    df = v2086
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2217-0x24 [from 0x804835c:call   0x8048310]; value=0x8048361 [from 0x804835c:call   0x8048310]
        size=4; addr=v2217-0x20 [from 0x8048357:push   0x8048410]; value=0x8048410 [from 0x8048357:push   0x8048410]
        size=4; addr=v2217-0x1c [from 0x8048356:push   esi]; value=v2151 [from 0x8048342:pop    esi]
        size=4; addr=v2217-0x18 [from 0x8048355:push   ecx]; value=v2066+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2217-0x14 [from 0x8048350:push   0x80484b0]; value=0x80484b0 [from 0x8048350:push   0x80484b0]
        size=4; addr=v2217-0x10 [from 0x804834b:push   0x8048520]; value=0x8048520 [from 0x804834b:push   0x8048520]
        size=4; addr=v2217-0xc [from 0x804834a:push   edx]; value=v2064
        size=4; addr=v2217-0x8 [from 0x8048349:push   esp]; value=v2217-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2217-0x4 [from 0x8048348:push   eax]; value=v2062
    }
0x8048361:hlt    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048362"
==============================================
0x8048362:nop    
    ax = v2692
    cx = v2693
    dx = v2694
    bx = v2695
    sp = v2696
    bp = v2697
    si = v2698
    di = v2699
    es = v2700
    cs = v2701
    ss = v2702
    ds = v2703
    fs = v2704
    gs = v2705
    cf = v2706
    ?1 = v2707
    pf = v2708
    ?3 = v2709
    af = v2710
    ?5 = v2711
    zf = v2712
    sf = v2713
    tf = v2714
    if = v2715
    df = v2716
    of = v2717
    iopl0 = v2718
    iopl1 = v2719
    nt = v2720
    ?15 = v2721
    memory = {}
0x8048363:nop    
    ax = v2692
    cx = v2693
    dx = v2694
    bx = v2695
    sp = v2696
    bp = v2697
    si = v2698
    di = v2699
    es = v2700
    cs = v2701
    ss = v2702
    ds = v2703
    fs = v2704
    gs = v2705
    cf = v2706
    ?1 = v2707
    pf = v2708
    ?3 = v2709
    af = v2710
    ?5 = v2711
    zf = v2712
    sf = v2713
    tf = v2714
    if = v2715
    df = v2716
    of = v2717
    iopl0 = v2718
    iopl1 = v2719
    nt = v2720
    ?15 = v2721
    memory = {}
==============================================
Constant propagation in function "call_gmon_start"
==============================================
0x8048364:push   ebp
    ax = v2846
    cx = v2847
    dx = v2848
    bx = v2849
    sp = v2850-0x4 [from 0x8048364:push   ebp]
    bp = v2851
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = v2860
    ?1 = v2861
    pf = v2862
    ?3 = v2863
    af = v2864
    ?5 = v2865
    zf = v2866
    sf = v2867
    tf = v2868
    if = v2869
    df = v2870
    of = v2871
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048365:mov    ebp, esp
    ax = v2846
    cx = v2847
    dx = v2848
    bx = v2849
    sp = v2850-0x4 [from 0x8048364:push   ebp]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = v2860
    ?1 = v2861
    pf = v2862
    ?3 = v2863
    af = v2864
    ?5 = v2865
    zf = v2866
    sf = v2867
    tf = v2868
    if = v2869
    df = v2870
    of = v2871
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048367:push   ebx
    ax = v2846
    cx = v2847
    dx = v2848
    bx = v2849
    sp = v2850-0x8 [from 0x8048367:push   ebx]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = v2860
    ?1 = v2861
    pf = v2862
    ?3 = v2863
    af = v2864
    ?5 = v2865
    zf = v2866
    sf = v2867
    tf = v2868
    if = v2869
    df = v2870
    of = v2871
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048368:push   ecx
    ax = v2846
    cx = v2847
    dx = v2848
    bx = v2849
    sp = v2850-0xc [from 0x8048368:push   ecx]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = v2860
    ?1 = v2861
    pf = v2862
    ?3 = v2863
    af = v2864
    ?5 = v2865
    zf = v2866
    sf = v2867
    tf = v2868
    if = v2869
    df = v2870
    of = v2871
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048369:call   0x804836e
    ax = v2846
    cx = v2847
    dx = v2848
    bx = v2849
    sp = v2850-0x10 [from 0x8048369:call   0x804836e]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = v2860
    ?1 = v2861
    pf = v2862
    ?3 = v2863
    af = v2864
    ?5 = v2865
    zf = v2866
    sf = v2867
    tf = v2868
    if = v2869
    df = v2870
    of = v2871
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x804836e:pop    ebx
    ax = v2846
    cx = v2847
    dx = v2848
    bx = 0x804836e [from 0x8048369:call   0x804836e]
    sp = v2850-0xc [from 0x804836e:pop    ebx]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = v2860
    ?1 = v2861
    pf = v2862
    ?3 = v2863
    af = v2864
    ?5 = v2865
    zf = v2866
    sf = v2867
    tf = v2868
    if = v2869
    df = v2870
    of = v2871
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x804836f:add    ebx, 0x135a
    ax = v2846
    cx = v2847
    dx = v2848
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2850-0xc [from 0x804836e:pop    ebx]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?1 = v2861
    pf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?3 = v2863
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x135a]
    ?5 = v2865
    zf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804836f:add    ebx, 0x135a]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]
    ax = v2846
    cx = v2847
    dx = v3158 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2850-0xc [from 0x804836e:pop    ebx]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?1 = v2861
    pf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    ?3 = v2863
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x135a]
    ?5 = v2865
    zf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x135a]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804836f:add    ebx, 0x135a]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x804837b:test   edx, edx
    ax = v2846
    cx = v2847
    dx = v3158 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2850-0xc [from 0x804836e:pop    ebx]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2861
    pf = -v3207-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2863
    af = <top>
    ?5 = v2865
    zf = v3210 [from 0x804837b:test   edx, edx]
    sf = v3209 [from 0x804837b:test   edx, edx]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x804837d:je     0x8048384
    ax = v2846
    cx = v2847
    dx = v3158 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2850-0xc [from 0x804836e:pop    ebx]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2861
    pf = -v3207-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2863
    af = <top>
    ?5 = v2865
    zf = v3210 [from 0x804837b:test   edx, edx]
    sf = v3209 [from 0x804837b:test   edx, edx]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x804837f:call   0x8048330
    ax = v2846
    cx = v2847
    dx = v3158 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2850-0x10 [from 0x804837f:call   0x8048330]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2861
    pf = -v3207-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2863
    af = <top>
    ?5 = v2865
    zf = v3210 [from 0x804837b:test   edx, edx]
    sf = v3209 [from 0x804837b:test   edx, edx]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x804837f:call   0x8048330]; value=0x8048384 [from 0x804837f:call   0x8048330]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048384:pop    eax
    ax = v2847
    cx = v2847
    dx = v3158 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x135a]
    sp = v2850-0x8 [from 0x8048384:pop    eax]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2861
    pf = -v3207-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2863
    af = <top>
    ?5 = v2865
    zf = v3210 [from 0x804837b:test   edx, edx]
    sf = v3209 [from 0x804837b:test   edx, edx]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048385:pop    ebx
    ax = v2847
    cx = v2847
    dx = v3158 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2849
    sp = v2850-0x4 [from 0x8048385:pop    ebx]
    bp = v2850-0x4 [from 0x8048364:push   ebp]
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2861
    pf = -v3207-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2863
    af = <top>
    ?5 = v2865
    zf = v3210 [from 0x804837b:test   edx, edx]
    sf = v3209 [from 0x804837b:test   edx, edx]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048386:leave  
    ax = v2847
    cx = v2847
    dx = v3158 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2849
    sp = v2850 [from 0x8048386:leave  ]
    bp = v2851
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2861
    pf = -v3207-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2863
    af = <top>
    ?5 = v2865
    zf = v3210 [from 0x804837b:test   edx, edx]
    sf = v3209 [from 0x804837b:test   edx, edx]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
0x8048387:ret    
    ax = v2847
    cx = v2847
    dx = v3158 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = v2849
    sp = v2850+0x4 [from 0x8048387:ret    ]
    bp = v2851
    si = v2852
    di = v2853
    es = v2854
    cs = v2855
    ss = v2856
    ds = v2857
    fs = v2858
    gs = v2859
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2861
    pf = -v3207-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2863
    af = <top>
    ?5 = v2865
    zf = v3210 [from 0x804837b:test   edx, edx]
    sf = v3209 [from 0x804837b:test   edx, edx]
    tf = v2868
    if = v2869
    df = v2870
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2872
    iopl1 = v2873
    nt = v2874
    ?15 = v2875
    memory = {
        size=4; addr=v2850-0x10 [from 0x8048369:call   0x804836e]; value=0x804836e [from 0x8048369:call   0x804836e]
        size=4; addr=v2850-0xc [from 0x8048368:push   ecx]; value=v2847
        size=4; addr=v2850-0x8 [from 0x8048367:push   ebx]; value=v2849
        size=4; addr=v2850-0x4 [from 0x8048364:push   ebp]; value=v2851
    }
==============================================
Constant propagation in function "0x8048388"
==============================================
0x8048388:nop    
    ax = v3522
    cx = v3523
    dx = v3524
    bx = v3525
    sp = v3526
    bp = v3527
    si = v3528
    di = v3529
    es = v3530
    cs = v3531
    ss = v3532
    ds = v3533
    fs = v3534
    gs = v3535
    cf = v3536
    ?1 = v3537
    pf = v3538
    ?3 = v3539
    af = v3540
    ?5 = v3541
    zf = v3542
    sf = v3543
    tf = v3544
    if = v3545
    df = v3546
    of = v3547
    iopl0 = v3548
    iopl1 = v3549
    nt = v3550
    ?15 = v3551
    memory = {}
0x8048389:nop    
    ax = v3522
    cx = v3523
    dx = v3524
    bx = v3525
    sp = v3526
    bp = v3527
    si = v3528
    di = v3529
    es = v3530
    cs = v3531
    ss = v3532
    ds = v3533
    fs = v3534
    gs = v3535
    cf = v3536
    ?1 = v3537
    pf = v3538
    ?3 = v3539
    af = v3540
    ?5 = v3541
    zf = v3542
    sf = v3543
    tf = v3544
    if = v3545
    df = v3546
    of = v3547
    iopl0 = v3548
    iopl1 = v3549
    nt = v3550
    ?15 = v3551
    memory = {}
0x804838a:nop    
    ax = v3522
    cx = v3523
    dx = v3524
    bx = v3525
    sp = v3526
    bp = v3527
    si = v3528
    di = v3529
    es = v3530
    cs = v3531
    ss = v3532
    ds = v3533
    fs = v3534
    gs = v3535
    cf = v3536
    ?1 = v3537
    pf = v3538
    ?3 = v3539
    af = v3540
    ?5 = v3541
    zf = v3542
    sf = v3543
    tf = v3544
    if = v3545
    df = v3546
    of = v3547
    iopl0 = v3548
    iopl1 = v3549
    nt = v3550
    ?15 = v3551
    memory = {}
0x804838b:nop    
    ax = v3522
    cx = v3523
    dx = v3524
    bx = v3525
    sp = v3526
    bp = v3527
    si = v3528
    di = v3529
    es = v3530
    cs = v3531
    ss = v3532
    ds = v3533
    fs = v3534
    gs = v3535
    cf = v3536
    ?1 = v3537
    pf = v3538
    ?3 = v3539
    af = v3540
    ?5 = v3541
    zf = v3542
    sf = v3543
    tf = v3544
    if = v3545
    df = v3546
    of = v3547
    iopl0 = v3548
    iopl1 = v3549
    nt = v3550
    ?15 = v3551
    memory = {}
0x804838c:nop    
    ax = v3522
    cx = v3523
    dx = v3524
    bx = v3525
    sp = v3526
    bp = v3527
    si = v3528
    di = v3529
    es = v3530
    cs = v3531
    ss = v3532
    ds = v3533
    fs = v3534
    gs = v3535
    cf = v3536
    ?1 = v3537
    pf = v3538
    ?3 = v3539
    af = v3540
    ?5 = v3541
    zf = v3542
    sf = v3543
    tf = v3544
    if = v3545
    df = v3546
    of = v3547
    iopl0 = v3548
    iopl1 = v3549
    nt = v3550
    ?15 = v3551
    memory = {}
0x804838d:nop    
    ax = v3522
    cx = v3523
    dx = v3524
    bx = v3525
    sp = v3526
    bp = v3527
    si = v3528
    di = v3529
    es = v3530
    cs = v3531
    ss = v3532
    ds = v3533
    fs = v3534
    gs = v3535
    cf = v3536
    ?1 = v3537
    pf = v3538
    ?3 = v3539
    af = v3540
    ?5 = v3541
    zf = v3542
    sf = v3543
    tf = v3544
    if = v3545
    df = v3546
    of = v3547
    iopl0 = v3548
    iopl1 = v3549
    nt = v3550
    ?15 = v3551
    memory = {}
0x804838e:nop    
    ax = v3522
    cx = v3523
    dx = v3524
    bx = v3525
    sp = v3526
    bp = v3527
    si = v3528
    di = v3529
    es = v3530
    cs = v3531
    ss = v3532
    ds = v3533
    fs = v3534
    gs = v3535
    cf = v3536
    ?1 = v3537
    pf = v3538
    ?3 = v3539
    af = v3540
    ?5 = v3541
    zf = v3542
    sf = v3543
    tf = v3544
    if = v3545
    df = v3546
    of = v3547
    iopl0 = v3548
    iopl1 = v3549
    nt = v3550
    ?15 = v3551
    memory = {}
0x804838f:nop    
    ax = v3522
    cx = v3523
    dx = v3524
    bx = v3525
    sp = v3526
    bp = v3527
    si = v3528
    di = v3529
    es = v3530
    cs = v3531
    ss = v3532
    ds = v3533
    fs = v3534
    gs = v3535
    cf = v3536
    ?1 = v3537
    pf = v3538
    ?3 = v3539
    af = v3540
    ?5 = v3541
    zf = v3542
    sf = v3543
    tf = v3544
    if = v3545
    df = v3546
    of = v3547
    iopl0 = v3548
    iopl1 = v3549
    nt = v3550
    ?15 = v3551
    memory = {}
==============================================
Constant propagation in function "__do_global_dtors_aux"
==============================================
0x8048390:push   ebp
    ax = v3868
    cx = v3869
    dx = v3870
    bx = v3871
    sp = v3872-0x4 [from 0x8048390:push   ebp]
    bp = v3873
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = v3882
    ?1 = v3883
    pf = v3884
    ?3 = v3885
    af = v3886
    ?5 = v3887
    zf = v3888
    sf = v3889
    tf = v3890
    if = v3891
    df = v3892
    of = v3893
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x8048391:mov    ebp, esp
    ax = v3868
    cx = v3869
    dx = v3870
    bx = v3871
    sp = v3872-0x4 [from 0x8048390:push   ebp]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = v3882
    ?1 = v3883
    pf = v3884
    ?3 = v3885
    af = v3886
    ?5 = v3887
    zf = v3888
    sf = v3889
    tf = v3890
    if = v3891
    df = v3892
    of = v3893
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x8048393:sub    esp, 0x8
    ax = v3868
    cx = v3869
    dx = v3870
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = -v3999-0x1 [from 0x8048393:sub    esp, 0x8]
    ?1 = v3883
    pf = -v3993-0x1 [from 0x8048393:sub    esp, 0x8]
    ?3 = v3885
    af = -v3997-0x1 [from 0x8048393:sub    esp, 0x8]
    ?5 = v3887
    zf = v3996 [from 0x8048393:sub    esp, 0x8]
    sf = v3995 [from 0x8048393:sub    esp, 0x8]
    tf = v3890
    if = v3891
    df = v3892
    of = v4003 [from 0x8048393:sub    esp, 0x8]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0
    ax = v3868
    cx = v3869
    dx = v3870
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = -v4071-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3883
    pf = -v4065-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3885
    af = -v4069-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3887
    zf = v4068 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v4067 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3890
    if = v3891
    df = v3892
    of = v4075 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x804839d:jne    0x80483cc
    ax = v3868
    cx = v3869
    dx = v3870
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = -v4071-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3883
    pf = -v4065-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3885
    af = -v4069-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3887
    zf = v4068 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v4067 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3890
    if = v3891
    df = v3892
    of = v4075 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]
    ax = v4175 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3869
    dx = v3870
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = -v4071-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3883
    pf = -v4065-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3885
    af = -v4069-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3887
    zf = v4068 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v4067 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3890
    if = v3891
    df = v3892
    of = v4075 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v4175 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3869
    dx = v4209 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = -v4071-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?1 = v3883
    pf = -v4065-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?3 = v3885
    af = -v4069-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3887
    zf = v4068 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    sf = v4067 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    tf = v3890
    if = v3891
    df = v3892
    of = v4075 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x80483a6:test   edx, edx
    ax = v4175 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3869
    dx = v4209 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3883
    pf = -v4258-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3885
    af = <top>
    ?5 = v3887
    zf = v4261 [from 0x80483a6:test   edx, edx]
    sf = v4260 [from 0x80483a6:test   edx, edx]
    tf = v3890
    if = v3891
    df = v3892
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x80483a8:je     0x80483c5
    ax = v4175 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3869
    dx = v4209 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3883
    pf = -v4258-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3885
    af = <top>
    ?5 = v3887
    zf = v4261 [from 0x80483a6:test   edx, edx]
    sf = v4260 [from 0x80483a6:test   edx, edx]
    tf = v3890
    if = v3891
    df = v3892
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x80483aa:lea    esi, [esi + 0x0]
    ax = v4175 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3869
    dx = v4209 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3883
    pf = -v4258-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3885
    af = <top>
    ?5 = v3887
    zf = v4261 [from 0x80483a6:test   edx, edx]
    sf = v4260 [from 0x80483a6:test   edx, edx]
    tf = v3890
    if = v3891
    df = v3892
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x80483b0:add    eax, 0x4
    ax = v4175+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3869
    dx = v4209 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = v4424 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3883
    pf = -v4419-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3885
    af = v4423 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3887
    zf = v4422 [from 0x80483b0:add    eax, 0x4]
    sf = v4421 [from 0x80483b0:add    eax, 0x4]
    tf = v3890
    if = v3891
    df = v3892
    of = v4427 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x4 [from 0x8048390:push   ebp]; value=v3873
    }
0x80483b3:mov    DWORD PTR ds:[0x80496f0], eax
    ax = v4175+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3869
    dx = v4209 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = v4424 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3883
    pf = -v4419-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3885
    af = v4423 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3887
    zf = v4422 [from 0x80483b0:add    eax, 0x4]
    sf = v4421 [from 0x80483b0:add    eax, 0x4]
    tf = v3890
    if = v3891
    df = v3892
    of = v4427 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x80496f0], eax]; value=v4175+0x4 [from 0x80483b0:add    eax, 0x4]
    }
0x80483b8:call   edx
    ax = v4175+0x4 [from 0x80483b0:add    eax, 0x4]
    cx = v3869
    dx = v4209 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3871
    sp = v3872-0x10 [from 0x80483b8:call   edx]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874 [from 0x80483aa:lea    esi, [esi + 0x0]]
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = v4424 [from 0x80483b0:add    eax, 0x4]
    ?1 = v3883
    pf = -v4419-0x1 [from 0x80483b0:add    eax, 0x4]
    ?3 = v3885
    af = v4423 [from 0x80483b0:add    eax, 0x4]
    ?5 = v3887
    zf = v4422 [from 0x80483b0:add    eax, 0x4]
    sf = v4421 [from 0x80483b0:add    eax, 0x4]
    tf = v3890
    if = v3891
    df = v3892
    of = v4427 [from 0x80483b0:add    eax, 0x4]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=4; addr=v3872-0x10 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
0x80483ba:mov    eax, DWORD PTR ds:[0x80496f0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c1:test   edx, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c3:jne    0x80483b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1
    ax = v4175 [from 0x804839f:mov    eax, DWORD PTR ds:[0x80496f0]]
    cx = v3869
    dx = v4209 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3871
    sp = v3872-0xc [from 0x8048393:sub    esp, 0x8]
    bp = v3872-0x4 [from 0x8048390:push   ebp]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3883
    pf = -v4258-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3885
    af = <top>
    ?5 = v3887
    zf = v4261 [from 0x80483a6:test   edx, edx]
    sf = v4260 [from 0x80483a6:test   edx, edx]
    tf = v3890
    if = v3891
    df = v3892
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x80496f4], 0x1]
    }
0x80483cc:leave  
    ax = v4141
    cx = v3869
    dx = v4143
    bx = v3871
    sp = v3872 [from 0x80483cc:leave  ]
    bp = v4669 [from 0x80483cc:leave  ]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = v4155
    ?1 = v3883
    pf = v4157
    ?3 = v3885
    af = -v4069-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3887
    zf = v4161
    sf = v4162
    tf = v3890
    if = v3891
    df = v3892
    of = v4166
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {}
0x80483cd:ret    
    ax = v4141
    cx = v3869
    dx = v4143
    bx = v3871
    sp = v3872+0x4 [from 0x80483cd:ret    ]
    bp = v4669 [from 0x80483cc:leave  ]
    si = v3874
    di = v3875
    es = v3876
    cs = v3877
    ss = v3878
    ds = v3879
    fs = v3880
    gs = v3881
    cf = v4155
    ?1 = v3883
    pf = v4157
    ?3 = v3885
    af = -v4069-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x80496f4], 0x0]
    ?5 = v3887
    zf = v4161
    sf = v4162
    tf = v3890
    if = v3891
    df = v3892
    of = v4166
    iopl0 = v3894
    iopl1 = v3895
    nt = v3896
    ?15 = v3897
    memory = {}
0x80483ce:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "frame_dummy"
==============================================
0x80483d0:push   ebp
    ax = v4831
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0x4 [from 0x80483d0:push   ebp]
    bp = v4836
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = v4845
    ?1 = v4846
    pf = v4847
    ?3 = v4848
    af = v4849
    ?5 = v4850
    zf = v4851
    sf = v4852
    tf = v4853
    if = v4854
    df = v4855
    of = v4856
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483d1:mov    ebp, esp
    ax = v4831
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0x4 [from 0x80483d0:push   ebp]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = v4845
    ?1 = v4846
    pf = v4847
    ?3 = v4848
    af = v4849
    ?5 = v4850
    zf = v4851
    sf = v4852
    tf = v4853
    if = v4854
    df = v4855
    of = v4856
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483d3:sub    esp, 0x8
    ax = v4831
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = -v4962-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?1 = v4846
    pf = -v4956-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?3 = v4848
    af = -v4960-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?5 = v4850
    zf = v4959 [from 0x80483d3:sub    esp, 0x8]
    sf = v4958 [from 0x80483d3:sub    esp, 0x8]
    tf = v4853
    if = v4854
    df = v4855
    of = v4966 [from 0x80483d3:sub    esp, 0x8]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]
    ax = v5001 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = -v4962-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?1 = v4846
    pf = -v4956-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?3 = v4848
    af = -v4960-0x1 [from 0x80483d3:sub    esp, 0x8]
    ?5 = v4850
    zf = v4959 [from 0x80483d3:sub    esp, 0x8]
    sf = v4958 [from 0x80483d3:sub    esp, 0x8]
    tf = v4853
    if = v4854
    df = v4855
    of = v4966 [from 0x80483d3:sub    esp, 0x8]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483db:test   eax, eax
    ax = v5001 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4846
    pf = -v5050-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4848
    af = <top>
    ?5 = v4850
    zf = v5053 [from 0x80483db:test   eax, eax]
    sf = v5052 [from 0x80483db:test   eax, eax]
    tf = v4853
    if = v4854
    df = v4855
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483dd:je     0x8048400
    ax = v5001 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x80495f8]]
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4846
    pf = -v5050-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4848
    af = <top>
    ?5 = v4850
    zf = v5053 [from 0x80483db:test   eax, eax]
    sf = v5052 [from 0x80483db:test   eax, eax]
    tf = v4853
    if = v4854
    df = v4855
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483df:mov    eax, 0x0
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4846
    pf = -v5050-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4848
    af = <top>
    ?5 = v4850
    zf = v5053 [from 0x80483db:test   eax, eax]
    sf = v5052 [from 0x80483db:test   eax, eax]
    tf = v4853
    if = v4854
    df = v4855
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4846
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4848
    af = <top>
    ?5 = v4850
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4853
    if = v4854
    df = v4855
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483e6:je     0x8048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x0]
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0xc [from 0x80483d3:sub    esp, 0x8]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4846
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4848
    af = <top>
    ?5 = v4850
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4853
    if = v4854
    df = v4855
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {
        size=4; addr=v4835-0x4 [from 0x80483d0:push   ebp]; value=v4836
    }
0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8]
    }
0x80483ef:call   0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x80495f8]
        size=4; addr=<top>; value=0x80483f4 [from 0x80483ef:call   0x0]
    }
0x80483f4:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483fa:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048400:mov    esp, ebp
    ax = v5121
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835-0x4 [from 0x80483d0:push   ebp]
    bp = v4835-0x4 [from 0x80483d0:push   ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4846
    pf = v5137
    ?3 = v4848
    af = <top>
    ?5 = v4850
    zf = v5141
    sf = v5142
    tf = v4853
    if = v4854
    df = v4855
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {}
0x8048402:pop    ebp
    ax = v5121
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835 [from 0x8048402:pop    ebp]
    bp = v5450 [from 0x8048402:pop    ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4846
    pf = v5137
    ?3 = v4848
    af = <top>
    ?5 = v4850
    zf = v5141
    sf = v5142
    tf = v4853
    if = v4854
    df = v4855
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {}
0x8048403:ret    
    ax = v5121
    cx = v4832
    dx = v4833
    bx = v4834
    sp = v4835+0x4 [from 0x8048403:ret    ]
    bp = v5450 [from 0x8048402:pop    ebp]
    si = v4837
    di = v4838
    es = v4839
    cs = v4840
    ss = v4841
    ds = v4842
    fs = v4843
    gs = v4844
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4846
    pf = v5137
    ?3 = v4848
    af = <top>
    ?5 = v4850
    zf = v5141
    sf = v5142
    tf = v4853
    if = v4854
    df = v4855
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4857
    iopl1 = v4858
    nt = v4859
    ?15 = v4860
    memory = {}
==============================================
Constant propagation in function "0x8048404"
==============================================
0x8048404:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x8048405:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x8048406:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x8048407:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x8048408:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x8048409:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x804840a:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x804840b:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x804840c:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x804840d:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x804840e:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
0x804840f:nop    
    ax = v5550
    cx = v5551
    dx = v5552
    bx = v5553
    sp = v5554
    bp = v5555
    si = v5556
    di = v5557
    es = v5558
    cs = v5559
    ss = v5560
    ds = v5561
    fs = v5562
    gs = v5563
    cf = v5564
    ?1 = v5565
    pf = v5566
    ?3 = v5567
    af = v5568
    ?5 = v5569
    zf = v5570
    sf = v5571
    tf = v5572
    if = v5573
    df = v5574
    of = v5575
    iopl0 = v5576
    iopl1 = v5577
    nt = v5578
    ?15 = v5579
    memory = {}
==============================================
Constant propagation in function "main"
==============================================
0x8048410:push   ebp
    ax = v6024
    cx = v6025
    dx = v6026
    bx = v6027
    sp = v6028-0x4 [from 0x8048410:push   ebp]
    bp = v6029
    si = v6030
    di = v6031
    es = v6032
    cs = v6033
    ss = v6034
    ds = v6035
    fs = v6036
    gs = v6037
    cf = v6038
    ?1 = v6039
    pf = v6040
    ?3 = v6041
    af = v6042
    ?5 = v6043
    zf = v6044
    sf = v6045
    tf = v6046
    if = v6047
    df = v6048
    of = v6049
    iopl0 = v6050
    iopl1 = v6051
    nt = v6052
    ?15 = v6053
    memory = {
        size=4; addr=v6028-0x4 [from 0x8048410:push   ebp]; value=v6029
    }
0x8048411:mov    edx, 0x8048480
    ax = v6024
    cx = v6025
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6027
    sp = v6028-0x4 [from 0x8048410:push   ebp]
    bp = v6029
    si = v6030
    di = v6031
    es = v6032
    cs = v6033
    ss = v6034
    ds = v6035
    fs = v6036
    gs = v6037
    cf = v6038
    ?1 = v6039
    pf = v6040
    ?3 = v6041
    af = v6042
    ?5 = v6043
    zf = v6044
    sf = v6045
    tf = v6046
    if = v6047
    df = v6048
    of = v6049
    iopl0 = v6050
    iopl1 = v6051
    nt = v6052
    ?15 = v6053
    memory = {
        size=4; addr=v6028-0x4 [from 0x8048410:push   ebp]; value=v6029
    }
0x8048416:mov    ebp, esp
    ax = v6024
    cx = v6025
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6027
    sp = v6028-0x4 [from 0x8048410:push   ebp]
    bp = v6028-0x4 [from 0x8048410:push   ebp]
    si = v6030
    di = v6031
    es = v6032
    cs = v6033
    ss = v6034
    ds = v6035
    fs = v6036
    gs = v6037
    cf = v6038
    ?1 = v6039
    pf = v6040
    ?3 = v6041
    af = v6042
    ?5 = v6043
    zf = v6044
    sf = v6045
    tf = v6046
    if = v6047
    df = v6048
    of = v6049
    iopl0 = v6050
    iopl1 = v6051
    nt = v6052
    ?15 = v6053
    memory = {
        size=4; addr=v6028-0x4 [from 0x8048410:push   ebp]; value=v6029
    }
0x8048418:sub    esp, 0x8
    ax = v6024
    cx = v6025
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6027
    sp = v6028-0xc [from 0x8048418:sub    esp, 0x8]
    bp = v6028-0x4 [from 0x8048410:push   ebp]
    si = v6030
    di = v6031
    es = v6032
    cs = v6033
    ss = v6034
    ds = v6035
    fs = v6036
    gs = v6037
    cf = -v6188-0x1 [from 0x8048418:sub    esp, 0x8]
    ?1 = v6039
    pf = -v6182-0x1 [from 0x8048418:sub    esp, 0x8]
    ?3 = v6041
    af = -v6186-0x1 [from 0x8048418:sub    esp, 0x8]
    ?5 = v6043
    zf = v6185 [from 0x8048418:sub    esp, 0x8]
    sf = v6184 [from 0x8048418:sub    esp, 0x8]
    tf = v6046
    if = v6047
    df = v6048
    of = v6192 [from 0x8048418:sub    esp, 0x8]
    iopl0 = v6050
    iopl1 = v6051
    nt = v6052
    ?15 = v6053
    memory = {
        size=4; addr=v6028-0x4 [from 0x8048410:push   ebp]; value=v6029
    }
0x804841b:and    esp, 0xf0
    ax = v6024
    cx = v6025
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6027
    sp = v6226 [from 0x804841b:and    esp, 0xf0]
    bp = v6028-0x4 [from 0x8048410:push   ebp]
    si = v6030
    di = v6031
    es = v6032
    cs = v6033
    ss = v6034
    ds = v6035
    fs = v6036
    gs = v6037
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v6039
    pf = -v6242-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v6041
    af = <top>
    ?5 = v6043
    zf = v6245 [from 0x804841b:and    esp, 0xf0]
    sf = v6244 [from 0x804841b:and    esp, 0xf0]
    tf = v6046
    if = v6047
    df = v6048
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v6050
    iopl1 = v6051
    nt = v6052
    ?15 = v6053
    memory = {
        size=4; addr=v6028-0x4 [from 0x8048410:push   ebp]; value=v6029
    }
0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx
    ax = v6024
    cx = v6025
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6027
    sp = v6226 [from 0x804841b:and    esp, 0xf0]
    bp = v6028-0x4 [from 0x8048410:push   ebp]
    si = v6030
    di = v6031
    es = v6032
    cs = v6033
    ss = v6034
    ds = v6035
    fs = v6036
    gs = v6037
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v6039
    pf = -v6242-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v6041
    af = <top>
    ?5 = v6043
    zf = v6245 [from 0x804841b:and    esp, 0xf0]
    sf = v6244 [from 0x804841b:and    esp, 0xf0]
    tf = v6046
    if = v6047
    df = v6048
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v6050
    iopl1 = v6051
    nt = v6052
    ?15 = v6053
    memory = {
        size=4; addr=v6226+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    }
0x8048422:mov    DWORD PTR ss:[esp], 0xa
    ax = v6024
    cx = v6025
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6027
    sp = v6226 [from 0x804841b:and    esp, 0xf0]
    bp = v6028-0x4 [from 0x8048410:push   ebp]
    si = v6030
    di = v6031
    es = v6032
    cs = v6033
    ss = v6034
    ds = v6035
    fs = v6036
    gs = v6037
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v6039
    pf = -v6242-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v6041
    af = <top>
    ?5 = v6043
    zf = v6245 [from 0x804841b:and    esp, 0xf0]
    sf = v6244 [from 0x804841b:and    esp, 0xf0]
    tf = v6046
    if = v6047
    df = v6048
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v6050
    iopl1 = v6051
    nt = v6052
    ?15 = v6053
    memory = {
        size=4; addr=v6226 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0xa]
        size=4; addr=v6226+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    }
0x8048429:call   0x80482f0
    ax = v6024
    cx = v6025
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x8048480]
    bx = v6027
    sp = v6226-0x4 [from 0x8048429:call   0x80482f0]
    bp = v6028-0x4 [from 0x8048410:push   ebp]
    si = v6030
    di = v6031
    es = v6032
    cs = v6033
    ss = v6034
    ds = v6035
    fs = v6036
    gs = v6037
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = v6039
    pf = -v6242-0x1 [from 0x804841b:and    esp, 0xf0]
    ?3 = v6041
    af = <top>
    ?5 = v6043
    zf = v6245 [from 0x804841b:and    esp, 0xf0]
    sf = v6244 [from 0x804841b:and    esp, 0xf0]
    tf = v6046
    if = v6047
    df = v6048
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = v6050
    iopl1 = v6051
    nt = v6052
    ?15 = v6053
    memory = {
        size=4; addr=v6226 [from 0x804841b:and    esp, 0xf0]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0xa]
        size=4; addr=v6226+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x4], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x8048480]
        size=4; addr=v6226-0x4 [from 0x8048429:call   0x80482f0]; value=0x804842e [from 0x8048429:call   0x80482f0]
    }
0x804842e:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048430:xor    eax, eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048432:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048433:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048434:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804843a:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "bar"
==============================================
0x8048440:push   ebp
    ax = v6737
    cx = v6738
    dx = v6739
    bx = v6740
    sp = v6741-0x4 [from 0x8048440:push   ebp]
    bp = v6742
    si = v6743
    di = v6744
    es = v6745
    cs = v6746
    ss = v6747
    ds = v6748
    fs = v6749
    gs = v6750
    cf = v6751
    ?1 = v6752
    pf = v6753
    ?3 = v6754
    af = v6755
    ?5 = v6756
    zf = v6757
    sf = v6758
    tf = v6759
    if = v6760
    df = v6761
    of = v6762
    iopl0 = v6763
    iopl1 = v6764
    nt = v6765
    ?15 = v6766
    memory = {
        size=4; addr=v6741-0x4 [from 0x8048440:push   ebp]; value=v6742
    }
0x8048441:mov    ebp, esp
    ax = v6737
    cx = v6738
    dx = v6739
    bx = v6740
    sp = v6741-0x4 [from 0x8048440:push   ebp]
    bp = v6741-0x4 [from 0x8048440:push   ebp]
    si = v6743
    di = v6744
    es = v6745
    cs = v6746
    ss = v6747
    ds = v6748
    fs = v6749
    gs = v6750
    cf = v6751
    ?1 = v6752
    pf = v6753
    ?3 = v6754
    af = v6755
    ?5 = v6756
    zf = v6757
    sf = v6758
    tf = v6759
    if = v6760
    df = v6761
    of = v6762
    iopl0 = v6763
    iopl1 = v6764
    nt = v6765
    ?15 = v6766
    memory = {
        size=4; addr=v6741-0x4 [from 0x8048440:push   ebp]; value=v6742
    }
0x8048443:sub    esp, 0x8
    ax = v6737
    cx = v6738
    dx = v6739
    bx = v6740
    sp = v6741-0xc [from 0x8048443:sub    esp, 0x8]
    bp = v6741-0x4 [from 0x8048440:push   ebp]
    si = v6743
    di = v6744
    es = v6745
    cs = v6746
    ss = v6747
    ds = v6748
    fs = v6749
    gs = v6750
    cf = -v6868-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6752
    pf = -v6862-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6754
    af = -v6866-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6756
    zf = v6865 [from 0x8048443:sub    esp, 0x8]
    sf = v6864 [from 0x8048443:sub    esp, 0x8]
    tf = v6759
    if = v6760
    df = v6761
    of = v6872 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6763
    iopl1 = v6764
    nt = v6765
    ?15 = v6766
    memory = {
        size=4; addr=v6741-0x4 [from 0x8048440:push   ebp]; value=v6742
    }
0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v6737
    cx = v6738
    dx = v6739
    bx = v6740
    sp = v6741-0xc [from 0x8048443:sub    esp, 0x8]
    bp = v6741-0x4 [from 0x8048440:push   ebp]
    si = v6743
    di = v6744
    es = v6745
    cs = v6746
    ss = v6747
    ds = v6748
    fs = v6749
    gs = v6750
    cf = -v6868-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6752
    pf = -v6862-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6754
    af = -v6866-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6756
    zf = v6865 [from 0x8048443:sub    esp, 0x8]
    sf = v6864 [from 0x8048443:sub    esp, 0x8]
    tf = v6759
    if = v6760
    df = v6761
    of = v6872 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6763
    iopl1 = v6764
    nt = v6765
    ?15 = v6766
    memory = {
        size=4; addr=v6741-0xc [from 0x8048443:sub    esp, 0x8]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v6741-0x4 [from 0x8048440:push   ebp]; value=v6742
    }
0x804844d:call   0x8048300
    ax = v6737
    cx = v6738
    dx = v6739
    bx = v6740
    sp = v6741-0x10 [from 0x804844d:call   0x8048300]
    bp = v6741-0x4 [from 0x8048440:push   ebp]
    si = v6743
    di = v6744
    es = v6745
    cs = v6746
    ss = v6747
    ds = v6748
    fs = v6749
    gs = v6750
    cf = -v6868-0x1 [from 0x8048443:sub    esp, 0x8]
    ?1 = v6752
    pf = -v6862-0x1 [from 0x8048443:sub    esp, 0x8]
    ?3 = v6754
    af = -v6866-0x1 [from 0x8048443:sub    esp, 0x8]
    ?5 = v6756
    zf = v6865 [from 0x8048443:sub    esp, 0x8]
    sf = v6864 [from 0x8048443:sub    esp, 0x8]
    tf = v6759
    if = v6760
    df = v6761
    of = v6872 [from 0x8048443:sub    esp, 0x8]
    iopl0 = v6763
    iopl1 = v6764
    nt = v6765
    ?15 = v6766
    memory = {
        size=4; addr=v6741-0x10 [from 0x804844d:call   0x8048300]; value=0x8048452 [from 0x804844d:call   0x8048300]
        size=4; addr=v6741-0xc [from 0x8048443:sub    esp, 0x8]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v6741-0x4 [from 0x8048440:push   ebp]; value=v6742
    }
0x8048452:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048454:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048455:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048456:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048459:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "foo"
==============================================
0x8048460:push   ebp
    ax = v7270
    cx = v7271
    dx = v7272
    bx = v7273
    sp = v7274-0x4 [from 0x8048460:push   ebp]
    bp = v7275
    si = v7276
    di = v7277
    es = v7278
    cs = v7279
    ss = v7280
    ds = v7281
    fs = v7282
    gs = v7283
    cf = v7284
    ?1 = v7285
    pf = v7286
    ?3 = v7287
    af = v7288
    ?5 = v7289
    zf = v7290
    sf = v7291
    tf = v7292
    if = v7293
    df = v7294
    of = v7295
    iopl0 = v7296
    iopl1 = v7297
    nt = v7298
    ?15 = v7299
    memory = {
        size=4; addr=v7274-0x4 [from 0x8048460:push   ebp]; value=v7275
    }
0x8048461:mov    ebp, esp
    ax = v7270
    cx = v7271
    dx = v7272
    bx = v7273
    sp = v7274-0x4 [from 0x8048460:push   ebp]
    bp = v7274-0x4 [from 0x8048460:push   ebp]
    si = v7276
    di = v7277
    es = v7278
    cs = v7279
    ss = v7280
    ds = v7281
    fs = v7282
    gs = v7283
    cf = v7284
    ?1 = v7285
    pf = v7286
    ?3 = v7287
    af = v7288
    ?5 = v7289
    zf = v7290
    sf = v7291
    tf = v7292
    if = v7293
    df = v7294
    of = v7295
    iopl0 = v7296
    iopl1 = v7297
    nt = v7298
    ?15 = v7299
    memory = {
        size=4; addr=v7274-0x4 [from 0x8048460:push   ebp]; value=v7275
    }
0x8048463:sub    esp, 0x8
    ax = v7270
    cx = v7271
    dx = v7272
    bx = v7273
    sp = v7274-0xc [from 0x8048463:sub    esp, 0x8]
    bp = v7274-0x4 [from 0x8048460:push   ebp]
    si = v7276
    di = v7277
    es = v7278
    cs = v7279
    ss = v7280
    ds = v7281
    fs = v7282
    gs = v7283
    cf = -v7401-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7285
    pf = -v7395-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7287
    af = -v7399-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7289
    zf = v7398 [from 0x8048463:sub    esp, 0x8]
    sf = v7397 [from 0x8048463:sub    esp, 0x8]
    tf = v7292
    if = v7293
    df = v7294
    of = v7405 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7296
    iopl1 = v7297
    nt = v7298
    ?15 = v7299
    memory = {
        size=4; addr=v7274-0x4 [from 0x8048460:push   ebp]; value=v7275
    }
0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v7270
    cx = v7271
    dx = v7272
    bx = v7273
    sp = v7274-0xc [from 0x8048463:sub    esp, 0x8]
    bp = v7274-0x4 [from 0x8048460:push   ebp]
    si = v7276
    di = v7277
    es = v7278
    cs = v7279
    ss = v7280
    ds = v7281
    fs = v7282
    gs = v7283
    cf = -v7401-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7285
    pf = -v7395-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7287
    af = -v7399-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7289
    zf = v7398 [from 0x8048463:sub    esp, 0x8]
    sf = v7397 [from 0x8048463:sub    esp, 0x8]
    tf = v7292
    if = v7293
    df = v7294
    of = v7405 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7296
    iopl1 = v7297
    nt = v7298
    ?15 = v7299
    memory = {
        size=4; addr=v7274-0xc [from 0x8048463:sub    esp, 0x8]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v7274-0x4 [from 0x8048460:push   ebp]; value=v7275
    }
0x804846d:call   0x8048300
    ax = v7270
    cx = v7271
    dx = v7272
    bx = v7273
    sp = v7274-0x10 [from 0x804846d:call   0x8048300]
    bp = v7274-0x4 [from 0x8048460:push   ebp]
    si = v7276
    di = v7277
    es = v7278
    cs = v7279
    ss = v7280
    ds = v7281
    fs = v7282
    gs = v7283
    cf = -v7401-0x1 [from 0x8048463:sub    esp, 0x8]
    ?1 = v7285
    pf = -v7395-0x1 [from 0x8048463:sub    esp, 0x8]
    ?3 = v7287
    af = -v7399-0x1 [from 0x8048463:sub    esp, 0x8]
    ?5 = v7289
    zf = v7398 [from 0x8048463:sub    esp, 0x8]
    sf = v7397 [from 0x8048463:sub    esp, 0x8]
    tf = v7292
    if = v7293
    df = v7294
    of = v7405 [from 0x8048463:sub    esp, 0x8]
    iopl0 = v7296
    iopl1 = v7297
    nt = v7298
    ?15 = v7299
    memory = {
        size=4; addr=v7274-0x10 [from 0x804846d:call   0x8048300]; value=0x8048472 [from 0x804846d:call   0x8048300]
        size=4; addr=v7274-0xc [from 0x8048463:sub    esp, 0x8]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x80485d4]
        size=4; addr=v7274-0x4 [from 0x8048460:push   ebp]; value=v7275
    }
0x8048472:mov    DWORD PTR ss:[esp], 0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x0]
    }
0x8048479:call   0x8048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x0]
        size=4; addr=<top>; value=0x804847e [from 0x8048479:call   0x8048320]
    }
0x804847e:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "handler"
==============================================
0x8048480:push   ebp
    ax = v7733
    cx = v7734
    dx = v7735
    bx = v7736
    sp = v7737-0x4 [from 0x8048480:push   ebp]
    bp = v7738
    si = v7739
    di = v7740
    es = v7741
    cs = v7742
    ss = v7743
    ds = v7744
    fs = v7745
    gs = v7746
    cf = v7747
    ?1 = v7748
    pf = v7749
    ?3 = v7750
    af = v7751
    ?5 = v7752
    zf = v7753
    sf = v7754
    tf = v7755
    if = v7756
    df = v7757
    of = v7758
    iopl0 = v7759
    iopl1 = v7760
    nt = v7761
    ?15 = v7762
    memory = {
        size=4; addr=v7737-0x4 [from 0x8048480:push   ebp]; value=v7738
    }
0x8048481:mov    ebp, esp
    ax = v7733
    cx = v7734
    dx = v7735
    bx = v7736
    sp = v7737-0x4 [from 0x8048480:push   ebp]
    bp = v7737-0x4 [from 0x8048480:push   ebp]
    si = v7739
    di = v7740
    es = v7741
    cs = v7742
    ss = v7743
    ds = v7744
    fs = v7745
    gs = v7746
    cf = v7747
    ?1 = v7748
    pf = v7749
    ?3 = v7750
    af = v7751
    ?5 = v7752
    zf = v7753
    sf = v7754
    tf = v7755
    if = v7756
    df = v7757
    of = v7758
    iopl0 = v7759
    iopl1 = v7760
    nt = v7761
    ?15 = v7762
    memory = {
        size=4; addr=v7737-0x4 [from 0x8048480:push   ebp]; value=v7738
    }
0x8048483:sub    esp, 0x8
    ax = v7733
    cx = v7734
    dx = v7735
    bx = v7736
    sp = v7737-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7737-0x4 [from 0x8048480:push   ebp]
    si = v7739
    di = v7740
    es = v7741
    cs = v7742
    ss = v7743
    ds = v7744
    fs = v7745
    gs = v7746
    cf = -v7864-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7748
    pf = -v7858-0x1 [from 0x8048483:sub    esp, 0x8]
    ?3 = v7750
    af = -v7862-0x1 [from 0x8048483:sub    esp, 0x8]
    ?5 = v7752
    zf = v7861 [from 0x8048483:sub    esp, 0x8]
    sf = v7860 [from 0x8048483:sub    esp, 0x8]
    tf = v7755
    if = v7756
    df = v7757
    of = v7868 [from 0x8048483:sub    esp, 0x8]
    iopl0 = v7759
    iopl1 = v7760
    nt = v7761
    ?15 = v7762
    memory = {
        size=4; addr=v7737-0x4 [from 0x8048480:push   ebp]; value=v7738
    }
0x8048486:inc    DWORD PTR ds:[0x80496f8]
    ax = v7733
    cx = v7734
    dx = v7735
    bx = v7736
    sp = v7737-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7737-0x4 [from 0x8048480:push   ebp]
    si = v7739
    di = v7740
    es = v7741
    cs = v7742
    ss = v7743
    ds = v7744
    fs = v7745
    gs = v7746
    cf = -v7864-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7748
    pf = -v7928-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7750
    af = v7932 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7752
    zf = v7931 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v7930 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7755
    if = v7756
    df = v7757
    of = v7935 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7759
    iopl1 = v7760
    nt = v7761
    ?15 = v7762
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]; value=v7903+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    }
0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4
    ax = v7733
    cx = v7734
    dx = v7735
    bx = v7736
    sp = v7737-0xc [from 0x8048483:sub    esp, 0x8]
    bp = v7737-0x4 [from 0x8048480:push   ebp]
    si = v7739
    di = v7740
    es = v7741
    cs = v7742
    ss = v7743
    ds = v7744
    fs = v7745
    gs = v7746
    cf = -v7864-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7748
    pf = -v7928-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7750
    af = v7932 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7752
    zf = v7931 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v7930 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7755
    if = v7756
    df = v7757
    of = v7935 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7759
    iopl1 = v7760
    nt = v7761
    ?15 = v7762
    memory = {
        size=4; addr=v7737-0xc [from 0x8048483:sub    esp, 0x8]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4]
    }
0x8048493:call   0x8048300
    ax = v7733
    cx = v7734
    dx = v7735
    bx = v7736
    sp = v7737-0x10 [from 0x8048493:call   0x8048300]
    bp = v7737-0x4 [from 0x8048480:push   ebp]
    si = v7739
    di = v7740
    es = v7741
    cs = v7742
    ss = v7743
    ds = v7744
    fs = v7745
    gs = v7746
    cf = -v7864-0x1 [from 0x8048483:sub    esp, 0x8]
    ?1 = v7748
    pf = -v7928-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?3 = v7750
    af = v7932 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    ?5 = v7752
    zf = v7931 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    sf = v7930 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    tf = v7755
    if = v7756
    df = v7757
    of = v7935 [from 0x8048486:inc    DWORD PTR ds:[0x80496f8]]
    iopl0 = v7759
    iopl1 = v7760
    nt = v7761
    ?15 = v7762
    memory = {
        size=4; addr=v7737-0x10 [from 0x8048493:call   0x8048300]; value=0x8048498 [from 0x8048493:call   0x8048300]
        size=4; addr=v7737-0xc [from 0x8048483:sub    esp, 0x8]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x80485d4]
    }
0x8048498:mov    DWORD PTR ss:[esp], 0x0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x0]
    }
0x804849f:call   0x8048320
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x0]
        size=4; addr=<top>; value=0x80484a4 [from 0x804849f:call   0x8048320]
    }
==============================================
Constant propagation in function "0x80484a4"
==============================================
0x80484a4:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484a5:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484a6:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484a7:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484a8:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484a9:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484aa:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484ab:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484ac:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484ad:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484ae:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
0x80484af:nop    
    ax = v8204
    cx = v8205
    dx = v8206
    bx = v8207
    sp = v8208
    bp = v8209
    si = v8210
    di = v8211
    es = v8212
    cs = v8213
    ss = v8214
    ds = v8215
    fs = v8216
    gs = v8217
    cf = v8218
    ?1 = v8219
    pf = v8220
    ?3 = v8221
    af = v8222
    ?5 = v8223
    zf = v8224
    sf = v8225
    tf = v8226
    if = v8227
    df = v8228
    of = v8229
    iopl0 = v8230
    iopl1 = v8231
    nt = v8232
    ?15 = v8233
    memory = {}
==============================================
Constant propagation in function "__libc_csu_init"
==============================================
0x80484b0:push   ebp
    ax = v8678
    cx = v8679
    dx = v8680
    bx = v8681
    sp = v8682-0x4 [from 0x80484b0:push   ebp]
    bp = v8683
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = v8692
    ?1 = v8693
    pf = v8694
    ?3 = v8695
    af = v8696
    ?5 = v8697
    zf = v8698
    sf = v8699
    tf = v8700
    if = v8701
    df = v8702
    of = v8703
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484b1:mov    ebp, esp
    ax = v8678
    cx = v8679
    dx = v8680
    bx = v8681
    sp = v8682-0x4 [from 0x80484b0:push   ebp]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = v8692
    ?1 = v8693
    pf = v8694
    ?3 = v8695
    af = v8696
    ?5 = v8697
    zf = v8698
    sf = v8699
    tf = v8700
    if = v8701
    df = v8702
    of = v8703
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484b3:push   edi
    ax = v8678
    cx = v8679
    dx = v8680
    bx = v8681
    sp = v8682-0x8 [from 0x80484b3:push   edi]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = v8692
    ?1 = v8693
    pf = v8694
    ?3 = v8695
    af = v8696
    ?5 = v8697
    zf = v8698
    sf = v8699
    tf = v8700
    if = v8701
    df = v8702
    of = v8703
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x8 [from 0x80484b3:push   edi]; value=v8685
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484b4:push   esi
    ax = v8678
    cx = v8679
    dx = v8680
    bx = v8681
    sp = v8682-0xc [from 0x80484b4:push   esi]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = v8692
    ?1 = v8693
    pf = v8694
    ?3 = v8695
    af = v8696
    ?5 = v8697
    zf = v8698
    sf = v8699
    tf = v8700
    if = v8701
    df = v8702
    of = v8703
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0xc [from 0x80484b4:push   esi]; value=v8684
        size=4; addr=v8682-0x8 [from 0x80484b3:push   edi]; value=v8685
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484b5:push   ebx
    ax = v8678
    cx = v8679
    dx = v8680
    bx = v8681
    sp = v8682-0x10 [from 0x80484b5:push   ebx]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = v8692
    ?1 = v8693
    pf = v8694
    ?3 = v8695
    af = v8696
    ?5 = v8697
    zf = v8698
    sf = v8699
    tf = v8700
    if = v8701
    df = v8702
    of = v8703
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x10 [from 0x80484b5:push   ebx]; value=v8681
        size=4; addr=v8682-0xc [from 0x80484b4:push   esi]; value=v8684
        size=4; addr=v8682-0x8 [from 0x80484b3:push   edi]; value=v8685
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484b6:sub    esp, 0xc
    ax = v8678
    cx = v8679
    dx = v8680
    bx = v8681
    sp = v8682-0x1c [from 0x80484b6:sub    esp, 0xc]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = -v8917-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8693
    pf = -v8911-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8695
    af = -v8915-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8697
    zf = v8914 [from 0x80484b6:sub    esp, 0xc]
    sf = v8913 [from 0x80484b6:sub    esp, 0xc]
    tf = v8700
    if = v8701
    df = v8702
    of = v8921 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x10 [from 0x80484b5:push   ebx]; value=v8681
        size=4; addr=v8682-0xc [from 0x80484b4:push   esi]; value=v8684
        size=4; addr=v8682-0x8 [from 0x80484b3:push   edi]; value=v8685
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484b9:call   0x80484be
    ax = v8678
    cx = v8679
    dx = v8680
    bx = v8681
    sp = v8682-0x20 [from 0x80484b9:call   0x80484be]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = -v8917-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8693
    pf = -v8911-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8695
    af = -v8915-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8697
    zf = v8914 [from 0x80484b6:sub    esp, 0xc]
    sf = v8913 [from 0x80484b6:sub    esp, 0xc]
    tf = v8700
    if = v8701
    df = v8702
    of = v8921 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8682-0x10 [from 0x80484b5:push   ebx]; value=v8681
        size=4; addr=v8682-0xc [from 0x80484b4:push   esi]; value=v8684
        size=4; addr=v8682-0x8 [from 0x80484b3:push   edi]; value=v8685
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484be:pop    ebx
    ax = v8678
    cx = v8679
    dx = v8680
    bx = 0x80484be [from 0x80484b9:call   0x80484be]
    sp = v8682-0x1c [from 0x80484be:pop    ebx]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = -v8917-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?1 = v8693
    pf = -v8911-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?3 = v8695
    af = -v8915-0x1 [from 0x80484b6:sub    esp, 0xc]
    ?5 = v8697
    zf = v8914 [from 0x80484b6:sub    esp, 0xc]
    sf = v8913 [from 0x80484b6:sub    esp, 0xc]
    tf = v8700
    if = v8701
    df = v8702
    of = v8921 [from 0x80484b6:sub    esp, 0xc]
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8682-0x10 [from 0x80484b5:push   ebx]; value=v8681
        size=4; addr=v8682-0xc [from 0x80484b4:push   esi]; value=v8684
        size=4; addr=v8682-0x8 [from 0x80484b3:push   edi]; value=v8685
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484bf:add    ebx, 0x120a
    ax = v8678
    cx = v8679
    dx = v8680
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x120a]
    sp = v8682-0x1c [from 0x80484be:pop    ebx]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?1 = v8693
    pf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?3 = v8695
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x120a]
    ?5 = v8697
    zf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    tf = v8700
    if = v8701
    df = v8702
    of = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x20 [from 0x80484b9:call   0x80484be]; value=0x80484be [from 0x80484b9:call   0x80484be]
        size=4; addr=v8682-0x10 [from 0x80484b5:push   ebx]; value=v8681
        size=4; addr=v8682-0xc [from 0x80484b4:push   esi]; value=v8684
        size=4; addr=v8682-0x8 [from 0x80484b3:push   edi]; value=v8685
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484c5:call   0x80482c8
    ax = v8678
    cx = v8679
    dx = v8680
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x120a]
    sp = v8682-0x20 [from 0x80484c5:call   0x80482c8]
    bp = v8682-0x4 [from 0x80484b0:push   ebp]
    si = v8684
    di = v8685
    es = v8686
    cs = v8687
    ss = v8688
    ds = v8689
    fs = v8690
    gs = v8691
    cf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?1 = v8693
    pf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    ?3 = v8695
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x120a]
    ?5 = v8697
    zf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    tf = v8700
    if = v8701
    df = v8702
    of = 0x0 [from 0x80484bf:add    ebx, 0x120a]
    iopl0 = v8704
    iopl1 = v8705
    nt = v8706
    ?15 = v8707
    memory = {
        size=4; addr=v8682-0x20 [from 0x80484c5:call   0x80482c8]; value=0x80484ca [from 0x80484c5:call   0x80482c8]
        size=4; addr=v8682-0x10 [from 0x80484b5:push   ebx]; value=v8681
        size=4; addr=v8682-0xc [from 0x80484b4:push   esi]; value=v8684
        size=4; addr=v8682-0x8 [from 0x80484b3:push   edi]; value=v8685
        size=4; addr=v8682-0x4 [from 0x80484b0:push   ebp]; value=v8683
    }
0x80484ca:lea    eax, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d0:lea    edx, [ebx + 0xffffff20]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d6:sub    eax, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484d8:sar    eax, 0x2
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484de:jne    0x80484f0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484d8:sar    eax, 0x2]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e0:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e3:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9502 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e4:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9502 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v9538 [from 0x80484e4:pop    esi]
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e5:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9502 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = <top>
    si = v9538 [from 0x80484e4:pop    esi]
    di = v9574 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e6:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9502 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v9610 [from 0x80484e6:pop    ebp]
    si = v9538 [from 0x80484e4:pop    esi]
    di = v9574 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e7:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = v9502 [from 0x80484e3:pop    ebx]
    sp = <top>
    bp = v9610 [from 0x80484e6:pop    ebp]
    si = v9538 [from 0x80484e4:pop    esi]
    di = v9574 [from 0x80484e5:pop    edi]
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x80484e8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e9:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f0:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f2:mov    esi, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f4:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484fa:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048500:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
0x8048502:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048503:add    esi, 0x4
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048509:jb     0x8048500
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850b:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850e:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804850f:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048510:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048511:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048512:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048513:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048519:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_fini"
==============================================
0x8048520:push   ebp
    ax = v10579
    cx = v10580
    dx = v10581
    bx = v10582
    sp = v10583-0x4 [from 0x8048520:push   ebp]
    bp = v10584
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = v10593
    ?1 = v10594
    pf = v10595
    ?3 = v10596
    af = v10597
    ?5 = v10598
    zf = v10599
    sf = v10600
    tf = v10601
    if = v10602
    df = v10603
    of = v10604
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048521:mov    ebp, esp
    ax = v10579
    cx = v10580
    dx = v10581
    bx = v10582
    sp = v10583-0x4 [from 0x8048520:push   ebp]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = v10593
    ?1 = v10594
    pf = v10595
    ?3 = v10596
    af = v10597
    ?5 = v10598
    zf = v10599
    sf = v10600
    tf = v10601
    if = v10602
    df = v10603
    of = v10604
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048523:push   edi
    ax = v10579
    cx = v10580
    dx = v10581
    bx = v10582
    sp = v10583-0x8 [from 0x8048523:push   edi]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = v10593
    ?1 = v10594
    pf = v10595
    ?3 = v10596
    af = v10597
    ?5 = v10598
    zf = v10599
    sf = v10600
    tf = v10601
    if = v10602
    df = v10603
    of = v10604
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048524:push   esi
    ax = v10579
    cx = v10580
    dx = v10581
    bx = v10582
    sp = v10583-0xc [from 0x8048524:push   esi]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = v10593
    ?1 = v10594
    pf = v10595
    ?3 = v10596
    af = v10597
    ?5 = v10598
    zf = v10599
    sf = v10600
    tf = v10601
    if = v10602
    df = v10603
    of = v10604
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048525:push   ebx
    ax = v10579
    cx = v10580
    dx = v10581
    bx = v10582
    sp = v10583-0x10 [from 0x8048525:push   ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = v10593
    ?1 = v10594
    pf = v10595
    ?3 = v10596
    af = v10597
    ?5 = v10598
    zf = v10599
    sf = v10600
    tf = v10601
    if = v10602
    df = v10603
    of = v10604
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048526:sub    esp, 0xc
    ax = v10579
    cx = v10580
    dx = v10581
    bx = v10582
    sp = v10583-0x1c [from 0x8048526:sub    esp, 0xc]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = -v10818-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10594
    pf = -v10812-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10596
    af = -v10816-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10598
    zf = v10815 [from 0x8048526:sub    esp, 0xc]
    sf = v10814 [from 0x8048526:sub    esp, 0xc]
    tf = v10601
    if = v10602
    df = v10603
    of = v10822 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048529:call   0x804852e
    ax = v10579
    cx = v10580
    dx = v10581
    bx = v10582
    sp = v10583-0x20 [from 0x8048529:call   0x804852e]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = -v10818-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10594
    pf = -v10812-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10596
    af = -v10816-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10598
    zf = v10815 [from 0x8048526:sub    esp, 0xc]
    sf = v10814 [from 0x8048526:sub    esp, 0xc]
    tf = v10601
    if = v10602
    df = v10603
    of = v10822 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x804852e:pop    ebx
    ax = v10579
    cx = v10580
    dx = v10581
    bx = 0x804852e [from 0x8048529:call   0x804852e]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = -v10818-0x1 [from 0x8048526:sub    esp, 0xc]
    ?1 = v10594
    pf = -v10812-0x1 [from 0x8048526:sub    esp, 0xc]
    ?3 = v10596
    af = -v10816-0x1 [from 0x8048526:sub    esp, 0xc]
    ?5 = v10598
    zf = v10815 [from 0x8048526:sub    esp, 0xc]
    sf = v10814 [from 0x8048526:sub    esp, 0xc]
    tf = v10601
    if = v10602
    df = v10603
    of = v10822 [from 0x8048526:sub    esp, 0xc]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x804852f:add    ebx, 0x119a
    ax = v10579
    cx = v10580
    dx = v10581
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10594
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10596
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10598
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048535:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v10580
    dx = v10581
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10594
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10596
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10598
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x804853b:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = v10580
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?1 = v10594
    pf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    ?3 = v10596
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x119a]
    ?5 = v10598
    zf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x119a]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x804852f:add    ebx, 0x119a]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048541:sub    eax, edx
    ax = 0x0 [from 0x8048541:sub    eax, edx]
    cx = v10580
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x8048541:sub    eax, edx]
    ?1 = v10594
    pf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    ?3 = v10596
    af = 0x0 [from 0x8048541:sub    eax, edx]
    ?5 = v10598
    zf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    sf = 0x0 [from 0x8048541:sub    eax, edx]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x8048541:sub    eax, edx]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048543:sar    eax, 0x2
    ax = 0x0 [from 0x8048543:sar    eax, 0x2]
    cx = v10580
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10594
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    ?3 = v10596
    af = <top>
    ?5 = v10598
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    sf = 0x0 [from 0x8048543:sar    eax, 0x2]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x8048543:sar    eax, 0x2]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = 0x0 [from 0x8048543:sar    eax, 0x2]
    cx = v10580
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10594
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    ?3 = v10596
    af = <top>
    ?5 = v10598
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x2]
    sf = 0x0 [from 0x8048543:sar    eax, 0x2]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x8048543:sar    eax, 0x2]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048549:dec    eax
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10580
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x8048543:sar    eax, 0x2]
    ?1 = v10594
    pf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?3 = v10596
    af = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?5 = v10598
    zf = 0x0 [from 0x8048549:dec    eax]
    sf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x8048549:dec    eax]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x804854a:cmp    eax, 0xff
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10580
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v10594
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v10596
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v10598
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x804854d:je     0x804856b
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10580
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x1c [from 0x804852e:pop    ebx]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v10594
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v10596
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v10598
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x8048529:call   0x804852e]; value=0x804852e [from 0x8048529:call   0x804852e]
        size=4; addr=v10583-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x804854f:lea    esi, [edx + eax*0x4]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048552:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048554:lea    esi, [esi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804855a:lea    edi, [edi + 0x0]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048560:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
0x8048562:inc    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048563:sub    esi, 0x4
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0], edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048569:jne    0x8048560
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804856b:call   0x80485b0
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = v10580
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x119a]
    sp = v10583-0x20 [from 0x804856b:call   0x80485b0]
    bp = v10583-0x4 [from 0x8048520:push   ebp]
    si = v10585
    di = v10586
    es = v10587
    cs = v10588
    ss = v10589
    ds = v10590
    fs = v10591
    gs = v10592
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = v10594
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = v10596
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = v10598
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = v10601
    if = v10602
    df = v10603
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = v10605
    iopl1 = v10606
    nt = v10607
    ?15 = v10608
    memory = {
        size=4; addr=v10583-0x20 [from 0x804856b:call   0x80485b0]; value=0x8048570 [from 0x804856b:call   0x80485b0]
        size=4; addr=v10583-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x2]
        size=4; addr=v10583-0x10 [from 0x8048525:push   ebx]; value=v10582
        size=4; addr=v10583-0xc [from 0x8048524:push   esi]; value=v10585
        size=4; addr=v10583-0x8 [from 0x8048523:push   edi]; value=v10586
        size=4; addr=v10583-0x4 [from 0x8048520:push   ebp]; value=v10584
    }
0x8048570:add    esp, 0xc
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048573:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048574:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048575:pop    edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048576:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048577:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048578"
==============================================
0x8048578:nop    
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12218
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = v12227
    ?3 = v12228
    af = v12229
    ?5 = v12230
    zf = v12231
    sf = v12232
    tf = v12233
    if = v12234
    df = v12235
    of = v12236
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
0x8048579:nop    
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12218
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = v12227
    ?3 = v12228
    af = v12229
    ?5 = v12230
    zf = v12231
    sf = v12232
    tf = v12233
    if = v12234
    df = v12235
    of = v12236
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
0x804857a:nop    
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12218
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = v12227
    ?3 = v12228
    af = v12229
    ?5 = v12230
    zf = v12231
    sf = v12232
    tf = v12233
    if = v12234
    df = v12235
    of = v12236
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
0x804857b:nop    
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12218
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = v12227
    ?3 = v12228
    af = v12229
    ?5 = v12230
    zf = v12231
    sf = v12232
    tf = v12233
    if = v12234
    df = v12235
    of = v12236
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
0x804857c:nop    
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12218
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = v12227
    ?3 = v12228
    af = v12229
    ?5 = v12230
    zf = v12231
    sf = v12232
    tf = v12233
    if = v12234
    df = v12235
    of = v12236
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
0x804857d:nop    
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12218
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = v12227
    ?3 = v12228
    af = v12229
    ?5 = v12230
    zf = v12231
    sf = v12232
    tf = v12233
    if = v12234
    df = v12235
    of = v12236
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
0x804857e:nop    
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12218
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = v12227
    ?3 = v12228
    af = v12229
    ?5 = v12230
    zf = v12231
    sf = v12232
    tf = v12233
    if = v12234
    df = v12235
    of = v12236
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
0x804857f:nop    
    ax = v12211
    cx = v12212
    dx = v12213
    bx = v12214
    sp = v12215
    bp = v12216
    si = v12217
    di = v12218
    es = v12219
    cs = v12220
    ss = v12221
    ds = v12222
    fs = v12223
    gs = v12224
    cf = v12225
    ?1 = v12226
    pf = v12227
    ?3 = v12228
    af = v12229
    ?5 = v12230
    zf = v12231
    sf = v12232
    tf = v12233
    if = v12234
    df = v12235
    of = v12236
    iopl0 = v12237
    iopl1 = v12238
    nt = v12239
    ?15 = v12240
    memory = {}
==============================================
Constant propagation in function "__do_global_ctors_aux"
==============================================
0x8048580:push   ebp
    ax = v12557
    cx = v12558
    dx = v12559
    bx = v12560
    sp = v12561-0x4 [from 0x8048580:push   ebp]
    bp = v12562
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = v12571
    ?1 = v12572
    pf = v12573
    ?3 = v12574
    af = v12575
    ?5 = v12576
    zf = v12577
    sf = v12578
    tf = v12579
    if = v12580
    df = v12581
    of = v12582
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x8048581:mov    ebp, esp
    ax = v12557
    cx = v12558
    dx = v12559
    bx = v12560
    sp = v12561-0x4 [from 0x8048580:push   ebp]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = v12571
    ?1 = v12572
    pf = v12573
    ?3 = v12574
    af = v12575
    ?5 = v12576
    zf = v12577
    sf = v12578
    tf = v12579
    if = v12580
    df = v12581
    of = v12582
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x8048583:push   ebx
    ax = v12557
    cx = v12558
    dx = v12559
    bx = v12560
    sp = v12561-0x8 [from 0x8048583:push   ebx]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = v12571
    ?1 = v12572
    pf = v12573
    ?3 = v12574
    af = v12575
    ?5 = v12576
    zf = v12577
    sf = v12578
    tf = v12579
    if = v12580
    df = v12581
    of = v12582
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x8048584:sub    esp, 0x4
    ax = v12557
    cx = v12558
    dx = v12559
    bx = v12560
    sp = v12561-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12724-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12572
    pf = -v12718-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12574
    af = -v12722-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12576
    zf = v12721 [from 0x8048584:sub    esp, 0x4]
    sf = v12720 [from 0x8048584:sub    esp, 0x4]
    tf = v12579
    if = v12580
    df = v12581
    of = v12728 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x8048587:mov    ebx, 0x80495e8
    ax = v12557
    cx = v12558
    dx = v12559
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12561-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12724-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12572
    pf = -v12718-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12574
    af = -v12722-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12576
    zf = v12721 [from 0x8048584:sub    esp, 0x4]
    sf = v12720 [from 0x8048584:sub    esp, 0x4]
    tf = v12579
    if = v12580
    df = v12581
    of = v12728 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]
    ax = v12796 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12558
    dx = v12559
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12561-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12724-0x1 [from 0x8048584:sub    esp, 0x4]
    ?1 = v12572
    pf = -v12718-0x1 [from 0x8048584:sub    esp, 0x4]
    ?3 = v12574
    af = -v12722-0x1 [from 0x8048584:sub    esp, 0x4]
    ?5 = v12576
    zf = v12721 [from 0x8048584:sub    esp, 0x4]
    sf = v12720 [from 0x8048584:sub    esp, 0x4]
    tf = v12579
    if = v12580
    df = v12581
    of = v12728 [from 0x8048584:sub    esp, 0x4]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x8048591:cmp    eax, 0xff
    ax = v12796 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12558
    dx = v12559
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12561-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12861-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12572
    pf = -v12855-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12574
    af = -v12859-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12576
    zf = v12858 [from 0x8048591:cmp    eax, 0xff]
    sf = v12857 [from 0x8048591:cmp    eax, 0xff]
    tf = v12579
    if = v12580
    df = v12581
    of = v12865 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x8048594:je     0x80485ac
    ax = v12796 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12558
    dx = v12559
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12561-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12861-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12572
    pf = -v12855-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12574
    af = -v12859-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12576
    zf = v12858 [from 0x8048591:cmp    eax, 0xff]
    sf = v12857 [from 0x8048591:cmp    eax, 0xff]
    tf = v12579
    if = v12580
    df = v12581
    of = v12865 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x8048596:lea    esi, [esi + 0x0]
    ax = v12796 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12558
    dx = v12559
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12561-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12861-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12572
    pf = -v12855-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12574
    af = -v12859-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12576
    zf = v12858 [from 0x8048591:cmp    eax, 0xff]
    sf = v12857 [from 0x8048591:cmp    eax, 0xff]
    tf = v12579
    if = v12580
    df = v12581
    of = v12865 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x8048599:lea    edi, [edi + 0x0]
    ax = v12796 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12558
    dx = v12559
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12561-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12564 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12861-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12572
    pf = -v12855-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12574
    af = -v12859-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12576
    zf = v12858 [from 0x8048591:cmp    eax, 0xff]
    sf = v12857 [from 0x8048591:cmp    eax, 0xff]
    tf = v12579
    if = v12580
    df = v12581
    of = v12865 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x80485a0:sub    ebx, 0x4
    ax = v12796 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12558
    dx = v12559
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x4]
    sp = v12561-0xc [from 0x8048584:sub    esp, 0x4]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12564 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?1 = v12572
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x4]
    ?3 = v12574
    af = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?5 = v12576
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    tf = v12579
    if = v12580
    df = v12581
    of = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x80485a3:call   eax
    ax = v12796 [from 0x804858c:mov    eax, DWORD PTR ds:[0x80495e8]]
    cx = v12558
    dx = v12559
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x4]
    sp = v12561-0x10 [from 0x80485a3:call   eax]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563 [from 0x8048596:lea    esi, [esi + 0x0]]
    di = v12564 [from 0x8048599:lea    edi, [edi + 0x0]]
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?1 = v12572
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x4]
    ?3 = v12574
    af = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    ?5 = v12576
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    tf = v12579
    if = v12580
    df = v12581
    of = 0x0 [from 0x80485a0:sub    ebx, 0x4]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x10 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485a7:cmp    eax, 0xff
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485aa:jne    0x80485a0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485ac:pop    eax
    ax = v13246 [from 0x80485ac:pop    eax]
    cx = v12558
    dx = v12559
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x80495e8]
    sp = v12561-0x8 [from 0x80485ac:pop    eax]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12861-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12572
    pf = -v12855-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12574
    af = -v12859-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12576
    zf = v12858 [from 0x8048591:cmp    eax, 0xff]
    sf = v12857 [from 0x8048591:cmp    eax, 0xff]
    tf = v12579
    if = v12580
    df = v12581
    of = v12865 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x80485ad:pop    ebx
    ax = v13246 [from 0x80485ac:pop    eax]
    cx = v12558
    dx = v12559
    bx = v12560
    sp = v12561-0x4 [from 0x80485ad:pop    ebx]
    bp = v12561-0x4 [from 0x8048580:push   ebp]
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12861-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12572
    pf = -v12855-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12574
    af = -v12859-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12576
    zf = v12858 [from 0x8048591:cmp    eax, 0xff]
    sf = v12857 [from 0x8048591:cmp    eax, 0xff]
    tf = v12579
    if = v12580
    df = v12581
    of = v12865 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x80485ae:pop    ebp
    ax = v13246 [from 0x80485ac:pop    eax]
    cx = v12558
    dx = v12559
    bx = v12560
    sp = v12561 [from 0x80485ae:pop    ebp]
    bp = v12562
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12861-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12572
    pf = -v12855-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12574
    af = -v12859-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12576
    zf = v12858 [from 0x8048591:cmp    eax, 0xff]
    sf = v12857 [from 0x8048591:cmp    eax, 0xff]
    tf = v12579
    if = v12580
    df = v12581
    of = v12865 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
0x80485af:ret    
    ax = v13246 [from 0x80485ac:pop    eax]
    cx = v12558
    dx = v12559
    bx = v12560
    sp = v12561+0x4 [from 0x80485af:ret    ]
    bp = v12562
    si = v12563
    di = v12564
    es = v12565
    cs = v12566
    ss = v12567
    ds = v12568
    fs = v12569
    gs = v12570
    cf = -v12861-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = v12572
    pf = -v12855-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = v12574
    af = -v12859-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = v12576
    zf = v12858 [from 0x8048591:cmp    eax, 0xff]
    sf = v12857 [from 0x8048591:cmp    eax, 0xff]
    tf = v12579
    if = v12580
    df = v12581
    of = v12865 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = v12583
    iopl1 = v12584
    nt = v12585
    ?15 = v12586
    memory = {
        size=4; addr=v12561-0x8 [from 0x8048583:push   ebx]; value=v12560
        size=4; addr=v12561-0x4 [from 0x8048580:push   ebp]; value=v12562
    }
==============================================
Constant propagation in function "_fini"
==============================================
0x80485b0:push   ebp
    ax = v13418
    cx = v13419
    dx = v13420
    bx = v13421
    sp = v13422-0x4 [from 0x80485b0:push   ebp]
    bp = v13423
    si = v13424
    di = v13425
    es = v13426
    cs = v13427
    ss = v13428
    ds = v13429
    fs = v13430
    gs = v13431
    cf = v13432
    ?1 = v13433
    pf = v13434
    ?3 = v13435
    af = v13436
    ?5 = v13437
    zf = v13438
    sf = v13439
    tf = v13440
    if = v13441
    df = v13442
    of = v13443
    iopl0 = v13444
    iopl1 = v13445
    nt = v13446
    ?15 = v13447
    memory = {
        size=4; addr=v13422-0x4 [from 0x80485b0:push   ebp]; value=v13423
    }
0x80485b1:mov    ebp, esp
    ax = v13418
    cx = v13419
    dx = v13420
    bx = v13421
    sp = v13422-0x4 [from 0x80485b0:push   ebp]
    bp = v13422-0x4 [from 0x80485b0:push   ebp]
    si = v13424
    di = v13425
    es = v13426
    cs = v13427
    ss = v13428
    ds = v13429
    fs = v13430
    gs = v13431
    cf = v13432
    ?1 = v13433
    pf = v13434
    ?3 = v13435
    af = v13436
    ?5 = v13437
    zf = v13438
    sf = v13439
    tf = v13440
    if = v13441
    df = v13442
    of = v13443
    iopl0 = v13444
    iopl1 = v13445
    nt = v13446
    ?15 = v13447
    memory = {
        size=4; addr=v13422-0x4 [from 0x80485b0:push   ebp]; value=v13423
    }
0x80485b3:push   ebx
    ax = v13418
    cx = v13419
    dx = v13420
    bx = v13421
    sp = v13422-0x8 [from 0x80485b3:push   ebx]
    bp = v13422-0x4 [from 0x80485b0:push   ebp]
    si = v13424
    di = v13425
    es = v13426
    cs = v13427
    ss = v13428
    ds = v13429
    fs = v13430
    gs = v13431
    cf = v13432
    ?1 = v13433
    pf = v13434
    ?3 = v13435
    af = v13436
    ?5 = v13437
    zf = v13438
    sf = v13439
    tf = v13440
    if = v13441
    df = v13442
    of = v13443
    iopl0 = v13444
    iopl1 = v13445
    nt = v13446
    ?15 = v13447
    memory = {
        size=4; addr=v13422-0x8 [from 0x80485b3:push   ebx]; value=v13421
        size=4; addr=v13422-0x4 [from 0x80485b0:push   ebp]; value=v13423
    }
0x80485b4:push   eax
    ax = v13418
    cx = v13419
    dx = v13420
    bx = v13421
    sp = v13422-0xc [from 0x80485b4:push   eax]
    bp = v13422-0x4 [from 0x80485b0:push   ebp]
    si = v13424
    di = v13425
    es = v13426
    cs = v13427
    ss = v13428
    ds = v13429
    fs = v13430
    gs = v13431
    cf = v13432
    ?1 = v13433
    pf = v13434
    ?3 = v13435
    af = v13436
    ?5 = v13437
    zf = v13438
    sf = v13439
    tf = v13440
    if = v13441
    df = v13442
    of = v13443
    iopl0 = v13444
    iopl1 = v13445
    nt = v13446
    ?15 = v13447
    memory = {
        size=4; addr=v13422-0xc [from 0x80485b4:push   eax]; value=v13418
        size=4; addr=v13422-0x8 [from 0x80485b3:push   ebx]; value=v13421
        size=4; addr=v13422-0x4 [from 0x80485b0:push   ebp]; value=v13423
    }
0x80485b5:call   0x80485ba
    ax = v13418
    cx = v13419
    dx = v13420
    bx = v13421
    sp = v13422-0x10 [from 0x80485b5:call   0x80485ba]
    bp = v13422-0x4 [from 0x80485b0:push   ebp]
    si = v13424
    di = v13425
    es = v13426
    cs = v13427
    ss = v13428
    ds = v13429
    fs = v13430
    gs = v13431
    cf = v13432
    ?1 = v13433
    pf = v13434
    ?3 = v13435
    af = v13436
    ?5 = v13437
    zf = v13438
    sf = v13439
    tf = v13440
    if = v13441
    df = v13442
    of = v13443
    iopl0 = v13444
    iopl1 = v13445
    nt = v13446
    ?15 = v13447
    memory = {
        size=4; addr=v13422-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13422-0xc [from 0x80485b4:push   eax]; value=v13418
        size=4; addr=v13422-0x8 [from 0x80485b3:push   ebx]; value=v13421
        size=4; addr=v13422-0x4 [from 0x80485b0:push   ebp]; value=v13423
    }
0x80485ba:pop    ebx
    ax = v13418
    cx = v13419
    dx = v13420
    bx = 0x80485ba [from 0x80485b5:call   0x80485ba]
    sp = v13422-0xc [from 0x80485ba:pop    ebx]
    bp = v13422-0x4 [from 0x80485b0:push   ebp]
    si = v13424
    di = v13425
    es = v13426
    cs = v13427
    ss = v13428
    ds = v13429
    fs = v13430
    gs = v13431
    cf = v13432
    ?1 = v13433
    pf = v13434
    ?3 = v13435
    af = v13436
    ?5 = v13437
    zf = v13438
    sf = v13439
    tf = v13440
    if = v13441
    df = v13442
    of = v13443
    iopl0 = v13444
    iopl1 = v13445
    nt = v13446
    ?15 = v13447
    memory = {
        size=4; addr=v13422-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13422-0xc [from 0x80485b4:push   eax]; value=v13418
        size=4; addr=v13422-0x8 [from 0x80485b3:push   ebx]; value=v13421
        size=4; addr=v13422-0x4 [from 0x80485b0:push   ebp]; value=v13423
    }
0x80485bb:add    ebx, 0x110e
    ax = v13418
    cx = v13419
    dx = v13420
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x110e]
    sp = v13422-0xc [from 0x80485ba:pop    ebx]
    bp = v13422-0x4 [from 0x80485b0:push   ebp]
    si = v13424
    di = v13425
    es = v13426
    cs = v13427
    ss = v13428
    ds = v13429
    fs = v13430
    gs = v13431
    cf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?1 = v13433
    pf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?3 = v13435
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x110e]
    ?5 = v13437
    zf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    tf = v13440
    if = v13441
    df = v13442
    of = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    iopl0 = v13444
    iopl1 = v13445
    nt = v13446
    ?15 = v13447
    memory = {
        size=4; addr=v13422-0x10 [from 0x80485b5:call   0x80485ba]; value=0x80485ba [from 0x80485b5:call   0x80485ba]
        size=4; addr=v13422-0xc [from 0x80485b4:push   eax]; value=v13418
        size=4; addr=v13422-0x8 [from 0x80485b3:push   ebx]; value=v13421
        size=4; addr=v13422-0x4 [from 0x80485b0:push   ebp]; value=v13423
    }
0x80485c1:call   0x8048390
    ax = v13418
    cx = v13419
    dx = v13420
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x110e]
    sp = v13422-0x10 [from 0x80485c1:call   0x8048390]
    bp = v13422-0x4 [from 0x80485b0:push   ebp]
    si = v13424
    di = v13425
    es = v13426
    cs = v13427
    ss = v13428
    ds = v13429
    fs = v13430
    gs = v13431
    cf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?1 = v13433
    pf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    ?3 = v13435
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x110e]
    ?5 = v13437
    zf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    tf = v13440
    if = v13441
    df = v13442
    of = 0x0 [from 0x80485bb:add    ebx, 0x110e]
    iopl0 = v13444
    iopl1 = v13445
    nt = v13446
    ?15 = v13447
    memory = {
        size=4; addr=v13422-0x10 [from 0x80485c1:call   0x8048390]; value=0x80485c6 [from 0x80485c1:call   0x8048390]
        size=4; addr=v13422-0xc [from 0x80485b4:push   eax]; value=v13418
        size=4; addr=v13422-0x8 [from 0x80485b3:push   ebx]; value=v13421
        size=4; addr=v13422-0x4 [from 0x80485b0:push   ebp]; value=v13423
    }
0x80485c6:pop    eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c7:pop    ebx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c8:leave  
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80485c9:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
analyzed headers: 1
