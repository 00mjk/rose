=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v326
    cx = v327
    dx = v328
    bx = v329
    sp = v330-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v331
    si = v332
    di = v333
    es = v334
    cs = v335
    ss = v336
    ds = v337
    fs = v338
    gs = v339
    cf = v340
    ?1 = v341
    pf = v342
    ?3 = v343
    af = v344
    ?5 = v345
    zf = v346
    sf = v347
    tf = v348
    if = v349
    df = v350
    of = v351
    iopl0 = v352
    iopl1 = v353
    nt = v354
    ?15 = v355
    memory = {
        size=4; addr=v330-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v453
    cx = v454
    dx = v455
    bx = v456
    sp = v457-0x4 [from 0x80482d8:call   0x08048580]
    bp = v458
    si = v459
    di = v460
    es = v461
    cs = v462
    ss = v463
    ds = v464
    fs = v465
    gs = v466
    cf = v467
    ?1 = v468
    pf = v469
    ?3 = v470
    af = v471
    ?5 = v472
    zf = v473
    sf = v474
    tf = v475
    if = v476
    df = v477
    of = v478
    iopl0 = v479
    iopl1 = v480
    nt = v481
    ?15 = v482
    memory = {
        size=4; addr=v457-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v580
    cx = v581
    dx = v582
    bx = v583
    sp = v585+0x4 [from 0x80482dd:leave  ]
    bp = v614 [from 0x80482dd:leave  ]
    si = v586
    di = v587
    es = v588
    cs = v589
    ss = v590
    ds = v591
    fs = v592
    gs = v593
    cf = v594
    ?1 = v595
    pf = v596
    ?3 = v597
    af = v598
    ?5 = v599
    zf = v600
    sf = v601
    tf = v602
    if = v603
    df = v604
    of = v605
    iopl0 = v606
    iopl1 = v607
    nt = v608
    ?15 = v609
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v580
    cx = v581
    dx = v582
    bx = v583
    sp = v585+0x8 [from 0x80482de:ret    ]
    bp = v614 [from 0x80482dd:leave  ]
    si = v586
    di = v587
    es = v588
    cs = v589
    ss = v590
    ds = v591
    fs = v592
    gs = v593
    cf = v594
    ?1 = v595
    pf = v596
    ?3 = v597
    af = v598
    ?5 = v599
    zf = v600
    sf = v601
    tf = v602
    if = v603
    df = v604
    of = v605
    iopl0 = v606
    iopl1 = v607
    nt = v608
    ?15 = v609
    memory = {}
    ip = v652 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v714
    cx = v715
    dx = v716
    bx = v717
    sp = v718
    bp = v719
    si = v720
    di = v721
    es = v722
    cs = v723
    ss = v724
    ds = v725
    fs = v726
    gs = v727
    cf = v728
    ?1 = v729
    pf = v730
    ?3 = v731
    af = v732
    ?5 = v733
    zf = v734
    sf = v735
    tf = v736
    if = v737
    df = v738
    of = v739
    iopl0 = v740
    iopl1 = v741
    nt = v742
    ?15 = v743
    memory = {}
    ip = v747 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v809
    cx = v810
    dx = v811
    bx = v812
    sp = v813
    bp = v814
    si = v815
    di = v816
    es = v817
    cs = v818
    ss = v819
    ds = v820
    fs = v821
    gs = v822
    cf = v823
    ?1 = v824
    pf = v825
    ?3 = v826
    af = v827
    ?5 = v828
    zf = v829
    sf = v830
    tf = v831
    if = v832
    df = v833
    of = v834
    iopl0 = v835
    iopl1 = v836
    nt = v837
    ?15 = v838
    memory = {}
    ip = v842 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v904
    cx = v905
    dx = v906
    bx = v907
    sp = v908
    bp = v909
    si = v910
    di = v911
    es = v912
    cs = v913
    ss = v914
    ds = v915
    fs = v916
    gs = v917
    cf = v918
    ?1 = v919
    pf = v920
    ?3 = v921
    af = v922
    ?5 = v923
    zf = v924
    sf = v925
    tf = v926
    if = v927
    df = v928
    of = v929
    iopl0 = v930
    iopl1 = v931
    nt = v932
    ?15 = v933
    memory = {}
    ip = v937 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v999
    cx = v1000
    dx = v1001
    bx = v1002
    sp = v1003
    bp = v1004
    si = v1005
    di = v1006
    es = v1007
    cs = v1008
    ss = v1009
    ds = v1010
    fs = v1011
    gs = v1012
    cf = v1013
    ?1 = v1014
    pf = v1015
    ?3 = v1016
    af = v1017
    ?5 = v1018
    zf = v1019
    sf = v1020
    tf = v1021
    if = v1022
    df = v1023
    of = v1024
    iopl0 = v1025
    iopl1 = v1026
    nt = v1027
    ?15 = v1028
    memory = {}
    ip = v1032 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1094
    cx = v1095
    dx = v1096
    bx = v1097
    sp = v1098
    bp = v1099
    si = v1100
    di = v1101
    es = v1102
    cs = v1103
    ss = v1104
    ds = v1105
    fs = v1106
    gs = v1107
    cf = v1108
    ?1 = v1109
    pf = v1110
    ?3 = v1111
    af = v1112
    ?5 = v1113
    zf = v1114
    sf = v1115
    tf = v1116
    if = v1117
    df = v1118
    of = v1119
    iopl0 = v1120
    iopl1 = v1121
    nt = v1122
    ?15 = v1123
    memory = {}
    ip = v1127 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1189
    cx = v1190
    dx = v1191
    bx = v1192
    sp = v1193
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1195
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1189
    cx = v1190
    dx = v1191
    bx = v1192
    sp = v1193+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1193+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v1344-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v1786
    cx = v1787
    dx = v1788
    bx = v1789
    sp = v1790
    bp = v1791
    si = v1792
    di = v1793
    es = v1794
    cs = v1795
    ss = v1796
    ds = v1797
    fs = v1798
    gs = v1799
    cf = v1800
    ?1 = v1801
    pf = v1802
    ?3 = v1803
    af = v1804
    ?5 = v1805
    zf = v1806
    sf = v1807
    tf = v1808
    if = v1809
    df = v1810
    of = v1811
    iopl0 = v1812
    iopl1 = v1813
    nt = v1814
    ?15 = v1815
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x4 [from 0x8048364:push   ebp]
    bp = v1884
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x4 [from 0x8048364:push   ebp]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x8 [from 0x8048367:push   ebx]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0xc [from 0x8048368:push   ecx]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0xc [from 0x8048368:push   ecx]; value=v1880
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x10 [from 0x8048369:call   0x0804836e]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v1883-0xc [from 0x8048368:push   ecx]; value=v1880
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2146
    cx = v2147
    dx = v2148
    bx = v2180 [from 0x804836e:pop    ebx]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2160
    ?1 = v2161
    pf = v2162
    ?3 = v2163
    af = v2164
    ?5 = v2165
    zf = v2166
    sf = v2167
    tf = v2168
    if = v2169
    df = v2170
    of = v2171
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2146
    cx = v2147
    dx = v2148
    bx = v2180+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2242 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2161
    pf = -v2237-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2163
    af = v2241 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2165
    zf = v2240 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2239 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2168
    if = v2169
    df = v2170
    of = v2245 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2146
    cx = v2147
    dx = v2281 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2180+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2242 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2161
    pf = -v2237-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2163
    af = v2241 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2165
    zf = v2240 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2239 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2168
    if = v2169
    df = v2170
    of = v2245 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2146
    cx = v2147
    dx = v2281 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2180+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2161
    pf = -v2330-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2163
    af = <top>
    ?5 = v2165
    zf = v2333 [from 0x804837b:test   edx, edx]
    sf = v2332 [from 0x804837b:test   edx, edx]
    tf = v2168
    if = v2169
    df = v2170
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2146
    cx = v2147
    dx = v2281 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2180+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2161
    pf = -v2330-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2163
    af = <top>
    ?5 = v2165
    zf = v2333 [from 0x804837b:test   edx, edx]
    sf = v2332 [from 0x804837b:test   edx, edx]
    tf = v2168
    if = v2169
    df = v2170
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = v2370 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v2492
    cx = v2493
    dx = v2494
    bx = v2495
    sp = v2496-0x4 [from 0x804837f:call   0x08048330]
    bp = v2497
    si = v2498
    di = v2499
    es = v2500
    cs = v2501
    ss = v2502
    ds = v2503
    fs = v2504
    gs = v2505
    cf = v2506
    ?1 = v2507
    pf = v2508
    ?3 = v2509
    af = v2510
    ?5 = v2511
    zf = v2512
    sf = v2513
    tf = v2514
    if = v2515
    df = v2516
    of = v2517
    iopl0 = v2518
    iopl1 = v2519
    nt = v2520
    ?15 = v2521
    memory = {
        size=4; addr=v2496-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v2653 [from 0x8048384:pop    eax]
    cx = v2620
    dx = v2621
    bx = v2622
    sp = v2623+0x4 [from 0x8048384:pop    eax]
    bp = v2624
    si = v2625
    di = v2626
    es = v2627
    cs = v2628
    ss = v2629
    ds = v2630
    fs = v2631
    gs = v2632
    cf = v2633
    ?1 = v2634
    pf = v2635
    ?3 = v2636
    af = v2637
    ?5 = v2638
    zf = v2639
    sf = v2640
    tf = v2641
    if = v2642
    df = v2643
    of = v2644
    iopl0 = v2645
    iopl1 = v2646
    nt = v2647
    ?15 = v2648
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v2653 [from 0x8048384:pop    eax]
    cx = v2620
    dx = v2621
    bx = v2689 [from 0x8048385:pop    ebx]
    sp = v2623+0x8 [from 0x8048385:pop    ebx]
    bp = v2624
    si = v2625
    di = v2626
    es = v2627
    cs = v2628
    ss = v2629
    ds = v2630
    fs = v2631
    gs = v2632
    cf = v2633
    ?1 = v2634
    pf = v2635
    ?3 = v2636
    af = v2637
    ?5 = v2638
    zf = v2639
    sf = v2640
    tf = v2641
    if = v2642
    df = v2643
    of = v2644
    iopl0 = v2645
    iopl1 = v2646
    nt = v2647
    ?15 = v2648
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v2653 [from 0x8048384:pop    eax]
    cx = v2620
    dx = v2621
    bx = v2689 [from 0x8048385:pop    ebx]
    sp = v2624+0x4 [from 0x8048386:leave  ]
    bp = v2725 [from 0x8048386:leave  ]
    si = v2625
    di = v2626
    es = v2627
    cs = v2628
    ss = v2629
    ds = v2630
    fs = v2631
    gs = v2632
    cf = v2633
    ?1 = v2634
    pf = v2635
    ?3 = v2636
    af = v2637
    ?5 = v2638
    zf = v2639
    sf = v2640
    tf = v2641
    if = v2642
    df = v2643
    of = v2644
    iopl0 = v2645
    iopl1 = v2646
    nt = v2647
    ?15 = v2648
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v2653 [from 0x8048384:pop    eax]
    cx = v2620
    dx = v2621
    bx = v2689 [from 0x8048385:pop    ebx]
    sp = v2624+0x8 [from 0x8048387:ret    ]
    bp = v2725 [from 0x8048386:leave  ]
    si = v2625
    di = v2626
    es = v2627
    cs = v2628
    ss = v2629
    ds = v2630
    fs = v2631
    gs = v2632
    cf = v2633
    ?1 = v2634
    pf = v2635
    ?3 = v2636
    af = v2637
    ?5 = v2638
    zf = v2639
    sf = v2640
    tf = v2641
    if = v2642
    df = v2643
    of = v2644
    iopl0 = v2645
    iopl1 = v2646
    nt = v2647
    ?15 = v2648
    memory = {}
    ip = v2763 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0x4 [from 0x8048390:push   ebp]
    bp = v2830
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = v2839
    ?1 = v2840
    pf = v2841
    ?3 = v2842
    af = v2843
    ?5 = v2844
    zf = v2845
    sf = v2846
    tf = v2847
    if = v2848
    df = v2849
    of = v2850
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0x4 [from 0x8048390:push   ebp]
    bp = v2829-0x4 [from 0x8048390:push   ebp]
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = v2839
    ?1 = v2840
    pf = v2841
    ?3 = v2842
    af = v2843
    ?5 = v2844
    zf = v2845
    sf = v2846
    tf = v2847
    if = v2848
    df = v2849
    of = v2850
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2829-0x4 [from 0x8048390:push   ebp]
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = -v2956-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v2840
    pf = -v2950-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v2842
    af = -v2954-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v2844
    zf = v2953 [from 0x8048393:sub    esp, 0x08]
    sf = v2952 [from 0x8048393:sub    esp, 0x08]
    tf = v2847
    if = v2848
    df = v2849
    of = v2960 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2829-0x4 [from 0x8048390:push   ebp]
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = -v3028-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v2840
    pf = -v3022-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v2842
    af = -v3026-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v2844
    zf = v3025 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3024 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v2847
    if = v2848
    df = v2849
    of = v3032 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2829-0x4 [from 0x8048390:push   ebp]
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = -v3028-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v2840
    pf = -v3022-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v2842
    af = -v3026-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v2844
    zf = v3025 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3024 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v2847
    if = v2848
    df = v2849
    of = v3032 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = v3067 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3222 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3190
    dx = v3191
    bx = v3192
    sp = v3193
    bp = v3194
    si = v3195
    di = v3196
    es = v3197
    cs = v3198
    ss = v3199
    ds = v3200
    fs = v3201
    gs = v3202
    cf = v3203
    ?1 = v3204
    pf = v3205
    ?3 = v3206
    af = v3207
    ?5 = v3208
    zf = v3209
    sf = v3210
    tf = v3211
    if = v3212
    df = v3213
    of = v3214
    iopl0 = v3215
    iopl1 = v3216
    nt = v3217
    ?15 = v3218
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3222 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3190
    dx = v3256 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3192
    sp = v3193
    bp = v3194
    si = v3195
    di = v3196
    es = v3197
    cs = v3198
    ss = v3199
    ds = v3200
    fs = v3201
    gs = v3202
    cf = v3203
    ?1 = v3204
    pf = v3205
    ?3 = v3206
    af = v3207
    ?5 = v3208
    zf = v3209
    sf = v3210
    tf = v3211
    if = v3212
    df = v3213
    of = v3214
    iopl0 = v3215
    iopl1 = v3216
    nt = v3217
    ?15 = v3218
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3222 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3190
    dx = v3256 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3192
    sp = v3193
    bp = v3194
    si = v3195
    di = v3196
    es = v3197
    cs = v3198
    ss = v3199
    ds = v3200
    fs = v3201
    gs = v3202
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3204
    pf = -v3305-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3206
    af = <top>
    ?5 = v3208
    zf = v3308 [from 0x80483a6:test   edx, edx]
    sf = v3307 [from 0x80483a6:test   edx, edx]
    tf = v3211
    if = v3212
    df = v3213
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3215
    iopl1 = v3216
    nt = v3217
    ?15 = v3218
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3222 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3190
    dx = v3256 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3192
    sp = v3193
    bp = v3194
    si = v3195
    di = v3196
    es = v3197
    cs = v3198
    ss = v3199
    ds = v3200
    fs = v3201
    gs = v3202
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3204
    pf = -v3305-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3206
    af = <top>
    ?5 = v3208
    zf = v3308 [from 0x80483a6:test   edx, edx]
    sf = v3307 [from 0x80483a6:test   edx, edx]
    tf = v3211
    if = v3212
    df = v3213
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3215
    iopl1 = v3216
    nt = v3217
    ?15 = v3218
    memory = {}
    ip = v3345 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v3467
    cx = v3468
    dx = v3469
    bx = v3470
    sp = v3471
    bp = v3472
    si = v3473 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3474
    es = v3475
    cs = v3476
    ss = v3477
    ds = v3478
    fs = v3479
    gs = v3480
    cf = v3481
    ?1 = v3482
    pf = v3483
    ?3 = v3484
    af = v3485
    ?5 = v3486
    zf = v3487
    sf = v3488
    tf = v3489
    if = v3490
    df = v3491
    of = v3492
    iopl0 = v3493
    iopl1 = v3494
    nt = v3495
    ?15 = v3496
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v3467+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3468
    dx = v3469
    bx = v3470
    sp = v3471
    bp = v3472
    si = v3473 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3474
    es = v3475
    cs = v3476
    ss = v3477
    ds = v3478
    fs = v3479
    gs = v3480
    cf = v3561 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3482
    pf = -v3556-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3484
    af = v3560 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3486
    zf = v3559 [from 0x80483b0:add    eax, 0x04]
    sf = v3558 [from 0x80483b0:add    eax, 0x04]
    tf = v3489
    if = v3490
    df = v3491
    of = v3564 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3493
    iopl1 = v3494
    nt = v3495
    ?15 = v3496
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v3467+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3468
    dx = v3469
    bx = v3470
    sp = v3471
    bp = v3472
    si = v3473 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3474
    es = v3475
    cs = v3476
    ss = v3477
    ds = v3478
    fs = v3479
    gs = v3480
    cf = v3561 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3482
    pf = -v3556-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3484
    af = v3560 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3486
    zf = v3559 [from 0x80483b0:add    eax, 0x04]
    sf = v3558 [from 0x80483b0:add    eax, 0x04]
    tf = v3489
    if = v3490
    df = v3491
    of = v3564 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3493
    iopl1 = v3494
    nt = v3495
    ?15 = v3496
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v3467+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v3467+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3468
    dx = v3469
    bx = v3470
    sp = v3471-0x4 [from 0x80483b8:call   edx]
    bp = v3472
    si = v3473 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3474
    es = v3475
    cs = v3476
    ss = v3477
    ds = v3478
    fs = v3479
    gs = v3480
    cf = v3561 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3482
    pf = -v3556-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3484
    af = v3560 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3486
    zf = v3559 [from 0x80483b0:add    eax, 0x04]
    sf = v3558 [from 0x80483b0:add    eax, 0x04]
    tf = v3489
    if = v3490
    df = v3491
    of = v3564 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3493
    iopl1 = v3494
    nt = v3495
    ?15 = v3496
    memory = {
        size=4; addr=v3471-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v3469
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3730 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3698
    dx = v3699
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3703
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = v3711
    ?1 = v3712
    pf = v3713
    ?3 = v3714
    af = v3715
    ?5 = v3716
    zf = v3717
    sf = v3718
    tf = v3719
    if = v3720
    df = v3721
    of = v3722
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v3730 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3698
    dx = v3764 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3703
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = v3711
    ?1 = v3712
    pf = v3713
    ?3 = v3714
    af = v3715
    ?5 = v3716
    zf = v3717
    sf = v3718
    tf = v3719
    if = v3720
    df = v3721
    of = v3722
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v3730 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3698
    dx = v3764 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3703
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v3712
    pf = -v3813-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v3714
    af = <top>
    ?5 = v3716
    zf = v3816 [from 0x80483c1:test   edx, edx]
    sf = v3815 [from 0x80483c1:test   edx, edx]
    tf = v3719
    if = v3720
    df = v3721
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v3730 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3698
    dx = v3764 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3703
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v3712
    pf = -v3813-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v3714
    af = <top>
    ?5 = v3716
    zf = v3816 [from 0x80483c1:test   edx, edx]
    sf = v3815 [from 0x80483c1:test   edx, edx]
    tf = v3719
    if = v3720
    df = v3721
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = v3854 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3980
    bp = v3981
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v3990
    ?1 = v3991
    pf = v3992
    ?3 = v3993
    af = v3994
    ?5 = v3995
    zf = v3996
    sf = v3997
    tf = v3998
    if = v3999
    df = v4000
    of = v4001
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3981+0x4 [from 0x80483cc:leave  ]
    bp = v4046 [from 0x80483cc:leave  ]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v3990
    ?1 = v3991
    pf = v3992
    ?3 = v3993
    af = v3994
    ?5 = v3995
    zf = v3996
    sf = v3997
    tf = v3998
    if = v3999
    df = v4000
    of = v4001
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3981+0x8 [from 0x80483cd:ret    ]
    bp = v4046 [from 0x80483cc:leave  ]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v3990
    ?1 = v3991
    pf = v3992
    ?3 = v3993
    af = v3994
    ?5 = v3995
    zf = v3996
    sf = v3997
    tf = v3998
    if = v3999
    df = v4000
    of = v4001
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v4084 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v4146
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0x4 [from 0x80483d0:push   ebp]
    bp = v4151
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = v4160
    ?1 = v4161
    pf = v4162
    ?3 = v4163
    af = v4164
    ?5 = v4165
    zf = v4166
    sf = v4167
    tf = v4168
    if = v4169
    df = v4170
    of = v4171
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v4146
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0x4 [from 0x80483d0:push   ebp]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = v4160
    ?1 = v4161
    pf = v4162
    ?3 = v4163
    af = v4164
    ?5 = v4165
    zf = v4166
    sf = v4167
    tf = v4168
    if = v4169
    df = v4170
    of = v4171
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v4146
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = -v4277-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4161
    pf = -v4271-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4163
    af = -v4275-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4165
    zf = v4274 [from 0x80483d3:sub    esp, 0x08]
    sf = v4273 [from 0x80483d3:sub    esp, 0x08]
    tf = v4168
    if = v4169
    df = v4170
    of = v4281 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v4316 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = -v4277-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4161
    pf = -v4271-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4163
    af = -v4275-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4165
    zf = v4274 [from 0x80483d3:sub    esp, 0x08]
    sf = v4273 [from 0x80483d3:sub    esp, 0x08]
    tf = v4168
    if = v4169
    df = v4170
    of = v4281 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v4316 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4161
    pf = -v4365-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4163
    af = <top>
    ?5 = v4165
    zf = v4368 [from 0x80483db:test   eax, eax]
    sf = v4367 [from 0x80483db:test   eax, eax]
    tf = v4168
    if = v4169
    df = v4170
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v4316 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4161
    pf = -v4365-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4163
    af = <top>
    ?5 = v4165
    zf = v4368 [from 0x80483db:test   eax, eax]
    sf = v4367 [from 0x80483db:test   eax, eax]
    tf = v4168
    if = v4169
    df = v4170
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = v4405 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4531
    bp = v4532
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = v4541
    ?1 = v4542
    pf = v4543
    ?3 = v4544
    af = v4545
    ?5 = v4546
    zf = v4547
    sf = v4548
    tf = v4549
    if = v4550
    df = v4551
    of = v4552
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4531
    bp = v4532
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4531
    bp = v4532
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4532
    bp = v4532
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4532+0x4 [from 0x8048402:pop    ebp]
    bp = v4715 [from 0x8048402:pop    ebp]
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4532+0x8 [from 0x8048403:ret    ]
    bp = v4715 [from 0x8048402:pop    ebp]
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = v4753 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    ax = v4815
    cx = v4816
    dx = v4817
    bx = v4818
    sp = v4819-0x4 [from 0x8048410:push   ebp]
    bp = v4820
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = v4829
    ?1 = v4830
    pf = v4831
    ?3 = v4832
    af = v4833
    ?5 = v4834
    zf = v4835
    sf = v4836
    tf = v4837
    if = v4838
    df = v4839
    of = v4840
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v4819-0x4 [from 0x8048410:push   ebp]; value=v4820
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v4815
    cx = v4816
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v4818
    sp = v4819-0x4 [from 0x8048410:push   ebp]
    bp = v4820
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = v4829
    ?1 = v4830
    pf = v4831
    ?3 = v4832
    af = v4833
    ?5 = v4834
    zf = v4835
    sf = v4836
    tf = v4837
    if = v4838
    df = v4839
    of = v4840
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v4819-0x4 [from 0x8048410:push   ebp]; value=v4820
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v4815
    cx = v4816
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v4818
    sp = v4819-0x4 [from 0x8048410:push   ebp]
    bp = v4819-0x4 [from 0x8048410:push   ebp]
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = v4829
    ?1 = v4830
    pf = v4831
    ?3 = v4832
    af = v4833
    ?5 = v4834
    zf = v4835
    sf = v4836
    tf = v4837
    if = v4838
    df = v4839
    of = v4840
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v4819-0x4 [from 0x8048410:push   ebp]; value=v4820
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v4815
    cx = v4816
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v4818
    sp = v4819-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v4819-0x4 [from 0x8048410:push   ebp]
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = -v4979-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v4830
    pf = -v4973-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v4832
    af = -v4977-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v4834
    zf = v4976 [from 0x8048418:sub    esp, 0x08]
    sf = v4975 [from 0x8048418:sub    esp, 0x08]
    tf = v4837
    if = v4838
    df = v4839
    of = v4983 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v4819-0x4 [from 0x8048410:push   ebp]; value=v4820
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v4815
    cx = v4816
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v4818
    sp = v5017 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v4819-0x4 [from 0x8048410:push   ebp]
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v4830
    pf = -v5033-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v4832
    af = <top>
    ?5 = v4834
    zf = v5036 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5035 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v4837
    if = v4838
    df = v4839
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v4819-0x4 [from 0x8048410:push   ebp]; value=v4820
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v4815
    cx = v4816
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v4818
    sp = v5017 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v4819-0x4 [from 0x8048410:push   ebp]
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v4830
    pf = -v5033-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v4832
    af = <top>
    ?5 = v4834
    zf = v5036 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5035 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v4837
    if = v4838
    df = v4839
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v5017+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v4815
    cx = v4816
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v4818
    sp = v5017 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v4819-0x4 [from 0x8048410:push   ebp]
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v4830
    pf = -v5033-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v4832
    af = <top>
    ?5 = v4834
    zf = v5036 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5035 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v4837
    if = v4838
    df = v4839
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v5017 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5017+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v4815
    cx = v4816
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v4818
    sp = v5017-0x4 [from 0x8048429:call   0x080482f0]
    bp = v4819-0x4 [from 0x8048410:push   ebp]
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v4830
    pf = -v5033-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v4832
    af = <top>
    ?5 = v4834
    zf = v5036 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5035 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v4837
    if = v4838
    df = v4839
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v5017 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5017+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v5017-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v5239
    cx = v5240
    dx = v5241
    bx = v5242
    sp = v5244
    bp = v5244
    si = v5245
    di = v5246
    es = v5247
    cs = v5248
    ss = v5249
    ds = v5250
    fs = v5251
    gs = v5252
    cf = v5253
    ?1 = v5254
    pf = v5255
    ?3 = v5256
    af = v5257
    ?5 = v5258
    zf = v5259
    sf = v5260
    tf = v5261
    if = v5262
    df = v5263
    of = v5264
    iopl0 = v5265
    iopl1 = v5266
    nt = v5267
    ?15 = v5268
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5240
    dx = v5241
    bx = v5242
    sp = v5244
    bp = v5244
    si = v5245
    di = v5246
    es = v5247
    cs = v5248
    ss = v5249
    ds = v5250
    fs = v5251
    gs = v5252
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5254
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5256
    af = <top>
    ?5 = v5258
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5261
    if = v5262
    df = v5263
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5265
    iopl1 = v5266
    nt = v5267
    ?15 = v5268
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5240
    dx = v5241
    bx = v5242
    sp = v5244+0x4 [from 0x8048432:pop    ebp]
    bp = v5360 [from 0x8048432:pop    ebp]
    si = v5245
    di = v5246
    es = v5247
    cs = v5248
    ss = v5249
    ds = v5250
    fs = v5251
    gs = v5252
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5254
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5256
    af = <top>
    ?5 = v5258
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5261
    if = v5262
    df = v5263
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5265
    iopl1 = v5266
    nt = v5267
    ?15 = v5268
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5240
    dx = v5241
    bx = v5242
    sp = v5244+0x8 [from 0x8048433:ret    ]
    bp = v5360 [from 0x8048432:pop    ebp]
    si = v5245
    di = v5246
    es = v5247
    cs = v5248
    ss = v5249
    ds = v5250
    fs = v5251
    gs = v5252
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5254
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5256
    af = <top>
    ?5 = v5258
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5261
    if = v5262
    df = v5263
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5265
    iopl1 = v5266
    nt = v5267
    ?15 = v5268
    memory = {}
    ip = v5398 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v5460
    cx = v5461
    dx = v5462
    bx = v5463
    sp = v5464-0x4 [from 0x8048440:push   ebp]
    bp = v5465
    si = v5466
    di = v5467
    es = v5468
    cs = v5469
    ss = v5470
    ds = v5471
    fs = v5472
    gs = v5473
    cf = v5474
    ?1 = v5475
    pf = v5476
    ?3 = v5477
    af = v5478
    ?5 = v5479
    zf = v5480
    sf = v5481
    tf = v5482
    if = v5483
    df = v5484
    of = v5485
    iopl0 = v5486
    iopl1 = v5487
    nt = v5488
    ?15 = v5489
    memory = {
        size=4; addr=v5464-0x4 [from 0x8048440:push   ebp]; value=v5465
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v5460
    cx = v5461
    dx = v5462
    bx = v5463
    sp = v5464-0x4 [from 0x8048440:push   ebp]
    bp = v5464-0x4 [from 0x8048440:push   ebp]
    si = v5466
    di = v5467
    es = v5468
    cs = v5469
    ss = v5470
    ds = v5471
    fs = v5472
    gs = v5473
    cf = v5474
    ?1 = v5475
    pf = v5476
    ?3 = v5477
    af = v5478
    ?5 = v5479
    zf = v5480
    sf = v5481
    tf = v5482
    if = v5483
    df = v5484
    of = v5485
    iopl0 = v5486
    iopl1 = v5487
    nt = v5488
    ?15 = v5489
    memory = {
        size=4; addr=v5464-0x4 [from 0x8048440:push   ebp]; value=v5465
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v5460
    cx = v5461
    dx = v5462
    bx = v5463
    sp = v5464-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v5464-0x4 [from 0x8048440:push   ebp]
    si = v5466
    di = v5467
    es = v5468
    cs = v5469
    ss = v5470
    ds = v5471
    fs = v5472
    gs = v5473
    cf = -v5591-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v5475
    pf = -v5585-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v5477
    af = -v5589-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v5479
    zf = v5588 [from 0x8048443:sub    esp, 0x08]
    sf = v5587 [from 0x8048443:sub    esp, 0x08]
    tf = v5482
    if = v5483
    df = v5484
    of = v5595 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v5486
    iopl1 = v5487
    nt = v5488
    ?15 = v5489
    memory = {
        size=4; addr=v5464-0x4 [from 0x8048440:push   ebp]; value=v5465
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v5460
    cx = v5461
    dx = v5462
    bx = v5463
    sp = v5464-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v5464-0x4 [from 0x8048440:push   ebp]
    si = v5466
    di = v5467
    es = v5468
    cs = v5469
    ss = v5470
    ds = v5471
    fs = v5472
    gs = v5473
    cf = -v5591-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v5475
    pf = -v5585-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v5477
    af = -v5589-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v5479
    zf = v5588 [from 0x8048443:sub    esp, 0x08]
    sf = v5587 [from 0x8048443:sub    esp, 0x08]
    tf = v5482
    if = v5483
    df = v5484
    of = v5595 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v5486
    iopl1 = v5487
    nt = v5488
    ?15 = v5489
    memory = {
        size=4; addr=v5464-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v5464-0x4 [from 0x8048440:push   ebp]; value=v5465
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v5460
    cx = v5461
    dx = v5462
    bx = v5463
    sp = v5464-0x10 [from 0x804844d:call   0x08048300]
    bp = v5464-0x4 [from 0x8048440:push   ebp]
    si = v5466
    di = v5467
    es = v5468
    cs = v5469
    ss = v5470
    ds = v5471
    fs = v5472
    gs = v5473
    cf = -v5591-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v5475
    pf = -v5585-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v5477
    af = -v5589-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v5479
    zf = v5588 [from 0x8048443:sub    esp, 0x08]
    sf = v5587 [from 0x8048443:sub    esp, 0x08]
    tf = v5482
    if = v5483
    df = v5484
    of = v5595 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v5486
    iopl1 = v5487
    nt = v5488
    ?15 = v5489
    memory = {
        size=4; addr=v5464-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v5464-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v5464-0x4 [from 0x8048440:push   ebp]; value=v5465
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v5759
    cx = v5760
    dx = v5761
    bx = v5762
    sp = v5764
    bp = v5764
    si = v5765
    di = v5766
    es = v5767
    cs = v5768
    ss = v5769
    ds = v5770
    fs = v5771
    gs = v5772
    cf = v5773
    ?1 = v5774
    pf = v5775
    ?3 = v5776
    af = v5777
    ?5 = v5778
    zf = v5779
    sf = v5780
    tf = v5781
    if = v5782
    df = v5783
    of = v5784
    iopl0 = v5785
    iopl1 = v5786
    nt = v5787
    ?15 = v5788
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v5759
    cx = v5760
    dx = v5761
    bx = v5762
    sp = v5764+0x4 [from 0x8048454:pop    ebp]
    bp = v5825 [from 0x8048454:pop    ebp]
    si = v5765
    di = v5766
    es = v5767
    cs = v5768
    ss = v5769
    ds = v5770
    fs = v5771
    gs = v5772
    cf = v5773
    ?1 = v5774
    pf = v5775
    ?3 = v5776
    af = v5777
    ?5 = v5778
    zf = v5779
    sf = v5780
    tf = v5781
    if = v5782
    df = v5783
    of = v5784
    iopl0 = v5785
    iopl1 = v5786
    nt = v5787
    ?15 = v5788
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v5759
    cx = v5760
    dx = v5761
    bx = v5762
    sp = v5764+0x8 [from 0x8048455:ret    ]
    bp = v5825 [from 0x8048454:pop    ebp]
    si = v5765
    di = v5766
    es = v5767
    cs = v5768
    ss = v5769
    ds = v5770
    fs = v5771
    gs = v5772
    cf = v5773
    ?1 = v5774
    pf = v5775
    ?3 = v5776
    af = v5777
    ?5 = v5778
    zf = v5779
    sf = v5780
    tf = v5781
    if = v5782
    df = v5783
    of = v5784
    iopl0 = v5785
    iopl1 = v5786
    nt = v5787
    ?15 = v5788
    memory = {}
    ip = v5863 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v5925
    cx = v5926
    dx = v5927
    bx = v5928
    sp = v5929-0x4 [from 0x8048460:push   ebp]
    bp = v5930
    si = v5931
    di = v5932
    es = v5933
    cs = v5934
    ss = v5935
    ds = v5936
    fs = v5937
    gs = v5938
    cf = v5939
    ?1 = v5940
    pf = v5941
    ?3 = v5942
    af = v5943
    ?5 = v5944
    zf = v5945
    sf = v5946
    tf = v5947
    if = v5948
    df = v5949
    of = v5950
    iopl0 = v5951
    iopl1 = v5952
    nt = v5953
    ?15 = v5954
    memory = {
        size=4; addr=v5929-0x4 [from 0x8048460:push   ebp]; value=v5930
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v5925
    cx = v5926
    dx = v5927
    bx = v5928
    sp = v5929-0x4 [from 0x8048460:push   ebp]
    bp = v5929-0x4 [from 0x8048460:push   ebp]
    si = v5931
    di = v5932
    es = v5933
    cs = v5934
    ss = v5935
    ds = v5936
    fs = v5937
    gs = v5938
    cf = v5939
    ?1 = v5940
    pf = v5941
    ?3 = v5942
    af = v5943
    ?5 = v5944
    zf = v5945
    sf = v5946
    tf = v5947
    if = v5948
    df = v5949
    of = v5950
    iopl0 = v5951
    iopl1 = v5952
    nt = v5953
    ?15 = v5954
    memory = {
        size=4; addr=v5929-0x4 [from 0x8048460:push   ebp]; value=v5930
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v5925
    cx = v5926
    dx = v5927
    bx = v5928
    sp = v5929-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v5929-0x4 [from 0x8048460:push   ebp]
    si = v5931
    di = v5932
    es = v5933
    cs = v5934
    ss = v5935
    ds = v5936
    fs = v5937
    gs = v5938
    cf = -v6056-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v5940
    pf = -v6050-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v5942
    af = -v6054-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v5944
    zf = v6053 [from 0x8048463:sub    esp, 0x08]
    sf = v6052 [from 0x8048463:sub    esp, 0x08]
    tf = v5947
    if = v5948
    df = v5949
    of = v6060 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v5951
    iopl1 = v5952
    nt = v5953
    ?15 = v5954
    memory = {
        size=4; addr=v5929-0x4 [from 0x8048460:push   ebp]; value=v5930
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v5925
    cx = v5926
    dx = v5927
    bx = v5928
    sp = v5929-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v5929-0x4 [from 0x8048460:push   ebp]
    si = v5931
    di = v5932
    es = v5933
    cs = v5934
    ss = v5935
    ds = v5936
    fs = v5937
    gs = v5938
    cf = -v6056-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v5940
    pf = -v6050-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v5942
    af = -v6054-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v5944
    zf = v6053 [from 0x8048463:sub    esp, 0x08]
    sf = v6052 [from 0x8048463:sub    esp, 0x08]
    tf = v5947
    if = v5948
    df = v5949
    of = v6060 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v5951
    iopl1 = v5952
    nt = v5953
    ?15 = v5954
    memory = {
        size=4; addr=v5929-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v5929-0x4 [from 0x8048460:push   ebp]; value=v5930
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v5925
    cx = v5926
    dx = v5927
    bx = v5928
    sp = v5929-0x10 [from 0x804846d:call   0x08048300]
    bp = v5929-0x4 [from 0x8048460:push   ebp]
    si = v5931
    di = v5932
    es = v5933
    cs = v5934
    ss = v5935
    ds = v5936
    fs = v5937
    gs = v5938
    cf = -v6056-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v5940
    pf = -v6050-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v5942
    af = -v6054-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v5944
    zf = v6053 [from 0x8048463:sub    esp, 0x08]
    sf = v6052 [from 0x8048463:sub    esp, 0x08]
    tf = v5947
    if = v5948
    df = v5949
    of = v6060 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v5951
    iopl1 = v5952
    nt = v5953
    ?15 = v5954
    memory = {
        size=4; addr=v5929-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v5929-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v5929-0x4 [from 0x8048460:push   ebp]; value=v5930
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v6224
    cx = v6225
    dx = v6226
    bx = v6227
    sp = v6228
    bp = v6229
    si = v6230
    di = v6231
    es = v6232
    cs = v6233
    ss = v6234
    ds = v6235
    fs = v6236
    gs = v6237
    cf = v6238
    ?1 = v6239
    pf = v6240
    ?3 = v6241
    af = v6242
    ?5 = v6243
    zf = v6244
    sf = v6245
    tf = v6246
    if = v6247
    df = v6248
    of = v6249
    iopl0 = v6250
    iopl1 = v6251
    nt = v6252
    ?15 = v6253
    memory = {
        size=4; addr=v6228; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v6224
    cx = v6225
    dx = v6226
    bx = v6227
    sp = v6228-0x4 [from 0x8048479:call   0x08048320]
    bp = v6229
    si = v6230
    di = v6231
    es = v6232
    cs = v6233
    ss = v6234
    ds = v6235
    fs = v6236
    gs = v6237
    cf = v6238
    ?1 = v6239
    pf = v6240
    ?3 = v6241
    af = v6242
    ?5 = v6243
    zf = v6244
    sf = v6245
    tf = v6246
    if = v6247
    df = v6248
    of = v6249
    iopl0 = v6250
    iopl1 = v6251
    nt = v6252
    ?15 = v6253
    memory = {
        size=4; addr=v6228; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v6228-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v6386
    cx = v6387
    dx = v6388
    bx = v6389
    sp = v6390-0x4 [from 0x8048480:push   ebp]
    bp = v6391
    si = v6392
    di = v6393
    es = v6394
    cs = v6395
    ss = v6396
    ds = v6397
    fs = v6398
    gs = v6399
    cf = v6400
    ?1 = v6401
    pf = v6402
    ?3 = v6403
    af = v6404
    ?5 = v6405
    zf = v6406
    sf = v6407
    tf = v6408
    if = v6409
    df = v6410
    of = v6411
    iopl0 = v6412
    iopl1 = v6413
    nt = v6414
    ?15 = v6415
    memory = {
        size=4; addr=v6390-0x4 [from 0x8048480:push   ebp]; value=v6391
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v6386
    cx = v6387
    dx = v6388
    bx = v6389
    sp = v6390-0x4 [from 0x8048480:push   ebp]
    bp = v6390-0x4 [from 0x8048480:push   ebp]
    si = v6392
    di = v6393
    es = v6394
    cs = v6395
    ss = v6396
    ds = v6397
    fs = v6398
    gs = v6399
    cf = v6400
    ?1 = v6401
    pf = v6402
    ?3 = v6403
    af = v6404
    ?5 = v6405
    zf = v6406
    sf = v6407
    tf = v6408
    if = v6409
    df = v6410
    of = v6411
    iopl0 = v6412
    iopl1 = v6413
    nt = v6414
    ?15 = v6415
    memory = {
        size=4; addr=v6390-0x4 [from 0x8048480:push   ebp]; value=v6391
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v6386
    cx = v6387
    dx = v6388
    bx = v6389
    sp = v6390-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v6390-0x4 [from 0x8048480:push   ebp]
    si = v6392
    di = v6393
    es = v6394
    cs = v6395
    ss = v6396
    ds = v6397
    fs = v6398
    gs = v6399
    cf = -v6517-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v6401
    pf = -v6511-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v6403
    af = -v6515-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v6405
    zf = v6514 [from 0x8048483:sub    esp, 0x08]
    sf = v6513 [from 0x8048483:sub    esp, 0x08]
    tf = v6408
    if = v6409
    df = v6410
    of = v6521 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v6412
    iopl1 = v6413
    nt = v6414
    ?15 = v6415
    memory = {
        size=4; addr=v6390-0x4 [from 0x8048480:push   ebp]; value=v6391
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v6386
    cx = v6387
    dx = v6388
    bx = v6389
    sp = v6390-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v6390-0x4 [from 0x8048480:push   ebp]
    si = v6392
    di = v6393
    es = v6394
    cs = v6395
    ss = v6396
    ds = v6397
    fs = v6398
    gs = v6399
    cf = -v6517-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v6401
    pf = -v6581-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v6403
    af = v6585 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v6405
    zf = v6584 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v6583 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v6408
    if = v6409
    df = v6410
    of = v6588 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v6412
    iopl1 = v6413
    nt = v6414
    ?15 = v6415
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v6556+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6386
    cx = v6387
    dx = v6388
    bx = v6389
    sp = v6390-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v6390-0x4 [from 0x8048480:push   ebp]
    si = v6392
    di = v6393
    es = v6394
    cs = v6395
    ss = v6396
    ds = v6397
    fs = v6398
    gs = v6399
    cf = -v6517-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v6401
    pf = -v6581-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v6403
    af = v6585 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v6405
    zf = v6584 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v6583 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v6408
    if = v6409
    df = v6410
    of = v6588 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v6412
    iopl1 = v6413
    nt = v6414
    ?15 = v6415
    memory = {
        size=4; addr=v6390-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v6386
    cx = v6387
    dx = v6388
    bx = v6389
    sp = v6390-0x10 [from 0x8048493:call   0x08048300]
    bp = v6390-0x4 [from 0x8048480:push   ebp]
    si = v6392
    di = v6393
    es = v6394
    cs = v6395
    ss = v6396
    ds = v6397
    fs = v6398
    gs = v6399
    cf = -v6517-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v6401
    pf = -v6581-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v6403
    af = v6585 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v6405
    zf = v6584 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v6583 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v6408
    if = v6409
    df = v6410
    of = v6588 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v6412
    iopl1 = v6413
    nt = v6414
    ?15 = v6415
    memory = {
        size=4; addr=v6390-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v6390-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v6755
    cx = v6756
    dx = v6757
    bx = v6758
    sp = v6759
    bp = v6760
    si = v6761
    di = v6762
    es = v6763
    cs = v6764
    ss = v6765
    ds = v6766
    fs = v6767
    gs = v6768
    cf = v6769
    ?1 = v6770
    pf = v6771
    ?3 = v6772
    af = v6773
    ?5 = v6774
    zf = v6775
    sf = v6776
    tf = v6777
    if = v6778
    df = v6779
    of = v6780
    iopl0 = v6781
    iopl1 = v6782
    nt = v6783
    ?15 = v6784
    memory = {
        size=4; addr=v6759; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v6755
    cx = v6756
    dx = v6757
    bx = v6758
    sp = v6759-0x4 [from 0x804849f:call   0x08048320]
    bp = v6760
    si = v6761
    di = v6762
    es = v6763
    cs = v6764
    ss = v6765
    ds = v6766
    fs = v6767
    gs = v6768
    cf = v6769
    ?1 = v6770
    pf = v6771
    ?3 = v6772
    af = v6773
    ?5 = v6774
    zf = v6775
    sf = v6776
    tf = v6777
    if = v6778
    df = v6779
    of = v6780
    iopl0 = v6781
    iopl1 = v6782
    nt = v6783
    ?15 = v6784
    memory = {
        size=4; addr=v6759; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v6759-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    ax = v6917
    cx = v6918
    dx = v6919
    bx = v6920
    sp = v6921-0x4 [from 0x80484b0:push   ebp]
    bp = v6922
    si = v6923
    di = v6924
    es = v6925
    cs = v6926
    ss = v6927
    ds = v6928
    fs = v6929
    gs = v6930
    cf = v6931
    ?1 = v6932
    pf = v6933
    ?3 = v6934
    af = v6935
    ?5 = v6936
    zf = v6937
    sf = v6938
    tf = v6939
    if = v6940
    df = v6941
    of = v6942
    iopl0 = v6943
    iopl1 = v6944
    nt = v6945
    ?15 = v6946
    memory = {
        size=4; addr=v6921-0x4 [from 0x80484b0:push   ebp]; value=v6922
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v6917
    cx = v6918
    dx = v6919
    bx = v6920
    sp = v6921-0x4 [from 0x80484b0:push   ebp]
    bp = v6921-0x4 [from 0x80484b0:push   ebp]
    si = v6923
    di = v6924
    es = v6925
    cs = v6926
    ss = v6927
    ds = v6928
    fs = v6929
    gs = v6930
    cf = v6931
    ?1 = v6932
    pf = v6933
    ?3 = v6934
    af = v6935
    ?5 = v6936
    zf = v6937
    sf = v6938
    tf = v6939
    if = v6940
    df = v6941
    of = v6942
    iopl0 = v6943
    iopl1 = v6944
    nt = v6945
    ?15 = v6946
    memory = {
        size=4; addr=v6921-0x4 [from 0x80484b0:push   ebp]; value=v6922
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v6917
    cx = v6918
    dx = v6919
    bx = v6920
    sp = v6921-0x8 [from 0x80484b3:push   edi]
    bp = v6921-0x4 [from 0x80484b0:push   ebp]
    si = v6923
    di = v6924
    es = v6925
    cs = v6926
    ss = v6927
    ds = v6928
    fs = v6929
    gs = v6930
    cf = v6931
    ?1 = v6932
    pf = v6933
    ?3 = v6934
    af = v6935
    ?5 = v6936
    zf = v6937
    sf = v6938
    tf = v6939
    if = v6940
    df = v6941
    of = v6942
    iopl0 = v6943
    iopl1 = v6944
    nt = v6945
    ?15 = v6946
    memory = {
        size=4; addr=v6921-0x8 [from 0x80484b3:push   edi]; value=v6924
        size=4; addr=v6921-0x4 [from 0x80484b0:push   ebp]; value=v6922
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v6917
    cx = v6918
    dx = v6919
    bx = v6920
    sp = v6921-0xc [from 0x80484b4:push   esi]
    bp = v6921-0x4 [from 0x80484b0:push   ebp]
    si = v6923
    di = v6924
    es = v6925
    cs = v6926
    ss = v6927
    ds = v6928
    fs = v6929
    gs = v6930
    cf = v6931
    ?1 = v6932
    pf = v6933
    ?3 = v6934
    af = v6935
    ?5 = v6936
    zf = v6937
    sf = v6938
    tf = v6939
    if = v6940
    df = v6941
    of = v6942
    iopl0 = v6943
    iopl1 = v6944
    nt = v6945
    ?15 = v6946
    memory = {
        size=4; addr=v6921-0xc [from 0x80484b4:push   esi]; value=v6923
        size=4; addr=v6921-0x8 [from 0x80484b3:push   edi]; value=v6924
        size=4; addr=v6921-0x4 [from 0x80484b0:push   ebp]; value=v6922
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v6917
    cx = v6918
    dx = v6919
    bx = v6920
    sp = v6921-0x10 [from 0x80484b5:push   ebx]
    bp = v6921-0x4 [from 0x80484b0:push   ebp]
    si = v6923
    di = v6924
    es = v6925
    cs = v6926
    ss = v6927
    ds = v6928
    fs = v6929
    gs = v6930
    cf = v6931
    ?1 = v6932
    pf = v6933
    ?3 = v6934
    af = v6935
    ?5 = v6936
    zf = v6937
    sf = v6938
    tf = v6939
    if = v6940
    df = v6941
    of = v6942
    iopl0 = v6943
    iopl1 = v6944
    nt = v6945
    ?15 = v6946
    memory = {
        size=4; addr=v6921-0x10 [from 0x80484b5:push   ebx]; value=v6920
        size=4; addr=v6921-0xc [from 0x80484b4:push   esi]; value=v6923
        size=4; addr=v6921-0x8 [from 0x80484b3:push   edi]; value=v6924
        size=4; addr=v6921-0x4 [from 0x80484b0:push   ebp]; value=v6922
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v6917
    cx = v6918
    dx = v6919
    bx = v6920
    sp = v6921-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v6921-0x4 [from 0x80484b0:push   ebp]
    si = v6923
    di = v6924
    es = v6925
    cs = v6926
    ss = v6927
    ds = v6928
    fs = v6929
    gs = v6930
    cf = -v7156-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v6932
    pf = -v7150-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v6934
    af = -v7154-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v6936
    zf = v7153 [from 0x80484b6:sub    esp, 0x0c]
    sf = v7152 [from 0x80484b6:sub    esp, 0x0c]
    tf = v6939
    if = v6940
    df = v6941
    of = v7160 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v6943
    iopl1 = v6944
    nt = v6945
    ?15 = v6946
    memory = {
        size=4; addr=v6921-0x10 [from 0x80484b5:push   ebx]; value=v6920
        size=4; addr=v6921-0xc [from 0x80484b4:push   esi]; value=v6923
        size=4; addr=v6921-0x8 [from 0x80484b3:push   edi]; value=v6924
        size=4; addr=v6921-0x4 [from 0x80484b0:push   ebp]; value=v6922
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v6917
    cx = v6918
    dx = v6919
    bx = v6920
    sp = v6921-0x20 [from 0x80484b9:call   0x080484be]
    bp = v6921-0x4 [from 0x80484b0:push   ebp]
    si = v6923
    di = v6924
    es = v6925
    cs = v6926
    ss = v6927
    ds = v6928
    fs = v6929
    gs = v6930
    cf = -v7156-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v6932
    pf = -v7150-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v6934
    af = -v7154-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v6936
    zf = v7153 [from 0x80484b6:sub    esp, 0x0c]
    sf = v7152 [from 0x80484b6:sub    esp, 0x0c]
    tf = v6939
    if = v6940
    df = v6941
    of = v7160 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v6943
    iopl1 = v6944
    nt = v6945
    ?15 = v6946
    memory = {
        size=4; addr=v6921-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v6921-0x10 [from 0x80484b5:push   ebx]; value=v6920
        size=4; addr=v6921-0xc [from 0x80484b4:push   esi]; value=v6923
        size=4; addr=v6921-0x8 [from 0x80484b3:push   edi]; value=v6924
        size=4; addr=v6921-0x4 [from 0x80484b0:push   ebp]; value=v6922
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v7289
    cx = v7290
    dx = v7291
    bx = v7323 [from 0x80484be:pop    ebx]
    sp = v7293+0x4 [from 0x80484be:pop    ebx]
    bp = v7294
    si = v7295
    di = v7296
    es = v7297
    cs = v7298
    ss = v7299
    ds = v7300
    fs = v7301
    gs = v7302
    cf = v7303
    ?1 = v7304
    pf = v7305
    ?3 = v7306
    af = v7307
    ?5 = v7308
    zf = v7309
    sf = v7310
    tf = v7311
    if = v7312
    df = v7313
    of = v7314
    iopl0 = v7315
    iopl1 = v7316
    nt = v7317
    ?15 = v7318
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v7289
    cx = v7290
    dx = v7291
    bx = v7323+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v7293+0x4 [from 0x80484be:pop    ebx]
    bp = v7294
    si = v7295
    di = v7296
    es = v7297
    cs = v7298
    ss = v7299
    ds = v7300
    fs = v7301
    gs = v7302
    cf = v7385 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v7304
    pf = -v7380-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v7306
    af = v7384 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v7308
    zf = v7383 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v7382 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v7311
    if = v7312
    df = v7313
    of = v7388 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v7315
    iopl1 = v7316
    nt = v7317
    ?15 = v7318
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v7289
    cx = v7290
    dx = v7291
    bx = v7323+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v7293 [from 0x80484c5:call   0x080482c8]
    bp = v7294
    si = v7295
    di = v7296
    es = v7297
    cs = v7298
    ss = v7299
    ds = v7300
    fs = v7301
    gs = v7302
    cf = v7385 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v7304
    pf = -v7380-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v7306
    af = v7384 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v7308
    zf = v7383 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v7382 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v7311
    if = v7312
    df = v7313
    of = v7388 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v7315
    iopl1 = v7316
    nt = v7317
    ?15 = v7318
    memory = {
        size=4; addr=v7293 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v7520-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v7518
    dx = v7519
    bx = v7520
    sp = v7521
    bp = v7522
    si = v7523
    di = v7524
    es = v7525
    cs = v7526
    ss = v7527
    ds = v7528
    fs = v7529
    gs = v7530
    cf = v7531
    ?1 = v7532
    pf = v7533
    ?3 = v7534
    af = v7535
    ?5 = v7536
    zf = v7537
    sf = v7538
    tf = v7539
    if = v7540
    df = v7541
    of = v7542
    iopl0 = v7543
    iopl1 = v7544
    nt = v7545
    ?15 = v7546
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v7520-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v7518
    dx = v7520-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7520
    sp = v7521
    bp = v7522
    si = v7523
    di = v7524
    es = v7525
    cs = v7526
    ss = v7527
    ds = v7528
    fs = v7529
    gs = v7530
    cf = v7531
    ?1 = v7532
    pf = v7533
    ?3 = v7534
    af = v7535
    ?5 = v7536
    zf = v7537
    sf = v7538
    tf = v7539
    if = v7540
    df = v7541
    of = v7542
    iopl0 = v7543
    iopl1 = v7544
    nt = v7545
    ?15 = v7546
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v15040 [from 0x80484d6:sub    eax, edx]
    cx = v7518
    dx = v7520-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7520
    sp = v7521
    bp = v7522
    si = v7523
    di = v7524
    es = v7525
    cs = v7526
    ss = v7527
    ds = v7528
    fs = v7529
    gs = v7530
    cf = -v7647-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v7532
    pf = -v7641-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v7534
    af = -v7645-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v7536
    zf = v7644 [from 0x80484d6:sub    eax, edx]
    sf = v7643 [from 0x80484d6:sub    eax, edx]
    tf = v7539
    if = v7540
    df = v7541
    of = v7651 [from 0x80484d6:sub    eax, edx]
    iopl0 = v7543
    iopl1 = v7544
    nt = v7545
    ?15 = v7546
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v7690 [from 0x80484d8:sar    eax, 0x02]
    cx = v7518
    dx = v7520-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7520
    sp = v7521
    bp = v7522
    si = v7523
    di = v7524
    es = v7525
    cs = v7526
    ss = v7527
    ds = v7528
    fs = v7529
    gs = v7530
    cf = v7693 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v7532
    pf = -v7713-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v7534
    af = <top>
    ?5 = v7536
    zf = v7718 [from 0x80484d8:sar    eax, 0x02]
    sf = v7716 [from 0x80484d8:sar    eax, 0x02]
    tf = v7539
    if = v7540
    df = v7541
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v7543
    iopl1 = v7544
    nt = v7545
    ?15 = v7546
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v7690 [from 0x80484d8:sar    eax, 0x02]
    cx = v7518
    dx = v7520-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7520
    sp = v7521
    bp = v7522
    si = v7523
    di = v7524
    es = v7525
    cs = v7526
    ss = v7527
    ds = v7528
    fs = v7529
    gs = v7530
    cf = v7693 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v7532
    pf = -v7713-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v7534
    af = <top>
    ?5 = v7536
    zf = v7718 [from 0x80484d8:sar    eax, 0x02]
    sf = v7716 [from 0x80484d8:sar    eax, 0x02]
    tf = v7539
    if = v7540
    df = v7541
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v7543
    iopl1 = v7544
    nt = v7545
    ?15 = v7546
    memory = {
        size=4; addr=v7522-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v7690 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v7690 [from 0x80484d8:sar    eax, 0x02]
    cx = v7518
    dx = v7520-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7520
    sp = v7521
    bp = v7522
    si = v7523
    di = v7524
    es = v7525
    cs = v7526
    ss = v7527
    ds = v7528
    fs = v7529
    gs = v7530
    cf = v7693 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v7532
    pf = -v7713-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v7534
    af = <top>
    ?5 = v7536
    zf = v7718 [from 0x80484d8:sar    eax, 0x02]
    sf = v7716 [from 0x80484d8:sar    eax, 0x02]
    tf = v7539
    if = v7540
    df = v7541
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v7543
    iopl1 = v7544
    nt = v7545
    ?15 = v7546
    memory = {
        size=4; addr=v7522-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v7690 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v7790 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v7912
    cx = v7913
    dx = v7914
    bx = v7915
    sp = v7916+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v7917
    si = v7918
    di = v7919
    es = v7920
    cs = v7921
    ss = v7922
    ds = v7923
    fs = v7924
    gs = v7925
    cf = v7972 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v7927
    pf = -v7967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v7929
    af = v7971 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v7931
    zf = v7970 [from 0x80484e0:add    esp, 0x0c]
    sf = v7969 [from 0x80484e0:add    esp, 0x0c]
    tf = v7934
    if = v7935
    df = v7936
    of = v7975 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v7938
    iopl1 = v7939
    nt = v7940
    ?15 = v7941
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v7912
    cx = v7913
    dx = v7914
    bx = v8011 [from 0x80484e3:pop    ebx]
    sp = v7916+0x10 [from 0x80484e3:pop    ebx]
    bp = v7917
    si = v7918
    di = v7919
    es = v7920
    cs = v7921
    ss = v7922
    ds = v7923
    fs = v7924
    gs = v7925
    cf = v7972 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v7927
    pf = -v7967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v7929
    af = v7971 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v7931
    zf = v7970 [from 0x80484e0:add    esp, 0x0c]
    sf = v7969 [from 0x80484e0:add    esp, 0x0c]
    tf = v7934
    if = v7935
    df = v7936
    of = v7975 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v7938
    iopl1 = v7939
    nt = v7940
    ?15 = v7941
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v7912
    cx = v7913
    dx = v7914
    bx = v8011 [from 0x80484e3:pop    ebx]
    sp = v7916+0x14 [from 0x80484e4:pop    esi]
    bp = v7917
    si = v8047 [from 0x80484e4:pop    esi]
    di = v7919
    es = v7920
    cs = v7921
    ss = v7922
    ds = v7923
    fs = v7924
    gs = v7925
    cf = v7972 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v7927
    pf = -v7967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v7929
    af = v7971 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v7931
    zf = v7970 [from 0x80484e0:add    esp, 0x0c]
    sf = v7969 [from 0x80484e0:add    esp, 0x0c]
    tf = v7934
    if = v7935
    df = v7936
    of = v7975 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v7938
    iopl1 = v7939
    nt = v7940
    ?15 = v7941
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v7912
    cx = v7913
    dx = v7914
    bx = v8011 [from 0x80484e3:pop    ebx]
    sp = v7916+0x18 [from 0x80484e5:pop    edi]
    bp = v7917
    si = v8047 [from 0x80484e4:pop    esi]
    di = v8083 [from 0x80484e5:pop    edi]
    es = v7920
    cs = v7921
    ss = v7922
    ds = v7923
    fs = v7924
    gs = v7925
    cf = v7972 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v7927
    pf = -v7967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v7929
    af = v7971 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v7931
    zf = v7970 [from 0x80484e0:add    esp, 0x0c]
    sf = v7969 [from 0x80484e0:add    esp, 0x0c]
    tf = v7934
    if = v7935
    df = v7936
    of = v7975 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v7938
    iopl1 = v7939
    nt = v7940
    ?15 = v7941
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v7912
    cx = v7913
    dx = v7914
    bx = v8011 [from 0x80484e3:pop    ebx]
    sp = v7916+0x1c [from 0x80484e6:pop    ebp]
    bp = v8119 [from 0x80484e6:pop    ebp]
    si = v8047 [from 0x80484e4:pop    esi]
    di = v8083 [from 0x80484e5:pop    edi]
    es = v7920
    cs = v7921
    ss = v7922
    ds = v7923
    fs = v7924
    gs = v7925
    cf = v7972 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v7927
    pf = -v7967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v7929
    af = v7971 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v7931
    zf = v7970 [from 0x80484e0:add    esp, 0x0c]
    sf = v7969 [from 0x80484e0:add    esp, 0x0c]
    tf = v7934
    if = v7935
    df = v7936
    of = v7975 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v7938
    iopl1 = v7939
    nt = v7940
    ?15 = v7941
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v7912
    cx = v7913
    dx = v7914
    bx = v8011 [from 0x80484e3:pop    ebx]
    sp = v7916+0x20 [from 0x80484e7:ret    ]
    bp = v8119 [from 0x80484e6:pop    ebp]
    si = v8047 [from 0x80484e4:pop    esi]
    di = v8083 [from 0x80484e5:pop    edi]
    es = v7920
    cs = v7921
    ss = v7922
    ds = v7923
    fs = v7924
    gs = v7925
    cf = v7972 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v7927
    pf = -v7967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v7929
    af = v7971 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v7931
    zf = v7970 [from 0x80484e0:add    esp, 0x0c]
    sf = v7969 [from 0x80484e0:add    esp, 0x0c]
    tf = v7934
    if = v7935
    df = v7936
    of = v7975 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v7938
    iopl1 = v7939
    nt = v7940
    ?15 = v7941
    memory = {}
    ip = v8157 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v8219
    cx = v8220
    dx = v8221
    bx = v8222
    sp = v8223-0x4 [from 0x8048520:push   ebp]
    bp = v8224
    si = v8225
    di = v8226
    es = v8227
    cs = v8228
    ss = v8229
    ds = v8230
    fs = v8231
    gs = v8232
    cf = v8233
    ?1 = v8234
    pf = v8235
    ?3 = v8236
    af = v8237
    ?5 = v8238
    zf = v8239
    sf = v8240
    tf = v8241
    if = v8242
    df = v8243
    of = v8244
    iopl0 = v8245
    iopl1 = v8246
    nt = v8247
    ?15 = v8248
    memory = {
        size=4; addr=v8223-0x4 [from 0x8048520:push   ebp]; value=v8224
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v8219
    cx = v8220
    dx = v8221
    bx = v8222
    sp = v8223-0x4 [from 0x8048520:push   ebp]
    bp = v8223-0x4 [from 0x8048520:push   ebp]
    si = v8225
    di = v8226
    es = v8227
    cs = v8228
    ss = v8229
    ds = v8230
    fs = v8231
    gs = v8232
    cf = v8233
    ?1 = v8234
    pf = v8235
    ?3 = v8236
    af = v8237
    ?5 = v8238
    zf = v8239
    sf = v8240
    tf = v8241
    if = v8242
    df = v8243
    of = v8244
    iopl0 = v8245
    iopl1 = v8246
    nt = v8247
    ?15 = v8248
    memory = {
        size=4; addr=v8223-0x4 [from 0x8048520:push   ebp]; value=v8224
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v8219
    cx = v8220
    dx = v8221
    bx = v8222
    sp = v8223-0x8 [from 0x8048523:push   edi]
    bp = v8223-0x4 [from 0x8048520:push   ebp]
    si = v8225
    di = v8226
    es = v8227
    cs = v8228
    ss = v8229
    ds = v8230
    fs = v8231
    gs = v8232
    cf = v8233
    ?1 = v8234
    pf = v8235
    ?3 = v8236
    af = v8237
    ?5 = v8238
    zf = v8239
    sf = v8240
    tf = v8241
    if = v8242
    df = v8243
    of = v8244
    iopl0 = v8245
    iopl1 = v8246
    nt = v8247
    ?15 = v8248
    memory = {
        size=4; addr=v8223-0x8 [from 0x8048523:push   edi]; value=v8226
        size=4; addr=v8223-0x4 [from 0x8048520:push   ebp]; value=v8224
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v8219
    cx = v8220
    dx = v8221
    bx = v8222
    sp = v8223-0xc [from 0x8048524:push   esi]
    bp = v8223-0x4 [from 0x8048520:push   ebp]
    si = v8225
    di = v8226
    es = v8227
    cs = v8228
    ss = v8229
    ds = v8230
    fs = v8231
    gs = v8232
    cf = v8233
    ?1 = v8234
    pf = v8235
    ?3 = v8236
    af = v8237
    ?5 = v8238
    zf = v8239
    sf = v8240
    tf = v8241
    if = v8242
    df = v8243
    of = v8244
    iopl0 = v8245
    iopl1 = v8246
    nt = v8247
    ?15 = v8248
    memory = {
        size=4; addr=v8223-0xc [from 0x8048524:push   esi]; value=v8225
        size=4; addr=v8223-0x8 [from 0x8048523:push   edi]; value=v8226
        size=4; addr=v8223-0x4 [from 0x8048520:push   ebp]; value=v8224
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v8219
    cx = v8220
    dx = v8221
    bx = v8222
    sp = v8223-0x10 [from 0x8048525:push   ebx]
    bp = v8223-0x4 [from 0x8048520:push   ebp]
    si = v8225
    di = v8226
    es = v8227
    cs = v8228
    ss = v8229
    ds = v8230
    fs = v8231
    gs = v8232
    cf = v8233
    ?1 = v8234
    pf = v8235
    ?3 = v8236
    af = v8237
    ?5 = v8238
    zf = v8239
    sf = v8240
    tf = v8241
    if = v8242
    df = v8243
    of = v8244
    iopl0 = v8245
    iopl1 = v8246
    nt = v8247
    ?15 = v8248
    memory = {
        size=4; addr=v8223-0x10 [from 0x8048525:push   ebx]; value=v8222
        size=4; addr=v8223-0xc [from 0x8048524:push   esi]; value=v8225
        size=4; addr=v8223-0x8 [from 0x8048523:push   edi]; value=v8226
        size=4; addr=v8223-0x4 [from 0x8048520:push   ebp]; value=v8224
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v8219
    cx = v8220
    dx = v8221
    bx = v8222
    sp = v8223-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v8223-0x4 [from 0x8048520:push   ebp]
    si = v8225
    di = v8226
    es = v8227
    cs = v8228
    ss = v8229
    ds = v8230
    fs = v8231
    gs = v8232
    cf = -v8458-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v8234
    pf = -v8452-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v8236
    af = -v8456-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v8238
    zf = v8455 [from 0x8048526:sub    esp, 0x0c]
    sf = v8454 [from 0x8048526:sub    esp, 0x0c]
    tf = v8241
    if = v8242
    df = v8243
    of = v8462 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v8245
    iopl1 = v8246
    nt = v8247
    ?15 = v8248
    memory = {
        size=4; addr=v8223-0x10 [from 0x8048525:push   ebx]; value=v8222
        size=4; addr=v8223-0xc [from 0x8048524:push   esi]; value=v8225
        size=4; addr=v8223-0x8 [from 0x8048523:push   edi]; value=v8226
        size=4; addr=v8223-0x4 [from 0x8048520:push   ebp]; value=v8224
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v8219
    cx = v8220
    dx = v8221
    bx = v8222
    sp = v8223-0x20 [from 0x8048529:call   0x0804852e]
    bp = v8223-0x4 [from 0x8048520:push   ebp]
    si = v8225
    di = v8226
    es = v8227
    cs = v8228
    ss = v8229
    ds = v8230
    fs = v8231
    gs = v8232
    cf = -v8458-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v8234
    pf = -v8452-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v8236
    af = -v8456-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v8238
    zf = v8455 [from 0x8048526:sub    esp, 0x0c]
    sf = v8454 [from 0x8048526:sub    esp, 0x0c]
    tf = v8241
    if = v8242
    df = v8243
    of = v8462 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v8245
    iopl1 = v8246
    nt = v8247
    ?15 = v8248
    memory = {
        size=4; addr=v8223-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v8223-0x10 [from 0x8048525:push   ebx]; value=v8222
        size=4; addr=v8223-0xc [from 0x8048524:push   esi]; value=v8225
        size=4; addr=v8223-0x8 [from 0x8048523:push   edi]; value=v8226
        size=4; addr=v8223-0x4 [from 0x8048520:push   ebp]; value=v8224
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v8591
    cx = v8592
    dx = v8593
    bx = v8625 [from 0x804852e:pop    ebx]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = v8605
    ?1 = v8606
    pf = v8607
    ?3 = v8608
    af = v8609
    ?5 = v8610
    zf = v8611
    sf = v8612
    tf = v8613
    if = v8614
    df = v8615
    of = v8616
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v8591
    cx = v8592
    dx = v8593
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = v8687 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v8606
    pf = -v8682-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v8608
    af = v8686 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v8610
    zf = v8685 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v8684 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v8613
    if = v8614
    df = v8615
    of = v8690 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8625+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8592
    dx = v8593
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = v8687 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v8606
    pf = -v8682-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v8608
    af = v8686 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v8610
    zf = v8685 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v8684 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v8613
    if = v8614
    df = v8615
    of = v8690 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8625+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8592
    dx = v8625+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = v8687 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v8606
    pf = -v8682-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v8608
    af = v8686 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v8610
    zf = v8685 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v8684 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v8613
    if = v8614
    df = v8615
    of = v8690 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v17250 [from 0x8048541:sub    eax, edx]
    cx = v8592
    dx = v8625+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = -v8822-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v8606
    pf = -v8816-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v8608
    af = -v8820-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v8610
    zf = v8819 [from 0x8048541:sub    eax, edx]
    sf = v8818 [from 0x8048541:sub    eax, edx]
    tf = v8613
    if = v8614
    df = v8615
    of = v8826 [from 0x8048541:sub    eax, edx]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v8865 [from 0x8048543:sar    eax, 0x02]
    cx = v8592
    dx = v8625+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = v8868 [from 0x8048543:sar    eax, 0x02]
    ?1 = v8606
    pf = -v8888-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v8608
    af = <top>
    ?5 = v8610
    zf = v8893 [from 0x8048543:sar    eax, 0x02]
    sf = v8891 [from 0x8048543:sar    eax, 0x02]
    tf = v8613
    if = v8614
    df = v8615
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v8865 [from 0x8048543:sar    eax, 0x02]
    cx = v8592
    dx = v8625+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = v8868 [from 0x8048543:sar    eax, 0x02]
    ?1 = v8606
    pf = -v8888-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v8608
    af = <top>
    ?5 = v8610
    zf = v8893 [from 0x8048543:sar    eax, 0x02]
    sf = v8891 [from 0x8048543:sar    eax, 0x02]
    tf = v8613
    if = v8614
    df = v8615
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {
        size=4; addr=v8596-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8865 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v8865-0x1 [from 0x8048549:dec    eax]
    cx = v8592
    dx = v8625+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = v8868 [from 0x8048543:sar    eax, 0x02]
    ?1 = v8606
    pf = -v8987-0x1 [from 0x8048549:dec    eax]
    ?3 = v8608
    af = -v8991-0x1 [from 0x8048549:dec    eax]
    ?5 = v8610
    zf = v8990 [from 0x8048549:dec    eax]
    sf = v8989 [from 0x8048549:dec    eax]
    tf = v8613
    if = v8614
    df = v8615
    of = v8995 [from 0x8048549:dec    eax]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {
        size=4; addr=v8596-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8865 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v8865-0x1 [from 0x8048549:dec    eax]
    cx = v8592
    dx = v8625+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = -v9060-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v8606
    pf = -v9054-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v8608
    af = -v9058-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v8610
    zf = v9057 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v9056 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v8613
    if = v8614
    df = v8615
    of = v9064 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {
        size=4; addr=v8596-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8865 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v8865-0x1 [from 0x8048549:dec    eax]
    cx = v8592
    dx = v8625+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8625+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8595+0x4 [from 0x804852e:pop    ebx]
    bp = v8596
    si = v8597
    di = v8598
    es = v8599
    cs = v8600
    ss = v8601
    ds = v8602
    fs = v8603
    gs = v8604
    cf = -v9060-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v8606
    pf = -v9054-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v8608
    af = -v9058-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v8610
    zf = v9057 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v9056 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v8613
    if = v8614
    df = v8615
    of = v9064 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v8617
    iopl1 = v8618
    nt = v8619
    ?15 = v8620
    memory = {
        size=4; addr=v8596-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8865 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v9098 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v9220
    cx = v9221
    dx = v9222
    bx = v9223
    sp = v9224-0x4 [from 0x804856b:call   0x080485b0]
    bp = v9225
    si = v9226
    di = v9227
    es = v9228
    cs = v9229
    ss = v9230
    ds = v9231
    fs = v9232
    gs = v9233
    cf = v9234
    ?1 = v9235
    pf = v9236
    ?3 = v9237
    af = v9238
    ?5 = v9239
    zf = v9240
    sf = v9241
    tf = v9242
    if = v9243
    df = v9244
    of = v9245
    iopl0 = v9246
    iopl1 = v9247
    nt = v9248
    ?15 = v9249
    memory = {
        size=4; addr=v9224-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v9347
    cx = v9348
    dx = v9349
    bx = v9350
    sp = v9351+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v9352
    si = v9353
    di = v9354
    es = v9355
    cs = v9356
    ss = v9357
    ds = v9358
    fs = v9359
    gs = v9360
    cf = v9407 [from 0x8048570:add    esp, 0x0c]
    ?1 = v9362
    pf = -v9402-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v9364
    af = v9406 [from 0x8048570:add    esp, 0x0c]
    ?5 = v9366
    zf = v9405 [from 0x8048570:add    esp, 0x0c]
    sf = v9404 [from 0x8048570:add    esp, 0x0c]
    tf = v9369
    if = v9370
    df = v9371
    of = v9410 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v9373
    iopl1 = v9374
    nt = v9375
    ?15 = v9376
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v9347
    cx = v9348
    dx = v9349
    bx = v9446 [from 0x8048573:pop    ebx]
    sp = v9351+0x10 [from 0x8048573:pop    ebx]
    bp = v9352
    si = v9353
    di = v9354
    es = v9355
    cs = v9356
    ss = v9357
    ds = v9358
    fs = v9359
    gs = v9360
    cf = v9407 [from 0x8048570:add    esp, 0x0c]
    ?1 = v9362
    pf = -v9402-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v9364
    af = v9406 [from 0x8048570:add    esp, 0x0c]
    ?5 = v9366
    zf = v9405 [from 0x8048570:add    esp, 0x0c]
    sf = v9404 [from 0x8048570:add    esp, 0x0c]
    tf = v9369
    if = v9370
    df = v9371
    of = v9410 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v9373
    iopl1 = v9374
    nt = v9375
    ?15 = v9376
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v9347
    cx = v9348
    dx = v9349
    bx = v9446 [from 0x8048573:pop    ebx]
    sp = v9351+0x14 [from 0x8048574:pop    esi]
    bp = v9352
    si = v9482 [from 0x8048574:pop    esi]
    di = v9354
    es = v9355
    cs = v9356
    ss = v9357
    ds = v9358
    fs = v9359
    gs = v9360
    cf = v9407 [from 0x8048570:add    esp, 0x0c]
    ?1 = v9362
    pf = -v9402-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v9364
    af = v9406 [from 0x8048570:add    esp, 0x0c]
    ?5 = v9366
    zf = v9405 [from 0x8048570:add    esp, 0x0c]
    sf = v9404 [from 0x8048570:add    esp, 0x0c]
    tf = v9369
    if = v9370
    df = v9371
    of = v9410 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v9373
    iopl1 = v9374
    nt = v9375
    ?15 = v9376
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v9347
    cx = v9348
    dx = v9349
    bx = v9446 [from 0x8048573:pop    ebx]
    sp = v9351+0x18 [from 0x8048575:pop    edi]
    bp = v9352
    si = v9482 [from 0x8048574:pop    esi]
    di = v9518 [from 0x8048575:pop    edi]
    es = v9355
    cs = v9356
    ss = v9357
    ds = v9358
    fs = v9359
    gs = v9360
    cf = v9407 [from 0x8048570:add    esp, 0x0c]
    ?1 = v9362
    pf = -v9402-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v9364
    af = v9406 [from 0x8048570:add    esp, 0x0c]
    ?5 = v9366
    zf = v9405 [from 0x8048570:add    esp, 0x0c]
    sf = v9404 [from 0x8048570:add    esp, 0x0c]
    tf = v9369
    if = v9370
    df = v9371
    of = v9410 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v9373
    iopl1 = v9374
    nt = v9375
    ?15 = v9376
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v9347
    cx = v9348
    dx = v9349
    bx = v9446 [from 0x8048573:pop    ebx]
    sp = v9351+0x1c [from 0x8048576:pop    ebp]
    bp = v9554 [from 0x8048576:pop    ebp]
    si = v9482 [from 0x8048574:pop    esi]
    di = v9518 [from 0x8048575:pop    edi]
    es = v9355
    cs = v9356
    ss = v9357
    ds = v9358
    fs = v9359
    gs = v9360
    cf = v9407 [from 0x8048570:add    esp, 0x0c]
    ?1 = v9362
    pf = -v9402-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v9364
    af = v9406 [from 0x8048570:add    esp, 0x0c]
    ?5 = v9366
    zf = v9405 [from 0x8048570:add    esp, 0x0c]
    sf = v9404 [from 0x8048570:add    esp, 0x0c]
    tf = v9369
    if = v9370
    df = v9371
    of = v9410 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v9373
    iopl1 = v9374
    nt = v9375
    ?15 = v9376
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v9347
    cx = v9348
    dx = v9349
    bx = v9446 [from 0x8048573:pop    ebx]
    sp = v9351+0x20 [from 0x8048577:ret    ]
    bp = v9554 [from 0x8048576:pop    ebp]
    si = v9482 [from 0x8048574:pop    esi]
    di = v9518 [from 0x8048575:pop    edi]
    es = v9355
    cs = v9356
    ss = v9357
    ds = v9358
    fs = v9359
    gs = v9360
    cf = v9407 [from 0x8048570:add    esp, 0x0c]
    ?1 = v9362
    pf = -v9402-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v9364
    af = v9406 [from 0x8048570:add    esp, 0x0c]
    ?5 = v9366
    zf = v9405 [from 0x8048570:add    esp, 0x0c]
    sf = v9404 [from 0x8048570:add    esp, 0x0c]
    tf = v9369
    if = v9370
    df = v9371
    of = v9410 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v9373
    iopl1 = v9374
    nt = v9375
    ?15 = v9376
    memory = {}
    ip = v9592 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    ax = v9654
    cx = v9655
    dx = v9656
    bx = v9657
    sp = v9658-0x4 [from 0x8048580:push   ebp]
    bp = v9659
    si = v9660
    di = v9661
    es = v9662
    cs = v9663
    ss = v9664
    ds = v9665
    fs = v9666
    gs = v9667
    cf = v9668
    ?1 = v9669
    pf = v9670
    ?3 = v9671
    af = v9672
    ?5 = v9673
    zf = v9674
    sf = v9675
    tf = v9676
    if = v9677
    df = v9678
    of = v9679
    iopl0 = v9680
    iopl1 = v9681
    nt = v9682
    ?15 = v9683
    memory = {
        size=4; addr=v9658-0x4 [from 0x8048580:push   ebp]; value=v9659
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v9654
    cx = v9655
    dx = v9656
    bx = v9657
    sp = v9658-0x4 [from 0x8048580:push   ebp]
    bp = v9658-0x4 [from 0x8048580:push   ebp]
    si = v9660
    di = v9661
    es = v9662
    cs = v9663
    ss = v9664
    ds = v9665
    fs = v9666
    gs = v9667
    cf = v9668
    ?1 = v9669
    pf = v9670
    ?3 = v9671
    af = v9672
    ?5 = v9673
    zf = v9674
    sf = v9675
    tf = v9676
    if = v9677
    df = v9678
    of = v9679
    iopl0 = v9680
    iopl1 = v9681
    nt = v9682
    ?15 = v9683
    memory = {
        size=4; addr=v9658-0x4 [from 0x8048580:push   ebp]; value=v9659
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v9654
    cx = v9655
    dx = v9656
    bx = v9657
    sp = v9658-0x8 [from 0x8048583:push   ebx]
    bp = v9658-0x4 [from 0x8048580:push   ebp]
    si = v9660
    di = v9661
    es = v9662
    cs = v9663
    ss = v9664
    ds = v9665
    fs = v9666
    gs = v9667
    cf = v9668
    ?1 = v9669
    pf = v9670
    ?3 = v9671
    af = v9672
    ?5 = v9673
    zf = v9674
    sf = v9675
    tf = v9676
    if = v9677
    df = v9678
    of = v9679
    iopl0 = v9680
    iopl1 = v9681
    nt = v9682
    ?15 = v9683
    memory = {
        size=4; addr=v9658-0x8 [from 0x8048583:push   ebx]; value=v9657
        size=4; addr=v9658-0x4 [from 0x8048580:push   ebp]; value=v9659
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v9654
    cx = v9655
    dx = v9656
    bx = v9657
    sp = v9658-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v9658-0x4 [from 0x8048580:push   ebp]
    si = v9660
    di = v9661
    es = v9662
    cs = v9663
    ss = v9664
    ds = v9665
    fs = v9666
    gs = v9667
    cf = -v9821-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v9669
    pf = -v9815-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v9671
    af = -v9819-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v9673
    zf = v9818 [from 0x8048584:sub    esp, 0x04]
    sf = v9817 [from 0x8048584:sub    esp, 0x04]
    tf = v9676
    if = v9677
    df = v9678
    of = v9825 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v9680
    iopl1 = v9681
    nt = v9682
    ?15 = v9683
    memory = {
        size=4; addr=v9658-0x8 [from 0x8048583:push   ebx]; value=v9657
        size=4; addr=v9658-0x4 [from 0x8048580:push   ebp]; value=v9659
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v9654
    cx = v9655
    dx = v9656
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v9658-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v9658-0x4 [from 0x8048580:push   ebp]
    si = v9660
    di = v9661
    es = v9662
    cs = v9663
    ss = v9664
    ds = v9665
    fs = v9666
    gs = v9667
    cf = -v9821-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v9669
    pf = -v9815-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v9671
    af = -v9819-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v9673
    zf = v9818 [from 0x8048584:sub    esp, 0x04]
    sf = v9817 [from 0x8048584:sub    esp, 0x04]
    tf = v9676
    if = v9677
    df = v9678
    of = v9825 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v9680
    iopl1 = v9681
    nt = v9682
    ?15 = v9683
    memory = {
        size=4; addr=v9658-0x8 [from 0x8048583:push   ebx]; value=v9657
        size=4; addr=v9658-0x4 [from 0x8048580:push   ebp]; value=v9659
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v9893 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v9655
    dx = v9656
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v9658-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v9658-0x4 [from 0x8048580:push   ebp]
    si = v9660
    di = v9661
    es = v9662
    cs = v9663
    ss = v9664
    ds = v9665
    fs = v9666
    gs = v9667
    cf = -v9821-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v9669
    pf = -v9815-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v9671
    af = -v9819-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v9673
    zf = v9818 [from 0x8048584:sub    esp, 0x04]
    sf = v9817 [from 0x8048584:sub    esp, 0x04]
    tf = v9676
    if = v9677
    df = v9678
    of = v9825 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v9680
    iopl1 = v9681
    nt = v9682
    ?15 = v9683
    memory = {
        size=4; addr=v9658-0x8 [from 0x8048583:push   ebx]; value=v9657
        size=4; addr=v9658-0x4 [from 0x8048580:push   ebp]; value=v9659
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v9893 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v9655
    dx = v9656
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v9658-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v9658-0x4 [from 0x8048580:push   ebp]
    si = v9660
    di = v9661
    es = v9662
    cs = v9663
    ss = v9664
    ds = v9665
    fs = v9666
    gs = v9667
    cf = -v9958-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v9669
    pf = -v9952-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v9671
    af = -v9956-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v9673
    zf = v9955 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v9954 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v9676
    if = v9677
    df = v9678
    of = v9962 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v9680
    iopl1 = v9681
    nt = v9682
    ?15 = v9683
    memory = {
        size=4; addr=v9658-0x8 [from 0x8048583:push   ebx]; value=v9657
        size=4; addr=v9658-0x4 [from 0x8048580:push   ebp]; value=v9659
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v9893 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v9655
    dx = v9656
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v9658-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v9658-0x4 [from 0x8048580:push   ebp]
    si = v9660
    di = v9661
    es = v9662
    cs = v9663
    ss = v9664
    ds = v9665
    fs = v9666
    gs = v9667
    cf = -v9958-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v9669
    pf = -v9952-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v9671
    af = -v9956-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v9673
    zf = v9955 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v9954 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v9676
    if = v9677
    df = v9678
    of = v9962 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v9680
    iopl1 = v9681
    nt = v9682
    ?15 = v9683
    memory = {
        size=4; addr=v9658-0x8 [from 0x8048583:push   ebx]; value=v9657
        size=4; addr=v9658-0x4 [from 0x8048580:push   ebp]; value=v9659
    }
    ip = v9996 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v10118
    cx = v10119
    dx = v10120
    bx = v10121
    sp = v10122
    bp = v10123
    si = v10124 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v10125
    es = v10126
    cs = v10127
    ss = v10128
    ds = v10129
    fs = v10130
    gs = v10131
    cf = v10132
    ?1 = v10133
    pf = v10134
    ?3 = v10135
    af = v10136
    ?5 = v10137
    zf = v10138
    sf = v10139
    tf = v10140
    if = v10141
    df = v10142
    of = v10143
    iopl0 = v10144
    iopl1 = v10145
    nt = v10146
    ?15 = v10147
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v10118
    cx = v10119
    dx = v10120
    bx = v10121
    sp = v10122
    bp = v10123
    si = v10124 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v10125 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v10126
    cs = v10127
    ss = v10128
    ds = v10129
    fs = v10130
    gs = v10131
    cf = v10132
    ?1 = v10133
    pf = v10134
    ?3 = v10135
    af = v10136
    ?5 = v10137
    zf = v10138
    sf = v10139
    tf = v10140
    if = v10141
    df = v10142
    of = v10143
    iopl0 = v10144
    iopl1 = v10145
    nt = v10146
    ?15 = v10147
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v10118
    cx = v10119
    dx = v10120
    bx = v10121-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v10122
    bp = v10123
    si = v10124 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v10125 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v10126
    cs = v10127
    ss = v10128
    ds = v10129
    fs = v10130
    gs = v10131
    cf = -v10249-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v10133
    pf = -v10243-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v10135
    af = -v10247-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v10137
    zf = v10246 [from 0x80485a0:sub    ebx, 0x04]
    sf = v10245 [from 0x80485a0:sub    ebx, 0x04]
    tf = v10140
    if = v10141
    df = v10142
    of = v10253 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v10144
    iopl1 = v10145
    nt = v10146
    ?15 = v10147
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v10118
    cx = v10119
    dx = v10120
    bx = v10121-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v10122-0x4 [from 0x80485a3:call   eax]
    bp = v10123
    si = v10124 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v10125 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v10126
    cs = v10127
    ss = v10128
    ds = v10129
    fs = v10130
    gs = v10131
    cf = -v10249-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v10133
    pf = -v10243-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v10135
    af = -v10247-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v10137
    zf = v10246 [from 0x80485a0:sub    ebx, 0x04]
    sf = v10245 [from 0x80485a0:sub    ebx, 0x04]
    tf = v10140
    if = v10141
    df = v10142
    of = v10253 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v10144
    iopl1 = v10145
    nt = v10146
    ?15 = v10147
    memory = {
        size=4; addr=v10122-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v10118
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v10383 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v10352
    dx = v10353
    bx = v10354
    sp = v10355
    bp = v10356
    si = v10357
    di = v10358
    es = v10359
    cs = v10360
    ss = v10361
    ds = v10362
    fs = v10363
    gs = v10364
    cf = v10365
    ?1 = v10366
    pf = v10367
    ?3 = v10368
    af = v10369
    ?5 = v10370
    zf = v10371
    sf = v10372
    tf = v10373
    if = v10374
    df = v10375
    of = v10376
    iopl0 = v10377
    iopl1 = v10378
    nt = v10379
    ?15 = v10380
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v10383 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v10352
    dx = v10353
    bx = v10354
    sp = v10355
    bp = v10356
    si = v10357
    di = v10358
    es = v10359
    cs = v10360
    ss = v10361
    ds = v10362
    fs = v10363
    gs = v10364
    cf = -v10448-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v10366
    pf = -v10442-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v10368
    af = -v10446-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v10370
    zf = v10445 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v10444 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v10373
    if = v10374
    df = v10375
    of = v10452 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v10377
    iopl1 = v10378
    nt = v10379
    ?15 = v10380
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v10383 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v10352
    dx = v10353
    bx = v10354
    sp = v10355
    bp = v10356
    si = v10357
    di = v10358
    es = v10359
    cs = v10360
    ss = v10361
    ds = v10362
    fs = v10363
    gs = v10364
    cf = -v10448-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v10366
    pf = -v10442-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v10368
    af = -v10446-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v10370
    zf = v10445 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v10444 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v10373
    if = v10374
    df = v10375
    of = v10452 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v10377
    iopl1 = v10378
    nt = v10379
    ?15 = v10380
    memory = {}
    ip = v10487 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v10643 [from 0x80485ac:pop    eax]
    cx = v10610
    dx = v10611
    bx = v10612
    sp = v10613+0x4 [from 0x80485ac:pop    eax]
    bp = v10614
    si = v10615
    di = v10616
    es = v10617
    cs = v10618
    ss = v10619
    ds = v10620
    fs = v10621
    gs = v10622
    cf = v10623
    ?1 = v10624
    pf = v10625
    ?3 = v10626
    af = v10627
    ?5 = v10628
    zf = v10629
    sf = v10630
    tf = v10631
    if = v10632
    df = v10633
    of = v10634
    iopl0 = v10635
    iopl1 = v10636
    nt = v10637
    ?15 = v10638
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v10643 [from 0x80485ac:pop    eax]
    cx = v10610
    dx = v10611
    bx = v10679 [from 0x80485ad:pop    ebx]
    sp = v10613+0x8 [from 0x80485ad:pop    ebx]
    bp = v10614
    si = v10615
    di = v10616
    es = v10617
    cs = v10618
    ss = v10619
    ds = v10620
    fs = v10621
    gs = v10622
    cf = v10623
    ?1 = v10624
    pf = v10625
    ?3 = v10626
    af = v10627
    ?5 = v10628
    zf = v10629
    sf = v10630
    tf = v10631
    if = v10632
    df = v10633
    of = v10634
    iopl0 = v10635
    iopl1 = v10636
    nt = v10637
    ?15 = v10638
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v10643 [from 0x80485ac:pop    eax]
    cx = v10610
    dx = v10611
    bx = v10679 [from 0x80485ad:pop    ebx]
    sp = v10613+0xc [from 0x80485ae:pop    ebp]
    bp = v10715 [from 0x80485ae:pop    ebp]
    si = v10615
    di = v10616
    es = v10617
    cs = v10618
    ss = v10619
    ds = v10620
    fs = v10621
    gs = v10622
    cf = v10623
    ?1 = v10624
    pf = v10625
    ?3 = v10626
    af = v10627
    ?5 = v10628
    zf = v10629
    sf = v10630
    tf = v10631
    if = v10632
    df = v10633
    of = v10634
    iopl0 = v10635
    iopl1 = v10636
    nt = v10637
    ?15 = v10638
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v10643 [from 0x80485ac:pop    eax]
    cx = v10610
    dx = v10611
    bx = v10679 [from 0x80485ad:pop    ebx]
    sp = v10613+0x10 [from 0x80485af:ret    ]
    bp = v10715 [from 0x80485ae:pop    ebp]
    si = v10615
    di = v10616
    es = v10617
    cs = v10618
    ss = v10619
    ds = v10620
    fs = v10621
    gs = v10622
    cf = v10623
    ?1 = v10624
    pf = v10625
    ?3 = v10626
    af = v10627
    ?5 = v10628
    zf = v10629
    sf = v10630
    tf = v10631
    if = v10632
    df = v10633
    of = v10634
    iopl0 = v10635
    iopl1 = v10636
    nt = v10637
    ?15 = v10638
    memory = {}
    ip = v10753 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v10815
    cx = v10816
    dx = v10817
    bx = v10818
    sp = v10819-0x4 [from 0x80485b0:push   ebp]
    bp = v10820
    si = v10821
    di = v10822
    es = v10823
    cs = v10824
    ss = v10825
    ds = v10826
    fs = v10827
    gs = v10828
    cf = v10829
    ?1 = v10830
    pf = v10831
    ?3 = v10832
    af = v10833
    ?5 = v10834
    zf = v10835
    sf = v10836
    tf = v10837
    if = v10838
    df = v10839
    of = v10840
    iopl0 = v10841
    iopl1 = v10842
    nt = v10843
    ?15 = v10844
    memory = {
        size=4; addr=v10819-0x4 [from 0x80485b0:push   ebp]; value=v10820
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v10815
    cx = v10816
    dx = v10817
    bx = v10818
    sp = v10819-0x4 [from 0x80485b0:push   ebp]
    bp = v10819-0x4 [from 0x80485b0:push   ebp]
    si = v10821
    di = v10822
    es = v10823
    cs = v10824
    ss = v10825
    ds = v10826
    fs = v10827
    gs = v10828
    cf = v10829
    ?1 = v10830
    pf = v10831
    ?3 = v10832
    af = v10833
    ?5 = v10834
    zf = v10835
    sf = v10836
    tf = v10837
    if = v10838
    df = v10839
    of = v10840
    iopl0 = v10841
    iopl1 = v10842
    nt = v10843
    ?15 = v10844
    memory = {
        size=4; addr=v10819-0x4 [from 0x80485b0:push   ebp]; value=v10820
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v10815
    cx = v10816
    dx = v10817
    bx = v10818
    sp = v10819-0x8 [from 0x80485b3:push   ebx]
    bp = v10819-0x4 [from 0x80485b0:push   ebp]
    si = v10821
    di = v10822
    es = v10823
    cs = v10824
    ss = v10825
    ds = v10826
    fs = v10827
    gs = v10828
    cf = v10829
    ?1 = v10830
    pf = v10831
    ?3 = v10832
    af = v10833
    ?5 = v10834
    zf = v10835
    sf = v10836
    tf = v10837
    if = v10838
    df = v10839
    of = v10840
    iopl0 = v10841
    iopl1 = v10842
    nt = v10843
    ?15 = v10844
    memory = {
        size=4; addr=v10819-0x8 [from 0x80485b3:push   ebx]; value=v10818
        size=4; addr=v10819-0x4 [from 0x80485b0:push   ebp]; value=v10820
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v10815
    cx = v10816
    dx = v10817
    bx = v10818
    sp = v10819-0xc [from 0x80485b4:push   eax]
    bp = v10819-0x4 [from 0x80485b0:push   ebp]
    si = v10821
    di = v10822
    es = v10823
    cs = v10824
    ss = v10825
    ds = v10826
    fs = v10827
    gs = v10828
    cf = v10829
    ?1 = v10830
    pf = v10831
    ?3 = v10832
    af = v10833
    ?5 = v10834
    zf = v10835
    sf = v10836
    tf = v10837
    if = v10838
    df = v10839
    of = v10840
    iopl0 = v10841
    iopl1 = v10842
    nt = v10843
    ?15 = v10844
    memory = {
        size=4; addr=v10819-0xc [from 0x80485b4:push   eax]; value=v10815
        size=4; addr=v10819-0x8 [from 0x80485b3:push   ebx]; value=v10818
        size=4; addr=v10819-0x4 [from 0x80485b0:push   ebp]; value=v10820
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v10815
    cx = v10816
    dx = v10817
    bx = v10818
    sp = v10819-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v10819-0x4 [from 0x80485b0:push   ebp]
    si = v10821
    di = v10822
    es = v10823
    cs = v10824
    ss = v10825
    ds = v10826
    fs = v10827
    gs = v10828
    cf = v10829
    ?1 = v10830
    pf = v10831
    ?3 = v10832
    af = v10833
    ?5 = v10834
    zf = v10835
    sf = v10836
    tf = v10837
    if = v10838
    df = v10839
    of = v10840
    iopl0 = v10841
    iopl1 = v10842
    nt = v10843
    ?15 = v10844
    memory = {
        size=4; addr=v10819-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v10819-0xc [from 0x80485b4:push   eax]; value=v10815
        size=4; addr=v10819-0x8 [from 0x80485b3:push   ebx]; value=v10818
        size=4; addr=v10819-0x4 [from 0x80485b0:push   ebp]; value=v10820
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v11082
    cx = v11083
    dx = v11084
    bx = v11116 [from 0x80485ba:pop    ebx]
    sp = v11086+0x4 [from 0x80485ba:pop    ebx]
    bp = v11087
    si = v11088
    di = v11089
    es = v11090
    cs = v11091
    ss = v11092
    ds = v11093
    fs = v11094
    gs = v11095
    cf = v11096
    ?1 = v11097
    pf = v11098
    ?3 = v11099
    af = v11100
    ?5 = v11101
    zf = v11102
    sf = v11103
    tf = v11104
    if = v11105
    df = v11106
    of = v11107
    iopl0 = v11108
    iopl1 = v11109
    nt = v11110
    ?15 = v11111
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v11082
    cx = v11083
    dx = v11084
    bx = v11116+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v11086+0x4 [from 0x80485ba:pop    ebx]
    bp = v11087
    si = v11088
    di = v11089
    es = v11090
    cs = v11091
    ss = v11092
    ds = v11093
    fs = v11094
    gs = v11095
    cf = v11178 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v11097
    pf = -v11173-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v11099
    af = v11177 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v11101
    zf = v11176 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v11175 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v11104
    if = v11105
    df = v11106
    of = v11181 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v11108
    iopl1 = v11109
    nt = v11110
    ?15 = v11111
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v11082
    cx = v11083
    dx = v11084
    bx = v11116+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v11086 [from 0x80485c1:call   0x08048390]
    bp = v11087
    si = v11088
    di = v11089
    es = v11090
    cs = v11091
    ss = v11092
    ds = v11093
    fs = v11094
    gs = v11095
    cf = v11178 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v11097
    pf = -v11173-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v11099
    af = v11177 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v11101
    zf = v11176 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v11175 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v11104
    if = v11105
    df = v11106
    of = v11181 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v11108
    iopl1 = v11109
    nt = v11110
    ?15 = v11111
    memory = {
        size=4; addr=v11086 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v11344 [from 0x80485c6:pop    eax]
    cx = v11311
    dx = v11312
    bx = v11313
    sp = v11314+0x4 [from 0x80485c6:pop    eax]
    bp = v11315
    si = v11316
    di = v11317
    es = v11318
    cs = v11319
    ss = v11320
    ds = v11321
    fs = v11322
    gs = v11323
    cf = v11324
    ?1 = v11325
    pf = v11326
    ?3 = v11327
    af = v11328
    ?5 = v11329
    zf = v11330
    sf = v11331
    tf = v11332
    if = v11333
    df = v11334
    of = v11335
    iopl0 = v11336
    iopl1 = v11337
    nt = v11338
    ?15 = v11339
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v11344 [from 0x80485c6:pop    eax]
    cx = v11311
    dx = v11312
    bx = v11380 [from 0x80485c7:pop    ebx]
    sp = v11314+0x8 [from 0x80485c7:pop    ebx]
    bp = v11315
    si = v11316
    di = v11317
    es = v11318
    cs = v11319
    ss = v11320
    ds = v11321
    fs = v11322
    gs = v11323
    cf = v11324
    ?1 = v11325
    pf = v11326
    ?3 = v11327
    af = v11328
    ?5 = v11329
    zf = v11330
    sf = v11331
    tf = v11332
    if = v11333
    df = v11334
    of = v11335
    iopl0 = v11336
    iopl1 = v11337
    nt = v11338
    ?15 = v11339
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v11344 [from 0x80485c6:pop    eax]
    cx = v11311
    dx = v11312
    bx = v11380 [from 0x80485c7:pop    ebx]
    sp = v11315+0x4 [from 0x80485c8:leave  ]
    bp = v11416 [from 0x80485c8:leave  ]
    si = v11316
    di = v11317
    es = v11318
    cs = v11319
    ss = v11320
    ds = v11321
    fs = v11322
    gs = v11323
    cf = v11324
    ?1 = v11325
    pf = v11326
    ?3 = v11327
    af = v11328
    ?5 = v11329
    zf = v11330
    sf = v11331
    tf = v11332
    if = v11333
    df = v11334
    of = v11335
    iopl0 = v11336
    iopl1 = v11337
    nt = v11338
    ?15 = v11339
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v11344 [from 0x80485c6:pop    eax]
    cx = v11311
    dx = v11312
    bx = v11380 [from 0x80485c7:pop    ebx]
    sp = v11315+0x8 [from 0x80485c9:ret    ]
    bp = v11416 [from 0x80485c8:leave  ]
    si = v11316
    di = v11317
    es = v11318
    cs = v11319
    ss = v11320
    ds = v11321
    fs = v11322
    gs = v11323
    cf = v11324
    ?1 = v11325
    pf = v11326
    ?3 = v11327
    af = v11328
    ?5 = v11329
    zf = v11330
    sf = v11331
    tf = v11332
    if = v11333
    df = v11334
    of = v11335
    iopl0 = v11336
    iopl1 = v11337
    nt = v11338
    ?15 = v11339
    memory = {}
    ip = v11454 [from 0x80485c9:ret    ]
analyzed headers: 1
