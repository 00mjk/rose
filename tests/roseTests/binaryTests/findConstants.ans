=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v100 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v100 [from 0x80482c8:push   ebp]
    bp = v135 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v213 [from 0x80482cb:sub    esp, 0x08]
    bp = v135 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v206-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v196-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v203-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v201 [from 0x80482cb:sub    esp, 0x08]
    sf = v199 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v211 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v255 [from 0x80482ce:call   0x08048364]
    bp = v135 [from 0x80482c9:mov    ebp, esp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v206-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v196-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v203-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v201 [from 0x80482cb:sub    esp, 0x08]
    sf = v199 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v211 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v213-0x4 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v347
    cx = v348
    dx = v349
    bx = v350
    sp = v387 [from 0x80482d3:call   0x080483d0]
    bp = v352
    si = v353
    di = v354
    es = v355
    cs = v356
    ss = v357
    ds = v358
    fs = v359
    gs = v360
    cf = v361
    ?1 = v362
    pf = v363
    ?3 = v364
    af = v365
    ?5 = v366
    zf = v367
    sf = v368
    tf = v369
    if = v370
    df = v371
    of = v372
    iopl0 = v373
    iopl1 = v374
    nt = v375
    ?15 = v376
    memory = {
        size=4; addr=v351-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v479
    cx = v480
    dx = v481
    bx = v482
    sp = v519 [from 0x80482d8:call   0x08048580]
    bp = v484
    si = v485
    di = v486
    es = v487
    cs = v488
    ss = v489
    ds = v490
    fs = v491
    gs = v492
    cf = v493
    ?1 = v494
    pf = v495
    ?3 = v496
    af = v497
    ?5 = v498
    zf = v499
    sf = v500
    tf = v501
    if = v502
    df = v503
    of = v504
    iopl0 = v505
    iopl1 = v506
    nt = v507
    ?15 = v508
    memory = {
        size=4; addr=v483-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v611
    cx = v612
    dx = v613
    bx = v614
    sp = v651 [from 0x80482dd:leave  ]
    bp = v650 [from 0x80482dd:leave  ]
    si = v617
    di = v618
    es = v619
    cs = v620
    ss = v621
    ds = v622
    fs = v623
    gs = v624
    cf = v625
    ?1 = v626
    pf = v627
    ?3 = v628
    af = v629
    ?5 = v630
    zf = v631
    sf = v632
    tf = v633
    if = v634
    df = v635
    of = v636
    iopl0 = v637
    iopl1 = v638
    nt = v639
    ?15 = v640
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v611
    cx = v612
    dx = v613
    bx = v614
    sp = v693 [from 0x80482de:ret    ]
    bp = v650 [from 0x80482dd:leave  ]
    si = v617
    di = v618
    es = v619
    cs = v620
    ss = v621
    ds = v622
    fs = v623
    gs = v624
    cf = v625
    ?1 = v626
    pf = v627
    ?3 = v628
    af = v629
    ?5 = v630
    zf = v631
    sf = v632
    tf = v633
    if = v634
    df = v635
    of = v636
    iopl0 = v637
    iopl1 = v638
    nt = v639
    ?15 = v640
    memory = {}
    ip = v691 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v755
    cx = v756
    dx = v757
    bx = v758
    sp = v759
    bp = v760
    si = v761
    di = v762
    es = v763
    cs = v764
    ss = v765
    ds = v766
    fs = v767
    gs = v768
    cf = v769
    ?1 = v770
    pf = v771
    ?3 = v772
    af = v773
    ?5 = v774
    zf = v775
    sf = v776
    tf = v777
    if = v778
    df = v779
    of = v780
    iopl0 = v781
    iopl1 = v782
    nt = v783
    ?15 = v784
    memory = {}
    ip = v789 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v852
    cx = v853
    dx = v854
    bx = v855
    sp = v856
    bp = v857
    si = v858
    di = v859
    es = v860
    cs = v861
    ss = v862
    ds = v863
    fs = v864
    gs = v865
    cf = v866
    ?1 = v867
    pf = v868
    ?3 = v869
    af = v870
    ?5 = v871
    zf = v872
    sf = v873
    tf = v874
    if = v875
    df = v876
    of = v877
    iopl0 = v878
    iopl1 = v879
    nt = v880
    ?15 = v881
    memory = {}
    ip = v886 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v949
    cx = v950
    dx = v951
    bx = v952
    sp = v953
    bp = v954
    si = v955
    di = v956
    es = v957
    cs = v958
    ss = v959
    ds = v960
    fs = v961
    gs = v962
    cf = v963
    ?1 = v964
    pf = v965
    ?3 = v966
    af = v967
    ?5 = v968
    zf = v969
    sf = v970
    tf = v971
    if = v972
    df = v973
    of = v974
    iopl0 = v975
    iopl1 = v976
    nt = v977
    ?15 = v978
    memory = {}
    ip = v983 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v1046
    cx = v1047
    dx = v1048
    bx = v1049
    sp = v1050
    bp = v1051
    si = v1052
    di = v1053
    es = v1054
    cs = v1055
    ss = v1056
    ds = v1057
    fs = v1058
    gs = v1059
    cf = v1060
    ?1 = v1061
    pf = v1062
    ?3 = v1063
    af = v1064
    ?5 = v1065
    zf = v1066
    sf = v1067
    tf = v1068
    if = v1069
    df = v1070
    of = v1071
    iopl0 = v1072
    iopl1 = v1073
    nt = v1074
    ?15 = v1075
    memory = {}
    ip = v1080 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1143
    cx = v1144
    dx = v1145
    bx = v1146
    sp = v1147
    bp = v1148
    si = v1149
    di = v1150
    es = v1151
    cs = v1152
    ss = v1153
    ds = v1154
    fs = v1155
    gs = v1156
    cf = v1157
    ?1 = v1158
    pf = v1159
    ?3 = v1160
    af = v1161
    ?5 = v1162
    zf = v1163
    sf = v1164
    tf = v1165
    if = v1166
    df = v1167
    of = v1168
    iopl0 = v1169
    iopl1 = v1170
    nt = v1171
    ?15 = v1172
    memory = {}
    ip = v1177 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1240
    cx = v1241
    dx = v1242
    bx = v1243
    sp = v1244
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1246
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1255
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1240
    cx = v1241
    dx = v1242
    bx = v1243
    sp = v1340 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1255
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1340 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1255
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1437 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1483 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1437-0x4 [from 0x8048348:push   eax]; value=v1240
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1523 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1483-0x4 [from 0x8048349:push   esp]; value=v1483 [from 0x8048348:push   eax]
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1563 [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1523-0x4 [from 0x804834a:push   edx]; value=v1242
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1603 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1563-0x4 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1643 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1603-0x4 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1683 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1643-0x4 [from 0x8048355:push   ecx]; value=v1378 [from 0x8048343:mov    ecx, esp]
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1723 [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1683-0x4 [from 0x8048356:push   esi]; value=v1343 [from 0x8048342:pop    esi]
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1763 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1723-0x4 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1240
    cx = v1378 [from 0x8048343:mov    ecx, esp]
    dx = v1242
    bx = v1243
    sp = v1805 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1343 [from 0x8048342:pop    esi]
    di = v1247
    es = v1248
    cs = v1249
    ss = v1250
    ds = v1251
    fs = v1252
    gs = v1253
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1255
    pf = -v1430-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1257
    af = <top>
    ?5 = v1259
    zf = v1435 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1433 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1262
    if = v1263
    df = v1264
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1266
    iopl1 = v1267
    nt = v1268
    ?15 = v1269
    memory = {
        size=4; addr=v1763-0x4 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v1897
    cx = v1898
    dx = v1899
    bx = v1900
    sp = v1901
    bp = v1902
    si = v1903
    di = v1904
    es = v1905
    cs = v1906
    ss = v1907
    ds = v1908
    fs = v1909
    gs = v1910
    cf = v1911
    ?1 = v1912
    pf = v1913
    ?3 = v1914
    af = v1915
    ?5 = v1916
    zf = v1917
    sf = v1918
    tf = v1919
    if = v1920
    df = v1921
    of = v1922
    iopl0 = v1923
    iopl1 = v1924
    nt = v1925
    ?15 = v1926
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    ax = v1992
    cx = v1993
    dx = v1994
    bx = v1995
    sp = v2030 [from 0x8048364:push   ebp]
    bp = v1997
    si = v1998
    di = v1999
    es = v2000
    cs = v2001
    ss = v2002
    ds = v2003
    fs = v2004
    gs = v2005
    cf = v2006
    ?1 = v2007
    pf = v2008
    ?3 = v2009
    af = v2010
    ?5 = v2011
    zf = v2012
    sf = v2013
    tf = v2014
    if = v2015
    df = v2016
    of = v2017
    iopl0 = v2018
    iopl1 = v2019
    nt = v2020
    ?15 = v2021
    memory = {
        size=4; addr=v1996-0x4 [from 0x8048364:push   ebp]; value=v1997
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v1992
    cx = v1993
    dx = v1994
    bx = v1995
    sp = v2030 [from 0x8048364:push   ebp]
    bp = v2065 [from 0x8048365:mov    ebp, esp]
    si = v1998
    di = v1999
    es = v2000
    cs = v2001
    ss = v2002
    ds = v2003
    fs = v2004
    gs = v2005
    cf = v2006
    ?1 = v2007
    pf = v2008
    ?3 = v2009
    af = v2010
    ?5 = v2011
    zf = v2012
    sf = v2013
    tf = v2014
    if = v2015
    df = v2016
    of = v2017
    iopl0 = v2018
    iopl1 = v2019
    nt = v2020
    ?15 = v2021
    memory = {
        size=4; addr=v1996-0x4 [from 0x8048364:push   ebp]; value=v1997
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v1992
    cx = v1993
    dx = v1994
    bx = v1995
    sp = v2105 [from 0x8048367:push   ebx]
    bp = v2065 [from 0x8048365:mov    ebp, esp]
    si = v1998
    di = v1999
    es = v2000
    cs = v2001
    ss = v2002
    ds = v2003
    fs = v2004
    gs = v2005
    cf = v2006
    ?1 = v2007
    pf = v2008
    ?3 = v2009
    af = v2010
    ?5 = v2011
    zf = v2012
    sf = v2013
    tf = v2014
    if = v2015
    df = v2016
    of = v2017
    iopl0 = v2018
    iopl1 = v2019
    nt = v2020
    ?15 = v2021
    memory = {
        size=4; addr=v2030-0x4 [from 0x8048367:push   ebx]; value=v1995
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v1992
    cx = v1993
    dx = v1994
    bx = v1995
    sp = v2145 [from 0x8048368:push   ecx]
    bp = v2065 [from 0x8048365:mov    ebp, esp]
    si = v1998
    di = v1999
    es = v2000
    cs = v2001
    ss = v2002
    ds = v2003
    fs = v2004
    gs = v2005
    cf = v2006
    ?1 = v2007
    pf = v2008
    ?3 = v2009
    af = v2010
    ?5 = v2011
    zf = v2012
    sf = v2013
    tf = v2014
    if = v2015
    df = v2016
    of = v2017
    iopl0 = v2018
    iopl1 = v2019
    nt = v2020
    ?15 = v2021
    memory = {
        size=4; addr=v2105-0x4 [from 0x8048368:push   ecx]; value=v1993
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v1992
    cx = v1993
    dx = v1994
    bx = v1995
    sp = v2187 [from 0x8048369:call   0x0804836e]
    bp = v2065 [from 0x8048365:mov    ebp, esp]
    si = v1998
    di = v1999
    es = v2000
    cs = v2001
    ss = v2002
    ds = v2003
    fs = v2004
    gs = v2005
    cf = v2006
    ?1 = v2007
    pf = v2008
    ?3 = v2009
    af = v2010
    ?5 = v2011
    zf = v2012
    sf = v2013
    tf = v2014
    if = v2015
    df = v2016
    of = v2017
    iopl0 = v2018
    iopl1 = v2019
    nt = v2020
    ?15 = v2021
    memory = {
        size=4; addr=v2145-0x4 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2279
    cx = v2280
    dx = v2281
    bx = v2317 [from 0x804836e:pop    ebx]
    sp = v2314 [from 0x804836e:pop    ebx]
    bp = v2284
    si = v2285
    di = v2286
    es = v2287
    cs = v2288
    ss = v2289
    ds = v2290
    fs = v2291
    gs = v2292
    cf = v2293
    ?1 = v2294
    pf = v2295
    ?3 = v2296
    af = v2297
    ?5 = v2298
    zf = v2299
    sf = v2300
    tf = v2301
    if = v2302
    df = v2303
    of = v2304
    iopl0 = v2305
    iopl1 = v2306
    nt = v2307
    ?15 = v2308
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2279
    cx = v2280
    dx = v2281
    bx = v2391 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2314 [from 0x804836e:pop    ebx]
    bp = v2284
    si = v2285
    di = v2286
    es = v2287
    cs = v2288
    ss = v2289
    ds = v2290
    fs = v2291
    gs = v2292
    cf = v2385 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2294
    pf = -v2376-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2296
    af = v2383 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2298
    zf = v2381 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2379 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2301
    if = v2302
    df = v2303
    of = v2389 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2305
    iopl1 = v2306
    nt = v2307
    ?15 = v2308
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2279
    cx = v2280
    dx = v2430 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2391 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2314 [from 0x804836e:pop    ebx]
    bp = v2284
    si = v2285
    di = v2286
    es = v2287
    cs = v2288
    ss = v2289
    ds = v2290
    fs = v2291
    gs = v2292
    cf = v2385 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2294
    pf = -v2376-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2296
    af = v2383 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2298
    zf = v2381 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2379 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2301
    if = v2302
    df = v2303
    of = v2389 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2305
    iopl1 = v2306
    nt = v2307
    ?15 = v2308
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2279
    cx = v2280
    dx = v2430 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2391 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2314 [from 0x804836e:pop    ebx]
    bp = v2284
    si = v2285
    di = v2286
    es = v2287
    cs = v2288
    ss = v2289
    ds = v2290
    fs = v2291
    gs = v2292
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2294
    pf = -v2482-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2296
    af = <top>
    ?5 = v2298
    zf = v2487 [from 0x804837b:test   edx, edx]
    sf = v2485 [from 0x804837b:test   edx, edx]
    tf = v2301
    if = v2302
    df = v2303
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2305
    iopl1 = v2306
    nt = v2307
    ?15 = v2308
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2279
    cx = v2280
    dx = v2430 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2391 [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2314 [from 0x804836e:pop    ebx]
    bp = v2284
    si = v2285
    di = v2286
    es = v2287
    cs = v2288
    ss = v2289
    ds = v2290
    fs = v2291
    gs = v2292
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2294
    pf = -v2482-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2296
    af = <top>
    ?5 = v2298
    zf = v2487 [from 0x804837b:test   edx, edx]
    sf = v2485 [from 0x804837b:test   edx, edx]
    tf = v2301
    if = v2302
    df = v2303
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2305
    iopl1 = v2306
    nt = v2307
    ?15 = v2308
    memory = {}
    ip = v2531 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v2654
    cx = v2655
    dx = v2656
    bx = v2657
    sp = v2694 [from 0x804837f:call   0x08048330]
    bp = v2659
    si = v2660
    di = v2661
    es = v2662
    cs = v2663
    ss = v2664
    ds = v2665
    fs = v2666
    gs = v2667
    cf = v2668
    ?1 = v2669
    pf = v2670
    ?3 = v2671
    af = v2672
    ?5 = v2673
    zf = v2674
    sf = v2675
    tf = v2676
    if = v2677
    df = v2678
    of = v2679
    iopl0 = v2680
    iopl1 = v2681
    nt = v2682
    ?15 = v2683
    memory = {
        size=4; addr=v2658-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v2824 [from 0x8048384:pop    eax]
    cx = v2787
    dx = v2788
    bx = v2789
    sp = v2821 [from 0x8048384:pop    eax]
    bp = v2791
    si = v2792
    di = v2793
    es = v2794
    cs = v2795
    ss = v2796
    ds = v2797
    fs = v2798
    gs = v2799
    cf = v2800
    ?1 = v2801
    pf = v2802
    ?3 = v2803
    af = v2804
    ?5 = v2805
    zf = v2806
    sf = v2807
    tf = v2808
    if = v2809
    df = v2810
    of = v2811
    iopl0 = v2812
    iopl1 = v2813
    nt = v2814
    ?15 = v2815
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v2824 [from 0x8048384:pop    eax]
    cx = v2787
    dx = v2788
    bx = v2864 [from 0x8048385:pop    ebx]
    sp = v2861 [from 0x8048385:pop    ebx]
    bp = v2791
    si = v2792
    di = v2793
    es = v2794
    cs = v2795
    ss = v2796
    ds = v2797
    fs = v2798
    gs = v2799
    cf = v2800
    ?1 = v2801
    pf = v2802
    ?3 = v2803
    af = v2804
    ?5 = v2805
    zf = v2806
    sf = v2807
    tf = v2808
    if = v2809
    df = v2810
    of = v2811
    iopl0 = v2812
    iopl1 = v2813
    nt = v2814
    ?15 = v2815
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v2824 [from 0x8048384:pop    eax]
    cx = v2787
    dx = v2788
    bx = v2864 [from 0x8048385:pop    ebx]
    sp = v2906 [from 0x8048386:leave  ]
    bp = v2905 [from 0x8048386:leave  ]
    si = v2792
    di = v2793
    es = v2794
    cs = v2795
    ss = v2796
    ds = v2797
    fs = v2798
    gs = v2799
    cf = v2800
    ?1 = v2801
    pf = v2802
    ?3 = v2803
    af = v2804
    ?5 = v2805
    zf = v2806
    sf = v2807
    tf = v2808
    if = v2809
    df = v2810
    of = v2811
    iopl0 = v2812
    iopl1 = v2813
    nt = v2814
    ?15 = v2815
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v2824 [from 0x8048384:pop    eax]
    cx = v2787
    dx = v2788
    bx = v2864 [from 0x8048385:pop    ebx]
    sp = v2948 [from 0x8048387:ret    ]
    bp = v2905 [from 0x8048386:leave  ]
    si = v2792
    di = v2793
    es = v2794
    cs = v2795
    ss = v2796
    ds = v2797
    fs = v2798
    gs = v2799
    cf = v2800
    ?1 = v2801
    pf = v2802
    ?3 = v2803
    af = v2804
    ?5 = v2805
    zf = v2806
    sf = v2807
    tf = v2808
    if = v2809
    df = v2810
    of = v2811
    iopl0 = v2812
    iopl1 = v2813
    nt = v2814
    ?15 = v2815
    memory = {}
    ip = v2946 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    ax = v3010
    cx = v3011
    dx = v3012
    bx = v3013
    sp = v3048 [from 0x8048390:push   ebp]
    bp = v3015
    si = v3016
    di = v3017
    es = v3018
    cs = v3019
    ss = v3020
    ds = v3021
    fs = v3022
    gs = v3023
    cf = v3024
    ?1 = v3025
    pf = v3026
    ?3 = v3027
    af = v3028
    ?5 = v3029
    zf = v3030
    sf = v3031
    tf = v3032
    if = v3033
    df = v3034
    of = v3035
    iopl0 = v3036
    iopl1 = v3037
    nt = v3038
    ?15 = v3039
    memory = {
        size=4; addr=v3014-0x4 [from 0x8048390:push   ebp]; value=v3015
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v3010
    cx = v3011
    dx = v3012
    bx = v3013
    sp = v3048 [from 0x8048390:push   ebp]
    bp = v3083 [from 0x8048391:mov    ebp, esp]
    si = v3016
    di = v3017
    es = v3018
    cs = v3019
    ss = v3020
    ds = v3021
    fs = v3022
    gs = v3023
    cf = v3024
    ?1 = v3025
    pf = v3026
    ?3 = v3027
    af = v3028
    ?5 = v3029
    zf = v3030
    sf = v3031
    tf = v3032
    if = v3033
    df = v3034
    of = v3035
    iopl0 = v3036
    iopl1 = v3037
    nt = v3038
    ?15 = v3039
    memory = {
        size=4; addr=v3014-0x4 [from 0x8048390:push   ebp]; value=v3015
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v3010
    cx = v3011
    dx = v3012
    bx = v3013
    sp = v3161 [from 0x8048393:sub    esp, 0x08]
    bp = v3083 [from 0x8048391:mov    ebp, esp]
    si = v3016
    di = v3017
    es = v3018
    cs = v3019
    ss = v3020
    ds = v3021
    fs = v3022
    gs = v3023
    cf = -v3154-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v3025
    pf = -v3144-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v3027
    af = -v3151-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v3029
    zf = v3149 [from 0x8048393:sub    esp, 0x08]
    sf = v3147 [from 0x8048393:sub    esp, 0x08]
    tf = v3032
    if = v3033
    df = v3034
    of = v3159 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v3036
    iopl1 = v3037
    nt = v3038
    ?15 = v3039
    memory = {
        size=4; addr=v3014-0x4 [from 0x8048390:push   ebp]; value=v3015
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v3010
    cx = v3011
    dx = v3012
    bx = v3013
    sp = v3161 [from 0x8048393:sub    esp, 0x08]
    bp = v3083 [from 0x8048391:mov    ebp, esp]
    si = v3016
    di = v3017
    es = v3018
    cs = v3019
    ss = v3020
    ds = v3021
    fs = v3022
    gs = v3023
    cf = -v3234-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3025
    pf = -v3224-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3027
    af = -v3231-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3029
    zf = v3229 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3227 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3032
    if = v3033
    df = v3034
    of = v3239 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3036
    iopl1 = v3037
    nt = v3038
    ?15 = v3039
    memory = {
        size=4; addr=v3014-0x4 [from 0x8048390:push   ebp]; value=v3015
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v3010
    cx = v3011
    dx = v3012
    bx = v3013
    sp = v3161 [from 0x8048393:sub    esp, 0x08]
    bp = v3083 [from 0x8048391:mov    ebp, esp]
    si = v3016
    di = v3017
    es = v3018
    cs = v3019
    ss = v3020
    ds = v3021
    fs = v3022
    gs = v3023
    cf = -v3234-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3025
    pf = -v3224-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3027
    af = -v3231-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3029
    zf = v3229 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3227 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3032
    if = v3033
    df = v3034
    of = v3239 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3036
    iopl1 = v3037
    nt = v3038
    ?15 = v3039
    memory = {
        size=4; addr=v3014-0x4 [from 0x8048390:push   ebp]; value=v3015
    }
    ip = v3278 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3436 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3402
    dx = v3403
    bx = v3404
    sp = v3405
    bp = v3406
    si = v3407
    di = v3408
    es = v3409
    cs = v3410
    ss = v3411
    ds = v3412
    fs = v3413
    gs = v3414
    cf = v3415
    ?1 = v3416
    pf = v3417
    ?3 = v3418
    af = v3419
    ?5 = v3420
    zf = v3421
    sf = v3422
    tf = v3423
    if = v3424
    df = v3425
    of = v3426
    iopl0 = v3427
    iopl1 = v3428
    nt = v3429
    ?15 = v3430
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3436 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3402
    dx = v3473 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3404
    sp = v3405
    bp = v3406
    si = v3407
    di = v3408
    es = v3409
    cs = v3410
    ss = v3411
    ds = v3412
    fs = v3413
    gs = v3414
    cf = v3415
    ?1 = v3416
    pf = v3417
    ?3 = v3418
    af = v3419
    ?5 = v3420
    zf = v3421
    sf = v3422
    tf = v3423
    if = v3424
    df = v3425
    of = v3426
    iopl0 = v3427
    iopl1 = v3428
    nt = v3429
    ?15 = v3430
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3436 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3402
    dx = v3473 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3404
    sp = v3405
    bp = v3406
    si = v3407
    di = v3408
    es = v3409
    cs = v3410
    ss = v3411
    ds = v3412
    fs = v3413
    gs = v3414
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3416
    pf = -v3525-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3418
    af = <top>
    ?5 = v3420
    zf = v3530 [from 0x80483a6:test   edx, edx]
    sf = v3528 [from 0x80483a6:test   edx, edx]
    tf = v3423
    if = v3424
    df = v3425
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3427
    iopl1 = v3428
    nt = v3429
    ?15 = v3430
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3436 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3402
    dx = v3473 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3404
    sp = v3405
    bp = v3406
    si = v3407
    di = v3408
    es = v3409
    cs = v3410
    ss = v3411
    ds = v3412
    fs = v3413
    gs = v3414
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3416
    pf = -v3525-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3418
    af = <top>
    ?5 = v3420
    zf = v3530 [from 0x80483a6:test   edx, edx]
    sf = v3528 [from 0x80483a6:test   edx, edx]
    tf = v3423
    if = v3424
    df = v3425
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3427
    iopl1 = v3428
    nt = v3429
    ?15 = v3430
    memory = {}
    ip = v3574 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v3697
    cx = v3698
    dx = v3699
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3732 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = v3711
    ?1 = v3712
    pf = v3713
    ?3 = v3714
    af = v3715
    ?5 = v3716
    zf = v3717
    sf = v3718
    tf = v3719
    if = v3720
    df = v3721
    of = v3722
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v3806 [from 0x80483b0:add    eax, 0x04]
    cx = v3698
    dx = v3699
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3732 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = v3800 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3712
    pf = -v3791-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3714
    af = v3798 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3716
    zf = v3796 [from 0x80483b0:add    eax, 0x04]
    sf = v3794 [from 0x80483b0:add    eax, 0x04]
    tf = v3719
    if = v3720
    df = v3721
    of = v3804 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v3806 [from 0x80483b0:add    eax, 0x04]
    cx = v3698
    dx = v3699
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3732 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = v3800 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3712
    pf = -v3791-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3714
    af = v3798 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3716
    zf = v3796 [from 0x80483b0:add    eax, 0x04]
    sf = v3794 [from 0x80483b0:add    eax, 0x04]
    tf = v3719
    if = v3720
    df = v3721
    of = v3804 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v3806 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v3806 [from 0x80483b0:add    eax, 0x04]
    cx = v3698
    dx = v3699
    bx = v3700
    sp = v3885 [from 0x80483b8:call   edx]
    bp = v3702
    si = v3732 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = v3800 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3712
    pf = -v3791-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3714
    af = v3798 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3716
    zf = v3796 [from 0x80483b0:add    eax, 0x04]
    sf = v3794 [from 0x80483b0:add    eax, 0x04]
    tf = v3719
    if = v3720
    df = v3721
    of = v3804 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {
        size=4; addr=v3701-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v3699
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3982 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3948
    dx = v3949
    bx = v3950
    sp = v3951
    bp = v3952
    si = v3953
    di = v3954
    es = v3955
    cs = v3956
    ss = v3957
    ds = v3958
    fs = v3959
    gs = v3960
    cf = v3961
    ?1 = v3962
    pf = v3963
    ?3 = v3964
    af = v3965
    ?5 = v3966
    zf = v3967
    sf = v3968
    tf = v3969
    if = v3970
    df = v3971
    of = v3972
    iopl0 = v3973
    iopl1 = v3974
    nt = v3975
    ?15 = v3976
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v3982 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3948
    dx = v4019 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3950
    sp = v3951
    bp = v3952
    si = v3953
    di = v3954
    es = v3955
    cs = v3956
    ss = v3957
    ds = v3958
    fs = v3959
    gs = v3960
    cf = v3961
    ?1 = v3962
    pf = v3963
    ?3 = v3964
    af = v3965
    ?5 = v3966
    zf = v3967
    sf = v3968
    tf = v3969
    if = v3970
    df = v3971
    of = v3972
    iopl0 = v3973
    iopl1 = v3974
    nt = v3975
    ?15 = v3976
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v3982 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3948
    dx = v4019 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3950
    sp = v3951
    bp = v3952
    si = v3953
    di = v3954
    es = v3955
    cs = v3956
    ss = v3957
    ds = v3958
    fs = v3959
    gs = v3960
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v3962
    pf = -v4071-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v3964
    af = <top>
    ?5 = v3966
    zf = v4076 [from 0x80483c1:test   edx, edx]
    sf = v4074 [from 0x80483c1:test   edx, edx]
    tf = v3969
    if = v3970
    df = v3971
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v3973
    iopl1 = v3974
    nt = v3975
    ?15 = v3976
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v3982 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3948
    dx = v4019 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3950
    sp = v3951
    bp = v3952
    si = v3953
    di = v3954
    es = v3955
    cs = v3956
    ss = v3957
    ds = v3958
    fs = v3959
    gs = v3960
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v3962
    pf = -v4071-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v3964
    af = <top>
    ?5 = v3966
    zf = v4076 [from 0x80483c1:test   edx, edx]
    sf = v4074 [from 0x80483c1:test   edx, edx]
    tf = v3969
    if = v3970
    df = v3971
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v3973
    iopl1 = v3974
    nt = v3975
    ?15 = v3976
    memory = {}
    ip = v4121 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v4244
    cx = v4245
    dx = v4246
    bx = v4247
    sp = v4248
    bp = v4249
    si = v4250
    di = v4251
    es = v4252
    cs = v4253
    ss = v4254
    ds = v4255
    fs = v4256
    gs = v4257
    cf = v4258
    ?1 = v4259
    pf = v4260
    ?3 = v4261
    af = v4262
    ?5 = v4263
    zf = v4264
    sf = v4265
    tf = v4266
    if = v4267
    df = v4268
    of = v4269
    iopl0 = v4270
    iopl1 = v4271
    nt = v4272
    ?15 = v4273
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v4244
    cx = v4245
    dx = v4246
    bx = v4247
    sp = v4321 [from 0x80483cc:leave  ]
    bp = v4320 [from 0x80483cc:leave  ]
    si = v4250
    di = v4251
    es = v4252
    cs = v4253
    ss = v4254
    ds = v4255
    fs = v4256
    gs = v4257
    cf = v4258
    ?1 = v4259
    pf = v4260
    ?3 = v4261
    af = v4262
    ?5 = v4263
    zf = v4264
    sf = v4265
    tf = v4266
    if = v4267
    df = v4268
    of = v4269
    iopl0 = v4270
    iopl1 = v4271
    nt = v4272
    ?15 = v4273
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v4244
    cx = v4245
    dx = v4246
    bx = v4247
    sp = v4363 [from 0x80483cd:ret    ]
    bp = v4320 [from 0x80483cc:leave  ]
    si = v4250
    di = v4251
    es = v4252
    cs = v4253
    ss = v4254
    ds = v4255
    fs = v4256
    gs = v4257
    cf = v4258
    ?1 = v4259
    pf = v4260
    ?3 = v4261
    af = v4262
    ?5 = v4263
    zf = v4264
    sf = v4265
    tf = v4266
    if = v4267
    df = v4268
    of = v4269
    iopl0 = v4270
    iopl1 = v4271
    nt = v4272
    ?15 = v4273
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v4361 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v4425
    cx = v4426
    dx = v4427
    bx = v4428
    sp = v4463 [from 0x80483d0:push   ebp]
    bp = v4430
    si = v4431
    di = v4432
    es = v4433
    cs = v4434
    ss = v4435
    ds = v4436
    fs = v4437
    gs = v4438
    cf = v4439
    ?1 = v4440
    pf = v4441
    ?3 = v4442
    af = v4443
    ?5 = v4444
    zf = v4445
    sf = v4446
    tf = v4447
    if = v4448
    df = v4449
    of = v4450
    iopl0 = v4451
    iopl1 = v4452
    nt = v4453
    ?15 = v4454
    memory = {
        size=4; addr=v4429-0x4 [from 0x80483d0:push   ebp]; value=v4430
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v4425
    cx = v4426
    dx = v4427
    bx = v4428
    sp = v4463 [from 0x80483d0:push   ebp]
    bp = v4498 [from 0x80483d1:mov    ebp, esp]
    si = v4431
    di = v4432
    es = v4433
    cs = v4434
    ss = v4435
    ds = v4436
    fs = v4437
    gs = v4438
    cf = v4439
    ?1 = v4440
    pf = v4441
    ?3 = v4442
    af = v4443
    ?5 = v4444
    zf = v4445
    sf = v4446
    tf = v4447
    if = v4448
    df = v4449
    of = v4450
    iopl0 = v4451
    iopl1 = v4452
    nt = v4453
    ?15 = v4454
    memory = {
        size=4; addr=v4429-0x4 [from 0x80483d0:push   ebp]; value=v4430
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v4425
    cx = v4426
    dx = v4427
    bx = v4428
    sp = v4576 [from 0x80483d3:sub    esp, 0x08]
    bp = v4498 [from 0x80483d1:mov    ebp, esp]
    si = v4431
    di = v4432
    es = v4433
    cs = v4434
    ss = v4435
    ds = v4436
    fs = v4437
    gs = v4438
    cf = -v4569-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4440
    pf = -v4559-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4442
    af = -v4566-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4444
    zf = v4564 [from 0x80483d3:sub    esp, 0x08]
    sf = v4562 [from 0x80483d3:sub    esp, 0x08]
    tf = v4447
    if = v4448
    df = v4449
    of = v4574 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4451
    iopl1 = v4452
    nt = v4453
    ?15 = v4454
    memory = {
        size=4; addr=v4429-0x4 [from 0x80483d0:push   ebp]; value=v4430
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v4613 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4426
    dx = v4427
    bx = v4428
    sp = v4576 [from 0x80483d3:sub    esp, 0x08]
    bp = v4498 [from 0x80483d1:mov    ebp, esp]
    si = v4431
    di = v4432
    es = v4433
    cs = v4434
    ss = v4435
    ds = v4436
    fs = v4437
    gs = v4438
    cf = -v4569-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4440
    pf = -v4559-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4442
    af = -v4566-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4444
    zf = v4564 [from 0x80483d3:sub    esp, 0x08]
    sf = v4562 [from 0x80483d3:sub    esp, 0x08]
    tf = v4447
    if = v4448
    df = v4449
    of = v4574 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4451
    iopl1 = v4452
    nt = v4453
    ?15 = v4454
    memory = {
        size=4; addr=v4429-0x4 [from 0x80483d0:push   ebp]; value=v4430
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v4613 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4426
    dx = v4427
    bx = v4428
    sp = v4576 [from 0x80483d3:sub    esp, 0x08]
    bp = v4498 [from 0x80483d1:mov    ebp, esp]
    si = v4431
    di = v4432
    es = v4433
    cs = v4434
    ss = v4435
    ds = v4436
    fs = v4437
    gs = v4438
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4440
    pf = -v4665-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4442
    af = <top>
    ?5 = v4444
    zf = v4670 [from 0x80483db:test   eax, eax]
    sf = v4668 [from 0x80483db:test   eax, eax]
    tf = v4447
    if = v4448
    df = v4449
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4451
    iopl1 = v4452
    nt = v4453
    ?15 = v4454
    memory = {
        size=4; addr=v4429-0x4 [from 0x80483d0:push   ebp]; value=v4430
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v4613 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4426
    dx = v4427
    bx = v4428
    sp = v4576 [from 0x80483d3:sub    esp, 0x08]
    bp = v4498 [from 0x80483d1:mov    ebp, esp]
    si = v4431
    di = v4432
    es = v4433
    cs = v4434
    ss = v4435
    ds = v4436
    fs = v4437
    gs = v4438
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4440
    pf = -v4665-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4442
    af = <top>
    ?5 = v4444
    zf = v4670 [from 0x80483db:test   eax, eax]
    sf = v4668 [from 0x80483db:test   eax, eax]
    tf = v4447
    if = v4448
    df = v4449
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4451
    iopl1 = v4452
    nt = v4453
    ?15 = v4454
    memory = {
        size=4; addr=v4429-0x4 [from 0x80483d0:push   ebp]; value=v4430
    }
    ip = v4714 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4838
    dx = v4839
    bx = v4840
    sp = v4841
    bp = v4842
    si = v4843
    di = v4844
    es = v4845
    cs = v4846
    ss = v4847
    ds = v4848
    fs = v4849
    gs = v4850
    cf = v4851
    ?1 = v4852
    pf = v4853
    ?3 = v4854
    af = v4855
    ?5 = v4856
    zf = v4857
    sf = v4858
    tf = v4859
    if = v4860
    df = v4861
    of = v4862
    iopl0 = v4863
    iopl1 = v4864
    nt = v4865
    ?15 = v4866
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4838
    dx = v4839
    bx = v4840
    sp = v4841
    bp = v4842
    si = v4843
    di = v4844
    es = v4845
    cs = v4846
    ss = v4847
    ds = v4848
    fs = v4849
    gs = v4850
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4852
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4854
    af = <top>
    ?5 = v4856
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4859
    if = v4860
    df = v4861
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4863
    iopl1 = v4864
    nt = v4865
    ?15 = v4866
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4838
    dx = v4839
    bx = v4840
    sp = v4841
    bp = v4842
    si = v4843
    di = v4844
    es = v4845
    cs = v4846
    ss = v4847
    ds = v4848
    fs = v4849
    gs = v4850
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4852
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4854
    af = <top>
    ?5 = v4856
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4859
    if = v4860
    df = v4861
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4863
    iopl1 = v4864
    nt = v4865
    ?15 = v4866
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4838
    dx = v4839
    bx = v4840
    sp = v5007 [from 0x8048400:mov    esp, ebp]
    bp = v4842
    si = v4843
    di = v4844
    es = v4845
    cs = v4846
    ss = v4847
    ds = v4848
    fs = v4849
    gs = v4850
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4852
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4854
    af = <top>
    ?5 = v4856
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4859
    if = v4860
    df = v4861
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4863
    iopl1 = v4864
    nt = v4865
    ?15 = v4866
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4838
    dx = v4839
    bx = v4840
    sp = v5044 [from 0x8048402:pop    ebp]
    bp = v5047 [from 0x8048402:pop    ebp]
    si = v4843
    di = v4844
    es = v4845
    cs = v4846
    ss = v4847
    ds = v4848
    fs = v4849
    gs = v4850
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4852
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4854
    af = <top>
    ?5 = v4856
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4859
    if = v4860
    df = v4861
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4863
    iopl1 = v4864
    nt = v4865
    ?15 = v4866
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4838
    dx = v4839
    bx = v4840
    sp = v5089 [from 0x8048403:ret    ]
    bp = v5047 [from 0x8048402:pop    ebp]
    si = v4843
    di = v4844
    es = v4845
    cs = v4846
    ss = v4847
    ds = v4848
    fs = v4849
    gs = v4850
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4852
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4854
    af = <top>
    ?5 = v4856
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4859
    if = v4860
    df = v4861
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4863
    iopl1 = v4864
    nt = v4865
    ?15 = v4866
    memory = {}
    ip = v5087 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = v5151
    cx = v5152
    dx = v5153
    bx = v5154
    sp = v5155
    bp = v5156
    si = v5157
    di = v5158
    es = v5159
    cs = v5160
    ss = v5161
    ds = v5162
    fs = v5163
    gs = v5164
    cf = v5165
    ?1 = v5166
    pf = v5167
    ?3 = v5168
    af = v5169
    ?5 = v5170
    zf = v5171
    sf = v5172
    tf = v5173
    if = v5174
    df = v5175
    of = v5176
    iopl0 = v5177
    iopl1 = v5178
    nt = v5179
    ?15 = v5180
    memory = {
        size=4; addr=v5155; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
0x80483ef:call   0x00000000
    ax = v5151
    cx = v5152
    dx = v5153
    bx = v5154
    sp = v5228 [from 0x80483ef:call   0x00000000]
    bp = v5156
    si = v5157
    di = v5158
    es = v5159
    cs = v5160
    ss = v5161
    ds = v5162
    fs = v5163
    gs = v5164
    cf = v5165
    ?1 = v5166
    pf = v5167
    ?3 = v5168
    af = v5169
    ?5 = v5170
    zf = v5171
    sf = v5172
    tf = v5173
    if = v5174
    df = v5175
    of = v5176
    iopl0 = v5177
    iopl1 = v5178
    nt = v5179
    ?15 = v5180
    memory = {
        size=4; addr=v5155; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=v5155-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v5320
    cx = v5321
    dx = v5322
    bx = v5323
    sp = v5324
    bp = v5325
    si = v5355 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v5327
    es = v5328
    cs = v5329
    ss = v5330
    ds = v5331
    fs = v5332
    gs = v5333
    cf = v5334
    ?1 = v5335
    pf = v5336
    ?3 = v5337
    af = v5338
    ?5 = v5339
    zf = v5340
    sf = v5341
    tf = v5342
    if = v5343
    df = v5344
    of = v5345
    iopl0 = v5346
    iopl1 = v5347
    nt = v5348
    ?15 = v5349
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v5320
    cx = v5321
    dx = v5322
    bx = v5323
    sp = v5324
    bp = v5325
    si = v5355 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v5392 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v5328
    cs = v5329
    ss = v5330
    ds = v5331
    fs = v5332
    gs = v5333
    cf = v5334
    ?1 = v5335
    pf = v5336
    ?3 = v5337
    af = v5338
    ?5 = v5339
    zf = v5340
    sf = v5341
    tf = v5342
    if = v5343
    df = v5344
    of = v5345
    iopl0 = v5346
    iopl1 = v5347
    nt = v5348
    ?15 = v5349
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    ax = v5484
    cx = v5485
    dx = v5486
    bx = v5487
    sp = v5522 [from 0x8048410:push   ebp]
    bp = v5489
    si = v5490
    di = v5491
    es = v5492
    cs = v5493
    ss = v5494
    ds = v5495
    fs = v5496
    gs = v5497
    cf = v5498
    ?1 = v5499
    pf = v5500
    ?3 = v5501
    af = v5502
    ?5 = v5503
    zf = v5504
    sf = v5505
    tf = v5506
    if = v5507
    df = v5508
    of = v5509
    iopl0 = v5510
    iopl1 = v5511
    nt = v5512
    ?15 = v5513
    memory = {
        size=4; addr=v5488-0x4 [from 0x8048410:push   ebp]; value=v5489
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v5484
    cx = v5485
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5487
    sp = v5522 [from 0x8048410:push   ebp]
    bp = v5489
    si = v5490
    di = v5491
    es = v5492
    cs = v5493
    ss = v5494
    ds = v5495
    fs = v5496
    gs = v5497
    cf = v5498
    ?1 = v5499
    pf = v5500
    ?3 = v5501
    af = v5502
    ?5 = v5503
    zf = v5504
    sf = v5505
    tf = v5506
    if = v5507
    df = v5508
    of = v5509
    iopl0 = v5510
    iopl1 = v5511
    nt = v5512
    ?15 = v5513
    memory = {
        size=4; addr=v5488-0x4 [from 0x8048410:push   ebp]; value=v5489
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v5484
    cx = v5485
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5487
    sp = v5522 [from 0x8048410:push   ebp]
    bp = v5592 [from 0x8048416:mov    ebp, esp]
    si = v5490
    di = v5491
    es = v5492
    cs = v5493
    ss = v5494
    ds = v5495
    fs = v5496
    gs = v5497
    cf = v5498
    ?1 = v5499
    pf = v5500
    ?3 = v5501
    af = v5502
    ?5 = v5503
    zf = v5504
    sf = v5505
    tf = v5506
    if = v5507
    df = v5508
    of = v5509
    iopl0 = v5510
    iopl1 = v5511
    nt = v5512
    ?15 = v5513
    memory = {
        size=4; addr=v5488-0x4 [from 0x8048410:push   ebp]; value=v5489
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v5484
    cx = v5485
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5487
    sp = v5670 [from 0x8048418:sub    esp, 0x08]
    bp = v5592 [from 0x8048416:mov    ebp, esp]
    si = v5490
    di = v5491
    es = v5492
    cs = v5493
    ss = v5494
    ds = v5495
    fs = v5496
    gs = v5497
    cf = -v5663-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v5499
    pf = -v5653-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v5501
    af = -v5660-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v5503
    zf = v5658 [from 0x8048418:sub    esp, 0x08]
    sf = v5656 [from 0x8048418:sub    esp, 0x08]
    tf = v5506
    if = v5507
    df = v5508
    of = v5668 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v5510
    iopl1 = v5511
    nt = v5512
    ?15 = v5513
    memory = {
        size=4; addr=v5488-0x4 [from 0x8048410:push   ebp]; value=v5489
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v5484
    cx = v5485
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5487
    sp = v5729 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5592 [from 0x8048416:mov    ebp, esp]
    si = v5490
    di = v5491
    es = v5492
    cs = v5493
    ss = v5494
    ds = v5495
    fs = v5496
    gs = v5497
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5499
    pf = -v5722-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5501
    af = <top>
    ?5 = v5503
    zf = v5727 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5725 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5506
    if = v5507
    df = v5508
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5510
    iopl1 = v5511
    nt = v5512
    ?15 = v5513
    memory = {
        size=4; addr=v5488-0x4 [from 0x8048410:push   ebp]; value=v5489
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v5484
    cx = v5485
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5487
    sp = v5729 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5592 [from 0x8048416:mov    ebp, esp]
    si = v5490
    di = v5491
    es = v5492
    cs = v5493
    ss = v5494
    ds = v5495
    fs = v5496
    gs = v5497
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5499
    pf = -v5722-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5501
    af = <top>
    ?5 = v5503
    zf = v5727 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5725 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5506
    if = v5507
    df = v5508
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5510
    iopl1 = v5511
    nt = v5512
    ?15 = v5513
    memory = {
        size=4; addr=v5729+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v5484
    cx = v5485
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5487
    sp = v5729 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5592 [from 0x8048416:mov    ebp, esp]
    si = v5490
    di = v5491
    es = v5492
    cs = v5493
    ss = v5494
    ds = v5495
    fs = v5496
    gs = v5497
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5499
    pf = -v5722-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5501
    af = <top>
    ?5 = v5503
    zf = v5727 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5725 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5506
    if = v5507
    df = v5508
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5510
    iopl1 = v5511
    nt = v5512
    ?15 = v5513
    memory = {
        size=4; addr=v5729 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5729+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v5484
    cx = v5485
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5487
    sp = v5853 [from 0x8048429:call   0x080482f0]
    bp = v5592 [from 0x8048416:mov    ebp, esp]
    si = v5490
    di = v5491
    es = v5492
    cs = v5493
    ss = v5494
    ds = v5495
    fs = v5496
    gs = v5497
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5499
    pf = -v5722-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5501
    af = <top>
    ?5 = v5503
    zf = v5727 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5725 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5506
    if = v5507
    df = v5508
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5510
    iopl1 = v5511
    nt = v5512
    ?15 = v5513
    memory = {
        size=4; addr=v5729 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5729+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v5729-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v5945
    cx = v5946
    dx = v5947
    bx = v5948
    sp = v5978 [from 0x804842e:mov    esp, ebp]
    bp = v5950
    si = v5951
    di = v5952
    es = v5953
    cs = v5954
    ss = v5955
    ds = v5956
    fs = v5957
    gs = v5958
    cf = v5959
    ?1 = v5960
    pf = v5961
    ?3 = v5962
    af = v5963
    ?5 = v5964
    zf = v5965
    sf = v5966
    tf = v5967
    if = v5968
    df = v5969
    of = v5970
    iopl0 = v5971
    iopl1 = v5972
    nt = v5973
    ?15 = v5974
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5946
    dx = v5947
    bx = v5948
    sp = v5978 [from 0x804842e:mov    esp, ebp]
    bp = v5950
    si = v5951
    di = v5952
    es = v5953
    cs = v5954
    ss = v5955
    ds = v5956
    fs = v5957
    gs = v5958
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5960
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5962
    af = <top>
    ?5 = v5964
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5967
    if = v5968
    df = v5969
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5971
    iopl1 = v5972
    nt = v5973
    ?15 = v5974
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5946
    dx = v5947
    bx = v5948
    sp = v6080 [from 0x8048432:pop    ebp]
    bp = v6083 [from 0x8048432:pop    ebp]
    si = v5951
    di = v5952
    es = v5953
    cs = v5954
    ss = v5955
    ds = v5956
    fs = v5957
    gs = v5958
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5960
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5962
    af = <top>
    ?5 = v5964
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5967
    if = v5968
    df = v5969
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5971
    iopl1 = v5972
    nt = v5973
    ?15 = v5974
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5946
    dx = v5947
    bx = v5948
    sp = v6125 [from 0x8048433:ret    ]
    bp = v6083 [from 0x8048432:pop    ebp]
    si = v5951
    di = v5952
    es = v5953
    cs = v5954
    ss = v5955
    ds = v5956
    fs = v5957
    gs = v5958
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5960
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5962
    af = <top>
    ?5 = v5964
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5967
    if = v5968
    df = v5969
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5971
    iopl1 = v5972
    nt = v5973
    ?15 = v5974
    memory = {}
    ip = v6123 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v6187
    cx = v6188
    dx = v6189
    bx = v6190
    sp = v6225 [from 0x8048440:push   ebp]
    bp = v6192
    si = v6193
    di = v6194
    es = v6195
    cs = v6196
    ss = v6197
    ds = v6198
    fs = v6199
    gs = v6200
    cf = v6201
    ?1 = v6202
    pf = v6203
    ?3 = v6204
    af = v6205
    ?5 = v6206
    zf = v6207
    sf = v6208
    tf = v6209
    if = v6210
    df = v6211
    of = v6212
    iopl0 = v6213
    iopl1 = v6214
    nt = v6215
    ?15 = v6216
    memory = {
        size=4; addr=v6191-0x4 [from 0x8048440:push   ebp]; value=v6192
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v6187
    cx = v6188
    dx = v6189
    bx = v6190
    sp = v6225 [from 0x8048440:push   ebp]
    bp = v6260 [from 0x8048441:mov    ebp, esp]
    si = v6193
    di = v6194
    es = v6195
    cs = v6196
    ss = v6197
    ds = v6198
    fs = v6199
    gs = v6200
    cf = v6201
    ?1 = v6202
    pf = v6203
    ?3 = v6204
    af = v6205
    ?5 = v6206
    zf = v6207
    sf = v6208
    tf = v6209
    if = v6210
    df = v6211
    of = v6212
    iopl0 = v6213
    iopl1 = v6214
    nt = v6215
    ?15 = v6216
    memory = {
        size=4; addr=v6191-0x4 [from 0x8048440:push   ebp]; value=v6192
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v6187
    cx = v6188
    dx = v6189
    bx = v6190
    sp = v6338 [from 0x8048443:sub    esp, 0x08]
    bp = v6260 [from 0x8048441:mov    ebp, esp]
    si = v6193
    di = v6194
    es = v6195
    cs = v6196
    ss = v6197
    ds = v6198
    fs = v6199
    gs = v6200
    cf = -v6331-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6202
    pf = -v6321-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6204
    af = -v6328-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6206
    zf = v6326 [from 0x8048443:sub    esp, 0x08]
    sf = v6324 [from 0x8048443:sub    esp, 0x08]
    tf = v6209
    if = v6210
    df = v6211
    of = v6336 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6213
    iopl1 = v6214
    nt = v6215
    ?15 = v6216
    memory = {
        size=4; addr=v6191-0x4 [from 0x8048440:push   ebp]; value=v6192
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6187
    cx = v6188
    dx = v6189
    bx = v6190
    sp = v6338 [from 0x8048443:sub    esp, 0x08]
    bp = v6260 [from 0x8048441:mov    ebp, esp]
    si = v6193
    di = v6194
    es = v6195
    cs = v6196
    ss = v6197
    ds = v6198
    fs = v6199
    gs = v6200
    cf = -v6331-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6202
    pf = -v6321-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6204
    af = -v6328-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6206
    zf = v6326 [from 0x8048443:sub    esp, 0x08]
    sf = v6324 [from 0x8048443:sub    esp, 0x08]
    tf = v6209
    if = v6210
    df = v6211
    of = v6336 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6213
    iopl1 = v6214
    nt = v6215
    ?15 = v6216
    memory = {
        size=4; addr=v6338 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v6187
    cx = v6188
    dx = v6189
    bx = v6190
    sp = v6417 [from 0x804844d:call   0x08048300]
    bp = v6260 [from 0x8048441:mov    ebp, esp]
    si = v6193
    di = v6194
    es = v6195
    cs = v6196
    ss = v6197
    ds = v6198
    fs = v6199
    gs = v6200
    cf = -v6331-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6202
    pf = -v6321-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6204
    af = -v6328-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6206
    zf = v6326 [from 0x8048443:sub    esp, 0x08]
    sf = v6324 [from 0x8048443:sub    esp, 0x08]
    tf = v6209
    if = v6210
    df = v6211
    of = v6336 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6213
    iopl1 = v6214
    nt = v6215
    ?15 = v6216
    memory = {
        size=4; addr=v6338 [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6338-0x4 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v6509
    cx = v6510
    dx = v6511
    bx = v6512
    sp = v6542 [from 0x8048452:mov    esp, ebp]
    bp = v6514
    si = v6515
    di = v6516
    es = v6517
    cs = v6518
    ss = v6519
    ds = v6520
    fs = v6521
    gs = v6522
    cf = v6523
    ?1 = v6524
    pf = v6525
    ?3 = v6526
    af = v6527
    ?5 = v6528
    zf = v6529
    sf = v6530
    tf = v6531
    if = v6532
    df = v6533
    of = v6534
    iopl0 = v6535
    iopl1 = v6536
    nt = v6537
    ?15 = v6538
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v6509
    cx = v6510
    dx = v6511
    bx = v6512
    sp = v6579 [from 0x8048454:pop    ebp]
    bp = v6582 [from 0x8048454:pop    ebp]
    si = v6515
    di = v6516
    es = v6517
    cs = v6518
    ss = v6519
    ds = v6520
    fs = v6521
    gs = v6522
    cf = v6523
    ?1 = v6524
    pf = v6525
    ?3 = v6526
    af = v6527
    ?5 = v6528
    zf = v6529
    sf = v6530
    tf = v6531
    if = v6532
    df = v6533
    of = v6534
    iopl0 = v6535
    iopl1 = v6536
    nt = v6537
    ?15 = v6538
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v6509
    cx = v6510
    dx = v6511
    bx = v6512
    sp = v6624 [from 0x8048455:ret    ]
    bp = v6582 [from 0x8048454:pop    ebp]
    si = v6515
    di = v6516
    es = v6517
    cs = v6518
    ss = v6519
    ds = v6520
    fs = v6521
    gs = v6522
    cf = v6523
    ?1 = v6524
    pf = v6525
    ?3 = v6526
    af = v6527
    ?5 = v6528
    zf = v6529
    sf = v6530
    tf = v6531
    if = v6532
    df = v6533
    of = v6534
    iopl0 = v6535
    iopl1 = v6536
    nt = v6537
    ?15 = v6538
    memory = {}
    ip = v6622 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v6686
    cx = v6687
    dx = v6688
    bx = v6689
    sp = v6724 [from 0x8048460:push   ebp]
    bp = v6691
    si = v6692
    di = v6693
    es = v6694
    cs = v6695
    ss = v6696
    ds = v6697
    fs = v6698
    gs = v6699
    cf = v6700
    ?1 = v6701
    pf = v6702
    ?3 = v6703
    af = v6704
    ?5 = v6705
    zf = v6706
    sf = v6707
    tf = v6708
    if = v6709
    df = v6710
    of = v6711
    iopl0 = v6712
    iopl1 = v6713
    nt = v6714
    ?15 = v6715
    memory = {
        size=4; addr=v6690-0x4 [from 0x8048460:push   ebp]; value=v6691
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v6686
    cx = v6687
    dx = v6688
    bx = v6689
    sp = v6724 [from 0x8048460:push   ebp]
    bp = v6759 [from 0x8048461:mov    ebp, esp]
    si = v6692
    di = v6693
    es = v6694
    cs = v6695
    ss = v6696
    ds = v6697
    fs = v6698
    gs = v6699
    cf = v6700
    ?1 = v6701
    pf = v6702
    ?3 = v6703
    af = v6704
    ?5 = v6705
    zf = v6706
    sf = v6707
    tf = v6708
    if = v6709
    df = v6710
    of = v6711
    iopl0 = v6712
    iopl1 = v6713
    nt = v6714
    ?15 = v6715
    memory = {
        size=4; addr=v6690-0x4 [from 0x8048460:push   ebp]; value=v6691
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v6686
    cx = v6687
    dx = v6688
    bx = v6689
    sp = v6837 [from 0x8048463:sub    esp, 0x08]
    bp = v6759 [from 0x8048461:mov    ebp, esp]
    si = v6692
    di = v6693
    es = v6694
    cs = v6695
    ss = v6696
    ds = v6697
    fs = v6698
    gs = v6699
    cf = -v6830-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6701
    pf = -v6820-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6703
    af = -v6827-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6705
    zf = v6825 [from 0x8048463:sub    esp, 0x08]
    sf = v6823 [from 0x8048463:sub    esp, 0x08]
    tf = v6708
    if = v6709
    df = v6710
    of = v6835 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6712
    iopl1 = v6713
    nt = v6714
    ?15 = v6715
    memory = {
        size=4; addr=v6690-0x4 [from 0x8048460:push   ebp]; value=v6691
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6686
    cx = v6687
    dx = v6688
    bx = v6689
    sp = v6837 [from 0x8048463:sub    esp, 0x08]
    bp = v6759 [from 0x8048461:mov    ebp, esp]
    si = v6692
    di = v6693
    es = v6694
    cs = v6695
    ss = v6696
    ds = v6697
    fs = v6698
    gs = v6699
    cf = -v6830-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6701
    pf = -v6820-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6703
    af = -v6827-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6705
    zf = v6825 [from 0x8048463:sub    esp, 0x08]
    sf = v6823 [from 0x8048463:sub    esp, 0x08]
    tf = v6708
    if = v6709
    df = v6710
    of = v6835 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6712
    iopl1 = v6713
    nt = v6714
    ?15 = v6715
    memory = {
        size=4; addr=v6837 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v6686
    cx = v6687
    dx = v6688
    bx = v6689
    sp = v6916 [from 0x804846d:call   0x08048300]
    bp = v6759 [from 0x8048461:mov    ebp, esp]
    si = v6692
    di = v6693
    es = v6694
    cs = v6695
    ss = v6696
    ds = v6697
    fs = v6698
    gs = v6699
    cf = -v6830-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6701
    pf = -v6820-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6703
    af = -v6827-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6705
    zf = v6825 [from 0x8048463:sub    esp, 0x08]
    sf = v6823 [from 0x8048463:sub    esp, 0x08]
    tf = v6708
    if = v6709
    df = v6710
    of = v6835 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6712
    iopl1 = v6713
    nt = v6714
    ?15 = v6715
    memory = {
        size=4; addr=v6837 [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6837-0x4 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7008
    cx = v7009
    dx = v7010
    bx = v7011
    sp = v7012
    bp = v7013
    si = v7014
    di = v7015
    es = v7016
    cs = v7017
    ss = v7018
    ds = v7019
    fs = v7020
    gs = v7021
    cf = v7022
    ?1 = v7023
    pf = v7024
    ?3 = v7025
    af = v7026
    ?5 = v7027
    zf = v7028
    sf = v7029
    tf = v7030
    if = v7031
    df = v7032
    of = v7033
    iopl0 = v7034
    iopl1 = v7035
    nt = v7036
    ?15 = v7037
    memory = {
        size=4; addr=v7012; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v7008
    cx = v7009
    dx = v7010
    bx = v7011
    sp = v7085 [from 0x8048479:call   0x08048320]
    bp = v7013
    si = v7014
    di = v7015
    es = v7016
    cs = v7017
    ss = v7018
    ds = v7019
    fs = v7020
    gs = v7021
    cf = v7022
    ?1 = v7023
    pf = v7024
    ?3 = v7025
    af = v7026
    ?5 = v7027
    zf = v7028
    sf = v7029
    tf = v7030
    if = v7031
    df = v7032
    of = v7033
    iopl0 = v7034
    iopl1 = v7035
    nt = v7036
    ?15 = v7037
    memory = {
        size=4; addr=v7012; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7012-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v7177
    cx = v7178
    dx = v7179
    bx = v7180
    sp = v7215 [from 0x8048480:push   ebp]
    bp = v7182
    si = v7183
    di = v7184
    es = v7185
    cs = v7186
    ss = v7187
    ds = v7188
    fs = v7189
    gs = v7190
    cf = v7191
    ?1 = v7192
    pf = v7193
    ?3 = v7194
    af = v7195
    ?5 = v7196
    zf = v7197
    sf = v7198
    tf = v7199
    if = v7200
    df = v7201
    of = v7202
    iopl0 = v7203
    iopl1 = v7204
    nt = v7205
    ?15 = v7206
    memory = {
        size=4; addr=v7181-0x4 [from 0x8048480:push   ebp]; value=v7182
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v7177
    cx = v7178
    dx = v7179
    bx = v7180
    sp = v7215 [from 0x8048480:push   ebp]
    bp = v7250 [from 0x8048481:mov    ebp, esp]
    si = v7183
    di = v7184
    es = v7185
    cs = v7186
    ss = v7187
    ds = v7188
    fs = v7189
    gs = v7190
    cf = v7191
    ?1 = v7192
    pf = v7193
    ?3 = v7194
    af = v7195
    ?5 = v7196
    zf = v7197
    sf = v7198
    tf = v7199
    if = v7200
    df = v7201
    of = v7202
    iopl0 = v7203
    iopl1 = v7204
    nt = v7205
    ?15 = v7206
    memory = {
        size=4; addr=v7181-0x4 [from 0x8048480:push   ebp]; value=v7182
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v7177
    cx = v7178
    dx = v7179
    bx = v7180
    sp = v7328 [from 0x8048483:sub    esp, 0x08]
    bp = v7250 [from 0x8048481:mov    ebp, esp]
    si = v7183
    di = v7184
    es = v7185
    cs = v7186
    ss = v7187
    ds = v7188
    fs = v7189
    gs = v7190
    cf = -v7321-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7192
    pf = -v7311-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v7194
    af = -v7318-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v7196
    zf = v7316 [from 0x8048483:sub    esp, 0x08]
    sf = v7314 [from 0x8048483:sub    esp, 0x08]
    tf = v7199
    if = v7200
    df = v7201
    of = v7326 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v7203
    iopl1 = v7204
    nt = v7205
    ?15 = v7206
    memory = {
        size=4; addr=v7181-0x4 [from 0x8048480:push   ebp]; value=v7182
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v7177
    cx = v7178
    dx = v7179
    bx = v7180
    sp = v7328 [from 0x8048483:sub    esp, 0x08]
    bp = v7250 [from 0x8048481:mov    ebp, esp]
    si = v7183
    di = v7184
    es = v7185
    cs = v7186
    ss = v7187
    ds = v7188
    fs = v7189
    gs = v7190
    cf = -v7321-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7192
    pf = -v7389-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7194
    af = v7396 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7196
    zf = v7394 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7392 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7199
    if = v7200
    df = v7201
    of = v7400 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7203
    iopl1 = v7204
    nt = v7205
    ?15 = v7206
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v7364+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7177
    cx = v7178
    dx = v7179
    bx = v7180
    sp = v7328 [from 0x8048483:sub    esp, 0x08]
    bp = v7250 [from 0x8048481:mov    ebp, esp]
    si = v7183
    di = v7184
    es = v7185
    cs = v7186
    ss = v7187
    ds = v7188
    fs = v7189
    gs = v7190
    cf = -v7321-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7192
    pf = -v7389-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7194
    af = v7396 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7196
    zf = v7394 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7392 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7199
    if = v7200
    df = v7201
    of = v7400 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7203
    iopl1 = v7204
    nt = v7205
    ?15 = v7206
    memory = {
        size=4; addr=v7328 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v7177
    cx = v7178
    dx = v7179
    bx = v7180
    sp = v7483 [from 0x8048493:call   0x08048300]
    bp = v7250 [from 0x8048481:mov    ebp, esp]
    si = v7183
    di = v7184
    es = v7185
    cs = v7186
    ss = v7187
    ds = v7188
    fs = v7189
    gs = v7190
    cf = -v7321-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7192
    pf = -v7389-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7194
    af = v7396 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7196
    zf = v7394 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7392 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7199
    if = v7200
    df = v7201
    of = v7400 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7203
    iopl1 = v7204
    nt = v7205
    ?15 = v7206
    memory = {
        size=4; addr=v7328 [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7328-0x4 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7575
    cx = v7576
    dx = v7577
    bx = v7578
    sp = v7579
    bp = v7580
    si = v7581
    di = v7582
    es = v7583
    cs = v7584
    ss = v7585
    ds = v7586
    fs = v7587
    gs = v7588
    cf = v7589
    ?1 = v7590
    pf = v7591
    ?3 = v7592
    af = v7593
    ?5 = v7594
    zf = v7595
    sf = v7596
    tf = v7597
    if = v7598
    df = v7599
    of = v7600
    iopl0 = v7601
    iopl1 = v7602
    nt = v7603
    ?15 = v7604
    memory = {
        size=4; addr=v7579; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v7575
    cx = v7576
    dx = v7577
    bx = v7578
    sp = v7652 [from 0x804849f:call   0x08048320]
    bp = v7580
    si = v7581
    di = v7582
    es = v7583
    cs = v7584
    ss = v7585
    ds = v7586
    fs = v7587
    gs = v7588
    cf = v7589
    ?1 = v7590
    pf = v7591
    ?3 = v7592
    af = v7593
    ?5 = v7594
    zf = v7595
    sf = v7596
    tf = v7597
    if = v7598
    df = v7599
    of = v7600
    iopl0 = v7601
    iopl1 = v7602
    nt = v7603
    ?15 = v7604
    memory = {
        size=4; addr=v7579; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7579-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    ax = v7744
    cx = v7745
    dx = v7746
    bx = v7747
    sp = v7782 [from 0x80484b0:push   ebp]
    bp = v7749
    si = v7750
    di = v7751
    es = v7752
    cs = v7753
    ss = v7754
    ds = v7755
    fs = v7756
    gs = v7757
    cf = v7758
    ?1 = v7759
    pf = v7760
    ?3 = v7761
    af = v7762
    ?5 = v7763
    zf = v7764
    sf = v7765
    tf = v7766
    if = v7767
    df = v7768
    of = v7769
    iopl0 = v7770
    iopl1 = v7771
    nt = v7772
    ?15 = v7773
    memory = {
        size=4; addr=v7748-0x4 [from 0x80484b0:push   ebp]; value=v7749
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v7744
    cx = v7745
    dx = v7746
    bx = v7747
    sp = v7782 [from 0x80484b0:push   ebp]
    bp = v7817 [from 0x80484b1:mov    ebp, esp]
    si = v7750
    di = v7751
    es = v7752
    cs = v7753
    ss = v7754
    ds = v7755
    fs = v7756
    gs = v7757
    cf = v7758
    ?1 = v7759
    pf = v7760
    ?3 = v7761
    af = v7762
    ?5 = v7763
    zf = v7764
    sf = v7765
    tf = v7766
    if = v7767
    df = v7768
    of = v7769
    iopl0 = v7770
    iopl1 = v7771
    nt = v7772
    ?15 = v7773
    memory = {
        size=4; addr=v7748-0x4 [from 0x80484b0:push   ebp]; value=v7749
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v7744
    cx = v7745
    dx = v7746
    bx = v7747
    sp = v7857 [from 0x80484b3:push   edi]
    bp = v7817 [from 0x80484b1:mov    ebp, esp]
    si = v7750
    di = v7751
    es = v7752
    cs = v7753
    ss = v7754
    ds = v7755
    fs = v7756
    gs = v7757
    cf = v7758
    ?1 = v7759
    pf = v7760
    ?3 = v7761
    af = v7762
    ?5 = v7763
    zf = v7764
    sf = v7765
    tf = v7766
    if = v7767
    df = v7768
    of = v7769
    iopl0 = v7770
    iopl1 = v7771
    nt = v7772
    ?15 = v7773
    memory = {
        size=4; addr=v7782-0x4 [from 0x80484b3:push   edi]; value=v7751
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v7744
    cx = v7745
    dx = v7746
    bx = v7747
    sp = v7897 [from 0x80484b4:push   esi]
    bp = v7817 [from 0x80484b1:mov    ebp, esp]
    si = v7750
    di = v7751
    es = v7752
    cs = v7753
    ss = v7754
    ds = v7755
    fs = v7756
    gs = v7757
    cf = v7758
    ?1 = v7759
    pf = v7760
    ?3 = v7761
    af = v7762
    ?5 = v7763
    zf = v7764
    sf = v7765
    tf = v7766
    if = v7767
    df = v7768
    of = v7769
    iopl0 = v7770
    iopl1 = v7771
    nt = v7772
    ?15 = v7773
    memory = {
        size=4; addr=v7857-0x4 [from 0x80484b4:push   esi]; value=v7750
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v7744
    cx = v7745
    dx = v7746
    bx = v7747
    sp = v7937 [from 0x80484b5:push   ebx]
    bp = v7817 [from 0x80484b1:mov    ebp, esp]
    si = v7750
    di = v7751
    es = v7752
    cs = v7753
    ss = v7754
    ds = v7755
    fs = v7756
    gs = v7757
    cf = v7758
    ?1 = v7759
    pf = v7760
    ?3 = v7761
    af = v7762
    ?5 = v7763
    zf = v7764
    sf = v7765
    tf = v7766
    if = v7767
    df = v7768
    of = v7769
    iopl0 = v7770
    iopl1 = v7771
    nt = v7772
    ?15 = v7773
    memory = {
        size=4; addr=v7897-0x4 [from 0x80484b5:push   ebx]; value=v7747
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v7744
    cx = v7745
    dx = v7746
    bx = v7747
    sp = v8015 [from 0x80484b6:sub    esp, 0x0c]
    bp = v7817 [from 0x80484b1:mov    ebp, esp]
    si = v7750
    di = v7751
    es = v7752
    cs = v7753
    ss = v7754
    ds = v7755
    fs = v7756
    gs = v7757
    cf = -v8008-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v7759
    pf = -v7998-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v7761
    af = -v8005-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v7763
    zf = v8003 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8001 [from 0x80484b6:sub    esp, 0x0c]
    tf = v7766
    if = v7767
    df = v7768
    of = v8013 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v7770
    iopl1 = v7771
    nt = v7772
    ?15 = v7773
    memory = {
        size=4; addr=v7897-0x4 [from 0x80484b5:push   ebx]; value=v7747
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v7744
    cx = v7745
    dx = v7746
    bx = v7747
    sp = v8057 [from 0x80484b9:call   0x080484be]
    bp = v7817 [from 0x80484b1:mov    ebp, esp]
    si = v7750
    di = v7751
    es = v7752
    cs = v7753
    ss = v7754
    ds = v7755
    fs = v7756
    gs = v7757
    cf = -v8008-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v7759
    pf = -v7998-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v7761
    af = -v8005-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v7763
    zf = v8003 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8001 [from 0x80484b6:sub    esp, 0x0c]
    tf = v7766
    if = v7767
    df = v7768
    of = v8013 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v7770
    iopl1 = v7771
    nt = v7772
    ?15 = v7773
    memory = {
        size=4; addr=v8015-0x4 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v8149
    cx = v8150
    dx = v8151
    bx = v8187 [from 0x80484be:pop    ebx]
    sp = v8184 [from 0x80484be:pop    ebx]
    bp = v8154
    si = v8155
    di = v8156
    es = v8157
    cs = v8158
    ss = v8159
    ds = v8160
    fs = v8161
    gs = v8162
    cf = v8163
    ?1 = v8164
    pf = v8165
    ?3 = v8166
    af = v8167
    ?5 = v8168
    zf = v8169
    sf = v8170
    tf = v8171
    if = v8172
    df = v8173
    of = v8174
    iopl0 = v8175
    iopl1 = v8176
    nt = v8177
    ?15 = v8178
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v8149
    cx = v8150
    dx = v8151
    bx = v8261 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8184 [from 0x80484be:pop    ebx]
    bp = v8154
    si = v8155
    di = v8156
    es = v8157
    cs = v8158
    ss = v8159
    ds = v8160
    fs = v8161
    gs = v8162
    cf = v8255 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8164
    pf = -v8246-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8166
    af = v8253 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8168
    zf = v8251 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8249 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8171
    if = v8172
    df = v8173
    of = v8259 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8175
    iopl1 = v8176
    nt = v8177
    ?15 = v8178
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v8149
    cx = v8150
    dx = v8151
    bx = v8261 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8303 [from 0x80484c5:call   0x080482c8]
    bp = v8154
    si = v8155
    di = v8156
    es = v8157
    cs = v8158
    ss = v8159
    ds = v8160
    fs = v8161
    gs = v8162
    cf = v8255 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8164
    pf = -v8246-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8166
    af = v8253 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8168
    zf = v8251 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8249 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8171
    if = v8172
    df = v8173
    of = v8259 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8175
    iopl1 = v8176
    nt = v8177
    ?15 = v8178
    memory = {
        size=4; addr=v8184-0x4 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8430 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8396
    dx = v8397
    bx = v8398
    sp = v8399
    bp = v8400
    si = v8401
    di = v8402
    es = v8403
    cs = v8404
    ss = v8405
    ds = v8406
    fs = v8407
    gs = v8408
    cf = v8409
    ?1 = v8410
    pf = v8411
    ?3 = v8412
    af = v8413
    ?5 = v8414
    zf = v8415
    sf = v8416
    tf = v8417
    if = v8418
    df = v8419
    of = v8420
    iopl0 = v8421
    iopl1 = v8422
    nt = v8423
    ?15 = v8424
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8430 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8396
    dx = v8467 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8398
    sp = v8399
    bp = v8400
    si = v8401
    di = v8402
    es = v8403
    cs = v8404
    ss = v8405
    ds = v8406
    fs = v8407
    gs = v8408
    cf = v8409
    ?1 = v8410
    pf = v8411
    ?3 = v8412
    af = v8413
    ?5 = v8414
    zf = v8415
    sf = v8416
    tf = v8417
    if = v8418
    df = v8419
    of = v8420
    iopl0 = v8421
    iopl1 = v8422
    nt = v8423
    ?15 = v8424
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = v8545 [from 0x80484d6:sub    eax, edx]
    cx = v8396
    dx = v8467 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8398
    sp = v8399
    bp = v8400
    si = v8401
    di = v8402
    es = v8403
    cs = v8404
    ss = v8405
    ds = v8406
    fs = v8407
    gs = v8408
    cf = -v8538-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v8410
    pf = -v8528-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v8412
    af = -v8535-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v8414
    zf = v8533 [from 0x80484d6:sub    eax, edx]
    sf = v8531 [from 0x80484d6:sub    eax, edx]
    tf = v8417
    if = v8418
    df = v8419
    of = v8543 [from 0x80484d6:sub    eax, edx]
    iopl0 = v8421
    iopl1 = v8422
    nt = v8423
    ?15 = v8424
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v8600 [from 0x80484d8:sar    eax, 0x02]
    cx = v8396
    dx = v8467 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8398
    sp = v8399
    bp = v8400
    si = v8401
    di = v8402
    es = v8403
    cs = v8404
    ss = v8405
    ds = v8406
    fs = v8407
    gs = v8408
    cf = v8591 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8410
    pf = -v8617-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8412
    af = <top>
    ?5 = v8414
    zf = v8626 [from 0x80484d8:sar    eax, 0x02]
    sf = v8622 [from 0x80484d8:sar    eax, 0x02]
    tf = v8417
    if = v8418
    df = v8419
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8421
    iopl1 = v8422
    nt = v8423
    ?15 = v8424
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v8600 [from 0x80484d8:sar    eax, 0x02]
    cx = v8396
    dx = v8467 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8398
    sp = v8399
    bp = v8400
    si = v8401
    di = v8402
    es = v8403
    cs = v8404
    ss = v8405
    ds = v8406
    fs = v8407
    gs = v8408
    cf = v8591 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8410
    pf = -v8617-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8412
    af = <top>
    ?5 = v8414
    zf = v8626 [from 0x80484d8:sar    eax, 0x02]
    sf = v8622 [from 0x80484d8:sar    eax, 0x02]
    tf = v8417
    if = v8418
    df = v8419
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8421
    iopl1 = v8422
    nt = v8423
    ?15 = v8424
    memory = {
        size=4; addr=v8400-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8600 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v8600 [from 0x80484d8:sar    eax, 0x02]
    cx = v8396
    dx = v8467 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8398
    sp = v8399
    bp = v8400
    si = v8401
    di = v8402
    es = v8403
    cs = v8404
    ss = v8405
    ds = v8406
    fs = v8407
    gs = v8408
    cf = v8591 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8410
    pf = -v8617-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8412
    af = <top>
    ?5 = v8414
    zf = v8626 [from 0x80484d8:sar    eax, 0x02]
    sf = v8622 [from 0x80484d8:sar    eax, 0x02]
    tf = v8417
    if = v8418
    df = v8419
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8421
    iopl1 = v8422
    nt = v8423
    ?15 = v8424
    memory = {
        size=4; addr=v8400-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8600 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v8705 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v8828
    cx = v8829
    dx = v8830
    bx = v8831
    sp = v8900 [from 0x80484e0:add    esp, 0x0c]
    bp = v8833
    si = v8834
    di = v8835
    es = v8836
    cs = v8837
    ss = v8838
    ds = v8839
    fs = v8840
    gs = v8841
    cf = v8894 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8843
    pf = -v8885-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8845
    af = v8892 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8847
    zf = v8890 [from 0x80484e0:add    esp, 0x0c]
    sf = v8888 [from 0x80484e0:add    esp, 0x0c]
    tf = v8850
    if = v8851
    df = v8852
    of = v8898 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8854
    iopl1 = v8855
    nt = v8856
    ?15 = v8857
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v8828
    cx = v8829
    dx = v8830
    bx = v8940 [from 0x80484e3:pop    ebx]
    sp = v8937 [from 0x80484e3:pop    ebx]
    bp = v8833
    si = v8834
    di = v8835
    es = v8836
    cs = v8837
    ss = v8838
    ds = v8839
    fs = v8840
    gs = v8841
    cf = v8894 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8843
    pf = -v8885-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8845
    af = v8892 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8847
    zf = v8890 [from 0x80484e0:add    esp, 0x0c]
    sf = v8888 [from 0x80484e0:add    esp, 0x0c]
    tf = v8850
    if = v8851
    df = v8852
    of = v8898 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8854
    iopl1 = v8855
    nt = v8856
    ?15 = v8857
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v8828
    cx = v8829
    dx = v8830
    bx = v8940 [from 0x80484e3:pop    ebx]
    sp = v8977 [from 0x80484e4:pop    esi]
    bp = v8833
    si = v8980 [from 0x80484e4:pop    esi]
    di = v8835
    es = v8836
    cs = v8837
    ss = v8838
    ds = v8839
    fs = v8840
    gs = v8841
    cf = v8894 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8843
    pf = -v8885-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8845
    af = v8892 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8847
    zf = v8890 [from 0x80484e0:add    esp, 0x0c]
    sf = v8888 [from 0x80484e0:add    esp, 0x0c]
    tf = v8850
    if = v8851
    df = v8852
    of = v8898 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8854
    iopl1 = v8855
    nt = v8856
    ?15 = v8857
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v8828
    cx = v8829
    dx = v8830
    bx = v8940 [from 0x80484e3:pop    ebx]
    sp = v9017 [from 0x80484e5:pop    edi]
    bp = v8833
    si = v8980 [from 0x80484e4:pop    esi]
    di = v9020 [from 0x80484e5:pop    edi]
    es = v8836
    cs = v8837
    ss = v8838
    ds = v8839
    fs = v8840
    gs = v8841
    cf = v8894 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8843
    pf = -v8885-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8845
    af = v8892 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8847
    zf = v8890 [from 0x80484e0:add    esp, 0x0c]
    sf = v8888 [from 0x80484e0:add    esp, 0x0c]
    tf = v8850
    if = v8851
    df = v8852
    of = v8898 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8854
    iopl1 = v8855
    nt = v8856
    ?15 = v8857
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v8828
    cx = v8829
    dx = v8830
    bx = v8940 [from 0x80484e3:pop    ebx]
    sp = v9057 [from 0x80484e6:pop    ebp]
    bp = v9060 [from 0x80484e6:pop    ebp]
    si = v8980 [from 0x80484e4:pop    esi]
    di = v9020 [from 0x80484e5:pop    edi]
    es = v8836
    cs = v8837
    ss = v8838
    ds = v8839
    fs = v8840
    gs = v8841
    cf = v8894 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8843
    pf = -v8885-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8845
    af = v8892 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8847
    zf = v8890 [from 0x80484e0:add    esp, 0x0c]
    sf = v8888 [from 0x80484e0:add    esp, 0x0c]
    tf = v8850
    if = v8851
    df = v8852
    of = v8898 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8854
    iopl1 = v8855
    nt = v8856
    ?15 = v8857
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v8828
    cx = v8829
    dx = v8830
    bx = v8940 [from 0x80484e3:pop    ebx]
    sp = v9102 [from 0x80484e7:ret    ]
    bp = v9060 [from 0x80484e6:pop    ebp]
    si = v8980 [from 0x80484e4:pop    esi]
    di = v9020 [from 0x80484e5:pop    edi]
    es = v8836
    cs = v8837
    ss = v8838
    ds = v8839
    fs = v8840
    gs = v8841
    cf = v8894 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8843
    pf = -v8885-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8845
    af = v8892 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8847
    zf = v8890 [from 0x80484e0:add    esp, 0x0c]
    sf = v8888 [from 0x80484e0:add    esp, 0x0c]
    tf = v8850
    if = v8851
    df = v8852
    of = v8898 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8854
    iopl1 = v8855
    nt = v8856
    ?15 = v8857
    memory = {}
    ip = v9100 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v9164
    cx = v9165
    dx = v9166
    bx = v9167
    sp = v9202 [from 0x8048520:push   ebp]
    bp = v9169
    si = v9170
    di = v9171
    es = v9172
    cs = v9173
    ss = v9174
    ds = v9175
    fs = v9176
    gs = v9177
    cf = v9178
    ?1 = v9179
    pf = v9180
    ?3 = v9181
    af = v9182
    ?5 = v9183
    zf = v9184
    sf = v9185
    tf = v9186
    if = v9187
    df = v9188
    of = v9189
    iopl0 = v9190
    iopl1 = v9191
    nt = v9192
    ?15 = v9193
    memory = {
        size=4; addr=v9168-0x4 [from 0x8048520:push   ebp]; value=v9169
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v9164
    cx = v9165
    dx = v9166
    bx = v9167
    sp = v9202 [from 0x8048520:push   ebp]
    bp = v9237 [from 0x8048521:mov    ebp, esp]
    si = v9170
    di = v9171
    es = v9172
    cs = v9173
    ss = v9174
    ds = v9175
    fs = v9176
    gs = v9177
    cf = v9178
    ?1 = v9179
    pf = v9180
    ?3 = v9181
    af = v9182
    ?5 = v9183
    zf = v9184
    sf = v9185
    tf = v9186
    if = v9187
    df = v9188
    of = v9189
    iopl0 = v9190
    iopl1 = v9191
    nt = v9192
    ?15 = v9193
    memory = {
        size=4; addr=v9168-0x4 [from 0x8048520:push   ebp]; value=v9169
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v9164
    cx = v9165
    dx = v9166
    bx = v9167
    sp = v9277 [from 0x8048523:push   edi]
    bp = v9237 [from 0x8048521:mov    ebp, esp]
    si = v9170
    di = v9171
    es = v9172
    cs = v9173
    ss = v9174
    ds = v9175
    fs = v9176
    gs = v9177
    cf = v9178
    ?1 = v9179
    pf = v9180
    ?3 = v9181
    af = v9182
    ?5 = v9183
    zf = v9184
    sf = v9185
    tf = v9186
    if = v9187
    df = v9188
    of = v9189
    iopl0 = v9190
    iopl1 = v9191
    nt = v9192
    ?15 = v9193
    memory = {
        size=4; addr=v9202-0x4 [from 0x8048523:push   edi]; value=v9171
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v9164
    cx = v9165
    dx = v9166
    bx = v9167
    sp = v9317 [from 0x8048524:push   esi]
    bp = v9237 [from 0x8048521:mov    ebp, esp]
    si = v9170
    di = v9171
    es = v9172
    cs = v9173
    ss = v9174
    ds = v9175
    fs = v9176
    gs = v9177
    cf = v9178
    ?1 = v9179
    pf = v9180
    ?3 = v9181
    af = v9182
    ?5 = v9183
    zf = v9184
    sf = v9185
    tf = v9186
    if = v9187
    df = v9188
    of = v9189
    iopl0 = v9190
    iopl1 = v9191
    nt = v9192
    ?15 = v9193
    memory = {
        size=4; addr=v9277-0x4 [from 0x8048524:push   esi]; value=v9170
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v9164
    cx = v9165
    dx = v9166
    bx = v9167
    sp = v9357 [from 0x8048525:push   ebx]
    bp = v9237 [from 0x8048521:mov    ebp, esp]
    si = v9170
    di = v9171
    es = v9172
    cs = v9173
    ss = v9174
    ds = v9175
    fs = v9176
    gs = v9177
    cf = v9178
    ?1 = v9179
    pf = v9180
    ?3 = v9181
    af = v9182
    ?5 = v9183
    zf = v9184
    sf = v9185
    tf = v9186
    if = v9187
    df = v9188
    of = v9189
    iopl0 = v9190
    iopl1 = v9191
    nt = v9192
    ?15 = v9193
    memory = {
        size=4; addr=v9317-0x4 [from 0x8048525:push   ebx]; value=v9167
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v9164
    cx = v9165
    dx = v9166
    bx = v9167
    sp = v9435 [from 0x8048526:sub    esp, 0x0c]
    bp = v9237 [from 0x8048521:mov    ebp, esp]
    si = v9170
    di = v9171
    es = v9172
    cs = v9173
    ss = v9174
    ds = v9175
    fs = v9176
    gs = v9177
    cf = -v9428-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9179
    pf = -v9418-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9181
    af = -v9425-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9183
    zf = v9423 [from 0x8048526:sub    esp, 0x0c]
    sf = v9421 [from 0x8048526:sub    esp, 0x0c]
    tf = v9186
    if = v9187
    df = v9188
    of = v9433 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9190
    iopl1 = v9191
    nt = v9192
    ?15 = v9193
    memory = {
        size=4; addr=v9317-0x4 [from 0x8048525:push   ebx]; value=v9167
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v9164
    cx = v9165
    dx = v9166
    bx = v9167
    sp = v9477 [from 0x8048529:call   0x0804852e]
    bp = v9237 [from 0x8048521:mov    ebp, esp]
    si = v9170
    di = v9171
    es = v9172
    cs = v9173
    ss = v9174
    ds = v9175
    fs = v9176
    gs = v9177
    cf = -v9428-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9179
    pf = -v9418-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9181
    af = -v9425-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9183
    zf = v9423 [from 0x8048526:sub    esp, 0x0c]
    sf = v9421 [from 0x8048526:sub    esp, 0x0c]
    tf = v9186
    if = v9187
    df = v9188
    of = v9433 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9190
    iopl1 = v9191
    nt = v9192
    ?15 = v9193
    memory = {
        size=4; addr=v9435-0x4 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v9569
    cx = v9570
    dx = v9571
    bx = v9607 [from 0x804852e:pop    ebx]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = v9583
    ?1 = v9584
    pf = v9585
    ?3 = v9586
    af = v9587
    ?5 = v9588
    zf = v9589
    sf = v9590
    tf = v9591
    if = v9592
    df = v9593
    of = v9594
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v9569
    cx = v9570
    dx = v9571
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = v9675 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9584
    pf = -v9666-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9586
    af = v9673 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9588
    zf = v9671 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9669 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9591
    if = v9592
    df = v9593
    of = v9679 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9718 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9570
    dx = v9571
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = v9675 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9584
    pf = -v9666-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9586
    af = v9673 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9588
    zf = v9671 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9669 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9591
    if = v9592
    df = v9593
    of = v9679 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9718 [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9570
    dx = v9755 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = v9675 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9584
    pf = -v9666-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9586
    af = v9673 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9588
    zf = v9671 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9669 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9591
    if = v9592
    df = v9593
    of = v9679 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = v9833 [from 0x8048541:sub    eax, edx]
    cx = v9570
    dx = v9755 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = -v9826-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v9584
    pf = -v9816-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v9586
    af = -v9823-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v9588
    zf = v9821 [from 0x8048541:sub    eax, edx]
    sf = v9819 [from 0x8048541:sub    eax, edx]
    tf = v9591
    if = v9592
    df = v9593
    of = v9831 [from 0x8048541:sub    eax, edx]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v9888 [from 0x8048543:sar    eax, 0x02]
    cx = v9570
    dx = v9755 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = v9879 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9584
    pf = -v9905-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v9586
    af = <top>
    ?5 = v9588
    zf = v9914 [from 0x8048543:sar    eax, 0x02]
    sf = v9910 [from 0x8048543:sar    eax, 0x02]
    tf = v9591
    if = v9592
    df = v9593
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v9888 [from 0x8048543:sar    eax, 0x02]
    cx = v9570
    dx = v9755 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = v9879 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9584
    pf = -v9905-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v9586
    af = <top>
    ?5 = v9588
    zf = v9914 [from 0x8048543:sar    eax, 0x02]
    sf = v9910 [from 0x8048543:sar    eax, 0x02]
    tf = v9591
    if = v9592
    df = v9593
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {
        size=4; addr=v9574-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9888 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v10028 [from 0x8048549:dec    eax]
    cx = v9570
    dx = v9755 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = v9879 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9584
    pf = -v10014-0x1 [from 0x8048549:dec    eax]
    ?3 = v9586
    af = -v10021-0x1 [from 0x8048549:dec    eax]
    ?5 = v9588
    zf = v10019 [from 0x8048549:dec    eax]
    sf = v10017 [from 0x8048549:dec    eax]
    tf = v9591
    if = v9592
    df = v9593
    of = v10026 [from 0x8048549:dec    eax]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {
        size=4; addr=v9574-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9888 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v10028 [from 0x8048549:dec    eax]
    cx = v9570
    dx = v9755 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = -v10099-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v9584
    pf = -v10089-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v9586
    af = -v10096-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v9588
    zf = v10094 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10092 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v9591
    if = v9592
    df = v9593
    of = v10104 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {
        size=4; addr=v9574-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9888 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v10028 [from 0x8048549:dec    eax]
    cx = v9570
    dx = v9755 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9681 [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9604 [from 0x804852e:pop    ebx]
    bp = v9574
    si = v9575
    di = v9576
    es = v9577
    cs = v9578
    ss = v9579
    ds = v9580
    fs = v9581
    gs = v9582
    cf = -v10099-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v9584
    pf = -v10089-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v9586
    af = -v10096-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v9588
    zf = v10094 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10092 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v9591
    if = v9592
    df = v9593
    of = v10104 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v9595
    iopl1 = v9596
    nt = v9597
    ?15 = v9598
    memory = {
        size=4; addr=v9574-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9888 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v10142 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax = v10265
    cx = v10266
    dx = v10267
    bx = v10268
    sp = v10269
    bp = v10270
    si = v10303 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v10272
    es = v10273
    cs = v10274
    ss = v10275
    ds = v10276
    fs = v10277
    gs = v10278
    cf = v10279
    ?1 = v10280
    pf = v10281
    ?3 = v10282
    af = v10283
    ?5 = v10284
    zf = v10285
    sf = v10286
    tf = v10287
    if = v10288
    df = v10289
    of = v10290
    iopl0 = v10291
    iopl1 = v10292
    nt = v10293
    ?15 = v10294
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]
0x8048552:xor    edi, edi
    ax = v10265
    cx = v10266
    dx = v10267
    bx = v10268
    sp = v10269
    bp = v10270
    si = v10303 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v10273
    cs = v10274
    ss = v10275
    ds = v10276
    fs = v10277
    gs = v10278
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10280
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10282
    af = <top>
    ?5 = v10284
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10287
    if = v10288
    df = v10289
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10291
    iopl1 = v10292
    nt = v10293
    ?15 = v10294
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]
0x8048554:lea    esi, [esi + 0x00000000]
    ax = v10265
    cx = v10266
    dx = v10267
    bx = v10268
    sp = v10269
    bp = v10270
    si = v10405 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v10273
    cs = v10274
    ss = v10275
    ds = v10276
    fs = v10277
    gs = v10278
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10280
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10282
    af = <top>
    ?5 = v10284
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10287
    if = v10288
    df = v10289
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10291
    iopl1 = v10292
    nt = v10293
    ?15 = v10294
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]
0x804855a:lea    edi, [edi + 0x00000000]
    ax = v10265
    cx = v10266
    dx = v10267
    bx = v10268
    sp = v10269
    bp = v10270
    si = v10405 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v10273
    cs = v10274
    ss = v10275
    ds = v10276
    fs = v10277
    gs = v10278
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10280
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10282
    af = <top>
    ?5 = v10284
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10287
    if = v10288
    df = v10289
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10291
    iopl1 = v10292
    nt = v10293
    ?15 = v10294
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]
0x8048560:call   DWORD PTR ds:[esi]
    ax = v10265
    cx = v10266
    dx = v10267
    bx = v10268
    sp = v10486 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v10270
    si = v10405 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v10273
    cs = v10274
    ss = v10275
    ds = v10276
    fs = v10277
    gs = v10278
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v10280
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v10282
    af = <top>
    ?5 = v10284
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v10287
    if = v10288
    df = v10289
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v10291
    iopl1 = v10292
    nt = v10293
    ?15 = v10294
    memory = {
        size=4; addr=v10269-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v10484 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax = v10548
    cx = v10549
    dx = v10550
    bx = v10551
    sp = v10552
    bp = v10553
    si = v10554
    di = v10618 [from 0x8048562:inc    edi]
    es = v10556
    cs = v10557
    ss = v10558
    ds = v10559
    fs = v10560
    gs = v10561
    cf = v10562
    ?1 = v10563
    pf = -v10605-0x1 [from 0x8048562:inc    edi]
    ?3 = v10565
    af = v10612 [from 0x8048562:inc    edi]
    ?5 = v10567
    zf = v10610 [from 0x8048562:inc    edi]
    sf = v10608 [from 0x8048562:inc    edi]
    tf = v10570
    if = v10571
    df = v10572
    of = v10616 [from 0x8048562:inc    edi]
    iopl0 = v10574
    iopl1 = v10575
    nt = v10576
    ?15 = v10577
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]
0x8048563:sub    esi, 0x04
    ax = v10548
    cx = v10549
    dx = v10550
    bx = v10551
    sp = v10552
    bp = v10553
    si = v10696 [from 0x8048563:sub    esi, 0x04]
    di = v10618 [from 0x8048562:inc    edi]
    es = v10556
    cs = v10557
    ss = v10558
    ds = v10559
    fs = v10560
    gs = v10561
    cf = -v10689-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v10563
    pf = -v10679-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v10565
    af = -v10686-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v10567
    zf = v10684 [from 0x8048563:sub    esi, 0x04]
    sf = v10682 [from 0x8048563:sub    esi, 0x04]
    tf = v10570
    if = v10571
    df = v10572
    of = v10694 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v10574
    iopl1 = v10575
    nt = v10576
    ?15 = v10577
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v10548
    cx = v10549
    dx = v10550
    bx = v10551
    sp = v10552
    bp = v10553
    si = v10696 [from 0x8048563:sub    esi, 0x04]
    di = v10618 [from 0x8048562:inc    edi]
    es = v10556
    cs = v10557
    ss = v10558
    ds = v10559
    fs = v10560
    gs = v10561
    cf = -v10771-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v10563
    pf = -v10761-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v10565
    af = -v10768-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v10567
    zf = v10766 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v10764 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v10570
    if = v10571
    df = v10572
    of = v10776 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v10574
    iopl1 = v10575
    nt = v10576
    ?15 = v10577
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
0x8048569:jne    0x08048560
    ax = v10548
    cx = v10549
    dx = v10550
    bx = v10551
    sp = v10552
    bp = v10553
    si = v10696 [from 0x8048563:sub    esi, 0x04]
    di = v10618 [from 0x8048562:inc    edi]
    es = v10556
    cs = v10557
    ss = v10558
    ds = v10559
    fs = v10560
    gs = v10561
    cf = -v10771-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v10563
    pf = -v10761-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v10565
    af = -v10768-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v10567
    zf = v10766 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v10764 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v10570
    if = v10571
    df = v10572
    of = v10776 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v10574
    iopl1 = v10575
    nt = v10576
    ?15 = v10577
    memory = {}
    ip = v10815 [from 0x8048569:jne    0x08048560]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v10938
    cx = v10939
    dx = v10940
    bx = v10941
    sp = v10978 [from 0x804856b:call   0x080485b0]
    bp = v10943
    si = v10944
    di = v10945
    es = v10946
    cs = v10947
    ss = v10948
    ds = v10949
    fs = v10950
    gs = v10951
    cf = v10952
    ?1 = v10953
    pf = v10954
    ?3 = v10955
    af = v10956
    ?5 = v10957
    zf = v10958
    sf = v10959
    tf = v10960
    if = v10961
    df = v10962
    of = v10963
    iopl0 = v10964
    iopl1 = v10965
    nt = v10966
    ?15 = v10967
    memory = {
        size=4; addr=v10942-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v11070
    cx = v11071
    dx = v11072
    bx = v11073
    sp = v11142 [from 0x8048570:add    esp, 0x0c]
    bp = v11075
    si = v11076
    di = v11077
    es = v11078
    cs = v11079
    ss = v11080
    ds = v11081
    fs = v11082
    gs = v11083
    cf = v11136 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11085
    pf = -v11127-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11087
    af = v11134 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11089
    zf = v11132 [from 0x8048570:add    esp, 0x0c]
    sf = v11130 [from 0x8048570:add    esp, 0x0c]
    tf = v11092
    if = v11093
    df = v11094
    of = v11140 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11096
    iopl1 = v11097
    nt = v11098
    ?15 = v11099
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v11070
    cx = v11071
    dx = v11072
    bx = v11182 [from 0x8048573:pop    ebx]
    sp = v11179 [from 0x8048573:pop    ebx]
    bp = v11075
    si = v11076
    di = v11077
    es = v11078
    cs = v11079
    ss = v11080
    ds = v11081
    fs = v11082
    gs = v11083
    cf = v11136 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11085
    pf = -v11127-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11087
    af = v11134 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11089
    zf = v11132 [from 0x8048570:add    esp, 0x0c]
    sf = v11130 [from 0x8048570:add    esp, 0x0c]
    tf = v11092
    if = v11093
    df = v11094
    of = v11140 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11096
    iopl1 = v11097
    nt = v11098
    ?15 = v11099
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v11070
    cx = v11071
    dx = v11072
    bx = v11182 [from 0x8048573:pop    ebx]
    sp = v11219 [from 0x8048574:pop    esi]
    bp = v11075
    si = v11222 [from 0x8048574:pop    esi]
    di = v11077
    es = v11078
    cs = v11079
    ss = v11080
    ds = v11081
    fs = v11082
    gs = v11083
    cf = v11136 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11085
    pf = -v11127-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11087
    af = v11134 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11089
    zf = v11132 [from 0x8048570:add    esp, 0x0c]
    sf = v11130 [from 0x8048570:add    esp, 0x0c]
    tf = v11092
    if = v11093
    df = v11094
    of = v11140 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11096
    iopl1 = v11097
    nt = v11098
    ?15 = v11099
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v11070
    cx = v11071
    dx = v11072
    bx = v11182 [from 0x8048573:pop    ebx]
    sp = v11259 [from 0x8048575:pop    edi]
    bp = v11075
    si = v11222 [from 0x8048574:pop    esi]
    di = v11262 [from 0x8048575:pop    edi]
    es = v11078
    cs = v11079
    ss = v11080
    ds = v11081
    fs = v11082
    gs = v11083
    cf = v11136 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11085
    pf = -v11127-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11087
    af = v11134 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11089
    zf = v11132 [from 0x8048570:add    esp, 0x0c]
    sf = v11130 [from 0x8048570:add    esp, 0x0c]
    tf = v11092
    if = v11093
    df = v11094
    of = v11140 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11096
    iopl1 = v11097
    nt = v11098
    ?15 = v11099
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v11070
    cx = v11071
    dx = v11072
    bx = v11182 [from 0x8048573:pop    ebx]
    sp = v11299 [from 0x8048576:pop    ebp]
    bp = v11302 [from 0x8048576:pop    ebp]
    si = v11222 [from 0x8048574:pop    esi]
    di = v11262 [from 0x8048575:pop    edi]
    es = v11078
    cs = v11079
    ss = v11080
    ds = v11081
    fs = v11082
    gs = v11083
    cf = v11136 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11085
    pf = -v11127-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11087
    af = v11134 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11089
    zf = v11132 [from 0x8048570:add    esp, 0x0c]
    sf = v11130 [from 0x8048570:add    esp, 0x0c]
    tf = v11092
    if = v11093
    df = v11094
    of = v11140 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11096
    iopl1 = v11097
    nt = v11098
    ?15 = v11099
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v11070
    cx = v11071
    dx = v11072
    bx = v11182 [from 0x8048573:pop    ebx]
    sp = v11344 [from 0x8048577:ret    ]
    bp = v11302 [from 0x8048576:pop    ebp]
    si = v11222 [from 0x8048574:pop    esi]
    di = v11262 [from 0x8048575:pop    edi]
    es = v11078
    cs = v11079
    ss = v11080
    ds = v11081
    fs = v11082
    gs = v11083
    cf = v11136 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11085
    pf = -v11127-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11087
    af = v11134 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11089
    zf = v11132 [from 0x8048570:add    esp, 0x0c]
    sf = v11130 [from 0x8048570:add    esp, 0x0c]
    tf = v11092
    if = v11093
    df = v11094
    of = v11140 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11096
    iopl1 = v11097
    nt = v11098
    ?15 = v11099
    memory = {}
    ip = v11342 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    ax = v11406
    cx = v11407
    dx = v11408
    bx = v11409
    sp = v11444 [from 0x8048580:push   ebp]
    bp = v11411
    si = v11412
    di = v11413
    es = v11414
    cs = v11415
    ss = v11416
    ds = v11417
    fs = v11418
    gs = v11419
    cf = v11420
    ?1 = v11421
    pf = v11422
    ?3 = v11423
    af = v11424
    ?5 = v11425
    zf = v11426
    sf = v11427
    tf = v11428
    if = v11429
    df = v11430
    of = v11431
    iopl0 = v11432
    iopl1 = v11433
    nt = v11434
    ?15 = v11435
    memory = {
        size=4; addr=v11410-0x4 [from 0x8048580:push   ebp]; value=v11411
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v11406
    cx = v11407
    dx = v11408
    bx = v11409
    sp = v11444 [from 0x8048580:push   ebp]
    bp = v11479 [from 0x8048581:mov    ebp, esp]
    si = v11412
    di = v11413
    es = v11414
    cs = v11415
    ss = v11416
    ds = v11417
    fs = v11418
    gs = v11419
    cf = v11420
    ?1 = v11421
    pf = v11422
    ?3 = v11423
    af = v11424
    ?5 = v11425
    zf = v11426
    sf = v11427
    tf = v11428
    if = v11429
    df = v11430
    of = v11431
    iopl0 = v11432
    iopl1 = v11433
    nt = v11434
    ?15 = v11435
    memory = {
        size=4; addr=v11410-0x4 [from 0x8048580:push   ebp]; value=v11411
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v11406
    cx = v11407
    dx = v11408
    bx = v11409
    sp = v11519 [from 0x8048583:push   ebx]
    bp = v11479 [from 0x8048581:mov    ebp, esp]
    si = v11412
    di = v11413
    es = v11414
    cs = v11415
    ss = v11416
    ds = v11417
    fs = v11418
    gs = v11419
    cf = v11420
    ?1 = v11421
    pf = v11422
    ?3 = v11423
    af = v11424
    ?5 = v11425
    zf = v11426
    sf = v11427
    tf = v11428
    if = v11429
    df = v11430
    of = v11431
    iopl0 = v11432
    iopl1 = v11433
    nt = v11434
    ?15 = v11435
    memory = {
        size=4; addr=v11444-0x4 [from 0x8048583:push   ebx]; value=v11409
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v11406
    cx = v11407
    dx = v11408
    bx = v11409
    sp = v11597 [from 0x8048584:sub    esp, 0x04]
    bp = v11479 [from 0x8048581:mov    ebp, esp]
    si = v11412
    di = v11413
    es = v11414
    cs = v11415
    ss = v11416
    ds = v11417
    fs = v11418
    gs = v11419
    cf = -v11590-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v11421
    pf = -v11580-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v11423
    af = -v11587-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v11425
    zf = v11585 [from 0x8048584:sub    esp, 0x04]
    sf = v11583 [from 0x8048584:sub    esp, 0x04]
    tf = v11428
    if = v11429
    df = v11430
    of = v11595 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v11432
    iopl1 = v11433
    nt = v11434
    ?15 = v11435
    memory = {
        size=4; addr=v11444-0x4 [from 0x8048583:push   ebx]; value=v11409
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v11406
    cx = v11407
    dx = v11408
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v11597 [from 0x8048584:sub    esp, 0x04]
    bp = v11479 [from 0x8048581:mov    ebp, esp]
    si = v11412
    di = v11413
    es = v11414
    cs = v11415
    ss = v11416
    ds = v11417
    fs = v11418
    gs = v11419
    cf = -v11590-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v11421
    pf = -v11580-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v11423
    af = -v11587-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v11425
    zf = v11585 [from 0x8048584:sub    esp, 0x04]
    sf = v11583 [from 0x8048584:sub    esp, 0x04]
    tf = v11428
    if = v11429
    df = v11430
    of = v11595 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v11432
    iopl1 = v11433
    nt = v11434
    ?15 = v11435
    memory = {
        size=4; addr=v11444-0x4 [from 0x8048583:push   ebx]; value=v11409
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v11669 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v11407
    dx = v11408
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v11597 [from 0x8048584:sub    esp, 0x04]
    bp = v11479 [from 0x8048581:mov    ebp, esp]
    si = v11412
    di = v11413
    es = v11414
    cs = v11415
    ss = v11416
    ds = v11417
    fs = v11418
    gs = v11419
    cf = -v11590-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v11421
    pf = -v11580-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v11423
    af = -v11587-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v11425
    zf = v11585 [from 0x8048584:sub    esp, 0x04]
    sf = v11583 [from 0x8048584:sub    esp, 0x04]
    tf = v11428
    if = v11429
    df = v11430
    of = v11595 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v11432
    iopl1 = v11433
    nt = v11434
    ?15 = v11435
    memory = {
        size=4; addr=v11444-0x4 [from 0x8048583:push   ebx]; value=v11409
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v11669 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v11407
    dx = v11408
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v11597 [from 0x8048584:sub    esp, 0x04]
    bp = v11479 [from 0x8048581:mov    ebp, esp]
    si = v11412
    di = v11413
    es = v11414
    cs = v11415
    ss = v11416
    ds = v11417
    fs = v11418
    gs = v11419
    cf = -v11740-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v11421
    pf = -v11730-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v11423
    af = -v11737-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v11425
    zf = v11735 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v11733 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v11428
    if = v11429
    df = v11430
    of = v11745 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v11432
    iopl1 = v11433
    nt = v11434
    ?15 = v11435
    memory = {
        size=4; addr=v11444-0x4 [from 0x8048583:push   ebx]; value=v11409
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v11669 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v11407
    dx = v11408
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v11597 [from 0x8048584:sub    esp, 0x04]
    bp = v11479 [from 0x8048581:mov    ebp, esp]
    si = v11412
    di = v11413
    es = v11414
    cs = v11415
    ss = v11416
    ds = v11417
    fs = v11418
    gs = v11419
    cf = -v11740-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v11421
    pf = -v11730-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v11423
    af = -v11737-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v11425
    zf = v11735 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v11733 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v11428
    if = v11429
    df = v11430
    of = v11745 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v11432
    iopl1 = v11433
    nt = v11434
    ?15 = v11435
    memory = {
        size=4; addr=v11444-0x4 [from 0x8048583:push   ebx]; value=v11409
    }
    ip = v11783 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v11906
    cx = v11907
    dx = v11908
    bx = v11909
    sp = v11910
    bp = v11911
    si = v11941 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11913
    es = v11914
    cs = v11915
    ss = v11916
    ds = v11917
    fs = v11918
    gs = v11919
    cf = v11920
    ?1 = v11921
    pf = v11922
    ?3 = v11923
    af = v11924
    ?5 = v11925
    zf = v11926
    sf = v11927
    tf = v11928
    if = v11929
    df = v11930
    of = v11931
    iopl0 = v11932
    iopl1 = v11933
    nt = v11934
    ?15 = v11935
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v11906
    cx = v11907
    dx = v11908
    bx = v11909
    sp = v11910
    bp = v11911
    si = v11941 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11978 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11914
    cs = v11915
    ss = v11916
    ds = v11917
    fs = v11918
    gs = v11919
    cf = v11920
    ?1 = v11921
    pf = v11922
    ?3 = v11923
    af = v11924
    ?5 = v11925
    zf = v11926
    sf = v11927
    tf = v11928
    if = v11929
    df = v11930
    of = v11931
    iopl0 = v11932
    iopl1 = v11933
    nt = v11934
    ?15 = v11935
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v11906
    cx = v11907
    dx = v11908
    bx = v12056 [from 0x80485a0:sub    ebx, 0x04]
    sp = v11910
    bp = v11911
    si = v11941 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11978 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11914
    cs = v11915
    ss = v11916
    ds = v11917
    fs = v11918
    gs = v11919
    cf = -v12049-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v11921
    pf = -v12039-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v11923
    af = -v12046-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v11925
    zf = v12044 [from 0x80485a0:sub    ebx, 0x04]
    sf = v12042 [from 0x80485a0:sub    ebx, 0x04]
    tf = v11928
    if = v11929
    df = v11930
    of = v12054 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v11932
    iopl1 = v11933
    nt = v11934
    ?15 = v11935
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v11906
    cx = v11907
    dx = v11908
    bx = v12056 [from 0x80485a0:sub    ebx, 0x04]
    sp = v12098 [from 0x80485a3:call   eax]
    bp = v11911
    si = v11941 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11978 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11914
    cs = v11915
    ss = v11916
    ds = v11917
    fs = v11918
    gs = v11919
    cf = -v12049-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v11921
    pf = -v12039-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v11923
    af = -v12046-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v11925
    zf = v12044 [from 0x80485a0:sub    ebx, 0x04]
    sf = v12042 [from 0x80485a0:sub    ebx, 0x04]
    tf = v11928
    if = v11929
    df = v11930
    of = v12054 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v11932
    iopl1 = v11933
    nt = v11934
    ?15 = v11935
    memory = {
        size=4; addr=v11910-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v11906
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v12195 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12161
    dx = v12162
    bx = v12163
    sp = v12164
    bp = v12165
    si = v12166
    di = v12167
    es = v12168
    cs = v12169
    ss = v12170
    ds = v12171
    fs = v12172
    gs = v12173
    cf = v12174
    ?1 = v12175
    pf = v12176
    ?3 = v12177
    af = v12178
    ?5 = v12179
    zf = v12180
    sf = v12181
    tf = v12182
    if = v12183
    df = v12184
    of = v12185
    iopl0 = v12186
    iopl1 = v12187
    nt = v12188
    ?15 = v12189
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v12195 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12161
    dx = v12162
    bx = v12163
    sp = v12164
    bp = v12165
    si = v12166
    di = v12167
    es = v12168
    cs = v12169
    ss = v12170
    ds = v12171
    fs = v12172
    gs = v12173
    cf = -v12266-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v12175
    pf = -v12256-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v12177
    af = -v12263-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v12179
    zf = v12261 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v12259 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v12182
    if = v12183
    df = v12184
    of = v12271 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v12186
    iopl1 = v12187
    nt = v12188
    ?15 = v12189
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v12195 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v12161
    dx = v12162
    bx = v12163
    sp = v12164
    bp = v12165
    si = v12166
    di = v12167
    es = v12168
    cs = v12169
    ss = v12170
    ds = v12171
    fs = v12172
    gs = v12173
    cf = -v12266-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v12175
    pf = -v12256-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v12177
    af = -v12263-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v12179
    zf = v12261 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v12259 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v12182
    if = v12183
    df = v12184
    of = v12271 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v12186
    iopl1 = v12187
    nt = v12188
    ?15 = v12189
    memory = {}
    ip = v12310 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v12471 [from 0x80485ac:pop    eax]
    cx = v12434
    dx = v12435
    bx = v12436
    sp = v12468 [from 0x80485ac:pop    eax]
    bp = v12438
    si = v12439
    di = v12440
    es = v12441
    cs = v12442
    ss = v12443
    ds = v12444
    fs = v12445
    gs = v12446
    cf = v12447
    ?1 = v12448
    pf = v12449
    ?3 = v12450
    af = v12451
    ?5 = v12452
    zf = v12453
    sf = v12454
    tf = v12455
    if = v12456
    df = v12457
    of = v12458
    iopl0 = v12459
    iopl1 = v12460
    nt = v12461
    ?15 = v12462
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v12471 [from 0x80485ac:pop    eax]
    cx = v12434
    dx = v12435
    bx = v12511 [from 0x80485ad:pop    ebx]
    sp = v12508 [from 0x80485ad:pop    ebx]
    bp = v12438
    si = v12439
    di = v12440
    es = v12441
    cs = v12442
    ss = v12443
    ds = v12444
    fs = v12445
    gs = v12446
    cf = v12447
    ?1 = v12448
    pf = v12449
    ?3 = v12450
    af = v12451
    ?5 = v12452
    zf = v12453
    sf = v12454
    tf = v12455
    if = v12456
    df = v12457
    of = v12458
    iopl0 = v12459
    iopl1 = v12460
    nt = v12461
    ?15 = v12462
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v12471 [from 0x80485ac:pop    eax]
    cx = v12434
    dx = v12435
    bx = v12511 [from 0x80485ad:pop    ebx]
    sp = v12548 [from 0x80485ae:pop    ebp]
    bp = v12551 [from 0x80485ae:pop    ebp]
    si = v12439
    di = v12440
    es = v12441
    cs = v12442
    ss = v12443
    ds = v12444
    fs = v12445
    gs = v12446
    cf = v12447
    ?1 = v12448
    pf = v12449
    ?3 = v12450
    af = v12451
    ?5 = v12452
    zf = v12453
    sf = v12454
    tf = v12455
    if = v12456
    df = v12457
    of = v12458
    iopl0 = v12459
    iopl1 = v12460
    nt = v12461
    ?15 = v12462
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v12471 [from 0x80485ac:pop    eax]
    cx = v12434
    dx = v12435
    bx = v12511 [from 0x80485ad:pop    ebx]
    sp = v12593 [from 0x80485af:ret    ]
    bp = v12551 [from 0x80485ae:pop    ebp]
    si = v12439
    di = v12440
    es = v12441
    cs = v12442
    ss = v12443
    ds = v12444
    fs = v12445
    gs = v12446
    cf = v12447
    ?1 = v12448
    pf = v12449
    ?3 = v12450
    af = v12451
    ?5 = v12452
    zf = v12453
    sf = v12454
    tf = v12455
    if = v12456
    df = v12457
    of = v12458
    iopl0 = v12459
    iopl1 = v12460
    nt = v12461
    ?15 = v12462
    memory = {}
    ip = v12591 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v12655
    cx = v12656
    dx = v12657
    bx = v12658
    sp = v12693 [from 0x80485b0:push   ebp]
    bp = v12660
    si = v12661
    di = v12662
    es = v12663
    cs = v12664
    ss = v12665
    ds = v12666
    fs = v12667
    gs = v12668
    cf = v12669
    ?1 = v12670
    pf = v12671
    ?3 = v12672
    af = v12673
    ?5 = v12674
    zf = v12675
    sf = v12676
    tf = v12677
    if = v12678
    df = v12679
    of = v12680
    iopl0 = v12681
    iopl1 = v12682
    nt = v12683
    ?15 = v12684
    memory = {
        size=4; addr=v12659-0x4 [from 0x80485b0:push   ebp]; value=v12660
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v12655
    cx = v12656
    dx = v12657
    bx = v12658
    sp = v12693 [from 0x80485b0:push   ebp]
    bp = v12728 [from 0x80485b1:mov    ebp, esp]
    si = v12661
    di = v12662
    es = v12663
    cs = v12664
    ss = v12665
    ds = v12666
    fs = v12667
    gs = v12668
    cf = v12669
    ?1 = v12670
    pf = v12671
    ?3 = v12672
    af = v12673
    ?5 = v12674
    zf = v12675
    sf = v12676
    tf = v12677
    if = v12678
    df = v12679
    of = v12680
    iopl0 = v12681
    iopl1 = v12682
    nt = v12683
    ?15 = v12684
    memory = {
        size=4; addr=v12659-0x4 [from 0x80485b0:push   ebp]; value=v12660
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v12655
    cx = v12656
    dx = v12657
    bx = v12658
    sp = v12768 [from 0x80485b3:push   ebx]
    bp = v12728 [from 0x80485b1:mov    ebp, esp]
    si = v12661
    di = v12662
    es = v12663
    cs = v12664
    ss = v12665
    ds = v12666
    fs = v12667
    gs = v12668
    cf = v12669
    ?1 = v12670
    pf = v12671
    ?3 = v12672
    af = v12673
    ?5 = v12674
    zf = v12675
    sf = v12676
    tf = v12677
    if = v12678
    df = v12679
    of = v12680
    iopl0 = v12681
    iopl1 = v12682
    nt = v12683
    ?15 = v12684
    memory = {
        size=4; addr=v12693-0x4 [from 0x80485b3:push   ebx]; value=v12658
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v12655
    cx = v12656
    dx = v12657
    bx = v12658
    sp = v12808 [from 0x80485b4:push   eax]
    bp = v12728 [from 0x80485b1:mov    ebp, esp]
    si = v12661
    di = v12662
    es = v12663
    cs = v12664
    ss = v12665
    ds = v12666
    fs = v12667
    gs = v12668
    cf = v12669
    ?1 = v12670
    pf = v12671
    ?3 = v12672
    af = v12673
    ?5 = v12674
    zf = v12675
    sf = v12676
    tf = v12677
    if = v12678
    df = v12679
    of = v12680
    iopl0 = v12681
    iopl1 = v12682
    nt = v12683
    ?15 = v12684
    memory = {
        size=4; addr=v12768-0x4 [from 0x80485b4:push   eax]; value=v12655
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v12655
    cx = v12656
    dx = v12657
    bx = v12658
    sp = v12850 [from 0x80485b5:call   0x080485ba]
    bp = v12728 [from 0x80485b1:mov    ebp, esp]
    si = v12661
    di = v12662
    es = v12663
    cs = v12664
    ss = v12665
    ds = v12666
    fs = v12667
    gs = v12668
    cf = v12669
    ?1 = v12670
    pf = v12671
    ?3 = v12672
    af = v12673
    ?5 = v12674
    zf = v12675
    sf = v12676
    tf = v12677
    if = v12678
    df = v12679
    of = v12680
    iopl0 = v12681
    iopl1 = v12682
    nt = v12683
    ?15 = v12684
    memory = {
        size=4; addr=v12808-0x4 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v12942
    cx = v12943
    dx = v12944
    bx = v12980 [from 0x80485ba:pop    ebx]
    sp = v12977 [from 0x80485ba:pop    ebx]
    bp = v12947
    si = v12948
    di = v12949
    es = v12950
    cs = v12951
    ss = v12952
    ds = v12953
    fs = v12954
    gs = v12955
    cf = v12956
    ?1 = v12957
    pf = v12958
    ?3 = v12959
    af = v12960
    ?5 = v12961
    zf = v12962
    sf = v12963
    tf = v12964
    if = v12965
    df = v12966
    of = v12967
    iopl0 = v12968
    iopl1 = v12969
    nt = v12970
    ?15 = v12971
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v12942
    cx = v12943
    dx = v12944
    bx = v13054 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v12977 [from 0x80485ba:pop    ebx]
    bp = v12947
    si = v12948
    di = v12949
    es = v12950
    cs = v12951
    ss = v12952
    ds = v12953
    fs = v12954
    gs = v12955
    cf = v13048 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v12957
    pf = -v13039-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v12959
    af = v13046 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v12961
    zf = v13044 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v13042 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v12964
    if = v12965
    df = v12966
    of = v13052 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v12968
    iopl1 = v12969
    nt = v12970
    ?15 = v12971
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v12942
    cx = v12943
    dx = v12944
    bx = v13054 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v13096 [from 0x80485c1:call   0x08048390]
    bp = v12947
    si = v12948
    di = v12949
    es = v12950
    cs = v12951
    ss = v12952
    ds = v12953
    fs = v12954
    gs = v12955
    cf = v13048 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v12957
    pf = -v13039-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v12959
    af = v13046 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v12961
    zf = v13044 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v13042 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v12964
    if = v12965
    df = v12966
    of = v13052 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v12968
    iopl1 = v12969
    nt = v12970
    ?15 = v12971
    memory = {
        size=4; addr=v12977-0x4 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v13226 [from 0x80485c6:pop    eax]
    cx = v13189
    dx = v13190
    bx = v13191
    sp = v13223 [from 0x80485c6:pop    eax]
    bp = v13193
    si = v13194
    di = v13195
    es = v13196
    cs = v13197
    ss = v13198
    ds = v13199
    fs = v13200
    gs = v13201
    cf = v13202
    ?1 = v13203
    pf = v13204
    ?3 = v13205
    af = v13206
    ?5 = v13207
    zf = v13208
    sf = v13209
    tf = v13210
    if = v13211
    df = v13212
    of = v13213
    iopl0 = v13214
    iopl1 = v13215
    nt = v13216
    ?15 = v13217
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v13226 [from 0x80485c6:pop    eax]
    cx = v13189
    dx = v13190
    bx = v13266 [from 0x80485c7:pop    ebx]
    sp = v13263 [from 0x80485c7:pop    ebx]
    bp = v13193
    si = v13194
    di = v13195
    es = v13196
    cs = v13197
    ss = v13198
    ds = v13199
    fs = v13200
    gs = v13201
    cf = v13202
    ?1 = v13203
    pf = v13204
    ?3 = v13205
    af = v13206
    ?5 = v13207
    zf = v13208
    sf = v13209
    tf = v13210
    if = v13211
    df = v13212
    of = v13213
    iopl0 = v13214
    iopl1 = v13215
    nt = v13216
    ?15 = v13217
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v13226 [from 0x80485c6:pop    eax]
    cx = v13189
    dx = v13190
    bx = v13266 [from 0x80485c7:pop    ebx]
    sp = v13308 [from 0x80485c8:leave  ]
    bp = v13307 [from 0x80485c8:leave  ]
    si = v13194
    di = v13195
    es = v13196
    cs = v13197
    ss = v13198
    ds = v13199
    fs = v13200
    gs = v13201
    cf = v13202
    ?1 = v13203
    pf = v13204
    ?3 = v13205
    af = v13206
    ?5 = v13207
    zf = v13208
    sf = v13209
    tf = v13210
    if = v13211
    df = v13212
    of = v13213
    iopl0 = v13214
    iopl1 = v13215
    nt = v13216
    ?15 = v13217
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v13226 [from 0x80485c6:pop    eax]
    cx = v13189
    dx = v13190
    bx = v13266 [from 0x80485c7:pop    ebx]
    sp = v13350 [from 0x80485c9:ret    ]
    bp = v13307 [from 0x80485c8:leave  ]
    si = v13194
    di = v13195
    es = v13196
    cs = v13197
    ss = v13198
    ds = v13199
    fs = v13200
    gs = v13201
    cf = v13202
    ?1 = v13203
    pf = v13204
    ?3 = v13205
    af = v13206
    ?5 = v13207
    zf = v13208
    sf = v13209
    tf = v13210
    if = v13211
    df = v13212
    of = v13213
    iopl0 = v13214
    iopl1 = v13215
    nt = v13216
    ?15 = v13217
    memory = {}
    ip = v13348 [from 0x80485c9:ret    ]
analyzed headers: 1
