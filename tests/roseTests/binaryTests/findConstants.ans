=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v326
    cx = v327
    dx = v328
    bx = v329
    sp = v330-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v331
    si = v332
    di = v333
    es = v334
    cs = v335
    ss = v336
    ds = v337
    fs = v338
    gs = v339
    cf = v340
    ?1 = v341
    pf = v342
    ?3 = v343
    af = v344
    ?5 = v345
    zf = v346
    sf = v347
    tf = v348
    if = v349
    df = v350
    of = v351
    iopl0 = v352
    iopl1 = v353
    nt = v354
    ?15 = v355
    memory = {
        size=4; addr=v330-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v453
    cx = v454
    dx = v455
    bx = v456
    sp = v457-0x4 [from 0x80482d8:call   0x08048580]
    bp = v458
    si = v459
    di = v460
    es = v461
    cs = v462
    ss = v463
    ds = v464
    fs = v465
    gs = v466
    cf = v467
    ?1 = v468
    pf = v469
    ?3 = v470
    af = v471
    ?5 = v472
    zf = v473
    sf = v474
    tf = v475
    if = v476
    df = v477
    of = v478
    iopl0 = v479
    iopl1 = v480
    nt = v481
    ?15 = v482
    memory = {
        size=4; addr=v457-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v580
    cx = v581
    dx = v582
    bx = v583
    sp = v585+0x4 [from 0x80482dd:leave  ]
    bp = v614 [from 0x80482dd:leave  ]
    si = v586
    di = v587
    es = v588
    cs = v589
    ss = v590
    ds = v591
    fs = v592
    gs = v593
    cf = v594
    ?1 = v595
    pf = v596
    ?3 = v597
    af = v598
    ?5 = v599
    zf = v600
    sf = v601
    tf = v602
    if = v603
    df = v604
    of = v605
    iopl0 = v606
    iopl1 = v607
    nt = v608
    ?15 = v609
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v580
    cx = v581
    dx = v582
    bx = v583
    sp = v585+0x8 [from 0x80482de:ret    ]
    bp = v614 [from 0x80482dd:leave  ]
    si = v586
    di = v587
    es = v588
    cs = v589
    ss = v590
    ds = v591
    fs = v592
    gs = v593
    cf = v594
    ?1 = v595
    pf = v596
    ?3 = v597
    af = v598
    ?5 = v599
    zf = v600
    sf = v601
    tf = v602
    if = v603
    df = v604
    of = v605
    iopl0 = v606
    iopl1 = v607
    nt = v608
    ?15 = v609
    memory = {}
    ip = v652 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v714
    cx = v715
    dx = v716
    bx = v717
    sp = v718
    bp = v719
    si = v720
    di = v721
    es = v722
    cs = v723
    ss = v724
    ds = v725
    fs = v726
    gs = v727
    cf = v728
    ?1 = v729
    pf = v730
    ?3 = v731
    af = v732
    ?5 = v733
    zf = v734
    sf = v735
    tf = v736
    if = v737
    df = v738
    of = v739
    iopl0 = v740
    iopl1 = v741
    nt = v742
    ?15 = v743
    memory = {}
    ip = v747 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v809
    cx = v810
    dx = v811
    bx = v812
    sp = v813
    bp = v814
    si = v815
    di = v816
    es = v817
    cs = v818
    ss = v819
    ds = v820
    fs = v821
    gs = v822
    cf = v823
    ?1 = v824
    pf = v825
    ?3 = v826
    af = v827
    ?5 = v828
    zf = v829
    sf = v830
    tf = v831
    if = v832
    df = v833
    of = v834
    iopl0 = v835
    iopl1 = v836
    nt = v837
    ?15 = v838
    memory = {}
    ip = v842 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v904
    cx = v905
    dx = v906
    bx = v907
    sp = v908
    bp = v909
    si = v910
    di = v911
    es = v912
    cs = v913
    ss = v914
    ds = v915
    fs = v916
    gs = v917
    cf = v918
    ?1 = v919
    pf = v920
    ?3 = v921
    af = v922
    ?5 = v923
    zf = v924
    sf = v925
    tf = v926
    if = v927
    df = v928
    of = v929
    iopl0 = v930
    iopl1 = v931
    nt = v932
    ?15 = v933
    memory = {}
    ip = v937 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v999
    cx = v1000
    dx = v1001
    bx = v1002
    sp = v1003
    bp = v1004
    si = v1005
    di = v1006
    es = v1007
    cs = v1008
    ss = v1009
    ds = v1010
    fs = v1011
    gs = v1012
    cf = v1013
    ?1 = v1014
    pf = v1015
    ?3 = v1016
    af = v1017
    ?5 = v1018
    zf = v1019
    sf = v1020
    tf = v1021
    if = v1022
    df = v1023
    of = v1024
    iopl0 = v1025
    iopl1 = v1026
    nt = v1027
    ?15 = v1028
    memory = {}
    ip = v1032 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1094
    cx = v1095
    dx = v1096
    bx = v1097
    sp = v1098
    bp = v1099
    si = v1100
    di = v1101
    es = v1102
    cs = v1103
    ss = v1104
    ds = v1105
    fs = v1106
    gs = v1107
    cf = v1108
    ?1 = v1109
    pf = v1110
    ?3 = v1111
    af = v1112
    ?5 = v1113
    zf = v1114
    sf = v1115
    tf = v1116
    if = v1117
    df = v1118
    of = v1119
    iopl0 = v1120
    iopl1 = v1121
    nt = v1122
    ?15 = v1123
    memory = {}
    ip = v1127 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1189
    cx = v1190
    dx = v1191
    bx = v1192
    sp = v1193
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1195
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1189
    cx = v1190
    dx = v1191
    bx = v1192
    sp = v1193+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1193+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v1344-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v1786
    cx = v1787
    dx = v1788
    bx = v1789
    sp = v1790
    bp = v1791
    si = v1792
    di = v1793
    es = v1794
    cs = v1795
    ss = v1796
    ds = v1797
    fs = v1798
    gs = v1799
    cf = v1800
    ?1 = v1801
    pf = v1802
    ?3 = v1803
    af = v1804
    ?5 = v1805
    zf = v1806
    sf = v1807
    tf = v1808
    if = v1809
    df = v1810
    of = v1811
    iopl0 = v1812
    iopl1 = v1813
    nt = v1814
    ?15 = v1815
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x4 [from 0x8048364:push   ebp]
    bp = v1884
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x4 [from 0x8048364:push   ebp]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x8 [from 0x8048367:push   ebx]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0xc [from 0x8048368:push   ecx]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0xc [from 0x8048368:push   ecx]; value=v1880
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x10 [from 0x8048369:call   0x0804836e]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v1883-0xc [from 0x8048368:push   ecx]; value=v1880
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2146
    cx = v2147
    dx = v2148
    bx = v2180 [from 0x804836e:pop    ebx]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2160
    ?1 = v2161
    pf = v2162
    ?3 = v2163
    af = v2164
    ?5 = v2165
    zf = v2166
    sf = v2167
    tf = v2168
    if = v2169
    df = v2170
    of = v2171
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2146
    cx = v2147
    dx = v2148
    bx = v2180+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2242 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2161
    pf = -v2237-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2163
    af = v2241 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2165
    zf = v2240 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2239 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2168
    if = v2169
    df = v2170
    of = v2245 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2146
    cx = v2147
    dx = v2281 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2180+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2242 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2161
    pf = -v2237-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2163
    af = v2241 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2165
    zf = v2240 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2239 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2168
    if = v2169
    df = v2170
    of = v2245 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2146
    cx = v2147
    dx = v2281 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2180+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2161
    pf = -v2330-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2163
    af = <top>
    ?5 = v2165
    zf = v2333 [from 0x804837b:test   edx, edx]
    sf = v2332 [from 0x804837b:test   edx, edx]
    tf = v2168
    if = v2169
    df = v2170
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2146
    cx = v2147
    dx = v2281 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2180+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2150+0x4 [from 0x804836e:pop    ebx]
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2161
    pf = -v2330-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2163
    af = <top>
    ?5 = v2165
    zf = v2333 [from 0x804837b:test   edx, edx]
    sf = v2332 [from 0x804837b:test   edx, edx]
    tf = v2168
    if = v2169
    df = v2170
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = v2370 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v2492
    cx = v2493
    dx = v2494
    bx = v2495
    sp = v2496-0x4 [from 0x804837f:call   0x08048330]
    bp = v2497
    si = v2498
    di = v2499
    es = v2500
    cs = v2501
    ss = v2502
    ds = v2503
    fs = v2504
    gs = v2505
    cf = v2506
    ?1 = v2507
    pf = v2508
    ?3 = v2509
    af = v2510
    ?5 = v2511
    zf = v2512
    sf = v2513
    tf = v2514
    if = v2515
    df = v2516
    of = v2517
    iopl0 = v2518
    iopl1 = v2519
    nt = v2520
    ?15 = v2521
    memory = {
        size=4; addr=v2496-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v2653 [from 0x8048384:pop    eax]
    cx = v2620
    dx = v2621
    bx = v2622
    sp = v2623+0x4 [from 0x8048384:pop    eax]
    bp = v2624
    si = v2625
    di = v2626
    es = v2627
    cs = v2628
    ss = v2629
    ds = v2630
    fs = v2631
    gs = v2632
    cf = v2633
    ?1 = v2634
    pf = v2635
    ?3 = v2636
    af = v2637
    ?5 = v2638
    zf = v2639
    sf = v2640
    tf = v2641
    if = v2642
    df = v2643
    of = v2644
    iopl0 = v2645
    iopl1 = v2646
    nt = v2647
    ?15 = v2648
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v2653 [from 0x8048384:pop    eax]
    cx = v2620
    dx = v2621
    bx = v2689 [from 0x8048385:pop    ebx]
    sp = v2623+0x8 [from 0x8048385:pop    ebx]
    bp = v2624
    si = v2625
    di = v2626
    es = v2627
    cs = v2628
    ss = v2629
    ds = v2630
    fs = v2631
    gs = v2632
    cf = v2633
    ?1 = v2634
    pf = v2635
    ?3 = v2636
    af = v2637
    ?5 = v2638
    zf = v2639
    sf = v2640
    tf = v2641
    if = v2642
    df = v2643
    of = v2644
    iopl0 = v2645
    iopl1 = v2646
    nt = v2647
    ?15 = v2648
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v2653 [from 0x8048384:pop    eax]
    cx = v2620
    dx = v2621
    bx = v2689 [from 0x8048385:pop    ebx]
    sp = v2624+0x4 [from 0x8048386:leave  ]
    bp = v2725 [from 0x8048386:leave  ]
    si = v2625
    di = v2626
    es = v2627
    cs = v2628
    ss = v2629
    ds = v2630
    fs = v2631
    gs = v2632
    cf = v2633
    ?1 = v2634
    pf = v2635
    ?3 = v2636
    af = v2637
    ?5 = v2638
    zf = v2639
    sf = v2640
    tf = v2641
    if = v2642
    df = v2643
    of = v2644
    iopl0 = v2645
    iopl1 = v2646
    nt = v2647
    ?15 = v2648
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v2653 [from 0x8048384:pop    eax]
    cx = v2620
    dx = v2621
    bx = v2689 [from 0x8048385:pop    ebx]
    sp = v2624+0x8 [from 0x8048387:ret    ]
    bp = v2725 [from 0x8048386:leave  ]
    si = v2625
    di = v2626
    es = v2627
    cs = v2628
    ss = v2629
    ds = v2630
    fs = v2631
    gs = v2632
    cf = v2633
    ?1 = v2634
    pf = v2635
    ?3 = v2636
    af = v2637
    ?5 = v2638
    zf = v2639
    sf = v2640
    tf = v2641
    if = v2642
    df = v2643
    of = v2644
    iopl0 = v2645
    iopl1 = v2646
    nt = v2647
    ?15 = v2648
    memory = {}
    ip = v2763 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0x4 [from 0x8048390:push   ebp]
    bp = v2830
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = v2839
    ?1 = v2840
    pf = v2841
    ?3 = v2842
    af = v2843
    ?5 = v2844
    zf = v2845
    sf = v2846
    tf = v2847
    if = v2848
    df = v2849
    of = v2850
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0x4 [from 0x8048390:push   ebp]
    bp = v2829-0x4 [from 0x8048390:push   ebp]
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = v2839
    ?1 = v2840
    pf = v2841
    ?3 = v2842
    af = v2843
    ?5 = v2844
    zf = v2845
    sf = v2846
    tf = v2847
    if = v2848
    df = v2849
    of = v2850
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2829-0x4 [from 0x8048390:push   ebp]
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = -v2956-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v2840
    pf = -v2950-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v2842
    af = -v2954-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v2844
    zf = v2953 [from 0x8048393:sub    esp, 0x08]
    sf = v2952 [from 0x8048393:sub    esp, 0x08]
    tf = v2847
    if = v2848
    df = v2849
    of = v2960 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2829-0x4 [from 0x8048390:push   ebp]
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = -v3028-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v2840
    pf = -v3022-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v2842
    af = -v3026-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v2844
    zf = v3025 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3024 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v2847
    if = v2848
    df = v2849
    of = v3032 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v2825
    cx = v2826
    dx = v2827
    bx = v2828
    sp = v2829-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2829-0x4 [from 0x8048390:push   ebp]
    si = v2831
    di = v2832
    es = v2833
    cs = v2834
    ss = v2835
    ds = v2836
    fs = v2837
    gs = v2838
    cf = -v3028-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v2840
    pf = -v3022-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v2842
    af = -v3026-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v2844
    zf = v3025 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3024 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v2847
    if = v2848
    df = v2849
    of = v3032 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v2851
    iopl1 = v2852
    nt = v2853
    ?15 = v2854
    memory = {
        size=4; addr=v2829-0x4 [from 0x8048390:push   ebp]; value=v2830
    }
    ip = v3067 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3222 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3190
    dx = v3191
    bx = v3192
    sp = v3193
    bp = v3194
    si = v3195
    di = v3196
    es = v3197
    cs = v3198
    ss = v3199
    ds = v3200
    fs = v3201
    gs = v3202
    cf = v3203
    ?1 = v3204
    pf = v3205
    ?3 = v3206
    af = v3207
    ?5 = v3208
    zf = v3209
    sf = v3210
    tf = v3211
    if = v3212
    df = v3213
    of = v3214
    iopl0 = v3215
    iopl1 = v3216
    nt = v3217
    ?15 = v3218
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3222 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3190
    dx = v3256 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3192
    sp = v3193
    bp = v3194
    si = v3195
    di = v3196
    es = v3197
    cs = v3198
    ss = v3199
    ds = v3200
    fs = v3201
    gs = v3202
    cf = v3203
    ?1 = v3204
    pf = v3205
    ?3 = v3206
    af = v3207
    ?5 = v3208
    zf = v3209
    sf = v3210
    tf = v3211
    if = v3212
    df = v3213
    of = v3214
    iopl0 = v3215
    iopl1 = v3216
    nt = v3217
    ?15 = v3218
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3222 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3190
    dx = v3256 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3192
    sp = v3193
    bp = v3194
    si = v3195
    di = v3196
    es = v3197
    cs = v3198
    ss = v3199
    ds = v3200
    fs = v3201
    gs = v3202
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3204
    pf = -v3305-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3206
    af = <top>
    ?5 = v3208
    zf = v3308 [from 0x80483a6:test   edx, edx]
    sf = v3307 [from 0x80483a6:test   edx, edx]
    tf = v3211
    if = v3212
    df = v3213
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3215
    iopl1 = v3216
    nt = v3217
    ?15 = v3218
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3222 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3190
    dx = v3256 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3192
    sp = v3193
    bp = v3194
    si = v3195
    di = v3196
    es = v3197
    cs = v3198
    ss = v3199
    ds = v3200
    fs = v3201
    gs = v3202
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3204
    pf = -v3305-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3206
    af = <top>
    ?5 = v3208
    zf = v3308 [from 0x80483a6:test   edx, edx]
    sf = v3307 [from 0x80483a6:test   edx, edx]
    tf = v3211
    if = v3212
    df = v3213
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3215
    iopl1 = v3216
    nt = v3217
    ?15 = v3218
    memory = {}
    ip = v3345 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v3467
    cx = v3468
    dx = v3469
    bx = v3470
    sp = v3471
    bp = v3472
    si = v3473 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3474
    es = v3475
    cs = v3476
    ss = v3477
    ds = v3478
    fs = v3479
    gs = v3480
    cf = v3481
    ?1 = v3482
    pf = v3483
    ?3 = v3484
    af = v3485
    ?5 = v3486
    zf = v3487
    sf = v3488
    tf = v3489
    if = v3490
    df = v3491
    of = v3492
    iopl0 = v3493
    iopl1 = v3494
    nt = v3495
    ?15 = v3496
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v3467+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3468
    dx = v3469
    bx = v3470
    sp = v3471
    bp = v3472
    si = v3473 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3474
    es = v3475
    cs = v3476
    ss = v3477
    ds = v3478
    fs = v3479
    gs = v3480
    cf = v3561 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3482
    pf = -v3556-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3484
    af = v3560 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3486
    zf = v3559 [from 0x80483b0:add    eax, 0x04]
    sf = v3558 [from 0x80483b0:add    eax, 0x04]
    tf = v3489
    if = v3490
    df = v3491
    of = v3564 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3493
    iopl1 = v3494
    nt = v3495
    ?15 = v3496
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v3467+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3468
    dx = v3469
    bx = v3470
    sp = v3471
    bp = v3472
    si = v3473 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3474
    es = v3475
    cs = v3476
    ss = v3477
    ds = v3478
    fs = v3479
    gs = v3480
    cf = v3561 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3482
    pf = -v3556-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3484
    af = v3560 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3486
    zf = v3559 [from 0x80483b0:add    eax, 0x04]
    sf = v3558 [from 0x80483b0:add    eax, 0x04]
    tf = v3489
    if = v3490
    df = v3491
    of = v3564 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3493
    iopl1 = v3494
    nt = v3495
    ?15 = v3496
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v3467+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v3467+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3468
    dx = v3469
    bx = v3470
    sp = v3471-0x4 [from 0x80483b8:call   edx]
    bp = v3472
    si = v3473 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3474
    es = v3475
    cs = v3476
    ss = v3477
    ds = v3478
    fs = v3479
    gs = v3480
    cf = v3561 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3482
    pf = -v3556-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3484
    af = v3560 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3486
    zf = v3559 [from 0x80483b0:add    eax, 0x04]
    sf = v3558 [from 0x80483b0:add    eax, 0x04]
    tf = v3489
    if = v3490
    df = v3491
    of = v3564 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3493
    iopl1 = v3494
    nt = v3495
    ?15 = v3496
    memory = {
        size=4; addr=v3471-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v3469
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3730 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3698
    dx = v3699
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3703
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = v3711
    ?1 = v3712
    pf = v3713
    ?3 = v3714
    af = v3715
    ?5 = v3716
    zf = v3717
    sf = v3718
    tf = v3719
    if = v3720
    df = v3721
    of = v3722
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v3730 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3698
    dx = v3764 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3703
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = v3711
    ?1 = v3712
    pf = v3713
    ?3 = v3714
    af = v3715
    ?5 = v3716
    zf = v3717
    sf = v3718
    tf = v3719
    if = v3720
    df = v3721
    of = v3722
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v3730 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3698
    dx = v3764 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3703
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v3712
    pf = -v3813-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v3714
    af = <top>
    ?5 = v3716
    zf = v3816 [from 0x80483c1:test   edx, edx]
    sf = v3815 [from 0x80483c1:test   edx, edx]
    tf = v3719
    if = v3720
    df = v3721
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v3730 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3698
    dx = v3764 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v3700
    sp = v3701
    bp = v3702
    si = v3703
    di = v3704
    es = v3705
    cs = v3706
    ss = v3707
    ds = v3708
    fs = v3709
    gs = v3710
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v3712
    pf = -v3813-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v3714
    af = <top>
    ?5 = v3716
    zf = v3816 [from 0x80483c1:test   edx, edx]
    sf = v3815 [from 0x80483c1:test   edx, edx]
    tf = v3719
    if = v3720
    df = v3721
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v3723
    iopl1 = v3724
    nt = v3725
    ?15 = v3726
    memory = {}
    ip = v3854 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3980
    bp = v3981
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v3990
    ?1 = v3991
    pf = v3992
    ?3 = v3993
    af = v3994
    ?5 = v3995
    zf = v3996
    sf = v3997
    tf = v3998
    if = v3999
    df = v4000
    of = v4001
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3981+0x4 [from 0x80483cc:leave  ]
    bp = v4046 [from 0x80483cc:leave  ]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v3990
    ?1 = v3991
    pf = v3992
    ?3 = v3993
    af = v3994
    ?5 = v3995
    zf = v3996
    sf = v3997
    tf = v3998
    if = v3999
    df = v4000
    of = v4001
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v3976
    cx = v3977
    dx = v3978
    bx = v3979
    sp = v3981+0x8 [from 0x80483cd:ret    ]
    bp = v4046 [from 0x80483cc:leave  ]
    si = v3982
    di = v3983
    es = v3984
    cs = v3985
    ss = v3986
    ds = v3987
    fs = v3988
    gs = v3989
    cf = v3990
    ?1 = v3991
    pf = v3992
    ?3 = v3993
    af = v3994
    ?5 = v3995
    zf = v3996
    sf = v3997
    tf = v3998
    if = v3999
    df = v4000
    of = v4001
    iopl0 = v4002
    iopl1 = v4003
    nt = v4004
    ?15 = v4005
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v4084 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v4146
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0x4 [from 0x80483d0:push   ebp]
    bp = v4151
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = v4160
    ?1 = v4161
    pf = v4162
    ?3 = v4163
    af = v4164
    ?5 = v4165
    zf = v4166
    sf = v4167
    tf = v4168
    if = v4169
    df = v4170
    of = v4171
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v4146
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0x4 [from 0x80483d0:push   ebp]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = v4160
    ?1 = v4161
    pf = v4162
    ?3 = v4163
    af = v4164
    ?5 = v4165
    zf = v4166
    sf = v4167
    tf = v4168
    if = v4169
    df = v4170
    of = v4171
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v4146
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = -v4277-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4161
    pf = -v4271-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4163
    af = -v4275-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4165
    zf = v4274 [from 0x80483d3:sub    esp, 0x08]
    sf = v4273 [from 0x80483d3:sub    esp, 0x08]
    tf = v4168
    if = v4169
    df = v4170
    of = v4281 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v4316 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = -v4277-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4161
    pf = -v4271-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4163
    af = -v4275-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4165
    zf = v4274 [from 0x80483d3:sub    esp, 0x08]
    sf = v4273 [from 0x80483d3:sub    esp, 0x08]
    tf = v4168
    if = v4169
    df = v4170
    of = v4281 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v4316 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4161
    pf = -v4365-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4163
    af = <top>
    ?5 = v4165
    zf = v4368 [from 0x80483db:test   eax, eax]
    sf = v4367 [from 0x80483db:test   eax, eax]
    tf = v4168
    if = v4169
    df = v4170
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v4316 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4147
    dx = v4148
    bx = v4149
    sp = v4150-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4150-0x4 [from 0x80483d0:push   ebp]
    si = v4152
    di = v4153
    es = v4154
    cs = v4155
    ss = v4156
    ds = v4157
    fs = v4158
    gs = v4159
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4161
    pf = -v4365-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4163
    af = <top>
    ?5 = v4165
    zf = v4368 [from 0x80483db:test   eax, eax]
    sf = v4367 [from 0x80483db:test   eax, eax]
    tf = v4168
    if = v4169
    df = v4170
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4172
    iopl1 = v4173
    nt = v4174
    ?15 = v4175
    memory = {
        size=4; addr=v4150-0x4 [from 0x80483d0:push   ebp]; value=v4151
    }
    ip = v4405 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4531
    bp = v4532
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = v4541
    ?1 = v4542
    pf = v4543
    ?3 = v4544
    af = v4545
    ?5 = v4546
    zf = v4547
    sf = v4548
    tf = v4549
    if = v4550
    df = v4551
    of = v4552
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4531
    bp = v4532
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4531
    bp = v4532
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4532
    bp = v4532
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4532+0x4 [from 0x8048402:pop    ebp]
    bp = v4715 [from 0x8048402:pop    ebp]
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4528
    dx = v4529
    bx = v4530
    sp = v4532+0x8 [from 0x8048403:ret    ]
    bp = v4715 [from 0x8048402:pop    ebp]
    si = v4533
    di = v4534
    es = v4535
    cs = v4536
    ss = v4537
    ds = v4538
    fs = v4539
    gs = v4540
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4542
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4544
    af = <top>
    ?5 = v4546
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4549
    if = v4550
    df = v4551
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4553
    iopl1 = v4554
    nt = v4555
    ?15 = v4556
    memory = {}
    ip = v4753 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = v4815
    cx = v4816
    dx = v4817
    bx = v4818
    sp = v4819
    bp = v4820
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = v4829
    ?1 = v4830
    pf = v4831
    ?3 = v4832
    af = v4833
    ?5 = v4834
    zf = v4835
    sf = v4836
    tf = v4837
    if = v4838
    df = v4839
    of = v4840
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v4819; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
0x80483ef:call   0x00000000
    ax = v4815
    cx = v4816
    dx = v4817
    bx = v4818
    sp = v4819-0x4 [from 0x80483ef:call   0x00000000]
    bp = v4820
    si = v4821
    di = v4822
    es = v4823
    cs = v4824
    ss = v4825
    ds = v4826
    fs = v4827
    gs = v4828
    cf = v4829
    ?1 = v4830
    pf = v4831
    ?3 = v4832
    af = v4833
    ?5 = v4834
    zf = v4835
    sf = v4836
    tf = v4837
    if = v4838
    df = v4839
    of = v4840
    iopl0 = v4841
    iopl1 = v4842
    nt = v4843
    ?15 = v4844
    memory = {
        size=4; addr=v4819; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=v4819-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v4977
    cx = v4978
    dx = v4979
    bx = v4980
    sp = v4981
    bp = v4982
    si = v4983 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v4984
    es = v4985
    cs = v4986
    ss = v4987
    ds = v4988
    fs = v4989
    gs = v4990
    cf = v4991
    ?1 = v4992
    pf = v4993
    ?3 = v4994
    af = v4995
    ?5 = v4996
    zf = v4997
    sf = v4998
    tf = v4999
    if = v5000
    df = v5001
    of = v5002
    iopl0 = v5003
    iopl1 = v5004
    nt = v5005
    ?15 = v5006
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v4977
    cx = v4978
    dx = v4979
    bx = v4980
    sp = v4981
    bp = v4982
    si = v4983 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v4984 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v4985
    cs = v4986
    ss = v4987
    ds = v4988
    fs = v4989
    gs = v4990
    cf = v4991
    ?1 = v4992
    pf = v4993
    ?3 = v4994
    af = v4995
    ?5 = v4996
    zf = v4997
    sf = v4998
    tf = v4999
    if = v5000
    df = v5001
    of = v5002
    iopl0 = v5003
    iopl1 = v5004
    nt = v5005
    ?15 = v5006
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139-0x4 [from 0x8048410:push   ebp]
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5139-0x4 [from 0x8048410:push   ebp]
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5139-0x4 [from 0x8048410:push   ebp]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5139-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = -v5299-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v5150
    pf = -v5293-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v5152
    af = -v5297-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v5154
    zf = v5296 [from 0x8048418:sub    esp, 0x08]
    sf = v5295 [from 0x8048418:sub    esp, 0x08]
    tf = v5157
    if = v5158
    df = v5159
    of = v5303 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5337 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5150
    pf = -v5353-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5152
    af = <top>
    ?5 = v5154
    zf = v5356 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5355 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5157
    if = v5158
    df = v5159
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5337 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5150
    pf = -v5353-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5152
    af = <top>
    ?5 = v5154
    zf = v5356 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5355 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5157
    if = v5158
    df = v5159
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5337+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5337 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5150
    pf = -v5353-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5152
    af = <top>
    ?5 = v5154
    zf = v5356 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5355 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5157
    if = v5158
    df = v5159
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5337 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5337+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5337-0x4 [from 0x8048429:call   0x080482f0]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5150
    pf = -v5353-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5152
    af = <top>
    ?5 = v5154
    zf = v5356 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5355 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5157
    if = v5158
    df = v5159
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5337 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5337+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v5337-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v5559
    cx = v5560
    dx = v5561
    bx = v5562
    sp = v5564
    bp = v5564
    si = v5565
    di = v5566
    es = v5567
    cs = v5568
    ss = v5569
    ds = v5570
    fs = v5571
    gs = v5572
    cf = v5573
    ?1 = v5574
    pf = v5575
    ?3 = v5576
    af = v5577
    ?5 = v5578
    zf = v5579
    sf = v5580
    tf = v5581
    if = v5582
    df = v5583
    of = v5584
    iopl0 = v5585
    iopl1 = v5586
    nt = v5587
    ?15 = v5588
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5560
    dx = v5561
    bx = v5562
    sp = v5564
    bp = v5564
    si = v5565
    di = v5566
    es = v5567
    cs = v5568
    ss = v5569
    ds = v5570
    fs = v5571
    gs = v5572
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5574
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5576
    af = <top>
    ?5 = v5578
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5581
    if = v5582
    df = v5583
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5585
    iopl1 = v5586
    nt = v5587
    ?15 = v5588
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5560
    dx = v5561
    bx = v5562
    sp = v5564+0x4 [from 0x8048432:pop    ebp]
    bp = v5680 [from 0x8048432:pop    ebp]
    si = v5565
    di = v5566
    es = v5567
    cs = v5568
    ss = v5569
    ds = v5570
    fs = v5571
    gs = v5572
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5574
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5576
    af = <top>
    ?5 = v5578
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5581
    if = v5582
    df = v5583
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5585
    iopl1 = v5586
    nt = v5587
    ?15 = v5588
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5560
    dx = v5561
    bx = v5562
    sp = v5564+0x8 [from 0x8048433:ret    ]
    bp = v5680 [from 0x8048432:pop    ebp]
    si = v5565
    di = v5566
    es = v5567
    cs = v5568
    ss = v5569
    ds = v5570
    fs = v5571
    gs = v5572
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5574
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5576
    af = <top>
    ?5 = v5578
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5581
    if = v5582
    df = v5583
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5585
    iopl1 = v5586
    nt = v5587
    ?15 = v5588
    memory = {}
    ip = v5718 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v5780
    cx = v5781
    dx = v5782
    bx = v5783
    sp = v5784-0x4 [from 0x8048440:push   ebp]
    bp = v5785
    si = v5786
    di = v5787
    es = v5788
    cs = v5789
    ss = v5790
    ds = v5791
    fs = v5792
    gs = v5793
    cf = v5794
    ?1 = v5795
    pf = v5796
    ?3 = v5797
    af = v5798
    ?5 = v5799
    zf = v5800
    sf = v5801
    tf = v5802
    if = v5803
    df = v5804
    of = v5805
    iopl0 = v5806
    iopl1 = v5807
    nt = v5808
    ?15 = v5809
    memory = {
        size=4; addr=v5784-0x4 [from 0x8048440:push   ebp]; value=v5785
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v5780
    cx = v5781
    dx = v5782
    bx = v5783
    sp = v5784-0x4 [from 0x8048440:push   ebp]
    bp = v5784-0x4 [from 0x8048440:push   ebp]
    si = v5786
    di = v5787
    es = v5788
    cs = v5789
    ss = v5790
    ds = v5791
    fs = v5792
    gs = v5793
    cf = v5794
    ?1 = v5795
    pf = v5796
    ?3 = v5797
    af = v5798
    ?5 = v5799
    zf = v5800
    sf = v5801
    tf = v5802
    if = v5803
    df = v5804
    of = v5805
    iopl0 = v5806
    iopl1 = v5807
    nt = v5808
    ?15 = v5809
    memory = {
        size=4; addr=v5784-0x4 [from 0x8048440:push   ebp]; value=v5785
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v5780
    cx = v5781
    dx = v5782
    bx = v5783
    sp = v5784-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v5784-0x4 [from 0x8048440:push   ebp]
    si = v5786
    di = v5787
    es = v5788
    cs = v5789
    ss = v5790
    ds = v5791
    fs = v5792
    gs = v5793
    cf = -v5911-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v5795
    pf = -v5905-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v5797
    af = -v5909-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v5799
    zf = v5908 [from 0x8048443:sub    esp, 0x08]
    sf = v5907 [from 0x8048443:sub    esp, 0x08]
    tf = v5802
    if = v5803
    df = v5804
    of = v5915 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v5806
    iopl1 = v5807
    nt = v5808
    ?15 = v5809
    memory = {
        size=4; addr=v5784-0x4 [from 0x8048440:push   ebp]; value=v5785
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v5780
    cx = v5781
    dx = v5782
    bx = v5783
    sp = v5784-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v5784-0x4 [from 0x8048440:push   ebp]
    si = v5786
    di = v5787
    es = v5788
    cs = v5789
    ss = v5790
    ds = v5791
    fs = v5792
    gs = v5793
    cf = -v5911-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v5795
    pf = -v5905-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v5797
    af = -v5909-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v5799
    zf = v5908 [from 0x8048443:sub    esp, 0x08]
    sf = v5907 [from 0x8048443:sub    esp, 0x08]
    tf = v5802
    if = v5803
    df = v5804
    of = v5915 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v5806
    iopl1 = v5807
    nt = v5808
    ?15 = v5809
    memory = {
        size=4; addr=v5784-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v5784-0x4 [from 0x8048440:push   ebp]; value=v5785
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v5780
    cx = v5781
    dx = v5782
    bx = v5783
    sp = v5784-0x10 [from 0x804844d:call   0x08048300]
    bp = v5784-0x4 [from 0x8048440:push   ebp]
    si = v5786
    di = v5787
    es = v5788
    cs = v5789
    ss = v5790
    ds = v5791
    fs = v5792
    gs = v5793
    cf = -v5911-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v5795
    pf = -v5905-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v5797
    af = -v5909-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v5799
    zf = v5908 [from 0x8048443:sub    esp, 0x08]
    sf = v5907 [from 0x8048443:sub    esp, 0x08]
    tf = v5802
    if = v5803
    df = v5804
    of = v5915 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v5806
    iopl1 = v5807
    nt = v5808
    ?15 = v5809
    memory = {
        size=4; addr=v5784-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v5784-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v5784-0x4 [from 0x8048440:push   ebp]; value=v5785
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v6079
    cx = v6080
    dx = v6081
    bx = v6082
    sp = v6084
    bp = v6084
    si = v6085
    di = v6086
    es = v6087
    cs = v6088
    ss = v6089
    ds = v6090
    fs = v6091
    gs = v6092
    cf = v6093
    ?1 = v6094
    pf = v6095
    ?3 = v6096
    af = v6097
    ?5 = v6098
    zf = v6099
    sf = v6100
    tf = v6101
    if = v6102
    df = v6103
    of = v6104
    iopl0 = v6105
    iopl1 = v6106
    nt = v6107
    ?15 = v6108
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v6079
    cx = v6080
    dx = v6081
    bx = v6082
    sp = v6084+0x4 [from 0x8048454:pop    ebp]
    bp = v6145 [from 0x8048454:pop    ebp]
    si = v6085
    di = v6086
    es = v6087
    cs = v6088
    ss = v6089
    ds = v6090
    fs = v6091
    gs = v6092
    cf = v6093
    ?1 = v6094
    pf = v6095
    ?3 = v6096
    af = v6097
    ?5 = v6098
    zf = v6099
    sf = v6100
    tf = v6101
    if = v6102
    df = v6103
    of = v6104
    iopl0 = v6105
    iopl1 = v6106
    nt = v6107
    ?15 = v6108
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v6079
    cx = v6080
    dx = v6081
    bx = v6082
    sp = v6084+0x8 [from 0x8048455:ret    ]
    bp = v6145 [from 0x8048454:pop    ebp]
    si = v6085
    di = v6086
    es = v6087
    cs = v6088
    ss = v6089
    ds = v6090
    fs = v6091
    gs = v6092
    cf = v6093
    ?1 = v6094
    pf = v6095
    ?3 = v6096
    af = v6097
    ?5 = v6098
    zf = v6099
    sf = v6100
    tf = v6101
    if = v6102
    df = v6103
    of = v6104
    iopl0 = v6105
    iopl1 = v6106
    nt = v6107
    ?15 = v6108
    memory = {}
    ip = v6183 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v6245
    cx = v6246
    dx = v6247
    bx = v6248
    sp = v6249-0x4 [from 0x8048460:push   ebp]
    bp = v6250
    si = v6251
    di = v6252
    es = v6253
    cs = v6254
    ss = v6255
    ds = v6256
    fs = v6257
    gs = v6258
    cf = v6259
    ?1 = v6260
    pf = v6261
    ?3 = v6262
    af = v6263
    ?5 = v6264
    zf = v6265
    sf = v6266
    tf = v6267
    if = v6268
    df = v6269
    of = v6270
    iopl0 = v6271
    iopl1 = v6272
    nt = v6273
    ?15 = v6274
    memory = {
        size=4; addr=v6249-0x4 [from 0x8048460:push   ebp]; value=v6250
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v6245
    cx = v6246
    dx = v6247
    bx = v6248
    sp = v6249-0x4 [from 0x8048460:push   ebp]
    bp = v6249-0x4 [from 0x8048460:push   ebp]
    si = v6251
    di = v6252
    es = v6253
    cs = v6254
    ss = v6255
    ds = v6256
    fs = v6257
    gs = v6258
    cf = v6259
    ?1 = v6260
    pf = v6261
    ?3 = v6262
    af = v6263
    ?5 = v6264
    zf = v6265
    sf = v6266
    tf = v6267
    if = v6268
    df = v6269
    of = v6270
    iopl0 = v6271
    iopl1 = v6272
    nt = v6273
    ?15 = v6274
    memory = {
        size=4; addr=v6249-0x4 [from 0x8048460:push   ebp]; value=v6250
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v6245
    cx = v6246
    dx = v6247
    bx = v6248
    sp = v6249-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v6249-0x4 [from 0x8048460:push   ebp]
    si = v6251
    di = v6252
    es = v6253
    cs = v6254
    ss = v6255
    ds = v6256
    fs = v6257
    gs = v6258
    cf = -v6376-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6260
    pf = -v6370-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6262
    af = -v6374-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6264
    zf = v6373 [from 0x8048463:sub    esp, 0x08]
    sf = v6372 [from 0x8048463:sub    esp, 0x08]
    tf = v6267
    if = v6268
    df = v6269
    of = v6380 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6271
    iopl1 = v6272
    nt = v6273
    ?15 = v6274
    memory = {
        size=4; addr=v6249-0x4 [from 0x8048460:push   ebp]; value=v6250
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6245
    cx = v6246
    dx = v6247
    bx = v6248
    sp = v6249-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v6249-0x4 [from 0x8048460:push   ebp]
    si = v6251
    di = v6252
    es = v6253
    cs = v6254
    ss = v6255
    ds = v6256
    fs = v6257
    gs = v6258
    cf = -v6376-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6260
    pf = -v6370-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6262
    af = -v6374-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6264
    zf = v6373 [from 0x8048463:sub    esp, 0x08]
    sf = v6372 [from 0x8048463:sub    esp, 0x08]
    tf = v6267
    if = v6268
    df = v6269
    of = v6380 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6271
    iopl1 = v6272
    nt = v6273
    ?15 = v6274
    memory = {
        size=4; addr=v6249-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6249-0x4 [from 0x8048460:push   ebp]; value=v6250
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v6245
    cx = v6246
    dx = v6247
    bx = v6248
    sp = v6249-0x10 [from 0x804846d:call   0x08048300]
    bp = v6249-0x4 [from 0x8048460:push   ebp]
    si = v6251
    di = v6252
    es = v6253
    cs = v6254
    ss = v6255
    ds = v6256
    fs = v6257
    gs = v6258
    cf = -v6376-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6260
    pf = -v6370-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6262
    af = -v6374-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6264
    zf = v6373 [from 0x8048463:sub    esp, 0x08]
    sf = v6372 [from 0x8048463:sub    esp, 0x08]
    tf = v6267
    if = v6268
    df = v6269
    of = v6380 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6271
    iopl1 = v6272
    nt = v6273
    ?15 = v6274
    memory = {
        size=4; addr=v6249-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v6249-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6249-0x4 [from 0x8048460:push   ebp]; value=v6250
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v6544
    cx = v6545
    dx = v6546
    bx = v6547
    sp = v6548
    bp = v6549
    si = v6550
    di = v6551
    es = v6552
    cs = v6553
    ss = v6554
    ds = v6555
    fs = v6556
    gs = v6557
    cf = v6558
    ?1 = v6559
    pf = v6560
    ?3 = v6561
    af = v6562
    ?5 = v6563
    zf = v6564
    sf = v6565
    tf = v6566
    if = v6567
    df = v6568
    of = v6569
    iopl0 = v6570
    iopl1 = v6571
    nt = v6572
    ?15 = v6573
    memory = {
        size=4; addr=v6548; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v6544
    cx = v6545
    dx = v6546
    bx = v6547
    sp = v6548-0x4 [from 0x8048479:call   0x08048320]
    bp = v6549
    si = v6550
    di = v6551
    es = v6552
    cs = v6553
    ss = v6554
    ds = v6555
    fs = v6556
    gs = v6557
    cf = v6558
    ?1 = v6559
    pf = v6560
    ?3 = v6561
    af = v6562
    ?5 = v6563
    zf = v6564
    sf = v6565
    tf = v6566
    if = v6567
    df = v6568
    of = v6569
    iopl0 = v6570
    iopl1 = v6571
    nt = v6572
    ?15 = v6573
    memory = {
        size=4; addr=v6548; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v6548-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v6706
    cx = v6707
    dx = v6708
    bx = v6709
    sp = v6710-0x4 [from 0x8048480:push   ebp]
    bp = v6711
    si = v6712
    di = v6713
    es = v6714
    cs = v6715
    ss = v6716
    ds = v6717
    fs = v6718
    gs = v6719
    cf = v6720
    ?1 = v6721
    pf = v6722
    ?3 = v6723
    af = v6724
    ?5 = v6725
    zf = v6726
    sf = v6727
    tf = v6728
    if = v6729
    df = v6730
    of = v6731
    iopl0 = v6732
    iopl1 = v6733
    nt = v6734
    ?15 = v6735
    memory = {
        size=4; addr=v6710-0x4 [from 0x8048480:push   ebp]; value=v6711
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v6706
    cx = v6707
    dx = v6708
    bx = v6709
    sp = v6710-0x4 [from 0x8048480:push   ebp]
    bp = v6710-0x4 [from 0x8048480:push   ebp]
    si = v6712
    di = v6713
    es = v6714
    cs = v6715
    ss = v6716
    ds = v6717
    fs = v6718
    gs = v6719
    cf = v6720
    ?1 = v6721
    pf = v6722
    ?3 = v6723
    af = v6724
    ?5 = v6725
    zf = v6726
    sf = v6727
    tf = v6728
    if = v6729
    df = v6730
    of = v6731
    iopl0 = v6732
    iopl1 = v6733
    nt = v6734
    ?15 = v6735
    memory = {
        size=4; addr=v6710-0x4 [from 0x8048480:push   ebp]; value=v6711
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v6706
    cx = v6707
    dx = v6708
    bx = v6709
    sp = v6710-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v6710-0x4 [from 0x8048480:push   ebp]
    si = v6712
    di = v6713
    es = v6714
    cs = v6715
    ss = v6716
    ds = v6717
    fs = v6718
    gs = v6719
    cf = -v6837-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v6721
    pf = -v6831-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v6723
    af = -v6835-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v6725
    zf = v6834 [from 0x8048483:sub    esp, 0x08]
    sf = v6833 [from 0x8048483:sub    esp, 0x08]
    tf = v6728
    if = v6729
    df = v6730
    of = v6841 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v6732
    iopl1 = v6733
    nt = v6734
    ?15 = v6735
    memory = {
        size=4; addr=v6710-0x4 [from 0x8048480:push   ebp]; value=v6711
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v6706
    cx = v6707
    dx = v6708
    bx = v6709
    sp = v6710-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v6710-0x4 [from 0x8048480:push   ebp]
    si = v6712
    di = v6713
    es = v6714
    cs = v6715
    ss = v6716
    ds = v6717
    fs = v6718
    gs = v6719
    cf = -v6837-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v6721
    pf = -v6901-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v6723
    af = v6905 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v6725
    zf = v6904 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v6903 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v6728
    if = v6729
    df = v6730
    of = v6908 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v6732
    iopl1 = v6733
    nt = v6734
    ?15 = v6735
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v6876+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6706
    cx = v6707
    dx = v6708
    bx = v6709
    sp = v6710-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v6710-0x4 [from 0x8048480:push   ebp]
    si = v6712
    di = v6713
    es = v6714
    cs = v6715
    ss = v6716
    ds = v6717
    fs = v6718
    gs = v6719
    cf = -v6837-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v6721
    pf = -v6901-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v6723
    af = v6905 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v6725
    zf = v6904 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v6903 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v6728
    if = v6729
    df = v6730
    of = v6908 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v6732
    iopl1 = v6733
    nt = v6734
    ?15 = v6735
    memory = {
        size=4; addr=v6710-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v6706
    cx = v6707
    dx = v6708
    bx = v6709
    sp = v6710-0x10 [from 0x8048493:call   0x08048300]
    bp = v6710-0x4 [from 0x8048480:push   ebp]
    si = v6712
    di = v6713
    es = v6714
    cs = v6715
    ss = v6716
    ds = v6717
    fs = v6718
    gs = v6719
    cf = -v6837-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v6721
    pf = -v6901-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v6723
    af = v6905 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v6725
    zf = v6904 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v6903 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v6728
    if = v6729
    df = v6730
    of = v6908 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v6732
    iopl1 = v6733
    nt = v6734
    ?15 = v6735
    memory = {
        size=4; addr=v6710-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v6710-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7075
    cx = v7076
    dx = v7077
    bx = v7078
    sp = v7079
    bp = v7080
    si = v7081
    di = v7082
    es = v7083
    cs = v7084
    ss = v7085
    ds = v7086
    fs = v7087
    gs = v7088
    cf = v7089
    ?1 = v7090
    pf = v7091
    ?3 = v7092
    af = v7093
    ?5 = v7094
    zf = v7095
    sf = v7096
    tf = v7097
    if = v7098
    df = v7099
    of = v7100
    iopl0 = v7101
    iopl1 = v7102
    nt = v7103
    ?15 = v7104
    memory = {
        size=4; addr=v7079; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v7075
    cx = v7076
    dx = v7077
    bx = v7078
    sp = v7079-0x4 [from 0x804849f:call   0x08048320]
    bp = v7080
    si = v7081
    di = v7082
    es = v7083
    cs = v7084
    ss = v7085
    ds = v7086
    fs = v7087
    gs = v7088
    cf = v7089
    ?1 = v7090
    pf = v7091
    ?3 = v7092
    af = v7093
    ?5 = v7094
    zf = v7095
    sf = v7096
    tf = v7097
    if = v7098
    df = v7099
    of = v7100
    iopl0 = v7101
    iopl1 = v7102
    nt = v7103
    ?15 = v7104
    memory = {
        size=4; addr=v7079; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7079-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    ax = v7237
    cx = v7238
    dx = v7239
    bx = v7240
    sp = v7241-0x4 [from 0x80484b0:push   ebp]
    bp = v7242
    si = v7243
    di = v7244
    es = v7245
    cs = v7246
    ss = v7247
    ds = v7248
    fs = v7249
    gs = v7250
    cf = v7251
    ?1 = v7252
    pf = v7253
    ?3 = v7254
    af = v7255
    ?5 = v7256
    zf = v7257
    sf = v7258
    tf = v7259
    if = v7260
    df = v7261
    of = v7262
    iopl0 = v7263
    iopl1 = v7264
    nt = v7265
    ?15 = v7266
    memory = {
        size=4; addr=v7241-0x4 [from 0x80484b0:push   ebp]; value=v7242
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v7237
    cx = v7238
    dx = v7239
    bx = v7240
    sp = v7241-0x4 [from 0x80484b0:push   ebp]
    bp = v7241-0x4 [from 0x80484b0:push   ebp]
    si = v7243
    di = v7244
    es = v7245
    cs = v7246
    ss = v7247
    ds = v7248
    fs = v7249
    gs = v7250
    cf = v7251
    ?1 = v7252
    pf = v7253
    ?3 = v7254
    af = v7255
    ?5 = v7256
    zf = v7257
    sf = v7258
    tf = v7259
    if = v7260
    df = v7261
    of = v7262
    iopl0 = v7263
    iopl1 = v7264
    nt = v7265
    ?15 = v7266
    memory = {
        size=4; addr=v7241-0x4 [from 0x80484b0:push   ebp]; value=v7242
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v7237
    cx = v7238
    dx = v7239
    bx = v7240
    sp = v7241-0x8 [from 0x80484b3:push   edi]
    bp = v7241-0x4 [from 0x80484b0:push   ebp]
    si = v7243
    di = v7244
    es = v7245
    cs = v7246
    ss = v7247
    ds = v7248
    fs = v7249
    gs = v7250
    cf = v7251
    ?1 = v7252
    pf = v7253
    ?3 = v7254
    af = v7255
    ?5 = v7256
    zf = v7257
    sf = v7258
    tf = v7259
    if = v7260
    df = v7261
    of = v7262
    iopl0 = v7263
    iopl1 = v7264
    nt = v7265
    ?15 = v7266
    memory = {
        size=4; addr=v7241-0x8 [from 0x80484b3:push   edi]; value=v7244
        size=4; addr=v7241-0x4 [from 0x80484b0:push   ebp]; value=v7242
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v7237
    cx = v7238
    dx = v7239
    bx = v7240
    sp = v7241-0xc [from 0x80484b4:push   esi]
    bp = v7241-0x4 [from 0x80484b0:push   ebp]
    si = v7243
    di = v7244
    es = v7245
    cs = v7246
    ss = v7247
    ds = v7248
    fs = v7249
    gs = v7250
    cf = v7251
    ?1 = v7252
    pf = v7253
    ?3 = v7254
    af = v7255
    ?5 = v7256
    zf = v7257
    sf = v7258
    tf = v7259
    if = v7260
    df = v7261
    of = v7262
    iopl0 = v7263
    iopl1 = v7264
    nt = v7265
    ?15 = v7266
    memory = {
        size=4; addr=v7241-0xc [from 0x80484b4:push   esi]; value=v7243
        size=4; addr=v7241-0x8 [from 0x80484b3:push   edi]; value=v7244
        size=4; addr=v7241-0x4 [from 0x80484b0:push   ebp]; value=v7242
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v7237
    cx = v7238
    dx = v7239
    bx = v7240
    sp = v7241-0x10 [from 0x80484b5:push   ebx]
    bp = v7241-0x4 [from 0x80484b0:push   ebp]
    si = v7243
    di = v7244
    es = v7245
    cs = v7246
    ss = v7247
    ds = v7248
    fs = v7249
    gs = v7250
    cf = v7251
    ?1 = v7252
    pf = v7253
    ?3 = v7254
    af = v7255
    ?5 = v7256
    zf = v7257
    sf = v7258
    tf = v7259
    if = v7260
    df = v7261
    of = v7262
    iopl0 = v7263
    iopl1 = v7264
    nt = v7265
    ?15 = v7266
    memory = {
        size=4; addr=v7241-0x10 [from 0x80484b5:push   ebx]; value=v7240
        size=4; addr=v7241-0xc [from 0x80484b4:push   esi]; value=v7243
        size=4; addr=v7241-0x8 [from 0x80484b3:push   edi]; value=v7244
        size=4; addr=v7241-0x4 [from 0x80484b0:push   ebp]; value=v7242
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v7237
    cx = v7238
    dx = v7239
    bx = v7240
    sp = v7241-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v7241-0x4 [from 0x80484b0:push   ebp]
    si = v7243
    di = v7244
    es = v7245
    cs = v7246
    ss = v7247
    ds = v7248
    fs = v7249
    gs = v7250
    cf = -v7476-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v7252
    pf = -v7470-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v7254
    af = -v7474-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v7256
    zf = v7473 [from 0x80484b6:sub    esp, 0x0c]
    sf = v7472 [from 0x80484b6:sub    esp, 0x0c]
    tf = v7259
    if = v7260
    df = v7261
    of = v7480 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v7263
    iopl1 = v7264
    nt = v7265
    ?15 = v7266
    memory = {
        size=4; addr=v7241-0x10 [from 0x80484b5:push   ebx]; value=v7240
        size=4; addr=v7241-0xc [from 0x80484b4:push   esi]; value=v7243
        size=4; addr=v7241-0x8 [from 0x80484b3:push   edi]; value=v7244
        size=4; addr=v7241-0x4 [from 0x80484b0:push   ebp]; value=v7242
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v7237
    cx = v7238
    dx = v7239
    bx = v7240
    sp = v7241-0x20 [from 0x80484b9:call   0x080484be]
    bp = v7241-0x4 [from 0x80484b0:push   ebp]
    si = v7243
    di = v7244
    es = v7245
    cs = v7246
    ss = v7247
    ds = v7248
    fs = v7249
    gs = v7250
    cf = -v7476-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v7252
    pf = -v7470-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v7254
    af = -v7474-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v7256
    zf = v7473 [from 0x80484b6:sub    esp, 0x0c]
    sf = v7472 [from 0x80484b6:sub    esp, 0x0c]
    tf = v7259
    if = v7260
    df = v7261
    of = v7480 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v7263
    iopl1 = v7264
    nt = v7265
    ?15 = v7266
    memory = {
        size=4; addr=v7241-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v7241-0x10 [from 0x80484b5:push   ebx]; value=v7240
        size=4; addr=v7241-0xc [from 0x80484b4:push   esi]; value=v7243
        size=4; addr=v7241-0x8 [from 0x80484b3:push   edi]; value=v7244
        size=4; addr=v7241-0x4 [from 0x80484b0:push   ebp]; value=v7242
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v7609
    cx = v7610
    dx = v7611
    bx = v7643 [from 0x80484be:pop    ebx]
    sp = v7613+0x4 [from 0x80484be:pop    ebx]
    bp = v7614
    si = v7615
    di = v7616
    es = v7617
    cs = v7618
    ss = v7619
    ds = v7620
    fs = v7621
    gs = v7622
    cf = v7623
    ?1 = v7624
    pf = v7625
    ?3 = v7626
    af = v7627
    ?5 = v7628
    zf = v7629
    sf = v7630
    tf = v7631
    if = v7632
    df = v7633
    of = v7634
    iopl0 = v7635
    iopl1 = v7636
    nt = v7637
    ?15 = v7638
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v7609
    cx = v7610
    dx = v7611
    bx = v7643+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v7613+0x4 [from 0x80484be:pop    ebx]
    bp = v7614
    si = v7615
    di = v7616
    es = v7617
    cs = v7618
    ss = v7619
    ds = v7620
    fs = v7621
    gs = v7622
    cf = v7705 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v7624
    pf = -v7700-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v7626
    af = v7704 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v7628
    zf = v7703 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v7702 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v7631
    if = v7632
    df = v7633
    of = v7708 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v7635
    iopl1 = v7636
    nt = v7637
    ?15 = v7638
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v7609
    cx = v7610
    dx = v7611
    bx = v7643+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v7613 [from 0x80484c5:call   0x080482c8]
    bp = v7614
    si = v7615
    di = v7616
    es = v7617
    cs = v7618
    ss = v7619
    ds = v7620
    fs = v7621
    gs = v7622
    cf = v7705 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v7624
    pf = -v7700-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v7626
    af = v7704 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v7628
    zf = v7703 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v7702 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v7631
    if = v7632
    df = v7633
    of = v7708 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v7635
    iopl1 = v7636
    nt = v7637
    ?15 = v7638
    memory = {
        size=4; addr=v7613 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v7840-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v7838
    dx = v7839
    bx = v7840
    sp = v7841
    bp = v7842
    si = v7843
    di = v7844
    es = v7845
    cs = v7846
    ss = v7847
    ds = v7848
    fs = v7849
    gs = v7850
    cf = v7851
    ?1 = v7852
    pf = v7853
    ?3 = v7854
    af = v7855
    ?5 = v7856
    zf = v7857
    sf = v7858
    tf = v7859
    if = v7860
    df = v7861
    of = v7862
    iopl0 = v7863
    iopl1 = v7864
    nt = v7865
    ?15 = v7866
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v7840-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v7838
    dx = v7840-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7840
    sp = v7841
    bp = v7842
    si = v7843
    di = v7844
    es = v7845
    cs = v7846
    ss = v7847
    ds = v7848
    fs = v7849
    gs = v7850
    cf = v7851
    ?1 = v7852
    pf = v7853
    ?3 = v7854
    af = v7855
    ?5 = v7856
    zf = v7857
    sf = v7858
    tf = v7859
    if = v7860
    df = v7861
    of = v7862
    iopl0 = v7863
    iopl1 = v7864
    nt = v7865
    ?15 = v7866
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v15680 [from 0x80484d6:sub    eax, edx]
    cx = v7838
    dx = v7840-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7840
    sp = v7841
    bp = v7842
    si = v7843
    di = v7844
    es = v7845
    cs = v7846
    ss = v7847
    ds = v7848
    fs = v7849
    gs = v7850
    cf = -v7967-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v7852
    pf = -v7961-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v7854
    af = -v7965-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v7856
    zf = v7964 [from 0x80484d6:sub    eax, edx]
    sf = v7963 [from 0x80484d6:sub    eax, edx]
    tf = v7859
    if = v7860
    df = v7861
    of = v7971 [from 0x80484d6:sub    eax, edx]
    iopl0 = v7863
    iopl1 = v7864
    nt = v7865
    ?15 = v7866
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v8010 [from 0x80484d8:sar    eax, 0x02]
    cx = v7838
    dx = v7840-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7840
    sp = v7841
    bp = v7842
    si = v7843
    di = v7844
    es = v7845
    cs = v7846
    ss = v7847
    ds = v7848
    fs = v7849
    gs = v7850
    cf = v8013 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v7852
    pf = -v8033-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v7854
    af = <top>
    ?5 = v7856
    zf = v8038 [from 0x80484d8:sar    eax, 0x02]
    sf = v8036 [from 0x80484d8:sar    eax, 0x02]
    tf = v7859
    if = v7860
    df = v7861
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v7863
    iopl1 = v7864
    nt = v7865
    ?15 = v7866
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v8010 [from 0x80484d8:sar    eax, 0x02]
    cx = v7838
    dx = v7840-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7840
    sp = v7841
    bp = v7842
    si = v7843
    di = v7844
    es = v7845
    cs = v7846
    ss = v7847
    ds = v7848
    fs = v7849
    gs = v7850
    cf = v8013 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v7852
    pf = -v8033-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v7854
    af = <top>
    ?5 = v7856
    zf = v8038 [from 0x80484d8:sar    eax, 0x02]
    sf = v8036 [from 0x80484d8:sar    eax, 0x02]
    tf = v7859
    if = v7860
    df = v7861
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v7863
    iopl1 = v7864
    nt = v7865
    ?15 = v7866
    memory = {
        size=4; addr=v7842-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8010 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v8010 [from 0x80484d8:sar    eax, 0x02]
    cx = v7838
    dx = v7840-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v7840
    sp = v7841
    bp = v7842
    si = v7843
    di = v7844
    es = v7845
    cs = v7846
    ss = v7847
    ds = v7848
    fs = v7849
    gs = v7850
    cf = v8013 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v7852
    pf = -v8033-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v7854
    af = <top>
    ?5 = v7856
    zf = v8038 [from 0x80484d8:sar    eax, 0x02]
    sf = v8036 [from 0x80484d8:sar    eax, 0x02]
    tf = v7859
    if = v7860
    df = v7861
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v7863
    iopl1 = v7864
    nt = v7865
    ?15 = v7866
    memory = {
        size=4; addr=v7842-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8010 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v8110 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v8232
    cx = v8233
    dx = v8234
    bx = v8235
    sp = v8236+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v8237
    si = v8238
    di = v8239
    es = v8240
    cs = v8241
    ss = v8242
    ds = v8243
    fs = v8244
    gs = v8245
    cf = v8292 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8247
    pf = -v8287-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8249
    af = v8291 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8251
    zf = v8290 [from 0x80484e0:add    esp, 0x0c]
    sf = v8289 [from 0x80484e0:add    esp, 0x0c]
    tf = v8254
    if = v8255
    df = v8256
    of = v8295 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8258
    iopl1 = v8259
    nt = v8260
    ?15 = v8261
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v8232
    cx = v8233
    dx = v8234
    bx = v8331 [from 0x80484e3:pop    ebx]
    sp = v8236+0x10 [from 0x80484e3:pop    ebx]
    bp = v8237
    si = v8238
    di = v8239
    es = v8240
    cs = v8241
    ss = v8242
    ds = v8243
    fs = v8244
    gs = v8245
    cf = v8292 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8247
    pf = -v8287-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8249
    af = v8291 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8251
    zf = v8290 [from 0x80484e0:add    esp, 0x0c]
    sf = v8289 [from 0x80484e0:add    esp, 0x0c]
    tf = v8254
    if = v8255
    df = v8256
    of = v8295 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8258
    iopl1 = v8259
    nt = v8260
    ?15 = v8261
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v8232
    cx = v8233
    dx = v8234
    bx = v8331 [from 0x80484e3:pop    ebx]
    sp = v8236+0x14 [from 0x80484e4:pop    esi]
    bp = v8237
    si = v8367 [from 0x80484e4:pop    esi]
    di = v8239
    es = v8240
    cs = v8241
    ss = v8242
    ds = v8243
    fs = v8244
    gs = v8245
    cf = v8292 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8247
    pf = -v8287-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8249
    af = v8291 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8251
    zf = v8290 [from 0x80484e0:add    esp, 0x0c]
    sf = v8289 [from 0x80484e0:add    esp, 0x0c]
    tf = v8254
    if = v8255
    df = v8256
    of = v8295 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8258
    iopl1 = v8259
    nt = v8260
    ?15 = v8261
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v8232
    cx = v8233
    dx = v8234
    bx = v8331 [from 0x80484e3:pop    ebx]
    sp = v8236+0x18 [from 0x80484e5:pop    edi]
    bp = v8237
    si = v8367 [from 0x80484e4:pop    esi]
    di = v8403 [from 0x80484e5:pop    edi]
    es = v8240
    cs = v8241
    ss = v8242
    ds = v8243
    fs = v8244
    gs = v8245
    cf = v8292 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8247
    pf = -v8287-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8249
    af = v8291 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8251
    zf = v8290 [from 0x80484e0:add    esp, 0x0c]
    sf = v8289 [from 0x80484e0:add    esp, 0x0c]
    tf = v8254
    if = v8255
    df = v8256
    of = v8295 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8258
    iopl1 = v8259
    nt = v8260
    ?15 = v8261
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v8232
    cx = v8233
    dx = v8234
    bx = v8331 [from 0x80484e3:pop    ebx]
    sp = v8236+0x1c [from 0x80484e6:pop    ebp]
    bp = v8439 [from 0x80484e6:pop    ebp]
    si = v8367 [from 0x80484e4:pop    esi]
    di = v8403 [from 0x80484e5:pop    edi]
    es = v8240
    cs = v8241
    ss = v8242
    ds = v8243
    fs = v8244
    gs = v8245
    cf = v8292 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8247
    pf = -v8287-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8249
    af = v8291 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8251
    zf = v8290 [from 0x80484e0:add    esp, 0x0c]
    sf = v8289 [from 0x80484e0:add    esp, 0x0c]
    tf = v8254
    if = v8255
    df = v8256
    of = v8295 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8258
    iopl1 = v8259
    nt = v8260
    ?15 = v8261
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v8232
    cx = v8233
    dx = v8234
    bx = v8331 [from 0x80484e3:pop    ebx]
    sp = v8236+0x20 [from 0x80484e7:ret    ]
    bp = v8439 [from 0x80484e6:pop    ebp]
    si = v8367 [from 0x80484e4:pop    esi]
    di = v8403 [from 0x80484e5:pop    edi]
    es = v8240
    cs = v8241
    ss = v8242
    ds = v8243
    fs = v8244
    gs = v8245
    cf = v8292 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v8247
    pf = -v8287-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v8249
    af = v8291 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v8251
    zf = v8290 [from 0x80484e0:add    esp, 0x0c]
    sf = v8289 [from 0x80484e0:add    esp, 0x0c]
    tf = v8254
    if = v8255
    df = v8256
    of = v8295 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v8258
    iopl1 = v8259
    nt = v8260
    ?15 = v8261
    memory = {}
    ip = v8477 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v8539
    cx = v8540
    dx = v8541
    bx = v8542
    sp = v8543-0x4 [from 0x8048520:push   ebp]
    bp = v8544
    si = v8545
    di = v8546
    es = v8547
    cs = v8548
    ss = v8549
    ds = v8550
    fs = v8551
    gs = v8552
    cf = v8553
    ?1 = v8554
    pf = v8555
    ?3 = v8556
    af = v8557
    ?5 = v8558
    zf = v8559
    sf = v8560
    tf = v8561
    if = v8562
    df = v8563
    of = v8564
    iopl0 = v8565
    iopl1 = v8566
    nt = v8567
    ?15 = v8568
    memory = {
        size=4; addr=v8543-0x4 [from 0x8048520:push   ebp]; value=v8544
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v8539
    cx = v8540
    dx = v8541
    bx = v8542
    sp = v8543-0x4 [from 0x8048520:push   ebp]
    bp = v8543-0x4 [from 0x8048520:push   ebp]
    si = v8545
    di = v8546
    es = v8547
    cs = v8548
    ss = v8549
    ds = v8550
    fs = v8551
    gs = v8552
    cf = v8553
    ?1 = v8554
    pf = v8555
    ?3 = v8556
    af = v8557
    ?5 = v8558
    zf = v8559
    sf = v8560
    tf = v8561
    if = v8562
    df = v8563
    of = v8564
    iopl0 = v8565
    iopl1 = v8566
    nt = v8567
    ?15 = v8568
    memory = {
        size=4; addr=v8543-0x4 [from 0x8048520:push   ebp]; value=v8544
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v8539
    cx = v8540
    dx = v8541
    bx = v8542
    sp = v8543-0x8 [from 0x8048523:push   edi]
    bp = v8543-0x4 [from 0x8048520:push   ebp]
    si = v8545
    di = v8546
    es = v8547
    cs = v8548
    ss = v8549
    ds = v8550
    fs = v8551
    gs = v8552
    cf = v8553
    ?1 = v8554
    pf = v8555
    ?3 = v8556
    af = v8557
    ?5 = v8558
    zf = v8559
    sf = v8560
    tf = v8561
    if = v8562
    df = v8563
    of = v8564
    iopl0 = v8565
    iopl1 = v8566
    nt = v8567
    ?15 = v8568
    memory = {
        size=4; addr=v8543-0x8 [from 0x8048523:push   edi]; value=v8546
        size=4; addr=v8543-0x4 [from 0x8048520:push   ebp]; value=v8544
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v8539
    cx = v8540
    dx = v8541
    bx = v8542
    sp = v8543-0xc [from 0x8048524:push   esi]
    bp = v8543-0x4 [from 0x8048520:push   ebp]
    si = v8545
    di = v8546
    es = v8547
    cs = v8548
    ss = v8549
    ds = v8550
    fs = v8551
    gs = v8552
    cf = v8553
    ?1 = v8554
    pf = v8555
    ?3 = v8556
    af = v8557
    ?5 = v8558
    zf = v8559
    sf = v8560
    tf = v8561
    if = v8562
    df = v8563
    of = v8564
    iopl0 = v8565
    iopl1 = v8566
    nt = v8567
    ?15 = v8568
    memory = {
        size=4; addr=v8543-0xc [from 0x8048524:push   esi]; value=v8545
        size=4; addr=v8543-0x8 [from 0x8048523:push   edi]; value=v8546
        size=4; addr=v8543-0x4 [from 0x8048520:push   ebp]; value=v8544
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v8539
    cx = v8540
    dx = v8541
    bx = v8542
    sp = v8543-0x10 [from 0x8048525:push   ebx]
    bp = v8543-0x4 [from 0x8048520:push   ebp]
    si = v8545
    di = v8546
    es = v8547
    cs = v8548
    ss = v8549
    ds = v8550
    fs = v8551
    gs = v8552
    cf = v8553
    ?1 = v8554
    pf = v8555
    ?3 = v8556
    af = v8557
    ?5 = v8558
    zf = v8559
    sf = v8560
    tf = v8561
    if = v8562
    df = v8563
    of = v8564
    iopl0 = v8565
    iopl1 = v8566
    nt = v8567
    ?15 = v8568
    memory = {
        size=4; addr=v8543-0x10 [from 0x8048525:push   ebx]; value=v8542
        size=4; addr=v8543-0xc [from 0x8048524:push   esi]; value=v8545
        size=4; addr=v8543-0x8 [from 0x8048523:push   edi]; value=v8546
        size=4; addr=v8543-0x4 [from 0x8048520:push   ebp]; value=v8544
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v8539
    cx = v8540
    dx = v8541
    bx = v8542
    sp = v8543-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v8543-0x4 [from 0x8048520:push   ebp]
    si = v8545
    di = v8546
    es = v8547
    cs = v8548
    ss = v8549
    ds = v8550
    fs = v8551
    gs = v8552
    cf = -v8778-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v8554
    pf = -v8772-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v8556
    af = -v8776-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v8558
    zf = v8775 [from 0x8048526:sub    esp, 0x0c]
    sf = v8774 [from 0x8048526:sub    esp, 0x0c]
    tf = v8561
    if = v8562
    df = v8563
    of = v8782 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v8565
    iopl1 = v8566
    nt = v8567
    ?15 = v8568
    memory = {
        size=4; addr=v8543-0x10 [from 0x8048525:push   ebx]; value=v8542
        size=4; addr=v8543-0xc [from 0x8048524:push   esi]; value=v8545
        size=4; addr=v8543-0x8 [from 0x8048523:push   edi]; value=v8546
        size=4; addr=v8543-0x4 [from 0x8048520:push   ebp]; value=v8544
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v8539
    cx = v8540
    dx = v8541
    bx = v8542
    sp = v8543-0x20 [from 0x8048529:call   0x0804852e]
    bp = v8543-0x4 [from 0x8048520:push   ebp]
    si = v8545
    di = v8546
    es = v8547
    cs = v8548
    ss = v8549
    ds = v8550
    fs = v8551
    gs = v8552
    cf = -v8778-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v8554
    pf = -v8772-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v8556
    af = -v8776-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v8558
    zf = v8775 [from 0x8048526:sub    esp, 0x0c]
    sf = v8774 [from 0x8048526:sub    esp, 0x0c]
    tf = v8561
    if = v8562
    df = v8563
    of = v8782 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v8565
    iopl1 = v8566
    nt = v8567
    ?15 = v8568
    memory = {
        size=4; addr=v8543-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v8543-0x10 [from 0x8048525:push   ebx]; value=v8542
        size=4; addr=v8543-0xc [from 0x8048524:push   esi]; value=v8545
        size=4; addr=v8543-0x8 [from 0x8048523:push   edi]; value=v8546
        size=4; addr=v8543-0x4 [from 0x8048520:push   ebp]; value=v8544
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v8911
    cx = v8912
    dx = v8913
    bx = v8945 [from 0x804852e:pop    ebx]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = v8925
    ?1 = v8926
    pf = v8927
    ?3 = v8928
    af = v8929
    ?5 = v8930
    zf = v8931
    sf = v8932
    tf = v8933
    if = v8934
    df = v8935
    of = v8936
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v8911
    cx = v8912
    dx = v8913
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = v9007 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v8926
    pf = -v9002-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v8928
    af = v9006 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v8930
    zf = v9005 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9004 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v8933
    if = v8934
    df = v8935
    of = v9010 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8945+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8912
    dx = v8913
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = v9007 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v8926
    pf = -v9002-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v8928
    af = v9006 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v8930
    zf = v9005 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9004 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v8933
    if = v8934
    df = v8935
    of = v9010 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8945+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8912
    dx = v8945+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = v9007 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v8926
    pf = -v9002-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v8928
    af = v9006 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v8930
    zf = v9005 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9004 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v8933
    if = v8934
    df = v8935
    of = v9010 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v17890 [from 0x8048541:sub    eax, edx]
    cx = v8912
    dx = v8945+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = -v9142-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v8926
    pf = -v9136-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v8928
    af = -v9140-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v8930
    zf = v9139 [from 0x8048541:sub    eax, edx]
    sf = v9138 [from 0x8048541:sub    eax, edx]
    tf = v8933
    if = v8934
    df = v8935
    of = v9146 [from 0x8048541:sub    eax, edx]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v9185 [from 0x8048543:sar    eax, 0x02]
    cx = v8912
    dx = v8945+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = v9188 [from 0x8048543:sar    eax, 0x02]
    ?1 = v8926
    pf = -v9208-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v8928
    af = <top>
    ?5 = v8930
    zf = v9213 [from 0x8048543:sar    eax, 0x02]
    sf = v9211 [from 0x8048543:sar    eax, 0x02]
    tf = v8933
    if = v8934
    df = v8935
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v9185 [from 0x8048543:sar    eax, 0x02]
    cx = v8912
    dx = v8945+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = v9188 [from 0x8048543:sar    eax, 0x02]
    ?1 = v8926
    pf = -v9208-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v8928
    af = <top>
    ?5 = v8930
    zf = v9213 [from 0x8048543:sar    eax, 0x02]
    sf = v9211 [from 0x8048543:sar    eax, 0x02]
    tf = v8933
    if = v8934
    df = v8935
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {
        size=4; addr=v8916-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9185 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v9185-0x1 [from 0x8048549:dec    eax]
    cx = v8912
    dx = v8945+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = v9188 [from 0x8048543:sar    eax, 0x02]
    ?1 = v8926
    pf = -v9307-0x1 [from 0x8048549:dec    eax]
    ?3 = v8928
    af = -v9311-0x1 [from 0x8048549:dec    eax]
    ?5 = v8930
    zf = v9310 [from 0x8048549:dec    eax]
    sf = v9309 [from 0x8048549:dec    eax]
    tf = v8933
    if = v8934
    df = v8935
    of = v9315 [from 0x8048549:dec    eax]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {
        size=4; addr=v8916-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9185 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v9185-0x1 [from 0x8048549:dec    eax]
    cx = v8912
    dx = v8945+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = -v9380-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v8926
    pf = -v9374-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v8928
    af = -v9378-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v8930
    zf = v9377 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v9376 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v8933
    if = v8934
    df = v8935
    of = v9384 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {
        size=4; addr=v8916-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9185 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v9185-0x1 [from 0x8048549:dec    eax]
    cx = v8912
    dx = v8945+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8945+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v8915+0x4 [from 0x804852e:pop    ebx]
    bp = v8916
    si = v8917
    di = v8918
    es = v8919
    cs = v8920
    ss = v8921
    ds = v8922
    fs = v8923
    gs = v8924
    cf = -v9380-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v8926
    pf = -v9374-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v8928
    af = -v9378-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v8930
    zf = v9377 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v9376 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v8933
    if = v8934
    df = v8935
    of = v9384 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v8937
    iopl1 = v8938
    nt = v8939
    ?15 = v8940
    memory = {
        size=4; addr=v8916-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9185 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v9418 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax = v9540
    cx = v9541
    dx = v9542
    bx = v9543
    sp = v9544
    bp = v9545
    si = v9574 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v9547
    es = v9548
    cs = v9549
    ss = v9550
    ds = v9551
    fs = v9552
    gs = v9553
    cf = v9554
    ?1 = v9555
    pf = v9556
    ?3 = v9557
    af = v9558
    ?5 = v9559
    zf = v9560
    sf = v9561
    tf = v9562
    if = v9563
    df = v9564
    of = v9565
    iopl0 = v9566
    iopl1 = v9567
    nt = v9568
    ?15 = v9569
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]
0x8048552:xor    edi, edi
    ax = v9540
    cx = v9541
    dx = v9542
    bx = v9543
    sp = v9544
    bp = v9545
    si = v9574 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v9548
    cs = v9549
    ss = v9550
    ds = v9551
    fs = v9552
    gs = v9553
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v9555
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v9557
    af = <top>
    ?5 = v9559
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v9562
    if = v9563
    df = v9564
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v9566
    iopl1 = v9567
    nt = v9568
    ?15 = v9569
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]
0x8048554:lea    esi, [esi + 0x00000000]
    ax = v9540
    cx = v9541
    dx = v9542
    bx = v9543
    sp = v9544
    bp = v9545
    si = v9574 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v9548
    cs = v9549
    ss = v9550
    ds = v9551
    fs = v9552
    gs = v9553
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v9555
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v9557
    af = <top>
    ?5 = v9559
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v9562
    if = v9563
    df = v9564
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v9566
    iopl1 = v9567
    nt = v9568
    ?15 = v9569
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]
0x804855a:lea    edi, [edi + 0x00000000]
    ax = v9540
    cx = v9541
    dx = v9542
    bx = v9543
    sp = v9544
    bp = v9545
    si = v9574 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v9548
    cs = v9549
    ss = v9550
    ds = v9551
    fs = v9552
    gs = v9553
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v9555
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v9557
    af = <top>
    ?5 = v9559
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v9562
    if = v9563
    df = v9564
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v9566
    iopl1 = v9567
    nt = v9568
    ?15 = v9569
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]
0x8048560:call   DWORD PTR ds:[esi]
    ax = v9540
    cx = v9541
    dx = v9542
    bx = v9543
    sp = v9544-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v9545
    si = v9574 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v9548
    cs = v9549
    ss = v9550
    ds = v9551
    fs = v9552
    gs = v9553
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v9555
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v9557
    af = <top>
    ?5 = v9559
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v9562
    if = v9563
    df = v9564
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v9566
    iopl1 = v9567
    nt = v9568
    ?15 = v9569
    memory = {
        size=4; addr=v9544-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v9735 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax = v9797
    cx = v9798
    dx = v9799
    bx = v9800
    sp = v9801
    bp = v9802
    si = v9803
    di = v9804+0x1 [from 0x8048562:inc    edi]
    es = v9805
    cs = v9806
    ss = v9807
    ds = v9808
    fs = v9809
    gs = v9810
    cf = v9811
    ?1 = v9812
    pf = -v9852-0x1 [from 0x8048562:inc    edi]
    ?3 = v9814
    af = v9856 [from 0x8048562:inc    edi]
    ?5 = v9816
    zf = v9855 [from 0x8048562:inc    edi]
    sf = v9854 [from 0x8048562:inc    edi]
    tf = v9819
    if = v9820
    df = v9821
    of = v9859 [from 0x8048562:inc    edi]
    iopl0 = v9823
    iopl1 = v9824
    nt = v9825
    ?15 = v9826
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]
0x8048563:sub    esi, 0x04
    ax = v9797
    cx = v9798
    dx = v9799
    bx = v9800
    sp = v9801
    bp = v9802
    si = v9803-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v9804+0x1 [from 0x8048562:inc    edi]
    es = v9805
    cs = v9806
    ss = v9807
    ds = v9808
    fs = v9809
    gs = v9810
    cf = -v9924-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v9812
    pf = -v9918-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v9814
    af = -v9922-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v9816
    zf = v9921 [from 0x8048563:sub    esi, 0x04]
    sf = v9920 [from 0x8048563:sub    esi, 0x04]
    tf = v9819
    if = v9820
    df = v9821
    of = v9928 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v9823
    iopl1 = v9824
    nt = v9825
    ?15 = v9826
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v9797
    cx = v9798
    dx = v9799
    bx = v9800
    sp = v9801
    bp = v9802
    si = v9803-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v9804+0x1 [from 0x8048562:inc    edi]
    es = v9805
    cs = v9806
    ss = v9807
    ds = v9808
    fs = v9809
    gs = v9810
    cf = -v9996-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v9812
    pf = -v9990-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v9814
    af = -v9994-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v9816
    zf = v9993 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v9992 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v9819
    if = v9820
    df = v9821
    of = v10000 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v9823
    iopl1 = v9824
    nt = v9825
    ?15 = v9826
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
0x8048569:jne    0x08048560
    ax = v9797
    cx = v9798
    dx = v9799
    bx = v9800
    sp = v9801
    bp = v9802
    si = v9803-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v9804+0x1 [from 0x8048562:inc    edi]
    es = v9805
    cs = v9806
    ss = v9807
    ds = v9808
    fs = v9809
    gs = v9810
    cf = -v9996-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v9812
    pf = -v9990-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v9814
    af = -v9994-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v9816
    zf = v9993 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v9992 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v9819
    if = v9820
    df = v9821
    of = v10000 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v9823
    iopl1 = v9824
    nt = v9825
    ?15 = v9826
    memory = {}
    ip = v10035 [from 0x8048569:jne    0x08048560]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v10157
    cx = v10158
    dx = v10159
    bx = v10160
    sp = v10161-0x4 [from 0x804856b:call   0x080485b0]
    bp = v10162
    si = v10163
    di = v10164
    es = v10165
    cs = v10166
    ss = v10167
    ds = v10168
    fs = v10169
    gs = v10170
    cf = v10171
    ?1 = v10172
    pf = v10173
    ?3 = v10174
    af = v10175
    ?5 = v10176
    zf = v10177
    sf = v10178
    tf = v10179
    if = v10180
    df = v10181
    of = v10182
    iopl0 = v10183
    iopl1 = v10184
    nt = v10185
    ?15 = v10186
    memory = {
        size=4; addr=v10161-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v10284
    cx = v10285
    dx = v10286
    bx = v10287
    sp = v10288+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v10289
    si = v10290
    di = v10291
    es = v10292
    cs = v10293
    ss = v10294
    ds = v10295
    fs = v10296
    gs = v10297
    cf = v10344 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10299
    pf = -v10339-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10301
    af = v10343 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10303
    zf = v10342 [from 0x8048570:add    esp, 0x0c]
    sf = v10341 [from 0x8048570:add    esp, 0x0c]
    tf = v10306
    if = v10307
    df = v10308
    of = v10347 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10310
    iopl1 = v10311
    nt = v10312
    ?15 = v10313
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v10284
    cx = v10285
    dx = v10286
    bx = v10383 [from 0x8048573:pop    ebx]
    sp = v10288+0x10 [from 0x8048573:pop    ebx]
    bp = v10289
    si = v10290
    di = v10291
    es = v10292
    cs = v10293
    ss = v10294
    ds = v10295
    fs = v10296
    gs = v10297
    cf = v10344 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10299
    pf = -v10339-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10301
    af = v10343 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10303
    zf = v10342 [from 0x8048570:add    esp, 0x0c]
    sf = v10341 [from 0x8048570:add    esp, 0x0c]
    tf = v10306
    if = v10307
    df = v10308
    of = v10347 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10310
    iopl1 = v10311
    nt = v10312
    ?15 = v10313
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v10284
    cx = v10285
    dx = v10286
    bx = v10383 [from 0x8048573:pop    ebx]
    sp = v10288+0x14 [from 0x8048574:pop    esi]
    bp = v10289
    si = v10419 [from 0x8048574:pop    esi]
    di = v10291
    es = v10292
    cs = v10293
    ss = v10294
    ds = v10295
    fs = v10296
    gs = v10297
    cf = v10344 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10299
    pf = -v10339-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10301
    af = v10343 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10303
    zf = v10342 [from 0x8048570:add    esp, 0x0c]
    sf = v10341 [from 0x8048570:add    esp, 0x0c]
    tf = v10306
    if = v10307
    df = v10308
    of = v10347 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10310
    iopl1 = v10311
    nt = v10312
    ?15 = v10313
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v10284
    cx = v10285
    dx = v10286
    bx = v10383 [from 0x8048573:pop    ebx]
    sp = v10288+0x18 [from 0x8048575:pop    edi]
    bp = v10289
    si = v10419 [from 0x8048574:pop    esi]
    di = v10455 [from 0x8048575:pop    edi]
    es = v10292
    cs = v10293
    ss = v10294
    ds = v10295
    fs = v10296
    gs = v10297
    cf = v10344 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10299
    pf = -v10339-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10301
    af = v10343 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10303
    zf = v10342 [from 0x8048570:add    esp, 0x0c]
    sf = v10341 [from 0x8048570:add    esp, 0x0c]
    tf = v10306
    if = v10307
    df = v10308
    of = v10347 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10310
    iopl1 = v10311
    nt = v10312
    ?15 = v10313
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v10284
    cx = v10285
    dx = v10286
    bx = v10383 [from 0x8048573:pop    ebx]
    sp = v10288+0x1c [from 0x8048576:pop    ebp]
    bp = v10491 [from 0x8048576:pop    ebp]
    si = v10419 [from 0x8048574:pop    esi]
    di = v10455 [from 0x8048575:pop    edi]
    es = v10292
    cs = v10293
    ss = v10294
    ds = v10295
    fs = v10296
    gs = v10297
    cf = v10344 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10299
    pf = -v10339-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10301
    af = v10343 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10303
    zf = v10342 [from 0x8048570:add    esp, 0x0c]
    sf = v10341 [from 0x8048570:add    esp, 0x0c]
    tf = v10306
    if = v10307
    df = v10308
    of = v10347 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10310
    iopl1 = v10311
    nt = v10312
    ?15 = v10313
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v10284
    cx = v10285
    dx = v10286
    bx = v10383 [from 0x8048573:pop    ebx]
    sp = v10288+0x20 [from 0x8048577:ret    ]
    bp = v10491 [from 0x8048576:pop    ebp]
    si = v10419 [from 0x8048574:pop    esi]
    di = v10455 [from 0x8048575:pop    edi]
    es = v10292
    cs = v10293
    ss = v10294
    ds = v10295
    fs = v10296
    gs = v10297
    cf = v10344 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10299
    pf = -v10339-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10301
    af = v10343 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10303
    zf = v10342 [from 0x8048570:add    esp, 0x0c]
    sf = v10341 [from 0x8048570:add    esp, 0x0c]
    tf = v10306
    if = v10307
    df = v10308
    of = v10347 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10310
    iopl1 = v10311
    nt = v10312
    ?15 = v10313
    memory = {}
    ip = v10529 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    ax = v10591
    cx = v10592
    dx = v10593
    bx = v10594
    sp = v10595-0x4 [from 0x8048580:push   ebp]
    bp = v10596
    si = v10597
    di = v10598
    es = v10599
    cs = v10600
    ss = v10601
    ds = v10602
    fs = v10603
    gs = v10604
    cf = v10605
    ?1 = v10606
    pf = v10607
    ?3 = v10608
    af = v10609
    ?5 = v10610
    zf = v10611
    sf = v10612
    tf = v10613
    if = v10614
    df = v10615
    of = v10616
    iopl0 = v10617
    iopl1 = v10618
    nt = v10619
    ?15 = v10620
    memory = {
        size=4; addr=v10595-0x4 [from 0x8048580:push   ebp]; value=v10596
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v10591
    cx = v10592
    dx = v10593
    bx = v10594
    sp = v10595-0x4 [from 0x8048580:push   ebp]
    bp = v10595-0x4 [from 0x8048580:push   ebp]
    si = v10597
    di = v10598
    es = v10599
    cs = v10600
    ss = v10601
    ds = v10602
    fs = v10603
    gs = v10604
    cf = v10605
    ?1 = v10606
    pf = v10607
    ?3 = v10608
    af = v10609
    ?5 = v10610
    zf = v10611
    sf = v10612
    tf = v10613
    if = v10614
    df = v10615
    of = v10616
    iopl0 = v10617
    iopl1 = v10618
    nt = v10619
    ?15 = v10620
    memory = {
        size=4; addr=v10595-0x4 [from 0x8048580:push   ebp]; value=v10596
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v10591
    cx = v10592
    dx = v10593
    bx = v10594
    sp = v10595-0x8 [from 0x8048583:push   ebx]
    bp = v10595-0x4 [from 0x8048580:push   ebp]
    si = v10597
    di = v10598
    es = v10599
    cs = v10600
    ss = v10601
    ds = v10602
    fs = v10603
    gs = v10604
    cf = v10605
    ?1 = v10606
    pf = v10607
    ?3 = v10608
    af = v10609
    ?5 = v10610
    zf = v10611
    sf = v10612
    tf = v10613
    if = v10614
    df = v10615
    of = v10616
    iopl0 = v10617
    iopl1 = v10618
    nt = v10619
    ?15 = v10620
    memory = {
        size=4; addr=v10595-0x8 [from 0x8048583:push   ebx]; value=v10594
        size=4; addr=v10595-0x4 [from 0x8048580:push   ebp]; value=v10596
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v10591
    cx = v10592
    dx = v10593
    bx = v10594
    sp = v10595-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10595-0x4 [from 0x8048580:push   ebp]
    si = v10597
    di = v10598
    es = v10599
    cs = v10600
    ss = v10601
    ds = v10602
    fs = v10603
    gs = v10604
    cf = -v10758-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10606
    pf = -v10752-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10608
    af = -v10756-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10610
    zf = v10755 [from 0x8048584:sub    esp, 0x04]
    sf = v10754 [from 0x8048584:sub    esp, 0x04]
    tf = v10613
    if = v10614
    df = v10615
    of = v10762 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10617
    iopl1 = v10618
    nt = v10619
    ?15 = v10620
    memory = {
        size=4; addr=v10595-0x8 [from 0x8048583:push   ebx]; value=v10594
        size=4; addr=v10595-0x4 [from 0x8048580:push   ebp]; value=v10596
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v10591
    cx = v10592
    dx = v10593
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10595-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10595-0x4 [from 0x8048580:push   ebp]
    si = v10597
    di = v10598
    es = v10599
    cs = v10600
    ss = v10601
    ds = v10602
    fs = v10603
    gs = v10604
    cf = -v10758-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10606
    pf = -v10752-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10608
    af = -v10756-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10610
    zf = v10755 [from 0x8048584:sub    esp, 0x04]
    sf = v10754 [from 0x8048584:sub    esp, 0x04]
    tf = v10613
    if = v10614
    df = v10615
    of = v10762 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10617
    iopl1 = v10618
    nt = v10619
    ?15 = v10620
    memory = {
        size=4; addr=v10595-0x8 [from 0x8048583:push   ebx]; value=v10594
        size=4; addr=v10595-0x4 [from 0x8048580:push   ebp]; value=v10596
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v10830 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10592
    dx = v10593
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10595-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10595-0x4 [from 0x8048580:push   ebp]
    si = v10597
    di = v10598
    es = v10599
    cs = v10600
    ss = v10601
    ds = v10602
    fs = v10603
    gs = v10604
    cf = -v10758-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10606
    pf = -v10752-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10608
    af = -v10756-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10610
    zf = v10755 [from 0x8048584:sub    esp, 0x04]
    sf = v10754 [from 0x8048584:sub    esp, 0x04]
    tf = v10613
    if = v10614
    df = v10615
    of = v10762 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10617
    iopl1 = v10618
    nt = v10619
    ?15 = v10620
    memory = {
        size=4; addr=v10595-0x8 [from 0x8048583:push   ebx]; value=v10594
        size=4; addr=v10595-0x4 [from 0x8048580:push   ebp]; value=v10596
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v10830 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10592
    dx = v10593
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10595-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10595-0x4 [from 0x8048580:push   ebp]
    si = v10597
    di = v10598
    es = v10599
    cs = v10600
    ss = v10601
    ds = v10602
    fs = v10603
    gs = v10604
    cf = -v10895-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v10606
    pf = -v10889-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v10608
    af = -v10893-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v10610
    zf = v10892 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v10891 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v10613
    if = v10614
    df = v10615
    of = v10899 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v10617
    iopl1 = v10618
    nt = v10619
    ?15 = v10620
    memory = {
        size=4; addr=v10595-0x8 [from 0x8048583:push   ebx]; value=v10594
        size=4; addr=v10595-0x4 [from 0x8048580:push   ebp]; value=v10596
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v10830 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10592
    dx = v10593
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10595-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10595-0x4 [from 0x8048580:push   ebp]
    si = v10597
    di = v10598
    es = v10599
    cs = v10600
    ss = v10601
    ds = v10602
    fs = v10603
    gs = v10604
    cf = -v10895-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v10606
    pf = -v10889-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v10608
    af = -v10893-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v10610
    zf = v10892 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v10891 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v10613
    if = v10614
    df = v10615
    of = v10899 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v10617
    iopl1 = v10618
    nt = v10619
    ?15 = v10620
    memory = {
        size=4; addr=v10595-0x8 [from 0x8048583:push   ebx]; value=v10594
        size=4; addr=v10595-0x4 [from 0x8048580:push   ebp]; value=v10596
    }
    ip = v10933 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v11055
    cx = v11056
    dx = v11057
    bx = v11058
    sp = v11059
    bp = v11060
    si = v11061 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11062
    es = v11063
    cs = v11064
    ss = v11065
    ds = v11066
    fs = v11067
    gs = v11068
    cf = v11069
    ?1 = v11070
    pf = v11071
    ?3 = v11072
    af = v11073
    ?5 = v11074
    zf = v11075
    sf = v11076
    tf = v11077
    if = v11078
    df = v11079
    of = v11080
    iopl0 = v11081
    iopl1 = v11082
    nt = v11083
    ?15 = v11084
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v11055
    cx = v11056
    dx = v11057
    bx = v11058
    sp = v11059
    bp = v11060
    si = v11061 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11062 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11063
    cs = v11064
    ss = v11065
    ds = v11066
    fs = v11067
    gs = v11068
    cf = v11069
    ?1 = v11070
    pf = v11071
    ?3 = v11072
    af = v11073
    ?5 = v11074
    zf = v11075
    sf = v11076
    tf = v11077
    if = v11078
    df = v11079
    of = v11080
    iopl0 = v11081
    iopl1 = v11082
    nt = v11083
    ?15 = v11084
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v11055
    cx = v11056
    dx = v11057
    bx = v11058-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v11059
    bp = v11060
    si = v11061 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11062 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11063
    cs = v11064
    ss = v11065
    ds = v11066
    fs = v11067
    gs = v11068
    cf = -v11186-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v11070
    pf = -v11180-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v11072
    af = -v11184-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v11074
    zf = v11183 [from 0x80485a0:sub    ebx, 0x04]
    sf = v11182 [from 0x80485a0:sub    ebx, 0x04]
    tf = v11077
    if = v11078
    df = v11079
    of = v11190 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v11081
    iopl1 = v11082
    nt = v11083
    ?15 = v11084
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v11055
    cx = v11056
    dx = v11057
    bx = v11058-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v11059-0x4 [from 0x80485a3:call   eax]
    bp = v11060
    si = v11061 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11062 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11063
    cs = v11064
    ss = v11065
    ds = v11066
    fs = v11067
    gs = v11068
    cf = -v11186-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v11070
    pf = -v11180-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v11072
    af = -v11184-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v11074
    zf = v11183 [from 0x80485a0:sub    ebx, 0x04]
    sf = v11182 [from 0x80485a0:sub    ebx, 0x04]
    tf = v11077
    if = v11078
    df = v11079
    of = v11190 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v11081
    iopl1 = v11082
    nt = v11083
    ?15 = v11084
    memory = {
        size=4; addr=v11059-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v11055
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v11320 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11289
    dx = v11290
    bx = v11291
    sp = v11292
    bp = v11293
    si = v11294
    di = v11295
    es = v11296
    cs = v11297
    ss = v11298
    ds = v11299
    fs = v11300
    gs = v11301
    cf = v11302
    ?1 = v11303
    pf = v11304
    ?3 = v11305
    af = v11306
    ?5 = v11307
    zf = v11308
    sf = v11309
    tf = v11310
    if = v11311
    df = v11312
    of = v11313
    iopl0 = v11314
    iopl1 = v11315
    nt = v11316
    ?15 = v11317
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v11320 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11289
    dx = v11290
    bx = v11291
    sp = v11292
    bp = v11293
    si = v11294
    di = v11295
    es = v11296
    cs = v11297
    ss = v11298
    ds = v11299
    fs = v11300
    gs = v11301
    cf = -v11385-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v11303
    pf = -v11379-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v11305
    af = -v11383-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v11307
    zf = v11382 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v11381 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v11310
    if = v11311
    df = v11312
    of = v11389 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v11314
    iopl1 = v11315
    nt = v11316
    ?15 = v11317
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v11320 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11289
    dx = v11290
    bx = v11291
    sp = v11292
    bp = v11293
    si = v11294
    di = v11295
    es = v11296
    cs = v11297
    ss = v11298
    ds = v11299
    fs = v11300
    gs = v11301
    cf = -v11385-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v11303
    pf = -v11379-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v11305
    af = -v11383-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v11307
    zf = v11382 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v11381 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v11310
    if = v11311
    df = v11312
    of = v11389 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v11314
    iopl1 = v11315
    nt = v11316
    ?15 = v11317
    memory = {}
    ip = v11424 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v11580 [from 0x80485ac:pop    eax]
    cx = v11547
    dx = v11548
    bx = v11549
    sp = v11550+0x4 [from 0x80485ac:pop    eax]
    bp = v11551
    si = v11552
    di = v11553
    es = v11554
    cs = v11555
    ss = v11556
    ds = v11557
    fs = v11558
    gs = v11559
    cf = v11560
    ?1 = v11561
    pf = v11562
    ?3 = v11563
    af = v11564
    ?5 = v11565
    zf = v11566
    sf = v11567
    tf = v11568
    if = v11569
    df = v11570
    of = v11571
    iopl0 = v11572
    iopl1 = v11573
    nt = v11574
    ?15 = v11575
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v11580 [from 0x80485ac:pop    eax]
    cx = v11547
    dx = v11548
    bx = v11616 [from 0x80485ad:pop    ebx]
    sp = v11550+0x8 [from 0x80485ad:pop    ebx]
    bp = v11551
    si = v11552
    di = v11553
    es = v11554
    cs = v11555
    ss = v11556
    ds = v11557
    fs = v11558
    gs = v11559
    cf = v11560
    ?1 = v11561
    pf = v11562
    ?3 = v11563
    af = v11564
    ?5 = v11565
    zf = v11566
    sf = v11567
    tf = v11568
    if = v11569
    df = v11570
    of = v11571
    iopl0 = v11572
    iopl1 = v11573
    nt = v11574
    ?15 = v11575
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v11580 [from 0x80485ac:pop    eax]
    cx = v11547
    dx = v11548
    bx = v11616 [from 0x80485ad:pop    ebx]
    sp = v11550+0xc [from 0x80485ae:pop    ebp]
    bp = v11652 [from 0x80485ae:pop    ebp]
    si = v11552
    di = v11553
    es = v11554
    cs = v11555
    ss = v11556
    ds = v11557
    fs = v11558
    gs = v11559
    cf = v11560
    ?1 = v11561
    pf = v11562
    ?3 = v11563
    af = v11564
    ?5 = v11565
    zf = v11566
    sf = v11567
    tf = v11568
    if = v11569
    df = v11570
    of = v11571
    iopl0 = v11572
    iopl1 = v11573
    nt = v11574
    ?15 = v11575
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v11580 [from 0x80485ac:pop    eax]
    cx = v11547
    dx = v11548
    bx = v11616 [from 0x80485ad:pop    ebx]
    sp = v11550+0x10 [from 0x80485af:ret    ]
    bp = v11652 [from 0x80485ae:pop    ebp]
    si = v11552
    di = v11553
    es = v11554
    cs = v11555
    ss = v11556
    ds = v11557
    fs = v11558
    gs = v11559
    cf = v11560
    ?1 = v11561
    pf = v11562
    ?3 = v11563
    af = v11564
    ?5 = v11565
    zf = v11566
    sf = v11567
    tf = v11568
    if = v11569
    df = v11570
    of = v11571
    iopl0 = v11572
    iopl1 = v11573
    nt = v11574
    ?15 = v11575
    memory = {}
    ip = v11690 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v11752
    cx = v11753
    dx = v11754
    bx = v11755
    sp = v11756-0x4 [from 0x80485b0:push   ebp]
    bp = v11757
    si = v11758
    di = v11759
    es = v11760
    cs = v11761
    ss = v11762
    ds = v11763
    fs = v11764
    gs = v11765
    cf = v11766
    ?1 = v11767
    pf = v11768
    ?3 = v11769
    af = v11770
    ?5 = v11771
    zf = v11772
    sf = v11773
    tf = v11774
    if = v11775
    df = v11776
    of = v11777
    iopl0 = v11778
    iopl1 = v11779
    nt = v11780
    ?15 = v11781
    memory = {
        size=4; addr=v11756-0x4 [from 0x80485b0:push   ebp]; value=v11757
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v11752
    cx = v11753
    dx = v11754
    bx = v11755
    sp = v11756-0x4 [from 0x80485b0:push   ebp]
    bp = v11756-0x4 [from 0x80485b0:push   ebp]
    si = v11758
    di = v11759
    es = v11760
    cs = v11761
    ss = v11762
    ds = v11763
    fs = v11764
    gs = v11765
    cf = v11766
    ?1 = v11767
    pf = v11768
    ?3 = v11769
    af = v11770
    ?5 = v11771
    zf = v11772
    sf = v11773
    tf = v11774
    if = v11775
    df = v11776
    of = v11777
    iopl0 = v11778
    iopl1 = v11779
    nt = v11780
    ?15 = v11781
    memory = {
        size=4; addr=v11756-0x4 [from 0x80485b0:push   ebp]; value=v11757
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v11752
    cx = v11753
    dx = v11754
    bx = v11755
    sp = v11756-0x8 [from 0x80485b3:push   ebx]
    bp = v11756-0x4 [from 0x80485b0:push   ebp]
    si = v11758
    di = v11759
    es = v11760
    cs = v11761
    ss = v11762
    ds = v11763
    fs = v11764
    gs = v11765
    cf = v11766
    ?1 = v11767
    pf = v11768
    ?3 = v11769
    af = v11770
    ?5 = v11771
    zf = v11772
    sf = v11773
    tf = v11774
    if = v11775
    df = v11776
    of = v11777
    iopl0 = v11778
    iopl1 = v11779
    nt = v11780
    ?15 = v11781
    memory = {
        size=4; addr=v11756-0x8 [from 0x80485b3:push   ebx]; value=v11755
        size=4; addr=v11756-0x4 [from 0x80485b0:push   ebp]; value=v11757
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v11752
    cx = v11753
    dx = v11754
    bx = v11755
    sp = v11756-0xc [from 0x80485b4:push   eax]
    bp = v11756-0x4 [from 0x80485b0:push   ebp]
    si = v11758
    di = v11759
    es = v11760
    cs = v11761
    ss = v11762
    ds = v11763
    fs = v11764
    gs = v11765
    cf = v11766
    ?1 = v11767
    pf = v11768
    ?3 = v11769
    af = v11770
    ?5 = v11771
    zf = v11772
    sf = v11773
    tf = v11774
    if = v11775
    df = v11776
    of = v11777
    iopl0 = v11778
    iopl1 = v11779
    nt = v11780
    ?15 = v11781
    memory = {
        size=4; addr=v11756-0xc [from 0x80485b4:push   eax]; value=v11752
        size=4; addr=v11756-0x8 [from 0x80485b3:push   ebx]; value=v11755
        size=4; addr=v11756-0x4 [from 0x80485b0:push   ebp]; value=v11757
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v11752
    cx = v11753
    dx = v11754
    bx = v11755
    sp = v11756-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v11756-0x4 [from 0x80485b0:push   ebp]
    si = v11758
    di = v11759
    es = v11760
    cs = v11761
    ss = v11762
    ds = v11763
    fs = v11764
    gs = v11765
    cf = v11766
    ?1 = v11767
    pf = v11768
    ?3 = v11769
    af = v11770
    ?5 = v11771
    zf = v11772
    sf = v11773
    tf = v11774
    if = v11775
    df = v11776
    of = v11777
    iopl0 = v11778
    iopl1 = v11779
    nt = v11780
    ?15 = v11781
    memory = {
        size=4; addr=v11756-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v11756-0xc [from 0x80485b4:push   eax]; value=v11752
        size=4; addr=v11756-0x8 [from 0x80485b3:push   ebx]; value=v11755
        size=4; addr=v11756-0x4 [from 0x80485b0:push   ebp]; value=v11757
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v12019
    cx = v12020
    dx = v12021
    bx = v12053 [from 0x80485ba:pop    ebx]
    sp = v12023+0x4 [from 0x80485ba:pop    ebx]
    bp = v12024
    si = v12025
    di = v12026
    es = v12027
    cs = v12028
    ss = v12029
    ds = v12030
    fs = v12031
    gs = v12032
    cf = v12033
    ?1 = v12034
    pf = v12035
    ?3 = v12036
    af = v12037
    ?5 = v12038
    zf = v12039
    sf = v12040
    tf = v12041
    if = v12042
    df = v12043
    of = v12044
    iopl0 = v12045
    iopl1 = v12046
    nt = v12047
    ?15 = v12048
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v12019
    cx = v12020
    dx = v12021
    bx = v12053+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v12023+0x4 [from 0x80485ba:pop    ebx]
    bp = v12024
    si = v12025
    di = v12026
    es = v12027
    cs = v12028
    ss = v12029
    ds = v12030
    fs = v12031
    gs = v12032
    cf = v12115 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v12034
    pf = -v12110-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v12036
    af = v12114 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v12038
    zf = v12113 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v12112 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v12041
    if = v12042
    df = v12043
    of = v12118 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v12045
    iopl1 = v12046
    nt = v12047
    ?15 = v12048
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v12019
    cx = v12020
    dx = v12021
    bx = v12053+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v12023 [from 0x80485c1:call   0x08048390]
    bp = v12024
    si = v12025
    di = v12026
    es = v12027
    cs = v12028
    ss = v12029
    ds = v12030
    fs = v12031
    gs = v12032
    cf = v12115 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v12034
    pf = -v12110-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v12036
    af = v12114 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v12038
    zf = v12113 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v12112 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v12041
    if = v12042
    df = v12043
    of = v12118 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v12045
    iopl1 = v12046
    nt = v12047
    ?15 = v12048
    memory = {
        size=4; addr=v12023 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v12281 [from 0x80485c6:pop    eax]
    cx = v12248
    dx = v12249
    bx = v12250
    sp = v12251+0x4 [from 0x80485c6:pop    eax]
    bp = v12252
    si = v12253
    di = v12254
    es = v12255
    cs = v12256
    ss = v12257
    ds = v12258
    fs = v12259
    gs = v12260
    cf = v12261
    ?1 = v12262
    pf = v12263
    ?3 = v12264
    af = v12265
    ?5 = v12266
    zf = v12267
    sf = v12268
    tf = v12269
    if = v12270
    df = v12271
    of = v12272
    iopl0 = v12273
    iopl1 = v12274
    nt = v12275
    ?15 = v12276
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v12281 [from 0x80485c6:pop    eax]
    cx = v12248
    dx = v12249
    bx = v12317 [from 0x80485c7:pop    ebx]
    sp = v12251+0x8 [from 0x80485c7:pop    ebx]
    bp = v12252
    si = v12253
    di = v12254
    es = v12255
    cs = v12256
    ss = v12257
    ds = v12258
    fs = v12259
    gs = v12260
    cf = v12261
    ?1 = v12262
    pf = v12263
    ?3 = v12264
    af = v12265
    ?5 = v12266
    zf = v12267
    sf = v12268
    tf = v12269
    if = v12270
    df = v12271
    of = v12272
    iopl0 = v12273
    iopl1 = v12274
    nt = v12275
    ?15 = v12276
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v12281 [from 0x80485c6:pop    eax]
    cx = v12248
    dx = v12249
    bx = v12317 [from 0x80485c7:pop    ebx]
    sp = v12252+0x4 [from 0x80485c8:leave  ]
    bp = v12353 [from 0x80485c8:leave  ]
    si = v12253
    di = v12254
    es = v12255
    cs = v12256
    ss = v12257
    ds = v12258
    fs = v12259
    gs = v12260
    cf = v12261
    ?1 = v12262
    pf = v12263
    ?3 = v12264
    af = v12265
    ?5 = v12266
    zf = v12267
    sf = v12268
    tf = v12269
    if = v12270
    df = v12271
    of = v12272
    iopl0 = v12273
    iopl1 = v12274
    nt = v12275
    ?15 = v12276
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v12281 [from 0x80485c6:pop    eax]
    cx = v12248
    dx = v12249
    bx = v12317 [from 0x80485c7:pop    ebx]
    sp = v12252+0x8 [from 0x80485c9:ret    ]
    bp = v12353 [from 0x80485c8:leave  ]
    si = v12253
    di = v12254
    es = v12255
    cs = v12256
    ss = v12257
    ds = v12258
    fs = v12259
    gs = v12260
    cf = v12261
    ?1 = v12262
    pf = v12263
    ?3 = v12264
    af = v12265
    ?5 = v12266
    zf = v12267
    sf = v12268
    tf = v12269
    if = v12270
    df = v12271
    of = v12272
    iopl0 = v12273
    iopl1 = v12274
    nt = v12275
    ?15 = v12276
    memory = {}
    ip = v12391 [from 0x80485c9:ret    ]
analyzed headers: 1
