==============================================
Constant propagation in function "_init"
==============================================
0x80482c8:push   ebp
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x4 [from 0x80482c8:push   ebp]
    bp = V6
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = V15
    ?1 = V16
    pf = V17
    ?3 = V18
    af = V19
    ?5 = V20
    zf = V21
    sf = V22
    tf = V23
    if = V24
    df = V25
    of = V26
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482c9:mov    ebp, esp
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x4 [from 0x80482c8:push   ebp]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = V15
    ?1 = V16
    pf = V17
    ?3 = V18
    af = V19
    ?5 = V20
    zf = V21
    sf = V22
    tf = V23
    if = V24
    df = V25
    of = V26
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482cb:sub    esp, 0x08
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = -V31-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = V16
    pf = -V32-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = V18
    af = -V33-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = V20
    zf = V34 [from 0x80482cb:sub    esp, 0x08]
    sf = V35 [from 0x80482cb:sub    esp, 0x08]
    tf = V23
    if = V24
    df = V25
    of = V36 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482ce:call   0x08048364
    ax = V1
    cx = V2
    dx = V3
    bx = V4
    sp = V5-0x10 [from 0x80482ce:call   0x08048364]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V9
    cs = V10
    ss = V11
    ds = V12
    fs = V13
    gs = V14
    cf = -V31-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = V16
    pf = -V32-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = V18
    af = -V33-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = V20
    zf = V34 [from 0x80482cb:sub    esp, 0x08]
    sf = V35 [from 0x80482cb:sub    esp, 0x08]
    tf = V23
    if = V24
    df = V25
    of = V36 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = V27
    iopl1 = V28
    nt = V29
    ?15 = V30
    memory = {
        size=4; addr=V5-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482d3:call   0x080483d0
    ax = V37 [from 0x80482ce:call   0x08048364]
    cx = V38 [from 0x80482ce:call   0x08048364]
    dx = V39 [from 0x80482ce:call   0x08048364]
    bx = V4
    sp = V5-0x10 [from 0x80482d3:call   0x080483d0]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V40 [from 0x80482ce:call   0x08048364]
    cs = V41 [from 0x80482ce:call   0x08048364]
    ss = V42 [from 0x80482ce:call   0x08048364]
    ds = V43 [from 0x80482ce:call   0x08048364]
    fs = V44 [from 0x80482ce:call   0x08048364]
    gs = V45 [from 0x80482ce:call   0x08048364]
    cf = V46 [from 0x80482ce:call   0x08048364]
    ?1 = V47 [from 0x80482ce:call   0x08048364]
    pf = V48 [from 0x80482ce:call   0x08048364]
    ?3 = V49 [from 0x80482ce:call   0x08048364]
    af = V50 [from 0x80482ce:call   0x08048364]
    ?5 = V51 [from 0x80482ce:call   0x08048364]
    zf = V52 [from 0x80482ce:call   0x08048364]
    sf = V53 [from 0x80482ce:call   0x08048364]
    tf = V54 [from 0x80482ce:call   0x08048364]
    if = V55 [from 0x80482ce:call   0x08048364]
    df = V56 [from 0x80482ce:call   0x08048364]
    of = V57 [from 0x80482ce:call   0x08048364]
    iopl0 = V58 [from 0x80482ce:call   0x08048364]
    iopl1 = V59 [from 0x80482ce:call   0x08048364]
    nt = V60 [from 0x80482ce:call   0x08048364]
    ?15 = V61 [from 0x80482ce:call   0x08048364]
    memory = {
        size=4; addr=V5-0x10 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482d8:call   0x08048580
    ax = V62 [from 0x80482d3:call   0x080483d0]
    cx = V63 [from 0x80482d3:call   0x080483d0]
    dx = V64 [from 0x80482d3:call   0x080483d0]
    bx = V4
    sp = V5-0x10 [from 0x80482d8:call   0x08048580]
    bp = V5-0x4 [from 0x80482c8:push   ebp]
    si = V7
    di = V8
    es = V65 [from 0x80482d3:call   0x080483d0]
    cs = V66 [from 0x80482d3:call   0x080483d0]
    ss = V67 [from 0x80482d3:call   0x080483d0]
    ds = V68 [from 0x80482d3:call   0x080483d0]
    fs = V69 [from 0x80482d3:call   0x080483d0]
    gs = V70 [from 0x80482d3:call   0x080483d0]
    cf = V71 [from 0x80482d3:call   0x080483d0]
    ?1 = V72 [from 0x80482d3:call   0x080483d0]
    pf = V73 [from 0x80482d3:call   0x080483d0]
    ?3 = V74 [from 0x80482d3:call   0x080483d0]
    af = V75 [from 0x80482d3:call   0x080483d0]
    ?5 = V76 [from 0x80482d3:call   0x080483d0]
    zf = V77 [from 0x80482d3:call   0x080483d0]
    sf = V78 [from 0x80482d3:call   0x080483d0]
    tf = V79 [from 0x80482d3:call   0x080483d0]
    if = V80 [from 0x80482d3:call   0x080483d0]
    df = V81 [from 0x80482d3:call   0x080483d0]
    of = V82 [from 0x80482d3:call   0x080483d0]
    iopl0 = V83 [from 0x80482d3:call   0x080483d0]
    iopl1 = V84 [from 0x80482d3:call   0x080483d0]
    nt = V85 [from 0x80482d3:call   0x080483d0]
    ?15 = V86 [from 0x80482d3:call   0x080483d0]
    memory = {
        size=4; addr=V5-0x10 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482dd:leave  
    ax = V87 [from 0x80482d8:call   0x08048580]
    cx = V88 [from 0x80482d8:call   0x08048580]
    dx = V89 [from 0x80482d8:call   0x08048580]
    bx = V4
    sp = V5 [from 0x80482dd:leave  ]
    bp = V6
    si = V7
    di = V8
    es = V90 [from 0x80482d8:call   0x08048580]
    cs = V91 [from 0x80482d8:call   0x08048580]
    ss = V92 [from 0x80482d8:call   0x08048580]
    ds = V93 [from 0x80482d8:call   0x08048580]
    fs = V94 [from 0x80482d8:call   0x08048580]
    gs = V95 [from 0x80482d8:call   0x08048580]
    cf = V96 [from 0x80482d8:call   0x08048580]
    ?1 = V97 [from 0x80482d8:call   0x08048580]
    pf = V98 [from 0x80482d8:call   0x08048580]
    ?3 = V99 [from 0x80482d8:call   0x08048580]
    af = V100 [from 0x80482d8:call   0x08048580]
    ?5 = V101 [from 0x80482d8:call   0x08048580]
    zf = V102 [from 0x80482d8:call   0x08048580]
    sf = V103 [from 0x80482d8:call   0x08048580]
    tf = V104 [from 0x80482d8:call   0x08048580]
    if = V105 [from 0x80482d8:call   0x08048580]
    df = V106 [from 0x80482d8:call   0x08048580]
    of = V107 [from 0x80482d8:call   0x08048580]
    iopl0 = V108 [from 0x80482d8:call   0x08048580]
    iopl1 = V109 [from 0x80482d8:call   0x08048580]
    nt = V110 [from 0x80482d8:call   0x08048580]
    ?15 = V111 [from 0x80482d8:call   0x08048580]
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
0x80482de:ret    
    ax = V87 [from 0x80482d8:call   0x08048580]
    cx = V88 [from 0x80482d8:call   0x08048580]
    dx = V89 [from 0x80482d8:call   0x08048580]
    bx = V4
    sp = V5+0x4 [from 0x80482de:ret    ]
    bp = V6
    si = V7
    di = V8
    es = V90 [from 0x80482d8:call   0x08048580]
    cs = V91 [from 0x80482d8:call   0x08048580]
    ss = V92 [from 0x80482d8:call   0x08048580]
    ds = V93 [from 0x80482d8:call   0x08048580]
    fs = V94 [from 0x80482d8:call   0x08048580]
    gs = V95 [from 0x80482d8:call   0x08048580]
    cf = V96 [from 0x80482d8:call   0x08048580]
    ?1 = V97 [from 0x80482d8:call   0x08048580]
    pf = V98 [from 0x80482d8:call   0x08048580]
    ?3 = V99 [from 0x80482d8:call   0x08048580]
    af = V100 [from 0x80482d8:call   0x08048580]
    ?5 = V101 [from 0x80482d8:call   0x08048580]
    zf = V102 [from 0x80482d8:call   0x08048580]
    sf = V103 [from 0x80482d8:call   0x08048580]
    tf = V104 [from 0x80482d8:call   0x08048580]
    if = V105 [from 0x80482d8:call   0x08048580]
    df = V106 [from 0x80482d8:call   0x08048580]
    of = V107 [from 0x80482d8:call   0x08048580]
    iopl0 = V108 [from 0x80482d8:call   0x08048580]
    iopl1 = V109 [from 0x80482d8:call   0x08048580]
    nt = V110 [from 0x80482d8:call   0x08048580]
    ?15 = V111 [from 0x80482d8:call   0x08048580]
    memory = {
        size=4; addr=V5-0x4 [from 0x80482c8:push   ebp]; value=V6
    }
==============================================
Constant propagation in function "***uncategorized blocks***"
==============================================
0x80482df:add    bh, bh
    ax = V112
    cx = V113
    dx = V114
    bx = V115 [from 0x80482df:add    bh, bh]
    sp = V116
    bp = V117
    si = V118
    di = V119
    es = V120
    cs = V121
    ss = V122
    ds = V123
    fs = V124
    gs = V125
    cf = V126 [from 0x80482df:add    bh, bh]
    ?1 = V127
    pf = -V128-0x1 [from 0x80482df:add    bh, bh]
    ?3 = V129
    af = V130 [from 0x80482df:add    bh, bh]
    ?5 = V131
    zf = V132 [from 0x80482df:add    bh, bh]
    sf = V133 [from 0x80482df:add    bh, bh]
    tf = V134
    if = V135
    df = V136
    of = V137 [from 0x80482df:add    bh, bh]
    iopl0 = V138
    iopl1 = V139
    nt = V140
    ?15 = V141
    memory = {}
0x80482e1:xor    eax, 0x080496cc
    ax = V142 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = V113
    dx = V114
    bx = V115 [from 0x80482df:add    bh, bh]
    sp = V116
    bp = V117
    si = V118
    di = V119
    es = V120
    cs = V121
    ss = V122
    ds = V123
    fs = V124
    gs = V125
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = V127
    pf = -V143-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = V129
    af = <top>
    ?5 = V131
    zf = V144 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = V145 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = V134
    if = V135
    df = V136
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = V138
    iopl1 = V139
    nt = V140
    ?15 = V141
    memory = {}
0x80482e6:jmp    DWORD PTR ds:[0x080496d0]
    ax = V142 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = V113
    dx = V114
    bx = V115 [from 0x80482df:add    bh, bh]
    sp = V116
    bp = V117
    si = V118
    di = V119
    es = V120
    cs = V121
    ss = V122
    ds = V123
    fs = V124
    gs = V125
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = V127
    pf = -V143-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = V129
    af = <top>
    ?5 = V131
    zf = V144 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = V145 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = V134
    if = V135
    df = V136
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = V138
    iopl1 = V139
    nt = V140
    ?15 = V141
    memory = {}
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
    }
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=1; addr=<top>; value=<top>
        size=1; addr=<top>; value=<top>
    }
0x80482f6:push   0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
    }
0x80482fb:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x0 [from 0x80482f6:push   0x00000000]
    }
0x8048306:push   0x00000008
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x00000008]
    }
0x804830b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8 [from 0x8048306:push   0x00000008]
    }
0x80482e0:push   DWORD PTR ds:[0x080496cc]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=V146 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    }
0x8048316:push   0x00000010
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x00000010]
    }
0x804831b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x10 [from 0x8048316:push   0x00000010]
    }
0x8048326:push   0x00000018
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x00000018]
    }
0x804832b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x18 [from 0x8048326:push   0x00000018]
    }
0x8048336:push   0x00000020
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x00000020]
    }
0x804833b:jmp    0x080482e0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x20 [from 0x8048336:push   0x00000020]
    }
0x80483ce:mov    esi, esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
0x80483ef:call   0x00000000
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=<top>; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = V147 [from 0x80483ef:call   0x00000000]
    cx = V148 [from 0x80483ef:call   0x00000000]
    dx = V149 [from 0x80483ef:call   0x00000000]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V150 [from 0x80483ef:call   0x00000000]
    cs = V151 [from 0x80483ef:call   0x00000000]
    ss = V152 [from 0x80483ef:call   0x00000000]
    ds = V153 [from 0x80483ef:call   0x00000000]
    fs = V154 [from 0x80483ef:call   0x00000000]
    gs = V155 [from 0x80483ef:call   0x00000000]
    cf = V156 [from 0x80483ef:call   0x00000000]
    ?1 = V157 [from 0x80483ef:call   0x00000000]
    pf = V158 [from 0x80483ef:call   0x00000000]
    ?3 = V159 [from 0x80483ef:call   0x00000000]
    af = V160 [from 0x80483ef:call   0x00000000]
    ?5 = V161 [from 0x80483ef:call   0x00000000]
    zf = V162 [from 0x80483ef:call   0x00000000]
    sf = V163 [from 0x80483ef:call   0x00000000]
    tf = V164 [from 0x80483ef:call   0x00000000]
    if = V165 [from 0x80483ef:call   0x00000000]
    df = V166 [from 0x80483ef:call   0x00000000]
    of = V167 [from 0x80483ef:call   0x00000000]
    iopl0 = V168 [from 0x80483ef:call   0x00000000]
    iopl1 = V169 [from 0x80483ef:call   0x00000000]
    nt = V170 [from 0x80483ef:call   0x00000000]
    ?15 = V171 [from 0x80483ef:call   0x00000000]
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = V147 [from 0x80483ef:call   0x00000000]
    cx = V148 [from 0x80483ef:call   0x00000000]
    dx = V149 [from 0x80483ef:call   0x00000000]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V150 [from 0x80483ef:call   0x00000000]
    cs = V151 [from 0x80483ef:call   0x00000000]
    ss = V152 [from 0x80483ef:call   0x00000000]
    ds = V153 [from 0x80483ef:call   0x00000000]
    fs = V154 [from 0x80483ef:call   0x00000000]
    gs = V155 [from 0x80483ef:call   0x00000000]
    cf = V156 [from 0x80483ef:call   0x00000000]
    ?1 = V157 [from 0x80483ef:call   0x00000000]
    pf = V158 [from 0x80483ef:call   0x00000000]
    ?3 = V159 [from 0x80483ef:call   0x00000000]
    af = V160 [from 0x80483ef:call   0x00000000]
    ?5 = V161 [from 0x80483ef:call   0x00000000]
    zf = V162 [from 0x80483ef:call   0x00000000]
    sf = V163 [from 0x80483ef:call   0x00000000]
    tf = V164 [from 0x80483ef:call   0x00000000]
    if = V165 [from 0x80483ef:call   0x00000000]
    df = V166 [from 0x80483ef:call   0x00000000]
    of = V167 [from 0x80483ef:call   0x00000000]
    iopl0 = V168 [from 0x80483ef:call   0x00000000]
    iopl1 = V169 [from 0x80483ef:call   0x00000000]
    nt = V170 [from 0x80483ef:call   0x00000000]
    ?15 = V171 [from 0x80483ef:call   0x00000000]
    memory = {
        size=4; addr=<top>; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
0x8048434:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804843a:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048456:lea    esi, [esi + 0x00]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048459:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e8:nop    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484e9:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048513:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048519:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804854f:lea    esi, [edx + eax*0x04]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048552:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048554:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x804855a:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048560:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
0x8048562:inc    edi
    ax = V172 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cx = V173 [from 0x8048560:call   DWORD PTR ds:[esi]]
    dx = V174 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V175 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cs = V176 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ss = V177 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ds = V178 [from 0x8048560:call   DWORD PTR ds:[esi]]
    fs = V179 [from 0x8048560:call   DWORD PTR ds:[esi]]
    gs = V180 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cf = V181 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ?1 = V182 [from 0x8048560:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V183 [from 0x8048560:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V184 [from 0x8048560:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V185 [from 0x8048560:call   DWORD PTR ds:[esi]]
    if = V186 [from 0x8048560:call   DWORD PTR ds:[esi]]
    df = V187 [from 0x8048560:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V188 [from 0x8048560:call   DWORD PTR ds:[esi]]
    iopl1 = V189 [from 0x8048560:call   DWORD PTR ds:[esi]]
    nt = V190 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ?15 = V191 [from 0x8048560:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048563:sub    esi, 0x04
    ax = V172 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cx = V173 [from 0x8048560:call   DWORD PTR ds:[esi]]
    dx = V174 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V175 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cs = V176 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ss = V177 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ds = V178 [from 0x8048560:call   DWORD PTR ds:[esi]]
    fs = V179 [from 0x8048560:call   DWORD PTR ds:[esi]]
    gs = V180 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V182 [from 0x8048560:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V183 [from 0x8048560:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V184 [from 0x8048560:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V185 [from 0x8048560:call   DWORD PTR ds:[esi]]
    if = V186 [from 0x8048560:call   DWORD PTR ds:[esi]]
    df = V187 [from 0x8048560:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V188 [from 0x8048560:call   DWORD PTR ds:[esi]]
    iopl1 = V189 [from 0x8048560:call   DWORD PTR ds:[esi]]
    nt = V190 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ?15 = V191 [from 0x8048560:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0], edi
    ax = V172 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cx = V173 [from 0x8048560:call   DWORD PTR ds:[esi]]
    dx = V174 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V175 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cs = V176 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ss = V177 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ds = V178 [from 0x8048560:call   DWORD PTR ds:[esi]]
    fs = V179 [from 0x8048560:call   DWORD PTR ds:[esi]]
    gs = V180 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V182 [from 0x8048560:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V183 [from 0x8048560:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V184 [from 0x8048560:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V185 [from 0x8048560:call   DWORD PTR ds:[esi]]
    if = V186 [from 0x8048560:call   DWORD PTR ds:[esi]]
    df = V187 [from 0x8048560:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V188 [from 0x8048560:call   DWORD PTR ds:[esi]]
    iopl1 = V189 [from 0x8048560:call   DWORD PTR ds:[esi]]
    nt = V190 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ?15 = V191 [from 0x8048560:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048569:jne    0x08048560
    ax = V172 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cx = V173 [from 0x8048560:call   DWORD PTR ds:[esi]]
    dx = V174 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V175 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cs = V176 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ss = V177 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ds = V178 [from 0x8048560:call   DWORD PTR ds:[esi]]
    fs = V179 [from 0x8048560:call   DWORD PTR ds:[esi]]
    gs = V180 [from 0x8048560:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V182 [from 0x8048560:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V183 [from 0x8048560:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V184 [from 0x8048560:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V185 [from 0x8048560:call   DWORD PTR ds:[esi]]
    if = V186 [from 0x8048560:call   DWORD PTR ds:[esi]]
    df = V187 [from 0x8048560:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V188 [from 0x8048560:call   DWORD PTR ds:[esi]]
    iopl1 = V189 [from 0x8048560:call   DWORD PTR ds:[esi]]
    nt = V190 [from 0x8048560:call   DWORD PTR ds:[esi]]
    ?15 = V191 [from 0x8048560:call   DWORD PTR ds:[esi]]
    memory =     <top>
==============================================
Constant propagation in function "puts@plt"
==============================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = V192
    cx = V193
    dx = V194
    bx = V195
    sp = V196
    bp = V197
    si = V198
    di = V199
    es = V200
    cs = V201
    ss = V202
    ds = V203
    fs = V204
    gs = V205
    cf = V206
    ?1 = V207
    pf = V208
    ?3 = V209
    af = V210
    ?5 = V211
    zf = V212
    sf = V213
    tf = V214
    if = V215
    df = V216
    of = V217
    iopl0 = V218
    iopl1 = V219
    nt = V220
    ?15 = V221
    memory = {}
==============================================
Constant propagation in function "_exit@plt"
==============================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = V222
    cx = V223
    dx = V224
    bx = V225
    sp = V226
    bp = V227
    si = V228
    di = V229
    es = V230
    cs = V231
    ss = V232
    ds = V233
    fs = V234
    gs = V235
    cf = V236
    ?1 = V237
    pf = V238
    ?3 = V239
    af = V240
    ?5 = V241
    zf = V242
    sf = V243
    tf = V244
    if = V245
    df = V246
    of = V247
    iopl0 = V248
    iopl1 = V249
    nt = V250
    ?15 = V251
    memory = {}
==============================================
Constant propagation in function "__gmon_start__@plt"
==============================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = V252
    cx = V253
    dx = V254
    bx = V255
    sp = V256
    bp = V257
    si = V258
    di = V259
    es = V260
    cs = V261
    ss = V262
    ds = V263
    fs = V264
    gs = V265
    cf = V266
    ?1 = V267
    pf = V268
    ?3 = V269
    af = V270
    ?5 = V271
    zf = V272
    sf = V273
    tf = V274
    if = V275
    df = V276
    of = V277
    iopl0 = V278
    iopl1 = V279
    nt = V280
    ?15 = V281
    memory = {}
==============================================
Constant propagation in function "_start"
==============================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = V282
    cx = V283
    dx = V284
    bx = V285
    sp = V286
    bp = V287
    si = V288
    di = V289
    es = V290
    cs = V291
    ss = V292
    ds = V293
    fs = V294
    gs = V295
    cf = V296
    ?1 = V297
    pf = V298
    ?3 = V299
    af = V300
    ?5 = V301
    zf = V302
    sf = V303
    tf = V304
    if = V305
    df = V306
    of = V307
    iopl0 = V308
    iopl1 = V309
    nt = V310
    ?15 = V311
    memory = {}
0x8048340:xor    ebp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048342:pop    esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048343:mov    ecx, esp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048345:and    esp, 0xf0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048348:push   eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x8048349:push   esp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
    }
0x804834a:push   edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
    }
0x804834b:push   0x08048520
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
    }
0x8048350:push   0x080484b0
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
    }
0x8048355:push   ecx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=<top>; value=<top>
    }
0x8048356:push   esi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
    }
0x8048357:push   0x08048410
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048410 [from 0x8048357:push   0x08048410]
    }
0x804835c:call   0x08048310
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048345:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048345:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=<top>; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=<top>; value=0x8048361 [from 0x804835c:call   0x08048310]
    }
0x8048361:hlt    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "0x8048362"
==============================================
0x8048362:nop    
    ax = V312
    cx = V313
    dx = V314
    bx = V315
    sp = V316
    bp = V317
    si = V318
    di = V319
    es = V320
    cs = V321
    ss = V322
    ds = V323
    fs = V324
    gs = V325
    cf = V326
    ?1 = V327
    pf = V328
    ?3 = V329
    af = V330
    ?5 = V331
    zf = V332
    sf = V333
    tf = V334
    if = V335
    df = V336
    of = V337
    iopl0 = V338
    iopl1 = V339
    nt = V340
    ?15 = V341
    memory = {}
0x8048363:nop    
    ax = V312
    cx = V313
    dx = V314
    bx = V315
    sp = V316
    bp = V317
    si = V318
    di = V319
    es = V320
    cs = V321
    ss = V322
    ds = V323
    fs = V324
    gs = V325
    cf = V326
    ?1 = V327
    pf = V328
    ?3 = V329
    af = V330
    ?5 = V331
    zf = V332
    sf = V333
    tf = V334
    if = V335
    df = V336
    of = V337
    iopl0 = V338
    iopl1 = V339
    nt = V340
    ?15 = V341
    memory = {}
==============================================
Constant propagation in function "call_gmon_start"
==============================================
0x8048364:push   ebp
    ax = V342
    cx = V343
    dx = V344
    bx = V345
    sp = V346-0x4 [from 0x8048364:push   ebp]
    bp = V347
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = V356
    ?1 = V357
    pf = V358
    ?3 = V359
    af = V360
    ?5 = V361
    zf = V362
    sf = V363
    tf = V364
    if = V365
    df = V366
    of = V367
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x8048365:mov    ebp, esp
    ax = V342
    cx = V343
    dx = V344
    bx = V345
    sp = V346-0x4 [from 0x8048364:push   ebp]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = V356
    ?1 = V357
    pf = V358
    ?3 = V359
    af = V360
    ?5 = V361
    zf = V362
    sf = V363
    tf = V364
    if = V365
    df = V366
    of = V367
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x8048367:push   ebx
    ax = V342
    cx = V343
    dx = V344
    bx = V345
    sp = V346-0x8 [from 0x8048367:push   ebx]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = V356
    ?1 = V357
    pf = V358
    ?3 = V359
    af = V360
    ?5 = V361
    zf = V362
    sf = V363
    tf = V364
    if = V365
    df = V366
    of = V367
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x8048368:push   ecx
    ax = V342
    cx = V343
    dx = V344
    bx = V345
    sp = V346-0xc [from 0x8048368:push   ecx]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = V356
    ?1 = V357
    pf = V358
    ?3 = V359
    af = V360
    ?5 = V361
    zf = V362
    sf = V363
    tf = V364
    if = V365
    df = V366
    of = V367
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0xc [from 0x8048368:push   ecx]; value=V343
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x8048369:call   0x0804836e
    ax = V342
    cx = V343
    dx = V344
    bx = V345
    sp = V346-0x10 [from 0x8048369:call   0x0804836e]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = V356
    ?1 = V357
    pf = V358
    ?3 = V359
    af = V360
    ?5 = V361
    zf = V362
    sf = V363
    tf = V364
    if = V365
    df = V366
    of = V367
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V346-0xc [from 0x8048368:push   ecx]; value=V343
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x804836e:pop    ebx
    ax = V342
    cx = V343
    dx = V344
    bx = 0x804836e [from 0x8048369:call   0x0804836e]
    sp = V346-0xc [from 0x804836e:pop    ebx]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = V356
    ?1 = V357
    pf = V358
    ?3 = V359
    af = V360
    ?5 = V361
    zf = V362
    sf = V363
    tf = V364
    if = V365
    df = V366
    of = V367
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V346-0xc [from 0x8048368:push   ecx]; value=V343
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x804836f:add    ebx, 0x0000135a
    ax = V342
    cx = V343
    dx = V344
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V346-0xc [from 0x804836e:pop    ebx]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = V357
    pf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = V359
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = V361
    zf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    tf = V364
    if = V365
    df = V366
    of = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V346-0xc [from 0x8048368:push   ecx]; value=V343
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]
    ax = V342
    cx = V343
    dx = V372 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V346-0xc [from 0x804836e:pop    ebx]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = V357
    pf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = V359
    af = 0x1 (-0x1) [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = V361
    zf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    sf = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    tf = V364
    if = V365
    df = V366
    of = 0x0 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V346-0xc [from 0x8048368:push   ecx]; value=V343
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x804837b:test   edx, edx
    ax = V342
    cx = V343
    dx = V372 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V346-0xc [from 0x804836e:pop    ebx]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V357
    pf = -V373-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V359
    af = <top>
    ?5 = V361
    zf = V374 [from 0x804837b:test   edx, edx]
    sf = V375 [from 0x804837b:test   edx, edx]
    tf = V364
    if = V365
    df = V366
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V346-0xc [from 0x8048368:push   ecx]; value=V343
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x804837d:je     0x08048384
    ax = V342
    cx = V343
    dx = V372 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V346-0xc [from 0x804836e:pop    ebx]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V357
    pf = -V373-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V359
    af = <top>
    ?5 = V361
    zf = V374 [from 0x804837b:test   edx, edx]
    sf = V375 [from 0x804837b:test   edx, edx]
    tf = V364
    if = V365
    df = V366
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=V346-0xc [from 0x8048368:push   ecx]; value=V343
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x804837f:call   0x08048330
    ax = V342
    cx = V343
    dx = V372 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc]]
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V346-0x10 [from 0x804837f:call   0x08048330]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V350
    cs = V351
    ss = V352
    ds = V353
    fs = V354
    gs = V355
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = V357
    pf = -V373-0x1 [from 0x804837b:test   edx, edx]
    ?3 = V359
    af = <top>
    ?5 = V361
    zf = V374 [from 0x804837b:test   edx, edx]
    sf = V375 [from 0x804837b:test   edx, edx]
    tf = V364
    if = V365
    df = V366
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = V368
    iopl1 = V369
    nt = V370
    ?15 = V371
    memory = {
        size=4; addr=V346-0x10 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
        size=4; addr=V346-0xc [from 0x8048368:push   ecx]; value=V343
        size=4; addr=V346-0x8 [from 0x8048367:push   ebx]; value=V345
        size=4; addr=V346-0x4 [from 0x8048364:push   ebp]; value=V347
    }
0x8048384:pop    eax
    ax = V376 [from 0x8048384:pop    eax]
    cx = V377
    dx = V378
    bx = 0x80496c8 [from 0x804836f:add    ebx, 0x0000135a]
    sp = V346-0x8 [from 0x8048384:pop    eax]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V379
    cs = V380
    ss = V381
    ds = V382
    fs = V383
    gs = V384
    cf = V385
    ?1 = V386
    pf = V387
    ?3 = V388
    af = V389 [from 0x804837f:call   0x08048330]
    ?5 = V390
    zf = V391
    sf = V392
    tf = V393
    if = V394
    df = V395
    of = V396
    iopl0 = V397
    iopl1 = V398
    nt = V399
    ?15 = V400
    memory = {}
0x8048385:pop    ebx
    ax = V376 [from 0x8048384:pop    eax]
    cx = V377
    dx = V378
    bx = V401 [from 0x8048385:pop    ebx]
    sp = V346-0x4 [from 0x8048385:pop    ebx]
    bp = V346-0x4 [from 0x8048364:push   ebp]
    si = V348
    di = V349
    es = V379
    cs = V380
    ss = V381
    ds = V382
    fs = V383
    gs = V384
    cf = V385
    ?1 = V386
    pf = V387
    ?3 = V388
    af = V389 [from 0x804837f:call   0x08048330]
    ?5 = V390
    zf = V391
    sf = V392
    tf = V393
    if = V394
    df = V395
    of = V396
    iopl0 = V397
    iopl1 = V398
    nt = V399
    ?15 = V400
    memory = {}
0x8048386:leave  
    ax = V376 [from 0x8048384:pop    eax]
    cx = V377
    dx = V378
    bx = V401 [from 0x8048385:pop    ebx]
    sp = V346 [from 0x8048386:leave  ]
    bp = V402 [from 0x8048386:leave  ]
    si = V348
    di = V349
    es = V379
    cs = V380
    ss = V381
    ds = V382
    fs = V383
    gs = V384
    cf = V385
    ?1 = V386
    pf = V387
    ?3 = V388
    af = V389 [from 0x804837f:call   0x08048330]
    ?5 = V390
    zf = V391
    sf = V392
    tf = V393
    if = V394
    df = V395
    of = V396
    iopl0 = V397
    iopl1 = V398
    nt = V399
    ?15 = V400
    memory = {}
0x8048387:ret    
    ax = V376 [from 0x8048384:pop    eax]
    cx = V377
    dx = V378
    bx = V401 [from 0x8048385:pop    ebx]
    sp = V346+0x4 [from 0x8048387:ret    ]
    bp = V402 [from 0x8048386:leave  ]
    si = V348
    di = V349
    es = V379
    cs = V380
    ss = V381
    ds = V382
    fs = V383
    gs = V384
    cf = V385
    ?1 = V386
    pf = V387
    ?3 = V388
    af = V389 [from 0x804837f:call   0x08048330]
    ?5 = V390
    zf = V391
    sf = V392
    tf = V393
    if = V394
    df = V395
    of = V396
    iopl0 = V397
    iopl1 = V398
    nt = V399
    ?15 = V400
    memory = {}
==============================================
Constant propagation in function "0x8048388"
==============================================
0x8048388:nop    
    ax = V403
    cx = V404
    dx = V405
    bx = V406
    sp = V407
    bp = V408
    si = V409
    di = V410
    es = V411
    cs = V412
    ss = V413
    ds = V414
    fs = V415
    gs = V416
    cf = V417
    ?1 = V418
    pf = V419
    ?3 = V420
    af = V421
    ?5 = V422
    zf = V423
    sf = V424
    tf = V425
    if = V426
    df = V427
    of = V428
    iopl0 = V429
    iopl1 = V430
    nt = V431
    ?15 = V432
    memory = {}
0x8048389:nop    
    ax = V403
    cx = V404
    dx = V405
    bx = V406
    sp = V407
    bp = V408
    si = V409
    di = V410
    es = V411
    cs = V412
    ss = V413
    ds = V414
    fs = V415
    gs = V416
    cf = V417
    ?1 = V418
    pf = V419
    ?3 = V420
    af = V421
    ?5 = V422
    zf = V423
    sf = V424
    tf = V425
    if = V426
    df = V427
    of = V428
    iopl0 = V429
    iopl1 = V430
    nt = V431
    ?15 = V432
    memory = {}
0x804838a:nop    
    ax = V403
    cx = V404
    dx = V405
    bx = V406
    sp = V407
    bp = V408
    si = V409
    di = V410
    es = V411
    cs = V412
    ss = V413
    ds = V414
    fs = V415
    gs = V416
    cf = V417
    ?1 = V418
    pf = V419
    ?3 = V420
    af = V421
    ?5 = V422
    zf = V423
    sf = V424
    tf = V425
    if = V426
    df = V427
    of = V428
    iopl0 = V429
    iopl1 = V430
    nt = V431
    ?15 = V432
    memory = {}
0x804838b:nop    
    ax = V403
    cx = V404
    dx = V405
    bx = V406
    sp = V407
    bp = V408
    si = V409
    di = V410
    es = V411
    cs = V412
    ss = V413
    ds = V414
    fs = V415
    gs = V416
    cf = V417
    ?1 = V418
    pf = V419
    ?3 = V420
    af = V421
    ?5 = V422
    zf = V423
    sf = V424
    tf = V425
    if = V426
    df = V427
    of = V428
    iopl0 = V429
    iopl1 = V430
    nt = V431
    ?15 = V432
    memory = {}
0x804838c:nop    
    ax = V403
    cx = V404
    dx = V405
    bx = V406
    sp = V407
    bp = V408
    si = V409
    di = V410
    es = V411
    cs = V412
    ss = V413
    ds = V414
    fs = V415
    gs = V416
    cf = V417
    ?1 = V418
    pf = V419
    ?3 = V420
    af = V421
    ?5 = V422
    zf = V423
    sf = V424
    tf = V425
    if = V426
    df = V427
    of = V428
    iopl0 = V429
    iopl1 = V430
    nt = V431
    ?15 = V432
    memory = {}
0x804838d:nop    
    ax = V403
    cx = V404
    dx = V405
    bx = V406
    sp = V407
    bp = V408
    si = V409
    di = V410
    es = V411
    cs = V412
    ss = V413
    ds = V414
    fs = V415
    gs = V416
    cf = V417
    ?1 = V418
    pf = V419
    ?3 = V420
    af = V421
    ?5 = V422
    zf = V423
    sf = V424
    tf = V425
    if = V426
    df = V427
    of = V428
    iopl0 = V429
    iopl1 = V430
    nt = V431
    ?15 = V432
    memory = {}
0x804838e:nop    
    ax = V403
    cx = V404
    dx = V405
    bx = V406
    sp = V407
    bp = V408
    si = V409
    di = V410
    es = V411
    cs = V412
    ss = V413
    ds = V414
    fs = V415
    gs = V416
    cf = V417
    ?1 = V418
    pf = V419
    ?3 = V420
    af = V421
    ?5 = V422
    zf = V423
    sf = V424
    tf = V425
    if = V426
    df = V427
    of = V428
    iopl0 = V429
    iopl1 = V430
    nt = V431
    ?15 = V432
    memory = {}
0x804838f:nop    
    ax = V403
    cx = V404
    dx = V405
    bx = V406
    sp = V407
    bp = V408
    si = V409
    di = V410
    es = V411
    cs = V412
    ss = V413
    ds = V414
    fs = V415
    gs = V416
    cf = V417
    ?1 = V418
    pf = V419
    ?3 = V420
    af = V421
    ?5 = V422
    zf = V423
    sf = V424
    tf = V425
    if = V426
    df = V427
    of = V428
    iopl0 = V429
    iopl1 = V430
    nt = V431
    ?15 = V432
    memory = {}
==============================================
Constant propagation in function "__do_global_dtors_aux"
==============================================
0x8048390:push   ebp
    ax = V433
    cx = V434
    dx = V435
    bx = V436
    sp = V437-0x4 [from 0x8048390:push   ebp]
    bp = V438
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = V447
    ?1 = V448
    pf = V449
    ?3 = V450
    af = V451
    ?5 = V452
    zf = V453
    sf = V454
    tf = V455
    if = V456
    df = V457
    of = V458
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x8048391:mov    ebp, esp
    ax = V433
    cx = V434
    dx = V435
    bx = V436
    sp = V437-0x4 [from 0x8048390:push   ebp]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = V447
    ?1 = V448
    pf = V449
    ?3 = V450
    af = V451
    ?5 = V452
    zf = V453
    sf = V454
    tf = V455
    if = V456
    df = V457
    of = V458
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x8048393:sub    esp, 0x08
    ax = V433
    cx = V434
    dx = V435
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = -V463-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = V448
    pf = -V464-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = V450
    af = -V465-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = V452
    zf = V466 [from 0x8048393:sub    esp, 0x08]
    sf = V467 [from 0x8048393:sub    esp, 0x08]
    tf = V455
    if = V456
    df = V457
    of = V468 [from 0x8048393:sub    esp, 0x08]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = V433
    cx = V434
    dx = V435
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = -V469-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V448
    pf = -V470-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V450
    af = -V471-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V452
    zf = V472 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V473 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V455
    if = V456
    df = V457
    of = V474 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x804839d:jne    0x080483cc
    ax = V433
    cx = V434
    dx = V435
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = -V469-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V448
    pf = -V470-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V450
    af = -V471-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V452
    zf = V472 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V473 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V455
    if = V456
    df = V457
    of = V474 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = V475 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V434
    dx = V435
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = -V469-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V448
    pf = -V470-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V450
    af = -V471-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V452
    zf = V472 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V473 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V455
    if = V456
    df = V457
    of = V474 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = V475 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V434
    dx = V476 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = -V469-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = V448
    pf = -V470-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = V450
    af = -V471-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V452
    zf = V472 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = V473 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = V455
    if = V456
    df = V457
    of = V474 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x80483a6:test   edx, edx
    ax = V475 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V434
    dx = V476 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V448
    pf = -V477-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V450
    af = <top>
    ?5 = V452
    zf = V478 [from 0x80483a6:test   edx, edx]
    sf = V479 [from 0x80483a6:test   edx, edx]
    tf = V455
    if = V456
    df = V457
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x80483a8:je     0x080483c5
    ax = V475 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V434
    dx = V476 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V448
    pf = -V477-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V450
    af = <top>
    ?5 = V452
    zf = V478 [from 0x80483a6:test   edx, edx]
    sf = V479 [from 0x80483a6:test   edx, edx]
    tf = V455
    if = V456
    df = V457
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = V475 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = V434
    dx = V476 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V448
    pf = -V477-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = V450
    af = <top>
    ?5 = V452
    zf = V478 [from 0x80483a6:test   edx, edx]
    sf = V479 [from 0x80483a6:test   edx, edx]
    tf = V455
    if = V456
    df = V457
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x80483b0:add    eax, 0x04
    ax = V475+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V434
    dx = V476 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = V480 [from 0x80483b0:add    eax, 0x04]
    ?1 = V448
    pf = -V481-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V450
    af = V482 [from 0x80483b0:add    eax, 0x04]
    ?5 = V452
    zf = V483 [from 0x80483b0:add    eax, 0x04]
    sf = V484 [from 0x80483b0:add    eax, 0x04]
    tf = V455
    if = V456
    df = V457
    of = V485 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x4 [from 0x8048390:push   ebp]; value=V438
    }
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = V475+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V434
    dx = V476 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = V480 [from 0x80483b0:add    eax, 0x04]
    ?1 = V448
    pf = -V481-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V450
    af = V482 [from 0x80483b0:add    eax, 0x04]
    ?5 = V452
    zf = V483 [from 0x80483b0:add    eax, 0x04]
    sf = V484 [from 0x80483b0:add    eax, 0x04]
    tf = V455
    if = V456
    df = V457
    of = V485 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=V475+0x4 [from 0x80483b0:add    eax, 0x04]
    }
0x80483b8:call   edx
    ax = V475+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V434
    dx = V476 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0x10 [from 0x80483b8:call   edx]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V440
    es = V441
    cs = V442
    ss = V443
    ds = V444
    fs = V445
    gs = V446
    cf = V480 [from 0x80483b0:add    eax, 0x04]
    ?1 = V448
    pf = -V481-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = V450
    af = V482 [from 0x80483b0:add    eax, 0x04]
    ?5 = V452
    zf = V483 [from 0x80483b0:add    eax, 0x04]
    sf = V484 [from 0x80483b0:add    eax, 0x04]
    tf = V455
    if = V456
    df = V457
    of = V485 [from 0x80483b0:add    eax, 0x04]
    iopl0 = V459
    iopl1 = V460
    nt = V461
    ?15 = V462
    memory = {
        size=4; addr=V437-0x10 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = V475+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V486 [from 0x80483b8:call   edx]
    dx = V487 [from 0x80483b8:call   edx]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V440
    es = V488 [from 0x80483b8:call   edx]
    cs = V489 [from 0x80483b8:call   edx]
    ss = V490 [from 0x80483b8:call   edx]
    ds = V491 [from 0x80483b8:call   edx]
    fs = V492 [from 0x80483b8:call   edx]
    gs = V493 [from 0x80483b8:call   edx]
    cf = V494 [from 0x80483b8:call   edx]
    ?1 = V495 [from 0x80483b8:call   edx]
    pf = V496 [from 0x80483b8:call   edx]
    ?3 = V497 [from 0x80483b8:call   edx]
    af = V498 [from 0x80483b8:call   edx]
    ?5 = V499 [from 0x80483b8:call   edx]
    zf = V500 [from 0x80483b8:call   edx]
    sf = V501 [from 0x80483b8:call   edx]
    tf = V502 [from 0x80483b8:call   edx]
    if = V503 [from 0x80483b8:call   edx]
    df = V504 [from 0x80483b8:call   edx]
    of = V505 [from 0x80483b8:call   edx]
    iopl0 = V506 [from 0x80483b8:call   edx]
    iopl1 = V507 [from 0x80483b8:call   edx]
    nt = V508 [from 0x80483b8:call   edx]
    ?15 = V509 [from 0x80483b8:call   edx]
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=V475+0x4 [from 0x80483b0:add    eax, 0x04]
    }
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = V475+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V486 [from 0x80483b8:call   edx]
    dx = V510 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V440
    es = V488 [from 0x80483b8:call   edx]
    cs = V489 [from 0x80483b8:call   edx]
    ss = V490 [from 0x80483b8:call   edx]
    ds = V491 [from 0x80483b8:call   edx]
    fs = V492 [from 0x80483b8:call   edx]
    gs = V493 [from 0x80483b8:call   edx]
    cf = V494 [from 0x80483b8:call   edx]
    ?1 = V495 [from 0x80483b8:call   edx]
    pf = V496 [from 0x80483b8:call   edx]
    ?3 = V497 [from 0x80483b8:call   edx]
    af = V498 [from 0x80483b8:call   edx]
    ?5 = V499 [from 0x80483b8:call   edx]
    zf = V500 [from 0x80483b8:call   edx]
    sf = V501 [from 0x80483b8:call   edx]
    tf = V502 [from 0x80483b8:call   edx]
    if = V503 [from 0x80483b8:call   edx]
    df = V504 [from 0x80483b8:call   edx]
    of = V505 [from 0x80483b8:call   edx]
    iopl0 = V506 [from 0x80483b8:call   edx]
    iopl1 = V507 [from 0x80483b8:call   edx]
    nt = V508 [from 0x80483b8:call   edx]
    ?15 = V509 [from 0x80483b8:call   edx]
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=V475+0x4 [from 0x80483b0:add    eax, 0x04]
    }
0x80483c1:test   edx, edx
    ax = V475+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = V486 [from 0x80483b8:call   edx]
    dx = V510 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V440
    es = V488 [from 0x80483b8:call   edx]
    cs = V489 [from 0x80483b8:call   edx]
    ss = V490 [from 0x80483b8:call   edx]
    ds = V491 [from 0x80483b8:call   edx]
    fs = V492 [from 0x80483b8:call   edx]
    gs = V493 [from 0x80483b8:call   edx]
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = V495 [from 0x80483b8:call   edx]
    pf = -V511-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = V497 [from 0x80483b8:call   edx]
    af = <top>
    ?5 = V499 [from 0x80483b8:call   edx]
    zf = V512 [from 0x80483c1:test   edx, edx]
    sf = V513 [from 0x80483c1:test   edx, edx]
    tf = V502 [from 0x80483b8:call   edx]
    if = V503 [from 0x80483b8:call   edx]
    df = V504 [from 0x80483b8:call   edx]
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = V506 [from 0x80483b8:call   edx]
    iopl1 = V507 [from 0x80483b8:call   edx]
    nt = V508 [from 0x80483b8:call   edx]
    ?15 = V509 [from 0x80483b8:call   edx]
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=V475+0x4 [from 0x80483b0:add    eax, 0x04]
    }
0x80483c3:jne    0x080483b0
    ax = V514
    cx = V486 [from 0x80483b8:call   edx]
    dx = V510 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = V440
    es = V488 [from 0x80483b8:call   edx]
    cs = V489 [from 0x80483b8:call   edx]
    ss = V490 [from 0x80483b8:call   edx]
    ds = V491 [from 0x80483b8:call   edx]
    fs = V492 [from 0x80483b8:call   edx]
    gs = V493 [from 0x80483b8:call   edx]
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = V495 [from 0x80483b8:call   edx]
    pf = -V511-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = V497 [from 0x80483b8:call   edx]
    af = <top>
    ?5 = V499 [from 0x80483b8:call   edx]
    zf = V512 [from 0x80483c1:test   edx, edx]
    sf = V513 [from 0x80483c1:test   edx, edx]
    tf = V502 [from 0x80483b8:call   edx]
    if = V503 [from 0x80483b8:call   edx]
    df = V504 [from 0x80483b8:call   edx]
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = V506 [from 0x80483b8:call   edx]
    iopl1 = V507 [from 0x80483b8:call   edx]
    nt = V508 [from 0x80483b8:call   edx]
    ?15 = V509 [from 0x80483b8:call   edx]
    memory = {}
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = V515
    cx = V516
    dx = V517
    bx = V436
    sp = V437-0xc [from 0x8048393:sub    esp, 0x08]
    bp = V437-0x4 [from 0x8048390:push   ebp]
    si = V439
    di = V440
    es = V518
    cs = V519
    ss = V520
    ds = V521
    fs = V522
    gs = V523
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = V524
    pf = V525
    ?3 = V526
    af = <top>
    ?5 = V527
    zf = V528
    sf = V529
    tf = V530
    if = V531
    df = V532
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = V533
    iopl1 = V534
    nt = V535
    ?15 = V536
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
0x80483cc:leave  
    ax = V537
    cx = V538
    dx = V539
    bx = V436
    sp = V437 [from 0x80483cc:leave  ]
    bp = V540 [from 0x80483cc:leave  ]
    si = V439
    di = V440
    es = V541
    cs = V542
    ss = V543
    ds = V544
    fs = V545
    gs = V546
    cf = V547
    ?1 = V548
    pf = V549
    ?3 = V550
    af = -V471-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V551
    zf = V552
    sf = V553
    tf = V554
    if = V555
    df = V556
    of = V557
    iopl0 = V558
    iopl1 = V559
    nt = V560
    ?15 = V561
    memory = {}
0x80483cd:ret    
    ax = V537
    cx = V538
    dx = V539
    bx = V436
    sp = V437+0x4 [from 0x80483cd:ret    ]
    bp = V540 [from 0x80483cc:leave  ]
    si = V439
    di = V440
    es = V541
    cs = V542
    ss = V543
    ds = V544
    fs = V545
    gs = V546
    cf = V547
    ?1 = V548
    pf = V549
    ?3 = V550
    af = -V471-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = V551
    zf = V552
    sf = V553
    tf = V554
    if = V555
    df = V556
    of = V557
    iopl0 = V558
    iopl1 = V559
    nt = V560
    ?15 = V561
    memory = {}
==============================================
Constant propagation in function "frame_dummy"
==============================================
0x80483d0:push   ebp
    ax = V562
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0x4 [from 0x80483d0:push   ebp]
    bp = V567
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = V576
    ?1 = V577
    pf = V578
    ?3 = V579
    af = V580
    ?5 = V581
    zf = V582
    sf = V583
    tf = V584
    if = V585
    df = V586
    of = V587
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x80483d1:mov    ebp, esp
    ax = V562
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0x4 [from 0x80483d0:push   ebp]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = V576
    ?1 = V577
    pf = V578
    ?3 = V579
    af = V580
    ?5 = V581
    zf = V582
    sf = V583
    tf = V584
    if = V585
    df = V586
    of = V587
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x80483d3:sub    esp, 0x08
    ax = V562
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = -V592-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = V577
    pf = -V593-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = V579
    af = -V594-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = V581
    zf = V595 [from 0x80483d3:sub    esp, 0x08]
    sf = V596 [from 0x80483d3:sub    esp, 0x08]
    tf = V584
    if = V585
    df = V586
    of = V597 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = V598 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = -V592-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = V577
    pf = -V593-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = V579
    af = -V594-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = V581
    zf = V595 [from 0x80483d3:sub    esp, 0x08]
    sf = V596 [from 0x80483d3:sub    esp, 0x08]
    tf = V584
    if = V585
    df = V586
    of = V597 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x80483db:test   eax, eax
    ax = V598 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V577
    pf = -V599-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V579
    af = <top>
    ?5 = V581
    zf = V600 [from 0x80483db:test   eax, eax]
    sf = V601 [from 0x80483db:test   eax, eax]
    tf = V584
    if = V585
    df = V586
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x80483dd:je     0x08048400
    ax = V598 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V577
    pf = -V599-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V579
    af = <top>
    ?5 = V581
    zf = V600 [from 0x80483db:test   eax, eax]
    sf = V601 [from 0x80483db:test   eax, eax]
    tf = V584
    if = V585
    df = V586
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V577
    pf = -V599-0x1 [from 0x80483db:test   eax, eax]
    ?3 = V579
    af = <top>
    ?5 = V581
    zf = V600 [from 0x80483db:test   eax, eax]
    sf = V601 [from 0x80483db:test   eax, eax]
    tf = V584
    if = V585
    df = V586
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = V577
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = V579
    af = <top>
    ?5 = V581
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = V584
    if = V585
    df = V586
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = V577
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = V579
    af = <top>
    ?5 = V581
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = V584
    if = V585
    df = V586
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {
        size=4; addr=V566-0x4 [from 0x80483d0:push   ebp]; value=V567
    }
0x8048400:mov    esp, ebp
    ax = V602
    cx = V563
    dx = V564
    bx = V565
    sp = V566-0x4 [from 0x80483d0:push   ebp]
    bp = V566-0x4 [from 0x80483d0:push   ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V577
    pf = V603
    ?3 = V579
    af = <top>
    ?5 = V581
    zf = V604
    sf = V605
    tf = V584
    if = V585
    df = V586
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {}
0x8048402:pop    ebp
    ax = V602
    cx = V563
    dx = V564
    bx = V565
    sp = V566 [from 0x8048402:pop    ebp]
    bp = V606 [from 0x8048402:pop    ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V577
    pf = V603
    ?3 = V579
    af = <top>
    ?5 = V581
    zf = V604
    sf = V605
    tf = V584
    if = V585
    df = V586
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {}
0x8048403:ret    
    ax = V602
    cx = V563
    dx = V564
    bx = V565
    sp = V566+0x4 [from 0x8048403:ret    ]
    bp = V606 [from 0x8048402:pop    ebp]
    si = V568
    di = V569
    es = V570
    cs = V571
    ss = V572
    ds = V573
    fs = V574
    gs = V575
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = V577
    pf = V603
    ?3 = V579
    af = <top>
    ?5 = V581
    zf = V604
    sf = V605
    tf = V584
    if = V585
    df = V586
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = V588
    iopl1 = V589
    nt = V590
    ?15 = V591
    memory = {}
==============================================
Constant propagation in function "0x8048404"
==============================================
0x8048404:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x8048405:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x8048406:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x8048407:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x8048408:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x8048409:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x804840a:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x804840b:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x804840c:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x804840d:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x804840e:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
0x804840f:nop    
    ax = V607
    cx = V608
    dx = V609
    bx = V610
    sp = V611
    bp = V612
    si = V613
    di = V614
    es = V615
    cs = V616
    ss = V617
    ds = V618
    fs = V619
    gs = V620
    cf = V621
    ?1 = V622
    pf = V623
    ?3 = V624
    af = V625
    ?5 = V626
    zf = V627
    sf = V628
    tf = V629
    if = V630
    df = V631
    of = V632
    iopl0 = V633
    iopl1 = V634
    nt = V635
    ?15 = V636
    memory = {}
==============================================
Constant propagation in function "main"
==============================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = V637
    cx = V638
    dx = V639
    bx = V640
    sp = V641
    bp = V642
    si = V643
    di = V644
    es = V645
    cs = V646
    ss = V647
    ds = V648
    fs = V649
    gs = V650
    cf = V651
    ?1 = V652
    pf = V653
    ?3 = V654
    af = V655
    ?5 = V656
    zf = V657
    sf = V658
    tf = V659
    if = V660
    df = V661
    of = V662
    iopl0 = V663
    iopl1 = V664
    nt = V665
    ?15 = V666
    memory = {}
0x8048410:push   ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x8048411:mov    edx, 0x08048480
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x8048416:mov    ebp, esp
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x8048418:sub    esp, 0x08
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x804841b:and    esp, 0xf0
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
    }
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=<top>; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
    }
0x8048429:call   0x080482f0
    ax = <top>
    cx = <top>
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x804841b:and    esp, 0xf0]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x804841b:and    esp, 0xf0]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=<top>
        size=4; addr=<top>; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=<top>; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=<top>; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
0x804842e:mov    esp, ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = <top>
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = <top>
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048430:xor    eax, eax
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048432:pop    ebp
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048433:ret    
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
==============================================
Constant propagation in function "bar"
==============================================
0x8048440:push   ebp
    ax = V667
    cx = V668
    dx = V669
    bx = V670
    sp = V671-0x4 [from 0x8048440:push   ebp]
    bp = V672
    si = V673
    di = V674
    es = V675
    cs = V676
    ss = V677
    ds = V678
    fs = V679
    gs = V680
    cf = V681
    ?1 = V682
    pf = V683
    ?3 = V684
    af = V685
    ?5 = V686
    zf = V687
    sf = V688
    tf = V689
    if = V690
    df = V691
    of = V692
    iopl0 = V693
    iopl1 = V694
    nt = V695
    ?15 = V696
    memory = {
        size=4; addr=V671-0x4 [from 0x8048440:push   ebp]; value=V672
    }
0x8048441:mov    ebp, esp
    ax = V667
    cx = V668
    dx = V669
    bx = V670
    sp = V671-0x4 [from 0x8048440:push   ebp]
    bp = V671-0x4 [from 0x8048440:push   ebp]
    si = V673
    di = V674
    es = V675
    cs = V676
    ss = V677
    ds = V678
    fs = V679
    gs = V680
    cf = V681
    ?1 = V682
    pf = V683
    ?3 = V684
    af = V685
    ?5 = V686
    zf = V687
    sf = V688
    tf = V689
    if = V690
    df = V691
    of = V692
    iopl0 = V693
    iopl1 = V694
    nt = V695
    ?15 = V696
    memory = {
        size=4; addr=V671-0x4 [from 0x8048440:push   ebp]; value=V672
    }
0x8048443:sub    esp, 0x08
    ax = V667
    cx = V668
    dx = V669
    bx = V670
    sp = V671-0xc [from 0x8048443:sub    esp, 0x08]
    bp = V671-0x4 [from 0x8048440:push   ebp]
    si = V673
    di = V674
    es = V675
    cs = V676
    ss = V677
    ds = V678
    fs = V679
    gs = V680
    cf = -V697-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V682
    pf = -V698-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V684
    af = -V699-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V686
    zf = V700 [from 0x8048443:sub    esp, 0x08]
    sf = V701 [from 0x8048443:sub    esp, 0x08]
    tf = V689
    if = V690
    df = V691
    of = V702 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V693
    iopl1 = V694
    nt = V695
    ?15 = V696
    memory = {
        size=4; addr=V671-0x4 [from 0x8048440:push   ebp]; value=V672
    }
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V667
    cx = V668
    dx = V669
    bx = V670
    sp = V671-0xc [from 0x8048443:sub    esp, 0x08]
    bp = V671-0x4 [from 0x8048440:push   ebp]
    si = V673
    di = V674
    es = V675
    cs = V676
    ss = V677
    ds = V678
    fs = V679
    gs = V680
    cf = -V697-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V682
    pf = -V698-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V684
    af = -V699-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V686
    zf = V700 [from 0x8048443:sub    esp, 0x08]
    sf = V701 [from 0x8048443:sub    esp, 0x08]
    tf = V689
    if = V690
    df = V691
    of = V702 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V693
    iopl1 = V694
    nt = V695
    ?15 = V696
    memory = {
        size=4; addr=V671-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V671-0x4 [from 0x8048440:push   ebp]; value=V672
    }
0x804844d:call   0x08048300
    ax = V667
    cx = V668
    dx = V669
    bx = V670
    sp = V671-0x10 [from 0x804844d:call   0x08048300]
    bp = V671-0x4 [from 0x8048440:push   ebp]
    si = V673
    di = V674
    es = V675
    cs = V676
    ss = V677
    ds = V678
    fs = V679
    gs = V680
    cf = -V697-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = V682
    pf = -V698-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = V684
    af = -V699-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = V686
    zf = V700 [from 0x8048443:sub    esp, 0x08]
    sf = V701 [from 0x8048443:sub    esp, 0x08]
    tf = V689
    if = V690
    df = V691
    of = V702 [from 0x8048443:sub    esp, 0x08]
    iopl0 = V693
    iopl1 = V694
    nt = V695
    ?15 = V696
    memory = {
        size=4; addr=V671-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=V671-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V671-0x4 [from 0x8048440:push   ebp]; value=V672
    }
0x8048452:mov    esp, ebp
    ax = V703 [from 0x804844d:call   0x08048300]
    cx = V704 [from 0x804844d:call   0x08048300]
    dx = V705 [from 0x804844d:call   0x08048300]
    bx = V670
    sp = V671-0x4 [from 0x8048440:push   ebp]
    bp = V671-0x4 [from 0x8048440:push   ebp]
    si = V673
    di = V674
    es = V706 [from 0x804844d:call   0x08048300]
    cs = V707 [from 0x804844d:call   0x08048300]
    ss = V708 [from 0x804844d:call   0x08048300]
    ds = V709 [from 0x804844d:call   0x08048300]
    fs = V710 [from 0x804844d:call   0x08048300]
    gs = V711 [from 0x804844d:call   0x08048300]
    cf = V712 [from 0x804844d:call   0x08048300]
    ?1 = V713 [from 0x804844d:call   0x08048300]
    pf = V714 [from 0x804844d:call   0x08048300]
    ?3 = V715 [from 0x804844d:call   0x08048300]
    af = V716 [from 0x804844d:call   0x08048300]
    ?5 = V717 [from 0x804844d:call   0x08048300]
    zf = V718 [from 0x804844d:call   0x08048300]
    sf = V719 [from 0x804844d:call   0x08048300]
    tf = V720 [from 0x804844d:call   0x08048300]
    if = V721 [from 0x804844d:call   0x08048300]
    df = V722 [from 0x804844d:call   0x08048300]
    of = V723 [from 0x804844d:call   0x08048300]
    iopl0 = V724 [from 0x804844d:call   0x08048300]
    iopl1 = V725 [from 0x804844d:call   0x08048300]
    nt = V726 [from 0x804844d:call   0x08048300]
    ?15 = V727 [from 0x804844d:call   0x08048300]
    memory = {
        size=4; addr=V671-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V671-0x4 [from 0x8048440:push   ebp]; value=V672
    }
0x8048454:pop    ebp
    ax = V703 [from 0x804844d:call   0x08048300]
    cx = V704 [from 0x804844d:call   0x08048300]
    dx = V705 [from 0x804844d:call   0x08048300]
    bx = V670
    sp = V671 [from 0x8048454:pop    ebp]
    bp = V672
    si = V673
    di = V674
    es = V706 [from 0x804844d:call   0x08048300]
    cs = V707 [from 0x804844d:call   0x08048300]
    ss = V708 [from 0x804844d:call   0x08048300]
    ds = V709 [from 0x804844d:call   0x08048300]
    fs = V710 [from 0x804844d:call   0x08048300]
    gs = V711 [from 0x804844d:call   0x08048300]
    cf = V712 [from 0x804844d:call   0x08048300]
    ?1 = V713 [from 0x804844d:call   0x08048300]
    pf = V714 [from 0x804844d:call   0x08048300]
    ?3 = V715 [from 0x804844d:call   0x08048300]
    af = V716 [from 0x804844d:call   0x08048300]
    ?5 = V717 [from 0x804844d:call   0x08048300]
    zf = V718 [from 0x804844d:call   0x08048300]
    sf = V719 [from 0x804844d:call   0x08048300]
    tf = V720 [from 0x804844d:call   0x08048300]
    if = V721 [from 0x804844d:call   0x08048300]
    df = V722 [from 0x804844d:call   0x08048300]
    of = V723 [from 0x804844d:call   0x08048300]
    iopl0 = V724 [from 0x804844d:call   0x08048300]
    iopl1 = V725 [from 0x804844d:call   0x08048300]
    nt = V726 [from 0x804844d:call   0x08048300]
    ?15 = V727 [from 0x804844d:call   0x08048300]
    memory = {
        size=4; addr=V671-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V671-0x4 [from 0x8048440:push   ebp]; value=V672
    }
0x8048455:ret    
    ax = V703 [from 0x804844d:call   0x08048300]
    cx = V704 [from 0x804844d:call   0x08048300]
    dx = V705 [from 0x804844d:call   0x08048300]
    bx = V670
    sp = V671+0x4 [from 0x8048455:ret    ]
    bp = V672
    si = V673
    di = V674
    es = V706 [from 0x804844d:call   0x08048300]
    cs = V707 [from 0x804844d:call   0x08048300]
    ss = V708 [from 0x804844d:call   0x08048300]
    ds = V709 [from 0x804844d:call   0x08048300]
    fs = V710 [from 0x804844d:call   0x08048300]
    gs = V711 [from 0x804844d:call   0x08048300]
    cf = V712 [from 0x804844d:call   0x08048300]
    ?1 = V713 [from 0x804844d:call   0x08048300]
    pf = V714 [from 0x804844d:call   0x08048300]
    ?3 = V715 [from 0x804844d:call   0x08048300]
    af = V716 [from 0x804844d:call   0x08048300]
    ?5 = V717 [from 0x804844d:call   0x08048300]
    zf = V718 [from 0x804844d:call   0x08048300]
    sf = V719 [from 0x804844d:call   0x08048300]
    tf = V720 [from 0x804844d:call   0x08048300]
    if = V721 [from 0x804844d:call   0x08048300]
    df = V722 [from 0x804844d:call   0x08048300]
    of = V723 [from 0x804844d:call   0x08048300]
    iopl0 = V724 [from 0x804844d:call   0x08048300]
    iopl1 = V725 [from 0x804844d:call   0x08048300]
    nt = V726 [from 0x804844d:call   0x08048300]
    ?15 = V727 [from 0x804844d:call   0x08048300]
    memory = {
        size=4; addr=V671-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V671-0x4 [from 0x8048440:push   ebp]; value=V672
    }
==============================================
Constant propagation in function "foo"
==============================================
0x8048460:push   ebp
    ax = V728
    cx = V729
    dx = V730
    bx = V731
    sp = V732-0x4 [from 0x8048460:push   ebp]
    bp = V733
    si = V734
    di = V735
    es = V736
    cs = V737
    ss = V738
    ds = V739
    fs = V740
    gs = V741
    cf = V742
    ?1 = V743
    pf = V744
    ?3 = V745
    af = V746
    ?5 = V747
    zf = V748
    sf = V749
    tf = V750
    if = V751
    df = V752
    of = V753
    iopl0 = V754
    iopl1 = V755
    nt = V756
    ?15 = V757
    memory = {
        size=4; addr=V732-0x4 [from 0x8048460:push   ebp]; value=V733
    }
0x8048461:mov    ebp, esp
    ax = V728
    cx = V729
    dx = V730
    bx = V731
    sp = V732-0x4 [from 0x8048460:push   ebp]
    bp = V732-0x4 [from 0x8048460:push   ebp]
    si = V734
    di = V735
    es = V736
    cs = V737
    ss = V738
    ds = V739
    fs = V740
    gs = V741
    cf = V742
    ?1 = V743
    pf = V744
    ?3 = V745
    af = V746
    ?5 = V747
    zf = V748
    sf = V749
    tf = V750
    if = V751
    df = V752
    of = V753
    iopl0 = V754
    iopl1 = V755
    nt = V756
    ?15 = V757
    memory = {
        size=4; addr=V732-0x4 [from 0x8048460:push   ebp]; value=V733
    }
0x8048463:sub    esp, 0x08
    ax = V728
    cx = V729
    dx = V730
    bx = V731
    sp = V732-0xc [from 0x8048463:sub    esp, 0x08]
    bp = V732-0x4 [from 0x8048460:push   ebp]
    si = V734
    di = V735
    es = V736
    cs = V737
    ss = V738
    ds = V739
    fs = V740
    gs = V741
    cf = -V758-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V743
    pf = -V759-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V745
    af = -V760-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V747
    zf = V761 [from 0x8048463:sub    esp, 0x08]
    sf = V762 [from 0x8048463:sub    esp, 0x08]
    tf = V750
    if = V751
    df = V752
    of = V763 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V754
    iopl1 = V755
    nt = V756
    ?15 = V757
    memory = {
        size=4; addr=V732-0x4 [from 0x8048460:push   ebp]; value=V733
    }
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V728
    cx = V729
    dx = V730
    bx = V731
    sp = V732-0xc [from 0x8048463:sub    esp, 0x08]
    bp = V732-0x4 [from 0x8048460:push   ebp]
    si = V734
    di = V735
    es = V736
    cs = V737
    ss = V738
    ds = V739
    fs = V740
    gs = V741
    cf = -V758-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V743
    pf = -V759-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V745
    af = -V760-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V747
    zf = V761 [from 0x8048463:sub    esp, 0x08]
    sf = V762 [from 0x8048463:sub    esp, 0x08]
    tf = V750
    if = V751
    df = V752
    of = V763 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V754
    iopl1 = V755
    nt = V756
    ?15 = V757
    memory = {
        size=4; addr=V732-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V732-0x4 [from 0x8048460:push   ebp]; value=V733
    }
0x804846d:call   0x08048300
    ax = V728
    cx = V729
    dx = V730
    bx = V731
    sp = V732-0x10 [from 0x804846d:call   0x08048300]
    bp = V732-0x4 [from 0x8048460:push   ebp]
    si = V734
    di = V735
    es = V736
    cs = V737
    ss = V738
    ds = V739
    fs = V740
    gs = V741
    cf = -V758-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = V743
    pf = -V759-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = V745
    af = -V760-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = V747
    zf = V761 [from 0x8048463:sub    esp, 0x08]
    sf = V762 [from 0x8048463:sub    esp, 0x08]
    tf = V750
    if = V751
    df = V752
    of = V763 [from 0x8048463:sub    esp, 0x08]
    iopl0 = V754
    iopl1 = V755
    nt = V756
    ?15 = V757
    memory = {
        size=4; addr=V732-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=V732-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=V732-0x4 [from 0x8048460:push   ebp]; value=V733
    }
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = V764 [from 0x804846d:call   0x08048300]
    cx = V765 [from 0x804846d:call   0x08048300]
    dx = V766 [from 0x804846d:call   0x08048300]
    bx = V731
    sp = V732-0xc [from 0x8048463:sub    esp, 0x08]
    bp = V732-0x4 [from 0x8048460:push   ebp]
    si = V734
    di = V735
    es = V767 [from 0x804846d:call   0x08048300]
    cs = V768 [from 0x804846d:call   0x08048300]
    ss = V769 [from 0x804846d:call   0x08048300]
    ds = V770 [from 0x804846d:call   0x08048300]
    fs = V771 [from 0x804846d:call   0x08048300]
    gs = V772 [from 0x804846d:call   0x08048300]
    cf = V773 [from 0x804846d:call   0x08048300]
    ?1 = V774 [from 0x804846d:call   0x08048300]
    pf = V775 [from 0x804846d:call   0x08048300]
    ?3 = V776 [from 0x804846d:call   0x08048300]
    af = V777 [from 0x804846d:call   0x08048300]
    ?5 = V778 [from 0x804846d:call   0x08048300]
    zf = V779 [from 0x804846d:call   0x08048300]
    sf = V780 [from 0x804846d:call   0x08048300]
    tf = V781 [from 0x804846d:call   0x08048300]
    if = V782 [from 0x804846d:call   0x08048300]
    df = V783 [from 0x804846d:call   0x08048300]
    of = V784 [from 0x804846d:call   0x08048300]
    iopl0 = V785 [from 0x804846d:call   0x08048300]
    iopl1 = V786 [from 0x804846d:call   0x08048300]
    nt = V787 [from 0x804846d:call   0x08048300]
    ?15 = V788 [from 0x804846d:call   0x08048300]
    memory = {
        size=4; addr=V732-0xc [from 0x8048463:sub    esp, 0x08]; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=V732-0x4 [from 0x8048460:push   ebp]; value=V733
    }
0x8048479:call   0x08048320
    ax = V764 [from 0x804846d:call   0x08048300]
    cx = V765 [from 0x804846d:call   0x08048300]
    dx = V766 [from 0x804846d:call   0x08048300]
    bx = V731
    sp = V732-0x10 [from 0x8048479:call   0x08048320]
    bp = V732-0x4 [from 0x8048460:push   ebp]
    si = V734
    di = V735
    es = V767 [from 0x804846d:call   0x08048300]
    cs = V768 [from 0x804846d:call   0x08048300]
    ss = V769 [from 0x804846d:call   0x08048300]
    ds = V770 [from 0x804846d:call   0x08048300]
    fs = V771 [from 0x804846d:call   0x08048300]
    gs = V772 [from 0x804846d:call   0x08048300]
    cf = V773 [from 0x804846d:call   0x08048300]
    ?1 = V774 [from 0x804846d:call   0x08048300]
    pf = V775 [from 0x804846d:call   0x08048300]
    ?3 = V776 [from 0x804846d:call   0x08048300]
    af = V777 [from 0x804846d:call   0x08048300]
    ?5 = V778 [from 0x804846d:call   0x08048300]
    zf = V779 [from 0x804846d:call   0x08048300]
    sf = V780 [from 0x804846d:call   0x08048300]
    tf = V781 [from 0x804846d:call   0x08048300]
    if = V782 [from 0x804846d:call   0x08048300]
    df = V783 [from 0x804846d:call   0x08048300]
    of = V784 [from 0x804846d:call   0x08048300]
    iopl0 = V785 [from 0x804846d:call   0x08048300]
    iopl1 = V786 [from 0x804846d:call   0x08048300]
    nt = V787 [from 0x804846d:call   0x08048300]
    ?15 = V788 [from 0x804846d:call   0x08048300]
    memory = {
        size=4; addr=V732-0x10 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
        size=4; addr=V732-0xc [from 0x8048463:sub    esp, 0x08]; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=V732-0x4 [from 0x8048460:push   ebp]; value=V733
    }
0x804847e:mov    esi, esi
    ax = V789 [from 0x8048479:call   0x08048320]
    cx = V790 [from 0x8048479:call   0x08048320]
    dx = V791 [from 0x8048479:call   0x08048320]
    bx = V731
    sp = V732-0xc [from 0x8048463:sub    esp, 0x08]
    bp = V732-0x4 [from 0x8048460:push   ebp]
    si = V734
    di = V735
    es = V792 [from 0x8048479:call   0x08048320]
    cs = V793 [from 0x8048479:call   0x08048320]
    ss = V794 [from 0x8048479:call   0x08048320]
    ds = V795 [from 0x8048479:call   0x08048320]
    fs = V796 [from 0x8048479:call   0x08048320]
    gs = V797 [from 0x8048479:call   0x08048320]
    cf = V798 [from 0x8048479:call   0x08048320]
    ?1 = V799 [from 0x8048479:call   0x08048320]
    pf = V800 [from 0x8048479:call   0x08048320]
    ?3 = V801 [from 0x8048479:call   0x08048320]
    af = V802 [from 0x8048479:call   0x08048320]
    ?5 = V803 [from 0x8048479:call   0x08048320]
    zf = V804 [from 0x8048479:call   0x08048320]
    sf = V805 [from 0x8048479:call   0x08048320]
    tf = V806 [from 0x8048479:call   0x08048320]
    if = V807 [from 0x8048479:call   0x08048320]
    df = V808 [from 0x8048479:call   0x08048320]
    of = V809 [from 0x8048479:call   0x08048320]
    iopl0 = V810 [from 0x8048479:call   0x08048320]
    iopl1 = V811 [from 0x8048479:call   0x08048320]
    nt = V812 [from 0x8048479:call   0x08048320]
    ?15 = V813 [from 0x8048479:call   0x08048320]
    memory = {
        size=4; addr=V732-0xc [from 0x8048463:sub    esp, 0x08]; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=V732-0x4 [from 0x8048460:push   ebp]; value=V733
    }
==============================================
Constant propagation in function "handler"
==============================================
0x8048480:push   ebp
    ax = V814
    cx = V815
    dx = V816
    bx = V817
    sp = V818-0x4 [from 0x8048480:push   ebp]
    bp = V819
    si = V820
    di = V821
    es = V822
    cs = V823
    ss = V824
    ds = V825
    fs = V826
    gs = V827
    cf = V828
    ?1 = V829
    pf = V830
    ?3 = V831
    af = V832
    ?5 = V833
    zf = V834
    sf = V835
    tf = V836
    if = V837
    df = V838
    of = V839
    iopl0 = V840
    iopl1 = V841
    nt = V842
    ?15 = V843
    memory = {
        size=4; addr=V818-0x4 [from 0x8048480:push   ebp]; value=V819
    }
0x8048481:mov    ebp, esp
    ax = V814
    cx = V815
    dx = V816
    bx = V817
    sp = V818-0x4 [from 0x8048480:push   ebp]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V822
    cs = V823
    ss = V824
    ds = V825
    fs = V826
    gs = V827
    cf = V828
    ?1 = V829
    pf = V830
    ?3 = V831
    af = V832
    ?5 = V833
    zf = V834
    sf = V835
    tf = V836
    if = V837
    df = V838
    of = V839
    iopl0 = V840
    iopl1 = V841
    nt = V842
    ?15 = V843
    memory = {
        size=4; addr=V818-0x4 [from 0x8048480:push   ebp]; value=V819
    }
0x8048483:sub    esp, 0x08
    ax = V814
    cx = V815
    dx = V816
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V822
    cs = V823
    ss = V824
    ds = V825
    fs = V826
    gs = V827
    cf = -V844-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V829
    pf = -V845-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = V831
    af = -V846-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = V833
    zf = V847 [from 0x8048483:sub    esp, 0x08]
    sf = V848 [from 0x8048483:sub    esp, 0x08]
    tf = V836
    if = V837
    df = V838
    of = V849 [from 0x8048483:sub    esp, 0x08]
    iopl0 = V840
    iopl1 = V841
    nt = V842
    ?15 = V843
    memory = {
        size=4; addr=V818-0x4 [from 0x8048480:push   ebp]; value=V819
    }
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = V814
    cx = V815
    dx = V816
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V822
    cs = V823
    ss = V824
    ds = V825
    fs = V826
    gs = V827
    cf = -V844-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V829
    pf = -V850-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V831
    af = V851 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V833
    zf = V852 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V853 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V836
    if = V837
    df = V838
    of = V854 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V840
    iopl1 = V841
    nt = V842
    ?15 = V843
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=V855+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = V814
    cx = V815
    dx = V816
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V822
    cs = V823
    ss = V824
    ds = V825
    fs = V826
    gs = V827
    cf = -V844-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V829
    pf = -V850-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V831
    af = V851 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V833
    zf = V852 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V853 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V836
    if = V837
    df = V838
    of = V854 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V840
    iopl1 = V841
    nt = V842
    ?15 = V843
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
0x8048493:call   0x08048300
    ax = V814
    cx = V815
    dx = V816
    bx = V817
    sp = V818-0x10 [from 0x8048493:call   0x08048300]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V822
    cs = V823
    ss = V824
    ds = V825
    fs = V826
    gs = V827
    cf = -V844-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = V829
    pf = -V850-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = V831
    af = V851 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = V833
    zf = V852 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = V853 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = V836
    if = V837
    df = V838
    of = V854 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = V840
    iopl1 = V841
    nt = V842
    ?15 = V843
    memory = {
        size=4; addr=V818-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = V856 [from 0x8048493:call   0x08048300]
    cx = V857 [from 0x8048493:call   0x08048300]
    dx = V858 [from 0x8048493:call   0x08048300]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V859 [from 0x8048493:call   0x08048300]
    cs = V860 [from 0x8048493:call   0x08048300]
    ss = V861 [from 0x8048493:call   0x08048300]
    ds = V862 [from 0x8048493:call   0x08048300]
    fs = V863 [from 0x8048493:call   0x08048300]
    gs = V864 [from 0x8048493:call   0x08048300]
    cf = V865 [from 0x8048493:call   0x08048300]
    ?1 = V866 [from 0x8048493:call   0x08048300]
    pf = V867 [from 0x8048493:call   0x08048300]
    ?3 = V868 [from 0x8048493:call   0x08048300]
    af = V869 [from 0x8048493:call   0x08048300]
    ?5 = V870 [from 0x8048493:call   0x08048300]
    zf = V871 [from 0x8048493:call   0x08048300]
    sf = V872 [from 0x8048493:call   0x08048300]
    tf = V873 [from 0x8048493:call   0x08048300]
    if = V874 [from 0x8048493:call   0x08048300]
    df = V875 [from 0x8048493:call   0x08048300]
    of = V876 [from 0x8048493:call   0x08048300]
    iopl0 = V877 [from 0x8048493:call   0x08048300]
    iopl1 = V878 [from 0x8048493:call   0x08048300]
    nt = V879 [from 0x8048493:call   0x08048300]
    ?15 = V880 [from 0x8048493:call   0x08048300]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x804849f:call   0x08048320
    ax = V856 [from 0x8048493:call   0x08048300]
    cx = V857 [from 0x8048493:call   0x08048300]
    dx = V858 [from 0x8048493:call   0x08048300]
    bx = V817
    sp = V818-0x10 [from 0x804849f:call   0x08048320]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V859 [from 0x8048493:call   0x08048300]
    cs = V860 [from 0x8048493:call   0x08048300]
    ss = V861 [from 0x8048493:call   0x08048300]
    ds = V862 [from 0x8048493:call   0x08048300]
    fs = V863 [from 0x8048493:call   0x08048300]
    gs = V864 [from 0x8048493:call   0x08048300]
    cf = V865 [from 0x8048493:call   0x08048300]
    ?1 = V866 [from 0x8048493:call   0x08048300]
    pf = V867 [from 0x8048493:call   0x08048300]
    ?3 = V868 [from 0x8048493:call   0x08048300]
    af = V869 [from 0x8048493:call   0x08048300]
    ?5 = V870 [from 0x8048493:call   0x08048300]
    zf = V871 [from 0x8048493:call   0x08048300]
    sf = V872 [from 0x8048493:call   0x08048300]
    tf = V873 [from 0x8048493:call   0x08048300]
    if = V874 [from 0x8048493:call   0x08048300]
    df = V875 [from 0x8048493:call   0x08048300]
    of = V876 [from 0x8048493:call   0x08048300]
    iopl0 = V877 [from 0x8048493:call   0x08048300]
    iopl1 = V878 [from 0x8048493:call   0x08048300]
    nt = V879 [from 0x8048493:call   0x08048300]
    ?15 = V880 [from 0x8048493:call   0x08048300]
    memory = {
        size=4; addr=V818-0x10 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484a4:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484a5:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484a6:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484a7:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484a8:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484a9:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484aa:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484ab:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484ac:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484ad:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484ae:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
0x80484af:nop    
    ax = V881 [from 0x804849f:call   0x08048320]
    cx = V882 [from 0x804849f:call   0x08048320]
    dx = V883 [from 0x804849f:call   0x08048320]
    bx = V817
    sp = V818-0xc [from 0x8048483:sub    esp, 0x08]
    bp = V818-0x4 [from 0x8048480:push   ebp]
    si = V820
    di = V821
    es = V884 [from 0x804849f:call   0x08048320]
    cs = V885 [from 0x804849f:call   0x08048320]
    ss = V886 [from 0x804849f:call   0x08048320]
    ds = V887 [from 0x804849f:call   0x08048320]
    fs = V888 [from 0x804849f:call   0x08048320]
    gs = V889 [from 0x804849f:call   0x08048320]
    cf = V890 [from 0x804849f:call   0x08048320]
    ?1 = V891 [from 0x804849f:call   0x08048320]
    pf = V892 [from 0x804849f:call   0x08048320]
    ?3 = V893 [from 0x804849f:call   0x08048320]
    af = V894 [from 0x804849f:call   0x08048320]
    ?5 = V895 [from 0x804849f:call   0x08048320]
    zf = V896 [from 0x804849f:call   0x08048320]
    sf = V897 [from 0x804849f:call   0x08048320]
    tf = V898 [from 0x804849f:call   0x08048320]
    if = V899 [from 0x804849f:call   0x08048320]
    df = V900 [from 0x804849f:call   0x08048320]
    of = V901 [from 0x804849f:call   0x08048320]
    iopl0 = V902 [from 0x804849f:call   0x08048320]
    iopl1 = V903 [from 0x804849f:call   0x08048320]
    nt = V904 [from 0x804849f:call   0x08048320]
    ?15 = V905 [from 0x804849f:call   0x08048320]
    memory = {
        size=4; addr=V818-0xc [from 0x8048483:sub    esp, 0x08]; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
==============================================
Constant propagation in function "__libc_csu_init"
==============================================
0x80484b0:push   ebp
    ax = V906
    cx = V907
    dx = V908
    bx = V909
    sp = V910-0x4 [from 0x80484b0:push   ebp]
    bp = V911
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = V920
    ?1 = V921
    pf = V922
    ?3 = V923
    af = V924
    ?5 = V925
    zf = V926
    sf = V927
    tf = V928
    if = V929
    df = V930
    of = V931
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484b1:mov    ebp, esp
    ax = V906
    cx = V907
    dx = V908
    bx = V909
    sp = V910-0x4 [from 0x80484b0:push   ebp]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = V920
    ?1 = V921
    pf = V922
    ?3 = V923
    af = V924
    ?5 = V925
    zf = V926
    sf = V927
    tf = V928
    if = V929
    df = V930
    of = V931
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484b3:push   edi
    ax = V906
    cx = V907
    dx = V908
    bx = V909
    sp = V910-0x8 [from 0x80484b3:push   edi]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = V920
    ?1 = V921
    pf = V922
    ?3 = V923
    af = V924
    ?5 = V925
    zf = V926
    sf = V927
    tf = V928
    if = V929
    df = V930
    of = V931
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484b4:push   esi
    ax = V906
    cx = V907
    dx = V908
    bx = V909
    sp = V910-0xc [from 0x80484b4:push   esi]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = V920
    ?1 = V921
    pf = V922
    ?3 = V923
    af = V924
    ?5 = V925
    zf = V926
    sf = V927
    tf = V928
    if = V929
    df = V930
    of = V931
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484b5:push   ebx
    ax = V906
    cx = V907
    dx = V908
    bx = V909
    sp = V910-0x10 [from 0x80484b5:push   ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = V920
    ?1 = V921
    pf = V922
    ?3 = V923
    af = V924
    ?5 = V925
    zf = V926
    sf = V927
    tf = V928
    if = V929
    df = V930
    of = V931
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484b6:sub    esp, 0x0c
    ax = V906
    cx = V907
    dx = V908
    bx = V909
    sp = V910-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = -V936-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V921
    pf = -V937-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V923
    af = -V938-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V925
    zf = V939 [from 0x80484b6:sub    esp, 0x0c]
    sf = V940 [from 0x80484b6:sub    esp, 0x0c]
    tf = V928
    if = V929
    df = V930
    of = V941 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484b9:call   0x080484be
    ax = V906
    cx = V907
    dx = V908
    bx = V909
    sp = V910-0x20 [from 0x80484b9:call   0x080484be]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = -V936-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V921
    pf = -V937-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V923
    af = -V938-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V925
    zf = V939 [from 0x80484b6:sub    esp, 0x0c]
    sf = V940 [from 0x80484b6:sub    esp, 0x0c]
    tf = V928
    if = V929
    df = V930
    of = V941 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484be:pop    ebx
    ax = V906
    cx = V907
    dx = V908
    bx = 0x80484be [from 0x80484b9:call   0x080484be]
    sp = V910-0x1c [from 0x80484be:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = -V936-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = V921
    pf = -V937-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = V923
    af = -V938-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = V925
    zf = V939 [from 0x80484b6:sub    esp, 0x0c]
    sf = V940 [from 0x80484b6:sub    esp, 0x0c]
    tf = V928
    if = V929
    df = V930
    of = V941 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484bf:add    ebx, 0x0000120a
    ax = V906
    cx = V907
    dx = V908
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x1c [from 0x80484be:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = V921
    pf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = V923
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = V925
    zf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = V928
    if = V929
    df = V930
    of = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484c5:call   0x080482c8
    ax = V906
    cx = V907
    dx = V908
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x20 [from 0x80484c5:call   0x080482c8]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V914
    cs = V915
    ss = V916
    ds = V917
    fs = V918
    gs = V919
    cf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = V921
    pf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = V923
    af = 0x1 (-0x1) [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = V925
    zf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = V928
    if = V929
    df = V930
    of = 0x0 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = V932
    iopl1 = V933
    nt = V934
    ?15 = V935
    memory = {
        size=4; addr=V910-0x20 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484ca:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x80484ca:lea    eax, [ebx + 0xffffff20]]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = V943 [from 0x80484c5:call   0x080482c8]
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x1c [from 0x80484be:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = V950 [from 0x80484c5:call   0x080482c8]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = V952 [from 0x80484c5:call   0x080482c8]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = V954 [from 0x80484c5:call   0x080482c8]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = V956 [from 0x80484c5:call   0x080482c8]
    sf = V957 [from 0x80484c5:call   0x080482c8]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = V961 [from 0x80484c5:call   0x080482c8]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484d0:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x80484ca:lea    eax, [ebx + 0xffffff20]]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x1c [from 0x80484be:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = V950 [from 0x80484c5:call   0x080482c8]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = V952 [from 0x80484c5:call   0x080482c8]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = V954 [from 0x80484c5:call   0x080482c8]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = V956 [from 0x80484c5:call   0x080482c8]
    sf = V957 [from 0x80484c5:call   0x080482c8]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = V961 [from 0x80484c5:call   0x080482c8]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484d6:sub    eax, edx
    ax = 0x0 [from 0x80484d6:sub    eax, edx]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x1c [from 0x80484be:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = 0x0 [from 0x80484d6:sub    eax, edx]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = 0x1 (-0x1) [from 0x80484d6:sub    eax, edx]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = 0x0 [from 0x80484d6:sub    eax, edx]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = 0x1 (-0x1) [from 0x80484d6:sub    eax, edx]
    sf = 0x0 [from 0x80484d6:sub    eax, edx]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = 0x0 [from 0x80484d6:sub    eax, edx]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484d8:sar    eax, 0x02
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x1c [from 0x80484be:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = 0x0 [from 0x80484d8:sar    eax, 0x02]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = 0x1 (-0x1) [from 0x80484d8:sar    eax, 0x02]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = <top>
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = 0x1 (-0x1) [from 0x80484d8:sar    eax, 0x02]
    sf = 0x0 [from 0x80484d8:sar    eax, 0x02]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x1c [from 0x80484be:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = 0x0 [from 0x80484d8:sar    eax, 0x02]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = 0x1 (-0x1) [from 0x80484d8:sar    eax, 0x02]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = <top>
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = 0x1 (-0x1) [from 0x80484d8:sar    eax, 0x02]
    sf = 0x0 [from 0x80484d8:sar    eax, 0x02]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x14 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x80484d8:sar    eax, 0x02]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484de:jne    0x080484f0
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x1c [from 0x80484be:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = 0x0 [from 0x80484d8:sar    eax, 0x02]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = 0x1 (-0x1) [from 0x80484d8:sar    eax, 0x02]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = <top>
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = 0x1 (-0x1) [from 0x80484d8:sar    eax, 0x02]
    sf = 0x0 [from 0x80484d8:sar    eax, 0x02]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x14 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x80484d8:sar    eax, 0x02]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484e0:add    esp, 0x0c
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x80484bf:add    ebx, 0x0000120a]
    sp = V910-0x10 [from 0x80484e0:add    esp, 0x0c]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = V966 [from 0x80484e0:add    esp, 0x0c]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = -V967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = V968 [from 0x80484e0:add    esp, 0x0c]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = V969 [from 0x80484e0:add    esp, 0x0c]
    sf = V970 [from 0x80484e0:add    esp, 0x0c]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = V971 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x14 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x80484d8:sar    eax, 0x02]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484e3:pop    ebx
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = V909
    sp = V910-0xc [from 0x80484e3:pop    ebx]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = V966 [from 0x80484e0:add    esp, 0x0c]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = -V967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = V968 [from 0x80484e0:add    esp, 0x0c]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = V969 [from 0x80484e0:add    esp, 0x0c]
    sf = V970 [from 0x80484e0:add    esp, 0x0c]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = V971 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x14 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x80484d8:sar    eax, 0x02]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484e4:pop    esi
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = V909
    sp = V910-0x8 [from 0x80484e4:pop    esi]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = V966 [from 0x80484e0:add    esp, 0x0c]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = -V967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = V968 [from 0x80484e0:add    esp, 0x0c]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = V969 [from 0x80484e0:add    esp, 0x0c]
    sf = V970 [from 0x80484e0:add    esp, 0x0c]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = V971 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x14 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x80484d8:sar    eax, 0x02]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484e5:pop    edi
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = V909
    sp = V910-0x4 [from 0x80484e5:pop    edi]
    bp = V910-0x4 [from 0x80484b0:push   ebp]
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = V966 [from 0x80484e0:add    esp, 0x0c]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = -V967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = V968 [from 0x80484e0:add    esp, 0x0c]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = V969 [from 0x80484e0:add    esp, 0x0c]
    sf = V970 [from 0x80484e0:add    esp, 0x0c]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = V971 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x14 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x80484d8:sar    eax, 0x02]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484e6:pop    ebp
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = V909
    sp = V910 [from 0x80484e6:pop    ebp]
    bp = V911
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = V966 [from 0x80484e0:add    esp, 0x0c]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = -V967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = V968 [from 0x80484e0:add    esp, 0x0c]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = V969 [from 0x80484e0:add    esp, 0x0c]
    sf = V970 [from 0x80484e0:add    esp, 0x0c]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = V971 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x14 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x80484d8:sar    eax, 0x02]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484e7:ret    
    ax = 0x0 [from 0x80484d8:sar    eax, 0x02]
    cx = V942 [from 0x80484c5:call   0x080482c8]
    dx = 0x80495e8 [from 0x80484d0:lea    edx, [ebx + 0xffffff20]]
    bx = V909
    sp = V910+0x4 [from 0x80484e7:ret    ]
    bp = V911
    si = V912
    di = V913
    es = V944 [from 0x80484c5:call   0x080482c8]
    cs = V945 [from 0x80484c5:call   0x080482c8]
    ss = V946 [from 0x80484c5:call   0x080482c8]
    ds = V947 [from 0x80484c5:call   0x080482c8]
    fs = V948 [from 0x80484c5:call   0x080482c8]
    gs = V949 [from 0x80484c5:call   0x080482c8]
    cf = V966 [from 0x80484e0:add    esp, 0x0c]
    ?1 = V951 [from 0x80484c5:call   0x080482c8]
    pf = -V967-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = V953 [from 0x80484c5:call   0x080482c8]
    af = V968 [from 0x80484e0:add    esp, 0x0c]
    ?5 = V955 [from 0x80484c5:call   0x080482c8]
    zf = V969 [from 0x80484e0:add    esp, 0x0c]
    sf = V970 [from 0x80484e0:add    esp, 0x0c]
    tf = V958 [from 0x80484c5:call   0x080482c8]
    if = V959 [from 0x80484c5:call   0x080482c8]
    df = V960 [from 0x80484c5:call   0x080482c8]
    of = V971 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = V962 [from 0x80484c5:call   0x080482c8]
    iopl1 = V963 [from 0x80484c5:call   0x080482c8]
    nt = V964 [from 0x80484c5:call   0x080482c8]
    ?15 = V965 [from 0x80484c5:call   0x080482c8]
    memory = {
        size=4; addr=V910-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=V910-0x14 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x80484d8:sar    eax, 0x02]
        size=4; addr=V910-0x10 [from 0x80484b5:push   ebx]; value=V909
        size=4; addr=V910-0xc [from 0x80484b4:push   esi]; value=V912
        size=4; addr=V910-0x8 [from 0x80484b3:push   edi]; value=V913
        size=4; addr=V910-0x4 [from 0x80484b0:push   ebp]; value=V911
    }
0x80484f0:xor    edi, edi
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f2:mov    esi, edx
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484f4:lea    esi, [esi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x80484fa:lea    edi, [edi + 0x00000000]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory =     <top>
0x8048500:call   DWORD PTR ds:[esi]
    ax = <top>
    cx = <top>
    dx = <top>
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = <top>
    cs = <top>
    ss = <top>
    ds = <top>
    fs = <top>
    gs = <top>
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = <top>
    pf = <top>
    ?3 = <top>
    af = <top>
    ?5 = <top>
    zf = <top>
    sf = <top>
    tf = <top>
    if = <top>
    df = <top>
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = <top>
    iopl1 = <top>
    nt = <top>
    ?15 = <top>
    memory = {
        size=4; addr=<top>; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
0x8048502:inc    edi
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = V981 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048503:add    esi, 0x04
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0]
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048509:jb     0x08048500
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x804850b:add    esp, 0x0c
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x804850e:pop    ebx
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x804850f:pop    esi
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048510:pop    edi
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048511:pop    ebp
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
0x8048512:ret    
    ax = V972 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cx = V973 [from 0x8048500:call   DWORD PTR ds:[esi]]
    dx = V974 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bx = <top>
    sp = <top>
    bp = <top>
    si = <top>
    di = <top>
    es = V975 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cs = V976 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ss = V977 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ds = V978 [from 0x8048500:call   DWORD PTR ds:[esi]]
    fs = V979 [from 0x8048500:call   DWORD PTR ds:[esi]]
    gs = V980 [from 0x8048500:call   DWORD PTR ds:[esi]]
    cf = <top>
    ?1 = V982 [from 0x8048500:call   DWORD PTR ds:[esi]]
    pf = <top>
    ?3 = V983 [from 0x8048500:call   DWORD PTR ds:[esi]]
    af = <top>
    ?5 = V984 [from 0x8048500:call   DWORD PTR ds:[esi]]
    zf = <top>
    sf = <top>
    tf = V985 [from 0x8048500:call   DWORD PTR ds:[esi]]
    if = V986 [from 0x8048500:call   DWORD PTR ds:[esi]]
    df = V987 [from 0x8048500:call   DWORD PTR ds:[esi]]
    of = <top>
    iopl0 = V988 [from 0x8048500:call   DWORD PTR ds:[esi]]
    iopl1 = V989 [from 0x8048500:call   DWORD PTR ds:[esi]]
    nt = V990 [from 0x8048500:call   DWORD PTR ds:[esi]]
    ?15 = V991 [from 0x8048500:call   DWORD PTR ds:[esi]]
    memory =     <top>
==============================================
Constant propagation in function "__libc_csu_fini"
==============================================
0x8048520:push   ebp
    ax = V992
    cx = V993
    dx = V994
    bx = V995
    sp = V996-0x4 [from 0x8048520:push   ebp]
    bp = V997
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = V1006
    ?1 = V1007
    pf = V1008
    ?3 = V1009
    af = V1010
    ?5 = V1011
    zf = V1012
    sf = V1013
    tf = V1014
    if = V1015
    df = V1016
    of = V1017
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048521:mov    ebp, esp
    ax = V992
    cx = V993
    dx = V994
    bx = V995
    sp = V996-0x4 [from 0x8048520:push   ebp]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = V1006
    ?1 = V1007
    pf = V1008
    ?3 = V1009
    af = V1010
    ?5 = V1011
    zf = V1012
    sf = V1013
    tf = V1014
    if = V1015
    df = V1016
    of = V1017
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048523:push   edi
    ax = V992
    cx = V993
    dx = V994
    bx = V995
    sp = V996-0x8 [from 0x8048523:push   edi]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = V1006
    ?1 = V1007
    pf = V1008
    ?3 = V1009
    af = V1010
    ?5 = V1011
    zf = V1012
    sf = V1013
    tf = V1014
    if = V1015
    df = V1016
    of = V1017
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048524:push   esi
    ax = V992
    cx = V993
    dx = V994
    bx = V995
    sp = V996-0xc [from 0x8048524:push   esi]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = V1006
    ?1 = V1007
    pf = V1008
    ?3 = V1009
    af = V1010
    ?5 = V1011
    zf = V1012
    sf = V1013
    tf = V1014
    if = V1015
    df = V1016
    of = V1017
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048525:push   ebx
    ax = V992
    cx = V993
    dx = V994
    bx = V995
    sp = V996-0x10 [from 0x8048525:push   ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = V1006
    ?1 = V1007
    pf = V1008
    ?3 = V1009
    af = V1010
    ?5 = V1011
    zf = V1012
    sf = V1013
    tf = V1014
    if = V1015
    df = V1016
    of = V1017
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048526:sub    esp, 0x0c
    ax = V992
    cx = V993
    dx = V994
    bx = V995
    sp = V996-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = -V1022-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V1007
    pf = -V1023-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V1009
    af = -V1024-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V1011
    zf = V1025 [from 0x8048526:sub    esp, 0x0c]
    sf = V1026 [from 0x8048526:sub    esp, 0x0c]
    tf = V1014
    if = V1015
    df = V1016
    of = V1027 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048529:call   0x0804852e
    ax = V992
    cx = V993
    dx = V994
    bx = V995
    sp = V996-0x20 [from 0x8048529:call   0x0804852e]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = -V1022-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V1007
    pf = -V1023-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V1009
    af = -V1024-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V1011
    zf = V1025 [from 0x8048526:sub    esp, 0x0c]
    sf = V1026 [from 0x8048526:sub    esp, 0x0c]
    tf = V1014
    if = V1015
    df = V1016
    of = V1027 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x804852e:pop    ebx
    ax = V992
    cx = V993
    dx = V994
    bx = 0x804852e [from 0x8048529:call   0x0804852e]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = -V1022-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = V1007
    pf = -V1023-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = V1009
    af = -V1024-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = V1011
    zf = V1025 [from 0x8048526:sub    esp, 0x0c]
    sf = V1026 [from 0x8048526:sub    esp, 0x0c]
    tf = V1014
    if = V1015
    df = V1016
    of = V1027 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x804852f:add    ebx, 0x0000119a
    ax = V992
    cx = V993
    dx = V994
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V1007
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V1009
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V1011
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048535:lea    eax, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = V993
    dx = V994
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V1007
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V1009
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V1011
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x804853b:lea    edx, [ebx + 0xffffff20]
    ax = 0x80495e8 [from 0x8048535:lea    eax, [ebx + 0xffffff20]]
    cx = V993
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = V1007
    pf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = V1009
    af = 0x1 (-0x1) [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = V1011
    zf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    sf = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048541:sub    eax, edx
    ax = 0x0 [from 0x8048541:sub    eax, edx]
    cx = V993
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x8048541:sub    eax, edx]
    ?1 = V1007
    pf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    ?3 = V1009
    af = 0x0 [from 0x8048541:sub    eax, edx]
    ?5 = V1011
    zf = 0x1 (-0x1) [from 0x8048541:sub    eax, edx]
    sf = 0x0 [from 0x8048541:sub    eax, edx]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x8048541:sub    eax, edx]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048543:sar    eax, 0x02
    ax = 0x0 [from 0x8048543:sar    eax, 0x02]
    cx = V993
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V1007
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    ?3 = V1009
    af = <top>
    ?5 = V1011
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    sf = 0x0 [from 0x8048543:sar    eax, 0x02]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax
    ax = 0x0 [from 0x8048543:sar    eax, 0x02]
    cx = V993
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V1007
    pf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    ?3 = V1009
    af = <top>
    ?5 = V1011
    zf = 0x1 (-0x1) [from 0x8048543:sar    eax, 0x02]
    sf = 0x0 [from 0x8048543:sar    eax, 0x02]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048549:dec    eax
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V993
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x8048543:sar    eax, 0x02]
    ?1 = V1007
    pf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?3 = V1009
    af = 0x1 (-0x1) [from 0x8048549:dec    eax]
    ?5 = V1011
    zf = 0x0 [from 0x8048549:dec    eax]
    sf = 0x1 (-0x1) [from 0x8048549:dec    eax]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x8048549:dec    eax]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x804854a:cmp    eax, 0xff
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V993
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V1007
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V1009
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V1011
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x804854d:je     0x0804856b
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V993
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x1c [from 0x804852e:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V1007
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V1009
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V1011
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x804856b:call   0x080485b0
    ax = 0xffffffff (-0x1) [from 0x8048549:dec    eax]
    cx = V993
    dx = 0x80495e8 [from 0x804853b:lea    edx, [ebx + 0xffffff20]]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x20 [from 0x804856b:call   0x080485b0]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1000
    cs = V1001
    ss = V1002
    ds = V1003
    fs = V1004
    gs = V1005
    cf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?1 = V1007
    pf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    ?3 = V1009
    af = 0x0 [from 0x804854a:cmp    eax, 0xff]
    ?5 = V1011
    zf = 0x1 (-0x1) [from 0x804854a:cmp    eax, 0xff]
    sf = 0x0 [from 0x804854a:cmp    eax, 0xff]
    tf = V1014
    if = V1015
    df = V1016
    of = 0x0 [from 0x804854a:cmp    eax, 0xff]
    iopl0 = V1018
    iopl1 = V1019
    nt = V1020
    ?15 = V1021
    memory = {
        size=4; addr=V996-0x20 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048570:add    esp, 0x0c
    ax = V1028 [from 0x804856b:call   0x080485b0]
    cx = V1029 [from 0x804856b:call   0x080485b0]
    dx = V1030 [from 0x804856b:call   0x080485b0]
    bx = 0x80496c8 [from 0x804852f:add    ebx, 0x0000119a]
    sp = V996-0x10 [from 0x8048570:add    esp, 0x0c]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1031 [from 0x804856b:call   0x080485b0]
    cs = V1032 [from 0x804856b:call   0x080485b0]
    ss = V1033 [from 0x804856b:call   0x080485b0]
    ds = V1034 [from 0x804856b:call   0x080485b0]
    fs = V1035 [from 0x804856b:call   0x080485b0]
    gs = V1036 [from 0x804856b:call   0x080485b0]
    cf = V1037 [from 0x8048570:add    esp, 0x0c]
    ?1 = V1038 [from 0x804856b:call   0x080485b0]
    pf = -V1039-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = V1040 [from 0x804856b:call   0x080485b0]
    af = V1041 [from 0x8048570:add    esp, 0x0c]
    ?5 = V1042 [from 0x804856b:call   0x080485b0]
    zf = V1043 [from 0x8048570:add    esp, 0x0c]
    sf = V1044 [from 0x8048570:add    esp, 0x0c]
    tf = V1045 [from 0x804856b:call   0x080485b0]
    if = V1046 [from 0x804856b:call   0x080485b0]
    df = V1047 [from 0x804856b:call   0x080485b0]
    of = V1048 [from 0x8048570:add    esp, 0x0c]
    iopl0 = V1049 [from 0x804856b:call   0x080485b0]
    iopl1 = V1050 [from 0x804856b:call   0x080485b0]
    nt = V1051 [from 0x804856b:call   0x080485b0]
    ?15 = V1052 [from 0x804856b:call   0x080485b0]
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048573:pop    ebx
    ax = V1028 [from 0x804856b:call   0x080485b0]
    cx = V1029 [from 0x804856b:call   0x080485b0]
    dx = V1030 [from 0x804856b:call   0x080485b0]
    bx = V995
    sp = V996-0xc [from 0x8048573:pop    ebx]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1031 [from 0x804856b:call   0x080485b0]
    cs = V1032 [from 0x804856b:call   0x080485b0]
    ss = V1033 [from 0x804856b:call   0x080485b0]
    ds = V1034 [from 0x804856b:call   0x080485b0]
    fs = V1035 [from 0x804856b:call   0x080485b0]
    gs = V1036 [from 0x804856b:call   0x080485b0]
    cf = V1037 [from 0x8048570:add    esp, 0x0c]
    ?1 = V1038 [from 0x804856b:call   0x080485b0]
    pf = -V1039-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = V1040 [from 0x804856b:call   0x080485b0]
    af = V1041 [from 0x8048570:add    esp, 0x0c]
    ?5 = V1042 [from 0x804856b:call   0x080485b0]
    zf = V1043 [from 0x8048570:add    esp, 0x0c]
    sf = V1044 [from 0x8048570:add    esp, 0x0c]
    tf = V1045 [from 0x804856b:call   0x080485b0]
    if = V1046 [from 0x804856b:call   0x080485b0]
    df = V1047 [from 0x804856b:call   0x080485b0]
    of = V1048 [from 0x8048570:add    esp, 0x0c]
    iopl0 = V1049 [from 0x804856b:call   0x080485b0]
    iopl1 = V1050 [from 0x804856b:call   0x080485b0]
    nt = V1051 [from 0x804856b:call   0x080485b0]
    ?15 = V1052 [from 0x804856b:call   0x080485b0]
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048574:pop    esi
    ax = V1028 [from 0x804856b:call   0x080485b0]
    cx = V1029 [from 0x804856b:call   0x080485b0]
    dx = V1030 [from 0x804856b:call   0x080485b0]
    bx = V995
    sp = V996-0x8 [from 0x8048574:pop    esi]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1031 [from 0x804856b:call   0x080485b0]
    cs = V1032 [from 0x804856b:call   0x080485b0]
    ss = V1033 [from 0x804856b:call   0x080485b0]
    ds = V1034 [from 0x804856b:call   0x080485b0]
    fs = V1035 [from 0x804856b:call   0x080485b0]
    gs = V1036 [from 0x804856b:call   0x080485b0]
    cf = V1037 [from 0x8048570:add    esp, 0x0c]
    ?1 = V1038 [from 0x804856b:call   0x080485b0]
    pf = -V1039-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = V1040 [from 0x804856b:call   0x080485b0]
    af = V1041 [from 0x8048570:add    esp, 0x0c]
    ?5 = V1042 [from 0x804856b:call   0x080485b0]
    zf = V1043 [from 0x8048570:add    esp, 0x0c]
    sf = V1044 [from 0x8048570:add    esp, 0x0c]
    tf = V1045 [from 0x804856b:call   0x080485b0]
    if = V1046 [from 0x804856b:call   0x080485b0]
    df = V1047 [from 0x804856b:call   0x080485b0]
    of = V1048 [from 0x8048570:add    esp, 0x0c]
    iopl0 = V1049 [from 0x804856b:call   0x080485b0]
    iopl1 = V1050 [from 0x804856b:call   0x080485b0]
    nt = V1051 [from 0x804856b:call   0x080485b0]
    ?15 = V1052 [from 0x804856b:call   0x080485b0]
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048575:pop    edi
    ax = V1028 [from 0x804856b:call   0x080485b0]
    cx = V1029 [from 0x804856b:call   0x080485b0]
    dx = V1030 [from 0x804856b:call   0x080485b0]
    bx = V995
    sp = V996-0x4 [from 0x8048575:pop    edi]
    bp = V996-0x4 [from 0x8048520:push   ebp]
    si = V998
    di = V999
    es = V1031 [from 0x804856b:call   0x080485b0]
    cs = V1032 [from 0x804856b:call   0x080485b0]
    ss = V1033 [from 0x804856b:call   0x080485b0]
    ds = V1034 [from 0x804856b:call   0x080485b0]
    fs = V1035 [from 0x804856b:call   0x080485b0]
    gs = V1036 [from 0x804856b:call   0x080485b0]
    cf = V1037 [from 0x8048570:add    esp, 0x0c]
    ?1 = V1038 [from 0x804856b:call   0x080485b0]
    pf = -V1039-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = V1040 [from 0x804856b:call   0x080485b0]
    af = V1041 [from 0x8048570:add    esp, 0x0c]
    ?5 = V1042 [from 0x804856b:call   0x080485b0]
    zf = V1043 [from 0x8048570:add    esp, 0x0c]
    sf = V1044 [from 0x8048570:add    esp, 0x0c]
    tf = V1045 [from 0x804856b:call   0x080485b0]
    if = V1046 [from 0x804856b:call   0x080485b0]
    df = V1047 [from 0x804856b:call   0x080485b0]
    of = V1048 [from 0x8048570:add    esp, 0x0c]
    iopl0 = V1049 [from 0x804856b:call   0x080485b0]
    iopl1 = V1050 [from 0x804856b:call   0x080485b0]
    nt = V1051 [from 0x804856b:call   0x080485b0]
    ?15 = V1052 [from 0x804856b:call   0x080485b0]
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048576:pop    ebp
    ax = V1028 [from 0x804856b:call   0x080485b0]
    cx = V1029 [from 0x804856b:call   0x080485b0]
    dx = V1030 [from 0x804856b:call   0x080485b0]
    bx = V995
    sp = V996 [from 0x8048576:pop    ebp]
    bp = V997
    si = V998
    di = V999
    es = V1031 [from 0x804856b:call   0x080485b0]
    cs = V1032 [from 0x804856b:call   0x080485b0]
    ss = V1033 [from 0x804856b:call   0x080485b0]
    ds = V1034 [from 0x804856b:call   0x080485b0]
    fs = V1035 [from 0x804856b:call   0x080485b0]
    gs = V1036 [from 0x804856b:call   0x080485b0]
    cf = V1037 [from 0x8048570:add    esp, 0x0c]
    ?1 = V1038 [from 0x804856b:call   0x080485b0]
    pf = -V1039-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = V1040 [from 0x804856b:call   0x080485b0]
    af = V1041 [from 0x8048570:add    esp, 0x0c]
    ?5 = V1042 [from 0x804856b:call   0x080485b0]
    zf = V1043 [from 0x8048570:add    esp, 0x0c]
    sf = V1044 [from 0x8048570:add    esp, 0x0c]
    tf = V1045 [from 0x804856b:call   0x080485b0]
    if = V1046 [from 0x804856b:call   0x080485b0]
    df = V1047 [from 0x804856b:call   0x080485b0]
    of = V1048 [from 0x8048570:add    esp, 0x0c]
    iopl0 = V1049 [from 0x804856b:call   0x080485b0]
    iopl1 = V1050 [from 0x804856b:call   0x080485b0]
    nt = V1051 [from 0x804856b:call   0x080485b0]
    ?15 = V1052 [from 0x804856b:call   0x080485b0]
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
0x8048577:ret    
    ax = V1028 [from 0x804856b:call   0x080485b0]
    cx = V1029 [from 0x804856b:call   0x080485b0]
    dx = V1030 [from 0x804856b:call   0x080485b0]
    bx = V995
    sp = V996+0x4 [from 0x8048577:ret    ]
    bp = V997
    si = V998
    di = V999
    es = V1031 [from 0x804856b:call   0x080485b0]
    cs = V1032 [from 0x804856b:call   0x080485b0]
    ss = V1033 [from 0x804856b:call   0x080485b0]
    ds = V1034 [from 0x804856b:call   0x080485b0]
    fs = V1035 [from 0x804856b:call   0x080485b0]
    gs = V1036 [from 0x804856b:call   0x080485b0]
    cf = V1037 [from 0x8048570:add    esp, 0x0c]
    ?1 = V1038 [from 0x804856b:call   0x080485b0]
    pf = -V1039-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = V1040 [from 0x804856b:call   0x080485b0]
    af = V1041 [from 0x8048570:add    esp, 0x0c]
    ?5 = V1042 [from 0x804856b:call   0x080485b0]
    zf = V1043 [from 0x8048570:add    esp, 0x0c]
    sf = V1044 [from 0x8048570:add    esp, 0x0c]
    tf = V1045 [from 0x804856b:call   0x080485b0]
    if = V1046 [from 0x804856b:call   0x080485b0]
    df = V1047 [from 0x804856b:call   0x080485b0]
    of = V1048 [from 0x8048570:add    esp, 0x0c]
    iopl0 = V1049 [from 0x804856b:call   0x080485b0]
    iopl1 = V1050 [from 0x804856b:call   0x080485b0]
    nt = V1051 [from 0x804856b:call   0x080485b0]
    ?15 = V1052 [from 0x804856b:call   0x080485b0]
    memory = {
        size=4; addr=V996-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=V996-0x14 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0], eax]; value=0x0 [from 0x8048543:sar    eax, 0x02]
        size=4; addr=V996-0x10 [from 0x8048525:push   ebx]; value=V995
        size=4; addr=V996-0xc [from 0x8048524:push   esi]; value=V998
        size=4; addr=V996-0x8 [from 0x8048523:push   edi]; value=V999
        size=4; addr=V996-0x4 [from 0x8048520:push   ebp]; value=V997
    }
==============================================
Constant propagation in function "0x8048578"
==============================================
0x8048578:nop    
    ax = V1053
    cx = V1054
    dx = V1055
    bx = V1056
    sp = V1057
    bp = V1058
    si = V1059
    di = V1060
    es = V1061
    cs = V1062
    ss = V1063
    ds = V1064
    fs = V1065
    gs = V1066
    cf = V1067
    ?1 = V1068
    pf = V1069
    ?3 = V1070
    af = V1071
    ?5 = V1072
    zf = V1073
    sf = V1074
    tf = V1075
    if = V1076
    df = V1077
    of = V1078
    iopl0 = V1079
    iopl1 = V1080
    nt = V1081
    ?15 = V1082
    memory = {}
0x8048579:nop    
    ax = V1053
    cx = V1054
    dx = V1055
    bx = V1056
    sp = V1057
    bp = V1058
    si = V1059
    di = V1060
    es = V1061
    cs = V1062
    ss = V1063
    ds = V1064
    fs = V1065
    gs = V1066
    cf = V1067
    ?1 = V1068
    pf = V1069
    ?3 = V1070
    af = V1071
    ?5 = V1072
    zf = V1073
    sf = V1074
    tf = V1075
    if = V1076
    df = V1077
    of = V1078
    iopl0 = V1079
    iopl1 = V1080
    nt = V1081
    ?15 = V1082
    memory = {}
0x804857a:nop    
    ax = V1053
    cx = V1054
    dx = V1055
    bx = V1056
    sp = V1057
    bp = V1058
    si = V1059
    di = V1060
    es = V1061
    cs = V1062
    ss = V1063
    ds = V1064
    fs = V1065
    gs = V1066
    cf = V1067
    ?1 = V1068
    pf = V1069
    ?3 = V1070
    af = V1071
    ?5 = V1072
    zf = V1073
    sf = V1074
    tf = V1075
    if = V1076
    df = V1077
    of = V1078
    iopl0 = V1079
    iopl1 = V1080
    nt = V1081
    ?15 = V1082
    memory = {}
0x804857b:nop    
    ax = V1053
    cx = V1054
    dx = V1055
    bx = V1056
    sp = V1057
    bp = V1058
    si = V1059
    di = V1060
    es = V1061
    cs = V1062
    ss = V1063
    ds = V1064
    fs = V1065
    gs = V1066
    cf = V1067
    ?1 = V1068
    pf = V1069
    ?3 = V1070
    af = V1071
    ?5 = V1072
    zf = V1073
    sf = V1074
    tf = V1075
    if = V1076
    df = V1077
    of = V1078
    iopl0 = V1079
    iopl1 = V1080
    nt = V1081
    ?15 = V1082
    memory = {}
0x804857c:nop    
    ax = V1053
    cx = V1054
    dx = V1055
    bx = V1056
    sp = V1057
    bp = V1058
    si = V1059
    di = V1060
    es = V1061
    cs = V1062
    ss = V1063
    ds = V1064
    fs = V1065
    gs = V1066
    cf = V1067
    ?1 = V1068
    pf = V1069
    ?3 = V1070
    af = V1071
    ?5 = V1072
    zf = V1073
    sf = V1074
    tf = V1075
    if = V1076
    df = V1077
    of = V1078
    iopl0 = V1079
    iopl1 = V1080
    nt = V1081
    ?15 = V1082
    memory = {}
0x804857d:nop    
    ax = V1053
    cx = V1054
    dx = V1055
    bx = V1056
    sp = V1057
    bp = V1058
    si = V1059
    di = V1060
    es = V1061
    cs = V1062
    ss = V1063
    ds = V1064
    fs = V1065
    gs = V1066
    cf = V1067
    ?1 = V1068
    pf = V1069
    ?3 = V1070
    af = V1071
    ?5 = V1072
    zf = V1073
    sf = V1074
    tf = V1075
    if = V1076
    df = V1077
    of = V1078
    iopl0 = V1079
    iopl1 = V1080
    nt = V1081
    ?15 = V1082
    memory = {}
0x804857e:nop    
    ax = V1053
    cx = V1054
    dx = V1055
    bx = V1056
    sp = V1057
    bp = V1058
    si = V1059
    di = V1060
    es = V1061
    cs = V1062
    ss = V1063
    ds = V1064
    fs = V1065
    gs = V1066
    cf = V1067
    ?1 = V1068
    pf = V1069
    ?3 = V1070
    af = V1071
    ?5 = V1072
    zf = V1073
    sf = V1074
    tf = V1075
    if = V1076
    df = V1077
    of = V1078
    iopl0 = V1079
    iopl1 = V1080
    nt = V1081
    ?15 = V1082
    memory = {}
0x804857f:nop    
    ax = V1053
    cx = V1054
    dx = V1055
    bx = V1056
    sp = V1057
    bp = V1058
    si = V1059
    di = V1060
    es = V1061
    cs = V1062
    ss = V1063
    ds = V1064
    fs = V1065
    gs = V1066
    cf = V1067
    ?1 = V1068
    pf = V1069
    ?3 = V1070
    af = V1071
    ?5 = V1072
    zf = V1073
    sf = V1074
    tf = V1075
    if = V1076
    df = V1077
    of = V1078
    iopl0 = V1079
    iopl1 = V1080
    nt = V1081
    ?15 = V1082
    memory = {}
==============================================
Constant propagation in function "__do_global_ctors_aux"
==============================================
0x8048580:push   ebp
    ax = V1083
    cx = V1084
    dx = V1085
    bx = V1086
    sp = V1087-0x4 [from 0x8048580:push   ebp]
    bp = V1088
    si = V1089
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = V1097
    ?1 = V1098
    pf = V1099
    ?3 = V1100
    af = V1101
    ?5 = V1102
    zf = V1103
    sf = V1104
    tf = V1105
    if = V1106
    df = V1107
    of = V1108
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x8048581:mov    ebp, esp
    ax = V1083
    cx = V1084
    dx = V1085
    bx = V1086
    sp = V1087-0x4 [from 0x8048580:push   ebp]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = V1097
    ?1 = V1098
    pf = V1099
    ?3 = V1100
    af = V1101
    ?5 = V1102
    zf = V1103
    sf = V1104
    tf = V1105
    if = V1106
    df = V1107
    of = V1108
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x8048583:push   ebx
    ax = V1083
    cx = V1084
    dx = V1085
    bx = V1086
    sp = V1087-0x8 [from 0x8048583:push   ebx]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = V1097
    ?1 = V1098
    pf = V1099
    ?3 = V1100
    af = V1101
    ?5 = V1102
    zf = V1103
    sf = V1104
    tf = V1105
    if = V1106
    df = V1107
    of = V1108
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x8048584:sub    esp, 0x04
    ax = V1083
    cx = V1084
    dx = V1085
    bx = V1086
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = -V1113-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V1098
    pf = -V1114-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V1100
    af = -V1115-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V1102
    zf = V1116 [from 0x8048584:sub    esp, 0x04]
    sf = V1117 [from 0x8048584:sub    esp, 0x04]
    tf = V1105
    if = V1106
    df = V1107
    of = V1118 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x8048587:mov    ebx, 0x080495e8
    ax = V1083
    cx = V1084
    dx = V1085
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = -V1113-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V1098
    pf = -V1114-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V1100
    af = -V1115-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V1102
    zf = V1116 [from 0x8048584:sub    esp, 0x04]
    sf = V1117 [from 0x8048584:sub    esp, 0x04]
    tf = V1105
    if = V1106
    df = V1107
    of = V1118 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = V1119 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V1084
    dx = V1085
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = -V1113-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = V1098
    pf = -V1114-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = V1100
    af = -V1115-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = V1102
    zf = V1116 [from 0x8048584:sub    esp, 0x04]
    sf = V1117 [from 0x8048584:sub    esp, 0x04]
    tf = V1105
    if = V1106
    df = V1107
    of = V1118 [from 0x8048584:sub    esp, 0x04]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x8048591:cmp    eax, 0xff
    ax = V1119 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V1084
    dx = V1085
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = -V1120-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V1098
    pf = -V1121-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V1100
    af = -V1122-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V1102
    zf = V1123 [from 0x8048591:cmp    eax, 0xff]
    sf = V1124 [from 0x8048591:cmp    eax, 0xff]
    tf = V1105
    if = V1106
    df = V1107
    of = V1125 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x8048594:je     0x080485ac
    ax = V1119 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V1084
    dx = V1085
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = -V1120-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V1098
    pf = -V1121-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V1100
    af = -V1122-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V1102
    zf = V1123 [from 0x8048591:cmp    eax, 0xff]
    sf = V1124 [from 0x8048591:cmp    eax, 0xff]
    tf = V1105
    if = V1106
    df = V1107
    of = V1125 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x8048596:lea    esi, [esi + 0x00]
    ax = V1119 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V1084
    dx = V1085
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V1090
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = -V1120-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V1098
    pf = -V1121-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V1100
    af = -V1122-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V1102
    zf = V1123 [from 0x8048591:cmp    eax, 0xff]
    sf = V1124 [from 0x8048591:cmp    eax, 0xff]
    tf = V1105
    if = V1106
    df = V1107
    of = V1125 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x8048599:lea    edi, [edi + 0x00000000]
    ax = V1119 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V1084
    dx = V1085
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V1090 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = -V1120-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?1 = V1098
    pf = -V1121-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?3 = V1100
    af = -V1122-0x1 [from 0x8048591:cmp    eax, 0xff]
    ?5 = V1102
    zf = V1123 [from 0x8048591:cmp    eax, 0xff]
    sf = V1124 [from 0x8048591:cmp    eax, 0xff]
    tf = V1105
    if = V1106
    df = V1107
    of = V1125 [from 0x8048591:cmp    eax, 0xff]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x80485a0:sub    ebx, 0x04
    ax = V1119 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V1084
    dx = V1085
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V1090 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = V1098
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x04]
    ?3 = V1100
    af = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = V1102
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    tf = V1105
    if = V1106
    df = V1107
    of = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x80485a3:call   eax
    ax = V1119 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = V1084
    dx = V1085
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = V1087-0x10 [from 0x80485a3:call   eax]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V1090 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V1091
    cs = V1092
    ss = V1093
    ds = V1094
    fs = V1095
    gs = V1096
    cf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = V1098
    pf = 0x1 (-0x1) [from 0x80485a0:sub    ebx, 0x04]
    ?3 = V1100
    af = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = V1102
    zf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    sf = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    tf = V1105
    if = V1106
    df = V1107
    of = 0x0 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = V1109
    iopl1 = V1110
    nt = V1111
    ?15 = V1112
    memory = {
        size=4; addr=V1087-0x10 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = V1126 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = V1127 [from 0x80485a3:call   eax]
    dx = V1128 [from 0x80485a3:call   eax]
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V1090 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V1129 [from 0x80485a3:call   eax]
    cs = V1130 [from 0x80485a3:call   eax]
    ss = V1131 [from 0x80485a3:call   eax]
    ds = V1132 [from 0x80485a3:call   eax]
    fs = V1133 [from 0x80485a3:call   eax]
    gs = V1134 [from 0x80485a3:call   eax]
    cf = V1135 [from 0x80485a3:call   eax]
    ?1 = V1136 [from 0x80485a3:call   eax]
    pf = V1137 [from 0x80485a3:call   eax]
    ?3 = V1138 [from 0x80485a3:call   eax]
    af = V1139 [from 0x80485a3:call   eax]
    ?5 = V1140 [from 0x80485a3:call   eax]
    zf = V1141 [from 0x80485a3:call   eax]
    sf = V1142 [from 0x80485a3:call   eax]
    tf = V1143 [from 0x80485a3:call   eax]
    if = V1144 [from 0x80485a3:call   eax]
    df = V1145 [from 0x80485a3:call   eax]
    of = V1146 [from 0x80485a3:call   eax]
    iopl0 = V1147 [from 0x80485a3:call   eax]
    iopl1 = V1148 [from 0x80485a3:call   eax]
    nt = V1149 [from 0x80485a3:call   eax]
    ?15 = V1150 [from 0x80485a3:call   eax]
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x80485a7:cmp    eax, 0xff
    ax = V1126 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = V1127 [from 0x80485a3:call   eax]
    dx = V1128 [from 0x80485a3:call   eax]
    bx = 0x80495e4 [from 0x80485a0:sub    ebx, 0x04]
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V1090 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V1129 [from 0x80485a3:call   eax]
    cs = V1130 [from 0x80485a3:call   eax]
    ss = V1131 [from 0x80485a3:call   eax]
    ds = V1132 [from 0x80485a3:call   eax]
    fs = V1133 [from 0x80485a3:call   eax]
    gs = V1134 [from 0x80485a3:call   eax]
    cf = -V1151-0x1 [from 0x80485a7:cmp    eax, 0xff]
    ?1 = V1136 [from 0x80485a3:call   eax]
    pf = -V1152-0x1 [from 0x80485a7:cmp    eax, 0xff]
    ?3 = V1138 [from 0x80485a3:call   eax]
    af = -V1153-0x1 [from 0x80485a7:cmp    eax, 0xff]
    ?5 = V1140 [from 0x80485a3:call   eax]
    zf = V1154 [from 0x80485a7:cmp    eax, 0xff]
    sf = V1155 [from 0x80485a7:cmp    eax, 0xff]
    tf = V1143 [from 0x80485a3:call   eax]
    if = V1144 [from 0x80485a3:call   eax]
    df = V1145 [from 0x80485a3:call   eax]
    of = V1156 [from 0x80485a7:cmp    eax, 0xff]
    iopl0 = V1147 [from 0x80485a3:call   eax]
    iopl1 = V1148 [from 0x80485a3:call   eax]
    nt = V1149 [from 0x80485a3:call   eax]
    ?15 = V1150 [from 0x80485a3:call   eax]
    memory = {
        size=4; addr=V1087-0x8 [from 0x8048583:push   ebx]; value=V1086
        size=4; addr=V1087-0x4 [from 0x8048580:push   ebp]; value=V1088
    }
0x80485aa:jne    0x080485a0
    ax = V1126 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = V1127 [from 0x80485a3:call   eax]
    dx = V1128 [from 0x80485a3:call   eax]
    bx = V1157
    sp = V1087-0xc [from 0x8048584:sub    esp, 0x04]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = V1090 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = V1129 [from 0x80485a3:call   eax]
    cs = V1130 [from 0x80485a3:call   eax]
    ss = V1131 [from 0x80485a3:call   eax]
    ds = V1132 [from 0x80485a3:call   eax]
    fs = V1133 [from 0x80485a3:call   eax]
    gs = V1134 [from 0x80485a3:call   eax]
    cf = -V1151-0x1 [from 0x80485a7:cmp    eax, 0xff]
    ?1 = V1136 [from 0x80485a3:call   eax]
    pf = -V1152-0x1 [from 0x80485a7:cmp    eax, 0xff]
    ?3 = V1138 [from 0x80485a3:call   eax]
    af = -V1153-0x1 [from 0x80485a7:cmp    eax, 0xff]
    ?5 = V1140 [from 0x80485a3:call   eax]
    zf = V1154 [from 0x80485a7:cmp    eax, 0xff]
    sf = V1155 [from 0x80485a7:cmp    eax, 0xff]
    tf = V1143 [from 0x80485a3:call   eax]
    if = V1144 [from 0x80485a3:call   eax]
    df = V1145 [from 0x80485a3:call   eax]
    of = V1156 [from 0x80485a7:cmp    eax, 0xff]
    iopl0 = V1147 [from 0x80485a3:call   eax]
    iopl1 = V1148 [from 0x80485a3:call   eax]
    nt = V1149 [from 0x80485a3:call   eax]
    ?15 = V1150 [from 0x80485a3:call   eax]
    memory = {}
0x80485ac:pop    eax
    ax = V1158 [from 0x80485ac:pop    eax]
    cx = V1159
    dx = V1160
    bx = V1161
    sp = V1087-0x8 [from 0x80485ac:pop    eax]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1162
    cs = V1163
    ss = V1164
    ds = V1165
    fs = V1166
    gs = V1167
    cf = V1168
    ?1 = V1169
    pf = V1170
    ?3 = V1171
    af = V1172
    ?5 = V1173
    zf = V1174
    sf = V1175
    tf = V1176
    if = V1177
    df = V1178
    of = V1179
    iopl0 = V1180
    iopl1 = V1181
    nt = V1182
    ?15 = V1183
    memory = {}
0x80485ad:pop    ebx
    ax = V1158 [from 0x80485ac:pop    eax]
    cx = V1159
    dx = V1160
    bx = V1184 [from 0x80485ad:pop    ebx]
    sp = V1087-0x4 [from 0x80485ad:pop    ebx]
    bp = V1087-0x4 [from 0x8048580:push   ebp]
    si = V1089
    di = V1090
    es = V1162
    cs = V1163
    ss = V1164
    ds = V1165
    fs = V1166
    gs = V1167
    cf = V1168
    ?1 = V1169
    pf = V1170
    ?3 = V1171
    af = V1172
    ?5 = V1173
    zf = V1174
    sf = V1175
    tf = V1176
    if = V1177
    df = V1178
    of = V1179
    iopl0 = V1180
    iopl1 = V1181
    nt = V1182
    ?15 = V1183
    memory = {}
0x80485ae:pop    ebp
    ax = V1158 [from 0x80485ac:pop    eax]
    cx = V1159
    dx = V1160
    bx = V1184 [from 0x80485ad:pop    ebx]
    sp = V1087 [from 0x80485ae:pop    ebp]
    bp = V1185 [from 0x80485ae:pop    ebp]
    si = V1089
    di = V1090
    es = V1162
    cs = V1163
    ss = V1164
    ds = V1165
    fs = V1166
    gs = V1167
    cf = V1168
    ?1 = V1169
    pf = V1170
    ?3 = V1171
    af = V1172
    ?5 = V1173
    zf = V1174
    sf = V1175
    tf = V1176
    if = V1177
    df = V1178
    of = V1179
    iopl0 = V1180
    iopl1 = V1181
    nt = V1182
    ?15 = V1183
    memory = {}
0x80485af:ret    
    ax = V1158 [from 0x80485ac:pop    eax]
    cx = V1159
    dx = V1160
    bx = V1184 [from 0x80485ad:pop    ebx]
    sp = V1087+0x4 [from 0x80485af:ret    ]
    bp = V1185 [from 0x80485ae:pop    ebp]
    si = V1089
    di = V1090
    es = V1162
    cs = V1163
    ss = V1164
    ds = V1165
    fs = V1166
    gs = V1167
    cf = V1168
    ?1 = V1169
    pf = V1170
    ?3 = V1171
    af = V1172
    ?5 = V1173
    zf = V1174
    sf = V1175
    tf = V1176
    if = V1177
    df = V1178
    of = V1179
    iopl0 = V1180
    iopl1 = V1181
    nt = V1182
    ?15 = V1183
    memory = {}
==============================================
Constant propagation in function "_fini"
==============================================
0x80485b0:push   ebp
    ax = V1186
    cx = V1187
    dx = V1188
    bx = V1189
    sp = V1190-0x4 [from 0x80485b0:push   ebp]
    bp = V1191
    si = V1192
    di = V1193
    es = V1194
    cs = V1195
    ss = V1196
    ds = V1197
    fs = V1198
    gs = V1199
    cf = V1200
    ?1 = V1201
    pf = V1202
    ?3 = V1203
    af = V1204
    ?5 = V1205
    zf = V1206
    sf = V1207
    tf = V1208
    if = V1209
    df = V1210
    of = V1211
    iopl0 = V1212
    iopl1 = V1213
    nt = V1214
    ?15 = V1215
    memory = {
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485b1:mov    ebp, esp
    ax = V1186
    cx = V1187
    dx = V1188
    bx = V1189
    sp = V1190-0x4 [from 0x80485b0:push   ebp]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1194
    cs = V1195
    ss = V1196
    ds = V1197
    fs = V1198
    gs = V1199
    cf = V1200
    ?1 = V1201
    pf = V1202
    ?3 = V1203
    af = V1204
    ?5 = V1205
    zf = V1206
    sf = V1207
    tf = V1208
    if = V1209
    df = V1210
    of = V1211
    iopl0 = V1212
    iopl1 = V1213
    nt = V1214
    ?15 = V1215
    memory = {
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485b3:push   ebx
    ax = V1186
    cx = V1187
    dx = V1188
    bx = V1189
    sp = V1190-0x8 [from 0x80485b3:push   ebx]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1194
    cs = V1195
    ss = V1196
    ds = V1197
    fs = V1198
    gs = V1199
    cf = V1200
    ?1 = V1201
    pf = V1202
    ?3 = V1203
    af = V1204
    ?5 = V1205
    zf = V1206
    sf = V1207
    tf = V1208
    if = V1209
    df = V1210
    of = V1211
    iopl0 = V1212
    iopl1 = V1213
    nt = V1214
    ?15 = V1215
    memory = {
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485b4:push   eax
    ax = V1186
    cx = V1187
    dx = V1188
    bx = V1189
    sp = V1190-0xc [from 0x80485b4:push   eax]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1194
    cs = V1195
    ss = V1196
    ds = V1197
    fs = V1198
    gs = V1199
    cf = V1200
    ?1 = V1201
    pf = V1202
    ?3 = V1203
    af = V1204
    ?5 = V1205
    zf = V1206
    sf = V1207
    tf = V1208
    if = V1209
    df = V1210
    of = V1211
    iopl0 = V1212
    iopl1 = V1213
    nt = V1214
    ?15 = V1215
    memory = {
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485b5:call   0x080485ba
    ax = V1186
    cx = V1187
    dx = V1188
    bx = V1189
    sp = V1190-0x10 [from 0x80485b5:call   0x080485ba]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1194
    cs = V1195
    ss = V1196
    ds = V1197
    fs = V1198
    gs = V1199
    cf = V1200
    ?1 = V1201
    pf = V1202
    ?3 = V1203
    af = V1204
    ?5 = V1205
    zf = V1206
    sf = V1207
    tf = V1208
    if = V1209
    df = V1210
    of = V1211
    iopl0 = V1212
    iopl1 = V1213
    nt = V1214
    ?15 = V1215
    memory = {
        size=4; addr=V1190-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485ba:pop    ebx
    ax = V1186
    cx = V1187
    dx = V1188
    bx = 0x80485ba [from 0x80485b5:call   0x080485ba]
    sp = V1190-0xc [from 0x80485ba:pop    ebx]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1194
    cs = V1195
    ss = V1196
    ds = V1197
    fs = V1198
    gs = V1199
    cf = V1200
    ?1 = V1201
    pf = V1202
    ?3 = V1203
    af = V1204
    ?5 = V1205
    zf = V1206
    sf = V1207
    tf = V1208
    if = V1209
    df = V1210
    of = V1211
    iopl0 = V1212
    iopl1 = V1213
    nt = V1214
    ?15 = V1215
    memory = {
        size=4; addr=V1190-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485bb:add    ebx, 0x0000110e
    ax = V1186
    cx = V1187
    dx = V1188
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = V1190-0xc [from 0x80485ba:pop    ebx]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1194
    cs = V1195
    ss = V1196
    ds = V1197
    fs = V1198
    gs = V1199
    cf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = V1201
    pf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = V1203
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = V1205
    zf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = V1208
    if = V1209
    df = V1210
    of = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = V1212
    iopl1 = V1213
    nt = V1214
    ?15 = V1215
    memory = {
        size=4; addr=V1190-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485c1:call   0x08048390
    ax = V1186
    cx = V1187
    dx = V1188
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = V1190-0x10 [from 0x80485c1:call   0x08048390]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1194
    cs = V1195
    ss = V1196
    ds = V1197
    fs = V1198
    gs = V1199
    cf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = V1201
    pf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = V1203
    af = 0x1 (-0x1) [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = V1205
    zf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = V1208
    if = V1209
    df = V1210
    of = 0x0 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = V1212
    iopl1 = V1213
    nt = V1214
    ?15 = V1215
    memory = {
        size=4; addr=V1190-0x10 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485c6:pop    eax
    ax = V1186
    cx = V1216 [from 0x80485c1:call   0x08048390]
    dx = V1217 [from 0x80485c1:call   0x08048390]
    bx = 0x80496c8 [from 0x80485bb:add    ebx, 0x0000110e]
    sp = V1190-0x8 [from 0x80485c6:pop    eax]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1218 [from 0x80485c1:call   0x08048390]
    cs = V1219 [from 0x80485c1:call   0x08048390]
    ss = V1220 [from 0x80485c1:call   0x08048390]
    ds = V1221 [from 0x80485c1:call   0x08048390]
    fs = V1222 [from 0x80485c1:call   0x08048390]
    gs = V1223 [from 0x80485c1:call   0x08048390]
    cf = V1224 [from 0x80485c1:call   0x08048390]
    ?1 = V1225 [from 0x80485c1:call   0x08048390]
    pf = V1226 [from 0x80485c1:call   0x08048390]
    ?3 = V1227 [from 0x80485c1:call   0x08048390]
    af = V1228 [from 0x80485c1:call   0x08048390]
    ?5 = V1229 [from 0x80485c1:call   0x08048390]
    zf = V1230 [from 0x80485c1:call   0x08048390]
    sf = V1231 [from 0x80485c1:call   0x08048390]
    tf = V1232 [from 0x80485c1:call   0x08048390]
    if = V1233 [from 0x80485c1:call   0x08048390]
    df = V1234 [from 0x80485c1:call   0x08048390]
    of = V1235 [from 0x80485c1:call   0x08048390]
    iopl0 = V1236 [from 0x80485c1:call   0x08048390]
    iopl1 = V1237 [from 0x80485c1:call   0x08048390]
    nt = V1238 [from 0x80485c1:call   0x08048390]
    ?15 = V1239 [from 0x80485c1:call   0x08048390]
    memory = {
        size=4; addr=V1190-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485c7:pop    ebx
    ax = V1186
    cx = V1216 [from 0x80485c1:call   0x08048390]
    dx = V1217 [from 0x80485c1:call   0x08048390]
    bx = V1189
    sp = V1190-0x4 [from 0x80485c7:pop    ebx]
    bp = V1190-0x4 [from 0x80485b0:push   ebp]
    si = V1192
    di = V1193
    es = V1218 [from 0x80485c1:call   0x08048390]
    cs = V1219 [from 0x80485c1:call   0x08048390]
    ss = V1220 [from 0x80485c1:call   0x08048390]
    ds = V1221 [from 0x80485c1:call   0x08048390]
    fs = V1222 [from 0x80485c1:call   0x08048390]
    gs = V1223 [from 0x80485c1:call   0x08048390]
    cf = V1224 [from 0x80485c1:call   0x08048390]
    ?1 = V1225 [from 0x80485c1:call   0x08048390]
    pf = V1226 [from 0x80485c1:call   0x08048390]
    ?3 = V1227 [from 0x80485c1:call   0x08048390]
    af = V1228 [from 0x80485c1:call   0x08048390]
    ?5 = V1229 [from 0x80485c1:call   0x08048390]
    zf = V1230 [from 0x80485c1:call   0x08048390]
    sf = V1231 [from 0x80485c1:call   0x08048390]
    tf = V1232 [from 0x80485c1:call   0x08048390]
    if = V1233 [from 0x80485c1:call   0x08048390]
    df = V1234 [from 0x80485c1:call   0x08048390]
    of = V1235 [from 0x80485c1:call   0x08048390]
    iopl0 = V1236 [from 0x80485c1:call   0x08048390]
    iopl1 = V1237 [from 0x80485c1:call   0x08048390]
    nt = V1238 [from 0x80485c1:call   0x08048390]
    ?15 = V1239 [from 0x80485c1:call   0x08048390]
    memory = {
        size=4; addr=V1190-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485c8:leave  
    ax = V1186
    cx = V1216 [from 0x80485c1:call   0x08048390]
    dx = V1217 [from 0x80485c1:call   0x08048390]
    bx = V1189
    sp = V1190 [from 0x80485c8:leave  ]
    bp = V1191
    si = V1192
    di = V1193
    es = V1218 [from 0x80485c1:call   0x08048390]
    cs = V1219 [from 0x80485c1:call   0x08048390]
    ss = V1220 [from 0x80485c1:call   0x08048390]
    ds = V1221 [from 0x80485c1:call   0x08048390]
    fs = V1222 [from 0x80485c1:call   0x08048390]
    gs = V1223 [from 0x80485c1:call   0x08048390]
    cf = V1224 [from 0x80485c1:call   0x08048390]
    ?1 = V1225 [from 0x80485c1:call   0x08048390]
    pf = V1226 [from 0x80485c1:call   0x08048390]
    ?3 = V1227 [from 0x80485c1:call   0x08048390]
    af = V1228 [from 0x80485c1:call   0x08048390]
    ?5 = V1229 [from 0x80485c1:call   0x08048390]
    zf = V1230 [from 0x80485c1:call   0x08048390]
    sf = V1231 [from 0x80485c1:call   0x08048390]
    tf = V1232 [from 0x80485c1:call   0x08048390]
    if = V1233 [from 0x80485c1:call   0x08048390]
    df = V1234 [from 0x80485c1:call   0x08048390]
    of = V1235 [from 0x80485c1:call   0x08048390]
    iopl0 = V1236 [from 0x80485c1:call   0x08048390]
    iopl1 = V1237 [from 0x80485c1:call   0x08048390]
    nt = V1238 [from 0x80485c1:call   0x08048390]
    ?15 = V1239 [from 0x80485c1:call   0x08048390]
    memory = {
        size=4; addr=V1190-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
0x80485c9:ret    
    ax = V1186
    cx = V1216 [from 0x80485c1:call   0x08048390]
    dx = V1217 [from 0x80485c1:call   0x08048390]
    bx = V1189
    sp = V1190+0x4 [from 0x80485c9:ret    ]
    bp = V1191
    si = V1192
    di = V1193
    es = V1218 [from 0x80485c1:call   0x08048390]
    cs = V1219 [from 0x80485c1:call   0x08048390]
    ss = V1220 [from 0x80485c1:call   0x08048390]
    ds = V1221 [from 0x80485c1:call   0x08048390]
    fs = V1222 [from 0x80485c1:call   0x08048390]
    gs = V1223 [from 0x80485c1:call   0x08048390]
    cf = V1224 [from 0x80485c1:call   0x08048390]
    ?1 = V1225 [from 0x80485c1:call   0x08048390]
    pf = V1226 [from 0x80485c1:call   0x08048390]
    ?3 = V1227 [from 0x80485c1:call   0x08048390]
    af = V1228 [from 0x80485c1:call   0x08048390]
    ?5 = V1229 [from 0x80485c1:call   0x08048390]
    zf = V1230 [from 0x80485c1:call   0x08048390]
    sf = V1231 [from 0x80485c1:call   0x08048390]
    tf = V1232 [from 0x80485c1:call   0x08048390]
    if = V1233 [from 0x80485c1:call   0x08048390]
    df = V1234 [from 0x80485c1:call   0x08048390]
    of = V1235 [from 0x80485c1:call   0x08048390]
    iopl0 = V1236 [from 0x80485c1:call   0x08048390]
    iopl1 = V1237 [from 0x80485c1:call   0x08048390]
    nt = V1238 [from 0x80485c1:call   0x08048390]
    ?15 = V1239 [from 0x80485c1:call   0x08048390]
    memory = {
        size=4; addr=V1190-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=V1190-0xc [from 0x80485b4:push   eax]; value=V1186
        size=4; addr=V1190-0x8 [from 0x80485b3:push   ebx]; value=V1189
        size=4; addr=V1190-0x4 [from 0x80485b0:push   ebp]; value=V1191
    }
analyzed headers: 1
