| call   0x080480bc<<Func>>
0x00000000080480a0:  is_call target=0x00000000080480bc return=0x00000000080480a5

| call   0x080480c2<<Func>>
0x00000000080480a5:  is_call target=0x00000000080480c2 return=0x00000000080480aa

| call   0x080480cd<<Func>>
0x00000000080480aa:  is_call target=0x00000000080480cd return=0x00000000080480af

| call   0x080480d3<<Func>>
0x00000000080480af:  is_call target=0x00000000080480d3 return=0x00000000080480b4

| mov    eax, 0x00000001
| int    0x80
| hlt    
0x00000000080480b4: not_call target=0xffffffffffffffff return=0xffffffffffffffff

| call   0x080480f4<<Func>>
0x00000000080480bc:  is_call target=0x00000000080480f4 return=0x00000000080480c1

| ret    
0x00000000080480c1: not_call target=0xffffffffffffffff return=0xffffffffffffffff

| push   0x080480cc<<Insn>>
| jmp    0x080480f4<<Func>>
0x00000000080480c2:  is_call target=0x00000000080480f4 return=0x00000000080480cc

| ret    
0x00000000080480cc: not_call target=0xffffffffffffffff return=0xffffffffffffffff

| jmp    0x080480f4<<Func>>
0x00000000080480cd: not_call target=0xffffffffffffffff return=0xffffffffffffffff

| push   eax
| mov    eax, 0x080480f1<<Insn>>
| add    eax, 0x00000002
| sub    eax, 0x00000001
| push   eax
| sub    eax, 0x00000001
| push   eax
| inc    eax
| inc    eax
| jmp    0x080480f4<<Func>>
0x00000000080480d3:  is_call target=0x00000000080480f4 return=0x00000000080480f1

| pop    eax
| pop    eax
| ret    
0x00000000080480f1: not_call target=0xffffffffffffffff return=0xffffffffffffffff

| ret    
0x00000000080480f4: not_call target=0xffffffffffffffff return=0xffffffffffffffff

