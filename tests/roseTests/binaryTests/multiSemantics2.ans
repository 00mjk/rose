=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v3[32] }
    cx      = { v4[32] }
    dx      = { v5[32] }
    bx      = { v6[32] }
    sp      = { v7-0x4[32] }
    bp      = { v8[32] }
    si      = { v9[32] }
    di      = { v10[32] }
    es      = { v11[16] }
    cs      = { v12[16] }
    ss      = { v13[16] }
    ds      = { v14[16] }
    fs      = { v15[16] }
    gs      = { v16[16] }
    cf      = { v17[1] }
    ?1      = { v18[1] }
    pf      = { v19[1] }
    ?3      = { v20[1] }
    af      = { v21[1] }
    ?5      = { v22[1] }
    zf      = { v23[1] }
    sf      = { v24[1] }
    tf      = { v25[1] }
    if      = { v26[1] }
    df      = { v27[1] }
    of      = { v28[1] }
    iopl0   = { v29[1] }
    iopl1   = { v30[1] }
    nt      = { v31[1] }
    ?15     = { v32[1] }
    rf      = { v33[1] }
    vm      = { v34[1] }
    ac      = { v35[1] }
    vif     = { v36[1] }
    vip     = { v37[1] }
    id      = { v38[1] }
    ?22     = { v39[1] }
    ?23     = { v40[1] }
    ?24     = { v41[1] }
    ?25     = { v42[1] }
    ?26     = { v43[1] }
    ?27     = { v44[1] }
    ?28     = { v45[1] }
    ?29     = { v46[1] }
    ?30     = { v47[1] }
    ?31     = { v48[1] }
    ip      = { 0x80482c9[32] }
memory:
    addr=v7-0x4[32] value=v8[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2[32]} }
    cx      = { {defs={}, expr=v3[32]} }
    dx      = { {defs={}, expr=v4[32]} }
    bx      = { {defs={}, expr=v5[32]} }
    sp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    bp      = { {defs={}, expr=v7[32]} }
    si      = { {defs={}, expr=v8[32]} }
    di      = { {defs={}, expr=v9[32]} }
    es      = { {defs={}, expr=v10[16]} }
    cs      = { {defs={}, expr=v11[16]} }
    ss      = { {defs={}, expr=v12[16]} }
    ds      = { {defs={}, expr=v13[16]} }
    fs      = { {defs={}, expr=v14[16]} }
    gs      = { {defs={}, expr=v15[16]} }
    cf      = { {defs={}, expr=v16[1]} }
    ?1      = { {defs={}, expr=v17[1]} }
    pf      = { {defs={}, expr=v18[1]} }
    ?3      = { {defs={}, expr=v19[1]} }
    af      = { {defs={}, expr=v20[1]} }
    ?5      = { {defs={}, expr=v21[1]} }
    zf      = { {defs={}, expr=v22[1]} }
    sf      = { {defs={}, expr=v23[1]} }
    tf      = { {defs={}, expr=v24[1]} }
    if      = { {defs={}, expr=v25[1]} }
    df      = { {defs={}, expr=v26[1]} }
    of      = { {defs={}, expr=v27[1]} }
    iopl0   = { {defs={}, expr=v28[1]} }
    iopl1   = { {defs={}, expr=v29[1]} }
    nt      = { {defs={}, expr=v30[1]} }
    ?15     = { {defs={}, expr=v31[1]} }
    rf      = { {defs={}, expr=v32[1]} }
    vm      = { {defs={}, expr=v33[1]} }
    ac      = { {defs={}, expr=v34[1]} }
    vif     = { {defs={}, expr=v35[1]} }
    vip     = { {defs={}, expr=v36[1]} }
    id      = { {defs={}, expr=v37[1]} }
    ?22     = { {defs={}, expr=v38[1]} }
    ?23     = { {defs={}, expr=v39[1]} }
    ?24     = { {defs={}, expr=v40[1]} }
    ?25     = { {defs={}, expr=v41[1]} }
    ?26     = { {defs={}, expr=v42[1]} }
    ?27     = { {defs={}, expr=v43[1]} }
    ?28     = { {defs={}, expr=v44[1]} }
    ?29     = { {defs={}, expr=v45[1]} }
    ?30     = { {defs={}, expr=v46[1]} }
    ?31     = { {defs={}, expr=v47[1]} }
    ip      = { {defs={0x080482c8}, expr=0x080482c9[32]} }
memory:
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 3[32])} value={defs={0x080482c8}, expr=(extract[8] 24[32] 32[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 2[32])} value={defs={0x080482c8}, expr=(extract[8] 16[32] 24[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 1[32])} value={defs={0x080482c8}, expr=(extract[8] 8[32] 16[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} value={defs={0x080482c8}, expr=(extract[8] 0[32] 8[32] v7[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482c9[32] }
memory:
0x80482c9:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v3[32] }
    cx      = { v4[32] }
    dx      = { v5[32] }
    bx      = { v6[32] }
    sp      = { v7-0x4[32] }
    bp      = { v7-0x4[32] }
    si      = { v9[32] }
    di      = { v10[32] }
    es      = { v11[16] }
    cs      = { v12[16] }
    ss      = { v13[16] }
    ds      = { v14[16] }
    fs      = { v15[16] }
    gs      = { v16[16] }
    cf      = { v17[1] }
    ?1      = { v18[1] }
    pf      = { v19[1] }
    ?3      = { v20[1] }
    af      = { v21[1] }
    ?5      = { v22[1] }
    zf      = { v23[1] }
    sf      = { v24[1] }
    tf      = { v25[1] }
    if      = { v26[1] }
    df      = { v27[1] }
    of      = { v28[1] }
    iopl0   = { v29[1] }
    iopl1   = { v30[1] }
    nt      = { v31[1] }
    ?15     = { v32[1] }
    rf      = { v33[1] }
    vm      = { v34[1] }
    ac      = { v35[1] }
    vif     = { v36[1] }
    vip     = { v37[1] }
    id      = { v38[1] }
    ?22     = { v39[1] }
    ?23     = { v40[1] }
    ?24     = { v41[1] }
    ?25     = { v42[1] }
    ?26     = { v43[1] }
    ?27     = { v44[1] }
    ?28     = { v45[1] }
    ?29     = { v46[1] }
    ?30     = { v47[1] }
    ?31     = { v48[1] }
    ip      = { 0x80482cb[32] }
memory:
    addr=v7-0x4[32] value=v8[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2[32]} }
    cx      = { {defs={}, expr=v3[32]} }
    dx      = { {defs={}, expr=v4[32]} }
    bx      = { {defs={}, expr=v5[32]} }
    sp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    bp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    si      = { {defs={}, expr=v8[32]} }
    di      = { {defs={}, expr=v9[32]} }
    es      = { {defs={}, expr=v10[16]} }
    cs      = { {defs={}, expr=v11[16]} }
    ss      = { {defs={}, expr=v12[16]} }
    ds      = { {defs={}, expr=v13[16]} }
    fs      = { {defs={}, expr=v14[16]} }
    gs      = { {defs={}, expr=v15[16]} }
    cf      = { {defs={}, expr=v16[1]} }
    ?1      = { {defs={}, expr=v17[1]} }
    pf      = { {defs={}, expr=v18[1]} }
    ?3      = { {defs={}, expr=v19[1]} }
    af      = { {defs={}, expr=v20[1]} }
    ?5      = { {defs={}, expr=v21[1]} }
    zf      = { {defs={}, expr=v22[1]} }
    sf      = { {defs={}, expr=v23[1]} }
    tf      = { {defs={}, expr=v24[1]} }
    if      = { {defs={}, expr=v25[1]} }
    df      = { {defs={}, expr=v26[1]} }
    of      = { {defs={}, expr=v27[1]} }
    iopl0   = { {defs={}, expr=v28[1]} }
    iopl1   = { {defs={}, expr=v29[1]} }
    nt      = { {defs={}, expr=v30[1]} }
    ?15     = { {defs={}, expr=v31[1]} }
    rf      = { {defs={}, expr=v32[1]} }
    vm      = { {defs={}, expr=v33[1]} }
    ac      = { {defs={}, expr=v34[1]} }
    vif     = { {defs={}, expr=v35[1]} }
    vip     = { {defs={}, expr=v36[1]} }
    id      = { {defs={}, expr=v37[1]} }
    ?22     = { {defs={}, expr=v38[1]} }
    ?23     = { {defs={}, expr=v39[1]} }
    ?24     = { {defs={}, expr=v40[1]} }
    ?25     = { {defs={}, expr=v41[1]} }
    ?26     = { {defs={}, expr=v42[1]} }
    ?27     = { {defs={}, expr=v43[1]} }
    ?28     = { {defs={}, expr=v44[1]} }
    ?29     = { {defs={}, expr=v45[1]} }
    ?30     = { {defs={}, expr=v46[1]} }
    ?31     = { {defs={}, expr=v47[1]} }
    ip      = { {defs={0x080482c9}, expr=0x080482cb[32]} }
memory:
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 3[32])} value={defs={0x080482c8}, expr=(extract[8] 24[32] 32[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 2[32])} value={defs={0x080482c8}, expr=(extract[8] 16[32] 24[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 1[32])} value={defs={0x080482c8}, expr=(extract[8] 8[32] 16[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} value={defs={0x080482c8}, expr=(extract[8] 0[32] 8[32] v7[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482cb[32] }
memory:
0x80482cb:sub    esp, 0x08
== PartialSymbolic ==
registers:
    ax      = { v3[32] }
    cx      = { v4[32] }
    dx      = { v5[32] }
    bx      = { v6[32] }
    sp      = { v7-0xc[32] }
    bp      = { v7-0x4[32] }
    si      = { v9[32] }
    di      = { v10[32] }
    es      = { v11[16] }
    cs      = { v12[16] }
    ss      = { v13[16] }
    ds      = { v14[16] }
    fs      = { v15[16] }
    gs      = { v16[16] }
    cf      = { -v66+0x1[1] }
    ?1      = { v18[1] }
    pf      = { -v63+0x1[1] }
    ?3      = { v20[1] }
    af      = { -v68+0x1[1] }
    ?5      = { v22[1] }
    zf      = { v65[1] }
    sf      = { v64[1] }
    tf      = { v25[1] }
    if      = { v26[1] }
    df      = { v27[1] }
    of      = { v69[1] }
    iopl0   = { v29[1] }
    iopl1   = { v30[1] }
    nt      = { v31[1] }
    ?15     = { v32[1] }
    rf      = { v33[1] }
    vm      = { v34[1] }
    ac      = { v35[1] }
    vif     = { v36[1] }
    vip     = { v37[1] }
    id      = { v38[1] }
    ?22     = { v39[1] }
    ?23     = { v40[1] }
    ?24     = { v41[1] }
    ?25     = { v42[1] }
    ?26     = { v43[1] }
    ?27     = { v44[1] }
    ?28     = { v45[1] }
    ?29     = { v46[1] }
    ?30     = { v47[1] }
    ?31     = { v48[1] }
    ip      = { 0x80482ce[32] }
memory:
    addr=v7-0x4[32] value=v8[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2[32]} }
    cx      = { {defs={}, expr=v3[32]} }
    dx      = { {defs={}, expr=v4[32]} }
    bx      = { {defs={}, expr=v5[32]} }
    sp      = { {defs={0x080482c8,0x080482cb}, expr=(add[32] (add[32] v6[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    si      = { {defs={}, expr=v8[32]} }
    di      = { {defs={}, expr=v9[32]} }
    es      = { {defs={}, expr=v10[16]} }
    cs      = { {defs={}, expr=v11[16]} }
    ss      = { {defs={}, expr=v12[16]} }
    ds      = { {defs={}, expr=v13[16]} }
    fs      = { {defs={}, expr=v14[16]} }
    gs      = { {defs={}, expr=v15[16]} }
    cf      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v17[1]} }
    pf      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v19[1]} }
    af      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v21[1]} }
    zf      = { {defs={0x080482c8,0x080482cb}, expr=(zerop[1] (add[32] (add[32] v6[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x080482c8,0x080482cb}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v24[1]} }
    if      = { {defs={}, expr=v25[1]} }
    df      = { {defs={}, expr=v26[1]} }
    of      = { {defs={0x080482c8,0x080482cb}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v28[1]} }
    iopl1   = { {defs={}, expr=v29[1]} }
    nt      = { {defs={}, expr=v30[1]} }
    ?15     = { {defs={}, expr=v31[1]} }
    rf      = { {defs={}, expr=v32[1]} }
    vm      = { {defs={}, expr=v33[1]} }
    ac      = { {defs={}, expr=v34[1]} }
    vif     = { {defs={}, expr=v35[1]} }
    vip     = { {defs={}, expr=v36[1]} }
    id      = { {defs={}, expr=v37[1]} }
    ?22     = { {defs={}, expr=v38[1]} }
    ?23     = { {defs={}, expr=v39[1]} }
    ?24     = { {defs={}, expr=v40[1]} }
    ?25     = { {defs={}, expr=v41[1]} }
    ?26     = { {defs={}, expr=v42[1]} }
    ?27     = { {defs={}, expr=v43[1]} }
    ?28     = { {defs={}, expr=v44[1]} }
    ?29     = { {defs={}, expr=v45[1]} }
    ?30     = { {defs={}, expr=v46[1]} }
    ?31     = { {defs={}, expr=v47[1]} }
    ip      = { {defs={0x080482cb}, expr=0x080482ce[32]} }
memory:
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 3[32])} value={defs={0x080482c8}, expr=(extract[8] 24[32] 32[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 2[32])} value={defs={0x080482c8}, expr=(extract[8] 16[32] 24[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 1[32])} value={defs={0x080482c8}, expr=(extract[8] 8[32] 16[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} value={defs={0x080482c8}, expr=(extract[8] 0[32] 8[32] v7[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482ce[32] }
memory:
0x80482ce:call   0x08048364<call_gmon_start>
== PartialSymbolic ==
registers:
    ax      = { v3[32] }
    cx      = { v4[32] }
    dx      = { v5[32] }
    bx      = { v6[32] }
    sp      = { v7-0x10[32] }
    bp      = { v7-0x4[32] }
    si      = { v9[32] }
    di      = { v10[32] }
    es      = { v11[16] }
    cs      = { v12[16] }
    ss      = { v13[16] }
    ds      = { v14[16] }
    fs      = { v15[16] }
    gs      = { v16[16] }
    cf      = { -v66+0x1[1] }
    ?1      = { v18[1] }
    pf      = { -v63+0x1[1] }
    ?3      = { v20[1] }
    af      = { -v68+0x1[1] }
    ?5      = { v22[1] }
    zf      = { v65[1] }
    sf      = { v64[1] }
    tf      = { v25[1] }
    if      = { v26[1] }
    df      = { v27[1] }
    of      = { v69[1] }
    iopl0   = { v29[1] }
    iopl1   = { v30[1] }
    nt      = { v31[1] }
    ?15     = { v32[1] }
    rf      = { v33[1] }
    vm      = { v34[1] }
    ac      = { v35[1] }
    vif     = { v36[1] }
    vip     = { v37[1] }
    id      = { v38[1] }
    ?22     = { v39[1] }
    ?23     = { v40[1] }
    ?24     = { v41[1] }
    ?25     = { v42[1] }
    ?26     = { v43[1] }
    ?27     = { v44[1] }
    ?28     = { v45[1] }
    ?29     = { v46[1] }
    ?30     = { v47[1] }
    ?31     = { v48[1] }
    ip      = { 0x8048364[32] }
memory:
    addr=v7-0x10[32] value=0x80482d3[32]
    addr=v7-0x4[32] value=v8[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2[32]} }
    cx      = { {defs={}, expr=v3[32]} }
    dx      = { {defs={}, expr=v4[32]} }
    bx      = { {defs={}, expr=v5[32]} }
    sp      = { {defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32])} }
    bp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    si      = { {defs={}, expr=v8[32]} }
    di      = { {defs={}, expr=v9[32]} }
    es      = { {defs={}, expr=v10[16]} }
    cs      = { {defs={}, expr=v11[16]} }
    ss      = { {defs={}, expr=v12[16]} }
    ds      = { {defs={}, expr=v13[16]} }
    fs      = { {defs={}, expr=v14[16]} }
    gs      = { {defs={}, expr=v15[16]} }
    cf      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v17[1]} }
    pf      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v19[1]} }
    af      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v21[1]} }
    zf      = { {defs={0x080482c8,0x080482cb}, expr=(zerop[1] (add[32] (add[32] v6[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x080482c8,0x080482cb}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v24[1]} }
    if      = { {defs={}, expr=v25[1]} }
    df      = { {defs={}, expr=v26[1]} }
    of      = { {defs={0x080482c8,0x080482cb}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v28[1]} }
    iopl1   = { {defs={}, expr=v29[1]} }
    nt      = { {defs={}, expr=v30[1]} }
    ?15     = { {defs={}, expr=v31[1]} }
    rf      = { {defs={}, expr=v32[1]} }
    vm      = { {defs={}, expr=v33[1]} }
    ac      = { {defs={}, expr=v34[1]} }
    vif     = { {defs={}, expr=v35[1]} }
    vip     = { {defs={}, expr=v36[1]} }
    id      = { {defs={}, expr=v37[1]} }
    ?22     = { {defs={}, expr=v38[1]} }
    ?23     = { {defs={}, expr=v39[1]} }
    ?24     = { {defs={}, expr=v40[1]} }
    ?25     = { {defs={}, expr=v41[1]} }
    ?26     = { {defs={}, expr=v42[1]} }
    ?27     = { {defs={}, expr=v43[1]} }
    ?28     = { {defs={}, expr=v44[1]} }
    ?29     = { {defs={}, expr=v45[1]} }
    ?30     = { {defs={}, expr=v46[1]} }
    ?31     = { {defs={}, expr=v47[1]} }
    ip      = { {defs={}, expr=0x08048364[32]} }
memory:
    addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32]) 3[32])} value={defs={0x080482ce}, expr=8[8]}
    addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32]) 2[32])} value={defs={0x080482ce}, expr=4[8]}
    addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32]) 1[32])} value={defs={0x080482ce}, expr=-126[8]}
    addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32])} value={defs={0x080482ce}, expr=-45[8]}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 3[32])} value={defs={0x080482c8}, expr=(extract[8] 24[32] 32[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 2[32])} value={defs={0x080482c8}, expr=(extract[8] 16[32] 24[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 1[32])} value={defs={0x080482c8}, expr=(extract[8] 8[32] 16[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} value={defs={0x080482c8}, expr=(extract[8] 0[32] 8[32] v7[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048364[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0<frame_dummy>
== PartialSymbolic ==
registers:
    ax      = { v72[32] }
    cx      = { v73[32] }
    dx      = { v74[32] }
    bx      = { v75[32] }
    sp      = { v76-0x4[32] }
    bp      = { v77[32] }
    si      = { v78[32] }
    di      = { v79[32] }
    es      = { v80[16] }
    cs      = { v81[16] }
    ss      = { v82[16] }
    ds      = { v83[16] }
    fs      = { v84[16] }
    gs      = { v85[16] }
    cf      = { v86[1] }
    ?1      = { v87[1] }
    pf      = { v88[1] }
    ?3      = { v89[1] }
    af      = { v90[1] }
    ?5      = { v91[1] }
    zf      = { v92[1] }
    sf      = { v93[1] }
    tf      = { v94[1] }
    if      = { v95[1] }
    df      = { v96[1] }
    of      = { v97[1] }
    iopl0   = { v98[1] }
    iopl1   = { v99[1] }
    nt      = { v100[1] }
    ?15     = { v101[1] }
    rf      = { v102[1] }
    vm      = { v103[1] }
    ac      = { v104[1] }
    vif     = { v105[1] }
    vip     = { v106[1] }
    id      = { v107[1] }
    ?22     = { v108[1] }
    ?23     = { v109[1] }
    ?24     = { v110[1] }
    ?25     = { v111[1] }
    ?26     = { v112[1] }
    ?27     = { v113[1] }
    ?28     = { v114[1] }
    ?29     = { v115[1] }
    ?30     = { v116[1] }
    ?31     = { v117[1] }
    ip      = { 0x80483d0[32] }
memory:
    addr=v76-0x4[32] value=0x80482d8[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v50[32]} }
    cx      = { {defs={}, expr=v51[32]} }
    dx      = { {defs={}, expr=v52[32]} }
    bx      = { {defs={}, expr=v53[32]} }
    sp      = { {defs={0x080482d3}, expr=(add[32] v54[32] -4[32])} }
    bp      = { {defs={}, expr=v55[32]} }
    si      = { {defs={}, expr=v56[32]} }
    di      = { {defs={}, expr=v57[32]} }
    es      = { {defs={}, expr=v58[16]} }
    cs      = { {defs={}, expr=v59[16]} }
    ss      = { {defs={}, expr=v60[16]} }
    ds      = { {defs={}, expr=v61[16]} }
    fs      = { {defs={}, expr=v62[16]} }
    gs      = { {defs={}, expr=v63[16]} }
    cf      = { {defs={}, expr=v64[1]} }
    ?1      = { {defs={}, expr=v65[1]} }
    pf      = { {defs={}, expr=v66[1]} }
    ?3      = { {defs={}, expr=v67[1]} }
    af      = { {defs={}, expr=v68[1]} }
    ?5      = { {defs={}, expr=v69[1]} }
    zf      = { {defs={}, expr=v70[1]} }
    sf      = { {defs={}, expr=v71[1]} }
    tf      = { {defs={}, expr=v72[1]} }
    if      = { {defs={}, expr=v73[1]} }
    df      = { {defs={}, expr=v74[1]} }
    of      = { {defs={}, expr=v75[1]} }
    iopl0   = { {defs={}, expr=v76[1]} }
    iopl1   = { {defs={}, expr=v77[1]} }
    nt      = { {defs={}, expr=v78[1]} }
    ?15     = { {defs={}, expr=v79[1]} }
    rf      = { {defs={}, expr=v80[1]} }
    vm      = { {defs={}, expr=v81[1]} }
    ac      = { {defs={}, expr=v82[1]} }
    vif     = { {defs={}, expr=v83[1]} }
    vip     = { {defs={}, expr=v84[1]} }
    id      = { {defs={}, expr=v85[1]} }
    ?22     = { {defs={}, expr=v86[1]} }
    ?23     = { {defs={}, expr=v87[1]} }
    ?24     = { {defs={}, expr=v88[1]} }
    ?25     = { {defs={}, expr=v89[1]} }
    ?26     = { {defs={}, expr=v90[1]} }
    ?27     = { {defs={}, expr=v91[1]} }
    ?28     = { {defs={}, expr=v92[1]} }
    ?29     = { {defs={}, expr=v93[1]} }
    ?30     = { {defs={}, expr=v94[1]} }
    ?31     = { {defs={}, expr=v95[1]} }
    ip      = { {defs={}, expr=0x080483d0[32]} }
memory:
    addr={defs={0x080482d3}, expr=(add[32] (add[32] v54[32] -4[32]) 3[32])} value={defs={0x080482d3}, expr=8[8]}
    addr={defs={0x080482d3}, expr=(add[32] (add[32] v54[32] -4[32]) 2[32])} value={defs={0x080482d3}, expr=4[8]}
    addr={defs={0x080482d3}, expr=(add[32] (add[32] v54[32] -4[32]) 1[32])} value={defs={0x080482d3}, expr=-126[8]}
    addr={defs={0x080482d3}, expr=(add[32] v54[32] -4[32])} value={defs={0x080482d3}, expr=-40[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483d0[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580<__do_global_ctors_aux>
== PartialSymbolic ==
registers:
    ax      = { v120[32] }
    cx      = { v121[32] }
    dx      = { v122[32] }
    bx      = { v123[32] }
    sp      = { v124-0x4[32] }
    bp      = { v125[32] }
    si      = { v126[32] }
    di      = { v127[32] }
    es      = { v128[16] }
    cs      = { v129[16] }
    ss      = { v130[16] }
    ds      = { v131[16] }
    fs      = { v132[16] }
    gs      = { v133[16] }
    cf      = { v134[1] }
    ?1      = { v135[1] }
    pf      = { v136[1] }
    ?3      = { v137[1] }
    af      = { v138[1] }
    ?5      = { v139[1] }
    zf      = { v140[1] }
    sf      = { v141[1] }
    tf      = { v142[1] }
    if      = { v143[1] }
    df      = { v144[1] }
    of      = { v145[1] }
    iopl0   = { v146[1] }
    iopl1   = { v147[1] }
    nt      = { v148[1] }
    ?15     = { v149[1] }
    rf      = { v150[1] }
    vm      = { v151[1] }
    ac      = { v152[1] }
    vif     = { v153[1] }
    vip     = { v154[1] }
    id      = { v155[1] }
    ?22     = { v156[1] }
    ?23     = { v157[1] }
    ?24     = { v158[1] }
    ?25     = { v159[1] }
    ?26     = { v160[1] }
    ?27     = { v161[1] }
    ?28     = { v162[1] }
    ?29     = { v163[1] }
    ?30     = { v164[1] }
    ?31     = { v165[1] }
    ip      = { 0x8048580[32] }
memory:
    addr=v124-0x4[32] value=0x80482dd[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v98[32]} }
    cx      = { {defs={}, expr=v99[32]} }
    dx      = { {defs={}, expr=v100[32]} }
    bx      = { {defs={}, expr=v101[32]} }
    sp      = { {defs={0x080482d8}, expr=(add[32] v102[32] -4[32])} }
    bp      = { {defs={}, expr=v103[32]} }
    si      = { {defs={}, expr=v104[32]} }
    di      = { {defs={}, expr=v105[32]} }
    es      = { {defs={}, expr=v106[16]} }
    cs      = { {defs={}, expr=v107[16]} }
    ss      = { {defs={}, expr=v108[16]} }
    ds      = { {defs={}, expr=v109[16]} }
    fs      = { {defs={}, expr=v110[16]} }
    gs      = { {defs={}, expr=v111[16]} }
    cf      = { {defs={}, expr=v112[1]} }
    ?1      = { {defs={}, expr=v113[1]} }
    pf      = { {defs={}, expr=v114[1]} }
    ?3      = { {defs={}, expr=v115[1]} }
    af      = { {defs={}, expr=v116[1]} }
    ?5      = { {defs={}, expr=v117[1]} }
    zf      = { {defs={}, expr=v118[1]} }
    sf      = { {defs={}, expr=v119[1]} }
    tf      = { {defs={}, expr=v120[1]} }
    if      = { {defs={}, expr=v121[1]} }
    df      = { {defs={}, expr=v122[1]} }
    of      = { {defs={}, expr=v123[1]} }
    iopl0   = { {defs={}, expr=v124[1]} }
    iopl1   = { {defs={}, expr=v125[1]} }
    nt      = { {defs={}, expr=v126[1]} }
    ?15     = { {defs={}, expr=v127[1]} }
    rf      = { {defs={}, expr=v128[1]} }
    vm      = { {defs={}, expr=v129[1]} }
    ac      = { {defs={}, expr=v130[1]} }
    vif     = { {defs={}, expr=v131[1]} }
    vip     = { {defs={}, expr=v132[1]} }
    id      = { {defs={}, expr=v133[1]} }
    ?22     = { {defs={}, expr=v134[1]} }
    ?23     = { {defs={}, expr=v135[1]} }
    ?24     = { {defs={}, expr=v136[1]} }
    ?25     = { {defs={}, expr=v137[1]} }
    ?26     = { {defs={}, expr=v138[1]} }
    ?27     = { {defs={}, expr=v139[1]} }
    ?28     = { {defs={}, expr=v140[1]} }
    ?29     = { {defs={}, expr=v141[1]} }
    ?30     = { {defs={}, expr=v142[1]} }
    ?31     = { {defs={}, expr=v143[1]} }
    ip      = { {defs={}, expr=0x08048580[32]} }
memory:
    addr={defs={0x080482d8}, expr=(add[32] (add[32] v102[32] -4[32]) 3[32])} value={defs={0x080482d8}, expr=8[8]}
    addr={defs={0x080482d8}, expr=(add[32] (add[32] v102[32] -4[32]) 2[32])} value={defs={0x080482d8}, expr=4[8]}
    addr={defs={0x080482d8}, expr=(add[32] (add[32] v102[32] -4[32]) 1[32])} value={defs={0x080482d8}, expr=-126[8]}
    addr={defs={0x080482d8}, expr=(add[32] v102[32] -4[32])} value={defs={0x080482d8}, expr=-35[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048580[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
== PartialSymbolic ==
registers:
    ax      = { v168[32] }
    cx      = { v169[32] }
    dx      = { v170[32] }
    bx      = { v171[32] }
    sp      = { v173+0x4[32] }
    bp      = { v214[32] }
    si      = { v174[32] }
    di      = { v175[32] }
    es      = { v176[16] }
    cs      = { v177[16] }
    ss      = { v178[16] }
    ds      = { v179[16] }
    fs      = { v180[16] }
    gs      = { v181[16] }
    cf      = { v182[1] }
    ?1      = { v183[1] }
    pf      = { v184[1] }
    ?3      = { v185[1] }
    af      = { v186[1] }
    ?5      = { v187[1] }
    zf      = { v188[1] }
    sf      = { v189[1] }
    tf      = { v190[1] }
    if      = { v191[1] }
    df      = { v192[1] }
    of      = { v193[1] }
    iopl0   = { v194[1] }
    iopl1   = { v195[1] }
    nt      = { v196[1] }
    ?15     = { v197[1] }
    rf      = { v198[1] }
    vm      = { v199[1] }
    ac      = { v200[1] }
    vif     = { v201[1] }
    vip     = { v202[1] }
    id      = { v203[1] }
    ?22     = { v204[1] }
    ?23     = { v205[1] }
    ?24     = { v206[1] }
    ?25     = { v207[1] }
    ?26     = { v208[1] }
    ?27     = { v209[1] }
    ?28     = { v210[1] }
    ?29     = { v211[1] }
    ?30     = { v212[1] }
    ?31     = { v213[1] }
    ip      = { 0x80482de[32] }
memory:
    addr=v173[32] value=v214[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v146[32]} }
    cx      = { {defs={}, expr=v147[32]} }
    dx      = { {defs={}, expr=v148[32]} }
    bx      = { {defs={}, expr=v149[32]} }
    sp      = { {defs={0x080482dd}, expr=(add[32] v151[32] 4[32])} }
    bp      = { {defs={0x080482dd}, expr=v192[32]} }
    si      = { {defs={}, expr=v152[32]} }
    di      = { {defs={}, expr=v153[32]} }
    es      = { {defs={}, expr=v154[16]} }
    cs      = { {defs={}, expr=v155[16]} }
    ss      = { {defs={}, expr=v156[16]} }
    ds      = { {defs={}, expr=v157[16]} }
    fs      = { {defs={}, expr=v158[16]} }
    gs      = { {defs={}, expr=v159[16]} }
    cf      = { {defs={}, expr=v160[1]} }
    ?1      = { {defs={}, expr=v161[1]} }
    pf      = { {defs={}, expr=v162[1]} }
    ?3      = { {defs={}, expr=v163[1]} }
    af      = { {defs={}, expr=v164[1]} }
    ?5      = { {defs={}, expr=v165[1]} }
    zf      = { {defs={}, expr=v166[1]} }
    sf      = { {defs={}, expr=v167[1]} }
    tf      = { {defs={}, expr=v168[1]} }
    if      = { {defs={}, expr=v169[1]} }
    df      = { {defs={}, expr=v170[1]} }
    of      = { {defs={}, expr=v171[1]} }
    iopl0   = { {defs={}, expr=v172[1]} }
    iopl1   = { {defs={}, expr=v173[1]} }
    nt      = { {defs={}, expr=v174[1]} }
    ?15     = { {defs={}, expr=v175[1]} }
    rf      = { {defs={}, expr=v176[1]} }
    vm      = { {defs={}, expr=v177[1]} }
    ac      = { {defs={}, expr=v178[1]} }
    vif     = { {defs={}, expr=v179[1]} }
    vip     = { {defs={}, expr=v180[1]} }
    id      = { {defs={}, expr=v181[1]} }
    ?22     = { {defs={}, expr=v182[1]} }
    ?23     = { {defs={}, expr=v183[1]} }
    ?24     = { {defs={}, expr=v184[1]} }
    ?25     = { {defs={}, expr=v185[1]} }
    ?26     = { {defs={}, expr=v186[1]} }
    ?27     = { {defs={}, expr=v187[1]} }
    ?28     = { {defs={}, expr=v188[1]} }
    ?29     = { {defs={}, expr=v189[1]} }
    ?30     = { {defs={}, expr=v190[1]} }
    ?31     = { {defs={}, expr=v191[1]} }
    ip      = { {defs={0x080482dd}, expr=0x080482de[32]} }
memory:
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 3[32])} value={defs={0x080482dd}, expr=(extract[8] 24[32] 32[32] v192[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 2[32])} value={defs={0x080482dd}, expr=(extract[8] 16[32] 24[32] v192[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 1[32])} value={defs={0x080482dd}, expr=(extract[8] 8[32] 16[32] v192[32])}
    addr={defs={}, expr=v151[32]} value={defs={0x080482dd}, expr=(extract[8] 0[32] 8[32] v192[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482de[32] }
memory:
0x80482de:ret    
== PartialSymbolic ==
registers:
    ax      = { v168[32] }
    cx      = { v169[32] }
    dx      = { v170[32] }
    bx      = { v171[32] }
    sp      = { v173+0x8[32] }
    bp      = { v214[32] }
    si      = { v174[32] }
    di      = { v175[32] }
    es      = { v176[16] }
    cs      = { v177[16] }
    ss      = { v178[16] }
    ds      = { v179[16] }
    fs      = { v180[16] }
    gs      = { v181[16] }
    cf      = { v182[1] }
    ?1      = { v183[1] }
    pf      = { v184[1] }
    ?3      = { v185[1] }
    af      = { v186[1] }
    ?5      = { v187[1] }
    zf      = { v188[1] }
    sf      = { v189[1] }
    tf      = { v190[1] }
    if      = { v191[1] }
    df      = { v192[1] }
    of      = { v193[1] }
    iopl0   = { v194[1] }
    iopl1   = { v195[1] }
    nt      = { v196[1] }
    ?15     = { v197[1] }
    rf      = { v198[1] }
    vm      = { v199[1] }
    ac      = { v200[1] }
    vif     = { v201[1] }
    vip     = { v202[1] }
    id      = { v203[1] }
    ?22     = { v204[1] }
    ?23     = { v205[1] }
    ?24     = { v206[1] }
    ?25     = { v207[1] }
    ?26     = { v208[1] }
    ?27     = { v209[1] }
    ?28     = { v210[1] }
    ?29     = { v211[1] }
    ?30     = { v212[1] }
    ?31     = { v213[1] }
    ip      = { v216[32] }
memory:
    addr=v173+0x4[32] value=v216[32]
    addr=v173[32] value=v214[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v146[32]} }
    cx      = { {defs={}, expr=v147[32]} }
    dx      = { {defs={}, expr=v148[32]} }
    bx      = { {defs={}, expr=v149[32]} }
    sp      = { {defs={0x080482dd,0x080482de}, expr=(add[32] (add[32] v151[32] 4[32]) 4[32])} }
    bp      = { {defs={0x080482dd}, expr=v192[32]} }
    si      = { {defs={}, expr=v152[32]} }
    di      = { {defs={}, expr=v153[32]} }
    es      = { {defs={}, expr=v154[16]} }
    cs      = { {defs={}, expr=v155[16]} }
    ss      = { {defs={}, expr=v156[16]} }
    ds      = { {defs={}, expr=v157[16]} }
    fs      = { {defs={}, expr=v158[16]} }
    gs      = { {defs={}, expr=v159[16]} }
    cf      = { {defs={}, expr=v160[1]} }
    ?1      = { {defs={}, expr=v161[1]} }
    pf      = { {defs={}, expr=v162[1]} }
    ?3      = { {defs={}, expr=v163[1]} }
    af      = { {defs={}, expr=v164[1]} }
    ?5      = { {defs={}, expr=v165[1]} }
    zf      = { {defs={}, expr=v166[1]} }
    sf      = { {defs={}, expr=v167[1]} }
    tf      = { {defs={}, expr=v168[1]} }
    if      = { {defs={}, expr=v169[1]} }
    df      = { {defs={}, expr=v170[1]} }
    of      = { {defs={}, expr=v171[1]} }
    iopl0   = { {defs={}, expr=v172[1]} }
    iopl1   = { {defs={}, expr=v173[1]} }
    nt      = { {defs={}, expr=v174[1]} }
    ?15     = { {defs={}, expr=v175[1]} }
    rf      = { {defs={}, expr=v176[1]} }
    vm      = { {defs={}, expr=v177[1]} }
    ac      = { {defs={}, expr=v178[1]} }
    vif     = { {defs={}, expr=v179[1]} }
    vip     = { {defs={}, expr=v180[1]} }
    id      = { {defs={}, expr=v181[1]} }
    ?22     = { {defs={}, expr=v182[1]} }
    ?23     = { {defs={}, expr=v183[1]} }
    ?24     = { {defs={}, expr=v184[1]} }
    ?25     = { {defs={}, expr=v185[1]} }
    ?26     = { {defs={}, expr=v186[1]} }
    ?27     = { {defs={}, expr=v187[1]} }
    ?28     = { {defs={}, expr=v188[1]} }
    ?29     = { {defs={}, expr=v189[1]} }
    ?30     = { {defs={}, expr=v190[1]} }
    ?31     = { {defs={}, expr=v191[1]} }
    ip      = { {defs={0x080482de}, expr=v197[32]} }
memory:
    addr={defs={0x080482dd,0x080482de}, expr=(add[32] (add[32] v151[32] 4[32]) 3[32])} value={defs={0x080482de}, expr=(extract[8] 24[32] 32[32] v197[32])}
    addr={defs={0x080482dd,0x080482de}, expr=(add[32] (add[32] v151[32] 4[32]) 2[32])} value={defs={0x080482de}, expr=(extract[8] 16[32] 24[32] v197[32])}
    addr={defs={0x080482dd,0x080482de}, expr=(add[32] (add[32] v151[32] 4[32]) 1[32])} value={defs={0x080482de}, expr=(extract[8] 8[32] 16[32] v197[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 4[32])} value={defs={0x080482de}, expr=(extract[8] 0[32] 8[32] v197[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 3[32])} value={defs={0x080482dd}, expr=(extract[8] 24[32] 32[32] v192[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 2[32])} value={defs={0x080482dd}, expr=(extract[8] 16[32] 24[32] v192[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 1[32])} value={defs={0x080482dd}, expr=(extract[8] 8[32] 16[32] v192[32])}
    addr={defs={}, expr=v151[32]} value={defs={0x080482dd}, expr=(extract[8] 0[32] 8[32] v192[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]
== PartialSymbolic ==
registers:
    ax      = { v220[32] }
    cx      = { v221[32] }
    dx      = { v222[32] }
    bx      = { v223[32] }
    sp      = { v224[32] }
    bp      = { v225[32] }
    si      = { v226[32] }
    di      = { v227[32] }
    es      = { v228[16] }
    cs      = { v229[16] }
    ss      = { v230[16] }
    ds      = { v231[16] }
    fs      = { v232[16] }
    gs      = { v233[16] }
    cf      = { v234[1] }
    ?1      = { v235[1] }
    pf      = { v236[1] }
    ?3      = { v237[1] }
    af      = { v238[1] }
    ?5      = { v239[1] }
    zf      = { v240[1] }
    sf      = { v241[1] }
    tf      = { v242[1] }
    if      = { v243[1] }
    df      = { v244[1] }
    of      = { v245[1] }
    iopl0   = { v246[1] }
    iopl1   = { v247[1] }
    nt      = { v248[1] }
    ?15     = { v249[1] }
    rf      = { v250[1] }
    vm      = { v251[1] }
    ac      = { v252[1] }
    vif     = { v253[1] }
    vip     = { v254[1] }
    id      = { v255[1] }
    ?22     = { v256[1] }
    ?23     = { v257[1] }
    ?24     = { v258[1] }
    ?25     = { v259[1] }
    ?26     = { v260[1] }
    ?27     = { v261[1] }
    ?28     = { v262[1] }
    ?29     = { v263[1] }
    ?30     = { v264[1] }
    ?31     = { v265[1] }
    ip      = { v266[32] }
memory:
    addr=0x80496d4[32] value=v266[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v204[32]} }
    cx      = { {defs={}, expr=v205[32]} }
    dx      = { {defs={}, expr=v206[32]} }
    bx      = { {defs={}, expr=v207[32]} }
    sp      = { {defs={}, expr=v208[32]} }
    bp      = { {defs={}, expr=v209[32]} }
    si      = { {defs={}, expr=v210[32]} }
    di      = { {defs={}, expr=v211[32]} }
    es      = { {defs={}, expr=v212[16]} }
    cs      = { {defs={}, expr=v213[16]} }
    ss      = { {defs={}, expr=v214[16]} }
    ds      = { {defs={}, expr=v215[16]} }
    fs      = { {defs={}, expr=v216[16]} }
    gs      = { {defs={}, expr=v217[16]} }
    cf      = { {defs={}, expr=v218[1]} }
    ?1      = { {defs={}, expr=v219[1]} }
    pf      = { {defs={}, expr=v220[1]} }
    ?3      = { {defs={}, expr=v221[1]} }
    af      = { {defs={}, expr=v222[1]} }
    ?5      = { {defs={}, expr=v223[1]} }
    zf      = { {defs={}, expr=v224[1]} }
    sf      = { {defs={}, expr=v225[1]} }
    tf      = { {defs={}, expr=v226[1]} }
    if      = { {defs={}, expr=v227[1]} }
    df      = { {defs={}, expr=v228[1]} }
    of      = { {defs={}, expr=v229[1]} }
    iopl0   = { {defs={}, expr=v230[1]} }
    iopl1   = { {defs={}, expr=v231[1]} }
    nt      = { {defs={}, expr=v232[1]} }
    ?15     = { {defs={}, expr=v233[1]} }
    rf      = { {defs={}, expr=v234[1]} }
    vm      = { {defs={}, expr=v235[1]} }
    ac      = { {defs={}, expr=v236[1]} }
    vif     = { {defs={}, expr=v237[1]} }
    vip     = { {defs={}, expr=v238[1]} }
    id      = { {defs={}, expr=v239[1]} }
    ?22     = { {defs={}, expr=v240[1]} }
    ?23     = { {defs={}, expr=v241[1]} }
    ?24     = { {defs={}, expr=v242[1]} }
    ?25     = { {defs={}, expr=v243[1]} }
    ?26     = { {defs={}, expr=v244[1]} }
    ?27     = { {defs={}, expr=v245[1]} }
    ?28     = { {defs={}, expr=v246[1]} }
    ?29     = { {defs={}, expr=v247[1]} }
    ?30     = { {defs={}, expr=v248[1]} }
    ?31     = { {defs={}, expr=v249[1]} }
    ip      = { {defs={0x080482f0}, expr=v250[32]} }
memory:
    addr={defs={0x080482f0}, expr=0x080496d7[32]} value={defs={0x080482f0}, expr=(extract[8] 24[32] 32[32] v250[32])}
    addr={defs={0x080482f0}, expr=0x080496d6[32]} value={defs={0x080482f0}, expr=(extract[8] 16[32] 24[32] v250[32])}
    addr={defs={0x080482f0}, expr=0x080496d5[32]} value={defs={0x080482f0}, expr=(extract[8] 8[32] 16[32] v250[32])}
    addr={defs={0x080482f0}, expr=0x080496d4[32]} value={defs={0x080482f0}, expr=(extract[8] 0[32] 8[32] v250[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]
== PartialSymbolic ==
registers:
    ax      = { v270[32] }
    cx      = { v271[32] }
    dx      = { v272[32] }
    bx      = { v273[32] }
    sp      = { v274[32] }
    bp      = { v275[32] }
    si      = { v276[32] }
    di      = { v277[32] }
    es      = { v278[16] }
    cs      = { v279[16] }
    ss      = { v280[16] }
    ds      = { v281[16] }
    fs      = { v282[16] }
    gs      = { v283[16] }
    cf      = { v284[1] }
    ?1      = { v285[1] }
    pf      = { v286[1] }
    ?3      = { v287[1] }
    af      = { v288[1] }
    ?5      = { v289[1] }
    zf      = { v290[1] }
    sf      = { v291[1] }
    tf      = { v292[1] }
    if      = { v293[1] }
    df      = { v294[1] }
    of      = { v295[1] }
    iopl0   = { v296[1] }
    iopl1   = { v297[1] }
    nt      = { v298[1] }
    ?15     = { v299[1] }
    rf      = { v300[1] }
    vm      = { v301[1] }
    ac      = { v302[1] }
    vif     = { v303[1] }
    vip     = { v304[1] }
    id      = { v305[1] }
    ?22     = { v306[1] }
    ?23     = { v307[1] }
    ?24     = { v308[1] }
    ?25     = { v309[1] }
    ?26     = { v310[1] }
    ?27     = { v311[1] }
    ?28     = { v312[1] }
    ?29     = { v313[1] }
    ?30     = { v314[1] }
    ?31     = { v315[1] }
    ip      = { v316[32] }
memory:
    addr=0x80496d8[32] value=v316[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v257[32]} }
    cx      = { {defs={}, expr=v258[32]} }
    dx      = { {defs={}, expr=v259[32]} }
    bx      = { {defs={}, expr=v260[32]} }
    sp      = { {defs={}, expr=v261[32]} }
    bp      = { {defs={}, expr=v262[32]} }
    si      = { {defs={}, expr=v263[32]} }
    di      = { {defs={}, expr=v264[32]} }
    es      = { {defs={}, expr=v265[16]} }
    cs      = { {defs={}, expr=v266[16]} }
    ss      = { {defs={}, expr=v267[16]} }
    ds      = { {defs={}, expr=v268[16]} }
    fs      = { {defs={}, expr=v269[16]} }
    gs      = { {defs={}, expr=v270[16]} }
    cf      = { {defs={}, expr=v271[1]} }
    ?1      = { {defs={}, expr=v272[1]} }
    pf      = { {defs={}, expr=v273[1]} }
    ?3      = { {defs={}, expr=v274[1]} }
    af      = { {defs={}, expr=v275[1]} }
    ?5      = { {defs={}, expr=v276[1]} }
    zf      = { {defs={}, expr=v277[1]} }
    sf      = { {defs={}, expr=v278[1]} }
    tf      = { {defs={}, expr=v279[1]} }
    if      = { {defs={}, expr=v280[1]} }
    df      = { {defs={}, expr=v281[1]} }
    of      = { {defs={}, expr=v282[1]} }
    iopl0   = { {defs={}, expr=v283[1]} }
    iopl1   = { {defs={}, expr=v284[1]} }
    nt      = { {defs={}, expr=v285[1]} }
    ?15     = { {defs={}, expr=v286[1]} }
    rf      = { {defs={}, expr=v287[1]} }
    vm      = { {defs={}, expr=v288[1]} }
    ac      = { {defs={}, expr=v289[1]} }
    vif     = { {defs={}, expr=v290[1]} }
    vip     = { {defs={}, expr=v291[1]} }
    id      = { {defs={}, expr=v292[1]} }
    ?22     = { {defs={}, expr=v293[1]} }
    ?23     = { {defs={}, expr=v294[1]} }
    ?24     = { {defs={}, expr=v295[1]} }
    ?25     = { {defs={}, expr=v296[1]} }
    ?26     = { {defs={}, expr=v297[1]} }
    ?27     = { {defs={}, expr=v298[1]} }
    ?28     = { {defs={}, expr=v299[1]} }
    ?29     = { {defs={}, expr=v300[1]} }
    ?30     = { {defs={}, expr=v301[1]} }
    ?31     = { {defs={}, expr=v302[1]} }
    ip      = { {defs={0x08048300}, expr=v303[32]} }
memory:
    addr={defs={0x08048300}, expr=0x080496db[32]} value={defs={0x08048300}, expr=(extract[8] 24[32] 32[32] v303[32])}
    addr={defs={0x08048300}, expr=0x080496da[32]} value={defs={0x08048300}, expr=(extract[8] 16[32] 24[32] v303[32])}
    addr={defs={0x08048300}, expr=0x080496d9[32]} value={defs={0x08048300}, expr=(extract[8] 8[32] 16[32] v303[32])}
    addr={defs={0x08048300}, expr=0x080496d8[32]} value={defs={0x08048300}, expr=(extract[8] 0[32] 8[32] v303[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]
== PartialSymbolic ==
registers:
    ax      = { v320[32] }
    cx      = { v321[32] }
    dx      = { v322[32] }
    bx      = { v323[32] }
    sp      = { v324[32] }
    bp      = { v325[32] }
    si      = { v326[32] }
    di      = { v327[32] }
    es      = { v328[16] }
    cs      = { v329[16] }
    ss      = { v330[16] }
    ds      = { v331[16] }
    fs      = { v332[16] }
    gs      = { v333[16] }
    cf      = { v334[1] }
    ?1      = { v335[1] }
    pf      = { v336[1] }
    ?3      = { v337[1] }
    af      = { v338[1] }
    ?5      = { v339[1] }
    zf      = { v340[1] }
    sf      = { v341[1] }
    tf      = { v342[1] }
    if      = { v343[1] }
    df      = { v344[1] }
    of      = { v345[1] }
    iopl0   = { v346[1] }
    iopl1   = { v347[1] }
    nt      = { v348[1] }
    ?15     = { v349[1] }
    rf      = { v350[1] }
    vm      = { v351[1] }
    ac      = { v352[1] }
    vif     = { v353[1] }
    vip     = { v354[1] }
    id      = { v355[1] }
    ?22     = { v356[1] }
    ?23     = { v357[1] }
    ?24     = { v358[1] }
    ?25     = { v359[1] }
    ?26     = { v360[1] }
    ?27     = { v361[1] }
    ?28     = { v362[1] }
    ?29     = { v363[1] }
    ?30     = { v364[1] }
    ?31     = { v365[1] }
    ip      = { v366[32] }
memory:
    addr=0x80496dc[32] value=v366[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v310[32]} }
    cx      = { {defs={}, expr=v311[32]} }
    dx      = { {defs={}, expr=v312[32]} }
    bx      = { {defs={}, expr=v313[32]} }
    sp      = { {defs={}, expr=v314[32]} }
    bp      = { {defs={}, expr=v315[32]} }
    si      = { {defs={}, expr=v316[32]} }
    di      = { {defs={}, expr=v317[32]} }
    es      = { {defs={}, expr=v318[16]} }
    cs      = { {defs={}, expr=v319[16]} }
    ss      = { {defs={}, expr=v320[16]} }
    ds      = { {defs={}, expr=v321[16]} }
    fs      = { {defs={}, expr=v322[16]} }
    gs      = { {defs={}, expr=v323[16]} }
    cf      = { {defs={}, expr=v324[1]} }
    ?1      = { {defs={}, expr=v325[1]} }
    pf      = { {defs={}, expr=v326[1]} }
    ?3      = { {defs={}, expr=v327[1]} }
    af      = { {defs={}, expr=v328[1]} }
    ?5      = { {defs={}, expr=v329[1]} }
    zf      = { {defs={}, expr=v330[1]} }
    sf      = { {defs={}, expr=v331[1]} }
    tf      = { {defs={}, expr=v332[1]} }
    if      = { {defs={}, expr=v333[1]} }
    df      = { {defs={}, expr=v334[1]} }
    of      = { {defs={}, expr=v335[1]} }
    iopl0   = { {defs={}, expr=v336[1]} }
    iopl1   = { {defs={}, expr=v337[1]} }
    nt      = { {defs={}, expr=v338[1]} }
    ?15     = { {defs={}, expr=v339[1]} }
    rf      = { {defs={}, expr=v340[1]} }
    vm      = { {defs={}, expr=v341[1]} }
    ac      = { {defs={}, expr=v342[1]} }
    vif     = { {defs={}, expr=v343[1]} }
    vip     = { {defs={}, expr=v344[1]} }
    id      = { {defs={}, expr=v345[1]} }
    ?22     = { {defs={}, expr=v346[1]} }
    ?23     = { {defs={}, expr=v347[1]} }
    ?24     = { {defs={}, expr=v348[1]} }
    ?25     = { {defs={}, expr=v349[1]} }
    ?26     = { {defs={}, expr=v350[1]} }
    ?27     = { {defs={}, expr=v351[1]} }
    ?28     = { {defs={}, expr=v352[1]} }
    ?29     = { {defs={}, expr=v353[1]} }
    ?30     = { {defs={}, expr=v354[1]} }
    ?31     = { {defs={}, expr=v355[1]} }
    ip      = { {defs={0x08048310}, expr=v356[32]} }
memory:
    addr={defs={0x08048310}, expr=0x080496df[32]} value={defs={0x08048310}, expr=(extract[8] 24[32] 32[32] v356[32])}
    addr={defs={0x08048310}, expr=0x080496de[32]} value={defs={0x08048310}, expr=(extract[8] 16[32] 24[32] v356[32])}
    addr={defs={0x08048310}, expr=0x080496dd[32]} value={defs={0x08048310}, expr=(extract[8] 8[32] 16[32] v356[32])}
    addr={defs={0x08048310}, expr=0x080496dc[32]} value={defs={0x08048310}, expr=(extract[8] 0[32] 8[32] v356[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]
== PartialSymbolic ==
registers:
    ax      = { v370[32] }
    cx      = { v371[32] }
    dx      = { v372[32] }
    bx      = { v373[32] }
    sp      = { v374[32] }
    bp      = { v375[32] }
    si      = { v376[32] }
    di      = { v377[32] }
    es      = { v378[16] }
    cs      = { v379[16] }
    ss      = { v380[16] }
    ds      = { v381[16] }
    fs      = { v382[16] }
    gs      = { v383[16] }
    cf      = { v384[1] }
    ?1      = { v385[1] }
    pf      = { v386[1] }
    ?3      = { v387[1] }
    af      = { v388[1] }
    ?5      = { v389[1] }
    zf      = { v390[1] }
    sf      = { v391[1] }
    tf      = { v392[1] }
    if      = { v393[1] }
    df      = { v394[1] }
    of      = { v395[1] }
    iopl0   = { v396[1] }
    iopl1   = { v397[1] }
    nt      = { v398[1] }
    ?15     = { v399[1] }
    rf      = { v400[1] }
    vm      = { v401[1] }
    ac      = { v402[1] }
    vif     = { v403[1] }
    vip     = { v404[1] }
    id      = { v405[1] }
    ?22     = { v406[1] }
    ?23     = { v407[1] }
    ?24     = { v408[1] }
    ?25     = { v409[1] }
    ?26     = { v410[1] }
    ?27     = { v411[1] }
    ?28     = { v412[1] }
    ?29     = { v413[1] }
    ?30     = { v414[1] }
    ?31     = { v415[1] }
    ip      = { v416[32] }
memory:
    addr=0x80496e0[32] value=v416[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v363[32]} }
    cx      = { {defs={}, expr=v364[32]} }
    dx      = { {defs={}, expr=v365[32]} }
    bx      = { {defs={}, expr=v366[32]} }
    sp      = { {defs={}, expr=v367[32]} }
    bp      = { {defs={}, expr=v368[32]} }
    si      = { {defs={}, expr=v369[32]} }
    di      = { {defs={}, expr=v370[32]} }
    es      = { {defs={}, expr=v371[16]} }
    cs      = { {defs={}, expr=v372[16]} }
    ss      = { {defs={}, expr=v373[16]} }
    ds      = { {defs={}, expr=v374[16]} }
    fs      = { {defs={}, expr=v375[16]} }
    gs      = { {defs={}, expr=v376[16]} }
    cf      = { {defs={}, expr=v377[1]} }
    ?1      = { {defs={}, expr=v378[1]} }
    pf      = { {defs={}, expr=v379[1]} }
    ?3      = { {defs={}, expr=v380[1]} }
    af      = { {defs={}, expr=v381[1]} }
    ?5      = { {defs={}, expr=v382[1]} }
    zf      = { {defs={}, expr=v383[1]} }
    sf      = { {defs={}, expr=v384[1]} }
    tf      = { {defs={}, expr=v385[1]} }
    if      = { {defs={}, expr=v386[1]} }
    df      = { {defs={}, expr=v387[1]} }
    of      = { {defs={}, expr=v388[1]} }
    iopl0   = { {defs={}, expr=v389[1]} }
    iopl1   = { {defs={}, expr=v390[1]} }
    nt      = { {defs={}, expr=v391[1]} }
    ?15     = { {defs={}, expr=v392[1]} }
    rf      = { {defs={}, expr=v393[1]} }
    vm      = { {defs={}, expr=v394[1]} }
    ac      = { {defs={}, expr=v395[1]} }
    vif     = { {defs={}, expr=v396[1]} }
    vip     = { {defs={}, expr=v397[1]} }
    id      = { {defs={}, expr=v398[1]} }
    ?22     = { {defs={}, expr=v399[1]} }
    ?23     = { {defs={}, expr=v400[1]} }
    ?24     = { {defs={}, expr=v401[1]} }
    ?25     = { {defs={}, expr=v402[1]} }
    ?26     = { {defs={}, expr=v403[1]} }
    ?27     = { {defs={}, expr=v404[1]} }
    ?28     = { {defs={}, expr=v405[1]} }
    ?29     = { {defs={}, expr=v406[1]} }
    ?30     = { {defs={}, expr=v407[1]} }
    ?31     = { {defs={}, expr=v408[1]} }
    ip      = { {defs={0x08048320}, expr=v409[32]} }
memory:
    addr={defs={0x08048320}, expr=0x080496e3[32]} value={defs={0x08048320}, expr=(extract[8] 24[32] 32[32] v409[32])}
    addr={defs={0x08048320}, expr=0x080496e2[32]} value={defs={0x08048320}, expr=(extract[8] 16[32] 24[32] v409[32])}
    addr={defs={0x08048320}, expr=0x080496e1[32]} value={defs={0x08048320}, expr=(extract[8] 8[32] 16[32] v409[32])}
    addr={defs={0x08048320}, expr=0x080496e0[32]} value={defs={0x08048320}, expr=(extract[8] 0[32] 8[32] v409[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]
== PartialSymbolic ==
registers:
    ax      = { v420[32] }
    cx      = { v421[32] }
    dx      = { v422[32] }
    bx      = { v423[32] }
    sp      = { v424[32] }
    bp      = { v425[32] }
    si      = { v426[32] }
    di      = { v427[32] }
    es      = { v428[16] }
    cs      = { v429[16] }
    ss      = { v430[16] }
    ds      = { v431[16] }
    fs      = { v432[16] }
    gs      = { v433[16] }
    cf      = { v434[1] }
    ?1      = { v435[1] }
    pf      = { v436[1] }
    ?3      = { v437[1] }
    af      = { v438[1] }
    ?5      = { v439[1] }
    zf      = { v440[1] }
    sf      = { v441[1] }
    tf      = { v442[1] }
    if      = { v443[1] }
    df      = { v444[1] }
    of      = { v445[1] }
    iopl0   = { v446[1] }
    iopl1   = { v447[1] }
    nt      = { v448[1] }
    ?15     = { v449[1] }
    rf      = { v450[1] }
    vm      = { v451[1] }
    ac      = { v452[1] }
    vif     = { v453[1] }
    vip     = { v454[1] }
    id      = { v455[1] }
    ?22     = { v456[1] }
    ?23     = { v457[1] }
    ?24     = { v458[1] }
    ?25     = { v459[1] }
    ?26     = { v460[1] }
    ?27     = { v461[1] }
    ?28     = { v462[1] }
    ?29     = { v463[1] }
    ?30     = { v464[1] }
    ?31     = { v465[1] }
    ip      = { v466[32] }
memory:
    addr=0x80496e4[32] value=v466[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v416[32]} }
    cx      = { {defs={}, expr=v417[32]} }
    dx      = { {defs={}, expr=v418[32]} }
    bx      = { {defs={}, expr=v419[32]} }
    sp      = { {defs={}, expr=v420[32]} }
    bp      = { {defs={}, expr=v421[32]} }
    si      = { {defs={}, expr=v422[32]} }
    di      = { {defs={}, expr=v423[32]} }
    es      = { {defs={}, expr=v424[16]} }
    cs      = { {defs={}, expr=v425[16]} }
    ss      = { {defs={}, expr=v426[16]} }
    ds      = { {defs={}, expr=v427[16]} }
    fs      = { {defs={}, expr=v428[16]} }
    gs      = { {defs={}, expr=v429[16]} }
    cf      = { {defs={}, expr=v430[1]} }
    ?1      = { {defs={}, expr=v431[1]} }
    pf      = { {defs={}, expr=v432[1]} }
    ?3      = { {defs={}, expr=v433[1]} }
    af      = { {defs={}, expr=v434[1]} }
    ?5      = { {defs={}, expr=v435[1]} }
    zf      = { {defs={}, expr=v436[1]} }
    sf      = { {defs={}, expr=v437[1]} }
    tf      = { {defs={}, expr=v438[1]} }
    if      = { {defs={}, expr=v439[1]} }
    df      = { {defs={}, expr=v440[1]} }
    of      = { {defs={}, expr=v441[1]} }
    iopl0   = { {defs={}, expr=v442[1]} }
    iopl1   = { {defs={}, expr=v443[1]} }
    nt      = { {defs={}, expr=v444[1]} }
    ?15     = { {defs={}, expr=v445[1]} }
    rf      = { {defs={}, expr=v446[1]} }
    vm      = { {defs={}, expr=v447[1]} }
    ac      = { {defs={}, expr=v448[1]} }
    vif     = { {defs={}, expr=v449[1]} }
    vip     = { {defs={}, expr=v450[1]} }
    id      = { {defs={}, expr=v451[1]} }
    ?22     = { {defs={}, expr=v452[1]} }
    ?23     = { {defs={}, expr=v453[1]} }
    ?24     = { {defs={}, expr=v454[1]} }
    ?25     = { {defs={}, expr=v455[1]} }
    ?26     = { {defs={}, expr=v456[1]} }
    ?27     = { {defs={}, expr=v457[1]} }
    ?28     = { {defs={}, expr=v458[1]} }
    ?29     = { {defs={}, expr=v459[1]} }
    ?30     = { {defs={}, expr=v460[1]} }
    ?31     = { {defs={}, expr=v461[1]} }
    ip      = { {defs={0x08048330}, expr=v462[32]} }
memory:
    addr={defs={0x08048330}, expr=0x080496e7[32]} value={defs={0x08048330}, expr=(extract[8] 24[32] 32[32] v462[32])}
    addr={defs={0x08048330}, expr=0x080496e6[32]} value={defs={0x08048330}, expr=(extract[8] 16[32] 24[32] v462[32])}
    addr={defs={0x08048330}, expr=0x080496e5[32]} value={defs={0x08048330}, expr=(extract[8] 8[32] 16[32] v462[32])}
    addr={defs={0x08048330}, expr=0x080496e4[32]} value={defs={0x08048330}, expr=(extract[8] 0[32] 8[32] v462[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v471[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v474[32] }
    bp      = { 0x0[32] }
    si      = { v476[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { 0x1[1] }
    ?3      = { v487[1] }
    af      = { v516[1] }
    ?5      = { v489[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048342[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={}, expr=v470[32]} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={}, expr=v473[32]} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={}, expr=v475[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048340}, expr=1[1]} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v515[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048340}, expr=1[1]} }
    sf      = { {defs={0x08048340}, expr=0[1]} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048340}, expr=0x08048342[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048342[32] }
memory:
0x8048342:pop    esi
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v471[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v474+0x4[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { 0x1[1] }
    ?3      = { v487[1] }
    af      = { v516[1] }
    ?5      = { v489[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048343[32] }
memory:
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={}, expr=v470[32]} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048340}, expr=1[1]} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v515[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048340}, expr=1[1]} }
    sf      = { {defs={0x08048340}, expr=0[1]} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048342}, expr=0x08048343[32]} }
memory:
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048343[32] }
memory:
0x8048343:mov    ecx, esp
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v474+0x4[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { 0x1[1] }
    ?3      = { v487[1] }
    af      = { v516[1] }
    ?5      = { v489[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048345[32] }
memory:
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048340}, expr=1[1]} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v515[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048340}, expr=1[1]} }
    sf      = { {defs={0x08048340}, expr=0[1]} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048343}, expr=0x08048345[32]} }
memory:
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048345[32] }
memory:
0x8048345:and    esp, 0xf0<-0x10>
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048348[32] }
memory:
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345}, expr=(bv-and[32] (add[32] v473[32] 4[32]) -16[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048345}, expr=0x08048348[32]} }
memory:
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048348[32] }
memory:
0x8048348:push   eax
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0x4[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048349[32] }
memory:
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048348}, expr=0x08048349[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffffc[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048349[32] }
memory:
0x8048349:push   esp
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0x8[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x804834a[32] }
memory:
    addr=v519-0x8[32] value=v519-0x4[32]
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048349}, expr=0x0804834a[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffff8[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804834a[32] }
memory:
0x804834a:push   edx
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0xc[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x804834b[32] }
memory:
    addr=v519-0xc[32] value=v472[32]
    addr=v519-0x8[32] value=v519-0x4[32]
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x0804834a}, expr=0x0804834b[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffff4[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804834b[32] }
memory:
0x804834b:push   0x08048520<__libc_csu_fini>
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0x10[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048350[32] }
memory:
    addr=v519-0x10[32] value=0x8048520[32]
    addr=v519-0xc[32] value=v472[32]
    addr=v519-0x8[32] value=v519-0x4[32]
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x0804834b}, expr=0x08048350[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffff0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048350[32] }
memory:
0x8048350:push   0x080484b0<__libc_csu_init>
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0x14[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048355[32] }
memory:
    addr=v519-0x14[32] value=0x80484b0[32]
    addr=v519-0x10[32] value=0x8048520[32]
    addr=v519-0xc[32] value=v472[32]
    addr=v519-0x8[32] value=v519-0x4[32]
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048350}, expr=0x08048355[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffec[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048355[32] }
memory:
0x8048355:push   ecx
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0x18[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048356[32] }
memory:
    addr=v519-0x18[32] value=v474+0x4[32]
    addr=v519-0x14[32] value=0x80484b0[32]
    addr=v519-0x10[32] value=0x8048520[32]
    addr=v519-0xc[32] value=v472[32]
    addr=v519-0x8[32] value=v519-0x4[32]
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048355}, expr=0x08048356[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 24[32] 32[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 16[32] 24[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 8[32] 16[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 0[32] 8[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffe8[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048356[32] }
memory:
0x8048356:push   esi
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0x1c[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048357[32] }
memory:
    addr=v519-0x1c[32] value=v517[32]
    addr=v519-0x18[32] value=v474+0x4[32]
    addr=v519-0x14[32] value=0x80484b0[32]
    addr=v519-0x10[32] value=0x8048520[32]
    addr=v519-0xc[32] value=v472[32]
    addr=v519-0x8[32] value=v519-0x4[32]
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048356}, expr=0x08048357[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 0[32] 8[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 24[32] 32[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 16[32] 24[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 8[32] 16[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 0[32] 8[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffe4[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048357[32] }
memory:
0x8048357:push   0x08048410<main>
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0x20[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x804835c[32] }
memory:
    addr=v519-0x20[32] value=0x8048410[32]
    addr=v519-0x1c[32] value=v517[32]
    addr=v519-0x18[32] value=v474+0x4[32]
    addr=v519-0x14[32] value=0x80484b0[32]
    addr=v519-0x10[32] value=0x8048520[32]
    addr=v519-0xc[32] value=v472[32]
    addr=v519-0x8[32] value=v519-0x4[32]
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048357}, expr=0x0804835c[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048357}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048357}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048357}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048357}, expr=16[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 0[32] 8[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 24[32] 32[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 16[32] 24[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 8[32] 16[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 0[32] 8[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffe0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804835c[32] }
memory:
0x804835c:call   0x08048310<__libc_start_main@plt>
== PartialSymbolic ==
registers:
    ax      = { v470[32] }
    cx      = { v474+0x4[32] }
    dx      = { v472[32] }
    bx      = { v473[32] }
    sp      = { v519-0x24[32] }
    bp      = { 0x0[32] }
    si      = { v517[32] }
    di      = { v477[32] }
    es      = { v478[16] }
    cs      = { v479[16] }
    ss      = { v480[16] }
    ds      = { v481[16] }
    fs      = { v482[16] }
    gs      = { v483[16] }
    cf      = { 0x0[1] }
    ?1      = { v485[1] }
    pf      = { -v533+0x1[1] }
    ?3      = { v487[1] }
    af      = { v536[1] }
    ?5      = { v489[1] }
    zf      = { v535[1] }
    sf      = { v534[1] }
    tf      = { v492[1] }
    if      = { v493[1] }
    df      = { v494[1] }
    of      = { 0x0[1] }
    iopl0   = { v496[1] }
    iopl1   = { v497[1] }
    nt      = { v498[1] }
    ?15     = { v499[1] }
    rf      = { v500[1] }
    vm      = { v501[1] }
    ac      = { v502[1] }
    vif     = { v503[1] }
    vip     = { v504[1] }
    id      = { v505[1] }
    ?22     = { v506[1] }
    ?23     = { v507[1] }
    ?24     = { v508[1] }
    ?25     = { v509[1] }
    ?26     = { v510[1] }
    ?27     = { v511[1] }
    ?28     = { v512[1] }
    ?29     = { v513[1] }
    ?30     = { v514[1] }
    ?31     = { v515[1] }
    ip      = { 0x8048310[32] }
memory:
    addr=v519-0x24[32] value=0x8048361[32]
    addr=v519-0x20[32] value=0x8048410[32]
    addr=v519-0x1c[32] value=v517[32]
    addr=v519-0x18[32] value=v474+0x4[32]
    addr=v519-0x14[32] value=0x80484b0[32]
    addr=v519-0x10[32] value=0x8048520[32]
    addr=v519-0xc[32] value=v472[32]
    addr=v519-0x8[32] value=v519-0x4[32]
    addr=v519-0x4[32] value=v470[32]
    addr=v474[32] value=v517[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={}, expr=0x08048310[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804835c}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804835c}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804835c}, expr=-125[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804835c}, expr=97[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048357}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048357}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048357}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048357}, expr=16[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 0[32] 8[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 24[32] 32[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 16[32] 24[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 8[32] 16[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 0[32] 8[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { 0xffffffdc[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048310[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
== PartialSymbolic ==
registers:
    ax      = { v539[32] }
    cx      = { v540[32] }
    dx      = { v541[32] }
    bx      = { v542[32] }
    sp      = { v543[32] }
    bp      = { v544[32] }
    si      = { v545[32] }
    di      = { v546[32] }
    es      = { v547[16] }
    cs      = { v548[16] }
    ss      = { v549[16] }
    ds      = { v550[16] }
    fs      = { v551[16] }
    gs      = { v552[16] }
    cf      = { v553[1] }
    ?1      = { v554[1] }
    pf      = { v555[1] }
    ?3      = { v556[1] }
    af      = { v557[1] }
    ?5      = { v558[1] }
    zf      = { v559[1] }
    sf      = { v560[1] }
    tf      = { v561[1] }
    if      = { v562[1] }
    df      = { v563[1] }
    of      = { v564[1] }
    iopl0   = { v565[1] }
    iopl1   = { v566[1] }
    nt      = { v567[1] }
    ?15     = { v568[1] }
    rf      = { v569[1] }
    vm      = { v570[1] }
    ac      = { v571[1] }
    vif     = { v572[1] }
    vip     = { v573[1] }
    id      = { v574[1] }
    ?22     = { v575[1] }
    ?23     = { v576[1] }
    ?24     = { v577[1] }
    ?25     = { v578[1] }
    ?26     = { v579[1] }
    ?27     = { v580[1] }
    ?28     = { v581[1] }
    ?29     = { v582[1] }
    ?30     = { v583[1] }
    ?31     = { v584[1] }
    ip      = { 0x8048361[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v524[32]} }
    cx      = { {defs={}, expr=v525[32]} }
    dx      = { {defs={}, expr=v526[32]} }
    bx      = { {defs={}, expr=v527[32]} }
    sp      = { {defs={}, expr=v528[32]} }
    bp      = { {defs={}, expr=v529[32]} }
    si      = { {defs={}, expr=v530[32]} }
    di      = { {defs={}, expr=v531[32]} }
    es      = { {defs={}, expr=v532[16]} }
    cs      = { {defs={}, expr=v533[16]} }
    ss      = { {defs={}, expr=v534[16]} }
    ds      = { {defs={}, expr=v535[16]} }
    fs      = { {defs={}, expr=v536[16]} }
    gs      = { {defs={}, expr=v537[16]} }
    cf      = { {defs={}, expr=v538[1]} }
    ?1      = { {defs={}, expr=v539[1]} }
    pf      = { {defs={}, expr=v540[1]} }
    ?3      = { {defs={}, expr=v541[1]} }
    af      = { {defs={}, expr=v542[1]} }
    ?5      = { {defs={}, expr=v543[1]} }
    zf      = { {defs={}, expr=v544[1]} }
    sf      = { {defs={}, expr=v545[1]} }
    tf      = { {defs={}, expr=v546[1]} }
    if      = { {defs={}, expr=v547[1]} }
    df      = { {defs={}, expr=v548[1]} }
    of      = { {defs={}, expr=v549[1]} }
    iopl0   = { {defs={}, expr=v550[1]} }
    iopl1   = { {defs={}, expr=v551[1]} }
    nt      = { {defs={}, expr=v552[1]} }
    ?15     = { {defs={}, expr=v553[1]} }
    rf      = { {defs={}, expr=v554[1]} }
    vm      = { {defs={}, expr=v555[1]} }
    ac      = { {defs={}, expr=v556[1]} }
    vif     = { {defs={}, expr=v557[1]} }
    vip     = { {defs={}, expr=v558[1]} }
    id      = { {defs={}, expr=v559[1]} }
    ?22     = { {defs={}, expr=v560[1]} }
    ?23     = { {defs={}, expr=v561[1]} }
    ?24     = { {defs={}, expr=v562[1]} }
    ?25     = { {defs={}, expr=v563[1]} }
    ?26     = { {defs={}, expr=v564[1]} }
    ?27     = { {defs={}, expr=v565[1]} }
    ?28     = { {defs={}, expr=v566[1]} }
    ?29     = { {defs={}, expr=v567[1]} }
    ?30     = { {defs={}, expr=v568[1]} }
    ?31     = { {defs={}, expr=v569[1]} }
    ip      = { {defs={}, expr=0x08048361[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048361[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v587[32] }
    cx      = { v588[32] }
    dx      = { v589[32] }
    bx      = { v590[32] }
    sp      = { v591-0x4[32] }
    bp      = { v592[32] }
    si      = { v593[32] }
    di      = { v594[32] }
    es      = { v595[16] }
    cs      = { v596[16] }
    ss      = { v597[16] }
    ds      = { v598[16] }
    fs      = { v599[16] }
    gs      = { v600[16] }
    cf      = { v601[1] }
    ?1      = { v602[1] }
    pf      = { v603[1] }
    ?3      = { v604[1] }
    af      = { v605[1] }
    ?5      = { v606[1] }
    zf      = { v607[1] }
    sf      = { v608[1] }
    tf      = { v609[1] }
    if      = { v610[1] }
    df      = { v611[1] }
    of      = { v612[1] }
    iopl0   = { v613[1] }
    iopl1   = { v614[1] }
    nt      = { v615[1] }
    ?15     = { v616[1] }
    rf      = { v617[1] }
    vm      = { v618[1] }
    ac      = { v619[1] }
    vif     = { v620[1] }
    vip     = { v621[1] }
    id      = { v622[1] }
    ?22     = { v623[1] }
    ?23     = { v624[1] }
    ?24     = { v625[1] }
    ?25     = { v626[1] }
    ?26     = { v627[1] }
    ?27     = { v628[1] }
    ?28     = { v629[1] }
    ?29     = { v630[1] }
    ?30     = { v631[1] }
    ?31     = { v632[1] }
    ip      = { 0x8048365[32] }
memory:
    addr=v591-0x4[32] value=v592[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    bp      = { {defs={}, expr=v577[32]} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048364}, expr=0x08048365[32]} }
memory:
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048365[32] }
memory:
0x8048365:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v587[32] }
    cx      = { v588[32] }
    dx      = { v589[32] }
    bx      = { v590[32] }
    sp      = { v591-0x4[32] }
    bp      = { v591-0x4[32] }
    si      = { v593[32] }
    di      = { v594[32] }
    es      = { v595[16] }
    cs      = { v596[16] }
    ss      = { v597[16] }
    ds      = { v598[16] }
    fs      = { v599[16] }
    gs      = { v600[16] }
    cf      = { v601[1] }
    ?1      = { v602[1] }
    pf      = { v603[1] }
    ?3      = { v604[1] }
    af      = { v605[1] }
    ?5      = { v606[1] }
    zf      = { v607[1] }
    sf      = { v608[1] }
    tf      = { v609[1] }
    if      = { v610[1] }
    df      = { v611[1] }
    of      = { v612[1] }
    iopl0   = { v613[1] }
    iopl1   = { v614[1] }
    nt      = { v615[1] }
    ?15     = { v616[1] }
    rf      = { v617[1] }
    vm      = { v618[1] }
    ac      = { v619[1] }
    vif     = { v620[1] }
    vip     = { v621[1] }
    id      = { v622[1] }
    ?22     = { v623[1] }
    ?23     = { v624[1] }
    ?24     = { v625[1] }
    ?25     = { v626[1] }
    ?26     = { v627[1] }
    ?27     = { v628[1] }
    ?28     = { v629[1] }
    ?29     = { v630[1] }
    ?30     = { v631[1] }
    ?31     = { v632[1] }
    ip      = { 0x8048367[32] }
memory:
    addr=v591-0x4[32] value=v592[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    bp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048365}, expr=0x08048367[32]} }
memory:
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048367[32] }
memory:
0x8048367:push   ebx
== PartialSymbolic ==
registers:
    ax      = { v587[32] }
    cx      = { v588[32] }
    dx      = { v589[32] }
    bx      = { v590[32] }
    sp      = { v591-0x8[32] }
    bp      = { v591-0x4[32] }
    si      = { v593[32] }
    di      = { v594[32] }
    es      = { v595[16] }
    cs      = { v596[16] }
    ss      = { v597[16] }
    ds      = { v598[16] }
    fs      = { v599[16] }
    gs      = { v600[16] }
    cf      = { v601[1] }
    ?1      = { v602[1] }
    pf      = { v603[1] }
    ?3      = { v604[1] }
    af      = { v605[1] }
    ?5      = { v606[1] }
    zf      = { v607[1] }
    sf      = { v608[1] }
    tf      = { v609[1] }
    if      = { v610[1] }
    df      = { v611[1] }
    of      = { v612[1] }
    iopl0   = { v613[1] }
    iopl1   = { v614[1] }
    nt      = { v615[1] }
    ?15     = { v616[1] }
    rf      = { v617[1] }
    vm      = { v618[1] }
    ac      = { v619[1] }
    vif     = { v620[1] }
    vip     = { v621[1] }
    id      = { v622[1] }
    ?22     = { v623[1] }
    ?23     = { v624[1] }
    ?24     = { v625[1] }
    ?25     = { v626[1] }
    ?26     = { v627[1] }
    ?27     = { v628[1] }
    ?28     = { v629[1] }
    ?29     = { v630[1] }
    ?30     = { v631[1] }
    ?31     = { v632[1] }
    ip      = { 0x8048368[32] }
memory:
    addr=v591-0x8[32] value=v590[32]
    addr=v591-0x4[32] value=v592[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364,0x08048367}, expr=(add[32] (add[32] v576[32] -4[32]) -4[32])} }
    bp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048367}, expr=0x08048368[32]} }
memory:
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048367}, expr=(extract[8] 24[32] 32[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048367}, expr=(extract[8] 16[32] 24[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048367}, expr=(extract[8] 8[32] 16[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] v576[32] -4[32]) -4[32])} value={defs={0x08048367}, expr=(extract[8] 0[32] 8[32] v575[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048368[32] }
memory:
0x8048368:push   ecx
== PartialSymbolic ==
registers:
    ax      = { v587[32] }
    cx      = { v588[32] }
    dx      = { v589[32] }
    bx      = { v590[32] }
    sp      = { v591-0xc[32] }
    bp      = { v591-0x4[32] }
    si      = { v593[32] }
    di      = { v594[32] }
    es      = { v595[16] }
    cs      = { v596[16] }
    ss      = { v597[16] }
    ds      = { v598[16] }
    fs      = { v599[16] }
    gs      = { v600[16] }
    cf      = { v601[1] }
    ?1      = { v602[1] }
    pf      = { v603[1] }
    ?3      = { v604[1] }
    af      = { v605[1] }
    ?5      = { v606[1] }
    zf      = { v607[1] }
    sf      = { v608[1] }
    tf      = { v609[1] }
    if      = { v610[1] }
    df      = { v611[1] }
    of      = { v612[1] }
    iopl0   = { v613[1] }
    iopl1   = { v614[1] }
    nt      = { v615[1] }
    ?15     = { v616[1] }
    rf      = { v617[1] }
    vm      = { v618[1] }
    ac      = { v619[1] }
    vif     = { v620[1] }
    vip     = { v621[1] }
    id      = { v622[1] }
    ?22     = { v623[1] }
    ?23     = { v624[1] }
    ?24     = { v625[1] }
    ?25     = { v626[1] }
    ?26     = { v627[1] }
    ?27     = { v628[1] }
    ?28     = { v629[1] }
    ?29     = { v630[1] }
    ?30     = { v631[1] }
    ?31     = { v632[1] }
    ip      = { 0x8048369[32] }
memory:
    addr=v591-0xc[32] value=v588[32]
    addr=v591-0x8[32] value=v590[32]
    addr=v591-0x4[32] value=v592[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048368}, expr=0x08048369[32]} }
memory:
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048368}, expr=(extract[8] 24[32] 32[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048368}, expr=(extract[8] 16[32] 24[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048368}, expr=(extract[8] 8[32] 16[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048368}, expr=(extract[8] 0[32] 8[32] v573[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048367}, expr=(extract[8] 24[32] 32[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048367}, expr=(extract[8] 16[32] 24[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048367}, expr=(extract[8] 8[32] 16[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] v576[32] -4[32]) -4[32])} value={defs={0x08048367}, expr=(extract[8] 0[32] 8[32] v575[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048369[32] }
memory:
0x8048369:call   0x0804836e<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v587[32] }
    cx      = { v588[32] }
    dx      = { v589[32] }
    bx      = { v590[32] }
    sp      = { v591-0x10[32] }
    bp      = { v591-0x4[32] }
    si      = { v593[32] }
    di      = { v594[32] }
    es      = { v595[16] }
    cs      = { v596[16] }
    ss      = { v597[16] }
    ds      = { v598[16] }
    fs      = { v599[16] }
    gs      = { v600[16] }
    cf      = { v601[1] }
    ?1      = { v602[1] }
    pf      = { v603[1] }
    ?3      = { v604[1] }
    af      = { v605[1] }
    ?5      = { v606[1] }
    zf      = { v607[1] }
    sf      = { v608[1] }
    tf      = { v609[1] }
    if      = { v610[1] }
    df      = { v611[1] }
    of      = { v612[1] }
    iopl0   = { v613[1] }
    iopl1   = { v614[1] }
    nt      = { v615[1] }
    ?15     = { v616[1] }
    rf      = { v617[1] }
    vm      = { v618[1] }
    ac      = { v619[1] }
    vif     = { v620[1] }
    vip     = { v621[1] }
    id      = { v622[1] }
    ?22     = { v623[1] }
    ?23     = { v624[1] }
    ?24     = { v625[1] }
    ?25     = { v626[1] }
    ?26     = { v627[1] }
    ?27     = { v628[1] }
    ?28     = { v629[1] }
    ?29     = { v630[1] }
    ?30     = { v631[1] }
    ?31     = { v632[1] }
    ip      = { 0x804836e[32] }
memory:
    addr=v591-0x10[32] value=0x804836e[32]
    addr=v591-0xc[32] value=v588[32]
    addr=v591-0x8[32] value=v590[32]
    addr=v591-0x4[32] value=v592[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={}, expr=0x0804836e[32]} }
memory:
    addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048369}, expr=8[8]}
    addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048369}, expr=4[8]}
    addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048369}, expr=-125[8]}
    addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048369}, expr=110[8]}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048368}, expr=(extract[8] 24[32] 32[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048368}, expr=(extract[8] 16[32] 24[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048368}, expr=(extract[8] 8[32] 16[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048368}, expr=(extract[8] 0[32] 8[32] v573[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048367}, expr=(extract[8] 24[32] 32[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048367}, expr=(extract[8] 16[32] 24[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048367}, expr=(extract[8] 8[32] 16[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] v576[32] -4[32]) -4[32])} value={defs={0x08048367}, expr=(extract[8] 0[32] 8[32] v575[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804836e[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v635[32] }
    cx      = { v636[32] }
    dx      = { v637[32] }
    bx      = { v681[32] }
    sp      = { v639+0x4[32] }
    bp      = { v640[32] }
    si      = { v641[32] }
    di      = { v642[32] }
    es      = { v643[16] }
    cs      = { v644[16] }
    ss      = { v645[16] }
    ds      = { v646[16] }
    fs      = { v647[16] }
    gs      = { v648[16] }
    cf      = { v649[1] }
    ?1      = { v650[1] }
    pf      = { v651[1] }
    ?3      = { v652[1] }
    af      = { v653[1] }
    ?5      = { v654[1] }
    zf      = { v655[1] }
    sf      = { v656[1] }
    tf      = { v657[1] }
    if      = { v658[1] }
    df      = { v659[1] }
    of      = { v660[1] }
    iopl0   = { v661[1] }
    iopl1   = { v662[1] }
    nt      = { v663[1] }
    ?15     = { v664[1] }
    rf      = { v665[1] }
    vm      = { v666[1] }
    ac      = { v667[1] }
    vif     = { v668[1] }
    vip     = { v669[1] }
    id      = { v670[1] }
    ?22     = { v671[1] }
    ?23     = { v672[1] }
    ?24     = { v673[1] }
    ?25     = { v674[1] }
    ?26     = { v675[1] }
    ?27     = { v676[1] }
    ?28     = { v677[1] }
    ?29     = { v678[1] }
    ?30     = { v679[1] }
    ?31     = { v680[1] }
    ip      = { 0x804836f[32] }
memory:
    addr=v639[32] value=v681[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={}, expr=v622[32]} }
    bx      = { {defs={0x0804836e}, expr=v666[32]} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={}, expr=v634[1]} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={}, expr=v636[1]} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={}, expr=v638[1]} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={}, expr=v640[1]} }
    sf      = { {defs={}, expr=v641[1]} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={}, expr=v645[1]} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x0804836e}, expr=0x0804836f[32]} }
memory:
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804836f[32] }
memory:
0x804836f:add    ebx, 0x0000135a
== PartialSymbolic ==
registers:
    ax      = { v635[32] }
    cx      = { v636[32] }
    dx      = { v637[32] }
    bx      = { v681+0x135a[32] }
    sp      = { v639+0x4[32] }
    bp      = { v640[32] }
    si      = { v641[32] }
    di      = { v642[32] }
    es      = { v643[16] }
    cs      = { v644[16] }
    ss      = { v645[16] }
    ds      = { v646[16] }
    fs      = { v647[16] }
    gs      = { v648[16] }
    cf      = { v700[1] }
    ?1      = { v650[1] }
    pf      = { -v697+0x1[1] }
    ?3      = { v652[1] }
    af      = { v702[1] }
    ?5      = { v654[1] }
    zf      = { v699[1] }
    sf      = { v698[1] }
    tf      = { v657[1] }
    if      = { v658[1] }
    df      = { v659[1] }
    of      = { v703[1] }
    iopl0   = { v661[1] }
    iopl1   = { v662[1] }
    nt      = { v663[1] }
    ?15     = { v664[1] }
    rf      = { v665[1] }
    vm      = { v666[1] }
    ac      = { v667[1] }
    vif     = { v668[1] }
    vip     = { v669[1] }
    id      = { v670[1] }
    ?22     = { v671[1] }
    ?23     = { v672[1] }
    ?24     = { v673[1] }
    ?25     = { v674[1] }
    ?26     = { v675[1] }
    ?27     = { v676[1] }
    ?28     = { v677[1] }
    ?29     = { v678[1] }
    ?30     = { v679[1] }
    ?31     = { v680[1] }
    ip      = { 0x8048375[32] }
memory:
    addr=v639[32] value=v681[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={}, expr=v622[32]} }
    bx      = { {defs={0x0804836e,0x0804836f}, expr=(add[32] v666[32] 4954[32])} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33])))))} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={0x0804836e,0x0804836f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))))))} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33])))))} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={0x0804836e,0x0804836f}, expr=(zerop[1] (add[32] v666[32] 4954[32]))} }
    sf      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 31[32] 32[32] (add[32] v666[32] 4954[32]))} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={0x0804836e,0x0804836f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33]))))))} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x0804836f}, expr=0x08048375[32]} }
memory:
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048375[32] }
memory:
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
== PartialSymbolic ==
registers:
    ax      = { v635[32] }
    cx      = { v636[32] }
    dx      = { v704[32] }
    bx      = { v681+0x135a[32] }
    sp      = { v639+0x4[32] }
    bp      = { v640[32] }
    si      = { v641[32] }
    di      = { v642[32] }
    es      = { v643[16] }
    cs      = { v644[16] }
    ss      = { v645[16] }
    ds      = { v646[16] }
    fs      = { v647[16] }
    gs      = { v648[16] }
    cf      = { v700[1] }
    ?1      = { v650[1] }
    pf      = { -v697+0x1[1] }
    ?3      = { v652[1] }
    af      = { v702[1] }
    ?5      = { v654[1] }
    zf      = { v699[1] }
    sf      = { v698[1] }
    tf      = { v657[1] }
    if      = { v658[1] }
    df      = { v659[1] }
    of      = { v703[1] }
    iopl0   = { v661[1] }
    iopl1   = { v662[1] }
    nt      = { v663[1] }
    ?15     = { v664[1] }
    rf      = { v665[1] }
    vm      = { v666[1] }
    ac      = { v667[1] }
    vif     = { v668[1] }
    vip     = { v669[1] }
    id      = { v670[1] }
    ?22     = { v671[1] }
    ?23     = { v672[1] }
    ?24     = { v673[1] }
    ?25     = { v674[1] }
    ?26     = { v675[1] }
    ?27     = { v676[1] }
    ?28     = { v677[1] }
    ?29     = { v678[1] }
    ?30     = { v679[1] }
    ?31     = { v680[1] }
    ip      = { 0x804837b[32] }
memory:
    addr=v681+0x1356[32] value=v704[32]
    addr=v639[32] value=v681[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={0x08048375}, expr=v671[32]} }
    bx      = { {defs={0x0804836e,0x0804836f}, expr=(add[32] v666[32] 4954[32])} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33])))))} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={0x0804836e,0x0804836f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))))))} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33])))))} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={0x0804836e,0x0804836f}, expr=(zerop[1] (add[32] v666[32] 4954[32]))} }
    sf      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 31[32] 32[32] (add[32] v666[32] 4954[32]))} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={0x0804836e,0x0804836f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33]))))))} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x08048375}, expr=0x0804837b[32]} }
memory:
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 3[32])} value={defs={0x08048375}, expr=(extract[8] 24[32] 32[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 2[32])} value={defs={0x08048375}, expr=(extract[8] 16[32] 24[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 1[32])} value={defs={0x08048375}, expr=(extract[8] 8[32] 16[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] v666[32] 4954[32]) -4[32])} value={defs={0x08048375}, expr=(extract[8] 0[32] 8[32] v671[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804837b[32] }
memory:
0x804837b:test   edx, edx
== PartialSymbolic ==
registers:
    ax      = { v635[32] }
    cx      = { v636[32] }
    dx      = { v704[32] }
    bx      = { v681+0x135a[32] }
    sp      = { v639+0x4[32] }
    bp      = { v640[32] }
    si      = { v641[32] }
    di      = { v642[32] }
    es      = { v643[16] }
    cs      = { v644[16] }
    ss      = { v645[16] }
    ds      = { v646[16] }
    fs      = { v647[16] }
    gs      = { v648[16] }
    cf      = { 0x0[1] }
    ?1      = { v650[1] }
    pf      = { -v750+0x1[1] }
    ?3      = { v652[1] }
    af      = { v753[1] }
    ?5      = { v654[1] }
    zf      = { v752[1] }
    sf      = { v751[1] }
    tf      = { v657[1] }
    if      = { v658[1] }
    df      = { v659[1] }
    of      = { 0x0[1] }
    iopl0   = { v661[1] }
    iopl1   = { v662[1] }
    nt      = { v663[1] }
    ?15     = { v664[1] }
    rf      = { v665[1] }
    vm      = { v666[1] }
    ac      = { v667[1] }
    vif     = { v668[1] }
    vip     = { v669[1] }
    id      = { v670[1] }
    ?22     = { v671[1] }
    ?23     = { v672[1] }
    ?24     = { v673[1] }
    ?25     = { v674[1] }
    ?26     = { v675[1] }
    ?27     = { v676[1] }
    ?28     = { v677[1] }
    ?29     = { v678[1] }
    ?30     = { v679[1] }
    ?31     = { v680[1] }
    ip      = { 0x804837d[32] }
memory:
    addr=v681+0x1356[32] value=v704[32]
    addr=v639[32] value=v681[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={0x08048375}, expr=v671[32]} }
    bx      = { {defs={0x0804836e,0x0804836f}, expr=(add[32] v666[32] 4954[32])} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={0x08048375,0x0804837b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))))))} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={}, expr=v676[1]} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={0x08048375,0x0804837b}, expr=(zerop[1] (bv-and[32] v671[32] v671[32]))} }
    sf      = { {defs={0x08048375,0x0804837b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v671[32] v671[32]))} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x0804837b}, expr=0x0804837d[32]} }
memory:
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 3[32])} value={defs={0x08048375}, expr=(extract[8] 24[32] 32[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 2[32])} value={defs={0x08048375}, expr=(extract[8] 16[32] 24[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 1[32])} value={defs={0x08048375}, expr=(extract[8] 8[32] 16[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] v666[32] 4954[32]) -4[32])} value={defs={0x08048375}, expr=(extract[8] 0[32] 8[32] v671[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804837d[32] }
memory:
0x804837d:je     0x08048384<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v635[32] }
    cx      = { v636[32] }
    dx      = { v704[32] }
    bx      = { v681+0x135a[32] }
    sp      = { v639+0x4[32] }
    bp      = { v640[32] }
    si      = { v641[32] }
    di      = { v642[32] }
    es      = { v643[16] }
    cs      = { v644[16] }
    ss      = { v645[16] }
    ds      = { v646[16] }
    fs      = { v647[16] }
    gs      = { v648[16] }
    cf      = { 0x0[1] }
    ?1      = { v650[1] }
    pf      = { -v750+0x1[1] }
    ?3      = { v652[1] }
    af      = { v753[1] }
    ?5      = { v654[1] }
    zf      = { v752[1] }
    sf      = { v751[1] }
    tf      = { v657[1] }
    if      = { v658[1] }
    df      = { v659[1] }
    of      = { 0x0[1] }
    iopl0   = { v661[1] }
    iopl1   = { v662[1] }
    nt      = { v663[1] }
    ?15     = { v664[1] }
    rf      = { v665[1] }
    vm      = { v666[1] }
    ac      = { v667[1] }
    vif     = { v668[1] }
    vip     = { v669[1] }
    id      = { v670[1] }
    ?22     = { v671[1] }
    ?23     = { v672[1] }
    ?24     = { v673[1] }
    ?25     = { v674[1] }
    ?26     = { v675[1] }
    ?27     = { v676[1] }
    ?28     = { v677[1] }
    ?29     = { v678[1] }
    ?30     = { v679[1] }
    ?31     = { v680[1] }
    ip      = { v754[32] }
memory:
    addr=v681+0x1356[32] value=v704[32]
    addr=v639[32] value=v681[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={0x08048375}, expr=v671[32]} }
    bx      = { {defs={0x0804836e,0x0804836f}, expr=(add[32] v666[32] 4954[32])} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={0x08048375,0x0804837b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))))))} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={}, expr=v676[1]} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={0x08048375,0x0804837b}, expr=(zerop[1] (bv-and[32] v671[32] v671[32]))} }
    sf      = { {defs={0x08048375,0x0804837b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v671[32] v671[32]))} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x08048375,0x0804837b,0x0804837d}, expr=(ite[32] (zerop[1] (bv-and[32] v671[32] v671[32])) 0x08048384[32] 0x0804837f[32])} }
memory:
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 3[32])} value={defs={0x08048375}, expr=(extract[8] 24[32] 32[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 2[32])} value={defs={0x08048375}, expr=(extract[8] 16[32] 24[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 1[32])} value={defs={0x08048375}, expr=(extract[8] 8[32] 16[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] v666[32] 4954[32]) -4[32])} value={defs={0x08048375}, expr=(extract[8] 0[32] 8[32] v671[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048384[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330<__gmon_start__@plt>
== PartialSymbolic ==
registers:
    ax      = { v757[32] }
    cx      = { v758[32] }
    dx      = { v759[32] }
    bx      = { v760[32] }
    sp      = { v761-0x4[32] }
    bp      = { v762[32] }
    si      = { v763[32] }
    di      = { v764[32] }
    es      = { v765[16] }
    cs      = { v766[16] }
    ss      = { v767[16] }
    ds      = { v768[16] }
    fs      = { v769[16] }
    gs      = { v770[16] }
    cf      = { v771[1] }
    ?1      = { v772[1] }
    pf      = { v773[1] }
    ?3      = { v774[1] }
    af      = { v775[1] }
    ?5      = { v776[1] }
    zf      = { v777[1] }
    sf      = { v778[1] }
    tf      = { v779[1] }
    if      = { v780[1] }
    df      = { v781[1] }
    of      = { v782[1] }
    iopl0   = { v783[1] }
    iopl1   = { v784[1] }
    nt      = { v785[1] }
    ?15     = { v786[1] }
    rf      = { v787[1] }
    vm      = { v788[1] }
    ac      = { v789[1] }
    vif     = { v790[1] }
    vip     = { v791[1] }
    id      = { v792[1] }
    ?22     = { v793[1] }
    ?23     = { v794[1] }
    ?24     = { v795[1] }
    ?25     = { v796[1] }
    ?26     = { v797[1] }
    ?27     = { v798[1] }
    ?28     = { v799[1] }
    ?29     = { v800[1] }
    ?30     = { v801[1] }
    ?31     = { v802[1] }
    ip      = { 0x8048330[32] }
memory:
    addr=v761-0x4[32] value=0x8048384[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v679[32]} }
    cx      = { {defs={}, expr=v680[32]} }
    dx      = { {defs={}, expr=v681[32]} }
    bx      = { {defs={}, expr=v682[32]} }
    sp      = { {defs={0x0804837f}, expr=(add[32] v683[32] -4[32])} }
    bp      = { {defs={}, expr=v684[32]} }
    si      = { {defs={}, expr=v685[32]} }
    di      = { {defs={}, expr=v686[32]} }
    es      = { {defs={}, expr=v687[16]} }
    cs      = { {defs={}, expr=v688[16]} }
    ss      = { {defs={}, expr=v689[16]} }
    ds      = { {defs={}, expr=v690[16]} }
    fs      = { {defs={}, expr=v691[16]} }
    gs      = { {defs={}, expr=v692[16]} }
    cf      = { {defs={}, expr=v693[1]} }
    ?1      = { {defs={}, expr=v694[1]} }
    pf      = { {defs={}, expr=v695[1]} }
    ?3      = { {defs={}, expr=v696[1]} }
    af      = { {defs={}, expr=v697[1]} }
    ?5      = { {defs={}, expr=v698[1]} }
    zf      = { {defs={}, expr=v699[1]} }
    sf      = { {defs={}, expr=v700[1]} }
    tf      = { {defs={}, expr=v701[1]} }
    if      = { {defs={}, expr=v702[1]} }
    df      = { {defs={}, expr=v703[1]} }
    of      = { {defs={}, expr=v704[1]} }
    iopl0   = { {defs={}, expr=v705[1]} }
    iopl1   = { {defs={}, expr=v706[1]} }
    nt      = { {defs={}, expr=v707[1]} }
    ?15     = { {defs={}, expr=v708[1]} }
    rf      = { {defs={}, expr=v709[1]} }
    vm      = { {defs={}, expr=v710[1]} }
    ac      = { {defs={}, expr=v711[1]} }
    vif     = { {defs={}, expr=v712[1]} }
    vip     = { {defs={}, expr=v713[1]} }
    id      = { {defs={}, expr=v714[1]} }
    ?22     = { {defs={}, expr=v715[1]} }
    ?23     = { {defs={}, expr=v716[1]} }
    ?24     = { {defs={}, expr=v717[1]} }
    ?25     = { {defs={}, expr=v718[1]} }
    ?26     = { {defs={}, expr=v719[1]} }
    ?27     = { {defs={}, expr=v720[1]} }
    ?28     = { {defs={}, expr=v721[1]} }
    ?29     = { {defs={}, expr=v722[1]} }
    ?30     = { {defs={}, expr=v723[1]} }
    ?31     = { {defs={}, expr=v724[1]} }
    ip      = { {defs={}, expr=0x08048330[32]} }
memory:
    addr={defs={0x0804837f}, expr=(add[32] (add[32] v683[32] -4[32]) 3[32])} value={defs={0x0804837f}, expr=8[8]}
    addr={defs={0x0804837f}, expr=(add[32] (add[32] v683[32] -4[32]) 2[32])} value={defs={0x0804837f}, expr=4[8]}
    addr={defs={0x0804837f}, expr=(add[32] (add[32] v683[32] -4[32]) 1[32])} value={defs={0x0804837f}, expr=-125[8]}
    addr={defs={0x0804837f}, expr=(add[32] v683[32] -4[32])} value={defs={0x0804837f}, expr=-124[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048330[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
== PartialSymbolic ==
registers:
    ax      = { v851[32] }
    cx      = { v806[32] }
    dx      = { v807[32] }
    bx      = { v808[32] }
    sp      = { v809+0x4[32] }
    bp      = { v810[32] }
    si      = { v811[32] }
    di      = { v812[32] }
    es      = { v813[16] }
    cs      = { v814[16] }
    ss      = { v815[16] }
    ds      = { v816[16] }
    fs      = { v817[16] }
    gs      = { v818[16] }
    cf      = { v819[1] }
    ?1      = { v820[1] }
    pf      = { v821[1] }
    ?3      = { v822[1] }
    af      = { v823[1] }
    ?5      = { v824[1] }
    zf      = { v825[1] }
    sf      = { v826[1] }
    tf      = { v827[1] }
    if      = { v828[1] }
    df      = { v829[1] }
    of      = { v830[1] }
    iopl0   = { v831[1] }
    iopl1   = { v832[1] }
    nt      = { v833[1] }
    ?15     = { v834[1] }
    rf      = { v835[1] }
    vm      = { v836[1] }
    ac      = { v837[1] }
    vif     = { v838[1] }
    vip     = { v839[1] }
    id      = { v840[1] }
    ?22     = { v841[1] }
    ?23     = { v842[1] }
    ?24     = { v843[1] }
    ?25     = { v844[1] }
    ?26     = { v845[1] }
    ?27     = { v846[1] }
    ?28     = { v847[1] }
    ?29     = { v848[1] }
    ?30     = { v849[1] }
    ?31     = { v850[1] }
    ip      = { 0x8048385[32] }
memory:
    addr=v809[32] value=v851[32]
== Symbolic ==
registers:
    ax      = { {defs={0x08048384}, expr=v773[32]} }
    cx      = { {defs={}, expr=v728[32]} }
    dx      = { {defs={}, expr=v729[32]} }
    bx      = { {defs={}, expr=v730[32]} }
    sp      = { {defs={0x08048384}, expr=(add[32] v731[32] 4[32])} }
    bp      = { {defs={}, expr=v732[32]} }
    si      = { {defs={}, expr=v733[32]} }
    di      = { {defs={}, expr=v734[32]} }
    es      = { {defs={}, expr=v735[16]} }
    cs      = { {defs={}, expr=v736[16]} }
    ss      = { {defs={}, expr=v737[16]} }
    ds      = { {defs={}, expr=v738[16]} }
    fs      = { {defs={}, expr=v739[16]} }
    gs      = { {defs={}, expr=v740[16]} }
    cf      = { {defs={}, expr=v741[1]} }
    ?1      = { {defs={}, expr=v742[1]} }
    pf      = { {defs={}, expr=v743[1]} }
    ?3      = { {defs={}, expr=v744[1]} }
    af      = { {defs={}, expr=v745[1]} }
    ?5      = { {defs={}, expr=v746[1]} }
    zf      = { {defs={}, expr=v747[1]} }
    sf      = { {defs={}, expr=v748[1]} }
    tf      = { {defs={}, expr=v749[1]} }
    if      = { {defs={}, expr=v750[1]} }
    df      = { {defs={}, expr=v751[1]} }
    of      = { {defs={}, expr=v752[1]} }
    iopl0   = { {defs={}, expr=v753[1]} }
    iopl1   = { {defs={}, expr=v754[1]} }
    nt      = { {defs={}, expr=v755[1]} }
    ?15     = { {defs={}, expr=v756[1]} }
    rf      = { {defs={}, expr=v757[1]} }
    vm      = { {defs={}, expr=v758[1]} }
    ac      = { {defs={}, expr=v759[1]} }
    vif     = { {defs={}, expr=v760[1]} }
    vip     = { {defs={}, expr=v761[1]} }
    id      = { {defs={}, expr=v762[1]} }
    ?22     = { {defs={}, expr=v763[1]} }
    ?23     = { {defs={}, expr=v764[1]} }
    ?24     = { {defs={}, expr=v765[1]} }
    ?25     = { {defs={}, expr=v766[1]} }
    ?26     = { {defs={}, expr=v767[1]} }
    ?27     = { {defs={}, expr=v768[1]} }
    ?28     = { {defs={}, expr=v769[1]} }
    ?29     = { {defs={}, expr=v770[1]} }
    ?30     = { {defs={}, expr=v771[1]} }
    ?31     = { {defs={}, expr=v772[1]} }
    ip      = { {defs={0x08048384}, expr=0x08048385[32]} }
memory:
    addr={defs={0x08048384}, expr=(add[32] v731[32] 3[32])} value={defs={0x08048384}, expr=(extract[8] 24[32] 32[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 2[32])} value={defs={0x08048384}, expr=(extract[8] 16[32] 24[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 1[32])} value={defs={0x08048384}, expr=(extract[8] 8[32] 16[32] v773[32])}
    addr={defs={}, expr=v731[32]} value={defs={0x08048384}, expr=(extract[8] 0[32] 8[32] v773[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048385[32] }
memory:
0x8048385:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v851[32] }
    cx      = { v806[32] }
    dx      = { v807[32] }
    bx      = { v853[32] }
    sp      = { v809+0x8[32] }
    bp      = { v810[32] }
    si      = { v811[32] }
    di      = { v812[32] }
    es      = { v813[16] }
    cs      = { v814[16] }
    ss      = { v815[16] }
    ds      = { v816[16] }
    fs      = { v817[16] }
    gs      = { v818[16] }
    cf      = { v819[1] }
    ?1      = { v820[1] }
    pf      = { v821[1] }
    ?3      = { v822[1] }
    af      = { v823[1] }
    ?5      = { v824[1] }
    zf      = { v825[1] }
    sf      = { v826[1] }
    tf      = { v827[1] }
    if      = { v828[1] }
    df      = { v829[1] }
    of      = { v830[1] }
    iopl0   = { v831[1] }
    iopl1   = { v832[1] }
    nt      = { v833[1] }
    ?15     = { v834[1] }
    rf      = { v835[1] }
    vm      = { v836[1] }
    ac      = { v837[1] }
    vif     = { v838[1] }
    vip     = { v839[1] }
    id      = { v840[1] }
    ?22     = { v841[1] }
    ?23     = { v842[1] }
    ?24     = { v843[1] }
    ?25     = { v844[1] }
    ?26     = { v845[1] }
    ?27     = { v846[1] }
    ?28     = { v847[1] }
    ?29     = { v848[1] }
    ?30     = { v849[1] }
    ?31     = { v850[1] }
    ip      = { 0x8048386[32] }
memory:
    addr=v809+0x4[32] value=v853[32]
    addr=v809[32] value=v851[32]
== Symbolic ==
registers:
    ax      = { {defs={0x08048384}, expr=v773[32]} }
    cx      = { {defs={}, expr=v728[32]} }
    dx      = { {defs={}, expr=v729[32]} }
    bx      = { {defs={0x08048385}, expr=v778[32]} }
    sp      = { {defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v732[32]} }
    si      = { {defs={}, expr=v733[32]} }
    di      = { {defs={}, expr=v734[32]} }
    es      = { {defs={}, expr=v735[16]} }
    cs      = { {defs={}, expr=v736[16]} }
    ss      = { {defs={}, expr=v737[16]} }
    ds      = { {defs={}, expr=v738[16]} }
    fs      = { {defs={}, expr=v739[16]} }
    gs      = { {defs={}, expr=v740[16]} }
    cf      = { {defs={}, expr=v741[1]} }
    ?1      = { {defs={}, expr=v742[1]} }
    pf      = { {defs={}, expr=v743[1]} }
    ?3      = { {defs={}, expr=v744[1]} }
    af      = { {defs={}, expr=v745[1]} }
    ?5      = { {defs={}, expr=v746[1]} }
    zf      = { {defs={}, expr=v747[1]} }
    sf      = { {defs={}, expr=v748[1]} }
    tf      = { {defs={}, expr=v749[1]} }
    if      = { {defs={}, expr=v750[1]} }
    df      = { {defs={}, expr=v751[1]} }
    of      = { {defs={}, expr=v752[1]} }
    iopl0   = { {defs={}, expr=v753[1]} }
    iopl1   = { {defs={}, expr=v754[1]} }
    nt      = { {defs={}, expr=v755[1]} }
    ?15     = { {defs={}, expr=v756[1]} }
    rf      = { {defs={}, expr=v757[1]} }
    vm      = { {defs={}, expr=v758[1]} }
    ac      = { {defs={}, expr=v759[1]} }
    vif     = { {defs={}, expr=v760[1]} }
    vip     = { {defs={}, expr=v761[1]} }
    id      = { {defs={}, expr=v762[1]} }
    ?22     = { {defs={}, expr=v763[1]} }
    ?23     = { {defs={}, expr=v764[1]} }
    ?24     = { {defs={}, expr=v765[1]} }
    ?25     = { {defs={}, expr=v766[1]} }
    ?26     = { {defs={}, expr=v767[1]} }
    ?27     = { {defs={}, expr=v768[1]} }
    ?28     = { {defs={}, expr=v769[1]} }
    ?29     = { {defs={}, expr=v770[1]} }
    ?30     = { {defs={}, expr=v771[1]} }
    ?31     = { {defs={}, expr=v772[1]} }
    ip      = { {defs={0x08048385}, expr=0x08048386[32]} }
memory:
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 3[32])} value={defs={0x08048385}, expr=(extract[8] 24[32] 32[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 2[32])} value={defs={0x08048385}, expr=(extract[8] 16[32] 24[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 1[32])} value={defs={0x08048385}, expr=(extract[8] 8[32] 16[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 4[32])} value={defs={0x08048385}, expr=(extract[8] 0[32] 8[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 3[32])} value={defs={0x08048384}, expr=(extract[8] 24[32] 32[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 2[32])} value={defs={0x08048384}, expr=(extract[8] 16[32] 24[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 1[32])} value={defs={0x08048384}, expr=(extract[8] 8[32] 16[32] v773[32])}
    addr={defs={}, expr=v731[32]} value={defs={0x08048384}, expr=(extract[8] 0[32] 8[32] v773[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048386[32] }
memory:
0x8048386:leave  
== PartialSymbolic ==
registers:
    ax      = { v851[32] }
    cx      = { v806[32] }
    dx      = { v807[32] }
    bx      = { v853[32] }
    sp      = { v810+0x4[32] }
    bp      = { v855[32] }
    si      = { v811[32] }
    di      = { v812[32] }
    es      = { v813[16] }
    cs      = { v814[16] }
    ss      = { v815[16] }
    ds      = { v816[16] }
    fs      = { v817[16] }
    gs      = { v818[16] }
    cf      = { v819[1] }
    ?1      = { v820[1] }
    pf      = { v821[1] }
    ?3      = { v822[1] }
    af      = { v823[1] }
    ?5      = { v824[1] }
    zf      = { v825[1] }
    sf      = { v826[1] }
    tf      = { v827[1] }
    if      = { v828[1] }
    df      = { v829[1] }
    of      = { v830[1] }
    iopl0   = { v831[1] }
    iopl1   = { v832[1] }
    nt      = { v833[1] }
    ?15     = { v834[1] }
    rf      = { v835[1] }
    vm      = { v836[1] }
    ac      = { v837[1] }
    vif     = { v838[1] }
    vip     = { v839[1] }
    id      = { v840[1] }
    ?22     = { v841[1] }
    ?23     = { v842[1] }
    ?24     = { v843[1] }
    ?25     = { v844[1] }
    ?26     = { v845[1] }
    ?27     = { v846[1] }
    ?28     = { v847[1] }
    ?29     = { v848[1] }
    ?30     = { v849[1] }
    ?31     = { v850[1] }
    ip      = { 0x8048387[32] }
memory:
    addr=v810[32] value=v855[32]
    addr=v809+0x4[32] value=v853[32]
    addr=v809[32] value=v851[32]
== Symbolic ==
registers:
    ax      = { {defs={0x08048384}, expr=v773[32]} }
    cx      = { {defs={}, expr=v728[32]} }
    dx      = { {defs={}, expr=v729[32]} }
    bx      = { {defs={0x08048385}, expr=v778[32]} }
    sp      = { {defs={0x08048386}, expr=(add[32] v732[32] 4[32])} }
    bp      = { {defs={0x08048386}, expr=v783[32]} }
    si      = { {defs={}, expr=v733[32]} }
    di      = { {defs={}, expr=v734[32]} }
    es      = { {defs={}, expr=v735[16]} }
    cs      = { {defs={}, expr=v736[16]} }
    ss      = { {defs={}, expr=v737[16]} }
    ds      = { {defs={}, expr=v738[16]} }
    fs      = { {defs={}, expr=v739[16]} }
    gs      = { {defs={}, expr=v740[16]} }
    cf      = { {defs={}, expr=v741[1]} }
    ?1      = { {defs={}, expr=v742[1]} }
    pf      = { {defs={}, expr=v743[1]} }
    ?3      = { {defs={}, expr=v744[1]} }
    af      = { {defs={}, expr=v745[1]} }
    ?5      = { {defs={}, expr=v746[1]} }
    zf      = { {defs={}, expr=v747[1]} }
    sf      = { {defs={}, expr=v748[1]} }
    tf      = { {defs={}, expr=v749[1]} }
    if      = { {defs={}, expr=v750[1]} }
    df      = { {defs={}, expr=v751[1]} }
    of      = { {defs={}, expr=v752[1]} }
    iopl0   = { {defs={}, expr=v753[1]} }
    iopl1   = { {defs={}, expr=v754[1]} }
    nt      = { {defs={}, expr=v755[1]} }
    ?15     = { {defs={}, expr=v756[1]} }
    rf      = { {defs={}, expr=v757[1]} }
    vm      = { {defs={}, expr=v758[1]} }
    ac      = { {defs={}, expr=v759[1]} }
    vif     = { {defs={}, expr=v760[1]} }
    vip     = { {defs={}, expr=v761[1]} }
    id      = { {defs={}, expr=v762[1]} }
    ?22     = { {defs={}, expr=v763[1]} }
    ?23     = { {defs={}, expr=v764[1]} }
    ?24     = { {defs={}, expr=v765[1]} }
    ?25     = { {defs={}, expr=v766[1]} }
    ?26     = { {defs={}, expr=v767[1]} }
    ?27     = { {defs={}, expr=v768[1]} }
    ?28     = { {defs={}, expr=v769[1]} }
    ?29     = { {defs={}, expr=v770[1]} }
    ?30     = { {defs={}, expr=v771[1]} }
    ?31     = { {defs={}, expr=v772[1]} }
    ip      = { {defs={0x08048386}, expr=0x08048387[32]} }
memory:
    addr={defs={0x08048386}, expr=(add[32] v732[32] 3[32])} value={defs={0x08048386}, expr=(extract[8] 24[32] 32[32] v783[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 2[32])} value={defs={0x08048386}, expr=(extract[8] 16[32] 24[32] v783[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 1[32])} value={defs={0x08048386}, expr=(extract[8] 8[32] 16[32] v783[32])}
    addr={defs={}, expr=v732[32]} value={defs={0x08048386}, expr=(extract[8] 0[32] 8[32] v783[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 3[32])} value={defs={0x08048385}, expr=(extract[8] 24[32] 32[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 2[32])} value={defs={0x08048385}, expr=(extract[8] 16[32] 24[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 1[32])} value={defs={0x08048385}, expr=(extract[8] 8[32] 16[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 4[32])} value={defs={0x08048385}, expr=(extract[8] 0[32] 8[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 3[32])} value={defs={0x08048384}, expr=(extract[8] 24[32] 32[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 2[32])} value={defs={0x08048384}, expr=(extract[8] 16[32] 24[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 1[32])} value={defs={0x08048384}, expr=(extract[8] 8[32] 16[32] v773[32])}
    addr={defs={}, expr=v731[32]} value={defs={0x08048384}, expr=(extract[8] 0[32] 8[32] v773[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048387[32] }
memory:
0x8048387:ret    
== PartialSymbolic ==
registers:
    ax      = { v851[32] }
    cx      = { v806[32] }
    dx      = { v807[32] }
    bx      = { v853[32] }
    sp      = { v810+0x8[32] }
    bp      = { v855[32] }
    si      = { v811[32] }
    di      = { v812[32] }
    es      = { v813[16] }
    cs      = { v814[16] }
    ss      = { v815[16] }
    ds      = { v816[16] }
    fs      = { v817[16] }
    gs      = { v818[16] }
    cf      = { v819[1] }
    ?1      = { v820[1] }
    pf      = { v821[1] }
    ?3      = { v822[1] }
    af      = { v823[1] }
    ?5      = { v824[1] }
    zf      = { v825[1] }
    sf      = { v826[1] }
    tf      = { v827[1] }
    if      = { v828[1] }
    df      = { v829[1] }
    of      = { v830[1] }
    iopl0   = { v831[1] }
    iopl1   = { v832[1] }
    nt      = { v833[1] }
    ?15     = { v834[1] }
    rf      = { v835[1] }
    vm      = { v836[1] }
    ac      = { v837[1] }
    vif     = { v838[1] }
    vip     = { v839[1] }
    id      = { v840[1] }
    ?22     = { v841[1] }
    ?23     = { v842[1] }
    ?24     = { v843[1] }
    ?25     = { v844[1] }
    ?26     = { v845[1] }
    ?27     = { v846[1] }
    ?28     = { v847[1] }
    ?29     = { v848[1] }
    ?30     = { v849[1] }
    ?31     = { v850[1] }
    ip      = { v917[32] }
memory:
    addr=v810+0x4[32] value=v917[32]
    addr=v810[32] value=v855[32]
    addr=v809+0x4[32] value=v853[32]
    addr=v809[32] value=v851[32]
== Symbolic ==
registers:
    ax      = { {defs={0x08048384}, expr=v773[32]} }
    cx      = { {defs={}, expr=v728[32]} }
    dx      = { {defs={}, expr=v729[32]} }
    bx      = { {defs={0x08048385}, expr=v778[32]} }
    sp      = { {defs={0x08048386,0x08048387}, expr=(add[32] (add[32] v732[32] 4[32]) 4[32])} }
    bp      = { {defs={0x08048386}, expr=v783[32]} }
    si      = { {defs={}, expr=v733[32]} }
    di      = { {defs={}, expr=v734[32]} }
    es      = { {defs={}, expr=v735[16]} }
    cs      = { {defs={}, expr=v736[16]} }
    ss      = { {defs={}, expr=v737[16]} }
    ds      = { {defs={}, expr=v738[16]} }
    fs      = { {defs={}, expr=v739[16]} }
    gs      = { {defs={}, expr=v740[16]} }
    cf      = { {defs={}, expr=v741[1]} }
    ?1      = { {defs={}, expr=v742[1]} }
    pf      = { {defs={}, expr=v743[1]} }
    ?3      = { {defs={}, expr=v744[1]} }
    af      = { {defs={}, expr=v745[1]} }
    ?5      = { {defs={}, expr=v746[1]} }
    zf      = { {defs={}, expr=v747[1]} }
    sf      = { {defs={}, expr=v748[1]} }
    tf      = { {defs={}, expr=v749[1]} }
    if      = { {defs={}, expr=v750[1]} }
    df      = { {defs={}, expr=v751[1]} }
    of      = { {defs={}, expr=v752[1]} }
    iopl0   = { {defs={}, expr=v753[1]} }
    iopl1   = { {defs={}, expr=v754[1]} }
    nt      = { {defs={}, expr=v755[1]} }
    ?15     = { {defs={}, expr=v756[1]} }
    rf      = { {defs={}, expr=v757[1]} }
    vm      = { {defs={}, expr=v758[1]} }
    ac      = { {defs={}, expr=v759[1]} }
    vif     = { {defs={}, expr=v760[1]} }
    vip     = { {defs={}, expr=v761[1]} }
    id      = { {defs={}, expr=v762[1]} }
    ?22     = { {defs={}, expr=v763[1]} }
    ?23     = { {defs={}, expr=v764[1]} }
    ?24     = { {defs={}, expr=v765[1]} }
    ?25     = { {defs={}, expr=v766[1]} }
    ?26     = { {defs={}, expr=v767[1]} }
    ?27     = { {defs={}, expr=v768[1]} }
    ?28     = { {defs={}, expr=v769[1]} }
    ?29     = { {defs={}, expr=v770[1]} }
    ?30     = { {defs={}, expr=v771[1]} }
    ?31     = { {defs={}, expr=v772[1]} }
    ip      = { {defs={0x08048387}, expr=v788[32]} }
memory:
    addr={defs={0x08048386,0x08048387}, expr=(add[32] (add[32] v732[32] 4[32]) 3[32])} value={defs={0x08048387}, expr=(extract[8] 24[32] 32[32] v788[32])}
    addr={defs={0x08048386,0x08048387}, expr=(add[32] (add[32] v732[32] 4[32]) 2[32])} value={defs={0x08048387}, expr=(extract[8] 16[32] 24[32] v788[32])}
    addr={defs={0x08048386,0x08048387}, expr=(add[32] (add[32] v732[32] 4[32]) 1[32])} value={defs={0x08048387}, expr=(extract[8] 8[32] 16[32] v788[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 4[32])} value={defs={0x08048387}, expr=(extract[8] 0[32] 8[32] v788[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 3[32])} value={defs={0x08048386}, expr=(extract[8] 24[32] 32[32] v783[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 2[32])} value={defs={0x08048386}, expr=(extract[8] 16[32] 24[32] v783[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 1[32])} value={defs={0x08048386}, expr=(extract[8] 8[32] 16[32] v783[32])}
    addr={defs={}, expr=v732[32]} value={defs={0x08048386}, expr=(extract[8] 0[32] 8[32] v783[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 3[32])} value={defs={0x08048385}, expr=(extract[8] 24[32] 32[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 2[32])} value={defs={0x08048385}, expr=(extract[8] 16[32] 24[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 1[32])} value={defs={0x08048385}, expr=(extract[8] 8[32] 16[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 4[32])} value={defs={0x08048385}, expr=(extract[8] 0[32] 8[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 3[32])} value={defs={0x08048384}, expr=(extract[8] 24[32] 32[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 2[32])} value={defs={0x08048384}, expr=(extract[8] 16[32] 24[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 1[32])} value={defs={0x08048384}, expr=(extract[8] 8[32] 16[32] v773[32])}
    addr={defs={}, expr=v731[32]} value={defs={0x08048384}, expr=(extract[8] 0[32] 8[32] v773[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v981[32] }
    cx      = { v982[32] }
    dx      = { v983[32] }
    bx      = { v984[32] }
    sp      = { v985-0x4[32] }
    bp      = { v986[32] }
    si      = { v987[32] }
    di      = { v988[32] }
    es      = { v989[16] }
    cs      = { v990[16] }
    ss      = { v991[16] }
    ds      = { v992[16] }
    fs      = { v993[16] }
    gs      = { v994[16] }
    cf      = { v995[1] }
    ?1      = { v996[1] }
    pf      = { v997[1] }
    ?3      = { v998[1] }
    af      = { v999[1] }
    ?5      = { v1000[1] }
    zf      = { v1001[1] }
    sf      = { v1002[1] }
    tf      = { v1003[1] }
    if      = { v1004[1] }
    df      = { v1005[1] }
    of      = { v1006[1] }
    iopl0   = { v1007[1] }
    iopl1   = { v1008[1] }
    nt      = { v1009[1] }
    ?15     = { v1010[1] }
    rf      = { v1011[1] }
    vm      = { v1012[1] }
    ac      = { v1013[1] }
    vif     = { v1014[1] }
    vip     = { v1015[1] }
    id      = { v1016[1] }
    ?22     = { v1017[1] }
    ?23     = { v1018[1] }
    ?24     = { v1019[1] }
    ?25     = { v1020[1] }
    ?26     = { v1021[1] }
    ?27     = { v1022[1] }
    ?28     = { v1023[1] }
    ?29     = { v1024[1] }
    ?30     = { v1025[1] }
    ?31     = { v1026[1] }
    ip      = { 0x8048391[32] }
memory:
    addr=v985-0x4[32] value=v986[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    bp      = { {defs={}, expr=v800[32]} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={}, expr=v809[1]} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={}, expr=v811[1]} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={}, expr=v813[1]} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={}, expr=v815[1]} }
    sf      = { {defs={}, expr=v816[1]} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={}, expr=v820[1]} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048390}, expr=0x08048391[32]} }
memory:
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048391[32] }
memory:
0x8048391:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v981[32] }
    cx      = { v982[32] }
    dx      = { v983[32] }
    bx      = { v984[32] }
    sp      = { v985-0x4[32] }
    bp      = { v985-0x4[32] }
    si      = { v987[32] }
    di      = { v988[32] }
    es      = { v989[16] }
    cs      = { v990[16] }
    ss      = { v991[16] }
    ds      = { v992[16] }
    fs      = { v993[16] }
    gs      = { v994[16] }
    cf      = { v995[1] }
    ?1      = { v996[1] }
    pf      = { v997[1] }
    ?3      = { v998[1] }
    af      = { v999[1] }
    ?5      = { v1000[1] }
    zf      = { v1001[1] }
    sf      = { v1002[1] }
    tf      = { v1003[1] }
    if      = { v1004[1] }
    df      = { v1005[1] }
    of      = { v1006[1] }
    iopl0   = { v1007[1] }
    iopl1   = { v1008[1] }
    nt      = { v1009[1] }
    ?15     = { v1010[1] }
    rf      = { v1011[1] }
    vm      = { v1012[1] }
    ac      = { v1013[1] }
    vif     = { v1014[1] }
    vip     = { v1015[1] }
    id      = { v1016[1] }
    ?22     = { v1017[1] }
    ?23     = { v1018[1] }
    ?24     = { v1019[1] }
    ?25     = { v1020[1] }
    ?26     = { v1021[1] }
    ?27     = { v1022[1] }
    ?28     = { v1023[1] }
    ?29     = { v1024[1] }
    ?30     = { v1025[1] }
    ?31     = { v1026[1] }
    ip      = { 0x8048393[32] }
memory:
    addr=v985-0x4[32] value=v986[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    bp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={}, expr=v809[1]} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={}, expr=v811[1]} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={}, expr=v813[1]} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={}, expr=v815[1]} }
    sf      = { {defs={}, expr=v816[1]} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={}, expr=v820[1]} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048391}, expr=0x08048393[32]} }
memory:
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048393[32] }
memory:
0x8048393:sub    esp, 0x08
== PartialSymbolic ==
registers:
    ax      = { v981[32] }
    cx      = { v982[32] }
    dx      = { v983[32] }
    bx      = { v984[32] }
    sp      = { v985-0xc[32] }
    bp      = { v985-0x4[32] }
    si      = { v987[32] }
    di      = { v988[32] }
    es      = { v989[16] }
    cs      = { v990[16] }
    ss      = { v991[16] }
    ds      = { v992[16] }
    fs      = { v993[16] }
    gs      = { v994[16] }
    cf      = { -v1044+0x1[1] }
    ?1      = { v996[1] }
    pf      = { -v1041+0x1[1] }
    ?3      = { v998[1] }
    af      = { -v1046+0x1[1] }
    ?5      = { v1000[1] }
    zf      = { v1043[1] }
    sf      = { v1042[1] }
    tf      = { v1003[1] }
    if      = { v1004[1] }
    df      = { v1005[1] }
    of      = { v1047[1] }
    iopl0   = { v1007[1] }
    iopl1   = { v1008[1] }
    nt      = { v1009[1] }
    ?15     = { v1010[1] }
    rf      = { v1011[1] }
    vm      = { v1012[1] }
    ac      = { v1013[1] }
    vif     = { v1014[1] }
    vip     = { v1015[1] }
    id      = { v1016[1] }
    ?22     = { v1017[1] }
    ?23     = { v1018[1] }
    ?24     = { v1019[1] }
    ?25     = { v1020[1] }
    ?26     = { v1021[1] }
    ?27     = { v1022[1] }
    ?28     = { v1023[1] }
    ?29     = { v1024[1] }
    ?30     = { v1025[1] }
    ?31     = { v1026[1] }
    ip      = { 0x8048396[32] }
memory:
    addr=v985-0x4[32] value=v986[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390,0x08048393}, expr=(add[32] (add[32] v799[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={0x08048390,0x08048393}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={0x08048390,0x08048393}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={0x08048390,0x08048393}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={0x08048390,0x08048393}, expr=(zerop[1] (add[32] (add[32] v799[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048390,0x08048393}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={0x08048390,0x08048393}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048393}, expr=0x08048396[32]} }
memory:
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048396[32] }
memory:
0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00
== PartialSymbolic ==
registers:
    ax      = { v981[32] }
    cx      = { v982[32] }
    dx      = { v983[32] }
    bx      = { v984[32] }
    sp      = { v985-0xc[32] }
    bp      = { v985-0x4[32] }
    si      = { v987[32] }
    di      = { v988[32] }
    es      = { v989[16] }
    cs      = { v990[16] }
    ss      = { v991[16] }
    ds      = { v992[16] }
    fs      = { v993[16] }
    gs      = { v994[16] }
    cf      = { -v1093+0x1[1] }
    ?1      = { v996[1] }
    pf      = { -v1090+0x1[1] }
    ?3      = { v998[1] }
    af      = { -v1095+0x1[1] }
    ?5      = { v1000[1] }
    zf      = { v1092[1] }
    sf      = { v1091[1] }
    tf      = { v1003[1] }
    if      = { v1004[1] }
    df      = { v1005[1] }
    of      = { v1096[1] }
    iopl0   = { v1007[1] }
    iopl1   = { v1008[1] }
    nt      = { v1009[1] }
    ?15     = { v1010[1] }
    rf      = { v1011[1] }
    vm      = { v1012[1] }
    ac      = { v1013[1] }
    vif     = { v1014[1] }
    vip     = { v1015[1] }
    id      = { v1016[1] }
    ?22     = { v1017[1] }
    ?23     = { v1018[1] }
    ?24     = { v1019[1] }
    ?25     = { v1020[1] }
    ?26     = { v1021[1] }
    ?27     = { v1022[1] }
    ?28     = { v1023[1] }
    ?29     = { v1024[1] }
    ?30     = { v1025[1] }
    ?31     = { v1026[1] }
    ip      = { 0x804839d[32] }
memory:
    addr=0x80496f4[32] value=v1048[8]
    addr=v985-0x4[32] value=v986[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390,0x08048393}, expr=(add[32] (add[32] v799[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={0x08048396}, expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={0x08048396}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] v841[8]) (extract[1] 1[32] 2[32] v841[8])) (bv-xor[1] (extract[1] 2[32] 3[32] v841[8]) (extract[1] 3[32] 4[32] v841[8]))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] v841[8]) (extract[1] 5[32] 6[32] v841[8])) (bv-xor[1] (extract[1] 6[32] 7[32] v841[8]) (extract[1] 7[32] 8[32] v841[8])))))} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={0x08048396}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={0x08048396}, expr=(zerop[1] v841[8])} }
    sf      = { {defs={0x08048396}, expr=(extract[1] 7[32] 8[32] v841[8])} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={0x08048396}, expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048396}, expr=0x0804839d[32]} }
memory:
    addr={defs={0x08048396}, expr=0x080496f4[32]} value={defs={}, expr=v841[8]}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804839d[32] }
memory:
0x804839d:jne    0x080483cc<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v981[32] }
    cx      = { v982[32] }
    dx      = { v983[32] }
    bx      = { v984[32] }
    sp      = { v985-0xc[32] }
    bp      = { v985-0x4[32] }
    si      = { v987[32] }
    di      = { v988[32] }
    es      = { v989[16] }
    cs      = { v990[16] }
    ss      = { v991[16] }
    ds      = { v992[16] }
    fs      = { v993[16] }
    gs      = { v994[16] }
    cf      = { -v1093+0x1[1] }
    ?1      = { v996[1] }
    pf      = { -v1090+0x1[1] }
    ?3      = { v998[1] }
    af      = { -v1095+0x1[1] }
    ?5      = { v1000[1] }
    zf      = { v1092[1] }
    sf      = { v1091[1] }
    tf      = { v1003[1] }
    if      = { v1004[1] }
    df      = { v1005[1] }
    of      = { v1096[1] }
    iopl0   = { v1007[1] }
    iopl1   = { v1008[1] }
    nt      = { v1009[1] }
    ?15     = { v1010[1] }
    rf      = { v1011[1] }
    vm      = { v1012[1] }
    ac      = { v1013[1] }
    vif     = { v1014[1] }
    vip     = { v1015[1] }
    id      = { v1016[1] }
    ?22     = { v1017[1] }
    ?23     = { v1018[1] }
    ?24     = { v1019[1] }
    ?25     = { v1020[1] }
    ?26     = { v1021[1] }
    ?27     = { v1022[1] }
    ?28     = { v1023[1] }
    ?29     = { v1024[1] }
    ?30     = { v1025[1] }
    ?31     = { v1026[1] }
    ip      = { v1097[32] }
memory:
    addr=0x80496f4[32] value=v1048[8]
    addr=v985-0x4[32] value=v986[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390,0x08048393}, expr=(add[32] (add[32] v799[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={0x08048396}, expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={0x08048396}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] v841[8]) (extract[1] 1[32] 2[32] v841[8])) (bv-xor[1] (extract[1] 2[32] 3[32] v841[8]) (extract[1] 3[32] 4[32] v841[8]))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] v841[8]) (extract[1] 5[32] 6[32] v841[8])) (bv-xor[1] (extract[1] 6[32] 7[32] v841[8]) (extract[1] 7[32] 8[32] v841[8])))))} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={0x08048396}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={0x08048396}, expr=(zerop[1] v841[8])} }
    sf      = { {defs={0x08048396}, expr=(extract[1] 7[32] 8[32] v841[8])} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={0x08048396}, expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048396,0x0804839d}, expr=(ite[32] (invert[1] (zerop[1] v841[8])) 0x080483cc[32] 0x0804839f[32])} }
memory:
    addr={defs={0x08048396}, expr=0x080496f4[32]} value={defs={}, expr=v841[8]}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804839f, 0x080483cc[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
== PartialSymbolic ==
registers:
    ax      = { v1146[32] }
    cx      = { v1101[32] }
    dx      = { v1102[32] }
    bx      = { v1103[32] }
    sp      = { v1104[32] }
    bp      = { v1105[32] }
    si      = { v1106[32] }
    di      = { v1107[32] }
    es      = { v1108[16] }
    cs      = { v1109[16] }
    ss      = { v1110[16] }
    ds      = { v1111[16] }
    fs      = { v1112[16] }
    gs      = { v1113[16] }
    cf      = { v1114[1] }
    ?1      = { v1115[1] }
    pf      = { v1116[1] }
    ?3      = { v1117[1] }
    af      = { v1118[1] }
    ?5      = { v1119[1] }
    zf      = { v1120[1] }
    sf      = { v1121[1] }
    tf      = { v1122[1] }
    if      = { v1123[1] }
    df      = { v1124[1] }
    of      = { v1125[1] }
    iopl0   = { v1126[1] }
    iopl1   = { v1127[1] }
    nt      = { v1128[1] }
    ?15     = { v1129[1] }
    rf      = { v1130[1] }
    vm      = { v1131[1] }
    ac      = { v1132[1] }
    vif     = { v1133[1] }
    vip     = { v1134[1] }
    id      = { v1135[1] }
    ?22     = { v1136[1] }
    ?23     = { v1137[1] }
    ?24     = { v1138[1] }
    ?25     = { v1139[1] }
    ?26     = { v1140[1] }
    ?27     = { v1141[1] }
    ?28     = { v1142[1] }
    ?29     = { v1143[1] }
    ?30     = { v1144[1] }
    ?31     = { v1145[1] }
    ip      = { 0x80483a4[32] }
memory:
    addr=0x80496f0[32] value=v1146[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804839f}, expr=v891[32]} }
    cx      = { {defs={}, expr=v846[32]} }
    dx      = { {defs={}, expr=v847[32]} }
    bx      = { {defs={}, expr=v848[32]} }
    sp      = { {defs={}, expr=v849[32]} }
    bp      = { {defs={}, expr=v850[32]} }
    si      = { {defs={}, expr=v851[32]} }
    di      = { {defs={}, expr=v852[32]} }
    es      = { {defs={}, expr=v853[16]} }
    cs      = { {defs={}, expr=v854[16]} }
    ss      = { {defs={}, expr=v855[16]} }
    ds      = { {defs={}, expr=v856[16]} }
    fs      = { {defs={}, expr=v857[16]} }
    gs      = { {defs={}, expr=v858[16]} }
    cf      = { {defs={}, expr=v859[1]} }
    ?1      = { {defs={}, expr=v860[1]} }
    pf      = { {defs={}, expr=v861[1]} }
    ?3      = { {defs={}, expr=v862[1]} }
    af      = { {defs={}, expr=v863[1]} }
    ?5      = { {defs={}, expr=v864[1]} }
    zf      = { {defs={}, expr=v865[1]} }
    sf      = { {defs={}, expr=v866[1]} }
    tf      = { {defs={}, expr=v867[1]} }
    if      = { {defs={}, expr=v868[1]} }
    df      = { {defs={}, expr=v869[1]} }
    of      = { {defs={}, expr=v870[1]} }
    iopl0   = { {defs={}, expr=v871[1]} }
    iopl1   = { {defs={}, expr=v872[1]} }
    nt      = { {defs={}, expr=v873[1]} }
    ?15     = { {defs={}, expr=v874[1]} }
    rf      = { {defs={}, expr=v875[1]} }
    vm      = { {defs={}, expr=v876[1]} }
    ac      = { {defs={}, expr=v877[1]} }
    vif     = { {defs={}, expr=v878[1]} }
    vip     = { {defs={}, expr=v879[1]} }
    id      = { {defs={}, expr=v880[1]} }
    ?22     = { {defs={}, expr=v881[1]} }
    ?23     = { {defs={}, expr=v882[1]} }
    ?24     = { {defs={}, expr=v883[1]} }
    ?25     = { {defs={}, expr=v884[1]} }
    ?26     = { {defs={}, expr=v885[1]} }
    ?27     = { {defs={}, expr=v886[1]} }
    ?28     = { {defs={}, expr=v887[1]} }
    ?29     = { {defs={}, expr=v888[1]} }
    ?30     = { {defs={}, expr=v889[1]} }
    ?31     = { {defs={}, expr=v890[1]} }
    ip      = { {defs={0x0804839f}, expr=0x080483a4[32]} }
memory:
    addr={defs={0x0804839f}, expr=0x080496f3[32]} value={defs={0x0804839f}, expr=(extract[8] 24[32] 32[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f2[32]} value={defs={0x0804839f}, expr=(extract[8] 16[32] 24[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f1[32]} value={defs={0x0804839f}, expr=(extract[8] 8[32] 16[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f0[32]} value={defs={0x0804839f}, expr=(extract[8] 0[32] 8[32] v891[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483a4[32] }
memory:
0x80483a4:mov    edx, DWORD PTR ds:[eax]
== PartialSymbolic ==
registers:
    ax      = { v1146[32] }
    cx      = { v1101[32] }
    dx      = { v1148[32] }
    bx      = { v1103[32] }
    sp      = { v1104[32] }
    bp      = { v1105[32] }
    si      = { v1106[32] }
    di      = { v1107[32] }
    es      = { v1108[16] }
    cs      = { v1109[16] }
    ss      = { v1110[16] }
    ds      = { v1111[16] }
    fs      = { v1112[16] }
    gs      = { v1113[16] }
    cf      = { v1114[1] }
    ?1      = { v1115[1] }
    pf      = { v1116[1] }
    ?3      = { v1117[1] }
    af      = { v1118[1] }
    ?5      = { v1119[1] }
    zf      = { v1120[1] }
    sf      = { v1121[1] }
    tf      = { v1122[1] }
    if      = { v1123[1] }
    df      = { v1124[1] }
    of      = { v1125[1] }
    iopl0   = { v1126[1] }
    iopl1   = { v1127[1] }
    nt      = { v1128[1] }
    ?15     = { v1129[1] }
    rf      = { v1130[1] }
    vm      = { v1131[1] }
    ac      = { v1132[1] }
    vif     = { v1133[1] }
    vip     = { v1134[1] }
    id      = { v1135[1] }
    ?22     = { v1136[1] }
    ?23     = { v1137[1] }
    ?24     = { v1138[1] }
    ?25     = { v1139[1] }
    ?26     = { v1140[1] }
    ?27     = { v1141[1] }
    ?28     = { v1142[1] }
    ?29     = { v1143[1] }
    ?30     = { v1144[1] }
    ?31     = { v1145[1] }
    ip      = { 0x80483a6[32] }
memory:
    addr=v1146[32] value=v1148[32]
    addr=0x80496f0[32] value=v1146[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804839f}, expr=v891[32]} }
    cx      = { {defs={}, expr=v846[32]} }
    dx      = { {defs={0x080483a4}, expr=v896[32]} }
    bx      = { {defs={}, expr=v848[32]} }
    sp      = { {defs={}, expr=v849[32]} }
    bp      = { {defs={}, expr=v850[32]} }
    si      = { {defs={}, expr=v851[32]} }
    di      = { {defs={}, expr=v852[32]} }
    es      = { {defs={}, expr=v853[16]} }
    cs      = { {defs={}, expr=v854[16]} }
    ss      = { {defs={}, expr=v855[16]} }
    ds      = { {defs={}, expr=v856[16]} }
    fs      = { {defs={}, expr=v857[16]} }
    gs      = { {defs={}, expr=v858[16]} }
    cf      = { {defs={}, expr=v859[1]} }
    ?1      = { {defs={}, expr=v860[1]} }
    pf      = { {defs={}, expr=v861[1]} }
    ?3      = { {defs={}, expr=v862[1]} }
    af      = { {defs={}, expr=v863[1]} }
    ?5      = { {defs={}, expr=v864[1]} }
    zf      = { {defs={}, expr=v865[1]} }
    sf      = { {defs={}, expr=v866[1]} }
    tf      = { {defs={}, expr=v867[1]} }
    if      = { {defs={}, expr=v868[1]} }
    df      = { {defs={}, expr=v869[1]} }
    of      = { {defs={}, expr=v870[1]} }
    iopl0   = { {defs={}, expr=v871[1]} }
    iopl1   = { {defs={}, expr=v872[1]} }
    nt      = { {defs={}, expr=v873[1]} }
    ?15     = { {defs={}, expr=v874[1]} }
    rf      = { {defs={}, expr=v875[1]} }
    vm      = { {defs={}, expr=v876[1]} }
    ac      = { {defs={}, expr=v877[1]} }
    vif     = { {defs={}, expr=v878[1]} }
    vip     = { {defs={}, expr=v879[1]} }
    id      = { {defs={}, expr=v880[1]} }
    ?22     = { {defs={}, expr=v881[1]} }
    ?23     = { {defs={}, expr=v882[1]} }
    ?24     = { {defs={}, expr=v883[1]} }
    ?25     = { {defs={}, expr=v884[1]} }
    ?26     = { {defs={}, expr=v885[1]} }
    ?27     = { {defs={}, expr=v886[1]} }
    ?28     = { {defs={}, expr=v887[1]} }
    ?29     = { {defs={}, expr=v888[1]} }
    ?30     = { {defs={}, expr=v889[1]} }
    ?31     = { {defs={}, expr=v890[1]} }
    ip      = { {defs={0x080483a4}, expr=0x080483a6[32]} }
memory:
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 3[32])} value={defs={0x080483a4}, expr=(extract[8] 24[32] 32[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 2[32])} value={defs={0x080483a4}, expr=(extract[8] 16[32] 24[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 1[32])} value={defs={0x080483a4}, expr=(extract[8] 8[32] 16[32] v896[32])}
    addr={defs={0x0804839f}, expr=v891[32]} value={defs={0x080483a4}, expr=(extract[8] 0[32] 8[32] v896[32])}
    addr={defs={0x0804839f}, expr=0x080496f3[32]} value={defs={0x0804839f}, expr=(extract[8] 24[32] 32[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f2[32]} value={defs={0x0804839f}, expr=(extract[8] 16[32] 24[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f1[32]} value={defs={0x0804839f}, expr=(extract[8] 8[32] 16[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f0[32]} value={defs={0x0804839f}, expr=(extract[8] 0[32] 8[32] v891[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483a6[32] }
memory:
0x80483a6:test   edx, edx
== PartialSymbolic ==
registers:
    ax      = { v1146[32] }
    cx      = { v1101[32] }
    dx      = { v1148[32] }
    bx      = { v1103[32] }
    sp      = { v1104[32] }
    bp      = { v1105[32] }
    si      = { v1106[32] }
    di      = { v1107[32] }
    es      = { v1108[16] }
    cs      = { v1109[16] }
    ss      = { v1110[16] }
    ds      = { v1111[16] }
    fs      = { v1112[16] }
    gs      = { v1113[16] }
    cf      = { 0x0[1] }
    ?1      = { v1115[1] }
    pf      = { -v1190+0x1[1] }
    ?3      = { v1117[1] }
    af      = { v1193[1] }
    ?5      = { v1119[1] }
    zf      = { v1192[1] }
    sf      = { v1191[1] }
    tf      = { v1122[1] }
    if      = { v1123[1] }
    df      = { v1124[1] }
    of      = { 0x0[1] }
    iopl0   = { v1126[1] }
    iopl1   = { v1127[1] }
    nt      = { v1128[1] }
    ?15     = { v1129[1] }
    rf      = { v1130[1] }
    vm      = { v1131[1] }
    ac      = { v1132[1] }
    vif     = { v1133[1] }
    vip     = { v1134[1] }
    id      = { v1135[1] }
    ?22     = { v1136[1] }
    ?23     = { v1137[1] }
    ?24     = { v1138[1] }
    ?25     = { v1139[1] }
    ?26     = { v1140[1] }
    ?27     = { v1141[1] }
    ?28     = { v1142[1] }
    ?29     = { v1143[1] }
    ?30     = { v1144[1] }
    ?31     = { v1145[1] }
    ip      = { 0x80483a8[32] }
memory:
    addr=v1146[32] value=v1148[32]
    addr=0x80496f0[32] value=v1146[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804839f}, expr=v891[32]} }
    cx      = { {defs={}, expr=v846[32]} }
    dx      = { {defs={0x080483a4}, expr=v896[32]} }
    bx      = { {defs={}, expr=v848[32]} }
    sp      = { {defs={}, expr=v849[32]} }
    bp      = { {defs={}, expr=v850[32]} }
    si      = { {defs={}, expr=v851[32]} }
    di      = { {defs={}, expr=v852[32]} }
    es      = { {defs={}, expr=v853[16]} }
    cs      = { {defs={}, expr=v854[16]} }
    ss      = { {defs={}, expr=v855[16]} }
    ds      = { {defs={}, expr=v856[16]} }
    fs      = { {defs={}, expr=v857[16]} }
    gs      = { {defs={}, expr=v858[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v860[1]} }
    pf      = { {defs={0x080483a4,0x080483a6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))))))} }
    ?3      = { {defs={}, expr=v862[1]} }
    af      = { {defs={}, expr=v901[1]} }
    ?5      = { {defs={}, expr=v864[1]} }
    zf      = { {defs={0x080483a4,0x080483a6}, expr=(zerop[1] (bv-and[32] v896[32] v896[32]))} }
    sf      = { {defs={0x080483a4,0x080483a6}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v896[32] v896[32]))} }
    tf      = { {defs={}, expr=v867[1]} }
    if      = { {defs={}, expr=v868[1]} }
    df      = { {defs={}, expr=v869[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v871[1]} }
    iopl1   = { {defs={}, expr=v872[1]} }
    nt      = { {defs={}, expr=v873[1]} }
    ?15     = { {defs={}, expr=v874[1]} }
    rf      = { {defs={}, expr=v875[1]} }
    vm      = { {defs={}, expr=v876[1]} }
    ac      = { {defs={}, expr=v877[1]} }
    vif     = { {defs={}, expr=v878[1]} }
    vip     = { {defs={}, expr=v879[1]} }
    id      = { {defs={}, expr=v880[1]} }
    ?22     = { {defs={}, expr=v881[1]} }
    ?23     = { {defs={}, expr=v882[1]} }
    ?24     = { {defs={}, expr=v883[1]} }
    ?25     = { {defs={}, expr=v884[1]} }
    ?26     = { {defs={}, expr=v885[1]} }
    ?27     = { {defs={}, expr=v886[1]} }
    ?28     = { {defs={}, expr=v887[1]} }
    ?29     = { {defs={}, expr=v888[1]} }
    ?30     = { {defs={}, expr=v889[1]} }
    ?31     = { {defs={}, expr=v890[1]} }
    ip      = { {defs={0x080483a6}, expr=0x080483a8[32]} }
memory:
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 3[32])} value={defs={0x080483a4}, expr=(extract[8] 24[32] 32[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 2[32])} value={defs={0x080483a4}, expr=(extract[8] 16[32] 24[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 1[32])} value={defs={0x080483a4}, expr=(extract[8] 8[32] 16[32] v896[32])}
    addr={defs={0x0804839f}, expr=v891[32]} value={defs={0x080483a4}, expr=(extract[8] 0[32] 8[32] v896[32])}
    addr={defs={0x0804839f}, expr=0x080496f3[32]} value={defs={0x0804839f}, expr=(extract[8] 24[32] 32[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f2[32]} value={defs={0x0804839f}, expr=(extract[8] 16[32] 24[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f1[32]} value={defs={0x0804839f}, expr=(extract[8] 8[32] 16[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f0[32]} value={defs={0x0804839f}, expr=(extract[8] 0[32] 8[32] v891[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483a8[32] }
memory:
0x80483a8:je     0x080483c5<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v1146[32] }
    cx      = { v1101[32] }
    dx      = { v1148[32] }
    bx      = { v1103[32] }
    sp      = { v1104[32] }
    bp      = { v1105[32] }
    si      = { v1106[32] }
    di      = { v1107[32] }
    es      = { v1108[16] }
    cs      = { v1109[16] }
    ss      = { v1110[16] }
    ds      = { v1111[16] }
    fs      = { v1112[16] }
    gs      = { v1113[16] }
    cf      = { 0x0[1] }
    ?1      = { v1115[1] }
    pf      = { -v1190+0x1[1] }
    ?3      = { v1117[1] }
    af      = { v1193[1] }
    ?5      = { v1119[1] }
    zf      = { v1192[1] }
    sf      = { v1191[1] }
    tf      = { v1122[1] }
    if      = { v1123[1] }
    df      = { v1124[1] }
    of      = { 0x0[1] }
    iopl0   = { v1126[1] }
    iopl1   = { v1127[1] }
    nt      = { v1128[1] }
    ?15     = { v1129[1] }
    rf      = { v1130[1] }
    vm      = { v1131[1] }
    ac      = { v1132[1] }
    vif     = { v1133[1] }
    vip     = { v1134[1] }
    id      = { v1135[1] }
    ?22     = { v1136[1] }
    ?23     = { v1137[1] }
    ?24     = { v1138[1] }
    ?25     = { v1139[1] }
    ?26     = { v1140[1] }
    ?27     = { v1141[1] }
    ?28     = { v1142[1] }
    ?29     = { v1143[1] }
    ?30     = { v1144[1] }
    ?31     = { v1145[1] }
    ip      = { v1194[32] }
memory:
    addr=v1146[32] value=v1148[32]
    addr=0x80496f0[32] value=v1146[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804839f}, expr=v891[32]} }
    cx      = { {defs={}, expr=v846[32]} }
    dx      = { {defs={0x080483a4}, expr=v896[32]} }
    bx      = { {defs={}, expr=v848[32]} }
    sp      = { {defs={}, expr=v849[32]} }
    bp      = { {defs={}, expr=v850[32]} }
    si      = { {defs={}, expr=v851[32]} }
    di      = { {defs={}, expr=v852[32]} }
    es      = { {defs={}, expr=v853[16]} }
    cs      = { {defs={}, expr=v854[16]} }
    ss      = { {defs={}, expr=v855[16]} }
    ds      = { {defs={}, expr=v856[16]} }
    fs      = { {defs={}, expr=v857[16]} }
    gs      = { {defs={}, expr=v858[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v860[1]} }
    pf      = { {defs={0x080483a4,0x080483a6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))))))} }
    ?3      = { {defs={}, expr=v862[1]} }
    af      = { {defs={}, expr=v901[1]} }
    ?5      = { {defs={}, expr=v864[1]} }
    zf      = { {defs={0x080483a4,0x080483a6}, expr=(zerop[1] (bv-and[32] v896[32] v896[32]))} }
    sf      = { {defs={0x080483a4,0x080483a6}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v896[32] v896[32]))} }
    tf      = { {defs={}, expr=v867[1]} }
    if      = { {defs={}, expr=v868[1]} }
    df      = { {defs={}, expr=v869[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v871[1]} }
    iopl1   = { {defs={}, expr=v872[1]} }
    nt      = { {defs={}, expr=v873[1]} }
    ?15     = { {defs={}, expr=v874[1]} }
    rf      = { {defs={}, expr=v875[1]} }
    vm      = { {defs={}, expr=v876[1]} }
    ac      = { {defs={}, expr=v877[1]} }
    vif     = { {defs={}, expr=v878[1]} }
    vip     = { {defs={}, expr=v879[1]} }
    id      = { {defs={}, expr=v880[1]} }
    ?22     = { {defs={}, expr=v881[1]} }
    ?23     = { {defs={}, expr=v882[1]} }
    ?24     = { {defs={}, expr=v883[1]} }
    ?25     = { {defs={}, expr=v884[1]} }
    ?26     = { {defs={}, expr=v885[1]} }
    ?27     = { {defs={}, expr=v886[1]} }
    ?28     = { {defs={}, expr=v887[1]} }
    ?29     = { {defs={}, expr=v888[1]} }
    ?30     = { {defs={}, expr=v889[1]} }
    ?31     = { {defs={}, expr=v890[1]} }
    ip      = { {defs={0x080483a4,0x080483a6,0x080483a8}, expr=(ite[32] (zerop[1] (bv-and[32] v896[32] v896[32])) 0x080483c5[32] 0x080483aa[32])} }
memory:
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 3[32])} value={defs={0x080483a4}, expr=(extract[8] 24[32] 32[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 2[32])} value={defs={0x080483a4}, expr=(extract[8] 16[32] 24[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 1[32])} value={defs={0x080483a4}, expr=(extract[8] 8[32] 16[32] v896[32])}
    addr={defs={0x0804839f}, expr=v891[32]} value={defs={0x080483a4}, expr=(extract[8] 0[32] 8[32] v896[32])}
    addr={defs={0x0804839f}, expr=0x080496f3[32]} value={defs={0x0804839f}, expr=(extract[8] 24[32] 32[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f2[32]} value={defs={0x0804839f}, expr=(extract[8] 16[32] 24[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f1[32]} value={defs={0x0804839f}, expr=(extract[8] 8[32] 16[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f0[32]} value={defs={0x0804839f}, expr=(extract[8] 0[32] 8[32] v891[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483c5[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
== PartialSymbolic ==
registers:
    ax      = { v1197[32] }
    cx      = { v1198[32] }
    dx      = { v1199[32] }
    bx      = { v1200[32] }
    sp      = { v1201[32] }
    bp      = { v1202[32] }
    si      = { v1203[32] }
    di      = { v1204[32] }
    es      = { v1205[16] }
    cs      = { v1206[16] }
    ss      = { v1207[16] }
    ds      = { v1208[16] }
    fs      = { v1209[16] }
    gs      = { v1210[16] }
    cf      = { v1211[1] }
    ?1      = { v1212[1] }
    pf      = { v1213[1] }
    ?3      = { v1214[1] }
    af      = { v1215[1] }
    ?5      = { v1216[1] }
    zf      = { v1217[1] }
    sf      = { v1218[1] }
    tf      = { v1219[1] }
    if      = { v1220[1] }
    df      = { v1221[1] }
    of      = { v1222[1] }
    iopl0   = { v1223[1] }
    iopl1   = { v1224[1] }
    nt      = { v1225[1] }
    ?15     = { v1226[1] }
    rf      = { v1227[1] }
    vm      = { v1228[1] }
    ac      = { v1229[1] }
    vif     = { v1230[1] }
    vip     = { v1231[1] }
    id      = { v1232[1] }
    ?22     = { v1233[1] }
    ?23     = { v1234[1] }
    ?24     = { v1235[1] }
    ?25     = { v1236[1] }
    ?26     = { v1237[1] }
    ?27     = { v1238[1] }
    ?28     = { v1239[1] }
    ?29     = { v1240[1] }
    ?30     = { v1241[1] }
    ?31     = { v1242[1] }
    ip      = { 0x80483b0[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v904[32]} }
    cx      = { {defs={}, expr=v905[32]} }
    dx      = { {defs={}, expr=v906[32]} }
    bx      = { {defs={}, expr=v907[32]} }
    sp      = { {defs={}, expr=v908[32]} }
    bp      = { {defs={}, expr=v909[32]} }
    si      = { {defs={}, expr=v910[32]} }
    di      = { {defs={}, expr=v911[32]} }
    es      = { {defs={}, expr=v912[16]} }
    cs      = { {defs={}, expr=v913[16]} }
    ss      = { {defs={}, expr=v914[16]} }
    ds      = { {defs={}, expr=v915[16]} }
    fs      = { {defs={}, expr=v916[16]} }
    gs      = { {defs={}, expr=v917[16]} }
    cf      = { {defs={}, expr=v918[1]} }
    ?1      = { {defs={}, expr=v919[1]} }
    pf      = { {defs={}, expr=v920[1]} }
    ?3      = { {defs={}, expr=v921[1]} }
    af      = { {defs={}, expr=v922[1]} }
    ?5      = { {defs={}, expr=v923[1]} }
    zf      = { {defs={}, expr=v924[1]} }
    sf      = { {defs={}, expr=v925[1]} }
    tf      = { {defs={}, expr=v926[1]} }
    if      = { {defs={}, expr=v927[1]} }
    df      = { {defs={}, expr=v928[1]} }
    of      = { {defs={}, expr=v929[1]} }
    iopl0   = { {defs={}, expr=v930[1]} }
    iopl1   = { {defs={}, expr=v931[1]} }
    nt      = { {defs={}, expr=v932[1]} }
    ?15     = { {defs={}, expr=v933[1]} }
    rf      = { {defs={}, expr=v934[1]} }
    vm      = { {defs={}, expr=v935[1]} }
    ac      = { {defs={}, expr=v936[1]} }
    vif     = { {defs={}, expr=v937[1]} }
    vip     = { {defs={}, expr=v938[1]} }
    id      = { {defs={}, expr=v939[1]} }
    ?22     = { {defs={}, expr=v940[1]} }
    ?23     = { {defs={}, expr=v941[1]} }
    ?24     = { {defs={}, expr=v942[1]} }
    ?25     = { {defs={}, expr=v943[1]} }
    ?26     = { {defs={}, expr=v944[1]} }
    ?27     = { {defs={}, expr=v945[1]} }
    ?28     = { {defs={}, expr=v946[1]} }
    ?29     = { {defs={}, expr=v947[1]} }
    ?30     = { {defs={}, expr=v948[1]} }
    ?31     = { {defs={}, expr=v949[1]} }
    ip      = { {defs={0x080483aa}, expr=0x080483b0[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483b0[32] }
memory:
0x80483b0:add    eax, 0x04
== PartialSymbolic ==
registers:
    ax      = { v1197+0x4[32] }
    cx      = { v1198[32] }
    dx      = { v1199[32] }
    bx      = { v1200[32] }
    sp      = { v1201[32] }
    bp      = { v1202[32] }
    si      = { v1203[32] }
    di      = { v1204[32] }
    es      = { v1205[16] }
    cs      = { v1206[16] }
    ss      = { v1207[16] }
    ds      = { v1208[16] }
    fs      = { v1209[16] }
    gs      = { v1210[16] }
    cf      = { v1260[1] }
    ?1      = { v1212[1] }
    pf      = { -v1257+0x1[1] }
    ?3      = { v1214[1] }
    af      = { v1262[1] }
    ?5      = { v1216[1] }
    zf      = { v1259[1] }
    sf      = { v1258[1] }
    tf      = { v1219[1] }
    if      = { v1220[1] }
    df      = { v1221[1] }
    of      = { v1263[1] }
    iopl0   = { v1223[1] }
    iopl1   = { v1224[1] }
    nt      = { v1225[1] }
    ?15     = { v1226[1] }
    rf      = { v1227[1] }
    vm      = { v1228[1] }
    ac      = { v1229[1] }
    vif     = { v1230[1] }
    vip     = { v1231[1] }
    id      = { v1232[1] }
    ?22     = { v1233[1] }
    ?23     = { v1234[1] }
    ?24     = { v1235[1] }
    ?25     = { v1236[1] }
    ?26     = { v1237[1] }
    ?27     = { v1238[1] }
    ?28     = { v1239[1] }
    ?29     = { v1240[1] }
    ?30     = { v1241[1] }
    ?31     = { v1242[1] }
    ip      = { 0x80483b3[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={0x080483b0}, expr=(add[32] v904[32] 4[32])} }
    cx      = { {defs={}, expr=v905[32]} }
    dx      = { {defs={}, expr=v906[32]} }
    bx      = { {defs={}, expr=v907[32]} }
    sp      = { {defs={}, expr=v908[32]} }
    bp      = { {defs={}, expr=v909[32]} }
    si      = { {defs={}, expr=v910[32]} }
    di      = { {defs={}, expr=v911[32]} }
    es      = { {defs={}, expr=v912[16]} }
    cs      = { {defs={}, expr=v913[16]} }
    ss      = { {defs={}, expr=v914[16]} }
    ds      = { {defs={}, expr=v915[16]} }
    fs      = { {defs={}, expr=v916[16]} }
    gs      = { {defs={}, expr=v917[16]} }
    cf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?1      = { {defs={}, expr=v919[1]} }
    pf      = { {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))))))} }
    ?3      = { {defs={}, expr=v921[1]} }
    af      = { {defs={0x080483b0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?5      = { {defs={}, expr=v923[1]} }
    zf      = { {defs={0x080483b0}, expr=(zerop[1] (add[32] v904[32] 4[32]))} }
    sf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] v904[32] 4[32]))} }
    tf      = { {defs={}, expr=v926[1]} }
    if      = { {defs={}, expr=v927[1]} }
    df      = { {defs={}, expr=v928[1]} }
    of      = { {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))))} }
    iopl0   = { {defs={}, expr=v930[1]} }
    iopl1   = { {defs={}, expr=v931[1]} }
    nt      = { {defs={}, expr=v932[1]} }
    ?15     = { {defs={}, expr=v933[1]} }
    rf      = { {defs={}, expr=v934[1]} }
    vm      = { {defs={}, expr=v935[1]} }
    ac      = { {defs={}, expr=v936[1]} }
    vif     = { {defs={}, expr=v937[1]} }
    vip     = { {defs={}, expr=v938[1]} }
    id      = { {defs={}, expr=v939[1]} }
    ?22     = { {defs={}, expr=v940[1]} }
    ?23     = { {defs={}, expr=v941[1]} }
    ?24     = { {defs={}, expr=v942[1]} }
    ?25     = { {defs={}, expr=v943[1]} }
    ?26     = { {defs={}, expr=v944[1]} }
    ?27     = { {defs={}, expr=v945[1]} }
    ?28     = { {defs={}, expr=v946[1]} }
    ?29     = { {defs={}, expr=v947[1]} }
    ?30     = { {defs={}, expr=v948[1]} }
    ?31     = { {defs={}, expr=v949[1]} }
    ip      = { {defs={0x080483b0}, expr=0x080483b3[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483b3[32] }
memory:
0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax
== PartialSymbolic ==
registers:
    ax      = { v1197+0x4[32] }
    cx      = { v1198[32] }
    dx      = { v1199[32] }
    bx      = { v1200[32] }
    sp      = { v1201[32] }
    bp      = { v1202[32] }
    si      = { v1203[32] }
    di      = { v1204[32] }
    es      = { v1205[16] }
    cs      = { v1206[16] }
    ss      = { v1207[16] }
    ds      = { v1208[16] }
    fs      = { v1209[16] }
    gs      = { v1210[16] }
    cf      = { v1260[1] }
    ?1      = { v1212[1] }
    pf      = { -v1257+0x1[1] }
    ?3      = { v1214[1] }
    af      = { v1262[1] }
    ?5      = { v1216[1] }
    zf      = { v1259[1] }
    sf      = { v1258[1] }
    tf      = { v1219[1] }
    if      = { v1220[1] }
    df      = { v1221[1] }
    of      = { v1263[1] }
    iopl0   = { v1223[1] }
    iopl1   = { v1224[1] }
    nt      = { v1225[1] }
    ?15     = { v1226[1] }
    rf      = { v1227[1] }
    vm      = { v1228[1] }
    ac      = { v1229[1] }
    vif     = { v1230[1] }
    vip     = { v1231[1] }
    id      = { v1232[1] }
    ?22     = { v1233[1] }
    ?23     = { v1234[1] }
    ?24     = { v1235[1] }
    ?25     = { v1236[1] }
    ?26     = { v1237[1] }
    ?27     = { v1238[1] }
    ?28     = { v1239[1] }
    ?29     = { v1240[1] }
    ?30     = { v1241[1] }
    ?31     = { v1242[1] }
    ip      = { 0x80483b8[32] }
memory:
    addr=0x80496f0[32] value=v1197+0x4[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483b0}, expr=(add[32] v904[32] 4[32])} }
    cx      = { {defs={}, expr=v905[32]} }
    dx      = { {defs={}, expr=v906[32]} }
    bx      = { {defs={}, expr=v907[32]} }
    sp      = { {defs={}, expr=v908[32]} }
    bp      = { {defs={}, expr=v909[32]} }
    si      = { {defs={}, expr=v910[32]} }
    di      = { {defs={}, expr=v911[32]} }
    es      = { {defs={}, expr=v912[16]} }
    cs      = { {defs={}, expr=v913[16]} }
    ss      = { {defs={}, expr=v914[16]} }
    ds      = { {defs={}, expr=v915[16]} }
    fs      = { {defs={}, expr=v916[16]} }
    gs      = { {defs={}, expr=v917[16]} }
    cf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?1      = { {defs={}, expr=v919[1]} }
    pf      = { {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))))))} }
    ?3      = { {defs={}, expr=v921[1]} }
    af      = { {defs={0x080483b0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?5      = { {defs={}, expr=v923[1]} }
    zf      = { {defs={0x080483b0}, expr=(zerop[1] (add[32] v904[32] 4[32]))} }
    sf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] v904[32] 4[32]))} }
    tf      = { {defs={}, expr=v926[1]} }
    if      = { {defs={}, expr=v927[1]} }
    df      = { {defs={}, expr=v928[1]} }
    of      = { {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))))} }
    iopl0   = { {defs={}, expr=v930[1]} }
    iopl1   = { {defs={}, expr=v931[1]} }
    nt      = { {defs={}, expr=v932[1]} }
    ?15     = { {defs={}, expr=v933[1]} }
    rf      = { {defs={}, expr=v934[1]} }
    vm      = { {defs={}, expr=v935[1]} }
    ac      = { {defs={}, expr=v936[1]} }
    vif     = { {defs={}, expr=v937[1]} }
    vip     = { {defs={}, expr=v938[1]} }
    id      = { {defs={}, expr=v939[1]} }
    ?22     = { {defs={}, expr=v940[1]} }
    ?23     = { {defs={}, expr=v941[1]} }
    ?24     = { {defs={}, expr=v942[1]} }
    ?25     = { {defs={}, expr=v943[1]} }
    ?26     = { {defs={}, expr=v944[1]} }
    ?27     = { {defs={}, expr=v945[1]} }
    ?28     = { {defs={}, expr=v946[1]} }
    ?29     = { {defs={}, expr=v947[1]} }
    ?30     = { {defs={}, expr=v948[1]} }
    ?31     = { {defs={}, expr=v949[1]} }
    ip      = { {defs={0x080483b3}, expr=0x080483b8[32]} }
memory:
    addr={defs={0x080483b3}, expr=0x080496f3[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 24[32] 32[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f2[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 16[32] 24[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f1[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 8[32] 16[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f0[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483b8[32] }
memory:
0x80483b8:call   edx
== PartialSymbolic ==
registers:
    ax      = { v1197+0x4[32] }
    cx      = { v1198[32] }
    dx      = { v1199[32] }
    bx      = { v1200[32] }
    sp      = { v1201-0x4[32] }
    bp      = { v1202[32] }
    si      = { v1203[32] }
    di      = { v1204[32] }
    es      = { v1205[16] }
    cs      = { v1206[16] }
    ss      = { v1207[16] }
    ds      = { v1208[16] }
    fs      = { v1209[16] }
    gs      = { v1210[16] }
    cf      = { v1260[1] }
    ?1      = { v1212[1] }
    pf      = { -v1257+0x1[1] }
    ?3      = { v1214[1] }
    af      = { v1262[1] }
    ?5      = { v1216[1] }
    zf      = { v1259[1] }
    sf      = { v1258[1] }
    tf      = { v1219[1] }
    if      = { v1220[1] }
    df      = { v1221[1] }
    of      = { v1263[1] }
    iopl0   = { v1223[1] }
    iopl1   = { v1224[1] }
    nt      = { v1225[1] }
    ?15     = { v1226[1] }
    rf      = { v1227[1] }
    vm      = { v1228[1] }
    ac      = { v1229[1] }
    vif     = { v1230[1] }
    vip     = { v1231[1] }
    id      = { v1232[1] }
    ?22     = { v1233[1] }
    ?23     = { v1234[1] }
    ?24     = { v1235[1] }
    ?25     = { v1236[1] }
    ?26     = { v1237[1] }
    ?27     = { v1238[1] }
    ?28     = { v1239[1] }
    ?29     = { v1240[1] }
    ?30     = { v1241[1] }
    ?31     = { v1242[1] }
    ip      = { v1199[32] }
memory:
    addr=v1201-0x4[32] value=0x80483ba[32]
    addr=0x80496f0[32] value=v1197+0x4[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483b0}, expr=(add[32] v904[32] 4[32])} }
    cx      = { {defs={}, expr=v905[32]} }
    dx      = { {defs={}, expr=v906[32]} }
    bx      = { {defs={}, expr=v907[32]} }
    sp      = { {defs={0x080483b8}, expr=(add[32] v908[32] -4[32])} }
    bp      = { {defs={}, expr=v909[32]} }
    si      = { {defs={}, expr=v910[32]} }
    di      = { {defs={}, expr=v911[32]} }
    es      = { {defs={}, expr=v912[16]} }
    cs      = { {defs={}, expr=v913[16]} }
    ss      = { {defs={}, expr=v914[16]} }
    ds      = { {defs={}, expr=v915[16]} }
    fs      = { {defs={}, expr=v916[16]} }
    gs      = { {defs={}, expr=v917[16]} }
    cf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?1      = { {defs={}, expr=v919[1]} }
    pf      = { {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))))))} }
    ?3      = { {defs={}, expr=v921[1]} }
    af      = { {defs={0x080483b0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?5      = { {defs={}, expr=v923[1]} }
    zf      = { {defs={0x080483b0}, expr=(zerop[1] (add[32] v904[32] 4[32]))} }
    sf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] v904[32] 4[32]))} }
    tf      = { {defs={}, expr=v926[1]} }
    if      = { {defs={}, expr=v927[1]} }
    df      = { {defs={}, expr=v928[1]} }
    of      = { {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))))} }
    iopl0   = { {defs={}, expr=v930[1]} }
    iopl1   = { {defs={}, expr=v931[1]} }
    nt      = { {defs={}, expr=v932[1]} }
    ?15     = { {defs={}, expr=v933[1]} }
    rf      = { {defs={}, expr=v934[1]} }
    vm      = { {defs={}, expr=v935[1]} }
    ac      = { {defs={}, expr=v936[1]} }
    vif     = { {defs={}, expr=v937[1]} }
    vip     = { {defs={}, expr=v938[1]} }
    id      = { {defs={}, expr=v939[1]} }
    ?22     = { {defs={}, expr=v940[1]} }
    ?23     = { {defs={}, expr=v941[1]} }
    ?24     = { {defs={}, expr=v942[1]} }
    ?25     = { {defs={}, expr=v943[1]} }
    ?26     = { {defs={}, expr=v944[1]} }
    ?27     = { {defs={}, expr=v945[1]} }
    ?28     = { {defs={}, expr=v946[1]} }
    ?29     = { {defs={}, expr=v947[1]} }
    ?30     = { {defs={}, expr=v948[1]} }
    ?31     = { {defs={}, expr=v949[1]} }
    ip      = { {defs={}, expr=v906[32]} }
memory:
    addr={defs={0x080483b8}, expr=(add[32] (add[32] v908[32] -4[32]) 3[32])} value={defs={0x080483b8}, expr=8[8]}
    addr={defs={0x080483b8}, expr=(add[32] (add[32] v908[32] -4[32]) 2[32])} value={defs={0x080483b8}, expr=4[8]}
    addr={defs={0x080483b8}, expr=(add[32] (add[32] v908[32] -4[32]) 1[32])} value={defs={0x080483b8}, expr=-125[8]}
    addr={defs={0x080483b8}, expr=(add[32] v908[32] -4[32])} value={defs={0x080483b8}, expr=-70[8]}
    addr={defs={0x080483b3}, expr=0x080496f3[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 24[32] 32[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f2[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 16[32] 24[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f1[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 8[32] 16[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f0[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
== PartialSymbolic ==
registers:
    ax      = { v1312[32] }
    cx      = { v1267[32] }
    dx      = { v1268[32] }
    bx      = { v1269[32] }
    sp      = { v1270[32] }
    bp      = { v1271[32] }
    si      = { v1272[32] }
    di      = { v1273[32] }
    es      = { v1274[16] }
    cs      = { v1275[16] }
    ss      = { v1276[16] }
    ds      = { v1277[16] }
    fs      = { v1278[16] }
    gs      = { v1279[16] }
    cf      = { v1280[1] }
    ?1      = { v1281[1] }
    pf      = { v1282[1] }
    ?3      = { v1283[1] }
    af      = { v1284[1] }
    ?5      = { v1285[1] }
    zf      = { v1286[1] }
    sf      = { v1287[1] }
    tf      = { v1288[1] }
    if      = { v1289[1] }
    df      = { v1290[1] }
    of      = { v1291[1] }
    iopl0   = { v1292[1] }
    iopl1   = { v1293[1] }
    nt      = { v1294[1] }
    ?15     = { v1295[1] }
    rf      = { v1296[1] }
    vm      = { v1297[1] }
    ac      = { v1298[1] }
    vif     = { v1299[1] }
    vip     = { v1300[1] }
    id      = { v1301[1] }
    ?22     = { v1302[1] }
    ?23     = { v1303[1] }
    ?24     = { v1304[1] }
    ?25     = { v1305[1] }
    ?26     = { v1306[1] }
    ?27     = { v1307[1] }
    ?28     = { v1308[1] }
    ?29     = { v1309[1] }
    ?30     = { v1310[1] }
    ?31     = { v1311[1] }
    ip      = { 0x80483bf[32] }
memory:
    addr=0x80496f0[32] value=v1312[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483ba}, expr=v998[32]} }
    cx      = { {defs={}, expr=v953[32]} }
    dx      = { {defs={}, expr=v954[32]} }
    bx      = { {defs={}, expr=v955[32]} }
    sp      = { {defs={}, expr=v956[32]} }
    bp      = { {defs={}, expr=v957[32]} }
    si      = { {defs={}, expr=v958[32]} }
    di      = { {defs={}, expr=v959[32]} }
    es      = { {defs={}, expr=v960[16]} }
    cs      = { {defs={}, expr=v961[16]} }
    ss      = { {defs={}, expr=v962[16]} }
    ds      = { {defs={}, expr=v963[16]} }
    fs      = { {defs={}, expr=v964[16]} }
    gs      = { {defs={}, expr=v965[16]} }
    cf      = { {defs={}, expr=v966[1]} }
    ?1      = { {defs={}, expr=v967[1]} }
    pf      = { {defs={}, expr=v968[1]} }
    ?3      = { {defs={}, expr=v969[1]} }
    af      = { {defs={}, expr=v970[1]} }
    ?5      = { {defs={}, expr=v971[1]} }
    zf      = { {defs={}, expr=v972[1]} }
    sf      = { {defs={}, expr=v973[1]} }
    tf      = { {defs={}, expr=v974[1]} }
    if      = { {defs={}, expr=v975[1]} }
    df      = { {defs={}, expr=v976[1]} }
    of      = { {defs={}, expr=v977[1]} }
    iopl0   = { {defs={}, expr=v978[1]} }
    iopl1   = { {defs={}, expr=v979[1]} }
    nt      = { {defs={}, expr=v980[1]} }
    ?15     = { {defs={}, expr=v981[1]} }
    rf      = { {defs={}, expr=v982[1]} }
    vm      = { {defs={}, expr=v983[1]} }
    ac      = { {defs={}, expr=v984[1]} }
    vif     = { {defs={}, expr=v985[1]} }
    vip     = { {defs={}, expr=v986[1]} }
    id      = { {defs={}, expr=v987[1]} }
    ?22     = { {defs={}, expr=v988[1]} }
    ?23     = { {defs={}, expr=v989[1]} }
    ?24     = { {defs={}, expr=v990[1]} }
    ?25     = { {defs={}, expr=v991[1]} }
    ?26     = { {defs={}, expr=v992[1]} }
    ?27     = { {defs={}, expr=v993[1]} }
    ?28     = { {defs={}, expr=v994[1]} }
    ?29     = { {defs={}, expr=v995[1]} }
    ?30     = { {defs={}, expr=v996[1]} }
    ?31     = { {defs={}, expr=v997[1]} }
    ip      = { {defs={0x080483ba}, expr=0x080483bf[32]} }
memory:
    addr={defs={0x080483ba}, expr=0x080496f3[32]} value={defs={0x080483ba}, expr=(extract[8] 24[32] 32[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f2[32]} value={defs={0x080483ba}, expr=(extract[8] 16[32] 24[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f1[32]} value={defs={0x080483ba}, expr=(extract[8] 8[32] 16[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f0[32]} value={defs={0x080483ba}, expr=(extract[8] 0[32] 8[32] v998[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483bf[32] }
memory:
0x80483bf:mov    edx, DWORD PTR ds:[eax]
== PartialSymbolic ==
registers:
    ax      = { v1312[32] }
    cx      = { v1267[32] }
    dx      = { v1314[32] }
    bx      = { v1269[32] }
    sp      = { v1270[32] }
    bp      = { v1271[32] }
    si      = { v1272[32] }
    di      = { v1273[32] }
    es      = { v1274[16] }
    cs      = { v1275[16] }
    ss      = { v1276[16] }
    ds      = { v1277[16] }
    fs      = { v1278[16] }
    gs      = { v1279[16] }
    cf      = { v1280[1] }
    ?1      = { v1281[1] }
    pf      = { v1282[1] }
    ?3      = { v1283[1] }
    af      = { v1284[1] }
    ?5      = { v1285[1] }
    zf      = { v1286[1] }
    sf      = { v1287[1] }
    tf      = { v1288[1] }
    if      = { v1289[1] }
    df      = { v1290[1] }
    of      = { v1291[1] }
    iopl0   = { v1292[1] }
    iopl1   = { v1293[1] }
    nt      = { v1294[1] }
    ?15     = { v1295[1] }
    rf      = { v1296[1] }
    vm      = { v1297[1] }
    ac      = { v1298[1] }
    vif     = { v1299[1] }
    vip     = { v1300[1] }
    id      = { v1301[1] }
    ?22     = { v1302[1] }
    ?23     = { v1303[1] }
    ?24     = { v1304[1] }
    ?25     = { v1305[1] }
    ?26     = { v1306[1] }
    ?27     = { v1307[1] }
    ?28     = { v1308[1] }
    ?29     = { v1309[1] }
    ?30     = { v1310[1] }
    ?31     = { v1311[1] }
    ip      = { 0x80483c1[32] }
memory:
    addr=v1312[32] value=v1314[32]
    addr=0x80496f0[32] value=v1312[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483ba}, expr=v998[32]} }
    cx      = { {defs={}, expr=v953[32]} }
    dx      = { {defs={0x080483bf}, expr=v1003[32]} }
    bx      = { {defs={}, expr=v955[32]} }
    sp      = { {defs={}, expr=v956[32]} }
    bp      = { {defs={}, expr=v957[32]} }
    si      = { {defs={}, expr=v958[32]} }
    di      = { {defs={}, expr=v959[32]} }
    es      = { {defs={}, expr=v960[16]} }
    cs      = { {defs={}, expr=v961[16]} }
    ss      = { {defs={}, expr=v962[16]} }
    ds      = { {defs={}, expr=v963[16]} }
    fs      = { {defs={}, expr=v964[16]} }
    gs      = { {defs={}, expr=v965[16]} }
    cf      = { {defs={}, expr=v966[1]} }
    ?1      = { {defs={}, expr=v967[1]} }
    pf      = { {defs={}, expr=v968[1]} }
    ?3      = { {defs={}, expr=v969[1]} }
    af      = { {defs={}, expr=v970[1]} }
    ?5      = { {defs={}, expr=v971[1]} }
    zf      = { {defs={}, expr=v972[1]} }
    sf      = { {defs={}, expr=v973[1]} }
    tf      = { {defs={}, expr=v974[1]} }
    if      = { {defs={}, expr=v975[1]} }
    df      = { {defs={}, expr=v976[1]} }
    of      = { {defs={}, expr=v977[1]} }
    iopl0   = { {defs={}, expr=v978[1]} }
    iopl1   = { {defs={}, expr=v979[1]} }
    nt      = { {defs={}, expr=v980[1]} }
    ?15     = { {defs={}, expr=v981[1]} }
    rf      = { {defs={}, expr=v982[1]} }
    vm      = { {defs={}, expr=v983[1]} }
    ac      = { {defs={}, expr=v984[1]} }
    vif     = { {defs={}, expr=v985[1]} }
    vip     = { {defs={}, expr=v986[1]} }
    id      = { {defs={}, expr=v987[1]} }
    ?22     = { {defs={}, expr=v988[1]} }
    ?23     = { {defs={}, expr=v989[1]} }
    ?24     = { {defs={}, expr=v990[1]} }
    ?25     = { {defs={}, expr=v991[1]} }
    ?26     = { {defs={}, expr=v992[1]} }
    ?27     = { {defs={}, expr=v993[1]} }
    ?28     = { {defs={}, expr=v994[1]} }
    ?29     = { {defs={}, expr=v995[1]} }
    ?30     = { {defs={}, expr=v996[1]} }
    ?31     = { {defs={}, expr=v997[1]} }
    ip      = { {defs={0x080483bf}, expr=0x080483c1[32]} }
memory:
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 3[32])} value={defs={0x080483bf}, expr=(extract[8] 24[32] 32[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 2[32])} value={defs={0x080483bf}, expr=(extract[8] 16[32] 24[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 1[32])} value={defs={0x080483bf}, expr=(extract[8] 8[32] 16[32] v1003[32])}
    addr={defs={0x080483ba}, expr=v998[32]} value={defs={0x080483bf}, expr=(extract[8] 0[32] 8[32] v1003[32])}
    addr={defs={0x080483ba}, expr=0x080496f3[32]} value={defs={0x080483ba}, expr=(extract[8] 24[32] 32[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f2[32]} value={defs={0x080483ba}, expr=(extract[8] 16[32] 24[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f1[32]} value={defs={0x080483ba}, expr=(extract[8] 8[32] 16[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f0[32]} value={defs={0x080483ba}, expr=(extract[8] 0[32] 8[32] v998[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483c1[32] }
memory:
0x80483c1:test   edx, edx
== PartialSymbolic ==
registers:
    ax      = { v1312[32] }
    cx      = { v1267[32] }
    dx      = { v1314[32] }
    bx      = { v1269[32] }
    sp      = { v1270[32] }
    bp      = { v1271[32] }
    si      = { v1272[32] }
    di      = { v1273[32] }
    es      = { v1274[16] }
    cs      = { v1275[16] }
    ss      = { v1276[16] }
    ds      = { v1277[16] }
    fs      = { v1278[16] }
    gs      = { v1279[16] }
    cf      = { 0x0[1] }
    ?1      = { v1281[1] }
    pf      = { -v1356+0x1[1] }
    ?3      = { v1283[1] }
    af      = { v1359[1] }
    ?5      = { v1285[1] }
    zf      = { v1358[1] }
    sf      = { v1357[1] }
    tf      = { v1288[1] }
    if      = { v1289[1] }
    df      = { v1290[1] }
    of      = { 0x0[1] }
    iopl0   = { v1292[1] }
    iopl1   = { v1293[1] }
    nt      = { v1294[1] }
    ?15     = { v1295[1] }
    rf      = { v1296[1] }
    vm      = { v1297[1] }
    ac      = { v1298[1] }
    vif     = { v1299[1] }
    vip     = { v1300[1] }
    id      = { v1301[1] }
    ?22     = { v1302[1] }
    ?23     = { v1303[1] }
    ?24     = { v1304[1] }
    ?25     = { v1305[1] }
    ?26     = { v1306[1] }
    ?27     = { v1307[1] }
    ?28     = { v1308[1] }
    ?29     = { v1309[1] }
    ?30     = { v1310[1] }
    ?31     = { v1311[1] }
    ip      = { 0x80483c3[32] }
memory:
    addr=v1312[32] value=v1314[32]
    addr=0x80496f0[32] value=v1312[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483ba}, expr=v998[32]} }
    cx      = { {defs={}, expr=v953[32]} }
    dx      = { {defs={0x080483bf}, expr=v1003[32]} }
    bx      = { {defs={}, expr=v955[32]} }
    sp      = { {defs={}, expr=v956[32]} }
    bp      = { {defs={}, expr=v957[32]} }
    si      = { {defs={}, expr=v958[32]} }
    di      = { {defs={}, expr=v959[32]} }
    es      = { {defs={}, expr=v960[16]} }
    cs      = { {defs={}, expr=v961[16]} }
    ss      = { {defs={}, expr=v962[16]} }
    ds      = { {defs={}, expr=v963[16]} }
    fs      = { {defs={}, expr=v964[16]} }
    gs      = { {defs={}, expr=v965[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v967[1]} }
    pf      = { {defs={0x080483bf,0x080483c1}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))))))} }
    ?3      = { {defs={}, expr=v969[1]} }
    af      = { {defs={}, expr=v1008[1]} }
    ?5      = { {defs={}, expr=v971[1]} }
    zf      = { {defs={0x080483bf,0x080483c1}, expr=(zerop[1] (bv-and[32] v1003[32] v1003[32]))} }
    sf      = { {defs={0x080483bf,0x080483c1}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v1003[32] v1003[32]))} }
    tf      = { {defs={}, expr=v974[1]} }
    if      = { {defs={}, expr=v975[1]} }
    df      = { {defs={}, expr=v976[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v978[1]} }
    iopl1   = { {defs={}, expr=v979[1]} }
    nt      = { {defs={}, expr=v980[1]} }
    ?15     = { {defs={}, expr=v981[1]} }
    rf      = { {defs={}, expr=v982[1]} }
    vm      = { {defs={}, expr=v983[1]} }
    ac      = { {defs={}, expr=v984[1]} }
    vif     = { {defs={}, expr=v985[1]} }
    vip     = { {defs={}, expr=v986[1]} }
    id      = { {defs={}, expr=v987[1]} }
    ?22     = { {defs={}, expr=v988[1]} }
    ?23     = { {defs={}, expr=v989[1]} }
    ?24     = { {defs={}, expr=v990[1]} }
    ?25     = { {defs={}, expr=v991[1]} }
    ?26     = { {defs={}, expr=v992[1]} }
    ?27     = { {defs={}, expr=v993[1]} }
    ?28     = { {defs={}, expr=v994[1]} }
    ?29     = { {defs={}, expr=v995[1]} }
    ?30     = { {defs={}, expr=v996[1]} }
    ?31     = { {defs={}, expr=v997[1]} }
    ip      = { {defs={0x080483c1}, expr=0x080483c3[32]} }
memory:
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 3[32])} value={defs={0x080483bf}, expr=(extract[8] 24[32] 32[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 2[32])} value={defs={0x080483bf}, expr=(extract[8] 16[32] 24[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 1[32])} value={defs={0x080483bf}, expr=(extract[8] 8[32] 16[32] v1003[32])}
    addr={defs={0x080483ba}, expr=v998[32]} value={defs={0x080483bf}, expr=(extract[8] 0[32] 8[32] v1003[32])}
    addr={defs={0x080483ba}, expr=0x080496f3[32]} value={defs={0x080483ba}, expr=(extract[8] 24[32] 32[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f2[32]} value={defs={0x080483ba}, expr=(extract[8] 16[32] 24[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f1[32]} value={defs={0x080483ba}, expr=(extract[8] 8[32] 16[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f0[32]} value={defs={0x080483ba}, expr=(extract[8] 0[32] 8[32] v998[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483c3[32] }
memory:
0x80483c3:jne    0x080483b0<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v1312[32] }
    cx      = { v1267[32] }
    dx      = { v1314[32] }
    bx      = { v1269[32] }
    sp      = { v1270[32] }
    bp      = { v1271[32] }
    si      = { v1272[32] }
    di      = { v1273[32] }
    es      = { v1274[16] }
    cs      = { v1275[16] }
    ss      = { v1276[16] }
    ds      = { v1277[16] }
    fs      = { v1278[16] }
    gs      = { v1279[16] }
    cf      = { 0x0[1] }
    ?1      = { v1281[1] }
    pf      = { -v1356+0x1[1] }
    ?3      = { v1283[1] }
    af      = { v1359[1] }
    ?5      = { v1285[1] }
    zf      = { v1358[1] }
    sf      = { v1357[1] }
    tf      = { v1288[1] }
    if      = { v1289[1] }
    df      = { v1290[1] }
    of      = { 0x0[1] }
    iopl0   = { v1292[1] }
    iopl1   = { v1293[1] }
    nt      = { v1294[1] }
    ?15     = { v1295[1] }
    rf      = { v1296[1] }
    vm      = { v1297[1] }
    ac      = { v1298[1] }
    vif     = { v1299[1] }
    vip     = { v1300[1] }
    id      = { v1301[1] }
    ?22     = { v1302[1] }
    ?23     = { v1303[1] }
    ?24     = { v1304[1] }
    ?25     = { v1305[1] }
    ?26     = { v1306[1] }
    ?27     = { v1307[1] }
    ?28     = { v1308[1] }
    ?29     = { v1309[1] }
    ?30     = { v1310[1] }
    ?31     = { v1311[1] }
    ip      = { v1360[32] }
memory:
    addr=v1312[32] value=v1314[32]
    addr=0x80496f0[32] value=v1312[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483ba}, expr=v998[32]} }
    cx      = { {defs={}, expr=v953[32]} }
    dx      = { {defs={0x080483bf}, expr=v1003[32]} }
    bx      = { {defs={}, expr=v955[32]} }
    sp      = { {defs={}, expr=v956[32]} }
    bp      = { {defs={}, expr=v957[32]} }
    si      = { {defs={}, expr=v958[32]} }
    di      = { {defs={}, expr=v959[32]} }
    es      = { {defs={}, expr=v960[16]} }
    cs      = { {defs={}, expr=v961[16]} }
    ss      = { {defs={}, expr=v962[16]} }
    ds      = { {defs={}, expr=v963[16]} }
    fs      = { {defs={}, expr=v964[16]} }
    gs      = { {defs={}, expr=v965[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v967[1]} }
    pf      = { {defs={0x080483bf,0x080483c1}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))))))} }
    ?3      = { {defs={}, expr=v969[1]} }
    af      = { {defs={}, expr=v1008[1]} }
    ?5      = { {defs={}, expr=v971[1]} }
    zf      = { {defs={0x080483bf,0x080483c1}, expr=(zerop[1] (bv-and[32] v1003[32] v1003[32]))} }
    sf      = { {defs={0x080483bf,0x080483c1}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v1003[32] v1003[32]))} }
    tf      = { {defs={}, expr=v974[1]} }
    if      = { {defs={}, expr=v975[1]} }
    df      = { {defs={}, expr=v976[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v978[1]} }
    iopl1   = { {defs={}, expr=v979[1]} }
    nt      = { {defs={}, expr=v980[1]} }
    ?15     = { {defs={}, expr=v981[1]} }
    rf      = { {defs={}, expr=v982[1]} }
    vm      = { {defs={}, expr=v983[1]} }
    ac      = { {defs={}, expr=v984[1]} }
    vif     = { {defs={}, expr=v985[1]} }
    vip     = { {defs={}, expr=v986[1]} }
    id      = { {defs={}, expr=v987[1]} }
    ?22     = { {defs={}, expr=v988[1]} }
    ?23     = { {defs={}, expr=v989[1]} }
    ?24     = { {defs={}, expr=v990[1]} }
    ?25     = { {defs={}, expr=v991[1]} }
    ?26     = { {defs={}, expr=v992[1]} }
    ?27     = { {defs={}, expr=v993[1]} }
    ?28     = { {defs={}, expr=v994[1]} }
    ?29     = { {defs={}, expr=v995[1]} }
    ?30     = { {defs={}, expr=v996[1]} }
    ?31     = { {defs={}, expr=v997[1]} }
    ip      = { {defs={0x080483bf,0x080483c1,0x080483c3}, expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v1003[32] v1003[32]))) 0x080483b0[32] 0x080483c5[32])} }
memory:
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 3[32])} value={defs={0x080483bf}, expr=(extract[8] 24[32] 32[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 2[32])} value={defs={0x080483bf}, expr=(extract[8] 16[32] 24[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 1[32])} value={defs={0x080483bf}, expr=(extract[8] 8[32] 16[32] v1003[32])}
    addr={defs={0x080483ba}, expr=v998[32]} value={defs={0x080483bf}, expr=(extract[8] 0[32] 8[32] v1003[32])}
    addr={defs={0x080483ba}, expr=0x080496f3[32]} value={defs={0x080483ba}, expr=(extract[8] 24[32] 32[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f2[32]} value={defs={0x080483ba}, expr=(extract[8] 16[32] 24[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f1[32]} value={defs={0x080483ba}, expr=(extract[8] 8[32] 16[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f0[32]} value={defs={0x080483ba}, expr=(extract[8] 0[32] 8[32] v998[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483c5[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01
== PartialSymbolic ==
registers:
    ax      = { v1363[32] }
    cx      = { v1364[32] }
    dx      = { v1365[32] }
    bx      = { v1366[32] }
    sp      = { v1367[32] }
    bp      = { v1368[32] }
    si      = { v1369[32] }
    di      = { v1370[32] }
    es      = { v1371[16] }
    cs      = { v1372[16] }
    ss      = { v1373[16] }
    ds      = { v1374[16] }
    fs      = { v1375[16] }
    gs      = { v1376[16] }
    cf      = { v1377[1] }
    ?1      = { v1378[1] }
    pf      = { v1379[1] }
    ?3      = { v1380[1] }
    af      = { v1381[1] }
    ?5      = { v1382[1] }
    zf      = { v1383[1] }
    sf      = { v1384[1] }
    tf      = { v1385[1] }
    if      = { v1386[1] }
    df      = { v1387[1] }
    of      = { v1388[1] }
    iopl0   = { v1389[1] }
    iopl1   = { v1390[1] }
    nt      = { v1391[1] }
    ?15     = { v1392[1] }
    rf      = { v1393[1] }
    vm      = { v1394[1] }
    ac      = { v1395[1] }
    vif     = { v1396[1] }
    vip     = { v1397[1] }
    id      = { v1398[1] }
    ?22     = { v1399[1] }
    ?23     = { v1400[1] }
    ?24     = { v1401[1] }
    ?25     = { v1402[1] }
    ?26     = { v1403[1] }
    ?27     = { v1404[1] }
    ?28     = { v1405[1] }
    ?29     = { v1406[1] }
    ?30     = { v1407[1] }
    ?31     = { v1408[1] }
    ip      = { 0x80483cc[32] }
memory:
    addr=0x80496f4[32] value=0x1[8]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1011[32]} }
    cx      = { {defs={}, expr=v1012[32]} }
    dx      = { {defs={}, expr=v1013[32]} }
    bx      = { {defs={}, expr=v1014[32]} }
    sp      = { {defs={}, expr=v1015[32]} }
    bp      = { {defs={}, expr=v1016[32]} }
    si      = { {defs={}, expr=v1017[32]} }
    di      = { {defs={}, expr=v1018[32]} }
    es      = { {defs={}, expr=v1019[16]} }
    cs      = { {defs={}, expr=v1020[16]} }
    ss      = { {defs={}, expr=v1021[16]} }
    ds      = { {defs={}, expr=v1022[16]} }
    fs      = { {defs={}, expr=v1023[16]} }
    gs      = { {defs={}, expr=v1024[16]} }
    cf      = { {defs={}, expr=v1025[1]} }
    ?1      = { {defs={}, expr=v1026[1]} }
    pf      = { {defs={}, expr=v1027[1]} }
    ?3      = { {defs={}, expr=v1028[1]} }
    af      = { {defs={}, expr=v1029[1]} }
    ?5      = { {defs={}, expr=v1030[1]} }
    zf      = { {defs={}, expr=v1031[1]} }
    sf      = { {defs={}, expr=v1032[1]} }
    tf      = { {defs={}, expr=v1033[1]} }
    if      = { {defs={}, expr=v1034[1]} }
    df      = { {defs={}, expr=v1035[1]} }
    of      = { {defs={}, expr=v1036[1]} }
    iopl0   = { {defs={}, expr=v1037[1]} }
    iopl1   = { {defs={}, expr=v1038[1]} }
    nt      = { {defs={}, expr=v1039[1]} }
    ?15     = { {defs={}, expr=v1040[1]} }
    rf      = { {defs={}, expr=v1041[1]} }
    vm      = { {defs={}, expr=v1042[1]} }
    ac      = { {defs={}, expr=v1043[1]} }
    vif     = { {defs={}, expr=v1044[1]} }
    vip     = { {defs={}, expr=v1045[1]} }
    id      = { {defs={}, expr=v1046[1]} }
    ?22     = { {defs={}, expr=v1047[1]} }
    ?23     = { {defs={}, expr=v1048[1]} }
    ?24     = { {defs={}, expr=v1049[1]} }
    ?25     = { {defs={}, expr=v1050[1]} }
    ?26     = { {defs={}, expr=v1051[1]} }
    ?27     = { {defs={}, expr=v1052[1]} }
    ?28     = { {defs={}, expr=v1053[1]} }
    ?29     = { {defs={}, expr=v1054[1]} }
    ?30     = { {defs={}, expr=v1055[1]} }
    ?31     = { {defs={}, expr=v1056[1]} }
    ip      = { {defs={0x080483c5}, expr=0x080483cc[32]} }
memory:
    addr={defs={0x080483c5}, expr=0x080496f4[32]} value={defs={}, expr=1[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483cc[32] }
memory:
0x80483cc:leave  
== PartialSymbolic ==
registers:
    ax      = { v1363[32] }
    cx      = { v1364[32] }
    dx      = { v1365[32] }
    bx      = { v1366[32] }
    sp      = { v1368+0x4[32] }
    bp      = { v1409[32] }
    si      = { v1369[32] }
    di      = { v1370[32] }
    es      = { v1371[16] }
    cs      = { v1372[16] }
    ss      = { v1373[16] }
    ds      = { v1374[16] }
    fs      = { v1375[16] }
    gs      = { v1376[16] }
    cf      = { v1377[1] }
    ?1      = { v1378[1] }
    pf      = { v1379[1] }
    ?3      = { v1380[1] }
    af      = { v1381[1] }
    ?5      = { v1382[1] }
    zf      = { v1383[1] }
    sf      = { v1384[1] }
    tf      = { v1385[1] }
    if      = { v1386[1] }
    df      = { v1387[1] }
    of      = { v1388[1] }
    iopl0   = { v1389[1] }
    iopl1   = { v1390[1] }
    nt      = { v1391[1] }
    ?15     = { v1392[1] }
    rf      = { v1393[1] }
    vm      = { v1394[1] }
    ac      = { v1395[1] }
    vif     = { v1396[1] }
    vip     = { v1397[1] }
    id      = { v1398[1] }
    ?22     = { v1399[1] }
    ?23     = { v1400[1] }
    ?24     = { v1401[1] }
    ?25     = { v1402[1] }
    ?26     = { v1403[1] }
    ?27     = { v1404[1] }
    ?28     = { v1405[1] }
    ?29     = { v1406[1] }
    ?30     = { v1407[1] }
    ?31     = { v1408[1] }
    ip      = { 0x80483cd[32] }
memory:
    addr=v1368[32] value=v1409[32]
    addr=0x80496f4[32] value=0x1[8]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1011[32]} }
    cx      = { {defs={}, expr=v1012[32]} }
    dx      = { {defs={}, expr=v1013[32]} }
    bx      = { {defs={}, expr=v1014[32]} }
    sp      = { {defs={0x080483cc}, expr=(add[32] v1016[32] 4[32])} }
    bp      = { {defs={0x080483cc}, expr=v1057[32]} }
    si      = { {defs={}, expr=v1017[32]} }
    di      = { {defs={}, expr=v1018[32]} }
    es      = { {defs={}, expr=v1019[16]} }
    cs      = { {defs={}, expr=v1020[16]} }
    ss      = { {defs={}, expr=v1021[16]} }
    ds      = { {defs={}, expr=v1022[16]} }
    fs      = { {defs={}, expr=v1023[16]} }
    gs      = { {defs={}, expr=v1024[16]} }
    cf      = { {defs={}, expr=v1025[1]} }
    ?1      = { {defs={}, expr=v1026[1]} }
    pf      = { {defs={}, expr=v1027[1]} }
    ?3      = { {defs={}, expr=v1028[1]} }
    af      = { {defs={}, expr=v1029[1]} }
    ?5      = { {defs={}, expr=v1030[1]} }
    zf      = { {defs={}, expr=v1031[1]} }
    sf      = { {defs={}, expr=v1032[1]} }
    tf      = { {defs={}, expr=v1033[1]} }
    if      = { {defs={}, expr=v1034[1]} }
    df      = { {defs={}, expr=v1035[1]} }
    of      = { {defs={}, expr=v1036[1]} }
    iopl0   = { {defs={}, expr=v1037[1]} }
    iopl1   = { {defs={}, expr=v1038[1]} }
    nt      = { {defs={}, expr=v1039[1]} }
    ?15     = { {defs={}, expr=v1040[1]} }
    rf      = { {defs={}, expr=v1041[1]} }
    vm      = { {defs={}, expr=v1042[1]} }
    ac      = { {defs={}, expr=v1043[1]} }
    vif     = { {defs={}, expr=v1044[1]} }
    vip     = { {defs={}, expr=v1045[1]} }
    id      = { {defs={}, expr=v1046[1]} }
    ?22     = { {defs={}, expr=v1047[1]} }
    ?23     = { {defs={}, expr=v1048[1]} }
    ?24     = { {defs={}, expr=v1049[1]} }
    ?25     = { {defs={}, expr=v1050[1]} }
    ?26     = { {defs={}, expr=v1051[1]} }
    ?27     = { {defs={}, expr=v1052[1]} }
    ?28     = { {defs={}, expr=v1053[1]} }
    ?29     = { {defs={}, expr=v1054[1]} }
    ?30     = { {defs={}, expr=v1055[1]} }
    ?31     = { {defs={}, expr=v1056[1]} }
    ip      = { {defs={0x080483cc}, expr=0x080483cd[32]} }
memory:
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 3[32])} value={defs={0x080483cc}, expr=(extract[8] 24[32] 32[32] v1057[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 2[32])} value={defs={0x080483cc}, expr=(extract[8] 16[32] 24[32] v1057[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 1[32])} value={defs={0x080483cc}, expr=(extract[8] 8[32] 16[32] v1057[32])}
    addr={defs={}, expr=v1016[32]} value={defs={0x080483cc}, expr=(extract[8] 0[32] 8[32] v1057[32])}
    addr={defs={0x080483c5}, expr=0x080496f4[32]} value={defs={}, expr=1[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483cd[32] }
memory:
0x80483cd:ret    
== PartialSymbolic ==
registers:
    ax      = { v1363[32] }
    cx      = { v1364[32] }
    dx      = { v1365[32] }
    bx      = { v1366[32] }
    sp      = { v1368+0x8[32] }
    bp      = { v1409[32] }
    si      = { v1369[32] }
    di      = { v1370[32] }
    es      = { v1371[16] }
    cs      = { v1372[16] }
    ss      = { v1373[16] }
    ds      = { v1374[16] }
    fs      = { v1375[16] }
    gs      = { v1376[16] }
    cf      = { v1377[1] }
    ?1      = { v1378[1] }
    pf      = { v1379[1] }
    ?3      = { v1380[1] }
    af      = { v1381[1] }
    ?5      = { v1382[1] }
    zf      = { v1383[1] }
    sf      = { v1384[1] }
    tf      = { v1385[1] }
    if      = { v1386[1] }
    df      = { v1387[1] }
    of      = { v1388[1] }
    iopl0   = { v1389[1] }
    iopl1   = { v1390[1] }
    nt      = { v1391[1] }
    ?15     = { v1392[1] }
    rf      = { v1393[1] }
    vm      = { v1394[1] }
    ac      = { v1395[1] }
    vif     = { v1396[1] }
    vip     = { v1397[1] }
    id      = { v1398[1] }
    ?22     = { v1399[1] }
    ?23     = { v1400[1] }
    ?24     = { v1401[1] }
    ?25     = { v1402[1] }
    ?26     = { v1403[1] }
    ?27     = { v1404[1] }
    ?28     = { v1405[1] }
    ?29     = { v1406[1] }
    ?30     = { v1407[1] }
    ?31     = { v1408[1] }
    ip      = { v1437[32] }
memory:
    addr=v1368+0x4[32] value=v1437[32]
    addr=v1368[32] value=v1409[32]
    addr=0x80496f4[32] value=0x1[8]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1011[32]} }
    cx      = { {defs={}, expr=v1012[32]} }
    dx      = { {defs={}, expr=v1013[32]} }
    bx      = { {defs={}, expr=v1014[32]} }
    sp      = { {defs={0x080483cc,0x080483cd}, expr=(add[32] (add[32] v1016[32] 4[32]) 4[32])} }
    bp      = { {defs={0x080483cc}, expr=v1057[32]} }
    si      = { {defs={}, expr=v1017[32]} }
    di      = { {defs={}, expr=v1018[32]} }
    es      = { {defs={}, expr=v1019[16]} }
    cs      = { {defs={}, expr=v1020[16]} }
    ss      = { {defs={}, expr=v1021[16]} }
    ds      = { {defs={}, expr=v1022[16]} }
    fs      = { {defs={}, expr=v1023[16]} }
    gs      = { {defs={}, expr=v1024[16]} }
    cf      = { {defs={}, expr=v1025[1]} }
    ?1      = { {defs={}, expr=v1026[1]} }
    pf      = { {defs={}, expr=v1027[1]} }
    ?3      = { {defs={}, expr=v1028[1]} }
    af      = { {defs={}, expr=v1029[1]} }
    ?5      = { {defs={}, expr=v1030[1]} }
    zf      = { {defs={}, expr=v1031[1]} }
    sf      = { {defs={}, expr=v1032[1]} }
    tf      = { {defs={}, expr=v1033[1]} }
    if      = { {defs={}, expr=v1034[1]} }
    df      = { {defs={}, expr=v1035[1]} }
    of      = { {defs={}, expr=v1036[1]} }
    iopl0   = { {defs={}, expr=v1037[1]} }
    iopl1   = { {defs={}, expr=v1038[1]} }
    nt      = { {defs={}, expr=v1039[1]} }
    ?15     = { {defs={}, expr=v1040[1]} }
    rf      = { {defs={}, expr=v1041[1]} }
    vm      = { {defs={}, expr=v1042[1]} }
    ac      = { {defs={}, expr=v1043[1]} }
    vif     = { {defs={}, expr=v1044[1]} }
    vip     = { {defs={}, expr=v1045[1]} }
    id      = { {defs={}, expr=v1046[1]} }
    ?22     = { {defs={}, expr=v1047[1]} }
    ?23     = { {defs={}, expr=v1048[1]} }
    ?24     = { {defs={}, expr=v1049[1]} }
    ?25     = { {defs={}, expr=v1050[1]} }
    ?26     = { {defs={}, expr=v1051[1]} }
    ?27     = { {defs={}, expr=v1052[1]} }
    ?28     = { {defs={}, expr=v1053[1]} }
    ?29     = { {defs={}, expr=v1054[1]} }
    ?30     = { {defs={}, expr=v1055[1]} }
    ?31     = { {defs={}, expr=v1056[1]} }
    ip      = { {defs={0x080483cd}, expr=v1062[32]} }
memory:
    addr={defs={0x080483cc,0x080483cd}, expr=(add[32] (add[32] v1016[32] 4[32]) 3[32])} value={defs={0x080483cd}, expr=(extract[8] 24[32] 32[32] v1062[32])}
    addr={defs={0x080483cc,0x080483cd}, expr=(add[32] (add[32] v1016[32] 4[32]) 2[32])} value={defs={0x080483cd}, expr=(extract[8] 16[32] 24[32] v1062[32])}
    addr={defs={0x080483cc,0x080483cd}, expr=(add[32] (add[32] v1016[32] 4[32]) 1[32])} value={defs={0x080483cd}, expr=(extract[8] 8[32] 16[32] v1062[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 4[32])} value={defs={0x080483cd}, expr=(extract[8] 0[32] 8[32] v1062[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 3[32])} value={defs={0x080483cc}, expr=(extract[8] 24[32] 32[32] v1057[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 2[32])} value={defs={0x080483cc}, expr=(extract[8] 16[32] 24[32] v1057[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 1[32])} value={defs={0x080483cc}, expr=(extract[8] 8[32] 16[32] v1057[32])}
    addr={defs={}, expr=v1016[32]} value={defs={0x080483cc}, expr=(extract[8] 0[32] 8[32] v1057[32])}
    addr={defs={0x080483c5}, expr=0x080496f4[32]} value={defs={}, expr=1[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v1467[32] }
    cx      = { v1468[32] }
    dx      = { v1469[32] }
    bx      = { v1470[32] }
    sp      = { v1471-0x4[32] }
    bp      = { v1472[32] }
    si      = { v1473[32] }
    di      = { v1474[32] }
    es      = { v1475[16] }
    cs      = { v1476[16] }
    ss      = { v1477[16] }
    ds      = { v1478[16] }
    fs      = { v1479[16] }
    gs      = { v1480[16] }
    cf      = { v1481[1] }
    ?1      = { v1482[1] }
    pf      = { v1483[1] }
    ?3      = { v1484[1] }
    af      = { v1485[1] }
    ?5      = { v1486[1] }
    zf      = { v1487[1] }
    sf      = { v1488[1] }
    tf      = { v1489[1] }
    if      = { v1490[1] }
    df      = { v1491[1] }
    of      = { v1492[1] }
    iopl0   = { v1493[1] }
    iopl1   = { v1494[1] }
    nt      = { v1495[1] }
    ?15     = { v1496[1] }
    rf      = { v1497[1] }
    vm      = { v1498[1] }
    ac      = { v1499[1] }
    vif     = { v1500[1] }
    vip     = { v1501[1] }
    id      = { v1502[1] }
    ?22     = { v1503[1] }
    ?23     = { v1504[1] }
    ?24     = { v1505[1] }
    ?25     = { v1506[1] }
    ?26     = { v1507[1] }
    ?27     = { v1508[1] }
    ?28     = { v1509[1] }
    ?29     = { v1510[1] }
    ?30     = { v1511[1] }
    ?31     = { v1512[1] }
    ip      = { 0x80483d1[32] }
memory:
    addr=v1471-0x4[32] value=v1472[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1069[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    bp      = { {defs={}, expr=v1074[32]} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={}, expr=v1083[1]} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={}, expr=v1085[1]} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={}, expr=v1087[1]} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={}, expr=v1089[1]} }
    sf      = { {defs={}, expr=v1090[1]} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={}, expr=v1094[1]} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d0}, expr=0x080483d1[32]} }
memory:
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483d1[32] }
memory:
0x80483d1:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v1467[32] }
    cx      = { v1468[32] }
    dx      = { v1469[32] }
    bx      = { v1470[32] }
    sp      = { v1471-0x4[32] }
    bp      = { v1471-0x4[32] }
    si      = { v1473[32] }
    di      = { v1474[32] }
    es      = { v1475[16] }
    cs      = { v1476[16] }
    ss      = { v1477[16] }
    ds      = { v1478[16] }
    fs      = { v1479[16] }
    gs      = { v1480[16] }
    cf      = { v1481[1] }
    ?1      = { v1482[1] }
    pf      = { v1483[1] }
    ?3      = { v1484[1] }
    af      = { v1485[1] }
    ?5      = { v1486[1] }
    zf      = { v1487[1] }
    sf      = { v1488[1] }
    tf      = { v1489[1] }
    if      = { v1490[1] }
    df      = { v1491[1] }
    of      = { v1492[1] }
    iopl0   = { v1493[1] }
    iopl1   = { v1494[1] }
    nt      = { v1495[1] }
    ?15     = { v1496[1] }
    rf      = { v1497[1] }
    vm      = { v1498[1] }
    ac      = { v1499[1] }
    vif     = { v1500[1] }
    vip     = { v1501[1] }
    id      = { v1502[1] }
    ?22     = { v1503[1] }
    ?23     = { v1504[1] }
    ?24     = { v1505[1] }
    ?25     = { v1506[1] }
    ?26     = { v1507[1] }
    ?27     = { v1508[1] }
    ?28     = { v1509[1] }
    ?29     = { v1510[1] }
    ?30     = { v1511[1] }
    ?31     = { v1512[1] }
    ip      = { 0x80483d3[32] }
memory:
    addr=v1471-0x4[32] value=v1472[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1069[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={}, expr=v1083[1]} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={}, expr=v1085[1]} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={}, expr=v1087[1]} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={}, expr=v1089[1]} }
    sf      = { {defs={}, expr=v1090[1]} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={}, expr=v1094[1]} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d1}, expr=0x080483d3[32]} }
memory:
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483d3[32] }
memory:
0x80483d3:sub    esp, 0x08
== PartialSymbolic ==
registers:
    ax      = { v1467[32] }
    cx      = { v1468[32] }
    dx      = { v1469[32] }
    bx      = { v1470[32] }
    sp      = { v1471-0xc[32] }
    bp      = { v1471-0x4[32] }
    si      = { v1473[32] }
    di      = { v1474[32] }
    es      = { v1475[16] }
    cs      = { v1476[16] }
    ss      = { v1477[16] }
    ds      = { v1478[16] }
    fs      = { v1479[16] }
    gs      = { v1480[16] }
    cf      = { -v1530+0x1[1] }
    ?1      = { v1482[1] }
    pf      = { -v1527+0x1[1] }
    ?3      = { v1484[1] }
    af      = { -v1532+0x1[1] }
    ?5      = { v1486[1] }
    zf      = { v1529[1] }
    sf      = { v1528[1] }
    tf      = { v1489[1] }
    if      = { v1490[1] }
    df      = { v1491[1] }
    of      = { v1533[1] }
    iopl0   = { v1493[1] }
    iopl1   = { v1494[1] }
    nt      = { v1495[1] }
    ?15     = { v1496[1] }
    rf      = { v1497[1] }
    vm      = { v1498[1] }
    ac      = { v1499[1] }
    vif     = { v1500[1] }
    vip     = { v1501[1] }
    id      = { v1502[1] }
    ?22     = { v1503[1] }
    ?23     = { v1504[1] }
    ?24     = { v1505[1] }
    ?25     = { v1506[1] }
    ?26     = { v1507[1] }
    ?27     = { v1508[1] }
    ?28     = { v1509[1] }
    ?29     = { v1510[1] }
    ?30     = { v1511[1] }
    ?31     = { v1512[1] }
    ip      = { 0x80483d6[32] }
memory:
    addr=v1471-0x4[32] value=v1472[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1069[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0,0x080483d3}, expr=(add[32] (add[32] v1073[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={0x080483d0,0x080483d3}, expr=(zerop[1] (add[32] (add[32] v1073[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x080483d0,0x080483d3}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={0x080483d0,0x080483d3}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d3}, expr=0x080483d6[32]} }
memory:
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483d6[32] }
memory:
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]
== PartialSymbolic ==
registers:
    ax      = { v1534[32] }
    cx      = { v1468[32] }
    dx      = { v1469[32] }
    bx      = { v1470[32] }
    sp      = { v1471-0xc[32] }
    bp      = { v1471-0x4[32] }
    si      = { v1473[32] }
    di      = { v1474[32] }
    es      = { v1475[16] }
    cs      = { v1476[16] }
    ss      = { v1477[16] }
    ds      = { v1478[16] }
    fs      = { v1479[16] }
    gs      = { v1480[16] }
    cf      = { -v1530+0x1[1] }
    ?1      = { v1482[1] }
    pf      = { -v1527+0x1[1] }
    ?3      = { v1484[1] }
    af      = { -v1532+0x1[1] }
    ?5      = { v1486[1] }
    zf      = { v1529[1] }
    sf      = { v1528[1] }
    tf      = { v1489[1] }
    if      = { v1490[1] }
    df      = { v1491[1] }
    of      = { v1533[1] }
    iopl0   = { v1493[1] }
    iopl1   = { v1494[1] }
    nt      = { v1495[1] }
    ?15     = { v1496[1] }
    rf      = { v1497[1] }
    vm      = { v1498[1] }
    ac      = { v1499[1] }
    vif     = { v1500[1] }
    vip     = { v1501[1] }
    id      = { v1502[1] }
    ?22     = { v1503[1] }
    ?23     = { v1504[1] }
    ?24     = { v1505[1] }
    ?25     = { v1506[1] }
    ?26     = { v1507[1] }
    ?27     = { v1508[1] }
    ?28     = { v1509[1] }
    ?29     = { v1510[1] }
    ?30     = { v1511[1] }
    ?31     = { v1512[1] }
    ip      = { 0x80483db[32] }
memory:
    addr=0x80495f8[32] value=v1534[32]
    addr=v1471-0x4[32] value=v1472[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483d6}, expr=v1115[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0,0x080483d3}, expr=(add[32] (add[32] v1073[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={0x080483d0,0x080483d3}, expr=(zerop[1] (add[32] (add[32] v1073[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x080483d0,0x080483d3}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={0x080483d0,0x080483d3}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d6}, expr=0x080483db[32]} }
memory:
    addr={defs={0x080483d6}, expr=0x080495fb[32]} value={defs={0x080483d6}, expr=(extract[8] 24[32] 32[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495fa[32]} value={defs={0x080483d6}, expr=(extract[8] 16[32] 24[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f9[32]} value={defs={0x080483d6}, expr=(extract[8] 8[32] 16[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f8[32]} value={defs={0x080483d6}, expr=(extract[8] 0[32] 8[32] v1115[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483db[32] }
memory:
0x80483db:test   eax, eax
== PartialSymbolic ==
registers:
    ax      = { v1534[32] }
    cx      = { v1468[32] }
    dx      = { v1469[32] }
    bx      = { v1470[32] }
    sp      = { v1471-0xc[32] }
    bp      = { v1471-0x4[32] }
    si      = { v1473[32] }
    di      = { v1474[32] }
    es      = { v1475[16] }
    cs      = { v1476[16] }
    ss      = { v1477[16] }
    ds      = { v1478[16] }
    fs      = { v1479[16] }
    gs      = { v1480[16] }
    cf      = { 0x0[1] }
    ?1      = { v1482[1] }
    pf      = { -v1576+0x1[1] }
    ?3      = { v1484[1] }
    af      = { v1579[1] }
    ?5      = { v1486[1] }
    zf      = { v1578[1] }
    sf      = { v1577[1] }
    tf      = { v1489[1] }
    if      = { v1490[1] }
    df      = { v1491[1] }
    of      = { 0x0[1] }
    iopl0   = { v1493[1] }
    iopl1   = { v1494[1] }
    nt      = { v1495[1] }
    ?15     = { v1496[1] }
    rf      = { v1497[1] }
    vm      = { v1498[1] }
    ac      = { v1499[1] }
    vif     = { v1500[1] }
    vip     = { v1501[1] }
    id      = { v1502[1] }
    ?22     = { v1503[1] }
    ?23     = { v1504[1] }
    ?24     = { v1505[1] }
    ?25     = { v1506[1] }
    ?26     = { v1507[1] }
    ?27     = { v1508[1] }
    ?28     = { v1509[1] }
    ?29     = { v1510[1] }
    ?30     = { v1511[1] }
    ?31     = { v1512[1] }
    ip      = { 0x80483dd[32] }
memory:
    addr=0x80495f8[32] value=v1534[32]
    addr=v1471-0x4[32] value=v1472[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483d6}, expr=v1115[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0,0x080483d3}, expr=(add[32] (add[32] v1073[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={0x080483d6,0x080483db}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))))))} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={}, expr=v1120[1]} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={0x080483d6,0x080483db}, expr=(zerop[1] (bv-and[32] v1115[32] v1115[32]))} }
    sf      = { {defs={0x080483d6,0x080483db}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v1115[32] v1115[32]))} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483db}, expr=0x080483dd[32]} }
memory:
    addr={defs={0x080483d6}, expr=0x080495fb[32]} value={defs={0x080483d6}, expr=(extract[8] 24[32] 32[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495fa[32]} value={defs={0x080483d6}, expr=(extract[8] 16[32] 24[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f9[32]} value={defs={0x080483d6}, expr=(extract[8] 8[32] 16[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f8[32]} value={defs={0x080483d6}, expr=(extract[8] 0[32] 8[32] v1115[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483dd[32] }
memory:
0x80483dd:je     0x08048400<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v1534[32] }
    cx      = { v1468[32] }
    dx      = { v1469[32] }
    bx      = { v1470[32] }
    sp      = { v1471-0xc[32] }
    bp      = { v1471-0x4[32] }
    si      = { v1473[32] }
    di      = { v1474[32] }
    es      = { v1475[16] }
    cs      = { v1476[16] }
    ss      = { v1477[16] }
    ds      = { v1478[16] }
    fs      = { v1479[16] }
    gs      = { v1480[16] }
    cf      = { 0x0[1] }
    ?1      = { v1482[1] }
    pf      = { -v1576+0x1[1] }
    ?3      = { v1484[1] }
    af      = { v1579[1] }
    ?5      = { v1486[1] }
    zf      = { v1578[1] }
    sf      = { v1577[1] }
    tf      = { v1489[1] }
    if      = { v1490[1] }
    df      = { v1491[1] }
    of      = { 0x0[1] }
    iopl0   = { v1493[1] }
    iopl1   = { v1494[1] }
    nt      = { v1495[1] }
    ?15     = { v1496[1] }
    rf      = { v1497[1] }
    vm      = { v1498[1] }
    ac      = { v1499[1] }
    vif     = { v1500[1] }
    vip     = { v1501[1] }
    id      = { v1502[1] }
    ?22     = { v1503[1] }
    ?23     = { v1504[1] }
    ?24     = { v1505[1] }
    ?25     = { v1506[1] }
    ?26     = { v1507[1] }
    ?27     = { v1508[1] }
    ?28     = { v1509[1] }
    ?29     = { v1510[1] }
    ?30     = { v1511[1] }
    ?31     = { v1512[1] }
    ip      = { v1580[32] }
memory:
    addr=0x80495f8[32] value=v1534[32]
    addr=v1471-0x4[32] value=v1472[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080483d6}, expr=v1115[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0,0x080483d3}, expr=(add[32] (add[32] v1073[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={0x080483d6,0x080483db}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))))))} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={}, expr=v1120[1]} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={0x080483d6,0x080483db}, expr=(zerop[1] (bv-and[32] v1115[32] v1115[32]))} }
    sf      = { {defs={0x080483d6,0x080483db}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v1115[32] v1115[32]))} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d6,0x080483db,0x080483dd}, expr=(ite[32] (zerop[1] (bv-and[32] v1115[32] v1115[32])) 0x08048400[32] 0x080483df[32])} }
memory:
    addr={defs={0x080483d6}, expr=0x080495fb[32]} value={defs={0x080483d6}, expr=(extract[8] 24[32] 32[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495fa[32]} value={defs={0x080483d6}, expr=(extract[8] 16[32] 24[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f9[32]} value={defs={0x080483d6}, expr=(extract[8] 8[32] 16[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f8[32]} value={defs={0x080483d6}, expr=(extract[8] 0[32] 8[32] v1115[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048400[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1584[32] }
    dx      = { v1585[32] }
    bx      = { v1586[32] }
    sp      = { v1587[32] }
    bp      = { v1588[32] }
    si      = { v1589[32] }
    di      = { v1590[32] }
    es      = { v1591[16] }
    cs      = { v1592[16] }
    ss      = { v1593[16] }
    ds      = { v1594[16] }
    fs      = { v1595[16] }
    gs      = { v1596[16] }
    cf      = { v1597[1] }
    ?1      = { v1598[1] }
    pf      = { v1599[1] }
    ?3      = { v1600[1] }
    af      = { v1601[1] }
    ?5      = { v1602[1] }
    zf      = { v1603[1] }
    sf      = { v1604[1] }
    tf      = { v1605[1] }
    if      = { v1606[1] }
    df      = { v1607[1] }
    of      = { v1608[1] }
    iopl0   = { v1609[1] }
    iopl1   = { v1610[1] }
    nt      = { v1611[1] }
    ?15     = { v1612[1] }
    rf      = { v1613[1] }
    vm      = { v1614[1] }
    ac      = { v1615[1] }
    vif     = { v1616[1] }
    vip     = { v1617[1] }
    id      = { v1618[1] }
    ?22     = { v1619[1] }
    ?23     = { v1620[1] }
    ?24     = { v1621[1] }
    ?25     = { v1622[1] }
    ?26     = { v1623[1] }
    ?27     = { v1624[1] }
    ?28     = { v1625[1] }
    ?29     = { v1626[1] }
    ?30     = { v1627[1] }
    ?31     = { v1628[1] }
    ip      = { 0x80483e4[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={}, expr=v1127[32]} }
    bp      = { {defs={}, expr=v1128[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={}, expr=v1137[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={}, expr=v1139[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1141[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={}, expr=v1143[1]} }
    sf      = { {defs={}, expr=v1144[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={}, expr=v1148[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x080483df}, expr=0x080483e4[32]} }
memory:
== Interval ==
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483e4[32] }
memory:
0x80483e4:test   eax, eax
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1584[32] }
    dx      = { v1585[32] }
    bx      = { v1586[32] }
    sp      = { v1587[32] }
    bp      = { v1588[32] }
    si      = { v1589[32] }
    di      = { v1590[32] }
    es      = { v1591[16] }
    cs      = { v1592[16] }
    ss      = { v1593[16] }
    ds      = { v1594[16] }
    fs      = { v1595[16] }
    gs      = { v1596[16] }
    cf      = { 0x0[1] }
    ?1      = { v1598[1] }
    pf      = { 0x1[1] }
    ?3      = { v1600[1] }
    af      = { v1629[1] }
    ?5      = { v1602[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v1605[1] }
    if      = { v1606[1] }
    df      = { v1607[1] }
    of      = { 0x0[1] }
    iopl0   = { v1609[1] }
    iopl1   = { v1610[1] }
    nt      = { v1611[1] }
    ?15     = { v1612[1] }
    rf      = { v1613[1] }
    vm      = { v1614[1] }
    ac      = { v1615[1] }
    vif     = { v1616[1] }
    vip     = { v1617[1] }
    id      = { v1618[1] }
    ?22     = { v1619[1] }
    ?23     = { v1620[1] }
    ?24     = { v1621[1] }
    ?25     = { v1622[1] }
    ?26     = { v1623[1] }
    ?27     = { v1624[1] }
    ?28     = { v1625[1] }
    ?29     = { v1626[1] }
    ?30     = { v1627[1] }
    ?31     = { v1628[1] }
    ip      = { 0x80483e6[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={}, expr=v1127[32]} }
    bp      = { {defs={}, expr=v1128[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x080483e4}, expr=0x080483e6[32]} }
memory:
== Interval ==
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483e6[32] }
memory:
0x80483e6:je     0x08048400<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1584[32] }
    dx      = { v1585[32] }
    bx      = { v1586[32] }
    sp      = { v1587[32] }
    bp      = { v1588[32] }
    si      = { v1589[32] }
    di      = { v1590[32] }
    es      = { v1591[16] }
    cs      = { v1592[16] }
    ss      = { v1593[16] }
    ds      = { v1594[16] }
    fs      = { v1595[16] }
    gs      = { v1596[16] }
    cf      = { 0x0[1] }
    ?1      = { v1598[1] }
    pf      = { 0x1[1] }
    ?3      = { v1600[1] }
    af      = { v1629[1] }
    ?5      = { v1602[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v1605[1] }
    if      = { v1606[1] }
    df      = { v1607[1] }
    of      = { 0x0[1] }
    iopl0   = { v1609[1] }
    iopl1   = { v1610[1] }
    nt      = { v1611[1] }
    ?15     = { v1612[1] }
    rf      = { v1613[1] }
    vm      = { v1614[1] }
    ac      = { v1615[1] }
    vif     = { v1616[1] }
    vip     = { v1617[1] }
    id      = { v1618[1] }
    ?22     = { v1619[1] }
    ?23     = { v1620[1] }
    ?24     = { v1621[1] }
    ?25     = { v1622[1] }
    ?26     = { v1623[1] }
    ?27     = { v1624[1] }
    ?28     = { v1625[1] }
    ?29     = { v1626[1] }
    ?30     = { v1627[1] }
    ?31     = { v1628[1] }
    ip      = { 0x8048400[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={}, expr=v1127[32]} }
    bp      = { {defs={}, expr=v1128[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x080483e4,0x080483e6}, expr=0x08048400[32]} }
memory:
== Interval ==
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048400[32] }
memory:
0x8048400:mov    esp, ebp
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1584[32] }
    dx      = { v1585[32] }
    bx      = { v1586[32] }
    sp      = { v1588[32] }
    bp      = { v1588[32] }
    si      = { v1589[32] }
    di      = { v1590[32] }
    es      = { v1591[16] }
    cs      = { v1592[16] }
    ss      = { v1593[16] }
    ds      = { v1594[16] }
    fs      = { v1595[16] }
    gs      = { v1596[16] }
    cf      = { 0x0[1] }
    ?1      = { v1598[1] }
    pf      = { 0x1[1] }
    ?3      = { v1600[1] }
    af      = { v1629[1] }
    ?5      = { v1602[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v1605[1] }
    if      = { v1606[1] }
    df      = { v1607[1] }
    of      = { 0x0[1] }
    iopl0   = { v1609[1] }
    iopl1   = { v1610[1] }
    nt      = { v1611[1] }
    ?15     = { v1612[1] }
    rf      = { v1613[1] }
    vm      = { v1614[1] }
    ac      = { v1615[1] }
    vif     = { v1616[1] }
    vip     = { v1617[1] }
    id      = { v1618[1] }
    ?22     = { v1619[1] }
    ?23     = { v1620[1] }
    ?24     = { v1621[1] }
    ?25     = { v1622[1] }
    ?26     = { v1623[1] }
    ?27     = { v1624[1] }
    ?28     = { v1625[1] }
    ?29     = { v1626[1] }
    ?30     = { v1627[1] }
    ?31     = { v1628[1] }
    ip      = { 0x8048402[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={}, expr=v1128[32]} }
    bp      = { {defs={}, expr=v1128[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x08048400}, expr=0x08048402[32]} }
memory:
== Interval ==
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048402[32] }
memory:
0x8048402:pop    ebp
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1584[32] }
    dx      = { v1585[32] }
    bx      = { v1586[32] }
    sp      = { v1588+0x4[32] }
    bp      = { v1630[32] }
    si      = { v1589[32] }
    di      = { v1590[32] }
    es      = { v1591[16] }
    cs      = { v1592[16] }
    ss      = { v1593[16] }
    ds      = { v1594[16] }
    fs      = { v1595[16] }
    gs      = { v1596[16] }
    cf      = { 0x0[1] }
    ?1      = { v1598[1] }
    pf      = { 0x1[1] }
    ?3      = { v1600[1] }
    af      = { v1629[1] }
    ?5      = { v1602[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v1605[1] }
    if      = { v1606[1] }
    df      = { v1607[1] }
    of      = { 0x0[1] }
    iopl0   = { v1609[1] }
    iopl1   = { v1610[1] }
    nt      = { v1611[1] }
    ?15     = { v1612[1] }
    rf      = { v1613[1] }
    vm      = { v1614[1] }
    ac      = { v1615[1] }
    vif     = { v1616[1] }
    vip     = { v1617[1] }
    id      = { v1618[1] }
    ?22     = { v1619[1] }
    ?23     = { v1620[1] }
    ?24     = { v1621[1] }
    ?25     = { v1622[1] }
    ?26     = { v1623[1] }
    ?27     = { v1624[1] }
    ?28     = { v1625[1] }
    ?29     = { v1626[1] }
    ?30     = { v1627[1] }
    ?31     = { v1628[1] }
    ip      = { 0x8048403[32] }
memory:
    addr=v1588[32] value=v1630[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={0x08048402}, expr=(add[32] v1128[32] 4[32])} }
    bp      = { {defs={0x08048402}, expr=v1170[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x08048402}, expr=0x08048403[32]} }
memory:
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 3[32])} value={defs={0x08048402}, expr=(extract[8] 24[32] 32[32] v1170[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 2[32])} value={defs={0x08048402}, expr=(extract[8] 16[32] 24[32] v1170[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 1[32])} value={defs={0x08048402}, expr=(extract[8] 8[32] 16[32] v1170[32])}
    addr={defs={}, expr=v1128[32]} value={defs={0x08048402}, expr=(extract[8] 0[32] 8[32] v1170[32])}
== Interval ==
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048403[32] }
memory:
0x8048403:ret    
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1584[32] }
    dx      = { v1585[32] }
    bx      = { v1586[32] }
    sp      = { v1588+0x8[32] }
    bp      = { v1630[32] }
    si      = { v1589[32] }
    di      = { v1590[32] }
    es      = { v1591[16] }
    cs      = { v1592[16] }
    ss      = { v1593[16] }
    ds      = { v1594[16] }
    fs      = { v1595[16] }
    gs      = { v1596[16] }
    cf      = { 0x0[1] }
    ?1      = { v1598[1] }
    pf      = { 0x1[1] }
    ?3      = { v1600[1] }
    af      = { v1629[1] }
    ?5      = { v1602[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v1605[1] }
    if      = { v1606[1] }
    df      = { v1607[1] }
    of      = { 0x0[1] }
    iopl0   = { v1609[1] }
    iopl1   = { v1610[1] }
    nt      = { v1611[1] }
    ?15     = { v1612[1] }
    rf      = { v1613[1] }
    vm      = { v1614[1] }
    ac      = { v1615[1] }
    vif     = { v1616[1] }
    vip     = { v1617[1] }
    id      = { v1618[1] }
    ?22     = { v1619[1] }
    ?23     = { v1620[1] }
    ?24     = { v1621[1] }
    ?25     = { v1622[1] }
    ?26     = { v1623[1] }
    ?27     = { v1624[1] }
    ?28     = { v1625[1] }
    ?29     = { v1626[1] }
    ?30     = { v1627[1] }
    ?31     = { v1628[1] }
    ip      = { v1632[32] }
memory:
    addr=v1588+0x4[32] value=v1632[32]
    addr=v1588[32] value=v1630[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={0x08048402,0x08048403}, expr=(add[32] (add[32] v1128[32] 4[32]) 4[32])} }
    bp      = { {defs={0x08048402}, expr=v1170[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x08048403}, expr=v1175[32]} }
memory:
    addr={defs={0x08048402,0x08048403}, expr=(add[32] (add[32] v1128[32] 4[32]) 3[32])} value={defs={0x08048403}, expr=(extract[8] 24[32] 32[32] v1175[32])}
    addr={defs={0x08048402,0x08048403}, expr=(add[32] (add[32] v1128[32] 4[32]) 2[32])} value={defs={0x08048403}, expr=(extract[8] 16[32] 24[32] v1175[32])}
    addr={defs={0x08048402,0x08048403}, expr=(add[32] (add[32] v1128[32] 4[32]) 1[32])} value={defs={0x08048403}, expr=(extract[8] 8[32] 16[32] v1175[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 4[32])} value={defs={0x08048403}, expr=(extract[8] 0[32] 8[32] v1175[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 3[32])} value={defs={0x08048402}, expr=(extract[8] 24[32] 32[32] v1170[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 2[32])} value={defs={0x08048402}, expr=(extract[8] 16[32] 24[32] v1170[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 1[32])} value={defs={0x08048402}, expr=(extract[8] 8[32] 16[32] v1170[32])}
    addr={defs={}, expr=v1128[32]} value={defs={0x08048402}, expr=(extract[8] 0[32] 8[32] v1170[32])}
== Interval ==
registers:
    ax      = { 0[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>
== PartialSymbolic ==
registers:
    ax      = { v1636[32] }
    cx      = { v1637[32] }
    dx      = { v1638[32] }
    bx      = { v1639[32] }
    sp      = { v1640[32] }
    bp      = { v1641[32] }
    si      = { v1642[32] }
    di      = { v1643[32] }
    es      = { v1644[16] }
    cs      = { v1645[16] }
    ss      = { v1646[16] }
    ds      = { v1647[16] }
    fs      = { v1648[16] }
    gs      = { v1649[16] }
    cf      = { v1650[1] }
    ?1      = { v1651[1] }
    pf      = { v1652[1] }
    ?3      = { v1653[1] }
    af      = { v1654[1] }
    ?5      = { v1655[1] }
    zf      = { v1656[1] }
    sf      = { v1657[1] }
    tf      = { v1658[1] }
    if      = { v1659[1] }
    df      = { v1660[1] }
    of      = { v1661[1] }
    iopl0   = { v1662[1] }
    iopl1   = { v1663[1] }
    nt      = { v1664[1] }
    ?15     = { v1665[1] }
    rf      = { v1666[1] }
    vm      = { v1667[1] }
    ac      = { v1668[1] }
    vif     = { v1669[1] }
    vip     = { v1670[1] }
    id      = { v1671[1] }
    ?22     = { v1672[1] }
    ?23     = { v1673[1] }
    ?24     = { v1674[1] }
    ?25     = { v1675[1] }
    ?26     = { v1676[1] }
    ?27     = { v1677[1] }
    ?28     = { v1678[1] }
    ?29     = { v1679[1] }
    ?30     = { v1680[1] }
    ?31     = { v1681[1] }
    ip      = { 0x80483ef[32] }
memory:
    addr=v1640[32] value=0x80495f8[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1182[32]} }
    cx      = { {defs={}, expr=v1183[32]} }
    dx      = { {defs={}, expr=v1184[32]} }
    bx      = { {defs={}, expr=v1185[32]} }
    sp      = { {defs={}, expr=v1186[32]} }
    bp      = { {defs={}, expr=v1187[32]} }
    si      = { {defs={}, expr=v1188[32]} }
    di      = { {defs={}, expr=v1189[32]} }
    es      = { {defs={}, expr=v1190[16]} }
    cs      = { {defs={}, expr=v1191[16]} }
    ss      = { {defs={}, expr=v1192[16]} }
    ds      = { {defs={}, expr=v1193[16]} }
    fs      = { {defs={}, expr=v1194[16]} }
    gs      = { {defs={}, expr=v1195[16]} }
    cf      = { {defs={}, expr=v1196[1]} }
    ?1      = { {defs={}, expr=v1197[1]} }
    pf      = { {defs={}, expr=v1198[1]} }
    ?3      = { {defs={}, expr=v1199[1]} }
    af      = { {defs={}, expr=v1200[1]} }
    ?5      = { {defs={}, expr=v1201[1]} }
    zf      = { {defs={}, expr=v1202[1]} }
    sf      = { {defs={}, expr=v1203[1]} }
    tf      = { {defs={}, expr=v1204[1]} }
    if      = { {defs={}, expr=v1205[1]} }
    df      = { {defs={}, expr=v1206[1]} }
    of      = { {defs={}, expr=v1207[1]} }
    iopl0   = { {defs={}, expr=v1208[1]} }
    iopl1   = { {defs={}, expr=v1209[1]} }
    nt      = { {defs={}, expr=v1210[1]} }
    ?15     = { {defs={}, expr=v1211[1]} }
    rf      = { {defs={}, expr=v1212[1]} }
    vm      = { {defs={}, expr=v1213[1]} }
    ac      = { {defs={}, expr=v1214[1]} }
    vif     = { {defs={}, expr=v1215[1]} }
    vip     = { {defs={}, expr=v1216[1]} }
    id      = { {defs={}, expr=v1217[1]} }
    ?22     = { {defs={}, expr=v1218[1]} }
    ?23     = { {defs={}, expr=v1219[1]} }
    ?24     = { {defs={}, expr=v1220[1]} }
    ?25     = { {defs={}, expr=v1221[1]} }
    ?26     = { {defs={}, expr=v1222[1]} }
    ?27     = { {defs={}, expr=v1223[1]} }
    ?28     = { {defs={}, expr=v1224[1]} }
    ?29     = { {defs={}, expr=v1225[1]} }
    ?30     = { {defs={}, expr=v1226[1]} }
    ?31     = { {defs={}, expr=v1227[1]} }
    ip      = { {defs={0x080483e8}, expr=0x080483ef[32]} }
memory:
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 3[32])} value={defs={0x080483e8}, expr=8[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 2[32])} value={defs={0x080483e8}, expr=4[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 1[32])} value={defs={0x080483e8}, expr=-107[8]}
    addr={defs={}, expr=v1186[32]} value={defs={0x080483e8}, expr=-8[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483ef[32] }
memory:
0x80483ef:call   0x00000000
== PartialSymbolic ==
registers:
    ax      = { v1636[32] }
    cx      = { v1637[32] }
    dx      = { v1638[32] }
    bx      = { v1639[32] }
    sp      = { v1640-0x4[32] }
    bp      = { v1641[32] }
    si      = { v1642[32] }
    di      = { v1643[32] }
    es      = { v1644[16] }
    cs      = { v1645[16] }
    ss      = { v1646[16] }
    ds      = { v1647[16] }
    fs      = { v1648[16] }
    gs      = { v1649[16] }
    cf      = { v1650[1] }
    ?1      = { v1651[1] }
    pf      = { v1652[1] }
    ?3      = { v1653[1] }
    af      = { v1654[1] }
    ?5      = { v1655[1] }
    zf      = { v1656[1] }
    sf      = { v1657[1] }
    tf      = { v1658[1] }
    if      = { v1659[1] }
    df      = { v1660[1] }
    of      = { v1661[1] }
    iopl0   = { v1662[1] }
    iopl1   = { v1663[1] }
    nt      = { v1664[1] }
    ?15     = { v1665[1] }
    rf      = { v1666[1] }
    vm      = { v1667[1] }
    ac      = { v1668[1] }
    vif     = { v1669[1] }
    vip     = { v1670[1] }
    id      = { v1671[1] }
    ?22     = { v1672[1] }
    ?23     = { v1673[1] }
    ?24     = { v1674[1] }
    ?25     = { v1675[1] }
    ?26     = { v1676[1] }
    ?27     = { v1677[1] }
    ?28     = { v1678[1] }
    ?29     = { v1679[1] }
    ?30     = { v1680[1] }
    ?31     = { v1681[1] }
    ip      = { 0x0[32] }
memory:
    addr=v1640-0x4[32] value=0x80483f4[32]
    addr=v1640[32] value=0x80495f8[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1182[32]} }
    cx      = { {defs={}, expr=v1183[32]} }
    dx      = { {defs={}, expr=v1184[32]} }
    bx      = { {defs={}, expr=v1185[32]} }
    sp      = { {defs={0x080483ef}, expr=(add[32] v1186[32] -4[32])} }
    bp      = { {defs={}, expr=v1187[32]} }
    si      = { {defs={}, expr=v1188[32]} }
    di      = { {defs={}, expr=v1189[32]} }
    es      = { {defs={}, expr=v1190[16]} }
    cs      = { {defs={}, expr=v1191[16]} }
    ss      = { {defs={}, expr=v1192[16]} }
    ds      = { {defs={}, expr=v1193[16]} }
    fs      = { {defs={}, expr=v1194[16]} }
    gs      = { {defs={}, expr=v1195[16]} }
    cf      = { {defs={}, expr=v1196[1]} }
    ?1      = { {defs={}, expr=v1197[1]} }
    pf      = { {defs={}, expr=v1198[1]} }
    ?3      = { {defs={}, expr=v1199[1]} }
    af      = { {defs={}, expr=v1200[1]} }
    ?5      = { {defs={}, expr=v1201[1]} }
    zf      = { {defs={}, expr=v1202[1]} }
    sf      = { {defs={}, expr=v1203[1]} }
    tf      = { {defs={}, expr=v1204[1]} }
    if      = { {defs={}, expr=v1205[1]} }
    df      = { {defs={}, expr=v1206[1]} }
    of      = { {defs={}, expr=v1207[1]} }
    iopl0   = { {defs={}, expr=v1208[1]} }
    iopl1   = { {defs={}, expr=v1209[1]} }
    nt      = { {defs={}, expr=v1210[1]} }
    ?15     = { {defs={}, expr=v1211[1]} }
    rf      = { {defs={}, expr=v1212[1]} }
    vm      = { {defs={}, expr=v1213[1]} }
    ac      = { {defs={}, expr=v1214[1]} }
    vif     = { {defs={}, expr=v1215[1]} }
    vip     = { {defs={}, expr=v1216[1]} }
    id      = { {defs={}, expr=v1217[1]} }
    ?22     = { {defs={}, expr=v1218[1]} }
    ?23     = { {defs={}, expr=v1219[1]} }
    ?24     = { {defs={}, expr=v1220[1]} }
    ?25     = { {defs={}, expr=v1221[1]} }
    ?26     = { {defs={}, expr=v1222[1]} }
    ?27     = { {defs={}, expr=v1223[1]} }
    ?28     = { {defs={}, expr=v1224[1]} }
    ?29     = { {defs={}, expr=v1225[1]} }
    ?30     = { {defs={}, expr=v1226[1]} }
    ?31     = { {defs={}, expr=v1227[1]} }
    ip      = { {defs={}, expr=0[32]} }
memory:
    addr={defs={0x080483ef}, expr=(add[32] (add[32] v1186[32] -4[32]) 3[32])} value={defs={0x080483ef}, expr=8[8]}
    addr={defs={0x080483ef}, expr=(add[32] (add[32] v1186[32] -4[32]) 2[32])} value={defs={0x080483ef}, expr=4[8]}
    addr={defs={0x080483ef}, expr=(add[32] (add[32] v1186[32] -4[32]) 1[32])} value={defs={0x080483ef}, expr=-125[8]}
    addr={defs={0x080483ef}, expr=(add[32] v1186[32] -4[32])} value={defs={0x080483ef}, expr=-12[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 3[32])} value={defs={0x080483e8}, expr=8[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 2[32])} value={defs={0x080483e8}, expr=4[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 1[32])} value={defs={0x080483e8}, expr=-107[8]}
    addr={defs={}, expr=v1186[32]} value={defs={0x080483e8}, expr=-8[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
== PartialSymbolic ==
registers:
    ax      = { v1684[32] }
    cx      = { v1685[32] }
    dx      = { v1686[32] }
    bx      = { v1687[32] }
    sp      = { v1688[32] }
    bp      = { v1689[32] }
    si      = { v1690[32] }
    di      = { v1691[32] }
    es      = { v1692[16] }
    cs      = { v1693[16] }
    ss      = { v1694[16] }
    ds      = { v1695[16] }
    fs      = { v1696[16] }
    gs      = { v1697[16] }
    cf      = { v1698[1] }
    ?1      = { v1699[1] }
    pf      = { v1700[1] }
    ?3      = { v1701[1] }
    af      = { v1702[1] }
    ?5      = { v1703[1] }
    zf      = { v1704[1] }
    sf      = { v1705[1] }
    tf      = { v1706[1] }
    if      = { v1707[1] }
    df      = { v1708[1] }
    of      = { v1709[1] }
    iopl0   = { v1710[1] }
    iopl1   = { v1711[1] }
    nt      = { v1712[1] }
    ?15     = { v1713[1] }
    rf      = { v1714[1] }
    vm      = { v1715[1] }
    ac      = { v1716[1] }
    vif     = { v1717[1] }
    vip     = { v1718[1] }
    id      = { v1719[1] }
    ?22     = { v1720[1] }
    ?23     = { v1721[1] }
    ?24     = { v1722[1] }
    ?25     = { v1723[1] }
    ?26     = { v1724[1] }
    ?27     = { v1725[1] }
    ?28     = { v1726[1] }
    ?29     = { v1727[1] }
    ?30     = { v1728[1] }
    ?31     = { v1729[1] }
    ip      = { 0x80483fa[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1230[32]} }
    cx      = { {defs={}, expr=v1231[32]} }
    dx      = { {defs={}, expr=v1232[32]} }
    bx      = { {defs={}, expr=v1233[32]} }
    sp      = { {defs={}, expr=v1234[32]} }
    bp      = { {defs={}, expr=v1235[32]} }
    si      = { {defs={}, expr=v1236[32]} }
    di      = { {defs={}, expr=v1237[32]} }
    es      = { {defs={}, expr=v1238[16]} }
    cs      = { {defs={}, expr=v1239[16]} }
    ss      = { {defs={}, expr=v1240[16]} }
    ds      = { {defs={}, expr=v1241[16]} }
    fs      = { {defs={}, expr=v1242[16]} }
    gs      = { {defs={}, expr=v1243[16]} }
    cf      = { {defs={}, expr=v1244[1]} }
    ?1      = { {defs={}, expr=v1245[1]} }
    pf      = { {defs={}, expr=v1246[1]} }
    ?3      = { {defs={}, expr=v1247[1]} }
    af      = { {defs={}, expr=v1248[1]} }
    ?5      = { {defs={}, expr=v1249[1]} }
    zf      = { {defs={}, expr=v1250[1]} }
    sf      = { {defs={}, expr=v1251[1]} }
    tf      = { {defs={}, expr=v1252[1]} }
    if      = { {defs={}, expr=v1253[1]} }
    df      = { {defs={}, expr=v1254[1]} }
    of      = { {defs={}, expr=v1255[1]} }
    iopl0   = { {defs={}, expr=v1256[1]} }
    iopl1   = { {defs={}, expr=v1257[1]} }
    nt      = { {defs={}, expr=v1258[1]} }
    ?15     = { {defs={}, expr=v1259[1]} }
    rf      = { {defs={}, expr=v1260[1]} }
    vm      = { {defs={}, expr=v1261[1]} }
    ac      = { {defs={}, expr=v1262[1]} }
    vif     = { {defs={}, expr=v1263[1]} }
    vip     = { {defs={}, expr=v1264[1]} }
    id      = { {defs={}, expr=v1265[1]} }
    ?22     = { {defs={}, expr=v1266[1]} }
    ?23     = { {defs={}, expr=v1267[1]} }
    ?24     = { {defs={}, expr=v1268[1]} }
    ?25     = { {defs={}, expr=v1269[1]} }
    ?26     = { {defs={}, expr=v1270[1]} }
    ?27     = { {defs={}, expr=v1271[1]} }
    ?28     = { {defs={}, expr=v1272[1]} }
    ?29     = { {defs={}, expr=v1273[1]} }
    ?30     = { {defs={}, expr=v1274[1]} }
    ?31     = { {defs={}, expr=v1275[1]} }
    ip      = { {defs={0x080483f4}, expr=0x080483fa[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080483fa[32] }
memory:
0x80483fa:lea    edi, [edi + 0x00000000]
== PartialSymbolic ==
registers:
    ax      = { v1684[32] }
    cx      = { v1685[32] }
    dx      = { v1686[32] }
    bx      = { v1687[32] }
    sp      = { v1688[32] }
    bp      = { v1689[32] }
    si      = { v1690[32] }
    di      = { v1691[32] }
    es      = { v1692[16] }
    cs      = { v1693[16] }
    ss      = { v1694[16] }
    ds      = { v1695[16] }
    fs      = { v1696[16] }
    gs      = { v1697[16] }
    cf      = { v1698[1] }
    ?1      = { v1699[1] }
    pf      = { v1700[1] }
    ?3      = { v1701[1] }
    af      = { v1702[1] }
    ?5      = { v1703[1] }
    zf      = { v1704[1] }
    sf      = { v1705[1] }
    tf      = { v1706[1] }
    if      = { v1707[1] }
    df      = { v1708[1] }
    of      = { v1709[1] }
    iopl0   = { v1710[1] }
    iopl1   = { v1711[1] }
    nt      = { v1712[1] }
    ?15     = { v1713[1] }
    rf      = { v1714[1] }
    vm      = { v1715[1] }
    ac      = { v1716[1] }
    vif     = { v1717[1] }
    vip     = { v1718[1] }
    id      = { v1719[1] }
    ?22     = { v1720[1] }
    ?23     = { v1721[1] }
    ?24     = { v1722[1] }
    ?25     = { v1723[1] }
    ?26     = { v1724[1] }
    ?27     = { v1725[1] }
    ?28     = { v1726[1] }
    ?29     = { v1727[1] }
    ?30     = { v1728[1] }
    ?31     = { v1729[1] }
    ip      = { 0x8048400[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1230[32]} }
    cx      = { {defs={}, expr=v1231[32]} }
    dx      = { {defs={}, expr=v1232[32]} }
    bx      = { {defs={}, expr=v1233[32]} }
    sp      = { {defs={}, expr=v1234[32]} }
    bp      = { {defs={}, expr=v1235[32]} }
    si      = { {defs={}, expr=v1236[32]} }
    di      = { {defs={}, expr=v1237[32]} }
    es      = { {defs={}, expr=v1238[16]} }
    cs      = { {defs={}, expr=v1239[16]} }
    ss      = { {defs={}, expr=v1240[16]} }
    ds      = { {defs={}, expr=v1241[16]} }
    fs      = { {defs={}, expr=v1242[16]} }
    gs      = { {defs={}, expr=v1243[16]} }
    cf      = { {defs={}, expr=v1244[1]} }
    ?1      = { {defs={}, expr=v1245[1]} }
    pf      = { {defs={}, expr=v1246[1]} }
    ?3      = { {defs={}, expr=v1247[1]} }
    af      = { {defs={}, expr=v1248[1]} }
    ?5      = { {defs={}, expr=v1249[1]} }
    zf      = { {defs={}, expr=v1250[1]} }
    sf      = { {defs={}, expr=v1251[1]} }
    tf      = { {defs={}, expr=v1252[1]} }
    if      = { {defs={}, expr=v1253[1]} }
    df      = { {defs={}, expr=v1254[1]} }
    of      = { {defs={}, expr=v1255[1]} }
    iopl0   = { {defs={}, expr=v1256[1]} }
    iopl1   = { {defs={}, expr=v1257[1]} }
    nt      = { {defs={}, expr=v1258[1]} }
    ?15     = { {defs={}, expr=v1259[1]} }
    rf      = { {defs={}, expr=v1260[1]} }
    vm      = { {defs={}, expr=v1261[1]} }
    ac      = { {defs={}, expr=v1262[1]} }
    vif     = { {defs={}, expr=v1263[1]} }
    vip     = { {defs={}, expr=v1264[1]} }
    id      = { {defs={}, expr=v1265[1]} }
    ?22     = { {defs={}, expr=v1266[1]} }
    ?23     = { {defs={}, expr=v1267[1]} }
    ?24     = { {defs={}, expr=v1268[1]} }
    ?25     = { {defs={}, expr=v1269[1]} }
    ?26     = { {defs={}, expr=v1270[1]} }
    ?27     = { {defs={}, expr=v1271[1]} }
    ?28     = { {defs={}, expr=v1272[1]} }
    ?29     = { {defs={}, expr=v1273[1]} }
    ?30     = { {defs={}, expr=v1274[1]} }
    ?31     = { {defs={}, expr=v1275[1]} }
    ip      = { {defs={0x080483fa}, expr=0x08048400[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048400[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v1732[32] }
    cx      = { v1733[32] }
    dx      = { v1734[32] }
    bx      = { v1735[32] }
    sp      = { v1736-0x4[32] }
    bp      = { v1737[32] }
    si      = { v1738[32] }
    di      = { v1739[32] }
    es      = { v1740[16] }
    cs      = { v1741[16] }
    ss      = { v1742[16] }
    ds      = { v1743[16] }
    fs      = { v1744[16] }
    gs      = { v1745[16] }
    cf      = { v1746[1] }
    ?1      = { v1747[1] }
    pf      = { v1748[1] }
    ?3      = { v1749[1] }
    af      = { v1750[1] }
    ?5      = { v1751[1] }
    zf      = { v1752[1] }
    sf      = { v1753[1] }
    tf      = { v1754[1] }
    if      = { v1755[1] }
    df      = { v1756[1] }
    of      = { v1757[1] }
    iopl0   = { v1758[1] }
    iopl1   = { v1759[1] }
    nt      = { v1760[1] }
    ?15     = { v1761[1] }
    rf      = { v1762[1] }
    vm      = { v1763[1] }
    ac      = { v1764[1] }
    vif     = { v1765[1] }
    vip     = { v1766[1] }
    id      = { v1767[1] }
    ?22     = { v1768[1] }
    ?23     = { v1769[1] }
    ?24     = { v1770[1] }
    ?25     = { v1771[1] }
    ?26     = { v1772[1] }
    ?27     = { v1773[1] }
    ?28     = { v1774[1] }
    ?29     = { v1775[1] }
    ?30     = { v1776[1] }
    ?31     = { v1777[1] }
    ip      = { 0x8048411[32] }
memory:
    addr=v1736-0x4[32] value=v1737[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=v1280[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    bp      = { {defs={}, expr=v1283[32]} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=v1292[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={}, expr=v1294[1]} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1296[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={}, expr=v1298[1]} }
    sf      = { {defs={}, expr=v1299[1]} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=v1303[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048410}, expr=0x08048411[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048411[32] }
memory:
0x8048411:mov    edx, 0x08048480<handler>
== PartialSymbolic ==
registers:
    ax      = { v1732[32] }
    cx      = { v1733[32] }
    dx      = { 0x8048480[32] }
    bx      = { v1735[32] }
    sp      = { v1736-0x4[32] }
    bp      = { v1737[32] }
    si      = { v1738[32] }
    di      = { v1739[32] }
    es      = { v1740[16] }
    cs      = { v1741[16] }
    ss      = { v1742[16] }
    ds      = { v1743[16] }
    fs      = { v1744[16] }
    gs      = { v1745[16] }
    cf      = { v1746[1] }
    ?1      = { v1747[1] }
    pf      = { v1748[1] }
    ?3      = { v1749[1] }
    af      = { v1750[1] }
    ?5      = { v1751[1] }
    zf      = { v1752[1] }
    sf      = { v1753[1] }
    tf      = { v1754[1] }
    if      = { v1755[1] }
    df      = { v1756[1] }
    of      = { v1757[1] }
    iopl0   = { v1758[1] }
    iopl1   = { v1759[1] }
    nt      = { v1760[1] }
    ?15     = { v1761[1] }
    rf      = { v1762[1] }
    vm      = { v1763[1] }
    ac      = { v1764[1] }
    vif     = { v1765[1] }
    vip     = { v1766[1] }
    id      = { v1767[1] }
    ?22     = { v1768[1] }
    ?23     = { v1769[1] }
    ?24     = { v1770[1] }
    ?25     = { v1771[1] }
    ?26     = { v1772[1] }
    ?27     = { v1773[1] }
    ?28     = { v1774[1] }
    ?29     = { v1775[1] }
    ?30     = { v1776[1] }
    ?31     = { v1777[1] }
    ip      = { 0x8048416[32] }
memory:
    addr=v1736-0x4[32] value=v1737[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    bp      = { {defs={}, expr=v1283[32]} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=v1292[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={}, expr=v1294[1]} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1296[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={}, expr=v1298[1]} }
    sf      = { {defs={}, expr=v1299[1]} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=v1303[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048411}, expr=0x08048416[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048416[32] }
memory:
0x8048416:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v1732[32] }
    cx      = { v1733[32] }
    dx      = { 0x8048480[32] }
    bx      = { v1735[32] }
    sp      = { v1736-0x4[32] }
    bp      = { v1736-0x4[32] }
    si      = { v1738[32] }
    di      = { v1739[32] }
    es      = { v1740[16] }
    cs      = { v1741[16] }
    ss      = { v1742[16] }
    ds      = { v1743[16] }
    fs      = { v1744[16] }
    gs      = { v1745[16] }
    cf      = { v1746[1] }
    ?1      = { v1747[1] }
    pf      = { v1748[1] }
    ?3      = { v1749[1] }
    af      = { v1750[1] }
    ?5      = { v1751[1] }
    zf      = { v1752[1] }
    sf      = { v1753[1] }
    tf      = { v1754[1] }
    if      = { v1755[1] }
    df      = { v1756[1] }
    of      = { v1757[1] }
    iopl0   = { v1758[1] }
    iopl1   = { v1759[1] }
    nt      = { v1760[1] }
    ?15     = { v1761[1] }
    rf      = { v1762[1] }
    vm      = { v1763[1] }
    ac      = { v1764[1] }
    vif     = { v1765[1] }
    vip     = { v1766[1] }
    id      = { v1767[1] }
    ?22     = { v1768[1] }
    ?23     = { v1769[1] }
    ?24     = { v1770[1] }
    ?25     = { v1771[1] }
    ?26     = { v1772[1] }
    ?27     = { v1773[1] }
    ?28     = { v1774[1] }
    ?29     = { v1775[1] }
    ?30     = { v1776[1] }
    ?31     = { v1777[1] }
    ip      = { 0x8048418[32] }
memory:
    addr=v1736-0x4[32] value=v1737[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=v1292[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={}, expr=v1294[1]} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1296[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={}, expr=v1298[1]} }
    sf      = { {defs={}, expr=v1299[1]} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=v1303[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048416}, expr=0x08048418[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048418[32] }
memory:
0x8048418:sub    esp, 0x08
== PartialSymbolic ==
registers:
    ax      = { v1732[32] }
    cx      = { v1733[32] }
    dx      = { 0x8048480[32] }
    bx      = { v1735[32] }
    sp      = { v1736-0xc[32] }
    bp      = { v1736-0x4[32] }
    si      = { v1738[32] }
    di      = { v1739[32] }
    es      = { v1740[16] }
    cs      = { v1741[16] }
    ss      = { v1742[16] }
    ds      = { v1743[16] }
    fs      = { v1744[16] }
    gs      = { v1745[16] }
    cf      = { -v1795+0x1[1] }
    ?1      = { v1747[1] }
    pf      = { -v1792+0x1[1] }
    ?3      = { v1749[1] }
    af      = { -v1797+0x1[1] }
    ?5      = { v1751[1] }
    zf      = { v1794[1] }
    sf      = { v1793[1] }
    tf      = { v1754[1] }
    if      = { v1755[1] }
    df      = { v1756[1] }
    of      = { v1798[1] }
    iopl0   = { v1758[1] }
    iopl1   = { v1759[1] }
    nt      = { v1760[1] }
    ?15     = { v1761[1] }
    rf      = { v1762[1] }
    vm      = { v1763[1] }
    ac      = { v1764[1] }
    vif     = { v1765[1] }
    vip     = { v1766[1] }
    id      = { v1767[1] }
    ?22     = { v1768[1] }
    ?23     = { v1769[1] }
    ?24     = { v1770[1] }
    ?25     = { v1771[1] }
    ?26     = { v1772[1] }
    ?27     = { v1773[1] }
    ?28     = { v1774[1] }
    ?29     = { v1775[1] }
    ?30     = { v1776[1] }
    ?31     = { v1777[1] }
    ip      = { 0x804841b[32] }
memory:
    addr=v1736-0x4[32] value=v1737[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418}, expr=(add[32] (add[32] v1282[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={0x08048410,0x08048418}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={0x08048410,0x08048418}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418}, expr=(zerop[1] (add[32] (add[32] v1282[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048410,0x08048418}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={0x08048410,0x08048418}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048418}, expr=0x0804841b[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804841b[32] }
memory:
0x804841b:and    esp, 0xf0<-0x10>
== PartialSymbolic ==
registers:
    ax      = { v1732[32] }
    cx      = { v1733[32] }
    dx      = { 0x8048480[32] }
    bx      = { v1735[32] }
    sp      = { v1799[32] }
    bp      = { v1736-0x4[32] }
    si      = { v1738[32] }
    di      = { v1739[32] }
    es      = { v1740[16] }
    cs      = { v1741[16] }
    ss      = { v1742[16] }
    ds      = { v1743[16] }
    fs      = { v1744[16] }
    gs      = { v1745[16] }
    cf      = { 0x0[1] }
    ?1      = { v1747[1] }
    pf      = { -v1813+0x1[1] }
    ?3      = { v1749[1] }
    af      = { v1816[1] }
    ?5      = { v1751[1] }
    zf      = { v1815[1] }
    sf      = { v1814[1] }
    tf      = { v1754[1] }
    if      = { v1755[1] }
    df      = { v1756[1] }
    of      = { 0x0[1] }
    iopl0   = { v1758[1] }
    iopl1   = { v1759[1] }
    nt      = { v1760[1] }
    ?15     = { v1761[1] }
    rf      = { v1762[1] }
    vm      = { v1763[1] }
    ac      = { v1764[1] }
    vif     = { v1765[1] }
    vip     = { v1766[1] }
    id      = { v1767[1] }
    ?22     = { v1768[1] }
    ?23     = { v1769[1] }
    ?24     = { v1770[1] }
    ?25     = { v1771[1] }
    ?26     = { v1772[1] }
    ?27     = { v1773[1] }
    ?28     = { v1774[1] }
    ?29     = { v1775[1] }
    ?30     = { v1776[1] }
    ?31     = { v1777[1] }
    ip      = { 0x804841e[32] }
memory:
    addr=v1736-0x4[32] value=v1737[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1324[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    sf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x0804841b}, expr=0x0804841e[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { 0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804841e[32] }
memory:
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
== PartialSymbolic ==
registers:
    ax      = { v1732[32] }
    cx      = { v1733[32] }
    dx      = { 0x8048480[32] }
    bx      = { v1735[32] }
    sp      = { v1799[32] }
    bp      = { v1736-0x4[32] }
    si      = { v1738[32] }
    di      = { v1739[32] }
    es      = { v1740[16] }
    cs      = { v1741[16] }
    ss      = { v1742[16] }
    ds      = { v1743[16] }
    fs      = { v1744[16] }
    gs      = { v1745[16] }
    cf      = { 0x0[1] }
    ?1      = { v1747[1] }
    pf      = { -v1813+0x1[1] }
    ?3      = { v1749[1] }
    af      = { v1816[1] }
    ?5      = { v1751[1] }
    zf      = { v1815[1] }
    sf      = { v1814[1] }
    tf      = { v1754[1] }
    if      = { v1755[1] }
    df      = { v1756[1] }
    of      = { 0x0[1] }
    iopl0   = { v1758[1] }
    iopl1   = { v1759[1] }
    nt      = { v1760[1] }
    ?15     = { v1761[1] }
    rf      = { v1762[1] }
    vm      = { v1763[1] }
    ac      = { v1764[1] }
    vif     = { v1765[1] }
    vip     = { v1766[1] }
    id      = { v1767[1] }
    ?22     = { v1768[1] }
    ?23     = { v1769[1] }
    ?24     = { v1770[1] }
    ?25     = { v1771[1] }
    ?26     = { v1772[1] }
    ?27     = { v1773[1] }
    ?28     = { v1774[1] }
    ?29     = { v1775[1] }
    ?30     = { v1776[1] }
    ?31     = { v1777[1] }
    ip      = { 0x8048422[32] }
memory:
    addr=v1799+0x4[32] value=0x8048480[32]
    addr=v1736-0x4[32] value=v1737[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1324[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    sf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x0804841e}, expr=0x08048422[32]} }
memory:
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32])} value={defs={0x0804841e}, expr=8[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32])} value={defs={0x0804841e}, expr=4[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32])} value={defs={0x0804841e}, expr=-124[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32])} value={defs={0x0804841e}, expr=-128[8]}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { 0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048422[32] }
memory:
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
== PartialSymbolic ==
registers:
    ax      = { v1732[32] }
    cx      = { v1733[32] }
    dx      = { 0x8048480[32] }
    bx      = { v1735[32] }
    sp      = { v1799[32] }
    bp      = { v1736-0x4[32] }
    si      = { v1738[32] }
    di      = { v1739[32] }
    es      = { v1740[16] }
    cs      = { v1741[16] }
    ss      = { v1742[16] }
    ds      = { v1743[16] }
    fs      = { v1744[16] }
    gs      = { v1745[16] }
    cf      = { 0x0[1] }
    ?1      = { v1747[1] }
    pf      = { -v1813+0x1[1] }
    ?3      = { v1749[1] }
    af      = { v1816[1] }
    ?5      = { v1751[1] }
    zf      = { v1815[1] }
    sf      = { v1814[1] }
    tf      = { v1754[1] }
    if      = { v1755[1] }
    df      = { v1756[1] }
    of      = { 0x0[1] }
    iopl0   = { v1758[1] }
    iopl1   = { v1759[1] }
    nt      = { v1760[1] }
    ?15     = { v1761[1] }
    rf      = { v1762[1] }
    vm      = { v1763[1] }
    ac      = { v1764[1] }
    vif     = { v1765[1] }
    vip     = { v1766[1] }
    id      = { v1767[1] }
    ?22     = { v1768[1] }
    ?23     = { v1769[1] }
    ?24     = { v1770[1] }
    ?25     = { v1771[1] }
    ?26     = { v1772[1] }
    ?27     = { v1773[1] }
    ?28     = { v1774[1] }
    ?29     = { v1775[1] }
    ?30     = { v1776[1] }
    ?31     = { v1777[1] }
    ip      = { 0x8048429[32] }
memory:
    addr=v1799[32] value=0xa[32]
    addr=v1799+0x4[32] value=0x8048480[32]
    addr=v1736-0x4[32] value=v1737[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1324[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    sf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048422}, expr=0x08048429[32]} }
memory:
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 3[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 2[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 1[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} value={defs={0x08048422}, expr=10[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32])} value={defs={0x0804841e}, expr=8[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32])} value={defs={0x0804841e}, expr=4[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32])} value={defs={0x0804841e}, expr=-124[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32])} value={defs={0x0804841e}, expr=-128[8]}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { 0[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048429[32] }
memory:
0x8048429:call   0x080482f0<signal@plt>
== PartialSymbolic ==
registers:
    ax      = { v1732[32] }
    cx      = { v1733[32] }
    dx      = { 0x8048480[32] }
    bx      = { v1735[32] }
    sp      = { v1799-0x4[32] }
    bp      = { v1736-0x4[32] }
    si      = { v1738[32] }
    di      = { v1739[32] }
    es      = { v1740[16] }
    cs      = { v1741[16] }
    ss      = { v1742[16] }
    ds      = { v1743[16] }
    fs      = { v1744[16] }
    gs      = { v1745[16] }
    cf      = { 0x0[1] }
    ?1      = { v1747[1] }
    pf      = { -v1813+0x1[1] }
    ?3      = { v1749[1] }
    af      = { v1816[1] }
    ?5      = { v1751[1] }
    zf      = { v1815[1] }
    sf      = { v1814[1] }
    tf      = { v1754[1] }
    if      = { v1755[1] }
    df      = { v1756[1] }
    of      = { 0x0[1] }
    iopl0   = { v1758[1] }
    iopl1   = { v1759[1] }
    nt      = { v1760[1] }
    ?15     = { v1761[1] }
    rf      = { v1762[1] }
    vm      = { v1763[1] }
    ac      = { v1764[1] }
    vif     = { v1765[1] }
    vip     = { v1766[1] }
    id      = { v1767[1] }
    ?22     = { v1768[1] }
    ?23     = { v1769[1] }
    ?24     = { v1770[1] }
    ?25     = { v1771[1] }
    ?26     = { v1772[1] }
    ?27     = { v1773[1] }
    ?28     = { v1774[1] }
    ?29     = { v1775[1] }
    ?30     = { v1776[1] }
    ?31     = { v1777[1] }
    ip      = { 0x80482f0[32] }
memory:
    addr=v1799-0x4[32] value=0x804842e[32]
    addr=v1799[32] value=0xa[32]
    addr=v1799+0x4[32] value=0x8048480[32]
    addr=v1736-0x4[32] value=v1737[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1324[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    sf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={}, expr=0x080482f0[32]} }
memory:
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048429}, expr=8[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048429}, expr=4[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048429}, expr=-124[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32])} value={defs={0x08048429}, expr=46[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 3[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 2[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 1[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} value={defs={0x08048422}, expr=10[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32])} value={defs={0x0804841e}, expr=8[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32])} value={defs={0x0804841e}, expr=4[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32])} value={defs={0x0804841e}, expr=-124[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32])} value={defs={0x0804841e}, expr=-128[8]}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { 0x08048480[32] }
    bx      = { doubleword[32] }
    sp      = { 0xfffffffc[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 1[1] }
    sf      = { 0[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482f0[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
== PartialSymbolic ==
registers:
    ax      = { v1819[32] }
    cx      = { v1820[32] }
    dx      = { v1821[32] }
    bx      = { v1822[32] }
    sp      = { v1824[32] }
    bp      = { v1824[32] }
    si      = { v1825[32] }
    di      = { v1826[32] }
    es      = { v1827[16] }
    cs      = { v1828[16] }
    ss      = { v1829[16] }
    ds      = { v1830[16] }
    fs      = { v1831[16] }
    gs      = { v1832[16] }
    cf      = { v1833[1] }
    ?1      = { v1834[1] }
    pf      = { v1835[1] }
    ?3      = { v1836[1] }
    af      = { v1837[1] }
    ?5      = { v1838[1] }
    zf      = { v1839[1] }
    sf      = { v1840[1] }
    tf      = { v1841[1] }
    if      = { v1842[1] }
    df      = { v1843[1] }
    of      = { v1844[1] }
    iopl0   = { v1845[1] }
    iopl1   = { v1846[1] }
    nt      = { v1847[1] }
    ?15     = { v1848[1] }
    rf      = { v1849[1] }
    vm      = { v1850[1] }
    ac      = { v1851[1] }
    vif     = { v1852[1] }
    vip     = { v1853[1] }
    id      = { v1854[1] }
    ?22     = { v1855[1] }
    ?23     = { v1856[1] }
    ?24     = { v1857[1] }
    ?25     = { v1858[1] }
    ?26     = { v1859[1] }
    ?27     = { v1860[1] }
    ?28     = { v1861[1] }
    ?29     = { v1862[1] }
    ?30     = { v1863[1] }
    ?31     = { v1864[1] }
    ip      = { 0x8048430[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1327[32]} }
    cx      = { {defs={}, expr=v1328[32]} }
    dx      = { {defs={}, expr=v1329[32]} }
    bx      = { {defs={}, expr=v1330[32]} }
    sp      = { {defs={}, expr=v1332[32]} }
    bp      = { {defs={}, expr=v1332[32]} }
    si      = { {defs={}, expr=v1333[32]} }
    di      = { {defs={}, expr=v1334[32]} }
    es      = { {defs={}, expr=v1335[16]} }
    cs      = { {defs={}, expr=v1336[16]} }
    ss      = { {defs={}, expr=v1337[16]} }
    ds      = { {defs={}, expr=v1338[16]} }
    fs      = { {defs={}, expr=v1339[16]} }
    gs      = { {defs={}, expr=v1340[16]} }
    cf      = { {defs={}, expr=v1341[1]} }
    ?1      = { {defs={}, expr=v1342[1]} }
    pf      = { {defs={}, expr=v1343[1]} }
    ?3      = { {defs={}, expr=v1344[1]} }
    af      = { {defs={}, expr=v1345[1]} }
    ?5      = { {defs={}, expr=v1346[1]} }
    zf      = { {defs={}, expr=v1347[1]} }
    sf      = { {defs={}, expr=v1348[1]} }
    tf      = { {defs={}, expr=v1349[1]} }
    if      = { {defs={}, expr=v1350[1]} }
    df      = { {defs={}, expr=v1351[1]} }
    of      = { {defs={}, expr=v1352[1]} }
    iopl0   = { {defs={}, expr=v1353[1]} }
    iopl1   = { {defs={}, expr=v1354[1]} }
    nt      = { {defs={}, expr=v1355[1]} }
    ?15     = { {defs={}, expr=v1356[1]} }
    rf      = { {defs={}, expr=v1357[1]} }
    vm      = { {defs={}, expr=v1358[1]} }
    ac      = { {defs={}, expr=v1359[1]} }
    vif     = { {defs={}, expr=v1360[1]} }
    vip     = { {defs={}, expr=v1361[1]} }
    id      = { {defs={}, expr=v1362[1]} }
    ?22     = { {defs={}, expr=v1363[1]} }
    ?23     = { {defs={}, expr=v1364[1]} }
    ?24     = { {defs={}, expr=v1365[1]} }
    ?25     = { {defs={}, expr=v1366[1]} }
    ?26     = { {defs={}, expr=v1367[1]} }
    ?27     = { {defs={}, expr=v1368[1]} }
    ?28     = { {defs={}, expr=v1369[1]} }
    ?29     = { {defs={}, expr=v1370[1]} }
    ?30     = { {defs={}, expr=v1371[1]} }
    ?31     = { {defs={}, expr=v1372[1]} }
    ip      = { {defs={0x0804842e}, expr=0x08048430[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048430[32] }
memory:
0x8048430:xor    eax, eax
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1820[32] }
    dx      = { v1821[32] }
    bx      = { v1822[32] }
    sp      = { v1824[32] }
    bp      = { v1824[32] }
    si      = { v1825[32] }
    di      = { v1826[32] }
    es      = { v1827[16] }
    cs      = { v1828[16] }
    ss      = { v1829[16] }
    ds      = { v1830[16] }
    fs      = { v1831[16] }
    gs      = { v1832[16] }
    cf      = { 0x0[1] }
    ?1      = { v1834[1] }
    pf      = { 0x1[1] }
    ?3      = { v1836[1] }
    af      = { v1865[1] }
    ?5      = { v1838[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v1841[1] }
    if      = { v1842[1] }
    df      = { v1843[1] }
    of      = { 0x0[1] }
    iopl0   = { v1845[1] }
    iopl1   = { v1846[1] }
    nt      = { v1847[1] }
    ?15     = { v1848[1] }
    rf      = { v1849[1] }
    vm      = { v1850[1] }
    ac      = { v1851[1] }
    vif     = { v1852[1] }
    vip     = { v1853[1] }
    id      = { v1854[1] }
    ?22     = { v1855[1] }
    ?23     = { v1856[1] }
    ?24     = { v1857[1] }
    ?25     = { v1858[1] }
    ?26     = { v1859[1] }
    ?27     = { v1860[1] }
    ?28     = { v1861[1] }
    ?29     = { v1862[1] }
    ?30     = { v1863[1] }
    ?31     = { v1864[1] }
    ip      = { 0x8048432[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={0x08048430}, expr=0[32]} }
    cx      = { {defs={}, expr=v1328[32]} }
    dx      = { {defs={}, expr=v1329[32]} }
    bx      = { {defs={}, expr=v1330[32]} }
    sp      = { {defs={}, expr=v1332[32]} }
    bp      = { {defs={}, expr=v1332[32]} }
    si      = { {defs={}, expr=v1333[32]} }
    di      = { {defs={}, expr=v1334[32]} }
    es      = { {defs={}, expr=v1335[16]} }
    cs      = { {defs={}, expr=v1336[16]} }
    ss      = { {defs={}, expr=v1337[16]} }
    ds      = { {defs={}, expr=v1338[16]} }
    fs      = { {defs={}, expr=v1339[16]} }
    gs      = { {defs={}, expr=v1340[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1342[1]} }
    pf      = { {defs={0x08048430}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1344[1]} }
    af      = { {defs={}, expr=v1373[1]} }
    ?5      = { {defs={}, expr=v1346[1]} }
    zf      = { {defs={0x08048430}, expr=1[1]} }
    sf      = { {defs={0x08048430}, expr=0[1]} }
    tf      = { {defs={}, expr=v1349[1]} }
    if      = { {defs={}, expr=v1350[1]} }
    df      = { {defs={}, expr=v1351[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1353[1]} }
    iopl1   = { {defs={}, expr=v1354[1]} }
    nt      = { {defs={}, expr=v1355[1]} }
    ?15     = { {defs={}, expr=v1356[1]} }
    rf      = { {defs={}, expr=v1357[1]} }
    vm      = { {defs={}, expr=v1358[1]} }
    ac      = { {defs={}, expr=v1359[1]} }
    vif     = { {defs={}, expr=v1360[1]} }
    vip     = { {defs={}, expr=v1361[1]} }
    id      = { {defs={}, expr=v1362[1]} }
    ?22     = { {defs={}, expr=v1363[1]} }
    ?23     = { {defs={}, expr=v1364[1]} }
    ?24     = { {defs={}, expr=v1365[1]} }
    ?25     = { {defs={}, expr=v1366[1]} }
    ?26     = { {defs={}, expr=v1367[1]} }
    ?27     = { {defs={}, expr=v1368[1]} }
    ?28     = { {defs={}, expr=v1369[1]} }
    ?29     = { {defs={}, expr=v1370[1]} }
    ?30     = { {defs={}, expr=v1371[1]} }
    ?31     = { {defs={}, expr=v1372[1]} }
    ip      = { {defs={0x08048430}, expr=0x08048432[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048432[32] }
memory:
0x8048432:pop    ebp
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1820[32] }
    dx      = { v1821[32] }
    bx      = { v1822[32] }
    sp      = { v1824+0x4[32] }
    bp      = { v1866[32] }
    si      = { v1825[32] }
    di      = { v1826[32] }
    es      = { v1827[16] }
    cs      = { v1828[16] }
    ss      = { v1829[16] }
    ds      = { v1830[16] }
    fs      = { v1831[16] }
    gs      = { v1832[16] }
    cf      = { 0x0[1] }
    ?1      = { v1834[1] }
    pf      = { 0x1[1] }
    ?3      = { v1836[1] }
    af      = { v1865[1] }
    ?5      = { v1838[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v1841[1] }
    if      = { v1842[1] }
    df      = { v1843[1] }
    of      = { 0x0[1] }
    iopl0   = { v1845[1] }
    iopl1   = { v1846[1] }
    nt      = { v1847[1] }
    ?15     = { v1848[1] }
    rf      = { v1849[1] }
    vm      = { v1850[1] }
    ac      = { v1851[1] }
    vif     = { v1852[1] }
    vip     = { v1853[1] }
    id      = { v1854[1] }
    ?22     = { v1855[1] }
    ?23     = { v1856[1] }
    ?24     = { v1857[1] }
    ?25     = { v1858[1] }
    ?26     = { v1859[1] }
    ?27     = { v1860[1] }
    ?28     = { v1861[1] }
    ?29     = { v1862[1] }
    ?30     = { v1863[1] }
    ?31     = { v1864[1] }
    ip      = { 0x8048433[32] }
memory:
    addr=v1824[32] value=v1866[32]
== Symbolic ==
registers:
    ax      = { {defs={0x08048430}, expr=0[32]} }
    cx      = { {defs={}, expr=v1328[32]} }
    dx      = { {defs={}, expr=v1329[32]} }
    bx      = { {defs={}, expr=v1330[32]} }
    sp      = { {defs={0x08048432}, expr=(add[32] v1332[32] 4[32])} }
    bp      = { {defs={0x08048432}, expr=v1374[32]} }
    si      = { {defs={}, expr=v1333[32]} }
    di      = { {defs={}, expr=v1334[32]} }
    es      = { {defs={}, expr=v1335[16]} }
    cs      = { {defs={}, expr=v1336[16]} }
    ss      = { {defs={}, expr=v1337[16]} }
    ds      = { {defs={}, expr=v1338[16]} }
    fs      = { {defs={}, expr=v1339[16]} }
    gs      = { {defs={}, expr=v1340[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1342[1]} }
    pf      = { {defs={0x08048430}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1344[1]} }
    af      = { {defs={}, expr=v1373[1]} }
    ?5      = { {defs={}, expr=v1346[1]} }
    zf      = { {defs={0x08048430}, expr=1[1]} }
    sf      = { {defs={0x08048430}, expr=0[1]} }
    tf      = { {defs={}, expr=v1349[1]} }
    if      = { {defs={}, expr=v1350[1]} }
    df      = { {defs={}, expr=v1351[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1353[1]} }
    iopl1   = { {defs={}, expr=v1354[1]} }
    nt      = { {defs={}, expr=v1355[1]} }
    ?15     = { {defs={}, expr=v1356[1]} }
    rf      = { {defs={}, expr=v1357[1]} }
    vm      = { {defs={}, expr=v1358[1]} }
    ac      = { {defs={}, expr=v1359[1]} }
    vif     = { {defs={}, expr=v1360[1]} }
    vip     = { {defs={}, expr=v1361[1]} }
    id      = { {defs={}, expr=v1362[1]} }
    ?22     = { {defs={}, expr=v1363[1]} }
    ?23     = { {defs={}, expr=v1364[1]} }
    ?24     = { {defs={}, expr=v1365[1]} }
    ?25     = { {defs={}, expr=v1366[1]} }
    ?26     = { {defs={}, expr=v1367[1]} }
    ?27     = { {defs={}, expr=v1368[1]} }
    ?28     = { {defs={}, expr=v1369[1]} }
    ?29     = { {defs={}, expr=v1370[1]} }
    ?30     = { {defs={}, expr=v1371[1]} }
    ?31     = { {defs={}, expr=v1372[1]} }
    ip      = { {defs={0x08048432}, expr=0x08048433[32]} }
memory:
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 3[32])} value={defs={0x08048432}, expr=(extract[8] 24[32] 32[32] v1374[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 2[32])} value={defs={0x08048432}, expr=(extract[8] 16[32] 24[32] v1374[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 1[32])} value={defs={0x08048432}, expr=(extract[8] 8[32] 16[32] v1374[32])}
    addr={defs={}, expr=v1332[32]} value={defs={0x08048432}, expr=(extract[8] 0[32] 8[32] v1374[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048433[32] }
memory:
0x8048433:ret    
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v1820[32] }
    dx      = { v1821[32] }
    bx      = { v1822[32] }
    sp      = { v1824+0x8[32] }
    bp      = { v1866[32] }
    si      = { v1825[32] }
    di      = { v1826[32] }
    es      = { v1827[16] }
    cs      = { v1828[16] }
    ss      = { v1829[16] }
    ds      = { v1830[16] }
    fs      = { v1831[16] }
    gs      = { v1832[16] }
    cf      = { 0x0[1] }
    ?1      = { v1834[1] }
    pf      = { 0x1[1] }
    ?3      = { v1836[1] }
    af      = { v1865[1] }
    ?5      = { v1838[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v1841[1] }
    if      = { v1842[1] }
    df      = { v1843[1] }
    of      = { 0x0[1] }
    iopl0   = { v1845[1] }
    iopl1   = { v1846[1] }
    nt      = { v1847[1] }
    ?15     = { v1848[1] }
    rf      = { v1849[1] }
    vm      = { v1850[1] }
    ac      = { v1851[1] }
    vif     = { v1852[1] }
    vip     = { v1853[1] }
    id      = { v1854[1] }
    ?22     = { v1855[1] }
    ?23     = { v1856[1] }
    ?24     = { v1857[1] }
    ?25     = { v1858[1] }
    ?26     = { v1859[1] }
    ?27     = { v1860[1] }
    ?28     = { v1861[1] }
    ?29     = { v1862[1] }
    ?30     = { v1863[1] }
    ?31     = { v1864[1] }
    ip      = { v1868[32] }
memory:
    addr=v1824+0x4[32] value=v1868[32]
    addr=v1824[32] value=v1866[32]
== Symbolic ==
registers:
    ax      = { {defs={0x08048430}, expr=0[32]} }
    cx      = { {defs={}, expr=v1328[32]} }
    dx      = { {defs={}, expr=v1329[32]} }
    bx      = { {defs={}, expr=v1330[32]} }
    sp      = { {defs={0x08048432,0x08048433}, expr=(add[32] (add[32] v1332[32] 4[32]) 4[32])} }
    bp      = { {defs={0x08048432}, expr=v1374[32]} }
    si      = { {defs={}, expr=v1333[32]} }
    di      = { {defs={}, expr=v1334[32]} }
    es      = { {defs={}, expr=v1335[16]} }
    cs      = { {defs={}, expr=v1336[16]} }
    ss      = { {defs={}, expr=v1337[16]} }
    ds      = { {defs={}, expr=v1338[16]} }
    fs      = { {defs={}, expr=v1339[16]} }
    gs      = { {defs={}, expr=v1340[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1342[1]} }
    pf      = { {defs={0x08048430}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1344[1]} }
    af      = { {defs={}, expr=v1373[1]} }
    ?5      = { {defs={}, expr=v1346[1]} }
    zf      = { {defs={0x08048430}, expr=1[1]} }
    sf      = { {defs={0x08048430}, expr=0[1]} }
    tf      = { {defs={}, expr=v1349[1]} }
    if      = { {defs={}, expr=v1350[1]} }
    df      = { {defs={}, expr=v1351[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1353[1]} }
    iopl1   = { {defs={}, expr=v1354[1]} }
    nt      = { {defs={}, expr=v1355[1]} }
    ?15     = { {defs={}, expr=v1356[1]} }
    rf      = { {defs={}, expr=v1357[1]} }
    vm      = { {defs={}, expr=v1358[1]} }
    ac      = { {defs={}, expr=v1359[1]} }
    vif     = { {defs={}, expr=v1360[1]} }
    vip     = { {defs={}, expr=v1361[1]} }
    id      = { {defs={}, expr=v1362[1]} }
    ?22     = { {defs={}, expr=v1363[1]} }
    ?23     = { {defs={}, expr=v1364[1]} }
    ?24     = { {defs={}, expr=v1365[1]} }
    ?25     = { {defs={}, expr=v1366[1]} }
    ?26     = { {defs={}, expr=v1367[1]} }
    ?27     = { {defs={}, expr=v1368[1]} }
    ?28     = { {defs={}, expr=v1369[1]} }
    ?29     = { {defs={}, expr=v1370[1]} }
    ?30     = { {defs={}, expr=v1371[1]} }
    ?31     = { {defs={}, expr=v1372[1]} }
    ip      = { {defs={0x08048433}, expr=v1379[32]} }
memory:
    addr={defs={0x08048432,0x08048433}, expr=(add[32] (add[32] v1332[32] 4[32]) 3[32])} value={defs={0x08048433}, expr=(extract[8] 24[32] 32[32] v1379[32])}
    addr={defs={0x08048432,0x08048433}, expr=(add[32] (add[32] v1332[32] 4[32]) 2[32])} value={defs={0x08048433}, expr=(extract[8] 16[32] 24[32] v1379[32])}
    addr={defs={0x08048432,0x08048433}, expr=(add[32] (add[32] v1332[32] 4[32]) 1[32])} value={defs={0x08048433}, expr=(extract[8] 8[32] 16[32] v1379[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 4[32])} value={defs={0x08048433}, expr=(extract[8] 0[32] 8[32] v1379[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 3[32])} value={defs={0x08048432}, expr=(extract[8] 24[32] 32[32] v1374[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 2[32])} value={defs={0x08048432}, expr=(extract[8] 16[32] 24[32] v1374[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 1[32])} value={defs={0x08048432}, expr=(extract[8] 8[32] 16[32] v1374[32])}
    addr={defs={}, expr=v1332[32]} value={defs={0x08048432}, expr=(extract[8] 0[32] 8[32] v1374[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v1872[32] }
    cx      = { v1873[32] }
    dx      = { v1874[32] }
    bx      = { v1875[32] }
    sp      = { v1876-0x4[32] }
    bp      = { v1877[32] }
    si      = { v1878[32] }
    di      = { v1879[32] }
    es      = { v1880[16] }
    cs      = { v1881[16] }
    ss      = { v1882[16] }
    ds      = { v1883[16] }
    fs      = { v1884[16] }
    gs      = { v1885[16] }
    cf      = { v1886[1] }
    ?1      = { v1887[1] }
    pf      = { v1888[1] }
    ?3      = { v1889[1] }
    af      = { v1890[1] }
    ?5      = { v1891[1] }
    zf      = { v1892[1] }
    sf      = { v1893[1] }
    tf      = { v1894[1] }
    if      = { v1895[1] }
    df      = { v1896[1] }
    of      = { v1897[1] }
    iopl0   = { v1898[1] }
    iopl1   = { v1899[1] }
    nt      = { v1900[1] }
    ?15     = { v1901[1] }
    rf      = { v1902[1] }
    vm      = { v1903[1] }
    ac      = { v1904[1] }
    vif     = { v1905[1] }
    vip     = { v1906[1] }
    id      = { v1907[1] }
    ?22     = { v1908[1] }
    ?23     = { v1909[1] }
    ?24     = { v1910[1] }
    ?25     = { v1911[1] }
    ?26     = { v1912[1] }
    ?27     = { v1913[1] }
    ?28     = { v1914[1] }
    ?29     = { v1915[1] }
    ?30     = { v1916[1] }
    ?31     = { v1917[1] }
    ip      = { 0x8048441[32] }
memory:
    addr=v1876-0x4[32] value=v1877[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    bp      = { {defs={}, expr=v1391[32]} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={}, expr=v1400[1]} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={}, expr=v1402[1]} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={}, expr=v1404[1]} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={}, expr=v1406[1]} }
    sf      = { {defs={}, expr=v1407[1]} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={}, expr=v1411[1]} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x08048440}, expr=0x08048441[32]} }
memory:
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048441[32] }
memory:
0x8048441:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v1872[32] }
    cx      = { v1873[32] }
    dx      = { v1874[32] }
    bx      = { v1875[32] }
    sp      = { v1876-0x4[32] }
    bp      = { v1876-0x4[32] }
    si      = { v1878[32] }
    di      = { v1879[32] }
    es      = { v1880[16] }
    cs      = { v1881[16] }
    ss      = { v1882[16] }
    ds      = { v1883[16] }
    fs      = { v1884[16] }
    gs      = { v1885[16] }
    cf      = { v1886[1] }
    ?1      = { v1887[1] }
    pf      = { v1888[1] }
    ?3      = { v1889[1] }
    af      = { v1890[1] }
    ?5      = { v1891[1] }
    zf      = { v1892[1] }
    sf      = { v1893[1] }
    tf      = { v1894[1] }
    if      = { v1895[1] }
    df      = { v1896[1] }
    of      = { v1897[1] }
    iopl0   = { v1898[1] }
    iopl1   = { v1899[1] }
    nt      = { v1900[1] }
    ?15     = { v1901[1] }
    rf      = { v1902[1] }
    vm      = { v1903[1] }
    ac      = { v1904[1] }
    vif     = { v1905[1] }
    vip     = { v1906[1] }
    id      = { v1907[1] }
    ?22     = { v1908[1] }
    ?23     = { v1909[1] }
    ?24     = { v1910[1] }
    ?25     = { v1911[1] }
    ?26     = { v1912[1] }
    ?27     = { v1913[1] }
    ?28     = { v1914[1] }
    ?29     = { v1915[1] }
    ?30     = { v1916[1] }
    ?31     = { v1917[1] }
    ip      = { 0x8048443[32] }
memory:
    addr=v1876-0x4[32] value=v1877[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    bp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={}, expr=v1400[1]} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={}, expr=v1402[1]} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={}, expr=v1404[1]} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={}, expr=v1406[1]} }
    sf      = { {defs={}, expr=v1407[1]} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={}, expr=v1411[1]} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x08048441}, expr=0x08048443[32]} }
memory:
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048443[32] }
memory:
0x8048443:sub    esp, 0x08
== PartialSymbolic ==
registers:
    ax      = { v1872[32] }
    cx      = { v1873[32] }
    dx      = { v1874[32] }
    bx      = { v1875[32] }
    sp      = { v1876-0xc[32] }
    bp      = { v1876-0x4[32] }
    si      = { v1878[32] }
    di      = { v1879[32] }
    es      = { v1880[16] }
    cs      = { v1881[16] }
    ss      = { v1882[16] }
    ds      = { v1883[16] }
    fs      = { v1884[16] }
    gs      = { v1885[16] }
    cf      = { -v1935+0x1[1] }
    ?1      = { v1887[1] }
    pf      = { -v1932+0x1[1] }
    ?3      = { v1889[1] }
    af      = { -v1937+0x1[1] }
    ?5      = { v1891[1] }
    zf      = { v1934[1] }
    sf      = { v1933[1] }
    tf      = { v1894[1] }
    if      = { v1895[1] }
    df      = { v1896[1] }
    of      = { v1938[1] }
    iopl0   = { v1898[1] }
    iopl1   = { v1899[1] }
    nt      = { v1900[1] }
    ?15     = { v1901[1] }
    rf      = { v1902[1] }
    vm      = { v1903[1] }
    ac      = { v1904[1] }
    vif     = { v1905[1] }
    vip     = { v1906[1] }
    id      = { v1907[1] }
    ?22     = { v1908[1] }
    ?23     = { v1909[1] }
    ?24     = { v1910[1] }
    ?25     = { v1911[1] }
    ?26     = { v1912[1] }
    ?27     = { v1913[1] }
    ?28     = { v1914[1] }
    ?29     = { v1915[1] }
    ?30     = { v1916[1] }
    ?31     = { v1917[1] }
    ip      = { 0x8048446[32] }
memory:
    addr=v1876-0x4[32] value=v1877[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440,0x08048443}, expr=(add[32] (add[32] v1390[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x08048443}, expr=0x08048446[32]} }
memory:
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048446[32] }
memory:
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
== PartialSymbolic ==
registers:
    ax      = { v1872[32] }
    cx      = { v1873[32] }
    dx      = { v1874[32] }
    bx      = { v1875[32] }
    sp      = { v1876-0xc[32] }
    bp      = { v1876-0x4[32] }
    si      = { v1878[32] }
    di      = { v1879[32] }
    es      = { v1880[16] }
    cs      = { v1881[16] }
    ss      = { v1882[16] }
    ds      = { v1883[16] }
    fs      = { v1884[16] }
    gs      = { v1885[16] }
    cf      = { -v1935+0x1[1] }
    ?1      = { v1887[1] }
    pf      = { -v1932+0x1[1] }
    ?3      = { v1889[1] }
    af      = { -v1937+0x1[1] }
    ?5      = { v1891[1] }
    zf      = { v1934[1] }
    sf      = { v1933[1] }
    tf      = { v1894[1] }
    if      = { v1895[1] }
    df      = { v1896[1] }
    of      = { v1938[1] }
    iopl0   = { v1898[1] }
    iopl1   = { v1899[1] }
    nt      = { v1900[1] }
    ?15     = { v1901[1] }
    rf      = { v1902[1] }
    vm      = { v1903[1] }
    ac      = { v1904[1] }
    vif     = { v1905[1] }
    vip     = { v1906[1] }
    id      = { v1907[1] }
    ?22     = { v1908[1] }
    ?23     = { v1909[1] }
    ?24     = { v1910[1] }
    ?25     = { v1911[1] }
    ?26     = { v1912[1] }
    ?27     = { v1913[1] }
    ?28     = { v1914[1] }
    ?29     = { v1915[1] }
    ?30     = { v1916[1] }
    ?31     = { v1917[1] }
    ip      = { 0x804844d[32] }
memory:
    addr=v1876-0xc[32] value=0x80485d4[32]
    addr=v1876-0x4[32] value=v1877[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440,0x08048443}, expr=(add[32] (add[32] v1390[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x08048446}, expr=0x0804844d[32]} }
memory:
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 3[32])} value={defs={0x08048446}, expr=8[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 2[32])} value={defs={0x08048446}, expr=4[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 1[32])} value={defs={0x08048446}, expr=-123[8]}
    addr={defs={0x08048440,0x08048443}, expr=(add[32] (add[32] v1390[32] -4[32]) -8[32])} value={defs={0x08048446}, expr=-44[8]}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804844d[32] }
memory:
0x804844d:call   0x08048300<puts@plt>
== PartialSymbolic ==
registers:
    ax      = { v1872[32] }
    cx      = { v1873[32] }
    dx      = { v1874[32] }
    bx      = { v1875[32] }
    sp      = { v1876-0x10[32] }
    bp      = { v1876-0x4[32] }
    si      = { v1878[32] }
    di      = { v1879[32] }
    es      = { v1880[16] }
    cs      = { v1881[16] }
    ss      = { v1882[16] }
    ds      = { v1883[16] }
    fs      = { v1884[16] }
    gs      = { v1885[16] }
    cf      = { -v1935+0x1[1] }
    ?1      = { v1887[1] }
    pf      = { -v1932+0x1[1] }
    ?3      = { v1889[1] }
    af      = { -v1937+0x1[1] }
    ?5      = { v1891[1] }
    zf      = { v1934[1] }
    sf      = { v1933[1] }
    tf      = { v1894[1] }
    if      = { v1895[1] }
    df      = { v1896[1] }
    of      = { v1938[1] }
    iopl0   = { v1898[1] }
    iopl1   = { v1899[1] }
    nt      = { v1900[1] }
    ?15     = { v1901[1] }
    rf      = { v1902[1] }
    vm      = { v1903[1] }
    ac      = { v1904[1] }
    vif     = { v1905[1] }
    vip     = { v1906[1] }
    id      = { v1907[1] }
    ?22     = { v1908[1] }
    ?23     = { v1909[1] }
    ?24     = { v1910[1] }
    ?25     = { v1911[1] }
    ?26     = { v1912[1] }
    ?27     = { v1913[1] }
    ?28     = { v1914[1] }
    ?29     = { v1915[1] }
    ?30     = { v1916[1] }
    ?31     = { v1917[1] }
    ip      = { 0x8048300[32] }
memory:
    addr=v1876-0x10[32] value=0x8048452[32]
    addr=v1876-0xc[32] value=0x80485d4[32]
    addr=v1876-0x4[32] value=v1877[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32])} }
    bp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={}, expr=0x08048300[32]} }
memory:
    addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32]) 3[32])} value={defs={0x0804844d}, expr=8[8]}
    addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32]) 2[32])} value={defs={0x0804844d}, expr=4[8]}
    addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32]) 1[32])} value={defs={0x0804844d}, expr=-124[8]}
    addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32])} value={defs={0x0804844d}, expr=82[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 3[32])} value={defs={0x08048446}, expr=8[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 2[32])} value={defs={0x08048446}, expr=4[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 1[32])} value={defs={0x08048446}, expr=-123[8]}
    addr={defs={0x08048440,0x08048443}, expr=(add[32] (add[32] v1390[32] -4[32]) -8[32])} value={defs={0x08048446}, expr=-44[8]}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048300[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
== PartialSymbolic ==
registers:
    ax      = { v1941[32] }
    cx      = { v1942[32] }
    dx      = { v1943[32] }
    bx      = { v1944[32] }
    sp      = { v1946[32] }
    bp      = { v1946[32] }
    si      = { v1947[32] }
    di      = { v1948[32] }
    es      = { v1949[16] }
    cs      = { v1950[16] }
    ss      = { v1951[16] }
    ds      = { v1952[16] }
    fs      = { v1953[16] }
    gs      = { v1954[16] }
    cf      = { v1955[1] }
    ?1      = { v1956[1] }
    pf      = { v1957[1] }
    ?3      = { v1958[1] }
    af      = { v1959[1] }
    ?5      = { v1960[1] }
    zf      = { v1961[1] }
    sf      = { v1962[1] }
    tf      = { v1963[1] }
    if      = { v1964[1] }
    df      = { v1965[1] }
    of      = { v1966[1] }
    iopl0   = { v1967[1] }
    iopl1   = { v1968[1] }
    nt      = { v1969[1] }
    ?15     = { v1970[1] }
    rf      = { v1971[1] }
    vm      = { v1972[1] }
    ac      = { v1973[1] }
    vif     = { v1974[1] }
    vip     = { v1975[1] }
    id      = { v1976[1] }
    ?22     = { v1977[1] }
    ?23     = { v1978[1] }
    ?24     = { v1979[1] }
    ?25     = { v1980[1] }
    ?26     = { v1981[1] }
    ?27     = { v1982[1] }
    ?28     = { v1983[1] }
    ?29     = { v1984[1] }
    ?30     = { v1985[1] }
    ?31     = { v1986[1] }
    ip      = { 0x8048454[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1434[32]} }
    cx      = { {defs={}, expr=v1435[32]} }
    dx      = { {defs={}, expr=v1436[32]} }
    bx      = { {defs={}, expr=v1437[32]} }
    sp      = { {defs={}, expr=v1439[32]} }
    bp      = { {defs={}, expr=v1439[32]} }
    si      = { {defs={}, expr=v1440[32]} }
    di      = { {defs={}, expr=v1441[32]} }
    es      = { {defs={}, expr=v1442[16]} }
    cs      = { {defs={}, expr=v1443[16]} }
    ss      = { {defs={}, expr=v1444[16]} }
    ds      = { {defs={}, expr=v1445[16]} }
    fs      = { {defs={}, expr=v1446[16]} }
    gs      = { {defs={}, expr=v1447[16]} }
    cf      = { {defs={}, expr=v1448[1]} }
    ?1      = { {defs={}, expr=v1449[1]} }
    pf      = { {defs={}, expr=v1450[1]} }
    ?3      = { {defs={}, expr=v1451[1]} }
    af      = { {defs={}, expr=v1452[1]} }
    ?5      = { {defs={}, expr=v1453[1]} }
    zf      = { {defs={}, expr=v1454[1]} }
    sf      = { {defs={}, expr=v1455[1]} }
    tf      = { {defs={}, expr=v1456[1]} }
    if      = { {defs={}, expr=v1457[1]} }
    df      = { {defs={}, expr=v1458[1]} }
    of      = { {defs={}, expr=v1459[1]} }
    iopl0   = { {defs={}, expr=v1460[1]} }
    iopl1   = { {defs={}, expr=v1461[1]} }
    nt      = { {defs={}, expr=v1462[1]} }
    ?15     = { {defs={}, expr=v1463[1]} }
    rf      = { {defs={}, expr=v1464[1]} }
    vm      = { {defs={}, expr=v1465[1]} }
    ac      = { {defs={}, expr=v1466[1]} }
    vif     = { {defs={}, expr=v1467[1]} }
    vip     = { {defs={}, expr=v1468[1]} }
    id      = { {defs={}, expr=v1469[1]} }
    ?22     = { {defs={}, expr=v1470[1]} }
    ?23     = { {defs={}, expr=v1471[1]} }
    ?24     = { {defs={}, expr=v1472[1]} }
    ?25     = { {defs={}, expr=v1473[1]} }
    ?26     = { {defs={}, expr=v1474[1]} }
    ?27     = { {defs={}, expr=v1475[1]} }
    ?28     = { {defs={}, expr=v1476[1]} }
    ?29     = { {defs={}, expr=v1477[1]} }
    ?30     = { {defs={}, expr=v1478[1]} }
    ?31     = { {defs={}, expr=v1479[1]} }
    ip      = { {defs={0x08048452}, expr=0x08048454[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048454[32] }
memory:
0x8048454:pop    ebp
== PartialSymbolic ==
registers:
    ax      = { v1941[32] }
    cx      = { v1942[32] }
    dx      = { v1943[32] }
    bx      = { v1944[32] }
    sp      = { v1946+0x4[32] }
    bp      = { v1987[32] }
    si      = { v1947[32] }
    di      = { v1948[32] }
    es      = { v1949[16] }
    cs      = { v1950[16] }
    ss      = { v1951[16] }
    ds      = { v1952[16] }
    fs      = { v1953[16] }
    gs      = { v1954[16] }
    cf      = { v1955[1] }
    ?1      = { v1956[1] }
    pf      = { v1957[1] }
    ?3      = { v1958[1] }
    af      = { v1959[1] }
    ?5      = { v1960[1] }
    zf      = { v1961[1] }
    sf      = { v1962[1] }
    tf      = { v1963[1] }
    if      = { v1964[1] }
    df      = { v1965[1] }
    of      = { v1966[1] }
    iopl0   = { v1967[1] }
    iopl1   = { v1968[1] }
    nt      = { v1969[1] }
    ?15     = { v1970[1] }
    rf      = { v1971[1] }
    vm      = { v1972[1] }
    ac      = { v1973[1] }
    vif     = { v1974[1] }
    vip     = { v1975[1] }
    id      = { v1976[1] }
    ?22     = { v1977[1] }
    ?23     = { v1978[1] }
    ?24     = { v1979[1] }
    ?25     = { v1980[1] }
    ?26     = { v1981[1] }
    ?27     = { v1982[1] }
    ?28     = { v1983[1] }
    ?29     = { v1984[1] }
    ?30     = { v1985[1] }
    ?31     = { v1986[1] }
    ip      = { 0x8048455[32] }
memory:
    addr=v1946[32] value=v1987[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1434[32]} }
    cx      = { {defs={}, expr=v1435[32]} }
    dx      = { {defs={}, expr=v1436[32]} }
    bx      = { {defs={}, expr=v1437[32]} }
    sp      = { {defs={0x08048454}, expr=(add[32] v1439[32] 4[32])} }
    bp      = { {defs={0x08048454}, expr=v1480[32]} }
    si      = { {defs={}, expr=v1440[32]} }
    di      = { {defs={}, expr=v1441[32]} }
    es      = { {defs={}, expr=v1442[16]} }
    cs      = { {defs={}, expr=v1443[16]} }
    ss      = { {defs={}, expr=v1444[16]} }
    ds      = { {defs={}, expr=v1445[16]} }
    fs      = { {defs={}, expr=v1446[16]} }
    gs      = { {defs={}, expr=v1447[16]} }
    cf      = { {defs={}, expr=v1448[1]} }
    ?1      = { {defs={}, expr=v1449[1]} }
    pf      = { {defs={}, expr=v1450[1]} }
    ?3      = { {defs={}, expr=v1451[1]} }
    af      = { {defs={}, expr=v1452[1]} }
    ?5      = { {defs={}, expr=v1453[1]} }
    zf      = { {defs={}, expr=v1454[1]} }
    sf      = { {defs={}, expr=v1455[1]} }
    tf      = { {defs={}, expr=v1456[1]} }
    if      = { {defs={}, expr=v1457[1]} }
    df      = { {defs={}, expr=v1458[1]} }
    of      = { {defs={}, expr=v1459[1]} }
    iopl0   = { {defs={}, expr=v1460[1]} }
    iopl1   = { {defs={}, expr=v1461[1]} }
    nt      = { {defs={}, expr=v1462[1]} }
    ?15     = { {defs={}, expr=v1463[1]} }
    rf      = { {defs={}, expr=v1464[1]} }
    vm      = { {defs={}, expr=v1465[1]} }
    ac      = { {defs={}, expr=v1466[1]} }
    vif     = { {defs={}, expr=v1467[1]} }
    vip     = { {defs={}, expr=v1468[1]} }
    id      = { {defs={}, expr=v1469[1]} }
    ?22     = { {defs={}, expr=v1470[1]} }
    ?23     = { {defs={}, expr=v1471[1]} }
    ?24     = { {defs={}, expr=v1472[1]} }
    ?25     = { {defs={}, expr=v1473[1]} }
    ?26     = { {defs={}, expr=v1474[1]} }
    ?27     = { {defs={}, expr=v1475[1]} }
    ?28     = { {defs={}, expr=v1476[1]} }
    ?29     = { {defs={}, expr=v1477[1]} }
    ?30     = { {defs={}, expr=v1478[1]} }
    ?31     = { {defs={}, expr=v1479[1]} }
    ip      = { {defs={0x08048454}, expr=0x08048455[32]} }
memory:
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 3[32])} value={defs={0x08048454}, expr=(extract[8] 24[32] 32[32] v1480[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 2[32])} value={defs={0x08048454}, expr=(extract[8] 16[32] 24[32] v1480[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 1[32])} value={defs={0x08048454}, expr=(extract[8] 8[32] 16[32] v1480[32])}
    addr={defs={}, expr=v1439[32]} value={defs={0x08048454}, expr=(extract[8] 0[32] 8[32] v1480[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048455[32] }
memory:
0x8048455:ret    
== PartialSymbolic ==
registers:
    ax      = { v1941[32] }
    cx      = { v1942[32] }
    dx      = { v1943[32] }
    bx      = { v1944[32] }
    sp      = { v1946+0x8[32] }
    bp      = { v1987[32] }
    si      = { v1947[32] }
    di      = { v1948[32] }
    es      = { v1949[16] }
    cs      = { v1950[16] }
    ss      = { v1951[16] }
    ds      = { v1952[16] }
    fs      = { v1953[16] }
    gs      = { v1954[16] }
    cf      = { v1955[1] }
    ?1      = { v1956[1] }
    pf      = { v1957[1] }
    ?3      = { v1958[1] }
    af      = { v1959[1] }
    ?5      = { v1960[1] }
    zf      = { v1961[1] }
    sf      = { v1962[1] }
    tf      = { v1963[1] }
    if      = { v1964[1] }
    df      = { v1965[1] }
    of      = { v1966[1] }
    iopl0   = { v1967[1] }
    iopl1   = { v1968[1] }
    nt      = { v1969[1] }
    ?15     = { v1970[1] }
    rf      = { v1971[1] }
    vm      = { v1972[1] }
    ac      = { v1973[1] }
    vif     = { v1974[1] }
    vip     = { v1975[1] }
    id      = { v1976[1] }
    ?22     = { v1977[1] }
    ?23     = { v1978[1] }
    ?24     = { v1979[1] }
    ?25     = { v1980[1] }
    ?26     = { v1981[1] }
    ?27     = { v1982[1] }
    ?28     = { v1983[1] }
    ?29     = { v1984[1] }
    ?30     = { v1985[1] }
    ?31     = { v1986[1] }
    ip      = { v1989[32] }
memory:
    addr=v1946+0x4[32] value=v1989[32]
    addr=v1946[32] value=v1987[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1434[32]} }
    cx      = { {defs={}, expr=v1435[32]} }
    dx      = { {defs={}, expr=v1436[32]} }
    bx      = { {defs={}, expr=v1437[32]} }
    sp      = { {defs={0x08048454,0x08048455}, expr=(add[32] (add[32] v1439[32] 4[32]) 4[32])} }
    bp      = { {defs={0x08048454}, expr=v1480[32]} }
    si      = { {defs={}, expr=v1440[32]} }
    di      = { {defs={}, expr=v1441[32]} }
    es      = { {defs={}, expr=v1442[16]} }
    cs      = { {defs={}, expr=v1443[16]} }
    ss      = { {defs={}, expr=v1444[16]} }
    ds      = { {defs={}, expr=v1445[16]} }
    fs      = { {defs={}, expr=v1446[16]} }
    gs      = { {defs={}, expr=v1447[16]} }
    cf      = { {defs={}, expr=v1448[1]} }
    ?1      = { {defs={}, expr=v1449[1]} }
    pf      = { {defs={}, expr=v1450[1]} }
    ?3      = { {defs={}, expr=v1451[1]} }
    af      = { {defs={}, expr=v1452[1]} }
    ?5      = { {defs={}, expr=v1453[1]} }
    zf      = { {defs={}, expr=v1454[1]} }
    sf      = { {defs={}, expr=v1455[1]} }
    tf      = { {defs={}, expr=v1456[1]} }
    if      = { {defs={}, expr=v1457[1]} }
    df      = { {defs={}, expr=v1458[1]} }
    of      = { {defs={}, expr=v1459[1]} }
    iopl0   = { {defs={}, expr=v1460[1]} }
    iopl1   = { {defs={}, expr=v1461[1]} }
    nt      = { {defs={}, expr=v1462[1]} }
    ?15     = { {defs={}, expr=v1463[1]} }
    rf      = { {defs={}, expr=v1464[1]} }
    vm      = { {defs={}, expr=v1465[1]} }
    ac      = { {defs={}, expr=v1466[1]} }
    vif     = { {defs={}, expr=v1467[1]} }
    vip     = { {defs={}, expr=v1468[1]} }
    id      = { {defs={}, expr=v1469[1]} }
    ?22     = { {defs={}, expr=v1470[1]} }
    ?23     = { {defs={}, expr=v1471[1]} }
    ?24     = { {defs={}, expr=v1472[1]} }
    ?25     = { {defs={}, expr=v1473[1]} }
    ?26     = { {defs={}, expr=v1474[1]} }
    ?27     = { {defs={}, expr=v1475[1]} }
    ?28     = { {defs={}, expr=v1476[1]} }
    ?29     = { {defs={}, expr=v1477[1]} }
    ?30     = { {defs={}, expr=v1478[1]} }
    ?31     = { {defs={}, expr=v1479[1]} }
    ip      = { {defs={0x08048455}, expr=v1485[32]} }
memory:
    addr={defs={0x08048454,0x08048455}, expr=(add[32] (add[32] v1439[32] 4[32]) 3[32])} value={defs={0x08048455}, expr=(extract[8] 24[32] 32[32] v1485[32])}
    addr={defs={0x08048454,0x08048455}, expr=(add[32] (add[32] v1439[32] 4[32]) 2[32])} value={defs={0x08048455}, expr=(extract[8] 16[32] 24[32] v1485[32])}
    addr={defs={0x08048454,0x08048455}, expr=(add[32] (add[32] v1439[32] 4[32]) 1[32])} value={defs={0x08048455}, expr=(extract[8] 8[32] 16[32] v1485[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 4[32])} value={defs={0x08048455}, expr=(extract[8] 0[32] 8[32] v1485[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 3[32])} value={defs={0x08048454}, expr=(extract[8] 24[32] 32[32] v1480[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 2[32])} value={defs={0x08048454}, expr=(extract[8] 16[32] 24[32] v1480[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 1[32])} value={defs={0x08048454}, expr=(extract[8] 8[32] 16[32] v1480[32])}
    addr={defs={}, expr=v1439[32]} value={defs={0x08048454}, expr=(extract[8] 0[32] 8[32] v1480[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v1993[32] }
    cx      = { v1994[32] }
    dx      = { v1995[32] }
    bx      = { v1996[32] }
    sp      = { v1997-0x4[32] }
    bp      = { v1998[32] }
    si      = { v1999[32] }
    di      = { v2000[32] }
    es      = { v2001[16] }
    cs      = { v2002[16] }
    ss      = { v2003[16] }
    ds      = { v2004[16] }
    fs      = { v2005[16] }
    gs      = { v2006[16] }
    cf      = { v2007[1] }
    ?1      = { v2008[1] }
    pf      = { v2009[1] }
    ?3      = { v2010[1] }
    af      = { v2011[1] }
    ?5      = { v2012[1] }
    zf      = { v2013[1] }
    sf      = { v2014[1] }
    tf      = { v2015[1] }
    if      = { v2016[1] }
    df      = { v2017[1] }
    of      = { v2018[1] }
    iopl0   = { v2019[1] }
    iopl1   = { v2020[1] }
    nt      = { v2021[1] }
    ?15     = { v2022[1] }
    rf      = { v2023[1] }
    vm      = { v2024[1] }
    ac      = { v2025[1] }
    vif     = { v2026[1] }
    vip     = { v2027[1] }
    id      = { v2028[1] }
    ?22     = { v2029[1] }
    ?23     = { v2030[1] }
    ?24     = { v2031[1] }
    ?25     = { v2032[1] }
    ?26     = { v2033[1] }
    ?27     = { v2034[1] }
    ?28     = { v2035[1] }
    ?29     = { v2036[1] }
    ?30     = { v2037[1] }
    ?31     = { v2038[1] }
    ip      = { 0x8048461[32] }
memory:
    addr=v1997-0x4[32] value=v1998[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    bp      = { {defs={}, expr=v1497[32]} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={}, expr=v1506[1]} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={}, expr=v1508[1]} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={}, expr=v1510[1]} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={}, expr=v1512[1]} }
    sf      = { {defs={}, expr=v1513[1]} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={}, expr=v1517[1]} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x08048460}, expr=0x08048461[32]} }
memory:
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048461[32] }
memory:
0x8048461:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v1993[32] }
    cx      = { v1994[32] }
    dx      = { v1995[32] }
    bx      = { v1996[32] }
    sp      = { v1997-0x4[32] }
    bp      = { v1997-0x4[32] }
    si      = { v1999[32] }
    di      = { v2000[32] }
    es      = { v2001[16] }
    cs      = { v2002[16] }
    ss      = { v2003[16] }
    ds      = { v2004[16] }
    fs      = { v2005[16] }
    gs      = { v2006[16] }
    cf      = { v2007[1] }
    ?1      = { v2008[1] }
    pf      = { v2009[1] }
    ?3      = { v2010[1] }
    af      = { v2011[1] }
    ?5      = { v2012[1] }
    zf      = { v2013[1] }
    sf      = { v2014[1] }
    tf      = { v2015[1] }
    if      = { v2016[1] }
    df      = { v2017[1] }
    of      = { v2018[1] }
    iopl0   = { v2019[1] }
    iopl1   = { v2020[1] }
    nt      = { v2021[1] }
    ?15     = { v2022[1] }
    rf      = { v2023[1] }
    vm      = { v2024[1] }
    ac      = { v2025[1] }
    vif     = { v2026[1] }
    vip     = { v2027[1] }
    id      = { v2028[1] }
    ?22     = { v2029[1] }
    ?23     = { v2030[1] }
    ?24     = { v2031[1] }
    ?25     = { v2032[1] }
    ?26     = { v2033[1] }
    ?27     = { v2034[1] }
    ?28     = { v2035[1] }
    ?29     = { v2036[1] }
    ?30     = { v2037[1] }
    ?31     = { v2038[1] }
    ip      = { 0x8048463[32] }
memory:
    addr=v1997-0x4[32] value=v1998[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    bp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={}, expr=v1506[1]} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={}, expr=v1508[1]} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={}, expr=v1510[1]} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={}, expr=v1512[1]} }
    sf      = { {defs={}, expr=v1513[1]} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={}, expr=v1517[1]} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x08048461}, expr=0x08048463[32]} }
memory:
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048463[32] }
memory:
0x8048463:sub    esp, 0x08
== PartialSymbolic ==
registers:
    ax      = { v1993[32] }
    cx      = { v1994[32] }
    dx      = { v1995[32] }
    bx      = { v1996[32] }
    sp      = { v1997-0xc[32] }
    bp      = { v1997-0x4[32] }
    si      = { v1999[32] }
    di      = { v2000[32] }
    es      = { v2001[16] }
    cs      = { v2002[16] }
    ss      = { v2003[16] }
    ds      = { v2004[16] }
    fs      = { v2005[16] }
    gs      = { v2006[16] }
    cf      = { -v2056+0x1[1] }
    ?1      = { v2008[1] }
    pf      = { -v2053+0x1[1] }
    ?3      = { v2010[1] }
    af      = { -v2058+0x1[1] }
    ?5      = { v2012[1] }
    zf      = { v2055[1] }
    sf      = { v2054[1] }
    tf      = { v2015[1] }
    if      = { v2016[1] }
    df      = { v2017[1] }
    of      = { v2059[1] }
    iopl0   = { v2019[1] }
    iopl1   = { v2020[1] }
    nt      = { v2021[1] }
    ?15     = { v2022[1] }
    rf      = { v2023[1] }
    vm      = { v2024[1] }
    ac      = { v2025[1] }
    vif     = { v2026[1] }
    vip     = { v2027[1] }
    id      = { v2028[1] }
    ?22     = { v2029[1] }
    ?23     = { v2030[1] }
    ?24     = { v2031[1] }
    ?25     = { v2032[1] }
    ?26     = { v2033[1] }
    ?27     = { v2034[1] }
    ?28     = { v2035[1] }
    ?29     = { v2036[1] }
    ?30     = { v2037[1] }
    ?31     = { v2038[1] }
    ip      = { 0x8048466[32] }
memory:
    addr=v1997-0x4[32] value=v1998[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460,0x08048463}, expr=(add[32] (add[32] v1496[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x08048463}, expr=0x08048466[32]} }
memory:
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048466[32] }
memory:
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
== PartialSymbolic ==
registers:
    ax      = { v1993[32] }
    cx      = { v1994[32] }
    dx      = { v1995[32] }
    bx      = { v1996[32] }
    sp      = { v1997-0xc[32] }
    bp      = { v1997-0x4[32] }
    si      = { v1999[32] }
    di      = { v2000[32] }
    es      = { v2001[16] }
    cs      = { v2002[16] }
    ss      = { v2003[16] }
    ds      = { v2004[16] }
    fs      = { v2005[16] }
    gs      = { v2006[16] }
    cf      = { -v2056+0x1[1] }
    ?1      = { v2008[1] }
    pf      = { -v2053+0x1[1] }
    ?3      = { v2010[1] }
    af      = { -v2058+0x1[1] }
    ?5      = { v2012[1] }
    zf      = { v2055[1] }
    sf      = { v2054[1] }
    tf      = { v2015[1] }
    if      = { v2016[1] }
    df      = { v2017[1] }
    of      = { v2059[1] }
    iopl0   = { v2019[1] }
    iopl1   = { v2020[1] }
    nt      = { v2021[1] }
    ?15     = { v2022[1] }
    rf      = { v2023[1] }
    vm      = { v2024[1] }
    ac      = { v2025[1] }
    vif     = { v2026[1] }
    vip     = { v2027[1] }
    id      = { v2028[1] }
    ?22     = { v2029[1] }
    ?23     = { v2030[1] }
    ?24     = { v2031[1] }
    ?25     = { v2032[1] }
    ?26     = { v2033[1] }
    ?27     = { v2034[1] }
    ?28     = { v2035[1] }
    ?29     = { v2036[1] }
    ?30     = { v2037[1] }
    ?31     = { v2038[1] }
    ip      = { 0x804846d[32] }
memory:
    addr=v1997-0xc[32] value=0x80485d4[32]
    addr=v1997-0x4[32] value=v1998[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460,0x08048463}, expr=(add[32] (add[32] v1496[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x08048466}, expr=0x0804846d[32]} }
memory:
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 3[32])} value={defs={0x08048466}, expr=8[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 2[32])} value={defs={0x08048466}, expr=4[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 1[32])} value={defs={0x08048466}, expr=-123[8]}
    addr={defs={0x08048460,0x08048463}, expr=(add[32] (add[32] v1496[32] -4[32]) -8[32])} value={defs={0x08048466}, expr=-44[8]}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804846d[32] }
memory:
0x804846d:call   0x08048300<puts@plt>
== PartialSymbolic ==
registers:
    ax      = { v1993[32] }
    cx      = { v1994[32] }
    dx      = { v1995[32] }
    bx      = { v1996[32] }
    sp      = { v1997-0x10[32] }
    bp      = { v1997-0x4[32] }
    si      = { v1999[32] }
    di      = { v2000[32] }
    es      = { v2001[16] }
    cs      = { v2002[16] }
    ss      = { v2003[16] }
    ds      = { v2004[16] }
    fs      = { v2005[16] }
    gs      = { v2006[16] }
    cf      = { -v2056+0x1[1] }
    ?1      = { v2008[1] }
    pf      = { -v2053+0x1[1] }
    ?3      = { v2010[1] }
    af      = { -v2058+0x1[1] }
    ?5      = { v2012[1] }
    zf      = { v2055[1] }
    sf      = { v2054[1] }
    tf      = { v2015[1] }
    if      = { v2016[1] }
    df      = { v2017[1] }
    of      = { v2059[1] }
    iopl0   = { v2019[1] }
    iopl1   = { v2020[1] }
    nt      = { v2021[1] }
    ?15     = { v2022[1] }
    rf      = { v2023[1] }
    vm      = { v2024[1] }
    ac      = { v2025[1] }
    vif     = { v2026[1] }
    vip     = { v2027[1] }
    id      = { v2028[1] }
    ?22     = { v2029[1] }
    ?23     = { v2030[1] }
    ?24     = { v2031[1] }
    ?25     = { v2032[1] }
    ?26     = { v2033[1] }
    ?27     = { v2034[1] }
    ?28     = { v2035[1] }
    ?29     = { v2036[1] }
    ?30     = { v2037[1] }
    ?31     = { v2038[1] }
    ip      = { 0x8048300[32] }
memory:
    addr=v1997-0x10[32] value=0x8048472[32]
    addr=v1997-0xc[32] value=0x80485d4[32]
    addr=v1997-0x4[32] value=v1998[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32])} }
    bp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={}, expr=0x08048300[32]} }
memory:
    addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32]) 3[32])} value={defs={0x0804846d}, expr=8[8]}
    addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32]) 2[32])} value={defs={0x0804846d}, expr=4[8]}
    addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32]) 1[32])} value={defs={0x0804846d}, expr=-124[8]}
    addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32])} value={defs={0x0804846d}, expr=114[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 3[32])} value={defs={0x08048466}, expr=8[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 2[32])} value={defs={0x08048466}, expr=4[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 1[32])} value={defs={0x08048466}, expr=-123[8]}
    addr={defs={0x08048460,0x08048463}, expr=(add[32] (add[32] v1496[32] -4[32]) -8[32])} value={defs={0x08048466}, expr=-44[8]}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048300[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
== PartialSymbolic ==
registers:
    ax      = { v2062[32] }
    cx      = { v2063[32] }
    dx      = { v2064[32] }
    bx      = { v2065[32] }
    sp      = { v2066[32] }
    bp      = { v2067[32] }
    si      = { v2068[32] }
    di      = { v2069[32] }
    es      = { v2070[16] }
    cs      = { v2071[16] }
    ss      = { v2072[16] }
    ds      = { v2073[16] }
    fs      = { v2074[16] }
    gs      = { v2075[16] }
    cf      = { v2076[1] }
    ?1      = { v2077[1] }
    pf      = { v2078[1] }
    ?3      = { v2079[1] }
    af      = { v2080[1] }
    ?5      = { v2081[1] }
    zf      = { v2082[1] }
    sf      = { v2083[1] }
    tf      = { v2084[1] }
    if      = { v2085[1] }
    df      = { v2086[1] }
    of      = { v2087[1] }
    iopl0   = { v2088[1] }
    iopl1   = { v2089[1] }
    nt      = { v2090[1] }
    ?15     = { v2091[1] }
    rf      = { v2092[1] }
    vm      = { v2093[1] }
    ac      = { v2094[1] }
    vif     = { v2095[1] }
    vip     = { v2096[1] }
    id      = { v2097[1] }
    ?22     = { v2098[1] }
    ?23     = { v2099[1] }
    ?24     = { v2100[1] }
    ?25     = { v2101[1] }
    ?26     = { v2102[1] }
    ?27     = { v2103[1] }
    ?28     = { v2104[1] }
    ?29     = { v2105[1] }
    ?30     = { v2106[1] }
    ?31     = { v2107[1] }
    ip      = { 0x8048479[32] }
memory:
    addr=v2066[32] value=0x0[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1540[32]} }
    cx      = { {defs={}, expr=v1541[32]} }
    dx      = { {defs={}, expr=v1542[32]} }
    bx      = { {defs={}, expr=v1543[32]} }
    sp      = { {defs={}, expr=v1544[32]} }
    bp      = { {defs={}, expr=v1545[32]} }
    si      = { {defs={}, expr=v1546[32]} }
    di      = { {defs={}, expr=v1547[32]} }
    es      = { {defs={}, expr=v1548[16]} }
    cs      = { {defs={}, expr=v1549[16]} }
    ss      = { {defs={}, expr=v1550[16]} }
    ds      = { {defs={}, expr=v1551[16]} }
    fs      = { {defs={}, expr=v1552[16]} }
    gs      = { {defs={}, expr=v1553[16]} }
    cf      = { {defs={}, expr=v1554[1]} }
    ?1      = { {defs={}, expr=v1555[1]} }
    pf      = { {defs={}, expr=v1556[1]} }
    ?3      = { {defs={}, expr=v1557[1]} }
    af      = { {defs={}, expr=v1558[1]} }
    ?5      = { {defs={}, expr=v1559[1]} }
    zf      = { {defs={}, expr=v1560[1]} }
    sf      = { {defs={}, expr=v1561[1]} }
    tf      = { {defs={}, expr=v1562[1]} }
    if      = { {defs={}, expr=v1563[1]} }
    df      = { {defs={}, expr=v1564[1]} }
    of      = { {defs={}, expr=v1565[1]} }
    iopl0   = { {defs={}, expr=v1566[1]} }
    iopl1   = { {defs={}, expr=v1567[1]} }
    nt      = { {defs={}, expr=v1568[1]} }
    ?15     = { {defs={}, expr=v1569[1]} }
    rf      = { {defs={}, expr=v1570[1]} }
    vm      = { {defs={}, expr=v1571[1]} }
    ac      = { {defs={}, expr=v1572[1]} }
    vif     = { {defs={}, expr=v1573[1]} }
    vip     = { {defs={}, expr=v1574[1]} }
    id      = { {defs={}, expr=v1575[1]} }
    ?22     = { {defs={}, expr=v1576[1]} }
    ?23     = { {defs={}, expr=v1577[1]} }
    ?24     = { {defs={}, expr=v1578[1]} }
    ?25     = { {defs={}, expr=v1579[1]} }
    ?26     = { {defs={}, expr=v1580[1]} }
    ?27     = { {defs={}, expr=v1581[1]} }
    ?28     = { {defs={}, expr=v1582[1]} }
    ?29     = { {defs={}, expr=v1583[1]} }
    ?30     = { {defs={}, expr=v1584[1]} }
    ?31     = { {defs={}, expr=v1585[1]} }
    ip      = { {defs={0x08048472}, expr=0x08048479[32]} }
memory:
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 3[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 2[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 1[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={}, expr=v1544[32]} value={defs={0x08048472}, expr=0[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048479[32] }
memory:
0x8048479:call   0x08048320<_exit@plt>
== PartialSymbolic ==
registers:
    ax      = { v2062[32] }
    cx      = { v2063[32] }
    dx      = { v2064[32] }
    bx      = { v2065[32] }
    sp      = { v2066-0x4[32] }
    bp      = { v2067[32] }
    si      = { v2068[32] }
    di      = { v2069[32] }
    es      = { v2070[16] }
    cs      = { v2071[16] }
    ss      = { v2072[16] }
    ds      = { v2073[16] }
    fs      = { v2074[16] }
    gs      = { v2075[16] }
    cf      = { v2076[1] }
    ?1      = { v2077[1] }
    pf      = { v2078[1] }
    ?3      = { v2079[1] }
    af      = { v2080[1] }
    ?5      = { v2081[1] }
    zf      = { v2082[1] }
    sf      = { v2083[1] }
    tf      = { v2084[1] }
    if      = { v2085[1] }
    df      = { v2086[1] }
    of      = { v2087[1] }
    iopl0   = { v2088[1] }
    iopl1   = { v2089[1] }
    nt      = { v2090[1] }
    ?15     = { v2091[1] }
    rf      = { v2092[1] }
    vm      = { v2093[1] }
    ac      = { v2094[1] }
    vif     = { v2095[1] }
    vip     = { v2096[1] }
    id      = { v2097[1] }
    ?22     = { v2098[1] }
    ?23     = { v2099[1] }
    ?24     = { v2100[1] }
    ?25     = { v2101[1] }
    ?26     = { v2102[1] }
    ?27     = { v2103[1] }
    ?28     = { v2104[1] }
    ?29     = { v2105[1] }
    ?30     = { v2106[1] }
    ?31     = { v2107[1] }
    ip      = { 0x8048320[32] }
memory:
    addr=v2066-0x4[32] value=0x804847e[32]
    addr=v2066[32] value=0x0[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1540[32]} }
    cx      = { {defs={}, expr=v1541[32]} }
    dx      = { {defs={}, expr=v1542[32]} }
    bx      = { {defs={}, expr=v1543[32]} }
    sp      = { {defs={0x08048479}, expr=(add[32] v1544[32] -4[32])} }
    bp      = { {defs={}, expr=v1545[32]} }
    si      = { {defs={}, expr=v1546[32]} }
    di      = { {defs={}, expr=v1547[32]} }
    es      = { {defs={}, expr=v1548[16]} }
    cs      = { {defs={}, expr=v1549[16]} }
    ss      = { {defs={}, expr=v1550[16]} }
    ds      = { {defs={}, expr=v1551[16]} }
    fs      = { {defs={}, expr=v1552[16]} }
    gs      = { {defs={}, expr=v1553[16]} }
    cf      = { {defs={}, expr=v1554[1]} }
    ?1      = { {defs={}, expr=v1555[1]} }
    pf      = { {defs={}, expr=v1556[1]} }
    ?3      = { {defs={}, expr=v1557[1]} }
    af      = { {defs={}, expr=v1558[1]} }
    ?5      = { {defs={}, expr=v1559[1]} }
    zf      = { {defs={}, expr=v1560[1]} }
    sf      = { {defs={}, expr=v1561[1]} }
    tf      = { {defs={}, expr=v1562[1]} }
    if      = { {defs={}, expr=v1563[1]} }
    df      = { {defs={}, expr=v1564[1]} }
    of      = { {defs={}, expr=v1565[1]} }
    iopl0   = { {defs={}, expr=v1566[1]} }
    iopl1   = { {defs={}, expr=v1567[1]} }
    nt      = { {defs={}, expr=v1568[1]} }
    ?15     = { {defs={}, expr=v1569[1]} }
    rf      = { {defs={}, expr=v1570[1]} }
    vm      = { {defs={}, expr=v1571[1]} }
    ac      = { {defs={}, expr=v1572[1]} }
    vif     = { {defs={}, expr=v1573[1]} }
    vip     = { {defs={}, expr=v1574[1]} }
    id      = { {defs={}, expr=v1575[1]} }
    ?22     = { {defs={}, expr=v1576[1]} }
    ?23     = { {defs={}, expr=v1577[1]} }
    ?24     = { {defs={}, expr=v1578[1]} }
    ?25     = { {defs={}, expr=v1579[1]} }
    ?26     = { {defs={}, expr=v1580[1]} }
    ?27     = { {defs={}, expr=v1581[1]} }
    ?28     = { {defs={}, expr=v1582[1]} }
    ?29     = { {defs={}, expr=v1583[1]} }
    ?30     = { {defs={}, expr=v1584[1]} }
    ?31     = { {defs={}, expr=v1585[1]} }
    ip      = { {defs={}, expr=0x08048320[32]} }
memory:
    addr={defs={0x08048479}, expr=(add[32] (add[32] v1544[32] -4[32]) 3[32])} value={defs={0x08048479}, expr=8[8]}
    addr={defs={0x08048479}, expr=(add[32] (add[32] v1544[32] -4[32]) 2[32])} value={defs={0x08048479}, expr=4[8]}
    addr={defs={0x08048479}, expr=(add[32] (add[32] v1544[32] -4[32]) 1[32])} value={defs={0x08048479}, expr=-124[8]}
    addr={defs={0x08048479}, expr=(add[32] v1544[32] -4[32])} value={defs={0x08048479}, expr=126[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 3[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 2[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 1[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={}, expr=v1544[32]} value={defs={0x08048472}, expr=0[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048320[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v2110[32] }
    cx      = { v2111[32] }
    dx      = { v2112[32] }
    bx      = { v2113[32] }
    sp      = { v2114-0x4[32] }
    bp      = { v2115[32] }
    si      = { v2116[32] }
    di      = { v2117[32] }
    es      = { v2118[16] }
    cs      = { v2119[16] }
    ss      = { v2120[16] }
    ds      = { v2121[16] }
    fs      = { v2122[16] }
    gs      = { v2123[16] }
    cf      = { v2124[1] }
    ?1      = { v2125[1] }
    pf      = { v2126[1] }
    ?3      = { v2127[1] }
    af      = { v2128[1] }
    ?5      = { v2129[1] }
    zf      = { v2130[1] }
    sf      = { v2131[1] }
    tf      = { v2132[1] }
    if      = { v2133[1] }
    df      = { v2134[1] }
    of      = { v2135[1] }
    iopl0   = { v2136[1] }
    iopl1   = { v2137[1] }
    nt      = { v2138[1] }
    ?15     = { v2139[1] }
    rf      = { v2140[1] }
    vm      = { v2141[1] }
    ac      = { v2142[1] }
    vif     = { v2143[1] }
    vip     = { v2144[1] }
    id      = { v2145[1] }
    ?22     = { v2146[1] }
    ?23     = { v2147[1] }
    ?24     = { v2148[1] }
    ?25     = { v2149[1] }
    ?26     = { v2150[1] }
    ?27     = { v2151[1] }
    ?28     = { v2152[1] }
    ?29     = { v2153[1] }
    ?30     = { v2154[1] }
    ?31     = { v2155[1] }
    ip      = { 0x8048481[32] }
memory:
    addr=v2114-0x4[32] value=v2115[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    bp      = { {defs={}, expr=v1593[32]} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={}, expr=v1602[1]} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={}, expr=v1604[1]} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={}, expr=v1606[1]} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={}, expr=v1608[1]} }
    sf      = { {defs={}, expr=v1609[1]} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={}, expr=v1613[1]} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048480}, expr=0x08048481[32]} }
memory:
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048481[32] }
memory:
0x8048481:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v2110[32] }
    cx      = { v2111[32] }
    dx      = { v2112[32] }
    bx      = { v2113[32] }
    sp      = { v2114-0x4[32] }
    bp      = { v2114-0x4[32] }
    si      = { v2116[32] }
    di      = { v2117[32] }
    es      = { v2118[16] }
    cs      = { v2119[16] }
    ss      = { v2120[16] }
    ds      = { v2121[16] }
    fs      = { v2122[16] }
    gs      = { v2123[16] }
    cf      = { v2124[1] }
    ?1      = { v2125[1] }
    pf      = { v2126[1] }
    ?3      = { v2127[1] }
    af      = { v2128[1] }
    ?5      = { v2129[1] }
    zf      = { v2130[1] }
    sf      = { v2131[1] }
    tf      = { v2132[1] }
    if      = { v2133[1] }
    df      = { v2134[1] }
    of      = { v2135[1] }
    iopl0   = { v2136[1] }
    iopl1   = { v2137[1] }
    nt      = { v2138[1] }
    ?15     = { v2139[1] }
    rf      = { v2140[1] }
    vm      = { v2141[1] }
    ac      = { v2142[1] }
    vif     = { v2143[1] }
    vip     = { v2144[1] }
    id      = { v2145[1] }
    ?22     = { v2146[1] }
    ?23     = { v2147[1] }
    ?24     = { v2148[1] }
    ?25     = { v2149[1] }
    ?26     = { v2150[1] }
    ?27     = { v2151[1] }
    ?28     = { v2152[1] }
    ?29     = { v2153[1] }
    ?30     = { v2154[1] }
    ?31     = { v2155[1] }
    ip      = { 0x8048483[32] }
memory:
    addr=v2114-0x4[32] value=v2115[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={}, expr=v1602[1]} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={}, expr=v1604[1]} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={}, expr=v1606[1]} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={}, expr=v1608[1]} }
    sf      = { {defs={}, expr=v1609[1]} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={}, expr=v1613[1]} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048481}, expr=0x08048483[32]} }
memory:
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048483[32] }
memory:
0x8048483:sub    esp, 0x08
== PartialSymbolic ==
registers:
    ax      = { v2110[32] }
    cx      = { v2111[32] }
    dx      = { v2112[32] }
    bx      = { v2113[32] }
    sp      = { v2114-0xc[32] }
    bp      = { v2114-0x4[32] }
    si      = { v2116[32] }
    di      = { v2117[32] }
    es      = { v2118[16] }
    cs      = { v2119[16] }
    ss      = { v2120[16] }
    ds      = { v2121[16] }
    fs      = { v2122[16] }
    gs      = { v2123[16] }
    cf      = { -v2173+0x1[1] }
    ?1      = { v2125[1] }
    pf      = { -v2170+0x1[1] }
    ?3      = { v2127[1] }
    af      = { -v2175+0x1[1] }
    ?5      = { v2129[1] }
    zf      = { v2172[1] }
    sf      = { v2171[1] }
    tf      = { v2132[1] }
    if      = { v2133[1] }
    df      = { v2134[1] }
    of      = { v2176[1] }
    iopl0   = { v2136[1] }
    iopl1   = { v2137[1] }
    nt      = { v2138[1] }
    ?15     = { v2139[1] }
    rf      = { v2140[1] }
    vm      = { v2141[1] }
    ac      = { v2142[1] }
    vif     = { v2143[1] }
    vip     = { v2144[1] }
    id      = { v2145[1] }
    ?22     = { v2146[1] }
    ?23     = { v2147[1] }
    ?24     = { v2148[1] }
    ?25     = { v2149[1] }
    ?26     = { v2150[1] }
    ?27     = { v2151[1] }
    ?28     = { v2152[1] }
    ?29     = { v2153[1] }
    ?30     = { v2154[1] }
    ?31     = { v2155[1] }
    ip      = { 0x8048486[32] }
memory:
    addr=v2114-0x4[32] value=v2115[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={0x08048480,0x08048483}, expr=(zerop[1] (add[32] (add[32] v1592[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048480,0x08048483}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={0x08048480,0x08048483}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048483}, expr=0x08048486[32]} }
memory:
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048486[32] }
memory:
0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]
== PartialSymbolic ==
registers:
    ax      = { v2110[32] }
    cx      = { v2111[32] }
    dx      = { v2112[32] }
    bx      = { v2113[32] }
    sp      = { v2114-0xc[32] }
    bp      = { v2114-0x4[32] }
    si      = { v2116[32] }
    di      = { v2117[32] }
    es      = { v2118[16] }
    cs      = { v2119[16] }
    ss      = { v2120[16] }
    ds      = { v2121[16] }
    fs      = { v2122[16] }
    gs      = { v2123[16] }
    cf      = { -v2173+0x1[1] }
    ?1      = { v2125[1] }
    pf      = { -v2219+0x1[1] }
    ?3      = { v2127[1] }
    af      = { v2224[1] }
    ?5      = { v2129[1] }
    zf      = { v2221[1] }
    sf      = { v2220[1] }
    tf      = { v2132[1] }
    if      = { v2133[1] }
    df      = { v2134[1] }
    of      = { v2225[1] }
    iopl0   = { v2136[1] }
    iopl1   = { v2137[1] }
    nt      = { v2138[1] }
    ?15     = { v2139[1] }
    rf      = { v2140[1] }
    vm      = { v2141[1] }
    ac      = { v2142[1] }
    vif     = { v2143[1] }
    vip     = { v2144[1] }
    id      = { v2145[1] }
    ?22     = { v2146[1] }
    ?23     = { v2147[1] }
    ?24     = { v2148[1] }
    ?25     = { v2149[1] }
    ?26     = { v2150[1] }
    ?27     = { v2151[1] }
    ?28     = { v2152[1] }
    ?29     = { v2153[1] }
    ?30     = { v2154[1] }
    ?31     = { v2155[1] }
    ip      = { 0x804848c[32] }
memory:
    addr=0x80496f8[32] value=v2177+0x1[32]
    addr=0x80496f8[32] value=v2177[32]
    addr=v2114-0x4[32] value=v2115[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={0x08048486}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33])))))} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={0x08048486}, expr=(zerop[1] (add[32] v1634[32] 1[32]))} }
    sf      = { {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v1634[32] 1[32]))} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048486}, expr=0x0804848c[32]} }
memory:
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] v1634[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804848c[32] }
memory:
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
== PartialSymbolic ==
registers:
    ax      = { v2110[32] }
    cx      = { v2111[32] }
    dx      = { v2112[32] }
    bx      = { v2113[32] }
    sp      = { v2114-0xc[32] }
    bp      = { v2114-0x4[32] }
    si      = { v2116[32] }
    di      = { v2117[32] }
    es      = { v2118[16] }
    cs      = { v2119[16] }
    ss      = { v2120[16] }
    ds      = { v2121[16] }
    fs      = { v2122[16] }
    gs      = { v2123[16] }
    cf      = { -v2173+0x1[1] }
    ?1      = { v2125[1] }
    pf      = { -v2219+0x1[1] }
    ?3      = { v2127[1] }
    af      = { v2224[1] }
    ?5      = { v2129[1] }
    zf      = { v2221[1] }
    sf      = { v2220[1] }
    tf      = { v2132[1] }
    if      = { v2133[1] }
    df      = { v2134[1] }
    of      = { v2225[1] }
    iopl0   = { v2136[1] }
    iopl1   = { v2137[1] }
    nt      = { v2138[1] }
    ?15     = { v2139[1] }
    rf      = { v2140[1] }
    vm      = { v2141[1] }
    ac      = { v2142[1] }
    vif     = { v2143[1] }
    vip     = { v2144[1] }
    id      = { v2145[1] }
    ?22     = { v2146[1] }
    ?23     = { v2147[1] }
    ?24     = { v2148[1] }
    ?25     = { v2149[1] }
    ?26     = { v2150[1] }
    ?27     = { v2151[1] }
    ?28     = { v2152[1] }
    ?29     = { v2153[1] }
    ?30     = { v2154[1] }
    ?31     = { v2155[1] }
    ip      = { 0x8048493[32] }
memory:
    addr=v2114-0xc[32] value=0x80485d4[32]
    addr=0x80496f8[32] value=v2177+0x1[32]
    addr=0x80496f8[32] value=v2177[32]
    addr=v2114-0x4[32] value=v2115[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={0x08048486}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33])))))} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={0x08048486}, expr=(zerop[1] (add[32] v1634[32] 1[32]))} }
    sf      = { {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v1634[32] 1[32]))} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x0804848c}, expr=0x08048493[32]} }
memory:
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 3[32])} value={defs={0x0804848c}, expr=8[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 2[32])} value={defs={0x0804848c}, expr=4[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 1[32])} value={defs={0x0804848c}, expr=-123[8]}
    addr={defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} value={defs={0x0804848c}, expr=-44[8]}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] v1634[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048493[32] }
memory:
0x8048493:call   0x08048300<puts@plt>
== PartialSymbolic ==
registers:
    ax      = { v2110[32] }
    cx      = { v2111[32] }
    dx      = { v2112[32] }
    bx      = { v2113[32] }
    sp      = { v2114-0x10[32] }
    bp      = { v2114-0x4[32] }
    si      = { v2116[32] }
    di      = { v2117[32] }
    es      = { v2118[16] }
    cs      = { v2119[16] }
    ss      = { v2120[16] }
    ds      = { v2121[16] }
    fs      = { v2122[16] }
    gs      = { v2123[16] }
    cf      = { -v2173+0x1[1] }
    ?1      = { v2125[1] }
    pf      = { -v2219+0x1[1] }
    ?3      = { v2127[1] }
    af      = { v2224[1] }
    ?5      = { v2129[1] }
    zf      = { v2221[1] }
    sf      = { v2220[1] }
    tf      = { v2132[1] }
    if      = { v2133[1] }
    df      = { v2134[1] }
    of      = { v2225[1] }
    iopl0   = { v2136[1] }
    iopl1   = { v2137[1] }
    nt      = { v2138[1] }
    ?15     = { v2139[1] }
    rf      = { v2140[1] }
    vm      = { v2141[1] }
    ac      = { v2142[1] }
    vif     = { v2143[1] }
    vip     = { v2144[1] }
    id      = { v2145[1] }
    ?22     = { v2146[1] }
    ?23     = { v2147[1] }
    ?24     = { v2148[1] }
    ?25     = { v2149[1] }
    ?26     = { v2150[1] }
    ?27     = { v2151[1] }
    ?28     = { v2152[1] }
    ?29     = { v2153[1] }
    ?30     = { v2154[1] }
    ?31     = { v2155[1] }
    ip      = { 0x8048300[32] }
memory:
    addr=v2114-0x10[32] value=0x8048498[32]
    addr=v2114-0xc[32] value=0x80485d4[32]
    addr=0x80496f8[32] value=v2177+0x1[32]
    addr=0x80496f8[32] value=v2177[32]
    addr=v2114-0x4[32] value=v2115[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={0x08048486}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33])))))} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={0x08048486}, expr=(zerop[1] (add[32] v1634[32] 1[32]))} }
    sf      = { {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v1634[32] 1[32]))} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={}, expr=0x08048300[32]} }
memory:
    addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32]) 3[32])} value={defs={0x08048493}, expr=8[8]}
    addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32]) 2[32])} value={defs={0x08048493}, expr=4[8]}
    addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32]) 1[32])} value={defs={0x08048493}, expr=-124[8]}
    addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32])} value={defs={0x08048493}, expr=-104[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 3[32])} value={defs={0x0804848c}, expr=8[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 2[32])} value={defs={0x0804848c}, expr=4[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 1[32])} value={defs={0x0804848c}, expr=-123[8]}
    addr={defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} value={defs={0x0804848c}, expr=-44[8]}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] v1634[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048300[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
== PartialSymbolic ==
registers:
    ax      = { v2228[32] }
    cx      = { v2229[32] }
    dx      = { v2230[32] }
    bx      = { v2231[32] }
    sp      = { v2232[32] }
    bp      = { v2233[32] }
    si      = { v2234[32] }
    di      = { v2235[32] }
    es      = { v2236[16] }
    cs      = { v2237[16] }
    ss      = { v2238[16] }
    ds      = { v2239[16] }
    fs      = { v2240[16] }
    gs      = { v2241[16] }
    cf      = { v2242[1] }
    ?1      = { v2243[1] }
    pf      = { v2244[1] }
    ?3      = { v2245[1] }
    af      = { v2246[1] }
    ?5      = { v2247[1] }
    zf      = { v2248[1] }
    sf      = { v2249[1] }
    tf      = { v2250[1] }
    if      = { v2251[1] }
    df      = { v2252[1] }
    of      = { v2253[1] }
    iopl0   = { v2254[1] }
    iopl1   = { v2255[1] }
    nt      = { v2256[1] }
    ?15     = { v2257[1] }
    rf      = { v2258[1] }
    vm      = { v2259[1] }
    ac      = { v2260[1] }
    vif     = { v2261[1] }
    vip     = { v2262[1] }
    id      = { v2263[1] }
    ?22     = { v2264[1] }
    ?23     = { v2265[1] }
    ?24     = { v2266[1] }
    ?25     = { v2267[1] }
    ?26     = { v2268[1] }
    ?27     = { v2269[1] }
    ?28     = { v2270[1] }
    ?29     = { v2271[1] }
    ?30     = { v2272[1] }
    ?31     = { v2273[1] }
    ip      = { 0x804849f[32] }
memory:
    addr=v2232[32] value=0x0[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1641[32]} }
    cx      = { {defs={}, expr=v1642[32]} }
    dx      = { {defs={}, expr=v1643[32]} }
    bx      = { {defs={}, expr=v1644[32]} }
    sp      = { {defs={}, expr=v1645[32]} }
    bp      = { {defs={}, expr=v1646[32]} }
    si      = { {defs={}, expr=v1647[32]} }
    di      = { {defs={}, expr=v1648[32]} }
    es      = { {defs={}, expr=v1649[16]} }
    cs      = { {defs={}, expr=v1650[16]} }
    ss      = { {defs={}, expr=v1651[16]} }
    ds      = { {defs={}, expr=v1652[16]} }
    fs      = { {defs={}, expr=v1653[16]} }
    gs      = { {defs={}, expr=v1654[16]} }
    cf      = { {defs={}, expr=v1655[1]} }
    ?1      = { {defs={}, expr=v1656[1]} }
    pf      = { {defs={}, expr=v1657[1]} }
    ?3      = { {defs={}, expr=v1658[1]} }
    af      = { {defs={}, expr=v1659[1]} }
    ?5      = { {defs={}, expr=v1660[1]} }
    zf      = { {defs={}, expr=v1661[1]} }
    sf      = { {defs={}, expr=v1662[1]} }
    tf      = { {defs={}, expr=v1663[1]} }
    if      = { {defs={}, expr=v1664[1]} }
    df      = { {defs={}, expr=v1665[1]} }
    of      = { {defs={}, expr=v1666[1]} }
    iopl0   = { {defs={}, expr=v1667[1]} }
    iopl1   = { {defs={}, expr=v1668[1]} }
    nt      = { {defs={}, expr=v1669[1]} }
    ?15     = { {defs={}, expr=v1670[1]} }
    rf      = { {defs={}, expr=v1671[1]} }
    vm      = { {defs={}, expr=v1672[1]} }
    ac      = { {defs={}, expr=v1673[1]} }
    vif     = { {defs={}, expr=v1674[1]} }
    vip     = { {defs={}, expr=v1675[1]} }
    id      = { {defs={}, expr=v1676[1]} }
    ?22     = { {defs={}, expr=v1677[1]} }
    ?23     = { {defs={}, expr=v1678[1]} }
    ?24     = { {defs={}, expr=v1679[1]} }
    ?25     = { {defs={}, expr=v1680[1]} }
    ?26     = { {defs={}, expr=v1681[1]} }
    ?27     = { {defs={}, expr=v1682[1]} }
    ?28     = { {defs={}, expr=v1683[1]} }
    ?29     = { {defs={}, expr=v1684[1]} }
    ?30     = { {defs={}, expr=v1685[1]} }
    ?31     = { {defs={}, expr=v1686[1]} }
    ip      = { {defs={0x08048498}, expr=0x0804849f[32]} }
memory:
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 3[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 2[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 1[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={}, expr=v1645[32]} value={defs={0x08048498}, expr=0[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804849f[32] }
memory:
0x804849f:call   0x08048320<_exit@plt>
== PartialSymbolic ==
registers:
    ax      = { v2228[32] }
    cx      = { v2229[32] }
    dx      = { v2230[32] }
    bx      = { v2231[32] }
    sp      = { v2232-0x4[32] }
    bp      = { v2233[32] }
    si      = { v2234[32] }
    di      = { v2235[32] }
    es      = { v2236[16] }
    cs      = { v2237[16] }
    ss      = { v2238[16] }
    ds      = { v2239[16] }
    fs      = { v2240[16] }
    gs      = { v2241[16] }
    cf      = { v2242[1] }
    ?1      = { v2243[1] }
    pf      = { v2244[1] }
    ?3      = { v2245[1] }
    af      = { v2246[1] }
    ?5      = { v2247[1] }
    zf      = { v2248[1] }
    sf      = { v2249[1] }
    tf      = { v2250[1] }
    if      = { v2251[1] }
    df      = { v2252[1] }
    of      = { v2253[1] }
    iopl0   = { v2254[1] }
    iopl1   = { v2255[1] }
    nt      = { v2256[1] }
    ?15     = { v2257[1] }
    rf      = { v2258[1] }
    vm      = { v2259[1] }
    ac      = { v2260[1] }
    vif     = { v2261[1] }
    vip     = { v2262[1] }
    id      = { v2263[1] }
    ?22     = { v2264[1] }
    ?23     = { v2265[1] }
    ?24     = { v2266[1] }
    ?25     = { v2267[1] }
    ?26     = { v2268[1] }
    ?27     = { v2269[1] }
    ?28     = { v2270[1] }
    ?29     = { v2271[1] }
    ?30     = { v2272[1] }
    ?31     = { v2273[1] }
    ip      = { 0x8048320[32] }
memory:
    addr=v2232-0x4[32] value=0x80484a4[32]
    addr=v2232[32] value=0x0[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1641[32]} }
    cx      = { {defs={}, expr=v1642[32]} }
    dx      = { {defs={}, expr=v1643[32]} }
    bx      = { {defs={}, expr=v1644[32]} }
    sp      = { {defs={0x0804849f}, expr=(add[32] v1645[32] -4[32])} }
    bp      = { {defs={}, expr=v1646[32]} }
    si      = { {defs={}, expr=v1647[32]} }
    di      = { {defs={}, expr=v1648[32]} }
    es      = { {defs={}, expr=v1649[16]} }
    cs      = { {defs={}, expr=v1650[16]} }
    ss      = { {defs={}, expr=v1651[16]} }
    ds      = { {defs={}, expr=v1652[16]} }
    fs      = { {defs={}, expr=v1653[16]} }
    gs      = { {defs={}, expr=v1654[16]} }
    cf      = { {defs={}, expr=v1655[1]} }
    ?1      = { {defs={}, expr=v1656[1]} }
    pf      = { {defs={}, expr=v1657[1]} }
    ?3      = { {defs={}, expr=v1658[1]} }
    af      = { {defs={}, expr=v1659[1]} }
    ?5      = { {defs={}, expr=v1660[1]} }
    zf      = { {defs={}, expr=v1661[1]} }
    sf      = { {defs={}, expr=v1662[1]} }
    tf      = { {defs={}, expr=v1663[1]} }
    if      = { {defs={}, expr=v1664[1]} }
    df      = { {defs={}, expr=v1665[1]} }
    of      = { {defs={}, expr=v1666[1]} }
    iopl0   = { {defs={}, expr=v1667[1]} }
    iopl1   = { {defs={}, expr=v1668[1]} }
    nt      = { {defs={}, expr=v1669[1]} }
    ?15     = { {defs={}, expr=v1670[1]} }
    rf      = { {defs={}, expr=v1671[1]} }
    vm      = { {defs={}, expr=v1672[1]} }
    ac      = { {defs={}, expr=v1673[1]} }
    vif     = { {defs={}, expr=v1674[1]} }
    vip     = { {defs={}, expr=v1675[1]} }
    id      = { {defs={}, expr=v1676[1]} }
    ?22     = { {defs={}, expr=v1677[1]} }
    ?23     = { {defs={}, expr=v1678[1]} }
    ?24     = { {defs={}, expr=v1679[1]} }
    ?25     = { {defs={}, expr=v1680[1]} }
    ?26     = { {defs={}, expr=v1681[1]} }
    ?27     = { {defs={}, expr=v1682[1]} }
    ?28     = { {defs={}, expr=v1683[1]} }
    ?29     = { {defs={}, expr=v1684[1]} }
    ?30     = { {defs={}, expr=v1685[1]} }
    ?31     = { {defs={}, expr=v1686[1]} }
    ip      = { {defs={}, expr=0x08048320[32]} }
memory:
    addr={defs={0x0804849f}, expr=(add[32] (add[32] v1645[32] -4[32]) 3[32])} value={defs={0x0804849f}, expr=8[8]}
    addr={defs={0x0804849f}, expr=(add[32] (add[32] v1645[32] -4[32]) 2[32])} value={defs={0x0804849f}, expr=4[8]}
    addr={defs={0x0804849f}, expr=(add[32] (add[32] v1645[32] -4[32]) 1[32])} value={defs={0x0804849f}, expr=-124[8]}
    addr={defs={0x0804849f}, expr=(add[32] v1645[32] -4[32])} value={defs={0x0804849f}, expr=-92[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 3[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 2[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 1[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={}, expr=v1645[32]} value={defs={0x08048498}, expr=0[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048320[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v2276[32] }
    cx      = { v2277[32] }
    dx      = { v2278[32] }
    bx      = { v2279[32] }
    sp      = { v2280-0x4[32] }
    bp      = { v2281[32] }
    si      = { v2282[32] }
    di      = { v2283[32] }
    es      = { v2284[16] }
    cs      = { v2285[16] }
    ss      = { v2286[16] }
    ds      = { v2287[16] }
    fs      = { v2288[16] }
    gs      = { v2289[16] }
    cf      = { v2290[1] }
    ?1      = { v2291[1] }
    pf      = { v2292[1] }
    ?3      = { v2293[1] }
    af      = { v2294[1] }
    ?5      = { v2295[1] }
    zf      = { v2296[1] }
    sf      = { v2297[1] }
    tf      = { v2298[1] }
    if      = { v2299[1] }
    df      = { v2300[1] }
    of      = { v2301[1] }
    iopl0   = { v2302[1] }
    iopl1   = { v2303[1] }
    nt      = { v2304[1] }
    ?15     = { v2305[1] }
    rf      = { v2306[1] }
    vm      = { v2307[1] }
    ac      = { v2308[1] }
    vif     = { v2309[1] }
    vip     = { v2310[1] }
    id      = { v2311[1] }
    ?22     = { v2312[1] }
    ?23     = { v2313[1] }
    ?24     = { v2314[1] }
    ?25     = { v2315[1] }
    ?26     = { v2316[1] }
    ?27     = { v2317[1] }
    ?28     = { v2318[1] }
    ?29     = { v2319[1] }
    ?30     = { v2320[1] }
    ?31     = { v2321[1] }
    ip      = { 0x80484b1[32] }
memory:
    addr=v2280-0x4[32] value=v2281[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    bp      = { {defs={}, expr=v1694[32]} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b0}, expr=0x080484b1[32]} }
memory:
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b1[32] }
memory:
0x80484b1:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v2276[32] }
    cx      = { v2277[32] }
    dx      = { v2278[32] }
    bx      = { v2279[32] }
    sp      = { v2280-0x4[32] }
    bp      = { v2280-0x4[32] }
    si      = { v2282[32] }
    di      = { v2283[32] }
    es      = { v2284[16] }
    cs      = { v2285[16] }
    ss      = { v2286[16] }
    ds      = { v2287[16] }
    fs      = { v2288[16] }
    gs      = { v2289[16] }
    cf      = { v2290[1] }
    ?1      = { v2291[1] }
    pf      = { v2292[1] }
    ?3      = { v2293[1] }
    af      = { v2294[1] }
    ?5      = { v2295[1] }
    zf      = { v2296[1] }
    sf      = { v2297[1] }
    tf      = { v2298[1] }
    if      = { v2299[1] }
    df      = { v2300[1] }
    of      = { v2301[1] }
    iopl0   = { v2302[1] }
    iopl1   = { v2303[1] }
    nt      = { v2304[1] }
    ?15     = { v2305[1] }
    rf      = { v2306[1] }
    vm      = { v2307[1] }
    ac      = { v2308[1] }
    vif     = { v2309[1] }
    vip     = { v2310[1] }
    id      = { v2311[1] }
    ?22     = { v2312[1] }
    ?23     = { v2313[1] }
    ?24     = { v2314[1] }
    ?25     = { v2315[1] }
    ?26     = { v2316[1] }
    ?27     = { v2317[1] }
    ?28     = { v2318[1] }
    ?29     = { v2319[1] }
    ?30     = { v2320[1] }
    ?31     = { v2321[1] }
    ip      = { 0x80484b3[32] }
memory:
    addr=v2280-0x4[32] value=v2281[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b1}, expr=0x080484b3[32]} }
memory:
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b3[32] }
memory:
0x80484b3:push   edi
== PartialSymbolic ==
registers:
    ax      = { v2276[32] }
    cx      = { v2277[32] }
    dx      = { v2278[32] }
    bx      = { v2279[32] }
    sp      = { v2280-0x8[32] }
    bp      = { v2280-0x4[32] }
    si      = { v2282[32] }
    di      = { v2283[32] }
    es      = { v2284[16] }
    cs      = { v2285[16] }
    ss      = { v2286[16] }
    ds      = { v2287[16] }
    fs      = { v2288[16] }
    gs      = { v2289[16] }
    cf      = { v2290[1] }
    ?1      = { v2291[1] }
    pf      = { v2292[1] }
    ?3      = { v2293[1] }
    af      = { v2294[1] }
    ?5      = { v2295[1] }
    zf      = { v2296[1] }
    sf      = { v2297[1] }
    tf      = { v2298[1] }
    if      = { v2299[1] }
    df      = { v2300[1] }
    of      = { v2301[1] }
    iopl0   = { v2302[1] }
    iopl1   = { v2303[1] }
    nt      = { v2304[1] }
    ?15     = { v2305[1] }
    rf      = { v2306[1] }
    vm      = { v2307[1] }
    ac      = { v2308[1] }
    vif     = { v2309[1] }
    vip     = { v2310[1] }
    id      = { v2311[1] }
    ?22     = { v2312[1] }
    ?23     = { v2313[1] }
    ?24     = { v2314[1] }
    ?25     = { v2315[1] }
    ?26     = { v2316[1] }
    ?27     = { v2317[1] }
    ?28     = { v2318[1] }
    ?29     = { v2319[1] }
    ?30     = { v2320[1] }
    ?31     = { v2321[1] }
    ip      = { 0x80484b4[32] }
memory:
    addr=v2280-0x8[32] value=v2283[32]
    addr=v2280-0x4[32] value=v2281[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b3}, expr=0x080484b4[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b4[32] }
memory:
0x80484b4:push   esi
== PartialSymbolic ==
registers:
    ax      = { v2276[32] }
    cx      = { v2277[32] }
    dx      = { v2278[32] }
    bx      = { v2279[32] }
    sp      = { v2280-0xc[32] }
    bp      = { v2280-0x4[32] }
    si      = { v2282[32] }
    di      = { v2283[32] }
    es      = { v2284[16] }
    cs      = { v2285[16] }
    ss      = { v2286[16] }
    ds      = { v2287[16] }
    fs      = { v2288[16] }
    gs      = { v2289[16] }
    cf      = { v2290[1] }
    ?1      = { v2291[1] }
    pf      = { v2292[1] }
    ?3      = { v2293[1] }
    af      = { v2294[1] }
    ?5      = { v2295[1] }
    zf      = { v2296[1] }
    sf      = { v2297[1] }
    tf      = { v2298[1] }
    if      = { v2299[1] }
    df      = { v2300[1] }
    of      = { v2301[1] }
    iopl0   = { v2302[1] }
    iopl1   = { v2303[1] }
    nt      = { v2304[1] }
    ?15     = { v2305[1] }
    rf      = { v2306[1] }
    vm      = { v2307[1] }
    ac      = { v2308[1] }
    vif     = { v2309[1] }
    vip     = { v2310[1] }
    id      = { v2311[1] }
    ?22     = { v2312[1] }
    ?23     = { v2313[1] }
    ?24     = { v2314[1] }
    ?25     = { v2315[1] }
    ?26     = { v2316[1] }
    ?27     = { v2317[1] }
    ?28     = { v2318[1] }
    ?29     = { v2319[1] }
    ?30     = { v2320[1] }
    ?31     = { v2321[1] }
    ip      = { 0x80484b5[32] }
memory:
    addr=v2280-0xc[32] value=v2282[32]
    addr=v2280-0x8[32] value=v2283[32]
    addr=v2280-0x4[32] value=v2281[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b4}, expr=0x080484b5[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b4}, expr=(extract[8] 24[32] 32[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b4}, expr=(extract[8] 16[32] 24[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b4}, expr=(extract[8] 8[32] 16[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} value={defs={0x080484b4}, expr=(extract[8] 0[32] 8[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b5[32] }
memory:
0x80484b5:push   ebx
== PartialSymbolic ==
registers:
    ax      = { v2276[32] }
    cx      = { v2277[32] }
    dx      = { v2278[32] }
    bx      = { v2279[32] }
    sp      = { v2280-0x10[32] }
    bp      = { v2280-0x4[32] }
    si      = { v2282[32] }
    di      = { v2283[32] }
    es      = { v2284[16] }
    cs      = { v2285[16] }
    ss      = { v2286[16] }
    ds      = { v2287[16] }
    fs      = { v2288[16] }
    gs      = { v2289[16] }
    cf      = { v2290[1] }
    ?1      = { v2291[1] }
    pf      = { v2292[1] }
    ?3      = { v2293[1] }
    af      = { v2294[1] }
    ?5      = { v2295[1] }
    zf      = { v2296[1] }
    sf      = { v2297[1] }
    tf      = { v2298[1] }
    if      = { v2299[1] }
    df      = { v2300[1] }
    of      = { v2301[1] }
    iopl0   = { v2302[1] }
    iopl1   = { v2303[1] }
    nt      = { v2304[1] }
    ?15     = { v2305[1] }
    rf      = { v2306[1] }
    vm      = { v2307[1] }
    ac      = { v2308[1] }
    vif     = { v2309[1] }
    vip     = { v2310[1] }
    id      = { v2311[1] }
    ?22     = { v2312[1] }
    ?23     = { v2313[1] }
    ?24     = { v2314[1] }
    ?25     = { v2315[1] }
    ?26     = { v2316[1] }
    ?27     = { v2317[1] }
    ?28     = { v2318[1] }
    ?29     = { v2319[1] }
    ?30     = { v2320[1] }
    ?31     = { v2321[1] }
    ip      = { 0x80484b6[32] }
memory:
    addr=v2280-0x10[32] value=v2279[32]
    addr=v2280-0xc[32] value=v2282[32]
    addr=v2280-0x8[32] value=v2283[32]
    addr=v2280-0x4[32] value=v2281[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b5}, expr=0x080484b6[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b5}, expr=(extract[8] 24[32] 32[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b5}, expr=(extract[8] 16[32] 24[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b5}, expr=(extract[8] 8[32] 16[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x080484b5}, expr=(extract[8] 0[32] 8[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b4}, expr=(extract[8] 24[32] 32[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b4}, expr=(extract[8] 16[32] 24[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b4}, expr=(extract[8] 8[32] 16[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} value={defs={0x080484b4}, expr=(extract[8] 0[32] 8[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b6[32] }
memory:
0x80484b6:sub    esp, 0x0c
== PartialSymbolic ==
registers:
    ax      = { v2276[32] }
    cx      = { v2277[32] }
    dx      = { v2278[32] }
    bx      = { v2279[32] }
    sp      = { v2280-0x1c[32] }
    bp      = { v2280-0x4[32] }
    si      = { v2282[32] }
    di      = { v2283[32] }
    es      = { v2284[16] }
    cs      = { v2285[16] }
    ss      = { v2286[16] }
    ds      = { v2287[16] }
    fs      = { v2288[16] }
    gs      = { v2289[16] }
    cf      = { -v2339+0x1[1] }
    ?1      = { v2291[1] }
    pf      = { -v2336+0x1[1] }
    ?3      = { v2293[1] }
    af      = { -v2341+0x1[1] }
    ?5      = { v2295[1] }
    zf      = { v2338[1] }
    sf      = { v2337[1] }
    tf      = { v2298[1] }
    if      = { v2299[1] }
    df      = { v2300[1] }
    of      = { v2342[1] }
    iopl0   = { v2302[1] }
    iopl1   = { v2303[1] }
    nt      = { v2304[1] }
    ?15     = { v2305[1] }
    rf      = { v2306[1] }
    vm      = { v2307[1] }
    ac      = { v2308[1] }
    vif     = { v2309[1] }
    vip     = { v2310[1] }
    id      = { v2311[1] }
    ?22     = { v2312[1] }
    ?23     = { v2313[1] }
    ?24     = { v2314[1] }
    ?25     = { v2315[1] }
    ?26     = { v2316[1] }
    ?27     = { v2317[1] }
    ?28     = { v2318[1] }
    ?29     = { v2319[1] }
    ?30     = { v2320[1] }
    ?31     = { v2321[1] }
    ip      = { 0x80484b9[32] }
memory:
    addr=v2280-0x10[32] value=v2279[32]
    addr=v2280-0xc[32] value=v2282[32]
    addr=v2280-0x8[32] value=v2283[32]
    addr=v2280-0x4[32] value=v2281[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    sf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b6}, expr=0x080484b9[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b5}, expr=(extract[8] 24[32] 32[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b5}, expr=(extract[8] 16[32] 24[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b5}, expr=(extract[8] 8[32] 16[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x080484b5}, expr=(extract[8] 0[32] 8[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b4}, expr=(extract[8] 24[32] 32[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b4}, expr=(extract[8] 16[32] 24[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b4}, expr=(extract[8] 8[32] 16[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} value={defs={0x080484b4}, expr=(extract[8] 0[32] 8[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484b9[32] }
memory:
0x80484b9:call   0x080484be<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v2276[32] }
    cx      = { v2277[32] }
    dx      = { v2278[32] }
    bx      = { v2279[32] }
    sp      = { v2280-0x20[32] }
    bp      = { v2280-0x4[32] }
    si      = { v2282[32] }
    di      = { v2283[32] }
    es      = { v2284[16] }
    cs      = { v2285[16] }
    ss      = { v2286[16] }
    ds      = { v2287[16] }
    fs      = { v2288[16] }
    gs      = { v2289[16] }
    cf      = { -v2339+0x1[1] }
    ?1      = { v2291[1] }
    pf      = { -v2336+0x1[1] }
    ?3      = { v2293[1] }
    af      = { -v2341+0x1[1] }
    ?5      = { v2295[1] }
    zf      = { v2338[1] }
    sf      = { v2337[1] }
    tf      = { v2298[1] }
    if      = { v2299[1] }
    df      = { v2300[1] }
    of      = { v2342[1] }
    iopl0   = { v2302[1] }
    iopl1   = { v2303[1] }
    nt      = { v2304[1] }
    ?15     = { v2305[1] }
    rf      = { v2306[1] }
    vm      = { v2307[1] }
    ac      = { v2308[1] }
    vif     = { v2309[1] }
    vip     = { v2310[1] }
    id      = { v2311[1] }
    ?22     = { v2312[1] }
    ?23     = { v2313[1] }
    ?24     = { v2314[1] }
    ?25     = { v2315[1] }
    ?26     = { v2316[1] }
    ?27     = { v2317[1] }
    ?28     = { v2318[1] }
    ?29     = { v2319[1] }
    ?30     = { v2320[1] }
    ?31     = { v2321[1] }
    ip      = { 0x80484be[32] }
memory:
    addr=v2280-0x20[32] value=0x80484be[32]
    addr=v2280-0x10[32] value=v2279[32]
    addr=v2280-0xc[32] value=v2282[32]
    addr=v2280-0x8[32] value=v2283[32]
    addr=v2280-0x4[32] value=v2281[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    sf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={}, expr=0x080484be[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 3[32])} value={defs={0x080484b9}, expr=8[8]}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 2[32])} value={defs={0x080484b9}, expr=4[8]}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 1[32])} value={defs={0x080484b9}, expr=-124[8]}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])} value={defs={0x080484b9}, expr=-66[8]}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b5}, expr=(extract[8] 24[32] 32[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b5}, expr=(extract[8] 16[32] 24[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b5}, expr=(extract[8] 8[32] 16[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x080484b5}, expr=(extract[8] 0[32] 8[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b4}, expr=(extract[8] 24[32] 32[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b4}, expr=(extract[8] 16[32] 24[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b4}, expr=(extract[8] 8[32] 16[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} value={defs={0x080484b4}, expr=(extract[8] 0[32] 8[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484be[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v2345[32] }
    cx      = { v2346[32] }
    dx      = { v2347[32] }
    bx      = { v2391[32] }
    sp      = { v2349+0x4[32] }
    bp      = { v2350[32] }
    si      = { v2351[32] }
    di      = { v2352[32] }
    es      = { v2353[16] }
    cs      = { v2354[16] }
    ss      = { v2355[16] }
    ds      = { v2356[16] }
    fs      = { v2357[16] }
    gs      = { v2358[16] }
    cf      = { v2359[1] }
    ?1      = { v2360[1] }
    pf      = { v2361[1] }
    ?3      = { v2362[1] }
    af      = { v2363[1] }
    ?5      = { v2364[1] }
    zf      = { v2365[1] }
    sf      = { v2366[1] }
    tf      = { v2367[1] }
    if      = { v2368[1] }
    df      = { v2369[1] }
    of      = { v2370[1] }
    iopl0   = { v2371[1] }
    iopl1   = { v2372[1] }
    nt      = { v2373[1] }
    ?15     = { v2374[1] }
    rf      = { v2375[1] }
    vm      = { v2376[1] }
    ac      = { v2377[1] }
    vif     = { v2378[1] }
    vip     = { v2379[1] }
    id      = { v2380[1] }
    ?22     = { v2381[1] }
    ?23     = { v2382[1] }
    ?24     = { v2383[1] }
    ?25     = { v2384[1] }
    ?26     = { v2385[1] }
    ?27     = { v2386[1] }
    ?28     = { v2387[1] }
    ?29     = { v2388[1] }
    ?30     = { v2389[1] }
    ?31     = { v2390[1] }
    ip      = { 0x80484bf[32] }
memory:
    addr=v2349[32] value=v2391[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1737[32]} }
    cx      = { {defs={}, expr=v1738[32]} }
    dx      = { {defs={}, expr=v1739[32]} }
    bx      = { {defs={0x080484be}, expr=v1783[32]} }
    sp      = { {defs={0x080484be}, expr=(add[32] v1741[32] 4[32])} }
    bp      = { {defs={}, expr=v1742[32]} }
    si      = { {defs={}, expr=v1743[32]} }
    di      = { {defs={}, expr=v1744[32]} }
    es      = { {defs={}, expr=v1745[16]} }
    cs      = { {defs={}, expr=v1746[16]} }
    ss      = { {defs={}, expr=v1747[16]} }
    ds      = { {defs={}, expr=v1748[16]} }
    fs      = { {defs={}, expr=v1749[16]} }
    gs      = { {defs={}, expr=v1750[16]} }
    cf      = { {defs={}, expr=v1751[1]} }
    ?1      = { {defs={}, expr=v1752[1]} }
    pf      = { {defs={}, expr=v1753[1]} }
    ?3      = { {defs={}, expr=v1754[1]} }
    af      = { {defs={}, expr=v1755[1]} }
    ?5      = { {defs={}, expr=v1756[1]} }
    zf      = { {defs={}, expr=v1757[1]} }
    sf      = { {defs={}, expr=v1758[1]} }
    tf      = { {defs={}, expr=v1759[1]} }
    if      = { {defs={}, expr=v1760[1]} }
    df      = { {defs={}, expr=v1761[1]} }
    of      = { {defs={}, expr=v1762[1]} }
    iopl0   = { {defs={}, expr=v1763[1]} }
    iopl1   = { {defs={}, expr=v1764[1]} }
    nt      = { {defs={}, expr=v1765[1]} }
    ?15     = { {defs={}, expr=v1766[1]} }
    rf      = { {defs={}, expr=v1767[1]} }
    vm      = { {defs={}, expr=v1768[1]} }
    ac      = { {defs={}, expr=v1769[1]} }
    vif     = { {defs={}, expr=v1770[1]} }
    vip     = { {defs={}, expr=v1771[1]} }
    id      = { {defs={}, expr=v1772[1]} }
    ?22     = { {defs={}, expr=v1773[1]} }
    ?23     = { {defs={}, expr=v1774[1]} }
    ?24     = { {defs={}, expr=v1775[1]} }
    ?25     = { {defs={}, expr=v1776[1]} }
    ?26     = { {defs={}, expr=v1777[1]} }
    ?27     = { {defs={}, expr=v1778[1]} }
    ?28     = { {defs={}, expr=v1779[1]} }
    ?29     = { {defs={}, expr=v1780[1]} }
    ?30     = { {defs={}, expr=v1781[1]} }
    ?31     = { {defs={}, expr=v1782[1]} }
    ip      = { {defs={0x080484be}, expr=0x080484bf[32]} }
memory:
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 3[32])} value={defs={0x080484be}, expr=(extract[8] 24[32] 32[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 2[32])} value={defs={0x080484be}, expr=(extract[8] 16[32] 24[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 1[32])} value={defs={0x080484be}, expr=(extract[8] 8[32] 16[32] v1783[32])}
    addr={defs={}, expr=v1741[32]} value={defs={0x080484be}, expr=(extract[8] 0[32] 8[32] v1783[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484bf[32] }
memory:
0x80484bf:add    ebx, 0x0000120a
== PartialSymbolic ==
registers:
    ax      = { v2345[32] }
    cx      = { v2346[32] }
    dx      = { v2347[32] }
    bx      = { v2391+0x120a[32] }
    sp      = { v2349+0x4[32] }
    bp      = { v2350[32] }
    si      = { v2351[32] }
    di      = { v2352[32] }
    es      = { v2353[16] }
    cs      = { v2354[16] }
    ss      = { v2355[16] }
    ds      = { v2356[16] }
    fs      = { v2357[16] }
    gs      = { v2358[16] }
    cf      = { v2410[1] }
    ?1      = { v2360[1] }
    pf      = { -v2407+0x1[1] }
    ?3      = { v2362[1] }
    af      = { v2412[1] }
    ?5      = { v2364[1] }
    zf      = { v2409[1] }
    sf      = { v2408[1] }
    tf      = { v2367[1] }
    if      = { v2368[1] }
    df      = { v2369[1] }
    of      = { v2413[1] }
    iopl0   = { v2371[1] }
    iopl1   = { v2372[1] }
    nt      = { v2373[1] }
    ?15     = { v2374[1] }
    rf      = { v2375[1] }
    vm      = { v2376[1] }
    ac      = { v2377[1] }
    vif     = { v2378[1] }
    vip     = { v2379[1] }
    id      = { v2380[1] }
    ?22     = { v2381[1] }
    ?23     = { v2382[1] }
    ?24     = { v2383[1] }
    ?25     = { v2384[1] }
    ?26     = { v2385[1] }
    ?27     = { v2386[1] }
    ?28     = { v2387[1] }
    ?29     = { v2388[1] }
    ?30     = { v2389[1] }
    ?31     = { v2390[1] }
    ip      = { 0x80484c5[32] }
memory:
    addr=v2349[32] value=v2391[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1737[32]} }
    cx      = { {defs={}, expr=v1738[32]} }
    dx      = { {defs={}, expr=v1739[32]} }
    bx      = { {defs={0x080484be,0x080484bf}, expr=(add[32] v1783[32] 4618[32])} }
    sp      = { {defs={0x080484be}, expr=(add[32] v1741[32] 4[32])} }
    bp      = { {defs={}, expr=v1742[32]} }
    si      = { {defs={}, expr=v1743[32]} }
    di      = { {defs={}, expr=v1744[32]} }
    es      = { {defs={}, expr=v1745[16]} }
    cs      = { {defs={}, expr=v1746[16]} }
    ss      = { {defs={}, expr=v1747[16]} }
    ds      = { {defs={}, expr=v1748[16]} }
    fs      = { {defs={}, expr=v1749[16]} }
    gs      = { {defs={}, expr=v1750[16]} }
    cf      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33])))))} }
    ?1      = { {defs={}, expr=v1752[1]} }
    pf      = { {defs={0x080484be,0x080484bf}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))))))} }
    ?3      = { {defs={}, expr=v1754[1]} }
    af      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33])))))} }
    ?5      = { {defs={}, expr=v1756[1]} }
    zf      = { {defs={0x080484be,0x080484bf}, expr=(zerop[1] (add[32] v1783[32] 4618[32]))} }
    sf      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 31[32] 32[32] (add[32] v1783[32] 4618[32]))} }
    tf      = { {defs={}, expr=v1759[1]} }
    if      = { {defs={}, expr=v1760[1]} }
    df      = { {defs={}, expr=v1761[1]} }
    of      = { {defs={0x080484be,0x080484bf}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33]))))))} }
    iopl0   = { {defs={}, expr=v1763[1]} }
    iopl1   = { {defs={}, expr=v1764[1]} }
    nt      = { {defs={}, expr=v1765[1]} }
    ?15     = { {defs={}, expr=v1766[1]} }
    rf      = { {defs={}, expr=v1767[1]} }
    vm      = { {defs={}, expr=v1768[1]} }
    ac      = { {defs={}, expr=v1769[1]} }
    vif     = { {defs={}, expr=v1770[1]} }
    vip     = { {defs={}, expr=v1771[1]} }
    id      = { {defs={}, expr=v1772[1]} }
    ?22     = { {defs={}, expr=v1773[1]} }
    ?23     = { {defs={}, expr=v1774[1]} }
    ?24     = { {defs={}, expr=v1775[1]} }
    ?25     = { {defs={}, expr=v1776[1]} }
    ?26     = { {defs={}, expr=v1777[1]} }
    ?27     = { {defs={}, expr=v1778[1]} }
    ?28     = { {defs={}, expr=v1779[1]} }
    ?29     = { {defs={}, expr=v1780[1]} }
    ?30     = { {defs={}, expr=v1781[1]} }
    ?31     = { {defs={}, expr=v1782[1]} }
    ip      = { {defs={0x080484bf}, expr=0x080484c5[32]} }
memory:
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 3[32])} value={defs={0x080484be}, expr=(extract[8] 24[32] 32[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 2[32])} value={defs={0x080484be}, expr=(extract[8] 16[32] 24[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 1[32])} value={defs={0x080484be}, expr=(extract[8] 8[32] 16[32] v1783[32])}
    addr={defs={}, expr=v1741[32]} value={defs={0x080484be}, expr=(extract[8] 0[32] 8[32] v1783[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484c5[32] }
memory:
0x80484c5:call   0x080482c8<_init>
== PartialSymbolic ==
registers:
    ax      = { v2345[32] }
    cx      = { v2346[32] }
    dx      = { v2347[32] }
    bx      = { v2391+0x120a[32] }
    sp      = { v2349[32] }
    bp      = { v2350[32] }
    si      = { v2351[32] }
    di      = { v2352[32] }
    es      = { v2353[16] }
    cs      = { v2354[16] }
    ss      = { v2355[16] }
    ds      = { v2356[16] }
    fs      = { v2357[16] }
    gs      = { v2358[16] }
    cf      = { v2410[1] }
    ?1      = { v2360[1] }
    pf      = { -v2407+0x1[1] }
    ?3      = { v2362[1] }
    af      = { v2412[1] }
    ?5      = { v2364[1] }
    zf      = { v2409[1] }
    sf      = { v2408[1] }
    tf      = { v2367[1] }
    if      = { v2368[1] }
    df      = { v2369[1] }
    of      = { v2413[1] }
    iopl0   = { v2371[1] }
    iopl1   = { v2372[1] }
    nt      = { v2373[1] }
    ?15     = { v2374[1] }
    rf      = { v2375[1] }
    vm      = { v2376[1] }
    ac      = { v2377[1] }
    vif     = { v2378[1] }
    vip     = { v2379[1] }
    id      = { v2380[1] }
    ?22     = { v2381[1] }
    ?23     = { v2382[1] }
    ?24     = { v2383[1] }
    ?25     = { v2384[1] }
    ?26     = { v2385[1] }
    ?27     = { v2386[1] }
    ?28     = { v2387[1] }
    ?29     = { v2388[1] }
    ?30     = { v2389[1] }
    ?31     = { v2390[1] }
    ip      = { 0x80482c8[32] }
memory:
    addr=v2349[32] value=0x80484ca[32]
    addr=v2349[32] value=v2391[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1737[32]} }
    cx      = { {defs={}, expr=v1738[32]} }
    dx      = { {defs={}, expr=v1739[32]} }
    bx      = { {defs={0x080484be,0x080484bf}, expr=(add[32] v1783[32] 4618[32])} }
    sp      = { {defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] v1741[32] 4[32]) -4[32])} }
    bp      = { {defs={}, expr=v1742[32]} }
    si      = { {defs={}, expr=v1743[32]} }
    di      = { {defs={}, expr=v1744[32]} }
    es      = { {defs={}, expr=v1745[16]} }
    cs      = { {defs={}, expr=v1746[16]} }
    ss      = { {defs={}, expr=v1747[16]} }
    ds      = { {defs={}, expr=v1748[16]} }
    fs      = { {defs={}, expr=v1749[16]} }
    gs      = { {defs={}, expr=v1750[16]} }
    cf      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33])))))} }
    ?1      = { {defs={}, expr=v1752[1]} }
    pf      = { {defs={0x080484be,0x080484bf}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))))))} }
    ?3      = { {defs={}, expr=v1754[1]} }
    af      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33])))))} }
    ?5      = { {defs={}, expr=v1756[1]} }
    zf      = { {defs={0x080484be,0x080484bf}, expr=(zerop[1] (add[32] v1783[32] 4618[32]))} }
    sf      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 31[32] 32[32] (add[32] v1783[32] 4618[32]))} }
    tf      = { {defs={}, expr=v1759[1]} }
    if      = { {defs={}, expr=v1760[1]} }
    df      = { {defs={}, expr=v1761[1]} }
    of      = { {defs={0x080484be,0x080484bf}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33]))))))} }
    iopl0   = { {defs={}, expr=v1763[1]} }
    iopl1   = { {defs={}, expr=v1764[1]} }
    nt      = { {defs={}, expr=v1765[1]} }
    ?15     = { {defs={}, expr=v1766[1]} }
    rf      = { {defs={}, expr=v1767[1]} }
    vm      = { {defs={}, expr=v1768[1]} }
    ac      = { {defs={}, expr=v1769[1]} }
    vif     = { {defs={}, expr=v1770[1]} }
    vip     = { {defs={}, expr=v1771[1]} }
    id      = { {defs={}, expr=v1772[1]} }
    ?22     = { {defs={}, expr=v1773[1]} }
    ?23     = { {defs={}, expr=v1774[1]} }
    ?24     = { {defs={}, expr=v1775[1]} }
    ?25     = { {defs={}, expr=v1776[1]} }
    ?26     = { {defs={}, expr=v1777[1]} }
    ?27     = { {defs={}, expr=v1778[1]} }
    ?28     = { {defs={}, expr=v1779[1]} }
    ?29     = { {defs={}, expr=v1780[1]} }
    ?30     = { {defs={}, expr=v1781[1]} }
    ?31     = { {defs={}, expr=v1782[1]} }
    ip      = { {defs={}, expr=0x080482c8[32]} }
memory:
    addr={defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] (add[32] v1741[32] 4[32]) -4[32]) 3[32])} value={defs={0x080484c5}, expr=8[8]}
    addr={defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] (add[32] v1741[32] 4[32]) -4[32]) 2[32])} value={defs={0x080484c5}, expr=4[8]}
    addr={defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] (add[32] v1741[32] 4[32]) -4[32]) 1[32])} value={defs={0x080484c5}, expr=-124[8]}
    addr={defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] v1741[32] 4[32]) -4[32])} value={defs={0x080484c5}, expr=-54[8]}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 3[32])} value={defs={0x080484be}, expr=(extract[8] 24[32] 32[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 2[32])} value={defs={0x080484be}, expr=(extract[8] 16[32] 24[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 1[32])} value={defs={0x080484be}, expr=(extract[8] 8[32] 16[32] v1783[32])}
    addr={defs={}, expr=v1741[32]} value={defs={0x080484be}, expr=(extract[8] 0[32] 8[32] v1783[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080482c8[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
== PartialSymbolic ==
registers:
    ax      = { v2419-0xe0[32] }
    cx      = { v2417[32] }
    dx      = { v2418[32] }
    bx      = { v2419[32] }
    sp      = { v2420[32] }
    bp      = { v2421[32] }
    si      = { v2422[32] }
    di      = { v2423[32] }
    es      = { v2424[16] }
    cs      = { v2425[16] }
    ss      = { v2426[16] }
    ds      = { v2427[16] }
    fs      = { v2428[16] }
    gs      = { v2429[16] }
    cf      = { v2430[1] }
    ?1      = { v2431[1] }
    pf      = { v2432[1] }
    ?3      = { v2433[1] }
    af      = { v2434[1] }
    ?5      = { v2435[1] }
    zf      = { v2436[1] }
    sf      = { v2437[1] }
    tf      = { v2438[1] }
    if      = { v2439[1] }
    df      = { v2440[1] }
    of      = { v2441[1] }
    iopl0   = { v2442[1] }
    iopl1   = { v2443[1] }
    nt      = { v2444[1] }
    ?15     = { v2445[1] }
    rf      = { v2446[1] }
    vm      = { v2447[1] }
    ac      = { v2448[1] }
    vif     = { v2449[1] }
    vip     = { v2450[1] }
    id      = { v2451[1] }
    ?22     = { v2452[1] }
    ?23     = { v2453[1] }
    ?24     = { v2454[1] }
    ?25     = { v2455[1] }
    ?26     = { v2456[1] }
    ?27     = { v2457[1] }
    ?28     = { v2458[1] }
    ?29     = { v2459[1] }
    ?30     = { v2460[1] }
    ?31     = { v2461[1] }
    ip      = { 0x80484d0[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={0x080484ca}, expr=(add[32] v1793[32] -224[32])} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={}, expr=v1792[32]} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={}, expr=v1804[1]} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={}, expr=v1806[1]} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={}, expr=v1808[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={}, expr=v1810[1]} }
    sf      = { {defs={}, expr=v1811[1]} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={}, expr=v1815[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484ca}, expr=0x080484d0[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484d0[32] }
memory:
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
== PartialSymbolic ==
registers:
    ax      = { v2419-0xe0[32] }
    cx      = { v2417[32] }
    dx      = { v2419-0xe0[32] }
    bx      = { v2419[32] }
    sp      = { v2420[32] }
    bp      = { v2421[32] }
    si      = { v2422[32] }
    di      = { v2423[32] }
    es      = { v2424[16] }
    cs      = { v2425[16] }
    ss      = { v2426[16] }
    ds      = { v2427[16] }
    fs      = { v2428[16] }
    gs      = { v2429[16] }
    cf      = { v2430[1] }
    ?1      = { v2431[1] }
    pf      = { v2432[1] }
    ?3      = { v2433[1] }
    af      = { v2434[1] }
    ?5      = { v2435[1] }
    zf      = { v2436[1] }
    sf      = { v2437[1] }
    tf      = { v2438[1] }
    if      = { v2439[1] }
    df      = { v2440[1] }
    of      = { v2441[1] }
    iopl0   = { v2442[1] }
    iopl1   = { v2443[1] }
    nt      = { v2444[1] }
    ?15     = { v2445[1] }
    rf      = { v2446[1] }
    vm      = { v2447[1] }
    ac      = { v2448[1] }
    vif     = { v2449[1] }
    vip     = { v2450[1] }
    id      = { v2451[1] }
    ?22     = { v2452[1] }
    ?23     = { v2453[1] }
    ?24     = { v2454[1] }
    ?25     = { v2455[1] }
    ?26     = { v2456[1] }
    ?27     = { v2457[1] }
    ?28     = { v2458[1] }
    ?29     = { v2459[1] }
    ?30     = { v2460[1] }
    ?31     = { v2461[1] }
    ip      = { 0x80484d6[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={0x080484ca}, expr=(add[32] v1793[32] -224[32])} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={}, expr=v1804[1]} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={}, expr=v1806[1]} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={}, expr=v1808[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={}, expr=v1810[1]} }
    sf      = { {defs={}, expr=v1811[1]} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={}, expr=v1815[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484d0}, expr=0x080484d6[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484d6[32] }
memory:
0x80484d6:sub    eax, edx
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v2417[32] }
    dx      = { v2419-0xe0[32] }
    bx      = { v2419[32] }
    sp      = { v2420[32] }
    bp      = { v2421[32] }
    si      = { v2422[32] }
    di      = { v2423[32] }
    es      = { v2424[16] }
    cs      = { v2425[16] }
    ss      = { v2426[16] }
    ds      = { v2427[16] }
    fs      = { v2428[16] }
    gs      = { v2429[16] }
    cf      = { 0x0[1] }
    ?1      = { v2431[1] }
    pf      = { 0x1[1] }
    ?3      = { v2433[1] }
    af      = { 0x0[1] }
    ?5      = { v2435[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2438[1] }
    if      = { v2439[1] }
    df      = { v2440[1] }
    of      = { 0x0[1] }
    iopl0   = { v2442[1] }
    iopl1   = { v2443[1] }
    nt      = { v2444[1] }
    ?15     = { v2445[1] }
    rf      = { v2446[1] }
    vm      = { v2447[1] }
    ac      = { v2448[1] }
    vif     = { v2449[1] }
    vip     = { v2450[1] }
    id      = { v2451[1] }
    ?22     = { v2452[1] }
    ?23     = { v2453[1] }
    ?24     = { v2454[1] }
    ?25     = { v2455[1] }
    ?26     = { v2456[1] }
    ?27     = { v2457[1] }
    ?28     = { v2458[1] }
    ?29     = { v2459[1] }
    ?30     = { v2460[1] }
    ?31     = { v2461[1] }
    ip      = { 0x80484d8[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) 1[33])))))))} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))))))} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) 1[33])))))))} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(zerop[1] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    sf      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) 1[33])))))))} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484d6}, expr=0x080484d8[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484d8[32] }
memory:
0x80484d8:sar    eax, 0x02
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v2417[32] }
    dx      = { v2419-0xe0[32] }
    bx      = { v2419[32] }
    sp      = { v2420[32] }
    bp      = { v2421[32] }
    si      = { v2422[32] }
    di      = { v2423[32] }
    es      = { v2424[16] }
    cs      = { v2425[16] }
    ss      = { v2426[16] }
    ds      = { v2427[16] }
    fs      = { v2428[16] }
    gs      = { v2429[16] }
    cf      = { 0x0[1] }
    ?1      = { v2431[1] }
    pf      = { 0x1[1] }
    ?3      = { v2433[1] }
    af      = { v2463[1] }
    ?5      = { v2435[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2438[1] }
    if      = { v2439[1] }
    df      = { v2440[1] }
    of      = { v2464[1] }
    iopl0   = { v2442[1] }
    iopl1   = { v2443[1] }
    nt      = { v2444[1] }
    ?15     = { v2445[1] }
    rf      = { v2446[1] }
    vm      = { v2447[1] }
    ac      = { v2448[1] }
    vif     = { v2449[1] }
    vip     = { v2450[1] }
    id      = { v2451[1] }
    ?22     = { v2452[1] }
    ?23     = { v2453[1] }
    ?24     = { v2454[1] }
    ?25     = { v2455[1] }
    ?26     = { v2456[1] }
    ?27     = { v2457[1] }
    ?28     = { v2458[1] }
    ?29     = { v2459[1] }
    ?30     = { v2460[1] }
    ?31     = { v2461[1] }
    ip      = { 0x80484db[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={0x080484d8}, expr=v1837[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    sf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={0x080484d8}, expr=v1838[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484d8}, expr=0x080484db[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484db[32] }
memory:
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v2417[32] }
    dx      = { v2419-0xe0[32] }
    bx      = { v2419[32] }
    sp      = { v2420[32] }
    bp      = { v2421[32] }
    si      = { v2422[32] }
    di      = { v2423[32] }
    es      = { v2424[16] }
    cs      = { v2425[16] }
    ss      = { v2426[16] }
    ds      = { v2427[16] }
    fs      = { v2428[16] }
    gs      = { v2429[16] }
    cf      = { 0x0[1] }
    ?1      = { v2431[1] }
    pf      = { 0x1[1] }
    ?3      = { v2433[1] }
    af      = { v2463[1] }
    ?5      = { v2435[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2438[1] }
    if      = { v2439[1] }
    df      = { v2440[1] }
    of      = { v2464[1] }
    iopl0   = { v2442[1] }
    iopl1   = { v2443[1] }
    nt      = { v2444[1] }
    ?15     = { v2445[1] }
    rf      = { v2446[1] }
    vm      = { v2447[1] }
    ac      = { v2448[1] }
    vif     = { v2449[1] }
    vip     = { v2450[1] }
    id      = { v2451[1] }
    ?22     = { v2452[1] }
    ?23     = { v2453[1] }
    ?24     = { v2454[1] }
    ?25     = { v2455[1] }
    ?26     = { v2456[1] }
    ?27     = { v2457[1] }
    ?28     = { v2458[1] }
    ?29     = { v2459[1] }
    ?30     = { v2460[1] }
    ?31     = { v2461[1] }
    ip      = { 0x80484de[32] }
memory:
    addr=v2421-0x10[32] value=0x0[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={0x080484d8}, expr=v1837[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    sf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={0x080484d8}, expr=v1838[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484db}, expr=0x080484de[32]} }
memory:
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 3[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 2[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 1[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] v1795[32] -16[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484de[32] }
memory:
0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v2417[32] }
    dx      = { v2419-0xe0[32] }
    bx      = { v2419[32] }
    sp      = { v2420[32] }
    bp      = { v2421[32] }
    si      = { v2422[32] }
    di      = { v2423[32] }
    es      = { v2424[16] }
    cs      = { v2425[16] }
    ss      = { v2426[16] }
    ds      = { v2427[16] }
    fs      = { v2428[16] }
    gs      = { v2429[16] }
    cf      = { 0x0[1] }
    ?1      = { v2431[1] }
    pf      = { 0x1[1] }
    ?3      = { v2433[1] }
    af      = { v2463[1] }
    ?5      = { v2435[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2438[1] }
    if      = { v2439[1] }
    df      = { v2440[1] }
    of      = { v2464[1] }
    iopl0   = { v2442[1] }
    iopl1   = { v2443[1] }
    nt      = { v2444[1] }
    ?15     = { v2445[1] }
    rf      = { v2446[1] }
    vm      = { v2447[1] }
    ac      = { v2448[1] }
    vif     = { v2449[1] }
    vip     = { v2450[1] }
    id      = { v2451[1] }
    ?22     = { v2452[1] }
    ?23     = { v2453[1] }
    ?24     = { v2454[1] }
    ?25     = { v2455[1] }
    ?26     = { v2456[1] }
    ?27     = { v2457[1] }
    ?28     = { v2458[1] }
    ?29     = { v2459[1] }
    ?30     = { v2460[1] }
    ?31     = { v2461[1] }
    ip      = { 0x80484e0[32] }
memory:
    addr=v2421-0x10[32] value=0x0[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={0x080484d8}, expr=v1837[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    sf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={0x080484d8}, expr=v1838[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484de}, expr=(ite[32] (invert[1] (zerop[1] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) 0x080484f0[32] 0x080484e0[32])} }
memory:
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 3[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 2[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 1[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] v1795[32] -16[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e0, 0x080484f0[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
== PartialSymbolic ==
registers:
    ax      = { v2467[32] }
    cx      = { v2468[32] }
    dx      = { v2469[32] }
    bx      = { v2470[32] }
    sp      = { v2471+0xc[32] }
    bp      = { v2472[32] }
    si      = { v2473[32] }
    di      = { v2474[32] }
    es      = { v2475[16] }
    cs      = { v2476[16] }
    ss      = { v2477[16] }
    ds      = { v2478[16] }
    fs      = { v2479[16] }
    gs      = { v2480[16] }
    cf      = { v2530[1] }
    ?1      = { v2482[1] }
    pf      = { -v2527+0x1[1] }
    ?3      = { v2484[1] }
    af      = { v2532[1] }
    ?5      = { v2486[1] }
    zf      = { v2529[1] }
    sf      = { v2528[1] }
    tf      = { v2489[1] }
    if      = { v2490[1] }
    df      = { v2491[1] }
    of      = { v2533[1] }
    iopl0   = { v2493[1] }
    iopl1   = { v2494[1] }
    nt      = { v2495[1] }
    ?15     = { v2496[1] }
    rf      = { v2497[1] }
    vm      = { v2498[1] }
    ac      = { v2499[1] }
    vif     = { v2500[1] }
    vip     = { v2501[1] }
    id      = { v2502[1] }
    ?22     = { v2503[1] }
    ?23     = { v2504[1] }
    ?24     = { v2505[1] }
    ?25     = { v2506[1] }
    ?26     = { v2507[1] }
    ?27     = { v2508[1] }
    ?28     = { v2509[1] }
    ?29     = { v2510[1] }
    ?30     = { v2511[1] }
    ?31     = { v2512[1] }
    ip      = { 0x80484e3[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={}, expr=v1844[32]} }
    sp      = { {defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} }
    bp      = { {defs={}, expr=v1846[32]} }
    si      = { {defs={}, expr=v1847[32]} }
    di      = { {defs={}, expr=v1848[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e0}, expr=0x080484e3[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e3[32] }
memory:
0x80484e3:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v2467[32] }
    cx      = { v2468[32] }
    dx      = { v2469[32] }
    bx      = { v2534[32] }
    sp      = { v2471+0x10[32] }
    bp      = { v2472[32] }
    si      = { v2473[32] }
    di      = { v2474[32] }
    es      = { v2475[16] }
    cs      = { v2476[16] }
    ss      = { v2477[16] }
    ds      = { v2478[16] }
    fs      = { v2479[16] }
    gs      = { v2480[16] }
    cf      = { v2530[1] }
    ?1      = { v2482[1] }
    pf      = { -v2527+0x1[1] }
    ?3      = { v2484[1] }
    af      = { v2532[1] }
    ?5      = { v2486[1] }
    zf      = { v2529[1] }
    sf      = { v2528[1] }
    tf      = { v2489[1] }
    if      = { v2490[1] }
    df      = { v2491[1] }
    of      = { v2533[1] }
    iopl0   = { v2493[1] }
    iopl1   = { v2494[1] }
    nt      = { v2495[1] }
    ?15     = { v2496[1] }
    rf      = { v2497[1] }
    vm      = { v2498[1] }
    ac      = { v2499[1] }
    vif     = { v2500[1] }
    vip     = { v2501[1] }
    id      = { v2502[1] }
    ?22     = { v2503[1] }
    ?23     = { v2504[1] }
    ?24     = { v2505[1] }
    ?25     = { v2506[1] }
    ?26     = { v2507[1] }
    ?27     = { v2508[1] }
    ?28     = { v2509[1] }
    ?29     = { v2510[1] }
    ?30     = { v2511[1] }
    ?31     = { v2512[1] }
    ip      = { 0x80484e4[32] }
memory:
    addr=v2471+0xc[32] value=v2534[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} }
    bp      = { {defs={}, expr=v1846[32]} }
    si      = { {defs={}, expr=v1847[32]} }
    di      = { {defs={}, expr=v1848[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e3}, expr=0x080484e4[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e4[32] }
memory:
0x80484e4:pop    esi
== PartialSymbolic ==
registers:
    ax      = { v2467[32] }
    cx      = { v2468[32] }
    dx      = { v2469[32] }
    bx      = { v2534[32] }
    sp      = { v2471+0x14[32] }
    bp      = { v2472[32] }
    si      = { v2536[32] }
    di      = { v2474[32] }
    es      = { v2475[16] }
    cs      = { v2476[16] }
    ss      = { v2477[16] }
    ds      = { v2478[16] }
    fs      = { v2479[16] }
    gs      = { v2480[16] }
    cf      = { v2530[1] }
    ?1      = { v2482[1] }
    pf      = { -v2527+0x1[1] }
    ?3      = { v2484[1] }
    af      = { v2532[1] }
    ?5      = { v2486[1] }
    zf      = { v2529[1] }
    sf      = { v2528[1] }
    tf      = { v2489[1] }
    if      = { v2490[1] }
    df      = { v2491[1] }
    of      = { v2533[1] }
    iopl0   = { v2493[1] }
    iopl1   = { v2494[1] }
    nt      = { v2495[1] }
    ?15     = { v2496[1] }
    rf      = { v2497[1] }
    vm      = { v2498[1] }
    ac      = { v2499[1] }
    vif     = { v2500[1] }
    vip     = { v2501[1] }
    id      = { v2502[1] }
    ?22     = { v2503[1] }
    ?23     = { v2504[1] }
    ?24     = { v2505[1] }
    ?25     = { v2506[1] }
    ?26     = { v2507[1] }
    ?27     = { v2508[1] }
    ?28     = { v2509[1] }
    ?29     = { v2510[1] }
    ?30     = { v2511[1] }
    ?31     = { v2512[1] }
    ip      = { 0x80484e5[32] }
memory:
    addr=v2471+0x10[32] value=v2536[32]
    addr=v2471+0xc[32] value=v2534[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v1846[32]} }
    si      = { {defs={0x080484e4}, expr=v1892[32]} }
    di      = { {defs={}, expr=v1848[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e4}, expr=0x080484e5[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 3[32])} value={defs={0x080484e4}, expr=(extract[8] 24[32] 32[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 2[32])} value={defs={0x080484e4}, expr=(extract[8] 16[32] 24[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 1[32])} value={defs={0x080484e4}, expr=(extract[8] 8[32] 16[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} value={defs={0x080484e4}, expr=(extract[8] 0[32] 8[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e5[32] }
memory:
0x80484e5:pop    edi
== PartialSymbolic ==
registers:
    ax      = { v2467[32] }
    cx      = { v2468[32] }
    dx      = { v2469[32] }
    bx      = { v2534[32] }
    sp      = { v2471+0x18[32] }
    bp      = { v2472[32] }
    si      = { v2536[32] }
    di      = { v2538[32] }
    es      = { v2475[16] }
    cs      = { v2476[16] }
    ss      = { v2477[16] }
    ds      = { v2478[16] }
    fs      = { v2479[16] }
    gs      = { v2480[16] }
    cf      = { v2530[1] }
    ?1      = { v2482[1] }
    pf      = { -v2527+0x1[1] }
    ?3      = { v2484[1] }
    af      = { v2532[1] }
    ?5      = { v2486[1] }
    zf      = { v2529[1] }
    sf      = { v2528[1] }
    tf      = { v2489[1] }
    if      = { v2490[1] }
    df      = { v2491[1] }
    of      = { v2533[1] }
    iopl0   = { v2493[1] }
    iopl1   = { v2494[1] }
    nt      = { v2495[1] }
    ?15     = { v2496[1] }
    rf      = { v2497[1] }
    vm      = { v2498[1] }
    ac      = { v2499[1] }
    vif     = { v2500[1] }
    vip     = { v2501[1] }
    id      = { v2502[1] }
    ?22     = { v2503[1] }
    ?23     = { v2504[1] }
    ?24     = { v2505[1] }
    ?25     = { v2506[1] }
    ?26     = { v2507[1] }
    ?27     = { v2508[1] }
    ?28     = { v2509[1] }
    ?29     = { v2510[1] }
    ?30     = { v2511[1] }
    ?31     = { v2512[1] }
    ip      = { 0x80484e6[32] }
memory:
    addr=v2471+0x14[32] value=v2538[32]
    addr=v2471+0x10[32] value=v2536[32]
    addr=v2471+0xc[32] value=v2534[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v1846[32]} }
    si      = { {defs={0x080484e4}, expr=v1892[32]} }
    di      = { {defs={0x080484e5}, expr=v1897[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e5}, expr=0x080484e6[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e5}, expr=(extract[8] 24[32] 32[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e5}, expr=(extract[8] 16[32] 24[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e5}, expr=(extract[8] 8[32] 16[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32])} value={defs={0x080484e5}, expr=(extract[8] 0[32] 8[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 3[32])} value={defs={0x080484e4}, expr=(extract[8] 24[32] 32[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 2[32])} value={defs={0x080484e4}, expr=(extract[8] 16[32] 24[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 1[32])} value={defs={0x080484e4}, expr=(extract[8] 8[32] 16[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} value={defs={0x080484e4}, expr=(extract[8] 0[32] 8[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e6[32] }
memory:
0x80484e6:pop    ebp
== PartialSymbolic ==
registers:
    ax      = { v2467[32] }
    cx      = { v2468[32] }
    dx      = { v2469[32] }
    bx      = { v2534[32] }
    sp      = { v2471+0x1c[32] }
    bp      = { v2540[32] }
    si      = { v2536[32] }
    di      = { v2538[32] }
    es      = { v2475[16] }
    cs      = { v2476[16] }
    ss      = { v2477[16] }
    ds      = { v2478[16] }
    fs      = { v2479[16] }
    gs      = { v2480[16] }
    cf      = { v2530[1] }
    ?1      = { v2482[1] }
    pf      = { -v2527+0x1[1] }
    ?3      = { v2484[1] }
    af      = { v2532[1] }
    ?5      = { v2486[1] }
    zf      = { v2529[1] }
    sf      = { v2528[1] }
    tf      = { v2489[1] }
    if      = { v2490[1] }
    df      = { v2491[1] }
    of      = { v2533[1] }
    iopl0   = { v2493[1] }
    iopl1   = { v2494[1] }
    nt      = { v2495[1] }
    ?15     = { v2496[1] }
    rf      = { v2497[1] }
    vm      = { v2498[1] }
    ac      = { v2499[1] }
    vif     = { v2500[1] }
    vip     = { v2501[1] }
    id      = { v2502[1] }
    ?22     = { v2503[1] }
    ?23     = { v2504[1] }
    ?24     = { v2505[1] }
    ?25     = { v2506[1] }
    ?26     = { v2507[1] }
    ?27     = { v2508[1] }
    ?28     = { v2509[1] }
    ?29     = { v2510[1] }
    ?30     = { v2511[1] }
    ?31     = { v2512[1] }
    ip      = { 0x80484e7[32] }
memory:
    addr=v2471+0x18[32] value=v2540[32]
    addr=v2471+0x14[32] value=v2538[32]
    addr=v2471+0x10[32] value=v2536[32]
    addr=v2471+0xc[32] value=v2534[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x080484e6}, expr=v1902[32]} }
    si      = { {defs={0x080484e4}, expr=v1892[32]} }
    di      = { {defs={0x080484e5}, expr=v1897[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e6}, expr=0x080484e7[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e6}, expr=(extract[8] 24[32] 32[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e6}, expr=(extract[8] 16[32] 24[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e6}, expr=(extract[8] 8[32] 16[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32])} value={defs={0x080484e6}, expr=(extract[8] 0[32] 8[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e5}, expr=(extract[8] 24[32] 32[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e5}, expr=(extract[8] 16[32] 24[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e5}, expr=(extract[8] 8[32] 16[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32])} value={defs={0x080484e5}, expr=(extract[8] 0[32] 8[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 3[32])} value={defs={0x080484e4}, expr=(extract[8] 24[32] 32[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 2[32])} value={defs={0x080484e4}, expr=(extract[8] 16[32] 24[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 1[32])} value={defs={0x080484e4}, expr=(extract[8] 8[32] 16[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} value={defs={0x080484e4}, expr=(extract[8] 0[32] 8[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080484e7[32] }
memory:
0x80484e7:ret    
== PartialSymbolic ==
registers:
    ax      = { v2467[32] }
    cx      = { v2468[32] }
    dx      = { v2469[32] }
    bx      = { v2534[32] }
    sp      = { v2471+0x20[32] }
    bp      = { v2540[32] }
    si      = { v2536[32] }
    di      = { v2538[32] }
    es      = { v2475[16] }
    cs      = { v2476[16] }
    ss      = { v2477[16] }
    ds      = { v2478[16] }
    fs      = { v2479[16] }
    gs      = { v2480[16] }
    cf      = { v2530[1] }
    ?1      = { v2482[1] }
    pf      = { -v2527+0x1[1] }
    ?3      = { v2484[1] }
    af      = { v2532[1] }
    ?5      = { v2486[1] }
    zf      = { v2529[1] }
    sf      = { v2528[1] }
    tf      = { v2489[1] }
    if      = { v2490[1] }
    df      = { v2491[1] }
    of      = { v2533[1] }
    iopl0   = { v2493[1] }
    iopl1   = { v2494[1] }
    nt      = { v2495[1] }
    ?15     = { v2496[1] }
    rf      = { v2497[1] }
    vm      = { v2498[1] }
    ac      = { v2499[1] }
    vif     = { v2500[1] }
    vip     = { v2501[1] }
    id      = { v2502[1] }
    ?22     = { v2503[1] }
    ?23     = { v2504[1] }
    ?24     = { v2505[1] }
    ?25     = { v2506[1] }
    ?26     = { v2507[1] }
    ?27     = { v2508[1] }
    ?28     = { v2509[1] }
    ?29     = { v2510[1] }
    ?30     = { v2511[1] }
    ?31     = { v2512[1] }
    ip      = { v2542[32] }
memory:
    addr=v2471+0x1c[32] value=v2542[32]
    addr=v2471+0x18[32] value=v2540[32]
    addr=v2471+0x14[32] value=v2538[32]
    addr=v2471+0x10[32] value=v2536[32]
    addr=v2471+0xc[32] value=v2534[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x080484e6}, expr=v1902[32]} }
    si      = { {defs={0x080484e4}, expr=v1892[32]} }
    di      = { {defs={0x080484e5}, expr=v1897[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e7}, expr=v1907[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e7}, expr=(extract[8] 24[32] 32[32] v1907[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e7}, expr=(extract[8] 16[32] 24[32] v1907[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e7}, expr=(extract[8] 8[32] 16[32] v1907[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])} value={defs={0x080484e7}, expr=(extract[8] 0[32] 8[32] v1907[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e6}, expr=(extract[8] 24[32] 32[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e6}, expr=(extract[8] 16[32] 24[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e6}, expr=(extract[8] 8[32] 16[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32])} value={defs={0x080484e6}, expr=(extract[8] 0[32] 8[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e5}, expr=(extract[8] 24[32] 32[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e5}, expr=(extract[8] 16[32] 24[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e5}, expr=(extract[8] 8[32] 16[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32])} value={defs={0x080484e5}, expr=(extract[8] 0[32] 8[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 3[32])} value={defs={0x080484e4}, expr=(extract[8] 24[32] 32[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 2[32])} value={defs={0x080484e4}, expr=(extract[8] 16[32] 24[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 1[32])} value={defs={0x080484e4}, expr=(extract[8] 8[32] 16[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} value={defs={0x080484e4}, expr=(extract[8] 0[32] 8[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v2546[32] }
    cx      = { v2547[32] }
    dx      = { v2548[32] }
    bx      = { v2549[32] }
    sp      = { v2550-0x4[32] }
    bp      = { v2551[32] }
    si      = { v2552[32] }
    di      = { v2553[32] }
    es      = { v2554[16] }
    cs      = { v2555[16] }
    ss      = { v2556[16] }
    ds      = { v2557[16] }
    fs      = { v2558[16] }
    gs      = { v2559[16] }
    cf      = { v2560[1] }
    ?1      = { v2561[1] }
    pf      = { v2562[1] }
    ?3      = { v2563[1] }
    af      = { v2564[1] }
    ?5      = { v2565[1] }
    zf      = { v2566[1] }
    sf      = { v2567[1] }
    tf      = { v2568[1] }
    if      = { v2569[1] }
    df      = { v2570[1] }
    of      = { v2571[1] }
    iopl0   = { v2572[1] }
    iopl1   = { v2573[1] }
    nt      = { v2574[1] }
    ?15     = { v2575[1] }
    rf      = { v2576[1] }
    vm      = { v2577[1] }
    ac      = { v2578[1] }
    vif     = { v2579[1] }
    vip     = { v2580[1] }
    id      = { v2581[1] }
    ?22     = { v2582[1] }
    ?23     = { v2583[1] }
    ?24     = { v2584[1] }
    ?25     = { v2585[1] }
    ?26     = { v2586[1] }
    ?27     = { v2587[1] }
    ?28     = { v2588[1] }
    ?29     = { v2589[1] }
    ?30     = { v2590[1] }
    ?31     = { v2591[1] }
    ip      = { 0x8048521[32] }
memory:
    addr=v2550-0x4[32] value=v2551[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    bp      = { {defs={}, expr=v1919[32]} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048520}, expr=0x08048521[32]} }
memory:
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048521[32] }
memory:
0x8048521:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v2546[32] }
    cx      = { v2547[32] }
    dx      = { v2548[32] }
    bx      = { v2549[32] }
    sp      = { v2550-0x4[32] }
    bp      = { v2550-0x4[32] }
    si      = { v2552[32] }
    di      = { v2553[32] }
    es      = { v2554[16] }
    cs      = { v2555[16] }
    ss      = { v2556[16] }
    ds      = { v2557[16] }
    fs      = { v2558[16] }
    gs      = { v2559[16] }
    cf      = { v2560[1] }
    ?1      = { v2561[1] }
    pf      = { v2562[1] }
    ?3      = { v2563[1] }
    af      = { v2564[1] }
    ?5      = { v2565[1] }
    zf      = { v2566[1] }
    sf      = { v2567[1] }
    tf      = { v2568[1] }
    if      = { v2569[1] }
    df      = { v2570[1] }
    of      = { v2571[1] }
    iopl0   = { v2572[1] }
    iopl1   = { v2573[1] }
    nt      = { v2574[1] }
    ?15     = { v2575[1] }
    rf      = { v2576[1] }
    vm      = { v2577[1] }
    ac      = { v2578[1] }
    vif     = { v2579[1] }
    vip     = { v2580[1] }
    id      = { v2581[1] }
    ?22     = { v2582[1] }
    ?23     = { v2583[1] }
    ?24     = { v2584[1] }
    ?25     = { v2585[1] }
    ?26     = { v2586[1] }
    ?27     = { v2587[1] }
    ?28     = { v2588[1] }
    ?29     = { v2589[1] }
    ?30     = { v2590[1] }
    ?31     = { v2591[1] }
    ip      = { 0x8048523[32] }
memory:
    addr=v2550-0x4[32] value=v2551[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048521}, expr=0x08048523[32]} }
memory:
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048523[32] }
memory:
0x8048523:push   edi
== PartialSymbolic ==
registers:
    ax      = { v2546[32] }
    cx      = { v2547[32] }
    dx      = { v2548[32] }
    bx      = { v2549[32] }
    sp      = { v2550-0x8[32] }
    bp      = { v2550-0x4[32] }
    si      = { v2552[32] }
    di      = { v2553[32] }
    es      = { v2554[16] }
    cs      = { v2555[16] }
    ss      = { v2556[16] }
    ds      = { v2557[16] }
    fs      = { v2558[16] }
    gs      = { v2559[16] }
    cf      = { v2560[1] }
    ?1      = { v2561[1] }
    pf      = { v2562[1] }
    ?3      = { v2563[1] }
    af      = { v2564[1] }
    ?5      = { v2565[1] }
    zf      = { v2566[1] }
    sf      = { v2567[1] }
    tf      = { v2568[1] }
    if      = { v2569[1] }
    df      = { v2570[1] }
    of      = { v2571[1] }
    iopl0   = { v2572[1] }
    iopl1   = { v2573[1] }
    nt      = { v2574[1] }
    ?15     = { v2575[1] }
    rf      = { v2576[1] }
    vm      = { v2577[1] }
    ac      = { v2578[1] }
    vif     = { v2579[1] }
    vip     = { v2580[1] }
    id      = { v2581[1] }
    ?22     = { v2582[1] }
    ?23     = { v2583[1] }
    ?24     = { v2584[1] }
    ?25     = { v2585[1] }
    ?26     = { v2586[1] }
    ?27     = { v2587[1] }
    ?28     = { v2588[1] }
    ?29     = { v2589[1] }
    ?30     = { v2590[1] }
    ?31     = { v2591[1] }
    ip      = { 0x8048524[32] }
memory:
    addr=v2550-0x8[32] value=v2553[32]
    addr=v2550-0x4[32] value=v2551[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048523}, expr=0x08048524[32]} }
memory:
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048524[32] }
memory:
0x8048524:push   esi
== PartialSymbolic ==
registers:
    ax      = { v2546[32] }
    cx      = { v2547[32] }
    dx      = { v2548[32] }
    bx      = { v2549[32] }
    sp      = { v2550-0xc[32] }
    bp      = { v2550-0x4[32] }
    si      = { v2552[32] }
    di      = { v2553[32] }
    es      = { v2554[16] }
    cs      = { v2555[16] }
    ss      = { v2556[16] }
    ds      = { v2557[16] }
    fs      = { v2558[16] }
    gs      = { v2559[16] }
    cf      = { v2560[1] }
    ?1      = { v2561[1] }
    pf      = { v2562[1] }
    ?3      = { v2563[1] }
    af      = { v2564[1] }
    ?5      = { v2565[1] }
    zf      = { v2566[1] }
    sf      = { v2567[1] }
    tf      = { v2568[1] }
    if      = { v2569[1] }
    df      = { v2570[1] }
    of      = { v2571[1] }
    iopl0   = { v2572[1] }
    iopl1   = { v2573[1] }
    nt      = { v2574[1] }
    ?15     = { v2575[1] }
    rf      = { v2576[1] }
    vm      = { v2577[1] }
    ac      = { v2578[1] }
    vif     = { v2579[1] }
    vip     = { v2580[1] }
    id      = { v2581[1] }
    ?22     = { v2582[1] }
    ?23     = { v2583[1] }
    ?24     = { v2584[1] }
    ?25     = { v2585[1] }
    ?26     = { v2586[1] }
    ?27     = { v2587[1] }
    ?28     = { v2588[1] }
    ?29     = { v2589[1] }
    ?30     = { v2590[1] }
    ?31     = { v2591[1] }
    ip      = { 0x8048525[32] }
memory:
    addr=v2550-0xc[32] value=v2552[32]
    addr=v2550-0x8[32] value=v2553[32]
    addr=v2550-0x4[32] value=v2551[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048524}, expr=0x08048525[32]} }
memory:
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048524}, expr=(extract[8] 24[32] 32[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048524}, expr=(extract[8] 16[32] 24[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048524}, expr=(extract[8] 8[32] 16[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048524}, expr=(extract[8] 0[32] 8[32] v1920[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048525[32] }
memory:
0x8048525:push   ebx
== PartialSymbolic ==
registers:
    ax      = { v2546[32] }
    cx      = { v2547[32] }
    dx      = { v2548[32] }
    bx      = { v2549[32] }
    sp      = { v2550-0x10[32] }
    bp      = { v2550-0x4[32] }
    si      = { v2552[32] }
    di      = { v2553[32] }
    es      = { v2554[16] }
    cs      = { v2555[16] }
    ss      = { v2556[16] }
    ds      = { v2557[16] }
    fs      = { v2558[16] }
    gs      = { v2559[16] }
    cf      = { v2560[1] }
    ?1      = { v2561[1] }
    pf      = { v2562[1] }
    ?3      = { v2563[1] }
    af      = { v2564[1] }
    ?5      = { v2565[1] }
    zf      = { v2566[1] }
    sf      = { v2567[1] }
    tf      = { v2568[1] }
    if      = { v2569[1] }
    df      = { v2570[1] }
    of      = { v2571[1] }
    iopl0   = { v2572[1] }
    iopl1   = { v2573[1] }
    nt      = { v2574[1] }
    ?15     = { v2575[1] }
    rf      = { v2576[1] }
    vm      = { v2577[1] }
    ac      = { v2578[1] }
    vif     = { v2579[1] }
    vip     = { v2580[1] }
    id      = { v2581[1] }
    ?22     = { v2582[1] }
    ?23     = { v2583[1] }
    ?24     = { v2584[1] }
    ?25     = { v2585[1] }
    ?26     = { v2586[1] }
    ?27     = { v2587[1] }
    ?28     = { v2588[1] }
    ?29     = { v2589[1] }
    ?30     = { v2590[1] }
    ?31     = { v2591[1] }
    ip      = { 0x8048526[32] }
memory:
    addr=v2550-0x10[32] value=v2549[32]
    addr=v2550-0xc[32] value=v2552[32]
    addr=v2550-0x8[32] value=v2553[32]
    addr=v2550-0x4[32] value=v2551[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048525}, expr=0x08048526[32]} }
memory:
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048525}, expr=(extract[8] 24[32] 32[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048525}, expr=(extract[8] 16[32] 24[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048525}, expr=(extract[8] 8[32] 16[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048525}, expr=(extract[8] 0[32] 8[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048524}, expr=(extract[8] 24[32] 32[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048524}, expr=(extract[8] 16[32] 24[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048524}, expr=(extract[8] 8[32] 16[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048524}, expr=(extract[8] 0[32] 8[32] v1920[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048526[32] }
memory:
0x8048526:sub    esp, 0x0c
== PartialSymbolic ==
registers:
    ax      = { v2546[32] }
    cx      = { v2547[32] }
    dx      = { v2548[32] }
    bx      = { v2549[32] }
    sp      = { v2550-0x1c[32] }
    bp      = { v2550-0x4[32] }
    si      = { v2552[32] }
    di      = { v2553[32] }
    es      = { v2554[16] }
    cs      = { v2555[16] }
    ss      = { v2556[16] }
    ds      = { v2557[16] }
    fs      = { v2558[16] }
    gs      = { v2559[16] }
    cf      = { -v2609+0x1[1] }
    ?1      = { v2561[1] }
    pf      = { -v2606+0x1[1] }
    ?3      = { v2563[1] }
    af      = { -v2611+0x1[1] }
    ?5      = { v2565[1] }
    zf      = { v2608[1] }
    sf      = { v2607[1] }
    tf      = { v2568[1] }
    if      = { v2569[1] }
    df      = { v2570[1] }
    of      = { v2612[1] }
    iopl0   = { v2572[1] }
    iopl1   = { v2573[1] }
    nt      = { v2574[1] }
    ?15     = { v2575[1] }
    rf      = { v2576[1] }
    vm      = { v2577[1] }
    ac      = { v2578[1] }
    vif     = { v2579[1] }
    vip     = { v2580[1] }
    id      = { v2581[1] }
    ?22     = { v2582[1] }
    ?23     = { v2583[1] }
    ?24     = { v2584[1] }
    ?25     = { v2585[1] }
    ?26     = { v2586[1] }
    ?27     = { v2587[1] }
    ?28     = { v2588[1] }
    ?29     = { v2589[1] }
    ?30     = { v2590[1] }
    ?31     = { v2591[1] }
    ip      = { 0x8048529[32] }
memory:
    addr=v2550-0x10[32] value=v2549[32]
    addr=v2550-0xc[32] value=v2552[32]
    addr=v2550-0x8[32] value=v2553[32]
    addr=v2550-0x4[32] value=v2551[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    sf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048526}, expr=0x08048529[32]} }
memory:
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048525}, expr=(extract[8] 24[32] 32[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048525}, expr=(extract[8] 16[32] 24[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048525}, expr=(extract[8] 8[32] 16[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048525}, expr=(extract[8] 0[32] 8[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048524}, expr=(extract[8] 24[32] 32[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048524}, expr=(extract[8] 16[32] 24[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048524}, expr=(extract[8] 8[32] 16[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048524}, expr=(extract[8] 0[32] 8[32] v1920[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048529[32] }
memory:
0x8048529:call   0x0804852e<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v2546[32] }
    cx      = { v2547[32] }
    dx      = { v2548[32] }
    bx      = { v2549[32] }
    sp      = { v2550-0x20[32] }
    bp      = { v2550-0x4[32] }
    si      = { v2552[32] }
    di      = { v2553[32] }
    es      = { v2554[16] }
    cs      = { v2555[16] }
    ss      = { v2556[16] }
    ds      = { v2557[16] }
    fs      = { v2558[16] }
    gs      = { v2559[16] }
    cf      = { -v2609+0x1[1] }
    ?1      = { v2561[1] }
    pf      = { -v2606+0x1[1] }
    ?3      = { v2563[1] }
    af      = { -v2611+0x1[1] }
    ?5      = { v2565[1] }
    zf      = { v2608[1] }
    sf      = { v2607[1] }
    tf      = { v2568[1] }
    if      = { v2569[1] }
    df      = { v2570[1] }
    of      = { v2612[1] }
    iopl0   = { v2572[1] }
    iopl1   = { v2573[1] }
    nt      = { v2574[1] }
    ?15     = { v2575[1] }
    rf      = { v2576[1] }
    vm      = { v2577[1] }
    ac      = { v2578[1] }
    vif     = { v2579[1] }
    vip     = { v2580[1] }
    id      = { v2581[1] }
    ?22     = { v2582[1] }
    ?23     = { v2583[1] }
    ?24     = { v2584[1] }
    ?25     = { v2585[1] }
    ?26     = { v2586[1] }
    ?27     = { v2587[1] }
    ?28     = { v2588[1] }
    ?29     = { v2589[1] }
    ?30     = { v2590[1] }
    ?31     = { v2591[1] }
    ip      = { 0x804852e[32] }
memory:
    addr=v2550-0x20[32] value=0x804852e[32]
    addr=v2550-0x10[32] value=v2549[32]
    addr=v2550-0xc[32] value=v2552[32]
    addr=v2550-0x8[32] value=v2553[32]
    addr=v2550-0x4[32] value=v2551[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    sf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={}, expr=0x0804852e[32]} }
memory:
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 3[32])} value={defs={0x08048529}, expr=8[8]}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 2[32])} value={defs={0x08048529}, expr=4[8]}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 1[32])} value={defs={0x08048529}, expr=-123[8]}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])} value={defs={0x08048529}, expr=46[8]}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048525}, expr=(extract[8] 24[32] 32[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048525}, expr=(extract[8] 16[32] 24[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048525}, expr=(extract[8] 8[32] 16[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048525}, expr=(extract[8] 0[32] 8[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048524}, expr=(extract[8] 24[32] 32[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048524}, expr=(extract[8] 16[32] 24[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048524}, expr=(extract[8] 8[32] 16[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048524}, expr=(extract[8] 0[32] 8[32] v1920[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804852e[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v2615[32] }
    cx      = { v2616[32] }
    dx      = { v2617[32] }
    bx      = { v2661[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { v2629[1] }
    ?1      = { v2630[1] }
    pf      = { v2631[1] }
    ?3      = { v2632[1] }
    af      = { v2633[1] }
    ?5      = { v2634[1] }
    zf      = { v2635[1] }
    sf      = { v2636[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { v2640[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x804852f[32] }
memory:
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1962[32]} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={}, expr=v1964[32]} }
    bx      = { {defs={0x0804852e}, expr=v2008[32]} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={}, expr=v1976[1]} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={}, expr=v1978[1]} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={}, expr=v1980[1]} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={}, expr=v1982[1]} }
    sf      = { {defs={}, expr=v1983[1]} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={}, expr=v1987[1]} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804852e}, expr=0x0804852f[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804852f[32] }
memory:
0x804852f:add    ebx, 0x0000119a
== PartialSymbolic ==
registers:
    ax      = { v2615[32] }
    cx      = { v2616[32] }
    dx      = { v2617[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { v2680[1] }
    ?1      = { v2630[1] }
    pf      = { -v2677+0x1[1] }
    ?3      = { v2632[1] }
    af      = { v2682[1] }
    ?5      = { v2634[1] }
    zf      = { v2679[1] }
    sf      = { v2678[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { v2683[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x8048535[32] }
memory:
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v1962[32]} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={}, expr=v1964[32]} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f}, expr=(zerop[1] (add[32] v2008[32] 4506[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v2008[32] 4506[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804852f}, expr=0x08048535[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048535[32] }
memory:
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
== PartialSymbolic ==
registers:
    ax      = { v2661+0x10ba[32] }
    cx      = { v2616[32] }
    dx      = { v2617[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { v2680[1] }
    ?1      = { v2630[1] }
    pf      = { -v2677+0x1[1] }
    ?3      = { v2632[1] }
    af      = { v2682[1] }
    ?5      = { v2634[1] }
    zf      = { v2679[1] }
    sf      = { v2678[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { v2683[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x804853b[32] }
memory:
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={}, expr=v1964[32]} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f}, expr=(zerop[1] (add[32] v2008[32] 4506[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v2008[32] 4506[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048535}, expr=0x0804853b[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804853b[32] }
memory:
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
== PartialSymbolic ==
registers:
    ax      = { v2661+0x10ba[32] }
    cx      = { v2616[32] }
    dx      = { v2661+0x10ba[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { v2680[1] }
    ?1      = { v2630[1] }
    pf      = { -v2677+0x1[1] }
    ?3      = { v2632[1] }
    af      = { v2682[1] }
    ?5      = { v2634[1] }
    zf      = { v2679[1] }
    sf      = { v2678[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { v2683[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x8048541[32] }
memory:
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f}, expr=(zerop[1] (add[32] v2008[32] 4506[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v2008[32] 4506[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804853b}, expr=0x08048541[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048541[32] }
memory:
0x8048541:sub    eax, edx
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v2616[32] }
    dx      = { v2661+0x10ba[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { 0x0[1] }
    ?1      = { v2630[1] }
    pf      = { 0x1[1] }
    ?3      = { v2632[1] }
    af      = { 0x0[1] }
    ?5      = { v2634[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { 0x0[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x8048543[32] }
memory:
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) 1[33])))))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) 1[33])))))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(zerop[1] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) 1[33])))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048541}, expr=0x08048543[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048543[32] }
memory:
0x8048543:sar    eax, 0x02
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v2616[32] }
    dx      = { v2661+0x10ba[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { 0x0[1] }
    ?1      = { v2630[1] }
    pf      = { 0x1[1] }
    ?3      = { v2632[1] }
    af      = { v2685[1] }
    ?5      = { v2634[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { v2686[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x8048546[32] }
memory:
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x08048543}, expr=v2014[1]} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x08048543}, expr=v2015[1]} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048543}, expr=0x08048546[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048546[32] }
memory:
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
== PartialSymbolic ==
registers:
    ax      = { 0x0[32] }
    cx      = { v2616[32] }
    dx      = { v2661+0x10ba[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { 0x0[1] }
    ?1      = { v2630[1] }
    pf      = { 0x1[1] }
    ?3      = { v2632[1] }
    af      = { v2685[1] }
    ?5      = { v2634[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { v2686[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x8048549[32] }
memory:
    addr=v2620-0x10[32] value=0x0[32]
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x08048543}, expr=v2014[1]} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x08048543}, expr=v2015[1]} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048546}, expr=0x08048549[32]} }
memory:
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 3[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 2[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 1[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] v1967[32] -16[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048549[32] }
memory:
0x8048549:dec    eax
== PartialSymbolic ==
registers:
    ax      = { 0xffffffff (-0x1)[32] }
    cx      = { v2616[32] }
    dx      = { v2661+0x10ba[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { 0x0[1] }
    ?1      = { v2630[1] }
    pf      = { 0x1[1] }
    ?3      = { v2632[1] }
    af      = { 0x1[1] }
    ?5      = { v2634[1] }
    zf      = { 0x0[1] }
    sf      = { 0x1[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { 0x0[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x804854a[32] }
memory:
    addr=v2620-0x10[32] value=0x0[32]
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048549}, expr=0x0804854a[32]} }
memory:
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 3[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 2[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 1[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] v1967[32] -16[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804854a[32] }
memory:
0x804854a:cmp    eax, 0xff<-0x01>
== PartialSymbolic ==
registers:
    ax      = { 0xffffffff (-0x1)[32] }
    cx      = { v2616[32] }
    dx      = { v2661+0x10ba[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { 0x0[1] }
    ?1      = { v2630[1] }
    pf      = { 0x1[1] }
    ?3      = { v2632[1] }
    af      = { 0x0[1] }
    ?5      = { v2634[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { 0x0[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x804854d[32] }
memory:
    addr=v2620-0x10[32] value=0x0[32]
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804854a}, expr=0x0804854d[32]} }
memory:
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 3[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 2[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 1[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] v1967[32] -16[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804854d[32] }
memory:
0x804854d:je     0x0804856b<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { 0xffffffff (-0x1)[32] }
    cx      = { v2616[32] }
    dx      = { v2661+0x10ba[32] }
    bx      = { v2661+0x119a[32] }
    sp      = { v2619+0x4[32] }
    bp      = { v2620[32] }
    si      = { v2621[32] }
    di      = { v2622[32] }
    es      = { v2623[16] }
    cs      = { v2624[16] }
    ss      = { v2625[16] }
    ds      = { v2626[16] }
    fs      = { v2627[16] }
    gs      = { v2628[16] }
    cf      = { 0x0[1] }
    ?1      = { v2630[1] }
    pf      = { 0x1[1] }
    ?3      = { v2632[1] }
    af      = { 0x0[1] }
    ?5      = { v2634[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2637[1] }
    if      = { v2638[1] }
    df      = { v2639[1] }
    of      = { 0x0[1] }
    iopl0   = { v2641[1] }
    iopl1   = { v2642[1] }
    nt      = { v2643[1] }
    ?15     = { v2644[1] }
    rf      = { v2645[1] }
    vm      = { v2646[1] }
    ac      = { v2647[1] }
    vif     = { v2648[1] }
    vip     = { v2649[1] }
    id      = { v2650[1] }
    ?22     = { v2651[1] }
    ?23     = { v2652[1] }
    ?24     = { v2653[1] }
    ?25     = { v2654[1] }
    ?26     = { v2655[1] }
    ?27     = { v2656[1] }
    ?28     = { v2657[1] }
    ?29     = { v2658[1] }
    ?30     = { v2659[1] }
    ?31     = { v2660[1] }
    ip      = { 0x804856b[32] }
memory:
    addr=v2620-0x10[32] value=0x0[32]
    addr=v2619[32] value=v2661[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a,0x0804854d}, expr=(ite[32] (zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) 0x0804856b[32] 0x0804854f[32])} }
memory:
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 3[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 2[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 1[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] v1967[32] -16[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804854f, 0x0804856b[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
== PartialSymbolic ==
registers:
    ax      = { v2689[32] }
    cx      = { v2690[32] }
    dx      = { v2691[32] }
    bx      = { v2692[32] }
    sp      = { v2693[32] }
    bp      = { v2694[32] }
    si      = { v2736[32] }
    di      = { v2696[32] }
    es      = { v2697[16] }
    cs      = { v2698[16] }
    ss      = { v2699[16] }
    ds      = { v2700[16] }
    fs      = { v2701[16] }
    gs      = { v2702[16] }
    cf      = { v2703[1] }
    ?1      = { v2704[1] }
    pf      = { v2705[1] }
    ?3      = { v2706[1] }
    af      = { v2707[1] }
    ?5      = { v2708[1] }
    zf      = { v2709[1] }
    sf      = { v2710[1] }
    tf      = { v2711[1] }
    if      = { v2712[1] }
    df      = { v2713[1] }
    of      = { v2714[1] }
    iopl0   = { v2715[1] }
    iopl1   = { v2716[1] }
    nt      = { v2717[1] }
    ?15     = { v2718[1] }
    rf      = { v2719[1] }
    vm      = { v2720[1] }
    ac      = { v2721[1] }
    vif     = { v2722[1] }
    vip     = { v2723[1] }
    id      = { v2724[1] }
    ?22     = { v2725[1] }
    ?23     = { v2726[1] }
    ?24     = { v2727[1] }
    ?25     = { v2728[1] }
    ?26     = { v2729[1] }
    ?27     = { v2730[1] }
    ?28     = { v2731[1] }
    ?29     = { v2732[1] }
    ?30     = { v2733[1] }
    ?31     = { v2734[1] }
    ip      = { 0x8048552[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={}, expr=v2022[32]} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={}, expr=v2025[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={}, expr=v2032[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={}, expr=v2034[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2036[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={}, expr=v2038[1]} }
    sf      = { {defs={}, expr=v2039[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={}, expr=v2043[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x0804854f}, expr=0x08048552[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048552[32] }
memory:
0x8048552:xor    edi, edi
== PartialSymbolic ==
registers:
    ax      = { v2689[32] }
    cx      = { v2690[32] }
    dx      = { v2691[32] }
    bx      = { v2692[32] }
    sp      = { v2693[32] }
    bp      = { v2694[32] }
    si      = { v2736[32] }
    di      = { 0x0[32] }
    es      = { v2697[16] }
    cs      = { v2698[16] }
    ss      = { v2699[16] }
    ds      = { v2700[16] }
    fs      = { v2701[16] }
    gs      = { v2702[16] }
    cf      = { 0x0[1] }
    ?1      = { v2704[1] }
    pf      = { 0x1[1] }
    ?3      = { v2706[1] }
    af      = { v2737[1] }
    ?5      = { v2708[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2711[1] }
    if      = { v2712[1] }
    df      = { v2713[1] }
    of      = { 0x0[1] }
    iopl0   = { v2715[1] }
    iopl1   = { v2716[1] }
    nt      = { v2717[1] }
    ?15     = { v2718[1] }
    rf      = { v2719[1] }
    vm      = { v2720[1] }
    ac      = { v2721[1] }
    vif     = { v2722[1] }
    vip     = { v2723[1] }
    id      = { v2724[1] }
    ?22     = { v2725[1] }
    ?23     = { v2726[1] }
    ?24     = { v2727[1] }
    ?25     = { v2728[1] }
    ?26     = { v2729[1] }
    ?27     = { v2730[1] }
    ?28     = { v2731[1] }
    ?29     = { v2732[1] }
    ?30     = { v2733[1] }
    ?31     = { v2734[1] }
    ip      = { 0x8048554[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={}, expr=v2022[32]} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={0x08048552}, expr=0[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={0x08048552}, expr=1[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2064[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={0x08048552}, expr=1[1]} }
    sf      = { {defs={0x08048552}, expr=0[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x08048552}, expr=0x08048554[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048554[32] }
memory:
0x8048554:lea    esi, [esi + 0x00000000]
== PartialSymbolic ==
registers:
    ax      = { v2689[32] }
    cx      = { v2690[32] }
    dx      = { v2691[32] }
    bx      = { v2692[32] }
    sp      = { v2693[32] }
    bp      = { v2694[32] }
    si      = { v2736[32] }
    di      = { 0x0[32] }
    es      = { v2697[16] }
    cs      = { v2698[16] }
    ss      = { v2699[16] }
    ds      = { v2700[16] }
    fs      = { v2701[16] }
    gs      = { v2702[16] }
    cf      = { 0x0[1] }
    ?1      = { v2704[1] }
    pf      = { 0x1[1] }
    ?3      = { v2706[1] }
    af      = { v2737[1] }
    ?5      = { v2708[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2711[1] }
    if      = { v2712[1] }
    df      = { v2713[1] }
    of      = { 0x0[1] }
    iopl0   = { v2715[1] }
    iopl1   = { v2716[1] }
    nt      = { v2717[1] }
    ?15     = { v2718[1] }
    rf      = { v2719[1] }
    vm      = { v2720[1] }
    ac      = { v2721[1] }
    vif     = { v2722[1] }
    vip     = { v2723[1] }
    id      = { v2724[1] }
    ?22     = { v2725[1] }
    ?23     = { v2726[1] }
    ?24     = { v2727[1] }
    ?25     = { v2728[1] }
    ?26     = { v2729[1] }
    ?27     = { v2730[1] }
    ?28     = { v2731[1] }
    ?29     = { v2732[1] }
    ?30     = { v2733[1] }
    ?31     = { v2734[1] }
    ip      = { 0x804855a[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={}, expr=v2022[32]} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={0x08048552}, expr=0[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={0x08048552}, expr=1[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2064[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={0x08048552}, expr=1[1]} }
    sf      = { {defs={0x08048552}, expr=0[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x08048554}, expr=0x0804855a[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804855a[32] }
memory:
0x804855a:lea    edi, [edi + 0x00000000]
== PartialSymbolic ==
registers:
    ax      = { v2689[32] }
    cx      = { v2690[32] }
    dx      = { v2691[32] }
    bx      = { v2692[32] }
    sp      = { v2693[32] }
    bp      = { v2694[32] }
    si      = { v2736[32] }
    di      = { 0x0[32] }
    es      = { v2697[16] }
    cs      = { v2698[16] }
    ss      = { v2699[16] }
    ds      = { v2700[16] }
    fs      = { v2701[16] }
    gs      = { v2702[16] }
    cf      = { 0x0[1] }
    ?1      = { v2704[1] }
    pf      = { 0x1[1] }
    ?3      = { v2706[1] }
    af      = { v2737[1] }
    ?5      = { v2708[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2711[1] }
    if      = { v2712[1] }
    df      = { v2713[1] }
    of      = { 0x0[1] }
    iopl0   = { v2715[1] }
    iopl1   = { v2716[1] }
    nt      = { v2717[1] }
    ?15     = { v2718[1] }
    rf      = { v2719[1] }
    vm      = { v2720[1] }
    ac      = { v2721[1] }
    vif     = { v2722[1] }
    vip     = { v2723[1] }
    id      = { v2724[1] }
    ?22     = { v2725[1] }
    ?23     = { v2726[1] }
    ?24     = { v2727[1] }
    ?25     = { v2728[1] }
    ?26     = { v2729[1] }
    ?27     = { v2730[1] }
    ?28     = { v2731[1] }
    ?29     = { v2732[1] }
    ?30     = { v2733[1] }
    ?31     = { v2734[1] }
    ip      = { 0x8048560[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={}, expr=v2022[32]} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={0x08048552,0x0804855a}, expr=0[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={0x08048552}, expr=1[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2064[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={0x08048552}, expr=1[1]} }
    sf      = { {defs={0x08048552}, expr=0[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x0804855a}, expr=0x08048560[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048560[32] }
memory:
0x8048560:call   DWORD PTR ds:[esi]
== PartialSymbolic ==
registers:
    ax      = { v2689[32] }
    cx      = { v2690[32] }
    dx      = { v2691[32] }
    bx      = { v2692[32] }
    sp      = { v2693-0x4[32] }
    bp      = { v2694[32] }
    si      = { v2736[32] }
    di      = { 0x0[32] }
    es      = { v2697[16] }
    cs      = { v2698[16] }
    ss      = { v2699[16] }
    ds      = { v2700[16] }
    fs      = { v2701[16] }
    gs      = { v2702[16] }
    cf      = { 0x0[1] }
    ?1      = { v2704[1] }
    pf      = { 0x1[1] }
    ?3      = { v2706[1] }
    af      = { v2737[1] }
    ?5      = { v2708[1] }
    zf      = { 0x1[1] }
    sf      = { 0x0[1] }
    tf      = { v2711[1] }
    if      = { v2712[1] }
    df      = { v2713[1] }
    of      = { 0x0[1] }
    iopl0   = { v2715[1] }
    iopl1   = { v2716[1] }
    nt      = { v2717[1] }
    ?15     = { v2718[1] }
    rf      = { v2719[1] }
    vm      = { v2720[1] }
    ac      = { v2721[1] }
    vif     = { v2722[1] }
    vip     = { v2723[1] }
    id      = { v2724[1] }
    ?22     = { v2725[1] }
    ?23     = { v2726[1] }
    ?24     = { v2727[1] }
    ?25     = { v2728[1] }
    ?26     = { v2729[1] }
    ?27     = { v2730[1] }
    ?28     = { v2731[1] }
    ?29     = { v2732[1] }
    ?30     = { v2733[1] }
    ?31     = { v2734[1] }
    ip      = { v2738[32] }
memory:
    addr=v2736[32] value=v2738[32]
    addr=v2693-0x4[32] value=0x8048562[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={0x08048560}, expr=(add[32] v2022[32] -4[32])} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={0x08048552,0x0804855a}, expr=0[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={}, expr=0[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={0x08048552}, expr=1[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2064[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={0x08048552}, expr=1[1]} }
    sf      = { {defs={0x08048552}, expr=0[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x08048560}, expr=v2065[32]} }
memory:
    addr={defs={0x0804854f,0x08048560}, expr=(add[32] (add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8]))) 3[32])} value={defs={0x08048560}, expr=(extract[8] 24[32] 32[32] v2065[32])}
    addr={defs={0x0804854f,0x08048560}, expr=(add[32] (add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8]))) 2[32])} value={defs={0x08048560}, expr=(extract[8] 16[32] 24[32] v2065[32])}
    addr={defs={0x0804854f,0x08048560}, expr=(add[32] (add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8]))) 1[32])} value={defs={0x08048560}, expr=(extract[8] 8[32] 16[32] v2065[32])}
    addr={defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} value={defs={0x08048560}, expr=(extract[8] 0[32] 8[32] v2065[32])}
    addr={defs={0x08048560}, expr=(add[32] (add[32] v2022[32] -4[32]) 3[32])} value={defs={0x08048560}, expr=8[8]}
    addr={defs={0x08048560}, expr=(add[32] (add[32] v2022[32] -4[32]) 2[32])} value={defs={0x08048560}, expr=4[8]}
    addr={defs={0x08048560}, expr=(add[32] (add[32] v2022[32] -4[32]) 1[32])} value={defs={0x08048560}, expr=-123[8]}
    addr={defs={0x08048560}, expr=(add[32] v2022[32] -4[32])} value={defs={0x08048560}, expr=98[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
== PartialSymbolic ==
registers:
    ax      = { v2772[32] }
    cx      = { v2773[32] }
    dx      = { v2774[32] }
    bx      = { v2775[32] }
    sp      = { v2776[32] }
    bp      = { v2777[32] }
    si      = { v2778[32] }
    di      = { v2779+0x1[32] }
    es      = { v2780[16] }
    cs      = { v2781[16] }
    ss      = { v2782[16] }
    ds      = { v2783[16] }
    fs      = { v2784[16] }
    gs      = { v2785[16] }
    cf      = { v2786[1] }
    ?1      = { v2787[1] }
    pf      = { -v2832+0x1[1] }
    ?3      = { v2789[1] }
    af      = { v2837[1] }
    ?5      = { v2791[1] }
    zf      = { v2834[1] }
    sf      = { v2833[1] }
    tf      = { v2794[1] }
    if      = { v2795[1] }
    df      = { v2796[1] }
    of      = { v2838[1] }
    iopl0   = { v2798[1] }
    iopl1   = { v2799[1] }
    nt      = { v2800[1] }
    ?15     = { v2801[1] }
    rf      = { v2802[1] }
    vm      = { v2803[1] }
    ac      = { v2804[1] }
    vif     = { v2805[1] }
    vip     = { v2806[1] }
    id      = { v2807[1] }
    ?22     = { v2808[1] }
    ?23     = { v2809[1] }
    ?24     = { v2810[1] }
    ?25     = { v2811[1] }
    ?26     = { v2812[1] }
    ?27     = { v2813[1] }
    ?28     = { v2814[1] }
    ?29     = { v2815[1] }
    ?30     = { v2816[1] }
    ?31     = { v2817[1] }
    ip      = { 0x8048563[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2072[32]} }
    cx      = { {defs={}, expr=v2073[32]} }
    dx      = { {defs={}, expr=v2074[32]} }
    bx      = { {defs={}, expr=v2075[32]} }
    sp      = { {defs={}, expr=v2076[32]} }
    bp      = { {defs={}, expr=v2077[32]} }
    si      = { {defs={}, expr=v2078[32]} }
    di      = { {defs={0x08048562}, expr=(add[32] v2079[32] 1[32])} }
    es      = { {defs={}, expr=v2080[16]} }
    cs      = { {defs={}, expr=v2081[16]} }
    ss      = { {defs={}, expr=v2082[16]} }
    ds      = { {defs={}, expr=v2083[16]} }
    fs      = { {defs={}, expr=v2084[16]} }
    gs      = { {defs={}, expr=v2085[16]} }
    cf      = { {defs={}, expr=v2086[1]} }
    ?1      = { {defs={}, expr=v2087[1]} }
    pf      = { {defs={0x08048562}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2089[1]} }
    af      = { {defs={0x08048562}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2079[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2079[32]) 1[33])))))} }
    ?5      = { {defs={}, expr=v2091[1]} }
    zf      = { {defs={0x08048562}, expr=(zerop[1] (add[32] v2079[32] 1[32]))} }
    sf      = { {defs={0x08048562}, expr=(extract[1] 31[32] 32[32] (add[32] v2079[32] 1[32]))} }
    tf      = { {defs={}, expr=v2094[1]} }
    if      = { {defs={}, expr=v2095[1]} }
    df      = { {defs={}, expr=v2096[1]} }
    of      = { {defs={0x08048562}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2079[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2079[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2079[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2079[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2098[1]} }
    iopl1   = { {defs={}, expr=v2099[1]} }
    nt      = { {defs={}, expr=v2100[1]} }
    ?15     = { {defs={}, expr=v2101[1]} }
    rf      = { {defs={}, expr=v2102[1]} }
    vm      = { {defs={}, expr=v2103[1]} }
    ac      = { {defs={}, expr=v2104[1]} }
    vif     = { {defs={}, expr=v2105[1]} }
    vip     = { {defs={}, expr=v2106[1]} }
    id      = { {defs={}, expr=v2107[1]} }
    ?22     = { {defs={}, expr=v2108[1]} }
    ?23     = { {defs={}, expr=v2109[1]} }
    ?24     = { {defs={}, expr=v2110[1]} }
    ?25     = { {defs={}, expr=v2111[1]} }
    ?26     = { {defs={}, expr=v2112[1]} }
    ?27     = { {defs={}, expr=v2113[1]} }
    ?28     = { {defs={}, expr=v2114[1]} }
    ?29     = { {defs={}, expr=v2115[1]} }
    ?30     = { {defs={}, expr=v2116[1]} }
    ?31     = { {defs={}, expr=v2117[1]} }
    ip      = { {defs={0x08048562}, expr=0x08048563[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048563[32] }
memory:
0x8048563:sub    esi, 0x04
== PartialSymbolic ==
registers:
    ax      = { v2772[32] }
    cx      = { v2773[32] }
    dx      = { v2774[32] }
    bx      = { v2775[32] }
    sp      = { v2776[32] }
    bp      = { v2777[32] }
    si      = { v2778-0x4[32] }
    di      = { v2779+0x1[32] }
    es      = { v2780[16] }
    cs      = { v2781[16] }
    ss      = { v2782[16] }
    ds      = { v2783[16] }
    fs      = { v2784[16] }
    gs      = { v2785[16] }
    cf      = { -v2856+0x1[1] }
    ?1      = { v2787[1] }
    pf      = { -v2853+0x1[1] }
    ?3      = { v2789[1] }
    af      = { -v2858+0x1[1] }
    ?5      = { v2791[1] }
    zf      = { v2855[1] }
    sf      = { v2854[1] }
    tf      = { v2794[1] }
    if      = { v2795[1] }
    df      = { v2796[1] }
    of      = { v2859[1] }
    iopl0   = { v2798[1] }
    iopl1   = { v2799[1] }
    nt      = { v2800[1] }
    ?15     = { v2801[1] }
    rf      = { v2802[1] }
    vm      = { v2803[1] }
    ac      = { v2804[1] }
    vif     = { v2805[1] }
    vip     = { v2806[1] }
    id      = { v2807[1] }
    ?22     = { v2808[1] }
    ?23     = { v2809[1] }
    ?24     = { v2810[1] }
    ?25     = { v2811[1] }
    ?26     = { v2812[1] }
    ?27     = { v2813[1] }
    ?28     = { v2814[1] }
    ?29     = { v2815[1] }
    ?30     = { v2816[1] }
    ?31     = { v2817[1] }
    ip      = { 0x8048566[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2072[32]} }
    cx      = { {defs={}, expr=v2073[32]} }
    dx      = { {defs={}, expr=v2074[32]} }
    bx      = { {defs={}, expr=v2075[32]} }
    sp      = { {defs={}, expr=v2076[32]} }
    bp      = { {defs={}, expr=v2077[32]} }
    si      = { {defs={0x08048563}, expr=(add[32] v2078[32] -4[32])} }
    di      = { {defs={0x08048562}, expr=(add[32] v2079[32] 1[32])} }
    es      = { {defs={}, expr=v2080[16]} }
    cs      = { {defs={}, expr=v2081[16]} }
    ss      = { {defs={}, expr=v2082[16]} }
    ds      = { {defs={}, expr=v2083[16]} }
    fs      = { {defs={}, expr=v2084[16]} }
    gs      = { {defs={}, expr=v2085[16]} }
    cf      = { {defs={0x08048563}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2078[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2078[32]) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2087[1]} }
    pf      = { {defs={0x08048563}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32])))))))} }
    ?3      = { {defs={}, expr=v2089[1]} }
    af      = { {defs={0x08048563}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2078[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2078[32]) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2091[1]} }
    zf      = { {defs={0x08048563}, expr=(zerop[1] (add[32] v2078[32] -4[32]))} }
    sf      = { {defs={0x08048563}, expr=(extract[1] 31[32] 32[32] (add[32] v2078[32] -4[32]))} }
    tf      = { {defs={}, expr=v2094[1]} }
    if      = { {defs={}, expr=v2095[1]} }
    df      = { {defs={}, expr=v2096[1]} }
    of      = { {defs={0x08048563}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2078[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2078[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2078[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2078[32]) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2098[1]} }
    iopl1   = { {defs={}, expr=v2099[1]} }
    nt      = { {defs={}, expr=v2100[1]} }
    ?15     = { {defs={}, expr=v2101[1]} }
    rf      = { {defs={}, expr=v2102[1]} }
    vm      = { {defs={}, expr=v2103[1]} }
    ac      = { {defs={}, expr=v2104[1]} }
    vif     = { {defs={}, expr=v2105[1]} }
    vip     = { {defs={}, expr=v2106[1]} }
    id      = { {defs={}, expr=v2107[1]} }
    ?22     = { {defs={}, expr=v2108[1]} }
    ?23     = { {defs={}, expr=v2109[1]} }
    ?24     = { {defs={}, expr=v2110[1]} }
    ?25     = { {defs={}, expr=v2111[1]} }
    ?26     = { {defs={}, expr=v2112[1]} }
    ?27     = { {defs={}, expr=v2113[1]} }
    ?28     = { {defs={}, expr=v2114[1]} }
    ?29     = { {defs={}, expr=v2115[1]} }
    ?30     = { {defs={}, expr=v2116[1]} }
    ?31     = { {defs={}, expr=v2117[1]} }
    ip      = { {defs={0x08048563}, expr=0x08048566[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048566[32] }
memory:
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
== PartialSymbolic ==
registers:
    ax      = { v2772[32] }
    cx      = { v2773[32] }
    dx      = { v2774[32] }
    bx      = { v2775[32] }
    sp      = { v2776[32] }
    bp      = { v2777[32] }
    si      = { v2778-0x4[32] }
    di      = { v2779+0x1[32] }
    es      = { v2780[16] }
    cs      = { v2781[16] }
    ss      = { v2782[16] }
    ds      = { v2783[16] }
    fs      = { v2784[16] }
    gs      = { v2785[16] }
    cf      = { -v2880+0x1[1] }
    ?1      = { v2787[1] }
    pf      = { -v2877+0x1[1] }
    ?3      = { v2789[1] }
    af      = { -v2882+0x1[1] }
    ?5      = { v2791[1] }
    zf      = { v2879[1] }
    sf      = { v2878[1] }
    tf      = { v2794[1] }
    if      = { v2795[1] }
    df      = { v2796[1] }
    of      = { v2883[1] }
    iopl0   = { v2798[1] }
    iopl1   = { v2799[1] }
    nt      = { v2800[1] }
    ?15     = { v2801[1] }
    rf      = { v2802[1] }
    vm      = { v2803[1] }
    ac      = { v2804[1] }
    vif     = { v2805[1] }
    vip     = { v2806[1] }
    id      = { v2807[1] }
    ?22     = { v2808[1] }
    ?23     = { v2809[1] }
    ?24     = { v2810[1] }
    ?25     = { v2811[1] }
    ?26     = { v2812[1] }
    ?27     = { v2813[1] }
    ?28     = { v2814[1] }
    ?29     = { v2815[1] }
    ?30     = { v2816[1] }
    ?31     = { v2817[1] }
    ip      = { 0x8048569[32] }
memory:
    addr=v2777-0x10[32] value=v2860[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2072[32]} }
    cx      = { {defs={}, expr=v2073[32]} }
    dx      = { {defs={}, expr=v2074[32]} }
    bx      = { {defs={}, expr=v2075[32]} }
    sp      = { {defs={}, expr=v2076[32]} }
    bp      = { {defs={}, expr=v2077[32]} }
    si      = { {defs={0x08048563}, expr=(add[32] v2078[32] -4[32])} }
    di      = { {defs={0x08048562}, expr=(add[32] v2079[32] 1[32])} }
    es      = { {defs={}, expr=v2080[16]} }
    cs      = { {defs={}, expr=v2081[16]} }
    ss      = { {defs={}, expr=v2082[16]} }
    ds      = { {defs={}, expr=v2083[16]} }
    fs      = { {defs={}, expr=v2084[16]} }
    gs      = { {defs={}, expr=v2085[16]} }
    cf      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    ?1      = { {defs={}, expr=v2087[1]} }
    pf      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))))))} }
    ?3      = { {defs={}, expr=v2089[1]} }
    af      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    ?5      = { {defs={}, expr=v2091[1]} }
    zf      = { {defs={0x08048562,0x08048566}, expr=(zerop[1] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))} }
    sf      = { {defs={0x08048562,0x08048566}, expr=(extract[1] 31[32] 32[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))} }
    tf      = { {defs={}, expr=v2094[1]} }
    if      = { {defs={}, expr=v2095[1]} }
    df      = { {defs={}, expr=v2096[1]} }
    of      = { {defs={0x08048562,0x08048566}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    iopl0   = { {defs={}, expr=v2098[1]} }
    iopl1   = { {defs={}, expr=v2099[1]} }
    nt      = { {defs={}, expr=v2100[1]} }
    ?15     = { {defs={}, expr=v2101[1]} }
    rf      = { {defs={}, expr=v2102[1]} }
    vm      = { {defs={}, expr=v2103[1]} }
    ac      = { {defs={}, expr=v2104[1]} }
    vif     = { {defs={}, expr=v2105[1]} }
    vip     = { {defs={}, expr=v2106[1]} }
    id      = { {defs={}, expr=v2107[1]} }
    ?22     = { {defs={}, expr=v2108[1]} }
    ?23     = { {defs={}, expr=v2109[1]} }
    ?24     = { {defs={}, expr=v2110[1]} }
    ?25     = { {defs={}, expr=v2111[1]} }
    ?26     = { {defs={}, expr=v2112[1]} }
    ?27     = { {defs={}, expr=v2113[1]} }
    ?28     = { {defs={}, expr=v2114[1]} }
    ?29     = { {defs={}, expr=v2115[1]} }
    ?30     = { {defs={}, expr=v2116[1]} }
    ?31     = { {defs={}, expr=v2117[1]} }
    ip      = { {defs={0x08048566}, expr=0x08048569[32]} }
memory:
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 3[32])} value={defs={0x08048566}, expr=(extract[8] 24[32] 32[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 2[32])} value={defs={0x08048566}, expr=(extract[8] 16[32] 24[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 1[32])} value={defs={0x08048566}, expr=(extract[8] 8[32] 16[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] v2077[32] -16[32])} value={defs={0x08048566}, expr=(extract[8] 0[32] 8[32] v2118[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048569[32] }
memory:
0x8048569:jne    0x08048560<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v2772[32] }
    cx      = { v2773[32] }
    dx      = { v2774[32] }
    bx      = { v2775[32] }
    sp      = { v2776[32] }
    bp      = { v2777[32] }
    si      = { v2778-0x4[32] }
    di      = { v2779+0x1[32] }
    es      = { v2780[16] }
    cs      = { v2781[16] }
    ss      = { v2782[16] }
    ds      = { v2783[16] }
    fs      = { v2784[16] }
    gs      = { v2785[16] }
    cf      = { -v2880+0x1[1] }
    ?1      = { v2787[1] }
    pf      = { -v2877+0x1[1] }
    ?3      = { v2789[1] }
    af      = { -v2882+0x1[1] }
    ?5      = { v2791[1] }
    zf      = { v2879[1] }
    sf      = { v2878[1] }
    tf      = { v2794[1] }
    if      = { v2795[1] }
    df      = { v2796[1] }
    of      = { v2883[1] }
    iopl0   = { v2798[1] }
    iopl1   = { v2799[1] }
    nt      = { v2800[1] }
    ?15     = { v2801[1] }
    rf      = { v2802[1] }
    vm      = { v2803[1] }
    ac      = { v2804[1] }
    vif     = { v2805[1] }
    vip     = { v2806[1] }
    id      = { v2807[1] }
    ?22     = { v2808[1] }
    ?23     = { v2809[1] }
    ?24     = { v2810[1] }
    ?25     = { v2811[1] }
    ?26     = { v2812[1] }
    ?27     = { v2813[1] }
    ?28     = { v2814[1] }
    ?29     = { v2815[1] }
    ?30     = { v2816[1] }
    ?31     = { v2817[1] }
    ip      = { v2884[32] }
memory:
    addr=v2777-0x10[32] value=v2860[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2072[32]} }
    cx      = { {defs={}, expr=v2073[32]} }
    dx      = { {defs={}, expr=v2074[32]} }
    bx      = { {defs={}, expr=v2075[32]} }
    sp      = { {defs={}, expr=v2076[32]} }
    bp      = { {defs={}, expr=v2077[32]} }
    si      = { {defs={0x08048563}, expr=(add[32] v2078[32] -4[32])} }
    di      = { {defs={0x08048562}, expr=(add[32] v2079[32] 1[32])} }
    es      = { {defs={}, expr=v2080[16]} }
    cs      = { {defs={}, expr=v2081[16]} }
    ss      = { {defs={}, expr=v2082[16]} }
    ds      = { {defs={}, expr=v2083[16]} }
    fs      = { {defs={}, expr=v2084[16]} }
    gs      = { {defs={}, expr=v2085[16]} }
    cf      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    ?1      = { {defs={}, expr=v2087[1]} }
    pf      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))))))} }
    ?3      = { {defs={}, expr=v2089[1]} }
    af      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    ?5      = { {defs={}, expr=v2091[1]} }
    zf      = { {defs={0x08048562,0x08048566}, expr=(zerop[1] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))} }
    sf      = { {defs={0x08048562,0x08048566}, expr=(extract[1] 31[32] 32[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))} }
    tf      = { {defs={}, expr=v2094[1]} }
    if      = { {defs={}, expr=v2095[1]} }
    df      = { {defs={}, expr=v2096[1]} }
    of      = { {defs={0x08048562,0x08048566}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    iopl0   = { {defs={}, expr=v2098[1]} }
    iopl1   = { {defs={}, expr=v2099[1]} }
    nt      = { {defs={}, expr=v2100[1]} }
    ?15     = { {defs={}, expr=v2101[1]} }
    rf      = { {defs={}, expr=v2102[1]} }
    vm      = { {defs={}, expr=v2103[1]} }
    ac      = { {defs={}, expr=v2104[1]} }
    vif     = { {defs={}, expr=v2105[1]} }
    vip     = { {defs={}, expr=v2106[1]} }
    id      = { {defs={}, expr=v2107[1]} }
    ?22     = { {defs={}, expr=v2108[1]} }
    ?23     = { {defs={}, expr=v2109[1]} }
    ?24     = { {defs={}, expr=v2110[1]} }
    ?25     = { {defs={}, expr=v2111[1]} }
    ?26     = { {defs={}, expr=v2112[1]} }
    ?27     = { {defs={}, expr=v2113[1]} }
    ?28     = { {defs={}, expr=v2114[1]} }
    ?29     = { {defs={}, expr=v2115[1]} }
    ?30     = { {defs={}, expr=v2116[1]} }
    ?31     = { {defs={}, expr=v2117[1]} }
    ip      = { {defs={0x08048562,0x08048566,0x08048569}, expr=(ite[32] (invert[1] (zerop[1] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) 0x08048560[32] 0x0804856b[32])} }
memory:
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 3[32])} value={defs={0x08048566}, expr=(extract[8] 24[32] 32[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 2[32])} value={defs={0x08048566}, expr=(extract[8] 16[32] 24[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 1[32])} value={defs={0x08048566}, expr=(extract[8] 8[32] 16[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] v2077[32] -16[32])} value={defs={0x08048566}, expr=(extract[8] 0[32] 8[32] v2118[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048560, 0x0804856b[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0<_fini>
== PartialSymbolic ==
registers:
    ax      = { v2887[32] }
    cx      = { v2888[32] }
    dx      = { v2889[32] }
    bx      = { v2890[32] }
    sp      = { v2891-0x4[32] }
    bp      = { v2892[32] }
    si      = { v2893[32] }
    di      = { v2894[32] }
    es      = { v2895[16] }
    cs      = { v2896[16] }
    ss      = { v2897[16] }
    ds      = { v2898[16] }
    fs      = { v2899[16] }
    gs      = { v2900[16] }
    cf      = { v2901[1] }
    ?1      = { v2902[1] }
    pf      = { v2903[1] }
    ?3      = { v2904[1] }
    af      = { v2905[1] }
    ?5      = { v2906[1] }
    zf      = { v2907[1] }
    sf      = { v2908[1] }
    tf      = { v2909[1] }
    if      = { v2910[1] }
    df      = { v2911[1] }
    of      = { v2912[1] }
    iopl0   = { v2913[1] }
    iopl1   = { v2914[1] }
    nt      = { v2915[1] }
    ?15     = { v2916[1] }
    rf      = { v2917[1] }
    vm      = { v2918[1] }
    ac      = { v2919[1] }
    vif     = { v2920[1] }
    vip     = { v2921[1] }
    id      = { v2922[1] }
    ?22     = { v2923[1] }
    ?23     = { v2924[1] }
    ?24     = { v2925[1] }
    ?25     = { v2926[1] }
    ?26     = { v2927[1] }
    ?27     = { v2928[1] }
    ?28     = { v2929[1] }
    ?29     = { v2930[1] }
    ?30     = { v2931[1] }
    ?31     = { v2932[1] }
    ip      = { 0x80485b0[32] }
memory:
    addr=v2891-0x4[32] value=0x8048570[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2125[32]} }
    cx      = { {defs={}, expr=v2126[32]} }
    dx      = { {defs={}, expr=v2127[32]} }
    bx      = { {defs={}, expr=v2128[32]} }
    sp      = { {defs={0x0804856b}, expr=(add[32] v2129[32] -4[32])} }
    bp      = { {defs={}, expr=v2130[32]} }
    si      = { {defs={}, expr=v2131[32]} }
    di      = { {defs={}, expr=v2132[32]} }
    es      = { {defs={}, expr=v2133[16]} }
    cs      = { {defs={}, expr=v2134[16]} }
    ss      = { {defs={}, expr=v2135[16]} }
    ds      = { {defs={}, expr=v2136[16]} }
    fs      = { {defs={}, expr=v2137[16]} }
    gs      = { {defs={}, expr=v2138[16]} }
    cf      = { {defs={}, expr=v2139[1]} }
    ?1      = { {defs={}, expr=v2140[1]} }
    pf      = { {defs={}, expr=v2141[1]} }
    ?3      = { {defs={}, expr=v2142[1]} }
    af      = { {defs={}, expr=v2143[1]} }
    ?5      = { {defs={}, expr=v2144[1]} }
    zf      = { {defs={}, expr=v2145[1]} }
    sf      = { {defs={}, expr=v2146[1]} }
    tf      = { {defs={}, expr=v2147[1]} }
    if      = { {defs={}, expr=v2148[1]} }
    df      = { {defs={}, expr=v2149[1]} }
    of      = { {defs={}, expr=v2150[1]} }
    iopl0   = { {defs={}, expr=v2151[1]} }
    iopl1   = { {defs={}, expr=v2152[1]} }
    nt      = { {defs={}, expr=v2153[1]} }
    ?15     = { {defs={}, expr=v2154[1]} }
    rf      = { {defs={}, expr=v2155[1]} }
    vm      = { {defs={}, expr=v2156[1]} }
    ac      = { {defs={}, expr=v2157[1]} }
    vif     = { {defs={}, expr=v2158[1]} }
    vip     = { {defs={}, expr=v2159[1]} }
    id      = { {defs={}, expr=v2160[1]} }
    ?22     = { {defs={}, expr=v2161[1]} }
    ?23     = { {defs={}, expr=v2162[1]} }
    ?24     = { {defs={}, expr=v2163[1]} }
    ?25     = { {defs={}, expr=v2164[1]} }
    ?26     = { {defs={}, expr=v2165[1]} }
    ?27     = { {defs={}, expr=v2166[1]} }
    ?28     = { {defs={}, expr=v2167[1]} }
    ?29     = { {defs={}, expr=v2168[1]} }
    ?30     = { {defs={}, expr=v2169[1]} }
    ?31     = { {defs={}, expr=v2170[1]} }
    ip      = { {defs={}, expr=0x080485b0[32]} }
memory:
    addr={defs={0x0804856b}, expr=(add[32] (add[32] v2129[32] -4[32]) 3[32])} value={defs={0x0804856b}, expr=8[8]}
    addr={defs={0x0804856b}, expr=(add[32] (add[32] v2129[32] -4[32]) 2[32])} value={defs={0x0804856b}, expr=4[8]}
    addr={defs={0x0804856b}, expr=(add[32] (add[32] v2129[32] -4[32]) 1[32])} value={defs={0x0804856b}, expr=-123[8]}
    addr={defs={0x0804856b}, expr=(add[32] v2129[32] -4[32])} value={defs={0x0804856b}, expr=112[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b0[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
== PartialSymbolic ==
registers:
    ax      = { v2935[32] }
    cx      = { v2936[32] }
    dx      = { v2937[32] }
    bx      = { v2938[32] }
    sp      = { v2939+0xc[32] }
    bp      = { v2940[32] }
    si      = { v2941[32] }
    di      = { v2942[32] }
    es      = { v2943[16] }
    cs      = { v2944[16] }
    ss      = { v2945[16] }
    ds      = { v2946[16] }
    fs      = { v2947[16] }
    gs      = { v2948[16] }
    cf      = { v2998[1] }
    ?1      = { v2950[1] }
    pf      = { -v2995+0x1[1] }
    ?3      = { v2952[1] }
    af      = { v3000[1] }
    ?5      = { v2954[1] }
    zf      = { v2997[1] }
    sf      = { v2996[1] }
    tf      = { v2957[1] }
    if      = { v2958[1] }
    df      = { v2959[1] }
    of      = { v3001[1] }
    iopl0   = { v2961[1] }
    iopl1   = { v2962[1] }
    nt      = { v2963[1] }
    ?15     = { v2964[1] }
    rf      = { v2965[1] }
    vm      = { v2966[1] }
    ac      = { v2967[1] }
    vif     = { v2968[1] }
    vip     = { v2969[1] }
    id      = { v2970[1] }
    ?22     = { v2971[1] }
    ?23     = { v2972[1] }
    ?24     = { v2973[1] }
    ?25     = { v2974[1] }
    ?26     = { v2975[1] }
    ?27     = { v2976[1] }
    ?28     = { v2977[1] }
    ?29     = { v2978[1] }
    ?30     = { v2979[1] }
    ?31     = { v2980[1] }
    ip      = { 0x8048573[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={}, expr=v2176[32]} }
    sp      = { {defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} }
    bp      = { {defs={}, expr=v2178[32]} }
    si      = { {defs={}, expr=v2179[32]} }
    di      = { {defs={}, expr=v2180[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048570}, expr=0x08048573[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048573[32] }
memory:
0x8048573:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v2935[32] }
    cx      = { v2936[32] }
    dx      = { v2937[32] }
    bx      = { v3002[32] }
    sp      = { v2939+0x10[32] }
    bp      = { v2940[32] }
    si      = { v2941[32] }
    di      = { v2942[32] }
    es      = { v2943[16] }
    cs      = { v2944[16] }
    ss      = { v2945[16] }
    ds      = { v2946[16] }
    fs      = { v2947[16] }
    gs      = { v2948[16] }
    cf      = { v2998[1] }
    ?1      = { v2950[1] }
    pf      = { -v2995+0x1[1] }
    ?3      = { v2952[1] }
    af      = { v3000[1] }
    ?5      = { v2954[1] }
    zf      = { v2997[1] }
    sf      = { v2996[1] }
    tf      = { v2957[1] }
    if      = { v2958[1] }
    df      = { v2959[1] }
    of      = { v3001[1] }
    iopl0   = { v2961[1] }
    iopl1   = { v2962[1] }
    nt      = { v2963[1] }
    ?15     = { v2964[1] }
    rf      = { v2965[1] }
    vm      = { v2966[1] }
    ac      = { v2967[1] }
    vif     = { v2968[1] }
    vip     = { v2969[1] }
    id      = { v2970[1] }
    ?22     = { v2971[1] }
    ?23     = { v2972[1] }
    ?24     = { v2973[1] }
    ?25     = { v2974[1] }
    ?26     = { v2975[1] }
    ?27     = { v2976[1] }
    ?28     = { v2977[1] }
    ?29     = { v2978[1] }
    ?30     = { v2979[1] }
    ?31     = { v2980[1] }
    ip      = { 0x8048574[32] }
memory:
    addr=v2939+0xc[32] value=v3002[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} }
    bp      = { {defs={}, expr=v2178[32]} }
    si      = { {defs={}, expr=v2179[32]} }
    di      = { {defs={}, expr=v2180[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048573}, expr=0x08048574[32]} }
memory:
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048574[32] }
memory:
0x8048574:pop    esi
== PartialSymbolic ==
registers:
    ax      = { v2935[32] }
    cx      = { v2936[32] }
    dx      = { v2937[32] }
    bx      = { v3002[32] }
    sp      = { v2939+0x14[32] }
    bp      = { v2940[32] }
    si      = { v3004[32] }
    di      = { v2942[32] }
    es      = { v2943[16] }
    cs      = { v2944[16] }
    ss      = { v2945[16] }
    ds      = { v2946[16] }
    fs      = { v2947[16] }
    gs      = { v2948[16] }
    cf      = { v2998[1] }
    ?1      = { v2950[1] }
    pf      = { -v2995+0x1[1] }
    ?3      = { v2952[1] }
    af      = { v3000[1] }
    ?5      = { v2954[1] }
    zf      = { v2997[1] }
    sf      = { v2996[1] }
    tf      = { v2957[1] }
    if      = { v2958[1] }
    df      = { v2959[1] }
    of      = { v3001[1] }
    iopl0   = { v2961[1] }
    iopl1   = { v2962[1] }
    nt      = { v2963[1] }
    ?15     = { v2964[1] }
    rf      = { v2965[1] }
    vm      = { v2966[1] }
    ac      = { v2967[1] }
    vif     = { v2968[1] }
    vip     = { v2969[1] }
    id      = { v2970[1] }
    ?22     = { v2971[1] }
    ?23     = { v2972[1] }
    ?24     = { v2973[1] }
    ?25     = { v2974[1] }
    ?26     = { v2975[1] }
    ?27     = { v2976[1] }
    ?28     = { v2977[1] }
    ?29     = { v2978[1] }
    ?30     = { v2979[1] }
    ?31     = { v2980[1] }
    ip      = { 0x8048575[32] }
memory:
    addr=v2939+0x10[32] value=v3004[32]
    addr=v2939+0xc[32] value=v3002[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v2178[32]} }
    si      = { {defs={0x08048574}, expr=v2224[32]} }
    di      = { {defs={}, expr=v2180[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048574}, expr=0x08048575[32]} }
memory:
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 3[32])} value={defs={0x08048574}, expr=(extract[8] 24[32] 32[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 2[32])} value={defs={0x08048574}, expr=(extract[8] 16[32] 24[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 1[32])} value={defs={0x08048574}, expr=(extract[8] 8[32] 16[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} value={defs={0x08048574}, expr=(extract[8] 0[32] 8[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048575[32] }
memory:
0x8048575:pop    edi
== PartialSymbolic ==
registers:
    ax      = { v2935[32] }
    cx      = { v2936[32] }
    dx      = { v2937[32] }
    bx      = { v3002[32] }
    sp      = { v2939+0x18[32] }
    bp      = { v2940[32] }
    si      = { v3004[32] }
    di      = { v3006[32] }
    es      = { v2943[16] }
    cs      = { v2944[16] }
    ss      = { v2945[16] }
    ds      = { v2946[16] }
    fs      = { v2947[16] }
    gs      = { v2948[16] }
    cf      = { v2998[1] }
    ?1      = { v2950[1] }
    pf      = { -v2995+0x1[1] }
    ?3      = { v2952[1] }
    af      = { v3000[1] }
    ?5      = { v2954[1] }
    zf      = { v2997[1] }
    sf      = { v2996[1] }
    tf      = { v2957[1] }
    if      = { v2958[1] }
    df      = { v2959[1] }
    of      = { v3001[1] }
    iopl0   = { v2961[1] }
    iopl1   = { v2962[1] }
    nt      = { v2963[1] }
    ?15     = { v2964[1] }
    rf      = { v2965[1] }
    vm      = { v2966[1] }
    ac      = { v2967[1] }
    vif     = { v2968[1] }
    vip     = { v2969[1] }
    id      = { v2970[1] }
    ?22     = { v2971[1] }
    ?23     = { v2972[1] }
    ?24     = { v2973[1] }
    ?25     = { v2974[1] }
    ?26     = { v2975[1] }
    ?27     = { v2976[1] }
    ?28     = { v2977[1] }
    ?29     = { v2978[1] }
    ?30     = { v2979[1] }
    ?31     = { v2980[1] }
    ip      = { 0x8048576[32] }
memory:
    addr=v2939+0x14[32] value=v3006[32]
    addr=v2939+0x10[32] value=v3004[32]
    addr=v2939+0xc[32] value=v3002[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v2178[32]} }
    si      = { {defs={0x08048574}, expr=v2224[32]} }
    di      = { {defs={0x08048575}, expr=v2229[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048575}, expr=0x08048576[32]} }
memory:
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048575}, expr=(extract[8] 24[32] 32[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048575}, expr=(extract[8] 16[32] 24[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048575}, expr=(extract[8] 8[32] 16[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32])} value={defs={0x08048575}, expr=(extract[8] 0[32] 8[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 3[32])} value={defs={0x08048574}, expr=(extract[8] 24[32] 32[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 2[32])} value={defs={0x08048574}, expr=(extract[8] 16[32] 24[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 1[32])} value={defs={0x08048574}, expr=(extract[8] 8[32] 16[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} value={defs={0x08048574}, expr=(extract[8] 0[32] 8[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048576[32] }
memory:
0x8048576:pop    ebp
== PartialSymbolic ==
registers:
    ax      = { v2935[32] }
    cx      = { v2936[32] }
    dx      = { v2937[32] }
    bx      = { v3002[32] }
    sp      = { v2939+0x1c[32] }
    bp      = { v3008[32] }
    si      = { v3004[32] }
    di      = { v3006[32] }
    es      = { v2943[16] }
    cs      = { v2944[16] }
    ss      = { v2945[16] }
    ds      = { v2946[16] }
    fs      = { v2947[16] }
    gs      = { v2948[16] }
    cf      = { v2998[1] }
    ?1      = { v2950[1] }
    pf      = { -v2995+0x1[1] }
    ?3      = { v2952[1] }
    af      = { v3000[1] }
    ?5      = { v2954[1] }
    zf      = { v2997[1] }
    sf      = { v2996[1] }
    tf      = { v2957[1] }
    if      = { v2958[1] }
    df      = { v2959[1] }
    of      = { v3001[1] }
    iopl0   = { v2961[1] }
    iopl1   = { v2962[1] }
    nt      = { v2963[1] }
    ?15     = { v2964[1] }
    rf      = { v2965[1] }
    vm      = { v2966[1] }
    ac      = { v2967[1] }
    vif     = { v2968[1] }
    vip     = { v2969[1] }
    id      = { v2970[1] }
    ?22     = { v2971[1] }
    ?23     = { v2972[1] }
    ?24     = { v2973[1] }
    ?25     = { v2974[1] }
    ?26     = { v2975[1] }
    ?27     = { v2976[1] }
    ?28     = { v2977[1] }
    ?29     = { v2978[1] }
    ?30     = { v2979[1] }
    ?31     = { v2980[1] }
    ip      = { 0x8048577[32] }
memory:
    addr=v2939+0x18[32] value=v3008[32]
    addr=v2939+0x14[32] value=v3006[32]
    addr=v2939+0x10[32] value=v3004[32]
    addr=v2939+0xc[32] value=v3002[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x08048576}, expr=v2234[32]} }
    si      = { {defs={0x08048574}, expr=v2224[32]} }
    di      = { {defs={0x08048575}, expr=v2229[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048576}, expr=0x08048577[32]} }
memory:
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048576}, expr=(extract[8] 24[32] 32[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048576}, expr=(extract[8] 16[32] 24[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048576}, expr=(extract[8] 8[32] 16[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32])} value={defs={0x08048576}, expr=(extract[8] 0[32] 8[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048575}, expr=(extract[8] 24[32] 32[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048575}, expr=(extract[8] 16[32] 24[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048575}, expr=(extract[8] 8[32] 16[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32])} value={defs={0x08048575}, expr=(extract[8] 0[32] 8[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 3[32])} value={defs={0x08048574}, expr=(extract[8] 24[32] 32[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 2[32])} value={defs={0x08048574}, expr=(extract[8] 16[32] 24[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 1[32])} value={defs={0x08048574}, expr=(extract[8] 8[32] 16[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} value={defs={0x08048574}, expr=(extract[8] 0[32] 8[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048577[32] }
memory:
0x8048577:ret    
== PartialSymbolic ==
registers:
    ax      = { v2935[32] }
    cx      = { v2936[32] }
    dx      = { v2937[32] }
    bx      = { v3002[32] }
    sp      = { v2939+0x20[32] }
    bp      = { v3008[32] }
    si      = { v3004[32] }
    di      = { v3006[32] }
    es      = { v2943[16] }
    cs      = { v2944[16] }
    ss      = { v2945[16] }
    ds      = { v2946[16] }
    fs      = { v2947[16] }
    gs      = { v2948[16] }
    cf      = { v2998[1] }
    ?1      = { v2950[1] }
    pf      = { -v2995+0x1[1] }
    ?3      = { v2952[1] }
    af      = { v3000[1] }
    ?5      = { v2954[1] }
    zf      = { v2997[1] }
    sf      = { v2996[1] }
    tf      = { v2957[1] }
    if      = { v2958[1] }
    df      = { v2959[1] }
    of      = { v3001[1] }
    iopl0   = { v2961[1] }
    iopl1   = { v2962[1] }
    nt      = { v2963[1] }
    ?15     = { v2964[1] }
    rf      = { v2965[1] }
    vm      = { v2966[1] }
    ac      = { v2967[1] }
    vif     = { v2968[1] }
    vip     = { v2969[1] }
    id      = { v2970[1] }
    ?22     = { v2971[1] }
    ?23     = { v2972[1] }
    ?24     = { v2973[1] }
    ?25     = { v2974[1] }
    ?26     = { v2975[1] }
    ?27     = { v2976[1] }
    ?28     = { v2977[1] }
    ?29     = { v2978[1] }
    ?30     = { v2979[1] }
    ?31     = { v2980[1] }
    ip      = { v3010[32] }
memory:
    addr=v2939+0x1c[32] value=v3010[32]
    addr=v2939+0x18[32] value=v3008[32]
    addr=v2939+0x14[32] value=v3006[32]
    addr=v2939+0x10[32] value=v3004[32]
    addr=v2939+0xc[32] value=v3002[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x08048576}, expr=v2234[32]} }
    si      = { {defs={0x08048574}, expr=v2224[32]} }
    di      = { {defs={0x08048575}, expr=v2229[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048577}, expr=v2239[32]} }
memory:
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048577}, expr=(extract[8] 24[32] 32[32] v2239[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048577}, expr=(extract[8] 16[32] 24[32] v2239[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048577}, expr=(extract[8] 8[32] 16[32] v2239[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])} value={defs={0x08048577}, expr=(extract[8] 0[32] 8[32] v2239[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048576}, expr=(extract[8] 24[32] 32[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048576}, expr=(extract[8] 16[32] 24[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048576}, expr=(extract[8] 8[32] 16[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32])} value={defs={0x08048576}, expr=(extract[8] 0[32] 8[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048575}, expr=(extract[8] 24[32] 32[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048575}, expr=(extract[8] 16[32] 24[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048575}, expr=(extract[8] 8[32] 16[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32])} value={defs={0x08048575}, expr=(extract[8] 0[32] 8[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 3[32])} value={defs={0x08048574}, expr=(extract[8] 24[32] 32[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 2[32])} value={defs={0x08048574}, expr=(extract[8] 16[32] 24[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 1[32])} value={defs={0x08048574}, expr=(extract[8] 8[32] 16[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} value={defs={0x08048574}, expr=(extract[8] 0[32] 8[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v3014[32] }
    cx      = { v3015[32] }
    dx      = { v3016[32] }
    bx      = { v3017[32] }
    sp      = { v3018-0x4[32] }
    bp      = { v3019[32] }
    si      = { v3020[32] }
    di      = { v3021[32] }
    es      = { v3022[16] }
    cs      = { v3023[16] }
    ss      = { v3024[16] }
    ds      = { v3025[16] }
    fs      = { v3026[16] }
    gs      = { v3027[16] }
    cf      = { v3028[1] }
    ?1      = { v3029[1] }
    pf      = { v3030[1] }
    ?3      = { v3031[1] }
    af      = { v3032[1] }
    ?5      = { v3033[1] }
    zf      = { v3034[1] }
    sf      = { v3035[1] }
    tf      = { v3036[1] }
    if      = { v3037[1] }
    df      = { v3038[1] }
    of      = { v3039[1] }
    iopl0   = { v3040[1] }
    iopl1   = { v3041[1] }
    nt      = { v3042[1] }
    ?15     = { v3043[1] }
    rf      = { v3044[1] }
    vm      = { v3045[1] }
    ac      = { v3046[1] }
    vif     = { v3047[1] }
    vip     = { v3048[1] }
    id      = { v3049[1] }
    ?22     = { v3050[1] }
    ?23     = { v3051[1] }
    ?24     = { v3052[1] }
    ?25     = { v3053[1] }
    ?26     = { v3054[1] }
    ?27     = { v3055[1] }
    ?28     = { v3056[1] }
    ?29     = { v3057[1] }
    ?30     = { v3058[1] }
    ?31     = { v3059[1] }
    ip      = { 0x8048581[32] }
memory:
    addr=v3018-0x4[32] value=v3019[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=v2249[32]} }
    sp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    bp      = { {defs={}, expr=v2251[32]} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={}, expr=v2260[1]} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={}, expr=v2262[1]} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={}, expr=v2264[1]} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={}, expr=v2266[1]} }
    sf      = { {defs={}, expr=v2267[1]} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={}, expr=v2271[1]} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048580}, expr=0x08048581[32]} }
memory:
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048581[32] }
memory:
0x8048581:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v3014[32] }
    cx      = { v3015[32] }
    dx      = { v3016[32] }
    bx      = { v3017[32] }
    sp      = { v3018-0x4[32] }
    bp      = { v3018-0x4[32] }
    si      = { v3020[32] }
    di      = { v3021[32] }
    es      = { v3022[16] }
    cs      = { v3023[16] }
    ss      = { v3024[16] }
    ds      = { v3025[16] }
    fs      = { v3026[16] }
    gs      = { v3027[16] }
    cf      = { v3028[1] }
    ?1      = { v3029[1] }
    pf      = { v3030[1] }
    ?3      = { v3031[1] }
    af      = { v3032[1] }
    ?5      = { v3033[1] }
    zf      = { v3034[1] }
    sf      = { v3035[1] }
    tf      = { v3036[1] }
    if      = { v3037[1] }
    df      = { v3038[1] }
    of      = { v3039[1] }
    iopl0   = { v3040[1] }
    iopl1   = { v3041[1] }
    nt      = { v3042[1] }
    ?15     = { v3043[1] }
    rf      = { v3044[1] }
    vm      = { v3045[1] }
    ac      = { v3046[1] }
    vif     = { v3047[1] }
    vip     = { v3048[1] }
    id      = { v3049[1] }
    ?22     = { v3050[1] }
    ?23     = { v3051[1] }
    ?24     = { v3052[1] }
    ?25     = { v3053[1] }
    ?26     = { v3054[1] }
    ?27     = { v3055[1] }
    ?28     = { v3056[1] }
    ?29     = { v3057[1] }
    ?30     = { v3058[1] }
    ?31     = { v3059[1] }
    ip      = { 0x8048583[32] }
memory:
    addr=v3018-0x4[32] value=v3019[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=v2249[32]} }
    sp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={}, expr=v2260[1]} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={}, expr=v2262[1]} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={}, expr=v2264[1]} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={}, expr=v2266[1]} }
    sf      = { {defs={}, expr=v2267[1]} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={}, expr=v2271[1]} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048581}, expr=0x08048583[32]} }
memory:
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048583[32] }
memory:
0x8048583:push   ebx
== PartialSymbolic ==
registers:
    ax      = { v3014[32] }
    cx      = { v3015[32] }
    dx      = { v3016[32] }
    bx      = { v3017[32] }
    sp      = { v3018-0x8[32] }
    bp      = { v3018-0x4[32] }
    si      = { v3020[32] }
    di      = { v3021[32] }
    es      = { v3022[16] }
    cs      = { v3023[16] }
    ss      = { v3024[16] }
    ds      = { v3025[16] }
    fs      = { v3026[16] }
    gs      = { v3027[16] }
    cf      = { v3028[1] }
    ?1      = { v3029[1] }
    pf      = { v3030[1] }
    ?3      = { v3031[1] }
    af      = { v3032[1] }
    ?5      = { v3033[1] }
    zf      = { v3034[1] }
    sf      = { v3035[1] }
    tf      = { v3036[1] }
    if      = { v3037[1] }
    df      = { v3038[1] }
    of      = { v3039[1] }
    iopl0   = { v3040[1] }
    iopl1   = { v3041[1] }
    nt      = { v3042[1] }
    ?15     = { v3043[1] }
    rf      = { v3044[1] }
    vm      = { v3045[1] }
    ac      = { v3046[1] }
    vif     = { v3047[1] }
    vip     = { v3048[1] }
    id      = { v3049[1] }
    ?22     = { v3050[1] }
    ?23     = { v3051[1] }
    ?24     = { v3052[1] }
    ?25     = { v3053[1] }
    ?26     = { v3054[1] }
    ?27     = { v3055[1] }
    ?28     = { v3056[1] }
    ?29     = { v3057[1] }
    ?30     = { v3058[1] }
    ?31     = { v3059[1] }
    ip      = { 0x8048584[32] }
memory:
    addr=v3018-0x8[32] value=v3017[32]
    addr=v3018-0x4[32] value=v3019[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=v2249[32]} }
    sp      = { {defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={}, expr=v2260[1]} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={}, expr=v2262[1]} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={}, expr=v2264[1]} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={}, expr=v2266[1]} }
    sf      = { {defs={}, expr=v2267[1]} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={}, expr=v2271[1]} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048583}, expr=0x08048584[32]} }
memory:
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048584[32] }
memory:
0x8048584:sub    esp, 0x04
== PartialSymbolic ==
registers:
    ax      = { v3014[32] }
    cx      = { v3015[32] }
    dx      = { v3016[32] }
    bx      = { v3017[32] }
    sp      = { v3018-0xc[32] }
    bp      = { v3018-0x4[32] }
    si      = { v3020[32] }
    di      = { v3021[32] }
    es      = { v3022[16] }
    cs      = { v3023[16] }
    ss      = { v3024[16] }
    ds      = { v3025[16] }
    fs      = { v3026[16] }
    gs      = { v3027[16] }
    cf      = { -v3077+0x1[1] }
    ?1      = { v3029[1] }
    pf      = { -v3074+0x1[1] }
    ?3      = { v3031[1] }
    af      = { -v3079+0x1[1] }
    ?5      = { v3033[1] }
    zf      = { v3076[1] }
    sf      = { v3075[1] }
    tf      = { v3036[1] }
    if      = { v3037[1] }
    df      = { v3038[1] }
    of      = { v3080[1] }
    iopl0   = { v3040[1] }
    iopl1   = { v3041[1] }
    nt      = { v3042[1] }
    ?15     = { v3043[1] }
    rf      = { v3044[1] }
    vm      = { v3045[1] }
    ac      = { v3046[1] }
    vif     = { v3047[1] }
    vip     = { v3048[1] }
    id      = { v3049[1] }
    ?22     = { v3050[1] }
    ?23     = { v3051[1] }
    ?24     = { v3052[1] }
    ?25     = { v3053[1] }
    ?26     = { v3054[1] }
    ?27     = { v3055[1] }
    ?28     = { v3056[1] }
    ?29     = { v3057[1] }
    ?30     = { v3058[1] }
    ?31     = { v3059[1] }
    ip      = { 0x8048587[32] }
memory:
    addr=v3018-0x8[32] value=v3017[32]
    addr=v3018-0x4[32] value=v3019[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=v2249[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    sf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048584}, expr=0x08048587[32]} }
memory:
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048587[32] }
memory:
0x8048587:mov    ebx, 0x080495e8<.ctors>
== PartialSymbolic ==
registers:
    ax      = { v3014[32] }
    cx      = { v3015[32] }
    dx      = { v3016[32] }
    bx      = { 0x80495e8[32] }
    sp      = { v3018-0xc[32] }
    bp      = { v3018-0x4[32] }
    si      = { v3020[32] }
    di      = { v3021[32] }
    es      = { v3022[16] }
    cs      = { v3023[16] }
    ss      = { v3024[16] }
    ds      = { v3025[16] }
    fs      = { v3026[16] }
    gs      = { v3027[16] }
    cf      = { -v3077+0x1[1] }
    ?1      = { v3029[1] }
    pf      = { -v3074+0x1[1] }
    ?3      = { v3031[1] }
    af      = { -v3079+0x1[1] }
    ?5      = { v3033[1] }
    zf      = { v3076[1] }
    sf      = { v3075[1] }
    tf      = { v3036[1] }
    if      = { v3037[1] }
    df      = { v3038[1] }
    of      = { v3080[1] }
    iopl0   = { v3040[1] }
    iopl1   = { v3041[1] }
    nt      = { v3042[1] }
    ?15     = { v3043[1] }
    rf      = { v3044[1] }
    vm      = { v3045[1] }
    ac      = { v3046[1] }
    vif     = { v3047[1] }
    vip     = { v3048[1] }
    id      = { v3049[1] }
    ?22     = { v3050[1] }
    ?23     = { v3051[1] }
    ?24     = { v3052[1] }
    ?25     = { v3053[1] }
    ?26     = { v3054[1] }
    ?27     = { v3055[1] }
    ?28     = { v3056[1] }
    ?29     = { v3057[1] }
    ?30     = { v3058[1] }
    ?31     = { v3059[1] }
    ip      = { 0x804858c[32] }
memory:
    addr=v3018-0x8[32] value=v3017[32]
    addr=v3018-0x4[32] value=v3019[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=0x080495e8[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    sf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048587}, expr=0x0804858c[32]} }
memory:
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { 0x080495e8[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x0804858c[32] }
memory:
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]
== PartialSymbolic ==
registers:
    ax      = { v3081[32] }
    cx      = { v3015[32] }
    dx      = { v3016[32] }
    bx      = { 0x80495e8[32] }
    sp      = { v3018-0xc[32] }
    bp      = { v3018-0x4[32] }
    si      = { v3020[32] }
    di      = { v3021[32] }
    es      = { v3022[16] }
    cs      = { v3023[16] }
    ss      = { v3024[16] }
    ds      = { v3025[16] }
    fs      = { v3026[16] }
    gs      = { v3027[16] }
    cf      = { -v3077+0x1[1] }
    ?1      = { v3029[1] }
    pf      = { -v3074+0x1[1] }
    ?3      = { v3031[1] }
    af      = { -v3079+0x1[1] }
    ?5      = { v3033[1] }
    zf      = { v3076[1] }
    sf      = { v3075[1] }
    tf      = { v3036[1] }
    if      = { v3037[1] }
    df      = { v3038[1] }
    of      = { v3080[1] }
    iopl0   = { v3040[1] }
    iopl1   = { v3041[1] }
    nt      = { v3042[1] }
    ?15     = { v3043[1] }
    rf      = { v3044[1] }
    vm      = { v3045[1] }
    ac      = { v3046[1] }
    vif     = { v3047[1] }
    vip     = { v3048[1] }
    id      = { v3049[1] }
    ?22     = { v3050[1] }
    ?23     = { v3051[1] }
    ?24     = { v3052[1] }
    ?25     = { v3053[1] }
    ?26     = { v3054[1] }
    ?27     = { v3055[1] }
    ?28     = { v3056[1] }
    ?29     = { v3057[1] }
    ?30     = { v3058[1] }
    ?31     = { v3059[1] }
    ip      = { 0x8048591[32] }
memory:
    addr=0x80495e8[32] value=v3081[32]
    addr=v3018-0x8[32] value=v3017[32]
    addr=v3018-0x4[32] value=v3019[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804858c}, expr=v2292[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=0x080495e8[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    sf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x0804858c}, expr=0x08048591[32]} }
memory:
    addr={defs={0x0804858c}, expr=0x080495eb[32]} value={defs={0x0804858c}, expr=(extract[8] 24[32] 32[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495ea[32]} value={defs={0x0804858c}, expr=(extract[8] 16[32] 24[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e9[32]} value={defs={0x0804858c}, expr=(extract[8] 8[32] 16[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e8[32]} value={defs={0x0804858c}, expr=(extract[8] 0[32] 8[32] v2292[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { 0x080495e8[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048591[32] }
memory:
0x8048591:cmp    eax, 0xff<-0x01>
== PartialSymbolic ==
registers:
    ax      = { v3081[32] }
    cx      = { v3015[32] }
    dx      = { v3016[32] }
    bx      = { 0x80495e8[32] }
    sp      = { v3018-0xc[32] }
    bp      = { v3018-0x4[32] }
    si      = { v3020[32] }
    di      = { v3021[32] }
    es      = { v3022[16] }
    cs      = { v3023[16] }
    ss      = { v3024[16] }
    ds      = { v3025[16] }
    fs      = { v3026[16] }
    gs      = { v3027[16] }
    cf      = { -v3152+0x1[1] }
    ?1      = { v3029[1] }
    pf      = { -v3149+0x1[1] }
    ?3      = { v3031[1] }
    af      = { -v3154+0x1[1] }
    ?5      = { v3033[1] }
    zf      = { v3151[1] }
    sf      = { v3150[1] }
    tf      = { v3036[1] }
    if      = { v3037[1] }
    df      = { v3038[1] }
    of      = { v3155[1] }
    iopl0   = { v3040[1] }
    iopl1   = { v3041[1] }
    nt      = { v3042[1] }
    ?15     = { v3043[1] }
    rf      = { v3044[1] }
    vm      = { v3045[1] }
    ac      = { v3046[1] }
    vif     = { v3047[1] }
    vip     = { v3048[1] }
    id      = { v3049[1] }
    ?22     = { v3050[1] }
    ?23     = { v3051[1] }
    ?24     = { v3052[1] }
    ?25     = { v3053[1] }
    ?26     = { v3054[1] }
    ?27     = { v3055[1] }
    ?28     = { v3056[1] }
    ?29     = { v3057[1] }
    ?30     = { v3058[1] }
    ?31     = { v3059[1] }
    ip      = { 0x8048594[32] }
memory:
    addr=0x80495e8[32] value=v3081[32]
    addr=v3018-0x8[32] value=v3017[32]
    addr=v3018-0x4[32] value=v3019[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804858c}, expr=v2292[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=0x080495e8[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x0804858c,0x08048591}, expr=(zerop[1] (add[32] v2292[32] 1[32]))} }
    sf      = { {defs={0x0804858c,0x08048591}, expr=(extract[1] 31[32] 32[32] (add[32] v2292[32] 1[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x0804858c,0x08048591}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048591}, expr=0x08048594[32]} }
memory:
    addr={defs={0x0804858c}, expr=0x080495eb[32]} value={defs={0x0804858c}, expr=(extract[8] 24[32] 32[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495ea[32]} value={defs={0x0804858c}, expr=(extract[8] 16[32] 24[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e9[32]} value={defs={0x0804858c}, expr=(extract[8] 8[32] 16[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e8[32]} value={defs={0x0804858c}, expr=(extract[8] 0[32] 8[32] v2292[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { 0x080495e8[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048594[32] }
memory:
0x8048594:je     0x080485ac<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v3081[32] }
    cx      = { v3015[32] }
    dx      = { v3016[32] }
    bx      = { 0x80495e8[32] }
    sp      = { v3018-0xc[32] }
    bp      = { v3018-0x4[32] }
    si      = { v3020[32] }
    di      = { v3021[32] }
    es      = { v3022[16] }
    cs      = { v3023[16] }
    ss      = { v3024[16] }
    ds      = { v3025[16] }
    fs      = { v3026[16] }
    gs      = { v3027[16] }
    cf      = { -v3152+0x1[1] }
    ?1      = { v3029[1] }
    pf      = { -v3149+0x1[1] }
    ?3      = { v3031[1] }
    af      = { -v3154+0x1[1] }
    ?5      = { v3033[1] }
    zf      = { v3151[1] }
    sf      = { v3150[1] }
    tf      = { v3036[1] }
    if      = { v3037[1] }
    df      = { v3038[1] }
    of      = { v3155[1] }
    iopl0   = { v3040[1] }
    iopl1   = { v3041[1] }
    nt      = { v3042[1] }
    ?15     = { v3043[1] }
    rf      = { v3044[1] }
    vm      = { v3045[1] }
    ac      = { v3046[1] }
    vif     = { v3047[1] }
    vip     = { v3048[1] }
    id      = { v3049[1] }
    ?22     = { v3050[1] }
    ?23     = { v3051[1] }
    ?24     = { v3052[1] }
    ?25     = { v3053[1] }
    ?26     = { v3054[1] }
    ?27     = { v3055[1] }
    ?28     = { v3056[1] }
    ?29     = { v3057[1] }
    ?30     = { v3058[1] }
    ?31     = { v3059[1] }
    ip      = { v3156[32] }
memory:
    addr=0x80495e8[32] value=v3081[32]
    addr=v3018-0x8[32] value=v3017[32]
    addr=v3018-0x4[32] value=v3019[32]
== Symbolic ==
registers:
    ax      = { {defs={0x0804858c}, expr=v2292[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=0x080495e8[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x0804858c,0x08048591}, expr=(zerop[1] (add[32] v2292[32] 1[32]))} }
    sf      = { {defs={0x0804858c,0x08048591}, expr=(extract[1] 31[32] 32[32] (add[32] v2292[32] 1[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x0804858c,0x08048591}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x0804858c,0x08048591,0x08048594}, expr=(ite[32] (zerop[1] (add[32] v2292[32] 1[32])) 0x080485ac[32] 0x08048596[32])} }
memory:
    addr={defs={0x0804858c}, expr=0x080495eb[32]} value={defs={0x0804858c}, expr=(extract[8] 24[32] 32[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495ea[32]} value={defs={0x0804858c}, expr=(extract[8] 16[32] 24[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e9[32]} value={defs={0x0804858c}, expr=(extract[8] 8[32] 16[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e8[32]} value={defs={0x0804858c}, expr=(extract[8] 0[32] 8[32] v2292[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { 0x080495e8[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048596, 0x080485ac[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
== PartialSymbolic ==
registers:
    ax      = { v3159[32] }
    cx      = { v3160[32] }
    dx      = { v3161[32] }
    bx      = { v3162[32] }
    sp      = { v3163[32] }
    bp      = { v3164[32] }
    si      = { v3165[32] }
    di      = { v3166[32] }
    es      = { v3167[16] }
    cs      = { v3168[16] }
    ss      = { v3169[16] }
    ds      = { v3170[16] }
    fs      = { v3171[16] }
    gs      = { v3172[16] }
    cf      = { v3173[1] }
    ?1      = { v3174[1] }
    pf      = { v3175[1] }
    ?3      = { v3176[1] }
    af      = { v3177[1] }
    ?5      = { v3178[1] }
    zf      = { v3179[1] }
    sf      = { v3180[1] }
    tf      = { v3181[1] }
    if      = { v3182[1] }
    df      = { v3183[1] }
    of      = { v3184[1] }
    iopl0   = { v3185[1] }
    iopl1   = { v3186[1] }
    nt      = { v3187[1] }
    ?15     = { v3188[1] }
    rf      = { v3189[1] }
    vm      = { v3190[1] }
    ac      = { v3191[1] }
    vif     = { v3192[1] }
    vip     = { v3193[1] }
    id      = { v3194[1] }
    ?22     = { v3195[1] }
    ?23     = { v3196[1] }
    ?24     = { v3197[1] }
    ?25     = { v3198[1] }
    ?26     = { v3199[1] }
    ?27     = { v3200[1] }
    ?28     = { v3201[1] }
    ?29     = { v3202[1] }
    ?30     = { v3203[1] }
    ?31     = { v3204[1] }
    ip      = { 0x8048599[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2299[32]} }
    cx      = { {defs={}, expr=v2300[32]} }
    dx      = { {defs={}, expr=v2301[32]} }
    bx      = { {defs={}, expr=v2302[32]} }
    sp      = { {defs={}, expr=v2303[32]} }
    bp      = { {defs={}, expr=v2304[32]} }
    si      = { {defs={}, expr=v2305[32]} }
    di      = { {defs={}, expr=v2306[32]} }
    es      = { {defs={}, expr=v2307[16]} }
    cs      = { {defs={}, expr=v2308[16]} }
    ss      = { {defs={}, expr=v2309[16]} }
    ds      = { {defs={}, expr=v2310[16]} }
    fs      = { {defs={}, expr=v2311[16]} }
    gs      = { {defs={}, expr=v2312[16]} }
    cf      = { {defs={}, expr=v2313[1]} }
    ?1      = { {defs={}, expr=v2314[1]} }
    pf      = { {defs={}, expr=v2315[1]} }
    ?3      = { {defs={}, expr=v2316[1]} }
    af      = { {defs={}, expr=v2317[1]} }
    ?5      = { {defs={}, expr=v2318[1]} }
    zf      = { {defs={}, expr=v2319[1]} }
    sf      = { {defs={}, expr=v2320[1]} }
    tf      = { {defs={}, expr=v2321[1]} }
    if      = { {defs={}, expr=v2322[1]} }
    df      = { {defs={}, expr=v2323[1]} }
    of      = { {defs={}, expr=v2324[1]} }
    iopl0   = { {defs={}, expr=v2325[1]} }
    iopl1   = { {defs={}, expr=v2326[1]} }
    nt      = { {defs={}, expr=v2327[1]} }
    ?15     = { {defs={}, expr=v2328[1]} }
    rf      = { {defs={}, expr=v2329[1]} }
    vm      = { {defs={}, expr=v2330[1]} }
    ac      = { {defs={}, expr=v2331[1]} }
    vif     = { {defs={}, expr=v2332[1]} }
    vip     = { {defs={}, expr=v2333[1]} }
    id      = { {defs={}, expr=v2334[1]} }
    ?22     = { {defs={}, expr=v2335[1]} }
    ?23     = { {defs={}, expr=v2336[1]} }
    ?24     = { {defs={}, expr=v2337[1]} }
    ?25     = { {defs={}, expr=v2338[1]} }
    ?26     = { {defs={}, expr=v2339[1]} }
    ?27     = { {defs={}, expr=v2340[1]} }
    ?28     = { {defs={}, expr=v2341[1]} }
    ?29     = { {defs={}, expr=v2342[1]} }
    ?30     = { {defs={}, expr=v2343[1]} }
    ?31     = { {defs={}, expr=v2344[1]} }
    ip      = { {defs={0x08048596}, expr=0x08048599[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048599[32] }
memory:
0x8048599:lea    edi, [edi + 0x00000000]
== PartialSymbolic ==
registers:
    ax      = { v3159[32] }
    cx      = { v3160[32] }
    dx      = { v3161[32] }
    bx      = { v3162[32] }
    sp      = { v3163[32] }
    bp      = { v3164[32] }
    si      = { v3165[32] }
    di      = { v3166[32] }
    es      = { v3167[16] }
    cs      = { v3168[16] }
    ss      = { v3169[16] }
    ds      = { v3170[16] }
    fs      = { v3171[16] }
    gs      = { v3172[16] }
    cf      = { v3173[1] }
    ?1      = { v3174[1] }
    pf      = { v3175[1] }
    ?3      = { v3176[1] }
    af      = { v3177[1] }
    ?5      = { v3178[1] }
    zf      = { v3179[1] }
    sf      = { v3180[1] }
    tf      = { v3181[1] }
    if      = { v3182[1] }
    df      = { v3183[1] }
    of      = { v3184[1] }
    iopl0   = { v3185[1] }
    iopl1   = { v3186[1] }
    nt      = { v3187[1] }
    ?15     = { v3188[1] }
    rf      = { v3189[1] }
    vm      = { v3190[1] }
    ac      = { v3191[1] }
    vif     = { v3192[1] }
    vip     = { v3193[1] }
    id      = { v3194[1] }
    ?22     = { v3195[1] }
    ?23     = { v3196[1] }
    ?24     = { v3197[1] }
    ?25     = { v3198[1] }
    ?26     = { v3199[1] }
    ?27     = { v3200[1] }
    ?28     = { v3201[1] }
    ?29     = { v3202[1] }
    ?30     = { v3203[1] }
    ?31     = { v3204[1] }
    ip      = { 0x80485a0[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2299[32]} }
    cx      = { {defs={}, expr=v2300[32]} }
    dx      = { {defs={}, expr=v2301[32]} }
    bx      = { {defs={}, expr=v2302[32]} }
    sp      = { {defs={}, expr=v2303[32]} }
    bp      = { {defs={}, expr=v2304[32]} }
    si      = { {defs={}, expr=v2305[32]} }
    di      = { {defs={}, expr=v2306[32]} }
    es      = { {defs={}, expr=v2307[16]} }
    cs      = { {defs={}, expr=v2308[16]} }
    ss      = { {defs={}, expr=v2309[16]} }
    ds      = { {defs={}, expr=v2310[16]} }
    fs      = { {defs={}, expr=v2311[16]} }
    gs      = { {defs={}, expr=v2312[16]} }
    cf      = { {defs={}, expr=v2313[1]} }
    ?1      = { {defs={}, expr=v2314[1]} }
    pf      = { {defs={}, expr=v2315[1]} }
    ?3      = { {defs={}, expr=v2316[1]} }
    af      = { {defs={}, expr=v2317[1]} }
    ?5      = { {defs={}, expr=v2318[1]} }
    zf      = { {defs={}, expr=v2319[1]} }
    sf      = { {defs={}, expr=v2320[1]} }
    tf      = { {defs={}, expr=v2321[1]} }
    if      = { {defs={}, expr=v2322[1]} }
    df      = { {defs={}, expr=v2323[1]} }
    of      = { {defs={}, expr=v2324[1]} }
    iopl0   = { {defs={}, expr=v2325[1]} }
    iopl1   = { {defs={}, expr=v2326[1]} }
    nt      = { {defs={}, expr=v2327[1]} }
    ?15     = { {defs={}, expr=v2328[1]} }
    rf      = { {defs={}, expr=v2329[1]} }
    vm      = { {defs={}, expr=v2330[1]} }
    ac      = { {defs={}, expr=v2331[1]} }
    vif     = { {defs={}, expr=v2332[1]} }
    vip     = { {defs={}, expr=v2333[1]} }
    id      = { {defs={}, expr=v2334[1]} }
    ?22     = { {defs={}, expr=v2335[1]} }
    ?23     = { {defs={}, expr=v2336[1]} }
    ?24     = { {defs={}, expr=v2337[1]} }
    ?25     = { {defs={}, expr=v2338[1]} }
    ?26     = { {defs={}, expr=v2339[1]} }
    ?27     = { {defs={}, expr=v2340[1]} }
    ?28     = { {defs={}, expr=v2341[1]} }
    ?29     = { {defs={}, expr=v2342[1]} }
    ?30     = { {defs={}, expr=v2343[1]} }
    ?31     = { {defs={}, expr=v2344[1]} }
    ip      = { {defs={0x08048599}, expr=0x080485a0[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485a0[32] }
memory:
0x80485a0:sub    ebx, 0x04
== PartialSymbolic ==
registers:
    ax      = { v3159[32] }
    cx      = { v3160[32] }
    dx      = { v3161[32] }
    bx      = { v3162-0x4[32] }
    sp      = { v3163[32] }
    bp      = { v3164[32] }
    si      = { v3165[32] }
    di      = { v3166[32] }
    es      = { v3167[16] }
    cs      = { v3168[16] }
    ss      = { v3169[16] }
    ds      = { v3170[16] }
    fs      = { v3171[16] }
    gs      = { v3172[16] }
    cf      = { -v3222+0x1[1] }
    ?1      = { v3174[1] }
    pf      = { -v3219+0x1[1] }
    ?3      = { v3176[1] }
    af      = { -v3224+0x1[1] }
    ?5      = { v3178[1] }
    zf      = { v3221[1] }
    sf      = { v3220[1] }
    tf      = { v3181[1] }
    if      = { v3182[1] }
    df      = { v3183[1] }
    of      = { v3225[1] }
    iopl0   = { v3185[1] }
    iopl1   = { v3186[1] }
    nt      = { v3187[1] }
    ?15     = { v3188[1] }
    rf      = { v3189[1] }
    vm      = { v3190[1] }
    ac      = { v3191[1] }
    vif     = { v3192[1] }
    vip     = { v3193[1] }
    id      = { v3194[1] }
    ?22     = { v3195[1] }
    ?23     = { v3196[1] }
    ?24     = { v3197[1] }
    ?25     = { v3198[1] }
    ?26     = { v3199[1] }
    ?27     = { v3200[1] }
    ?28     = { v3201[1] }
    ?29     = { v3202[1] }
    ?30     = { v3203[1] }
    ?31     = { v3204[1] }
    ip      = { 0x80485a3[32] }
memory:
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2299[32]} }
    cx      = { {defs={}, expr=v2300[32]} }
    dx      = { {defs={}, expr=v2301[32]} }
    bx      = { {defs={0x080485a0}, expr=(add[32] v2302[32] -4[32])} }
    sp      = { {defs={}, expr=v2303[32]} }
    bp      = { {defs={}, expr=v2304[32]} }
    si      = { {defs={}, expr=v2305[32]} }
    di      = { {defs={}, expr=v2306[32]} }
    es      = { {defs={}, expr=v2307[16]} }
    cs      = { {defs={}, expr=v2308[16]} }
    ss      = { {defs={}, expr=v2309[16]} }
    ds      = { {defs={}, expr=v2310[16]} }
    fs      = { {defs={}, expr=v2311[16]} }
    gs      = { {defs={}, expr=v2312[16]} }
    cf      = { {defs={0x080485a0}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2314[1]} }
    pf      = { {defs={0x080485a0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))))))} }
    ?3      = { {defs={}, expr=v2316[1]} }
    af      = { {defs={0x080485a0}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2318[1]} }
    zf      = { {defs={0x080485a0}, expr=(zerop[1] (add[32] v2302[32] -4[32]))} }
    sf      = { {defs={0x080485a0}, expr=(extract[1] 31[32] 32[32] (add[32] v2302[32] -4[32]))} }
    tf      = { {defs={}, expr=v2321[1]} }
    if      = { {defs={}, expr=v2322[1]} }
    df      = { {defs={}, expr=v2323[1]} }
    of      = { {defs={0x080485a0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2325[1]} }
    iopl1   = { {defs={}, expr=v2326[1]} }
    nt      = { {defs={}, expr=v2327[1]} }
    ?15     = { {defs={}, expr=v2328[1]} }
    rf      = { {defs={}, expr=v2329[1]} }
    vm      = { {defs={}, expr=v2330[1]} }
    ac      = { {defs={}, expr=v2331[1]} }
    vif     = { {defs={}, expr=v2332[1]} }
    vip     = { {defs={}, expr=v2333[1]} }
    id      = { {defs={}, expr=v2334[1]} }
    ?22     = { {defs={}, expr=v2335[1]} }
    ?23     = { {defs={}, expr=v2336[1]} }
    ?24     = { {defs={}, expr=v2337[1]} }
    ?25     = { {defs={}, expr=v2338[1]} }
    ?26     = { {defs={}, expr=v2339[1]} }
    ?27     = { {defs={}, expr=v2340[1]} }
    ?28     = { {defs={}, expr=v2341[1]} }
    ?29     = { {defs={}, expr=v2342[1]} }
    ?30     = { {defs={}, expr=v2343[1]} }
    ?31     = { {defs={}, expr=v2344[1]} }
    ip      = { {defs={0x080485a0}, expr=0x080485a3[32]} }
memory:
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485a3[32] }
memory:
0x80485a3:call   eax
== PartialSymbolic ==
registers:
    ax      = { v3159[32] }
    cx      = { v3160[32] }
    dx      = { v3161[32] }
    bx      = { v3162-0x4[32] }
    sp      = { v3163-0x4[32] }
    bp      = { v3164[32] }
    si      = { v3165[32] }
    di      = { v3166[32] }
    es      = { v3167[16] }
    cs      = { v3168[16] }
    ss      = { v3169[16] }
    ds      = { v3170[16] }
    fs      = { v3171[16] }
    gs      = { v3172[16] }
    cf      = { -v3222+0x1[1] }
    ?1      = { v3174[1] }
    pf      = { -v3219+0x1[1] }
    ?3      = { v3176[1] }
    af      = { -v3224+0x1[1] }
    ?5      = { v3178[1] }
    zf      = { v3221[1] }
    sf      = { v3220[1] }
    tf      = { v3181[1] }
    if      = { v3182[1] }
    df      = { v3183[1] }
    of      = { v3225[1] }
    iopl0   = { v3185[1] }
    iopl1   = { v3186[1] }
    nt      = { v3187[1] }
    ?15     = { v3188[1] }
    rf      = { v3189[1] }
    vm      = { v3190[1] }
    ac      = { v3191[1] }
    vif     = { v3192[1] }
    vip     = { v3193[1] }
    id      = { v3194[1] }
    ?22     = { v3195[1] }
    ?23     = { v3196[1] }
    ?24     = { v3197[1] }
    ?25     = { v3198[1] }
    ?26     = { v3199[1] }
    ?27     = { v3200[1] }
    ?28     = { v3201[1] }
    ?29     = { v3202[1] }
    ?30     = { v3203[1] }
    ?31     = { v3204[1] }
    ip      = { v3159[32] }
memory:
    addr=v3163-0x4[32] value=0x80485a5[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2299[32]} }
    cx      = { {defs={}, expr=v2300[32]} }
    dx      = { {defs={}, expr=v2301[32]} }
    bx      = { {defs={0x080485a0}, expr=(add[32] v2302[32] -4[32])} }
    sp      = { {defs={0x080485a3}, expr=(add[32] v2303[32] -4[32])} }
    bp      = { {defs={}, expr=v2304[32]} }
    si      = { {defs={}, expr=v2305[32]} }
    di      = { {defs={}, expr=v2306[32]} }
    es      = { {defs={}, expr=v2307[16]} }
    cs      = { {defs={}, expr=v2308[16]} }
    ss      = { {defs={}, expr=v2309[16]} }
    ds      = { {defs={}, expr=v2310[16]} }
    fs      = { {defs={}, expr=v2311[16]} }
    gs      = { {defs={}, expr=v2312[16]} }
    cf      = { {defs={0x080485a0}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2314[1]} }
    pf      = { {defs={0x080485a0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))))))} }
    ?3      = { {defs={}, expr=v2316[1]} }
    af      = { {defs={0x080485a0}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2318[1]} }
    zf      = { {defs={0x080485a0}, expr=(zerop[1] (add[32] v2302[32] -4[32]))} }
    sf      = { {defs={0x080485a0}, expr=(extract[1] 31[32] 32[32] (add[32] v2302[32] -4[32]))} }
    tf      = { {defs={}, expr=v2321[1]} }
    if      = { {defs={}, expr=v2322[1]} }
    df      = { {defs={}, expr=v2323[1]} }
    of      = { {defs={0x080485a0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2325[1]} }
    iopl1   = { {defs={}, expr=v2326[1]} }
    nt      = { {defs={}, expr=v2327[1]} }
    ?15     = { {defs={}, expr=v2328[1]} }
    rf      = { {defs={}, expr=v2329[1]} }
    vm      = { {defs={}, expr=v2330[1]} }
    ac      = { {defs={}, expr=v2331[1]} }
    vif     = { {defs={}, expr=v2332[1]} }
    vip     = { {defs={}, expr=v2333[1]} }
    id      = { {defs={}, expr=v2334[1]} }
    ?22     = { {defs={}, expr=v2335[1]} }
    ?23     = { {defs={}, expr=v2336[1]} }
    ?24     = { {defs={}, expr=v2337[1]} }
    ?25     = { {defs={}, expr=v2338[1]} }
    ?26     = { {defs={}, expr=v2339[1]} }
    ?27     = { {defs={}, expr=v2340[1]} }
    ?28     = { {defs={}, expr=v2341[1]} }
    ?29     = { {defs={}, expr=v2342[1]} }
    ?30     = { {defs={}, expr=v2343[1]} }
    ?31     = { {defs={}, expr=v2344[1]} }
    ip      = { {defs={}, expr=v2299[32]} }
memory:
    addr={defs={0x080485a3}, expr=(add[32] (add[32] v2303[32] -4[32]) 3[32])} value={defs={0x080485a3}, expr=8[8]}
    addr={defs={0x080485a3}, expr=(add[32] (add[32] v2303[32] -4[32]) 2[32])} value={defs={0x080485a3}, expr=4[8]}
    addr={defs={0x080485a3}, expr=(add[32] (add[32] v2303[32] -4[32]) 1[32])} value={defs={0x080485a3}, expr=-123[8]}
    addr={defs={0x080485a3}, expr=(add[32] v2303[32] -4[32])} value={defs={0x080485a3}, expr=-91[8]}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
== PartialSymbolic ==
registers:
    ax      = { v3274[32] }
    cx      = { v3229[32] }
    dx      = { v3230[32] }
    bx      = { v3231[32] }
    sp      = { v3232[32] }
    bp      = { v3233[32] }
    si      = { v3234[32] }
    di      = { v3235[32] }
    es      = { v3236[16] }
    cs      = { v3237[16] }
    ss      = { v3238[16] }
    ds      = { v3239[16] }
    fs      = { v3240[16] }
    gs      = { v3241[16] }
    cf      = { v3242[1] }
    ?1      = { v3243[1] }
    pf      = { v3244[1] }
    ?3      = { v3245[1] }
    af      = { v3246[1] }
    ?5      = { v3247[1] }
    zf      = { v3248[1] }
    sf      = { v3249[1] }
    tf      = { v3250[1] }
    if      = { v3251[1] }
    df      = { v3252[1] }
    of      = { v3253[1] }
    iopl0   = { v3254[1] }
    iopl1   = { v3255[1] }
    nt      = { v3256[1] }
    ?15     = { v3257[1] }
    rf      = { v3258[1] }
    vm      = { v3259[1] }
    ac      = { v3260[1] }
    vif     = { v3261[1] }
    vip     = { v3262[1] }
    id      = { v3263[1] }
    ?22     = { v3264[1] }
    ?23     = { v3265[1] }
    ?24     = { v3266[1] }
    ?25     = { v3267[1] }
    ?26     = { v3268[1] }
    ?27     = { v3269[1] }
    ?28     = { v3270[1] }
    ?29     = { v3271[1] }
    ?30     = { v3272[1] }
    ?31     = { v3273[1] }
    ip      = { 0x80485a7[32] }
memory:
    addr=v3231[32] value=v3274[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485a5}, expr=v2393[32]} }
    cx      = { {defs={}, expr=v2348[32]} }
    dx      = { {defs={}, expr=v2349[32]} }
    bx      = { {defs={}, expr=v2350[32]} }
    sp      = { {defs={}, expr=v2351[32]} }
    bp      = { {defs={}, expr=v2352[32]} }
    si      = { {defs={}, expr=v2353[32]} }
    di      = { {defs={}, expr=v2354[32]} }
    es      = { {defs={}, expr=v2355[16]} }
    cs      = { {defs={}, expr=v2356[16]} }
    ss      = { {defs={}, expr=v2357[16]} }
    ds      = { {defs={}, expr=v2358[16]} }
    fs      = { {defs={}, expr=v2359[16]} }
    gs      = { {defs={}, expr=v2360[16]} }
    cf      = { {defs={}, expr=v2361[1]} }
    ?1      = { {defs={}, expr=v2362[1]} }
    pf      = { {defs={}, expr=v2363[1]} }
    ?3      = { {defs={}, expr=v2364[1]} }
    af      = { {defs={}, expr=v2365[1]} }
    ?5      = { {defs={}, expr=v2366[1]} }
    zf      = { {defs={}, expr=v2367[1]} }
    sf      = { {defs={}, expr=v2368[1]} }
    tf      = { {defs={}, expr=v2369[1]} }
    if      = { {defs={}, expr=v2370[1]} }
    df      = { {defs={}, expr=v2371[1]} }
    of      = { {defs={}, expr=v2372[1]} }
    iopl0   = { {defs={}, expr=v2373[1]} }
    iopl1   = { {defs={}, expr=v2374[1]} }
    nt      = { {defs={}, expr=v2375[1]} }
    ?15     = { {defs={}, expr=v2376[1]} }
    rf      = { {defs={}, expr=v2377[1]} }
    vm      = { {defs={}, expr=v2378[1]} }
    ac      = { {defs={}, expr=v2379[1]} }
    vif     = { {defs={}, expr=v2380[1]} }
    vip     = { {defs={}, expr=v2381[1]} }
    id      = { {defs={}, expr=v2382[1]} }
    ?22     = { {defs={}, expr=v2383[1]} }
    ?23     = { {defs={}, expr=v2384[1]} }
    ?24     = { {defs={}, expr=v2385[1]} }
    ?25     = { {defs={}, expr=v2386[1]} }
    ?26     = { {defs={}, expr=v2387[1]} }
    ?27     = { {defs={}, expr=v2388[1]} }
    ?28     = { {defs={}, expr=v2389[1]} }
    ?29     = { {defs={}, expr=v2390[1]} }
    ?30     = { {defs={}, expr=v2391[1]} }
    ?31     = { {defs={}, expr=v2392[1]} }
    ip      = { {defs={0x080485a5}, expr=0x080485a7[32]} }
memory:
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 3[32])} value={defs={0x080485a5}, expr=(extract[8] 24[32] 32[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 2[32])} value={defs={0x080485a5}, expr=(extract[8] 16[32] 24[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 1[32])} value={defs={0x080485a5}, expr=(extract[8] 8[32] 16[32] v2393[32])}
    addr={defs={}, expr=v2350[32]} value={defs={0x080485a5}, expr=(extract[8] 0[32] 8[32] v2393[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485a7[32] }
memory:
0x80485a7:cmp    eax, 0xff<-0x01>
== PartialSymbolic ==
registers:
    ax      = { v3274[32] }
    cx      = { v3229[32] }
    dx      = { v3230[32] }
    bx      = { v3231[32] }
    sp      = { v3232[32] }
    bp      = { v3233[32] }
    si      = { v3234[32] }
    di      = { v3235[32] }
    es      = { v3236[16] }
    cs      = { v3237[16] }
    ss      = { v3238[16] }
    ds      = { v3239[16] }
    fs      = { v3240[16] }
    gs      = { v3241[16] }
    cf      = { -v3293+0x1[1] }
    ?1      = { v3243[1] }
    pf      = { -v3290+0x1[1] }
    ?3      = { v3245[1] }
    af      = { -v3295+0x1[1] }
    ?5      = { v3247[1] }
    zf      = { v3292[1] }
    sf      = { v3291[1] }
    tf      = { v3250[1] }
    if      = { v3251[1] }
    df      = { v3252[1] }
    of      = { v3296[1] }
    iopl0   = { v3254[1] }
    iopl1   = { v3255[1] }
    nt      = { v3256[1] }
    ?15     = { v3257[1] }
    rf      = { v3258[1] }
    vm      = { v3259[1] }
    ac      = { v3260[1] }
    vif     = { v3261[1] }
    vip     = { v3262[1] }
    id      = { v3263[1] }
    ?22     = { v3264[1] }
    ?23     = { v3265[1] }
    ?24     = { v3266[1] }
    ?25     = { v3267[1] }
    ?26     = { v3268[1] }
    ?27     = { v3269[1] }
    ?28     = { v3270[1] }
    ?29     = { v3271[1] }
    ?30     = { v3272[1] }
    ?31     = { v3273[1] }
    ip      = { 0x80485aa[32] }
memory:
    addr=v3231[32] value=v3274[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485a5}, expr=v2393[32]} }
    cx      = { {defs={}, expr=v2348[32]} }
    dx      = { {defs={}, expr=v2349[32]} }
    bx      = { {defs={}, expr=v2350[32]} }
    sp      = { {defs={}, expr=v2351[32]} }
    bp      = { {defs={}, expr=v2352[32]} }
    si      = { {defs={}, expr=v2353[32]} }
    di      = { {defs={}, expr=v2354[32]} }
    es      = { {defs={}, expr=v2355[16]} }
    cs      = { {defs={}, expr=v2356[16]} }
    ss      = { {defs={}, expr=v2357[16]} }
    ds      = { {defs={}, expr=v2358[16]} }
    fs      = { {defs={}, expr=v2359[16]} }
    gs      = { {defs={}, expr=v2360[16]} }
    cf      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    ?1      = { {defs={}, expr=v2362[1]} }
    pf      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2364[1]} }
    af      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    ?5      = { {defs={}, expr=v2366[1]} }
    zf      = { {defs={0x080485a5,0x080485a7}, expr=(zerop[1] (add[32] v2393[32] 1[32]))} }
    sf      = { {defs={0x080485a5,0x080485a7}, expr=(extract[1] 31[32] 32[32] (add[32] v2393[32] 1[32]))} }
    tf      = { {defs={}, expr=v2369[1]} }
    if      = { {defs={}, expr=v2370[1]} }
    df      = { {defs={}, expr=v2371[1]} }
    of      = { {defs={0x080485a5,0x080485a7}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2373[1]} }
    iopl1   = { {defs={}, expr=v2374[1]} }
    nt      = { {defs={}, expr=v2375[1]} }
    ?15     = { {defs={}, expr=v2376[1]} }
    rf      = { {defs={}, expr=v2377[1]} }
    vm      = { {defs={}, expr=v2378[1]} }
    ac      = { {defs={}, expr=v2379[1]} }
    vif     = { {defs={}, expr=v2380[1]} }
    vip     = { {defs={}, expr=v2381[1]} }
    id      = { {defs={}, expr=v2382[1]} }
    ?22     = { {defs={}, expr=v2383[1]} }
    ?23     = { {defs={}, expr=v2384[1]} }
    ?24     = { {defs={}, expr=v2385[1]} }
    ?25     = { {defs={}, expr=v2386[1]} }
    ?26     = { {defs={}, expr=v2387[1]} }
    ?27     = { {defs={}, expr=v2388[1]} }
    ?28     = { {defs={}, expr=v2389[1]} }
    ?29     = { {defs={}, expr=v2390[1]} }
    ?30     = { {defs={}, expr=v2391[1]} }
    ?31     = { {defs={}, expr=v2392[1]} }
    ip      = { {defs={0x080485a7}, expr=0x080485aa[32]} }
memory:
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 3[32])} value={defs={0x080485a5}, expr=(extract[8] 24[32] 32[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 2[32])} value={defs={0x080485a5}, expr=(extract[8] 16[32] 24[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 1[32])} value={defs={0x080485a5}, expr=(extract[8] 8[32] 16[32] v2393[32])}
    addr={defs={}, expr=v2350[32]} value={defs={0x080485a5}, expr=(extract[8] 0[32] 8[32] v2393[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485aa[32] }
memory:
0x80485aa:jne    0x080485a0<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v3274[32] }
    cx      = { v3229[32] }
    dx      = { v3230[32] }
    bx      = { v3231[32] }
    sp      = { v3232[32] }
    bp      = { v3233[32] }
    si      = { v3234[32] }
    di      = { v3235[32] }
    es      = { v3236[16] }
    cs      = { v3237[16] }
    ss      = { v3238[16] }
    ds      = { v3239[16] }
    fs      = { v3240[16] }
    gs      = { v3241[16] }
    cf      = { -v3293+0x1[1] }
    ?1      = { v3243[1] }
    pf      = { -v3290+0x1[1] }
    ?3      = { v3245[1] }
    af      = { -v3295+0x1[1] }
    ?5      = { v3247[1] }
    zf      = { v3292[1] }
    sf      = { v3291[1] }
    tf      = { v3250[1] }
    if      = { v3251[1] }
    df      = { v3252[1] }
    of      = { v3296[1] }
    iopl0   = { v3254[1] }
    iopl1   = { v3255[1] }
    nt      = { v3256[1] }
    ?15     = { v3257[1] }
    rf      = { v3258[1] }
    vm      = { v3259[1] }
    ac      = { v3260[1] }
    vif     = { v3261[1] }
    vip     = { v3262[1] }
    id      = { v3263[1] }
    ?22     = { v3264[1] }
    ?23     = { v3265[1] }
    ?24     = { v3266[1] }
    ?25     = { v3267[1] }
    ?26     = { v3268[1] }
    ?27     = { v3269[1] }
    ?28     = { v3270[1] }
    ?29     = { v3271[1] }
    ?30     = { v3272[1] }
    ?31     = { v3273[1] }
    ip      = { v3297[32] }
memory:
    addr=v3231[32] value=v3274[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485a5}, expr=v2393[32]} }
    cx      = { {defs={}, expr=v2348[32]} }
    dx      = { {defs={}, expr=v2349[32]} }
    bx      = { {defs={}, expr=v2350[32]} }
    sp      = { {defs={}, expr=v2351[32]} }
    bp      = { {defs={}, expr=v2352[32]} }
    si      = { {defs={}, expr=v2353[32]} }
    di      = { {defs={}, expr=v2354[32]} }
    es      = { {defs={}, expr=v2355[16]} }
    cs      = { {defs={}, expr=v2356[16]} }
    ss      = { {defs={}, expr=v2357[16]} }
    ds      = { {defs={}, expr=v2358[16]} }
    fs      = { {defs={}, expr=v2359[16]} }
    gs      = { {defs={}, expr=v2360[16]} }
    cf      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    ?1      = { {defs={}, expr=v2362[1]} }
    pf      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2364[1]} }
    af      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    ?5      = { {defs={}, expr=v2366[1]} }
    zf      = { {defs={0x080485a5,0x080485a7}, expr=(zerop[1] (add[32] v2393[32] 1[32]))} }
    sf      = { {defs={0x080485a5,0x080485a7}, expr=(extract[1] 31[32] 32[32] (add[32] v2393[32] 1[32]))} }
    tf      = { {defs={}, expr=v2369[1]} }
    if      = { {defs={}, expr=v2370[1]} }
    df      = { {defs={}, expr=v2371[1]} }
    of      = { {defs={0x080485a5,0x080485a7}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2373[1]} }
    iopl1   = { {defs={}, expr=v2374[1]} }
    nt      = { {defs={}, expr=v2375[1]} }
    ?15     = { {defs={}, expr=v2376[1]} }
    rf      = { {defs={}, expr=v2377[1]} }
    vm      = { {defs={}, expr=v2378[1]} }
    ac      = { {defs={}, expr=v2379[1]} }
    vif     = { {defs={}, expr=v2380[1]} }
    vip     = { {defs={}, expr=v2381[1]} }
    id      = { {defs={}, expr=v2382[1]} }
    ?22     = { {defs={}, expr=v2383[1]} }
    ?23     = { {defs={}, expr=v2384[1]} }
    ?24     = { {defs={}, expr=v2385[1]} }
    ?25     = { {defs={}, expr=v2386[1]} }
    ?26     = { {defs={}, expr=v2387[1]} }
    ?27     = { {defs={}, expr=v2388[1]} }
    ?28     = { {defs={}, expr=v2389[1]} }
    ?29     = { {defs={}, expr=v2390[1]} }
    ?30     = { {defs={}, expr=v2391[1]} }
    ?31     = { {defs={}, expr=v2392[1]} }
    ip      = { {defs={0x080485a5,0x080485a7,0x080485aa}, expr=(ite[32] (invert[1] (zerop[1] (add[32] v2393[32] 1[32]))) 0x080485a0[32] 0x080485ac[32])} }
memory:
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 3[32])} value={defs={0x080485a5}, expr=(extract[8] 24[32] 32[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 2[32])} value={defs={0x080485a5}, expr=(extract[8] 16[32] 24[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 1[32])} value={defs={0x080485a5}, expr=(extract[8] 8[32] 16[32] v2393[32])}
    addr={defs={}, expr=v2350[32]} value={defs={0x080485a5}, expr=(extract[8] 0[32] 8[32] v2393[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485a0, 0x080485ac[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
== PartialSymbolic ==
registers:
    ax      = { v3346[32] }
    cx      = { v3301[32] }
    dx      = { v3302[32] }
    bx      = { v3303[32] }
    sp      = { v3304+0x4[32] }
    bp      = { v3305[32] }
    si      = { v3306[32] }
    di      = { v3307[32] }
    es      = { v3308[16] }
    cs      = { v3309[16] }
    ss      = { v3310[16] }
    ds      = { v3311[16] }
    fs      = { v3312[16] }
    gs      = { v3313[16] }
    cf      = { v3314[1] }
    ?1      = { v3315[1] }
    pf      = { v3316[1] }
    ?3      = { v3317[1] }
    af      = { v3318[1] }
    ?5      = { v3319[1] }
    zf      = { v3320[1] }
    sf      = { v3321[1] }
    tf      = { v3322[1] }
    if      = { v3323[1] }
    df      = { v3324[1] }
    of      = { v3325[1] }
    iopl0   = { v3326[1] }
    iopl1   = { v3327[1] }
    nt      = { v3328[1] }
    ?15     = { v3329[1] }
    rf      = { v3330[1] }
    vm      = { v3331[1] }
    ac      = { v3332[1] }
    vif     = { v3333[1] }
    vip     = { v3334[1] }
    id      = { v3335[1] }
    ?22     = { v3336[1] }
    ?23     = { v3337[1] }
    ?24     = { v3338[1] }
    ?25     = { v3339[1] }
    ?26     = { v3340[1] }
    ?27     = { v3341[1] }
    ?28     = { v3342[1] }
    ?29     = { v3343[1] }
    ?30     = { v3344[1] }
    ?31     = { v3345[1] }
    ip      = { 0x80485ad[32] }
memory:
    addr=v3304[32] value=v3346[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485ac}, expr=v2446[32]} }
    cx      = { {defs={}, expr=v2401[32]} }
    dx      = { {defs={}, expr=v2402[32]} }
    bx      = { {defs={}, expr=v2403[32]} }
    sp      = { {defs={0x080485ac}, expr=(add[32] v2404[32] 4[32])} }
    bp      = { {defs={}, expr=v2405[32]} }
    si      = { {defs={}, expr=v2406[32]} }
    di      = { {defs={}, expr=v2407[32]} }
    es      = { {defs={}, expr=v2408[16]} }
    cs      = { {defs={}, expr=v2409[16]} }
    ss      = { {defs={}, expr=v2410[16]} }
    ds      = { {defs={}, expr=v2411[16]} }
    fs      = { {defs={}, expr=v2412[16]} }
    gs      = { {defs={}, expr=v2413[16]} }
    cf      = { {defs={}, expr=v2414[1]} }
    ?1      = { {defs={}, expr=v2415[1]} }
    pf      = { {defs={}, expr=v2416[1]} }
    ?3      = { {defs={}, expr=v2417[1]} }
    af      = { {defs={}, expr=v2418[1]} }
    ?5      = { {defs={}, expr=v2419[1]} }
    zf      = { {defs={}, expr=v2420[1]} }
    sf      = { {defs={}, expr=v2421[1]} }
    tf      = { {defs={}, expr=v2422[1]} }
    if      = { {defs={}, expr=v2423[1]} }
    df      = { {defs={}, expr=v2424[1]} }
    of      = { {defs={}, expr=v2425[1]} }
    iopl0   = { {defs={}, expr=v2426[1]} }
    iopl1   = { {defs={}, expr=v2427[1]} }
    nt      = { {defs={}, expr=v2428[1]} }
    ?15     = { {defs={}, expr=v2429[1]} }
    rf      = { {defs={}, expr=v2430[1]} }
    vm      = { {defs={}, expr=v2431[1]} }
    ac      = { {defs={}, expr=v2432[1]} }
    vif     = { {defs={}, expr=v2433[1]} }
    vip     = { {defs={}, expr=v2434[1]} }
    id      = { {defs={}, expr=v2435[1]} }
    ?22     = { {defs={}, expr=v2436[1]} }
    ?23     = { {defs={}, expr=v2437[1]} }
    ?24     = { {defs={}, expr=v2438[1]} }
    ?25     = { {defs={}, expr=v2439[1]} }
    ?26     = { {defs={}, expr=v2440[1]} }
    ?27     = { {defs={}, expr=v2441[1]} }
    ?28     = { {defs={}, expr=v2442[1]} }
    ?29     = { {defs={}, expr=v2443[1]} }
    ?30     = { {defs={}, expr=v2444[1]} }
    ?31     = { {defs={}, expr=v2445[1]} }
    ip      = { {defs={0x080485ac}, expr=0x080485ad[32]} }
memory:
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 3[32])} value={defs={0x080485ac}, expr=(extract[8] 24[32] 32[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 2[32])} value={defs={0x080485ac}, expr=(extract[8] 16[32] 24[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 1[32])} value={defs={0x080485ac}, expr=(extract[8] 8[32] 16[32] v2446[32])}
    addr={defs={}, expr=v2404[32]} value={defs={0x080485ac}, expr=(extract[8] 0[32] 8[32] v2446[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485ad[32] }
memory:
0x80485ad:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v3346[32] }
    cx      = { v3301[32] }
    dx      = { v3302[32] }
    bx      = { v3348[32] }
    sp      = { v3304+0x8[32] }
    bp      = { v3305[32] }
    si      = { v3306[32] }
    di      = { v3307[32] }
    es      = { v3308[16] }
    cs      = { v3309[16] }
    ss      = { v3310[16] }
    ds      = { v3311[16] }
    fs      = { v3312[16] }
    gs      = { v3313[16] }
    cf      = { v3314[1] }
    ?1      = { v3315[1] }
    pf      = { v3316[1] }
    ?3      = { v3317[1] }
    af      = { v3318[1] }
    ?5      = { v3319[1] }
    zf      = { v3320[1] }
    sf      = { v3321[1] }
    tf      = { v3322[1] }
    if      = { v3323[1] }
    df      = { v3324[1] }
    of      = { v3325[1] }
    iopl0   = { v3326[1] }
    iopl1   = { v3327[1] }
    nt      = { v3328[1] }
    ?15     = { v3329[1] }
    rf      = { v3330[1] }
    vm      = { v3331[1] }
    ac      = { v3332[1] }
    vif     = { v3333[1] }
    vip     = { v3334[1] }
    id      = { v3335[1] }
    ?22     = { v3336[1] }
    ?23     = { v3337[1] }
    ?24     = { v3338[1] }
    ?25     = { v3339[1] }
    ?26     = { v3340[1] }
    ?27     = { v3341[1] }
    ?28     = { v3342[1] }
    ?29     = { v3343[1] }
    ?30     = { v3344[1] }
    ?31     = { v3345[1] }
    ip      = { 0x80485ae[32] }
memory:
    addr=v3304+0x4[32] value=v3348[32]
    addr=v3304[32] value=v3346[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485ac}, expr=v2446[32]} }
    cx      = { {defs={}, expr=v2401[32]} }
    dx      = { {defs={}, expr=v2402[32]} }
    bx      = { {defs={0x080485ad}, expr=v2451[32]} }
    sp      = { {defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v2405[32]} }
    si      = { {defs={}, expr=v2406[32]} }
    di      = { {defs={}, expr=v2407[32]} }
    es      = { {defs={}, expr=v2408[16]} }
    cs      = { {defs={}, expr=v2409[16]} }
    ss      = { {defs={}, expr=v2410[16]} }
    ds      = { {defs={}, expr=v2411[16]} }
    fs      = { {defs={}, expr=v2412[16]} }
    gs      = { {defs={}, expr=v2413[16]} }
    cf      = { {defs={}, expr=v2414[1]} }
    ?1      = { {defs={}, expr=v2415[1]} }
    pf      = { {defs={}, expr=v2416[1]} }
    ?3      = { {defs={}, expr=v2417[1]} }
    af      = { {defs={}, expr=v2418[1]} }
    ?5      = { {defs={}, expr=v2419[1]} }
    zf      = { {defs={}, expr=v2420[1]} }
    sf      = { {defs={}, expr=v2421[1]} }
    tf      = { {defs={}, expr=v2422[1]} }
    if      = { {defs={}, expr=v2423[1]} }
    df      = { {defs={}, expr=v2424[1]} }
    of      = { {defs={}, expr=v2425[1]} }
    iopl0   = { {defs={}, expr=v2426[1]} }
    iopl1   = { {defs={}, expr=v2427[1]} }
    nt      = { {defs={}, expr=v2428[1]} }
    ?15     = { {defs={}, expr=v2429[1]} }
    rf      = { {defs={}, expr=v2430[1]} }
    vm      = { {defs={}, expr=v2431[1]} }
    ac      = { {defs={}, expr=v2432[1]} }
    vif     = { {defs={}, expr=v2433[1]} }
    vip     = { {defs={}, expr=v2434[1]} }
    id      = { {defs={}, expr=v2435[1]} }
    ?22     = { {defs={}, expr=v2436[1]} }
    ?23     = { {defs={}, expr=v2437[1]} }
    ?24     = { {defs={}, expr=v2438[1]} }
    ?25     = { {defs={}, expr=v2439[1]} }
    ?26     = { {defs={}, expr=v2440[1]} }
    ?27     = { {defs={}, expr=v2441[1]} }
    ?28     = { {defs={}, expr=v2442[1]} }
    ?29     = { {defs={}, expr=v2443[1]} }
    ?30     = { {defs={}, expr=v2444[1]} }
    ?31     = { {defs={}, expr=v2445[1]} }
    ip      = { {defs={0x080485ad}, expr=0x080485ae[32]} }
memory:
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 3[32])} value={defs={0x080485ad}, expr=(extract[8] 24[32] 32[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 2[32])} value={defs={0x080485ad}, expr=(extract[8] 16[32] 24[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 1[32])} value={defs={0x080485ad}, expr=(extract[8] 8[32] 16[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 4[32])} value={defs={0x080485ad}, expr=(extract[8] 0[32] 8[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 3[32])} value={defs={0x080485ac}, expr=(extract[8] 24[32] 32[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 2[32])} value={defs={0x080485ac}, expr=(extract[8] 16[32] 24[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 1[32])} value={defs={0x080485ac}, expr=(extract[8] 8[32] 16[32] v2446[32])}
    addr={defs={}, expr=v2404[32]} value={defs={0x080485ac}, expr=(extract[8] 0[32] 8[32] v2446[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485ae[32] }
memory:
0x80485ae:pop    ebp
== PartialSymbolic ==
registers:
    ax      = { v3346[32] }
    cx      = { v3301[32] }
    dx      = { v3302[32] }
    bx      = { v3348[32] }
    sp      = { v3304+0xc[32] }
    bp      = { v3350[32] }
    si      = { v3306[32] }
    di      = { v3307[32] }
    es      = { v3308[16] }
    cs      = { v3309[16] }
    ss      = { v3310[16] }
    ds      = { v3311[16] }
    fs      = { v3312[16] }
    gs      = { v3313[16] }
    cf      = { v3314[1] }
    ?1      = { v3315[1] }
    pf      = { v3316[1] }
    ?3      = { v3317[1] }
    af      = { v3318[1] }
    ?5      = { v3319[1] }
    zf      = { v3320[1] }
    sf      = { v3321[1] }
    tf      = { v3322[1] }
    if      = { v3323[1] }
    df      = { v3324[1] }
    of      = { v3325[1] }
    iopl0   = { v3326[1] }
    iopl1   = { v3327[1] }
    nt      = { v3328[1] }
    ?15     = { v3329[1] }
    rf      = { v3330[1] }
    vm      = { v3331[1] }
    ac      = { v3332[1] }
    vif     = { v3333[1] }
    vip     = { v3334[1] }
    id      = { v3335[1] }
    ?22     = { v3336[1] }
    ?23     = { v3337[1] }
    ?24     = { v3338[1] }
    ?25     = { v3339[1] }
    ?26     = { v3340[1] }
    ?27     = { v3341[1] }
    ?28     = { v3342[1] }
    ?29     = { v3343[1] }
    ?30     = { v3344[1] }
    ?31     = { v3345[1] }
    ip      = { 0x80485af[32] }
memory:
    addr=v3304+0x8[32] value=v3350[32]
    addr=v3304+0x4[32] value=v3348[32]
    addr=v3304[32] value=v3346[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485ac}, expr=v2446[32]} }
    cx      = { {defs={}, expr=v2401[32]} }
    dx      = { {defs={}, expr=v2402[32]} }
    bx      = { {defs={0x080485ad}, expr=v2451[32]} }
    sp      = { {defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x080485ae}, expr=v2456[32]} }
    si      = { {defs={}, expr=v2406[32]} }
    di      = { {defs={}, expr=v2407[32]} }
    es      = { {defs={}, expr=v2408[16]} }
    cs      = { {defs={}, expr=v2409[16]} }
    ss      = { {defs={}, expr=v2410[16]} }
    ds      = { {defs={}, expr=v2411[16]} }
    fs      = { {defs={}, expr=v2412[16]} }
    gs      = { {defs={}, expr=v2413[16]} }
    cf      = { {defs={}, expr=v2414[1]} }
    ?1      = { {defs={}, expr=v2415[1]} }
    pf      = { {defs={}, expr=v2416[1]} }
    ?3      = { {defs={}, expr=v2417[1]} }
    af      = { {defs={}, expr=v2418[1]} }
    ?5      = { {defs={}, expr=v2419[1]} }
    zf      = { {defs={}, expr=v2420[1]} }
    sf      = { {defs={}, expr=v2421[1]} }
    tf      = { {defs={}, expr=v2422[1]} }
    if      = { {defs={}, expr=v2423[1]} }
    df      = { {defs={}, expr=v2424[1]} }
    of      = { {defs={}, expr=v2425[1]} }
    iopl0   = { {defs={}, expr=v2426[1]} }
    iopl1   = { {defs={}, expr=v2427[1]} }
    nt      = { {defs={}, expr=v2428[1]} }
    ?15     = { {defs={}, expr=v2429[1]} }
    rf      = { {defs={}, expr=v2430[1]} }
    vm      = { {defs={}, expr=v2431[1]} }
    ac      = { {defs={}, expr=v2432[1]} }
    vif     = { {defs={}, expr=v2433[1]} }
    vip     = { {defs={}, expr=v2434[1]} }
    id      = { {defs={}, expr=v2435[1]} }
    ?22     = { {defs={}, expr=v2436[1]} }
    ?23     = { {defs={}, expr=v2437[1]} }
    ?24     = { {defs={}, expr=v2438[1]} }
    ?25     = { {defs={}, expr=v2439[1]} }
    ?26     = { {defs={}, expr=v2440[1]} }
    ?27     = { {defs={}, expr=v2441[1]} }
    ?28     = { {defs={}, expr=v2442[1]} }
    ?29     = { {defs={}, expr=v2443[1]} }
    ?30     = { {defs={}, expr=v2444[1]} }
    ?31     = { {defs={}, expr=v2445[1]} }
    ip      = { {defs={0x080485ae}, expr=0x080485af[32]} }
memory:
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 3[32])} value={defs={0x080485ae}, expr=(extract[8] 24[32] 32[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 2[32])} value={defs={0x080485ae}, expr=(extract[8] 16[32] 24[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 1[32])} value={defs={0x080485ae}, expr=(extract[8] 8[32] 16[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 4[32])} value={defs={0x080485ae}, expr=(extract[8] 0[32] 8[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 3[32])} value={defs={0x080485ad}, expr=(extract[8] 24[32] 32[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 2[32])} value={defs={0x080485ad}, expr=(extract[8] 16[32] 24[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 1[32])} value={defs={0x080485ad}, expr=(extract[8] 8[32] 16[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 4[32])} value={defs={0x080485ad}, expr=(extract[8] 0[32] 8[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 3[32])} value={defs={0x080485ac}, expr=(extract[8] 24[32] 32[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 2[32])} value={defs={0x080485ac}, expr=(extract[8] 16[32] 24[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 1[32])} value={defs={0x080485ac}, expr=(extract[8] 8[32] 16[32] v2446[32])}
    addr={defs={}, expr=v2404[32]} value={defs={0x080485ac}, expr=(extract[8] 0[32] 8[32] v2446[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485af[32] }
memory:
0x80485af:ret    
== PartialSymbolic ==
registers:
    ax      = { v3346[32] }
    cx      = { v3301[32] }
    dx      = { v3302[32] }
    bx      = { v3348[32] }
    sp      = { v3304+0x10[32] }
    bp      = { v3350[32] }
    si      = { v3306[32] }
    di      = { v3307[32] }
    es      = { v3308[16] }
    cs      = { v3309[16] }
    ss      = { v3310[16] }
    ds      = { v3311[16] }
    fs      = { v3312[16] }
    gs      = { v3313[16] }
    cf      = { v3314[1] }
    ?1      = { v3315[1] }
    pf      = { v3316[1] }
    ?3      = { v3317[1] }
    af      = { v3318[1] }
    ?5      = { v3319[1] }
    zf      = { v3320[1] }
    sf      = { v3321[1] }
    tf      = { v3322[1] }
    if      = { v3323[1] }
    df      = { v3324[1] }
    of      = { v3325[1] }
    iopl0   = { v3326[1] }
    iopl1   = { v3327[1] }
    nt      = { v3328[1] }
    ?15     = { v3329[1] }
    rf      = { v3330[1] }
    vm      = { v3331[1] }
    ac      = { v3332[1] }
    vif     = { v3333[1] }
    vip     = { v3334[1] }
    id      = { v3335[1] }
    ?22     = { v3336[1] }
    ?23     = { v3337[1] }
    ?24     = { v3338[1] }
    ?25     = { v3339[1] }
    ?26     = { v3340[1] }
    ?27     = { v3341[1] }
    ?28     = { v3342[1] }
    ?29     = { v3343[1] }
    ?30     = { v3344[1] }
    ?31     = { v3345[1] }
    ip      = { v3352[32] }
memory:
    addr=v3304+0xc[32] value=v3352[32]
    addr=v3304+0x8[32] value=v3350[32]
    addr=v3304+0x4[32] value=v3348[32]
    addr=v3304[32] value=v3346[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485ac}, expr=v2446[32]} }
    cx      = { {defs={}, expr=v2401[32]} }
    dx      = { {defs={}, expr=v2402[32]} }
    bx      = { {defs={0x080485ad}, expr=v2451[32]} }
    sp      = { {defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] (add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x080485ae}, expr=v2456[32]} }
    si      = { {defs={}, expr=v2406[32]} }
    di      = { {defs={}, expr=v2407[32]} }
    es      = { {defs={}, expr=v2408[16]} }
    cs      = { {defs={}, expr=v2409[16]} }
    ss      = { {defs={}, expr=v2410[16]} }
    ds      = { {defs={}, expr=v2411[16]} }
    fs      = { {defs={}, expr=v2412[16]} }
    gs      = { {defs={}, expr=v2413[16]} }
    cf      = { {defs={}, expr=v2414[1]} }
    ?1      = { {defs={}, expr=v2415[1]} }
    pf      = { {defs={}, expr=v2416[1]} }
    ?3      = { {defs={}, expr=v2417[1]} }
    af      = { {defs={}, expr=v2418[1]} }
    ?5      = { {defs={}, expr=v2419[1]} }
    zf      = { {defs={}, expr=v2420[1]} }
    sf      = { {defs={}, expr=v2421[1]} }
    tf      = { {defs={}, expr=v2422[1]} }
    if      = { {defs={}, expr=v2423[1]} }
    df      = { {defs={}, expr=v2424[1]} }
    of      = { {defs={}, expr=v2425[1]} }
    iopl0   = { {defs={}, expr=v2426[1]} }
    iopl1   = { {defs={}, expr=v2427[1]} }
    nt      = { {defs={}, expr=v2428[1]} }
    ?15     = { {defs={}, expr=v2429[1]} }
    rf      = { {defs={}, expr=v2430[1]} }
    vm      = { {defs={}, expr=v2431[1]} }
    ac      = { {defs={}, expr=v2432[1]} }
    vif     = { {defs={}, expr=v2433[1]} }
    vip     = { {defs={}, expr=v2434[1]} }
    id      = { {defs={}, expr=v2435[1]} }
    ?22     = { {defs={}, expr=v2436[1]} }
    ?23     = { {defs={}, expr=v2437[1]} }
    ?24     = { {defs={}, expr=v2438[1]} }
    ?25     = { {defs={}, expr=v2439[1]} }
    ?26     = { {defs={}, expr=v2440[1]} }
    ?27     = { {defs={}, expr=v2441[1]} }
    ?28     = { {defs={}, expr=v2442[1]} }
    ?29     = { {defs={}, expr=v2443[1]} }
    ?30     = { {defs={}, expr=v2444[1]} }
    ?31     = { {defs={}, expr=v2445[1]} }
    ip      = { {defs={0x080485af}, expr=v2461[32]} }
memory:
    addr={defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] (add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080485af}, expr=(extract[8] 24[32] 32[32] v2461[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] (add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080485af}, expr=(extract[8] 16[32] 24[32] v2461[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] (add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080485af}, expr=(extract[8] 8[32] 16[32] v2461[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32])} value={defs={0x080485af}, expr=(extract[8] 0[32] 8[32] v2461[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 3[32])} value={defs={0x080485ae}, expr=(extract[8] 24[32] 32[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 2[32])} value={defs={0x080485ae}, expr=(extract[8] 16[32] 24[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 1[32])} value={defs={0x080485ae}, expr=(extract[8] 8[32] 16[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 4[32])} value={defs={0x080485ae}, expr=(extract[8] 0[32] 8[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 3[32])} value={defs={0x080485ad}, expr=(extract[8] 24[32] 32[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 2[32])} value={defs={0x080485ad}, expr=(extract[8] 16[32] 24[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 1[32])} value={defs={0x080485ad}, expr=(extract[8] 8[32] 16[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 4[32])} value={defs={0x080485ad}, expr=(extract[8] 0[32] 8[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 3[32])} value={defs={0x080485ac}, expr=(extract[8] 24[32] 32[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 2[32])} value={defs={0x080485ac}, expr=(extract[8] 16[32] 24[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 1[32])} value={defs={0x080485ac}, expr=(extract[8] 8[32] 16[32] v2446[32])}
    addr={defs={}, expr=v2404[32]} value={defs={0x080485ac}, expr=(extract[8] 0[32] 8[32] v2446[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
== PartialSymbolic ==
registers:
    ax      = { v3356[32] }
    cx      = { v3357[32] }
    dx      = { v3358[32] }
    bx      = { v3359[32] }
    sp      = { v3360-0x4[32] }
    bp      = { v3361[32] }
    si      = { v3362[32] }
    di      = { v3363[32] }
    es      = { v3364[16] }
    cs      = { v3365[16] }
    ss      = { v3366[16] }
    ds      = { v3367[16] }
    fs      = { v3368[16] }
    gs      = { v3369[16] }
    cf      = { v3370[1] }
    ?1      = { v3371[1] }
    pf      = { v3372[1] }
    ?3      = { v3373[1] }
    af      = { v3374[1] }
    ?5      = { v3375[1] }
    zf      = { v3376[1] }
    sf      = { v3377[1] }
    tf      = { v3378[1] }
    if      = { v3379[1] }
    df      = { v3380[1] }
    of      = { v3381[1] }
    iopl0   = { v3382[1] }
    iopl1   = { v3383[1] }
    nt      = { v3384[1] }
    ?15     = { v3385[1] }
    rf      = { v3386[1] }
    vm      = { v3387[1] }
    ac      = { v3388[1] }
    vif     = { v3389[1] }
    vip     = { v3390[1] }
    id      = { v3391[1] }
    ?22     = { v3392[1] }
    ?23     = { v3393[1] }
    ?24     = { v3394[1] }
    ?25     = { v3395[1] }
    ?26     = { v3396[1] }
    ?27     = { v3397[1] }
    ?28     = { v3398[1] }
    ?29     = { v3399[1] }
    ?30     = { v3400[1] }
    ?31     = { v3401[1] }
    ip      = { 0x80485b1[32] }
memory:
    addr=v3360-0x4[32] value=v3361[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    bp      = { {defs={}, expr=v2473[32]} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b0}, expr=0x080485b1[32]} }
memory:
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b1[32] }
memory:
0x80485b1:mov    ebp, esp
== PartialSymbolic ==
registers:
    ax      = { v3356[32] }
    cx      = { v3357[32] }
    dx      = { v3358[32] }
    bx      = { v3359[32] }
    sp      = { v3360-0x4[32] }
    bp      = { v3360-0x4[32] }
    si      = { v3362[32] }
    di      = { v3363[32] }
    es      = { v3364[16] }
    cs      = { v3365[16] }
    ss      = { v3366[16] }
    ds      = { v3367[16] }
    fs      = { v3368[16] }
    gs      = { v3369[16] }
    cf      = { v3370[1] }
    ?1      = { v3371[1] }
    pf      = { v3372[1] }
    ?3      = { v3373[1] }
    af      = { v3374[1] }
    ?5      = { v3375[1] }
    zf      = { v3376[1] }
    sf      = { v3377[1] }
    tf      = { v3378[1] }
    if      = { v3379[1] }
    df      = { v3380[1] }
    of      = { v3381[1] }
    iopl0   = { v3382[1] }
    iopl1   = { v3383[1] }
    nt      = { v3384[1] }
    ?15     = { v3385[1] }
    rf      = { v3386[1] }
    vm      = { v3387[1] }
    ac      = { v3388[1] }
    vif     = { v3389[1] }
    vip     = { v3390[1] }
    id      = { v3391[1] }
    ?22     = { v3392[1] }
    ?23     = { v3393[1] }
    ?24     = { v3394[1] }
    ?25     = { v3395[1] }
    ?26     = { v3396[1] }
    ?27     = { v3397[1] }
    ?28     = { v3398[1] }
    ?29     = { v3399[1] }
    ?30     = { v3400[1] }
    ?31     = { v3401[1] }
    ip      = { 0x80485b3[32] }
memory:
    addr=v3360-0x4[32] value=v3361[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    bp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b1}, expr=0x080485b3[32]} }
memory:
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b3[32] }
memory:
0x80485b3:push   ebx
== PartialSymbolic ==
registers:
    ax      = { v3356[32] }
    cx      = { v3357[32] }
    dx      = { v3358[32] }
    bx      = { v3359[32] }
    sp      = { v3360-0x8[32] }
    bp      = { v3360-0x4[32] }
    si      = { v3362[32] }
    di      = { v3363[32] }
    es      = { v3364[16] }
    cs      = { v3365[16] }
    ss      = { v3366[16] }
    ds      = { v3367[16] }
    fs      = { v3368[16] }
    gs      = { v3369[16] }
    cf      = { v3370[1] }
    ?1      = { v3371[1] }
    pf      = { v3372[1] }
    ?3      = { v3373[1] }
    af      = { v3374[1] }
    ?5      = { v3375[1] }
    zf      = { v3376[1] }
    sf      = { v3377[1] }
    tf      = { v3378[1] }
    if      = { v3379[1] }
    df      = { v3380[1] }
    of      = { v3381[1] }
    iopl0   = { v3382[1] }
    iopl1   = { v3383[1] }
    nt      = { v3384[1] }
    ?15     = { v3385[1] }
    rf      = { v3386[1] }
    vm      = { v3387[1] }
    ac      = { v3388[1] }
    vif     = { v3389[1] }
    vip     = { v3390[1] }
    id      = { v3391[1] }
    ?22     = { v3392[1] }
    ?23     = { v3393[1] }
    ?24     = { v3394[1] }
    ?25     = { v3395[1] }
    ?26     = { v3396[1] }
    ?27     = { v3397[1] }
    ?28     = { v3398[1] }
    ?29     = { v3399[1] }
    ?30     = { v3400[1] }
    ?31     = { v3401[1] }
    ip      = { 0x80485b4[32] }
memory:
    addr=v3360-0x8[32] value=v3359[32]
    addr=v3360-0x4[32] value=v3361[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] v2472[32] -4[32]) -4[32])} }
    bp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b3}, expr=0x080485b4[32]} }
memory:
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 3[32])} value={defs={0x080485b3}, expr=(extract[8] 24[32] 32[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 2[32])} value={defs={0x080485b3}, expr=(extract[8] 16[32] 24[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 1[32])} value={defs={0x080485b3}, expr=(extract[8] 8[32] 16[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] v2472[32] -4[32]) -4[32])} value={defs={0x080485b3}, expr=(extract[8] 0[32] 8[32] v2471[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b4[32] }
memory:
0x80485b4:push   eax
== PartialSymbolic ==
registers:
    ax      = { v3356[32] }
    cx      = { v3357[32] }
    dx      = { v3358[32] }
    bx      = { v3359[32] }
    sp      = { v3360-0xc[32] }
    bp      = { v3360-0x4[32] }
    si      = { v3362[32] }
    di      = { v3363[32] }
    es      = { v3364[16] }
    cs      = { v3365[16] }
    ss      = { v3366[16] }
    ds      = { v3367[16] }
    fs      = { v3368[16] }
    gs      = { v3369[16] }
    cf      = { v3370[1] }
    ?1      = { v3371[1] }
    pf      = { v3372[1] }
    ?3      = { v3373[1] }
    af      = { v3374[1] }
    ?5      = { v3375[1] }
    zf      = { v3376[1] }
    sf      = { v3377[1] }
    tf      = { v3378[1] }
    if      = { v3379[1] }
    df      = { v3380[1] }
    of      = { v3381[1] }
    iopl0   = { v3382[1] }
    iopl1   = { v3383[1] }
    nt      = { v3384[1] }
    ?15     = { v3385[1] }
    rf      = { v3386[1] }
    vm      = { v3387[1] }
    ac      = { v3388[1] }
    vif     = { v3389[1] }
    vip     = { v3390[1] }
    id      = { v3391[1] }
    ?22     = { v3392[1] }
    ?23     = { v3393[1] }
    ?24     = { v3394[1] }
    ?25     = { v3395[1] }
    ?26     = { v3396[1] }
    ?27     = { v3397[1] }
    ?28     = { v3398[1] }
    ?29     = { v3399[1] }
    ?30     = { v3400[1] }
    ?31     = { v3401[1] }
    ip      = { 0x80485b5[32] }
memory:
    addr=v3360-0xc[32] value=v3356[32]
    addr=v3360-0x8[32] value=v3359[32]
    addr=v3360-0x4[32] value=v3361[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b4}, expr=0x080485b5[32]} }
memory:
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080485b4}, expr=(extract[8] 24[32] 32[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080485b4}, expr=(extract[8] 16[32] 24[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080485b4}, expr=(extract[8] 8[32] 16[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32])} value={defs={0x080485b4}, expr=(extract[8] 0[32] 8[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 3[32])} value={defs={0x080485b3}, expr=(extract[8] 24[32] 32[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 2[32])} value={defs={0x080485b3}, expr=(extract[8] 16[32] 24[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 1[32])} value={defs={0x080485b3}, expr=(extract[8] 8[32] 16[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] v2472[32] -4[32]) -4[32])} value={defs={0x080485b3}, expr=(extract[8] 0[32] 8[32] v2471[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485b5[32] }
memory:
0x80485b5:call   0x080485ba<<Insn>>
== PartialSymbolic ==
registers:
    ax      = { v3356[32] }
    cx      = { v3357[32] }
    dx      = { v3358[32] }
    bx      = { v3359[32] }
    sp      = { v3360-0x10[32] }
    bp      = { v3360-0x4[32] }
    si      = { v3362[32] }
    di      = { v3363[32] }
    es      = { v3364[16] }
    cs      = { v3365[16] }
    ss      = { v3366[16] }
    ds      = { v3367[16] }
    fs      = { v3368[16] }
    gs      = { v3369[16] }
    cf      = { v3370[1] }
    ?1      = { v3371[1] }
    pf      = { v3372[1] }
    ?3      = { v3373[1] }
    af      = { v3374[1] }
    ?5      = { v3375[1] }
    zf      = { v3376[1] }
    sf      = { v3377[1] }
    tf      = { v3378[1] }
    if      = { v3379[1] }
    df      = { v3380[1] }
    of      = { v3381[1] }
    iopl0   = { v3382[1] }
    iopl1   = { v3383[1] }
    nt      = { v3384[1] }
    ?15     = { v3385[1] }
    rf      = { v3386[1] }
    vm      = { v3387[1] }
    ac      = { v3388[1] }
    vif     = { v3389[1] }
    vip     = { v3390[1] }
    id      = { v3391[1] }
    ?22     = { v3392[1] }
    ?23     = { v3393[1] }
    ?24     = { v3394[1] }
    ?25     = { v3395[1] }
    ?26     = { v3396[1] }
    ?27     = { v3397[1] }
    ?28     = { v3398[1] }
    ?29     = { v3399[1] }
    ?30     = { v3400[1] }
    ?31     = { v3401[1] }
    ip      = { 0x80485ba[32] }
memory:
    addr=v3360-0x10[32] value=0x80485ba[32]
    addr=v3360-0xc[32] value=v3356[32]
    addr=v3360-0x8[32] value=v3359[32]
    addr=v3360-0x4[32] value=v3361[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={}, expr=0x080485ba[32]} }
memory:
    addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080485b5}, expr=8[8]}
    addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080485b5}, expr=4[8]}
    addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080485b5}, expr=-123[8]}
    addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x080485b5}, expr=-70[8]}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080485b4}, expr=(extract[8] 24[32] 32[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080485b4}, expr=(extract[8] 16[32] 24[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080485b4}, expr=(extract[8] 8[32] 16[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32])} value={defs={0x080485b4}, expr=(extract[8] 0[32] 8[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 3[32])} value={defs={0x080485b3}, expr=(extract[8] 24[32] 32[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 2[32])} value={defs={0x080485b3}, expr=(extract[8] 16[32] 24[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 1[32])} value={defs={0x080485b3}, expr=(extract[8] 8[32] 16[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] v2472[32] -4[32]) -4[32])} value={defs={0x080485b3}, expr=(extract[8] 0[32] 8[32] v2471[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485ba[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v3404[32] }
    cx      = { v3405[32] }
    dx      = { v3406[32] }
    bx      = { v3450[32] }
    sp      = { v3408+0x4[32] }
    bp      = { v3409[32] }
    si      = { v3410[32] }
    di      = { v3411[32] }
    es      = { v3412[16] }
    cs      = { v3413[16] }
    ss      = { v3414[16] }
    ds      = { v3415[16] }
    fs      = { v3416[16] }
    gs      = { v3417[16] }
    cf      = { v3418[1] }
    ?1      = { v3419[1] }
    pf      = { v3420[1] }
    ?3      = { v3421[1] }
    af      = { v3422[1] }
    ?5      = { v3423[1] }
    zf      = { v3424[1] }
    sf      = { v3425[1] }
    tf      = { v3426[1] }
    if      = { v3427[1] }
    df      = { v3428[1] }
    of      = { v3429[1] }
    iopl0   = { v3430[1] }
    iopl1   = { v3431[1] }
    nt      = { v3432[1] }
    ?15     = { v3433[1] }
    rf      = { v3434[1] }
    vm      = { v3435[1] }
    ac      = { v3436[1] }
    vif     = { v3437[1] }
    vip     = { v3438[1] }
    id      = { v3439[1] }
    ?22     = { v3440[1] }
    ?23     = { v3441[1] }
    ?24     = { v3442[1] }
    ?25     = { v3443[1] }
    ?26     = { v3444[1] }
    ?27     = { v3445[1] }
    ?28     = { v3446[1] }
    ?29     = { v3447[1] }
    ?30     = { v3448[1] }
    ?31     = { v3449[1] }
    ip      = { 0x80485bb[32] }
memory:
    addr=v3408[32] value=v3450[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2516[32]} }
    cx      = { {defs={}, expr=v2517[32]} }
    dx      = { {defs={}, expr=v2518[32]} }
    bx      = { {defs={0x080485ba}, expr=v2562[32]} }
    sp      = { {defs={0x080485ba}, expr=(add[32] v2520[32] 4[32])} }
    bp      = { {defs={}, expr=v2521[32]} }
    si      = { {defs={}, expr=v2522[32]} }
    di      = { {defs={}, expr=v2523[32]} }
    es      = { {defs={}, expr=v2524[16]} }
    cs      = { {defs={}, expr=v2525[16]} }
    ss      = { {defs={}, expr=v2526[16]} }
    ds      = { {defs={}, expr=v2527[16]} }
    fs      = { {defs={}, expr=v2528[16]} }
    gs      = { {defs={}, expr=v2529[16]} }
    cf      = { {defs={}, expr=v2530[1]} }
    ?1      = { {defs={}, expr=v2531[1]} }
    pf      = { {defs={}, expr=v2532[1]} }
    ?3      = { {defs={}, expr=v2533[1]} }
    af      = { {defs={}, expr=v2534[1]} }
    ?5      = { {defs={}, expr=v2535[1]} }
    zf      = { {defs={}, expr=v2536[1]} }
    sf      = { {defs={}, expr=v2537[1]} }
    tf      = { {defs={}, expr=v2538[1]} }
    if      = { {defs={}, expr=v2539[1]} }
    df      = { {defs={}, expr=v2540[1]} }
    of      = { {defs={}, expr=v2541[1]} }
    iopl0   = { {defs={}, expr=v2542[1]} }
    iopl1   = { {defs={}, expr=v2543[1]} }
    nt      = { {defs={}, expr=v2544[1]} }
    ?15     = { {defs={}, expr=v2545[1]} }
    rf      = { {defs={}, expr=v2546[1]} }
    vm      = { {defs={}, expr=v2547[1]} }
    ac      = { {defs={}, expr=v2548[1]} }
    vif     = { {defs={}, expr=v2549[1]} }
    vip     = { {defs={}, expr=v2550[1]} }
    id      = { {defs={}, expr=v2551[1]} }
    ?22     = { {defs={}, expr=v2552[1]} }
    ?23     = { {defs={}, expr=v2553[1]} }
    ?24     = { {defs={}, expr=v2554[1]} }
    ?25     = { {defs={}, expr=v2555[1]} }
    ?26     = { {defs={}, expr=v2556[1]} }
    ?27     = { {defs={}, expr=v2557[1]} }
    ?28     = { {defs={}, expr=v2558[1]} }
    ?29     = { {defs={}, expr=v2559[1]} }
    ?30     = { {defs={}, expr=v2560[1]} }
    ?31     = { {defs={}, expr=v2561[1]} }
    ip      = { {defs={0x080485ba}, expr=0x080485bb[32]} }
memory:
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 3[32])} value={defs={0x080485ba}, expr=(extract[8] 24[32] 32[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 2[32])} value={defs={0x080485ba}, expr=(extract[8] 16[32] 24[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 1[32])} value={defs={0x080485ba}, expr=(extract[8] 8[32] 16[32] v2562[32])}
    addr={defs={}, expr=v2520[32]} value={defs={0x080485ba}, expr=(extract[8] 0[32] 8[32] v2562[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485bb[32] }
memory:
0x80485bb:add    ebx, 0x0000110e
== PartialSymbolic ==
registers:
    ax      = { v3404[32] }
    cx      = { v3405[32] }
    dx      = { v3406[32] }
    bx      = { v3450+0x110e[32] }
    sp      = { v3408+0x4[32] }
    bp      = { v3409[32] }
    si      = { v3410[32] }
    di      = { v3411[32] }
    es      = { v3412[16] }
    cs      = { v3413[16] }
    ss      = { v3414[16] }
    ds      = { v3415[16] }
    fs      = { v3416[16] }
    gs      = { v3417[16] }
    cf      = { v3469[1] }
    ?1      = { v3419[1] }
    pf      = { -v3466+0x1[1] }
    ?3      = { v3421[1] }
    af      = { v3471[1] }
    ?5      = { v3423[1] }
    zf      = { v3468[1] }
    sf      = { v3467[1] }
    tf      = { v3426[1] }
    if      = { v3427[1] }
    df      = { v3428[1] }
    of      = { v3472[1] }
    iopl0   = { v3430[1] }
    iopl1   = { v3431[1] }
    nt      = { v3432[1] }
    ?15     = { v3433[1] }
    rf      = { v3434[1] }
    vm      = { v3435[1] }
    ac      = { v3436[1] }
    vif     = { v3437[1] }
    vip     = { v3438[1] }
    id      = { v3439[1] }
    ?22     = { v3440[1] }
    ?23     = { v3441[1] }
    ?24     = { v3442[1] }
    ?25     = { v3443[1] }
    ?26     = { v3444[1] }
    ?27     = { v3445[1] }
    ?28     = { v3446[1] }
    ?29     = { v3447[1] }
    ?30     = { v3448[1] }
    ?31     = { v3449[1] }
    ip      = { 0x80485c1[32] }
memory:
    addr=v3408[32] value=v3450[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2516[32]} }
    cx      = { {defs={}, expr=v2517[32]} }
    dx      = { {defs={}, expr=v2518[32]} }
    bx      = { {defs={0x080485ba,0x080485bb}, expr=(add[32] v2562[32] 4366[32])} }
    sp      = { {defs={0x080485ba}, expr=(add[32] v2520[32] 4[32])} }
    bp      = { {defs={}, expr=v2521[32]} }
    si      = { {defs={}, expr=v2522[32]} }
    di      = { {defs={}, expr=v2523[32]} }
    es      = { {defs={}, expr=v2524[16]} }
    cs      = { {defs={}, expr=v2525[16]} }
    ss      = { {defs={}, expr=v2526[16]} }
    ds      = { {defs={}, expr=v2527[16]} }
    fs      = { {defs={}, expr=v2528[16]} }
    gs      = { {defs={}, expr=v2529[16]} }
    cf      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33])))))} }
    ?1      = { {defs={}, expr=v2531[1]} }
    pf      = { {defs={0x080485ba,0x080485bb}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))))))} }
    ?3      = { {defs={}, expr=v2533[1]} }
    af      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33])))))} }
    ?5      = { {defs={}, expr=v2535[1]} }
    zf      = { {defs={0x080485ba,0x080485bb}, expr=(zerop[1] (add[32] v2562[32] 4366[32]))} }
    sf      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 31[32] 32[32] (add[32] v2562[32] 4366[32]))} }
    tf      = { {defs={}, expr=v2538[1]} }
    if      = { {defs={}, expr=v2539[1]} }
    df      = { {defs={}, expr=v2540[1]} }
    of      = { {defs={0x080485ba,0x080485bb}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33]))))))} }
    iopl0   = { {defs={}, expr=v2542[1]} }
    iopl1   = { {defs={}, expr=v2543[1]} }
    nt      = { {defs={}, expr=v2544[1]} }
    ?15     = { {defs={}, expr=v2545[1]} }
    rf      = { {defs={}, expr=v2546[1]} }
    vm      = { {defs={}, expr=v2547[1]} }
    ac      = { {defs={}, expr=v2548[1]} }
    vif     = { {defs={}, expr=v2549[1]} }
    vip     = { {defs={}, expr=v2550[1]} }
    id      = { {defs={}, expr=v2551[1]} }
    ?22     = { {defs={}, expr=v2552[1]} }
    ?23     = { {defs={}, expr=v2553[1]} }
    ?24     = { {defs={}, expr=v2554[1]} }
    ?25     = { {defs={}, expr=v2555[1]} }
    ?26     = { {defs={}, expr=v2556[1]} }
    ?27     = { {defs={}, expr=v2557[1]} }
    ?28     = { {defs={}, expr=v2558[1]} }
    ?29     = { {defs={}, expr=v2559[1]} }
    ?30     = { {defs={}, expr=v2560[1]} }
    ?31     = { {defs={}, expr=v2561[1]} }
    ip      = { {defs={0x080485bb}, expr=0x080485c1[32]} }
memory:
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 3[32])} value={defs={0x080485ba}, expr=(extract[8] 24[32] 32[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 2[32])} value={defs={0x080485ba}, expr=(extract[8] 16[32] 24[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 1[32])} value={defs={0x080485ba}, expr=(extract[8] 8[32] 16[32] v2562[32])}
    addr={defs={}, expr=v2520[32]} value={defs={0x080485ba}, expr=(extract[8] 0[32] 8[32] v2562[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485c1[32] }
memory:
0x80485c1:call   0x08048390<__do_global_dtors_aux>
== PartialSymbolic ==
registers:
    ax      = { v3404[32] }
    cx      = { v3405[32] }
    dx      = { v3406[32] }
    bx      = { v3450+0x110e[32] }
    sp      = { v3408[32] }
    bp      = { v3409[32] }
    si      = { v3410[32] }
    di      = { v3411[32] }
    es      = { v3412[16] }
    cs      = { v3413[16] }
    ss      = { v3414[16] }
    ds      = { v3415[16] }
    fs      = { v3416[16] }
    gs      = { v3417[16] }
    cf      = { v3469[1] }
    ?1      = { v3419[1] }
    pf      = { -v3466+0x1[1] }
    ?3      = { v3421[1] }
    af      = { v3471[1] }
    ?5      = { v3423[1] }
    zf      = { v3468[1] }
    sf      = { v3467[1] }
    tf      = { v3426[1] }
    if      = { v3427[1] }
    df      = { v3428[1] }
    of      = { v3472[1] }
    iopl0   = { v3430[1] }
    iopl1   = { v3431[1] }
    nt      = { v3432[1] }
    ?15     = { v3433[1] }
    rf      = { v3434[1] }
    vm      = { v3435[1] }
    ac      = { v3436[1] }
    vif     = { v3437[1] }
    vip     = { v3438[1] }
    id      = { v3439[1] }
    ?22     = { v3440[1] }
    ?23     = { v3441[1] }
    ?24     = { v3442[1] }
    ?25     = { v3443[1] }
    ?26     = { v3444[1] }
    ?27     = { v3445[1] }
    ?28     = { v3446[1] }
    ?29     = { v3447[1] }
    ?30     = { v3448[1] }
    ?31     = { v3449[1] }
    ip      = { 0x8048390[32] }
memory:
    addr=v3408[32] value=0x80485c6[32]
    addr=v3408[32] value=v3450[32]
== Symbolic ==
registers:
    ax      = { {defs={}, expr=v2516[32]} }
    cx      = { {defs={}, expr=v2517[32]} }
    dx      = { {defs={}, expr=v2518[32]} }
    bx      = { {defs={0x080485ba,0x080485bb}, expr=(add[32] v2562[32] 4366[32])} }
    sp      = { {defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] v2520[32] 4[32]) -4[32])} }
    bp      = { {defs={}, expr=v2521[32]} }
    si      = { {defs={}, expr=v2522[32]} }
    di      = { {defs={}, expr=v2523[32]} }
    es      = { {defs={}, expr=v2524[16]} }
    cs      = { {defs={}, expr=v2525[16]} }
    ss      = { {defs={}, expr=v2526[16]} }
    ds      = { {defs={}, expr=v2527[16]} }
    fs      = { {defs={}, expr=v2528[16]} }
    gs      = { {defs={}, expr=v2529[16]} }
    cf      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33])))))} }
    ?1      = { {defs={}, expr=v2531[1]} }
    pf      = { {defs={0x080485ba,0x080485bb}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))))))} }
    ?3      = { {defs={}, expr=v2533[1]} }
    af      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33])))))} }
    ?5      = { {defs={}, expr=v2535[1]} }
    zf      = { {defs={0x080485ba,0x080485bb}, expr=(zerop[1] (add[32] v2562[32] 4366[32]))} }
    sf      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 31[32] 32[32] (add[32] v2562[32] 4366[32]))} }
    tf      = { {defs={}, expr=v2538[1]} }
    if      = { {defs={}, expr=v2539[1]} }
    df      = { {defs={}, expr=v2540[1]} }
    of      = { {defs={0x080485ba,0x080485bb}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33]))))))} }
    iopl0   = { {defs={}, expr=v2542[1]} }
    iopl1   = { {defs={}, expr=v2543[1]} }
    nt      = { {defs={}, expr=v2544[1]} }
    ?15     = { {defs={}, expr=v2545[1]} }
    rf      = { {defs={}, expr=v2546[1]} }
    vm      = { {defs={}, expr=v2547[1]} }
    ac      = { {defs={}, expr=v2548[1]} }
    vif     = { {defs={}, expr=v2549[1]} }
    vip     = { {defs={}, expr=v2550[1]} }
    id      = { {defs={}, expr=v2551[1]} }
    ?22     = { {defs={}, expr=v2552[1]} }
    ?23     = { {defs={}, expr=v2553[1]} }
    ?24     = { {defs={}, expr=v2554[1]} }
    ?25     = { {defs={}, expr=v2555[1]} }
    ?26     = { {defs={}, expr=v2556[1]} }
    ?27     = { {defs={}, expr=v2557[1]} }
    ?28     = { {defs={}, expr=v2558[1]} }
    ?29     = { {defs={}, expr=v2559[1]} }
    ?30     = { {defs={}, expr=v2560[1]} }
    ?31     = { {defs={}, expr=v2561[1]} }
    ip      = { {defs={}, expr=0x08048390[32]} }
memory:
    addr={defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] (add[32] v2520[32] 4[32]) -4[32]) 3[32])} value={defs={0x080485c1}, expr=8[8]}
    addr={defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] (add[32] v2520[32] 4[32]) -4[32]) 2[32])} value={defs={0x080485c1}, expr=4[8]}
    addr={defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] (add[32] v2520[32] 4[32]) -4[32]) 1[32])} value={defs={0x080485c1}, expr=-123[8]}
    addr={defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] v2520[32] 4[32]) -4[32])} value={defs={0x080485c1}, expr=-58[8]}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 3[32])} value={defs={0x080485ba}, expr=(extract[8] 24[32] 32[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 2[32])} value={defs={0x080485ba}, expr=(extract[8] 16[32] 24[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 1[32])} value={defs={0x080485ba}, expr=(extract[8] 8[32] 16[32] v2562[32])}
    addr={defs={}, expr=v2520[32]} value={defs={0x080485ba}, expr=(extract[8] 0[32] 8[32] v2562[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x08048390[32] }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
== PartialSymbolic ==
registers:
    ax      = { v3521[32] }
    cx      = { v3476[32] }
    dx      = { v3477[32] }
    bx      = { v3478[32] }
    sp      = { v3479+0x4[32] }
    bp      = { v3480[32] }
    si      = { v3481[32] }
    di      = { v3482[32] }
    es      = { v3483[16] }
    cs      = { v3484[16] }
    ss      = { v3485[16] }
    ds      = { v3486[16] }
    fs      = { v3487[16] }
    gs      = { v3488[16] }
    cf      = { v3489[1] }
    ?1      = { v3490[1] }
    pf      = { v3491[1] }
    ?3      = { v3492[1] }
    af      = { v3493[1] }
    ?5      = { v3494[1] }
    zf      = { v3495[1] }
    sf      = { v3496[1] }
    tf      = { v3497[1] }
    if      = { v3498[1] }
    df      = { v3499[1] }
    of      = { v3500[1] }
    iopl0   = { v3501[1] }
    iopl1   = { v3502[1] }
    nt      = { v3503[1] }
    ?15     = { v3504[1] }
    rf      = { v3505[1] }
    vm      = { v3506[1] }
    ac      = { v3507[1] }
    vif     = { v3508[1] }
    vip     = { v3509[1] }
    id      = { v3510[1] }
    ?22     = { v3511[1] }
    ?23     = { v3512[1] }
    ?24     = { v3513[1] }
    ?25     = { v3514[1] }
    ?26     = { v3515[1] }
    ?27     = { v3516[1] }
    ?28     = { v3517[1] }
    ?29     = { v3518[1] }
    ?30     = { v3519[1] }
    ?31     = { v3520[1] }
    ip      = { 0x80485c7[32] }
memory:
    addr=v3479[32] value=v3521[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485c6}, expr=v2615[32]} }
    cx      = { {defs={}, expr=v2570[32]} }
    dx      = { {defs={}, expr=v2571[32]} }
    bx      = { {defs={}, expr=v2572[32]} }
    sp      = { {defs={0x080485c6}, expr=(add[32] v2573[32] 4[32])} }
    bp      = { {defs={}, expr=v2574[32]} }
    si      = { {defs={}, expr=v2575[32]} }
    di      = { {defs={}, expr=v2576[32]} }
    es      = { {defs={}, expr=v2577[16]} }
    cs      = { {defs={}, expr=v2578[16]} }
    ss      = { {defs={}, expr=v2579[16]} }
    ds      = { {defs={}, expr=v2580[16]} }
    fs      = { {defs={}, expr=v2581[16]} }
    gs      = { {defs={}, expr=v2582[16]} }
    cf      = { {defs={}, expr=v2583[1]} }
    ?1      = { {defs={}, expr=v2584[1]} }
    pf      = { {defs={}, expr=v2585[1]} }
    ?3      = { {defs={}, expr=v2586[1]} }
    af      = { {defs={}, expr=v2587[1]} }
    ?5      = { {defs={}, expr=v2588[1]} }
    zf      = { {defs={}, expr=v2589[1]} }
    sf      = { {defs={}, expr=v2590[1]} }
    tf      = { {defs={}, expr=v2591[1]} }
    if      = { {defs={}, expr=v2592[1]} }
    df      = { {defs={}, expr=v2593[1]} }
    of      = { {defs={}, expr=v2594[1]} }
    iopl0   = { {defs={}, expr=v2595[1]} }
    iopl1   = { {defs={}, expr=v2596[1]} }
    nt      = { {defs={}, expr=v2597[1]} }
    ?15     = { {defs={}, expr=v2598[1]} }
    rf      = { {defs={}, expr=v2599[1]} }
    vm      = { {defs={}, expr=v2600[1]} }
    ac      = { {defs={}, expr=v2601[1]} }
    vif     = { {defs={}, expr=v2602[1]} }
    vip     = { {defs={}, expr=v2603[1]} }
    id      = { {defs={}, expr=v2604[1]} }
    ?22     = { {defs={}, expr=v2605[1]} }
    ?23     = { {defs={}, expr=v2606[1]} }
    ?24     = { {defs={}, expr=v2607[1]} }
    ?25     = { {defs={}, expr=v2608[1]} }
    ?26     = { {defs={}, expr=v2609[1]} }
    ?27     = { {defs={}, expr=v2610[1]} }
    ?28     = { {defs={}, expr=v2611[1]} }
    ?29     = { {defs={}, expr=v2612[1]} }
    ?30     = { {defs={}, expr=v2613[1]} }
    ?31     = { {defs={}, expr=v2614[1]} }
    ip      = { {defs={0x080485c6}, expr=0x080485c7[32]} }
memory:
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 3[32])} value={defs={0x080485c6}, expr=(extract[8] 24[32] 32[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 2[32])} value={defs={0x080485c6}, expr=(extract[8] 16[32] 24[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 1[32])} value={defs={0x080485c6}, expr=(extract[8] 8[32] 16[32] v2615[32])}
    addr={defs={}, expr=v2573[32]} value={defs={0x080485c6}, expr=(extract[8] 0[32] 8[32] v2615[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485c7[32] }
memory:
0x80485c7:pop    ebx
== PartialSymbolic ==
registers:
    ax      = { v3521[32] }
    cx      = { v3476[32] }
    dx      = { v3477[32] }
    bx      = { v3523[32] }
    sp      = { v3479+0x8[32] }
    bp      = { v3480[32] }
    si      = { v3481[32] }
    di      = { v3482[32] }
    es      = { v3483[16] }
    cs      = { v3484[16] }
    ss      = { v3485[16] }
    ds      = { v3486[16] }
    fs      = { v3487[16] }
    gs      = { v3488[16] }
    cf      = { v3489[1] }
    ?1      = { v3490[1] }
    pf      = { v3491[1] }
    ?3      = { v3492[1] }
    af      = { v3493[1] }
    ?5      = { v3494[1] }
    zf      = { v3495[1] }
    sf      = { v3496[1] }
    tf      = { v3497[1] }
    if      = { v3498[1] }
    df      = { v3499[1] }
    of      = { v3500[1] }
    iopl0   = { v3501[1] }
    iopl1   = { v3502[1] }
    nt      = { v3503[1] }
    ?15     = { v3504[1] }
    rf      = { v3505[1] }
    vm      = { v3506[1] }
    ac      = { v3507[1] }
    vif     = { v3508[1] }
    vip     = { v3509[1] }
    id      = { v3510[1] }
    ?22     = { v3511[1] }
    ?23     = { v3512[1] }
    ?24     = { v3513[1] }
    ?25     = { v3514[1] }
    ?26     = { v3515[1] }
    ?27     = { v3516[1] }
    ?28     = { v3517[1] }
    ?29     = { v3518[1] }
    ?30     = { v3519[1] }
    ?31     = { v3520[1] }
    ip      = { 0x80485c8[32] }
memory:
    addr=v3479+0x4[32] value=v3523[32]
    addr=v3479[32] value=v3521[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485c6}, expr=v2615[32]} }
    cx      = { {defs={}, expr=v2570[32]} }
    dx      = { {defs={}, expr=v2571[32]} }
    bx      = { {defs={0x080485c7}, expr=v2620[32]} }
    sp      = { {defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v2574[32]} }
    si      = { {defs={}, expr=v2575[32]} }
    di      = { {defs={}, expr=v2576[32]} }
    es      = { {defs={}, expr=v2577[16]} }
    cs      = { {defs={}, expr=v2578[16]} }
    ss      = { {defs={}, expr=v2579[16]} }
    ds      = { {defs={}, expr=v2580[16]} }
    fs      = { {defs={}, expr=v2581[16]} }
    gs      = { {defs={}, expr=v2582[16]} }
    cf      = { {defs={}, expr=v2583[1]} }
    ?1      = { {defs={}, expr=v2584[1]} }
    pf      = { {defs={}, expr=v2585[1]} }
    ?3      = { {defs={}, expr=v2586[1]} }
    af      = { {defs={}, expr=v2587[1]} }
    ?5      = { {defs={}, expr=v2588[1]} }
    zf      = { {defs={}, expr=v2589[1]} }
    sf      = { {defs={}, expr=v2590[1]} }
    tf      = { {defs={}, expr=v2591[1]} }
    if      = { {defs={}, expr=v2592[1]} }
    df      = { {defs={}, expr=v2593[1]} }
    of      = { {defs={}, expr=v2594[1]} }
    iopl0   = { {defs={}, expr=v2595[1]} }
    iopl1   = { {defs={}, expr=v2596[1]} }
    nt      = { {defs={}, expr=v2597[1]} }
    ?15     = { {defs={}, expr=v2598[1]} }
    rf      = { {defs={}, expr=v2599[1]} }
    vm      = { {defs={}, expr=v2600[1]} }
    ac      = { {defs={}, expr=v2601[1]} }
    vif     = { {defs={}, expr=v2602[1]} }
    vip     = { {defs={}, expr=v2603[1]} }
    id      = { {defs={}, expr=v2604[1]} }
    ?22     = { {defs={}, expr=v2605[1]} }
    ?23     = { {defs={}, expr=v2606[1]} }
    ?24     = { {defs={}, expr=v2607[1]} }
    ?25     = { {defs={}, expr=v2608[1]} }
    ?26     = { {defs={}, expr=v2609[1]} }
    ?27     = { {defs={}, expr=v2610[1]} }
    ?28     = { {defs={}, expr=v2611[1]} }
    ?29     = { {defs={}, expr=v2612[1]} }
    ?30     = { {defs={}, expr=v2613[1]} }
    ?31     = { {defs={}, expr=v2614[1]} }
    ip      = { {defs={0x080485c7}, expr=0x080485c8[32]} }
memory:
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 3[32])} value={defs={0x080485c7}, expr=(extract[8] 24[32] 32[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 2[32])} value={defs={0x080485c7}, expr=(extract[8] 16[32] 24[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 1[32])} value={defs={0x080485c7}, expr=(extract[8] 8[32] 16[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 4[32])} value={defs={0x080485c7}, expr=(extract[8] 0[32] 8[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 3[32])} value={defs={0x080485c6}, expr=(extract[8] 24[32] 32[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 2[32])} value={defs={0x080485c6}, expr=(extract[8] 16[32] 24[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 1[32])} value={defs={0x080485c6}, expr=(extract[8] 8[32] 16[32] v2615[32])}
    addr={defs={}, expr=v2573[32]} value={defs={0x080485c6}, expr=(extract[8] 0[32] 8[32] v2615[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485c8[32] }
memory:
0x80485c8:leave  
== PartialSymbolic ==
registers:
    ax      = { v3521[32] }
    cx      = { v3476[32] }
    dx      = { v3477[32] }
    bx      = { v3523[32] }
    sp      = { v3480+0x4[32] }
    bp      = { v3525[32] }
    si      = { v3481[32] }
    di      = { v3482[32] }
    es      = { v3483[16] }
    cs      = { v3484[16] }
    ss      = { v3485[16] }
    ds      = { v3486[16] }
    fs      = { v3487[16] }
    gs      = { v3488[16] }
    cf      = { v3489[1] }
    ?1      = { v3490[1] }
    pf      = { v3491[1] }
    ?3      = { v3492[1] }
    af      = { v3493[1] }
    ?5      = { v3494[1] }
    zf      = { v3495[1] }
    sf      = { v3496[1] }
    tf      = { v3497[1] }
    if      = { v3498[1] }
    df      = { v3499[1] }
    of      = { v3500[1] }
    iopl0   = { v3501[1] }
    iopl1   = { v3502[1] }
    nt      = { v3503[1] }
    ?15     = { v3504[1] }
    rf      = { v3505[1] }
    vm      = { v3506[1] }
    ac      = { v3507[1] }
    vif     = { v3508[1] }
    vip     = { v3509[1] }
    id      = { v3510[1] }
    ?22     = { v3511[1] }
    ?23     = { v3512[1] }
    ?24     = { v3513[1] }
    ?25     = { v3514[1] }
    ?26     = { v3515[1] }
    ?27     = { v3516[1] }
    ?28     = { v3517[1] }
    ?29     = { v3518[1] }
    ?30     = { v3519[1] }
    ?31     = { v3520[1] }
    ip      = { 0x80485c9[32] }
memory:
    addr=v3480[32] value=v3525[32]
    addr=v3479+0x4[32] value=v3523[32]
    addr=v3479[32] value=v3521[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485c6}, expr=v2615[32]} }
    cx      = { {defs={}, expr=v2570[32]} }
    dx      = { {defs={}, expr=v2571[32]} }
    bx      = { {defs={0x080485c7}, expr=v2620[32]} }
    sp      = { {defs={0x080485c8}, expr=(add[32] v2574[32] 4[32])} }
    bp      = { {defs={0x080485c8}, expr=v2625[32]} }
    si      = { {defs={}, expr=v2575[32]} }
    di      = { {defs={}, expr=v2576[32]} }
    es      = { {defs={}, expr=v2577[16]} }
    cs      = { {defs={}, expr=v2578[16]} }
    ss      = { {defs={}, expr=v2579[16]} }
    ds      = { {defs={}, expr=v2580[16]} }
    fs      = { {defs={}, expr=v2581[16]} }
    gs      = { {defs={}, expr=v2582[16]} }
    cf      = { {defs={}, expr=v2583[1]} }
    ?1      = { {defs={}, expr=v2584[1]} }
    pf      = { {defs={}, expr=v2585[1]} }
    ?3      = { {defs={}, expr=v2586[1]} }
    af      = { {defs={}, expr=v2587[1]} }
    ?5      = { {defs={}, expr=v2588[1]} }
    zf      = { {defs={}, expr=v2589[1]} }
    sf      = { {defs={}, expr=v2590[1]} }
    tf      = { {defs={}, expr=v2591[1]} }
    if      = { {defs={}, expr=v2592[1]} }
    df      = { {defs={}, expr=v2593[1]} }
    of      = { {defs={}, expr=v2594[1]} }
    iopl0   = { {defs={}, expr=v2595[1]} }
    iopl1   = { {defs={}, expr=v2596[1]} }
    nt      = { {defs={}, expr=v2597[1]} }
    ?15     = { {defs={}, expr=v2598[1]} }
    rf      = { {defs={}, expr=v2599[1]} }
    vm      = { {defs={}, expr=v2600[1]} }
    ac      = { {defs={}, expr=v2601[1]} }
    vif     = { {defs={}, expr=v2602[1]} }
    vip     = { {defs={}, expr=v2603[1]} }
    id      = { {defs={}, expr=v2604[1]} }
    ?22     = { {defs={}, expr=v2605[1]} }
    ?23     = { {defs={}, expr=v2606[1]} }
    ?24     = { {defs={}, expr=v2607[1]} }
    ?25     = { {defs={}, expr=v2608[1]} }
    ?26     = { {defs={}, expr=v2609[1]} }
    ?27     = { {defs={}, expr=v2610[1]} }
    ?28     = { {defs={}, expr=v2611[1]} }
    ?29     = { {defs={}, expr=v2612[1]} }
    ?30     = { {defs={}, expr=v2613[1]} }
    ?31     = { {defs={}, expr=v2614[1]} }
    ip      = { {defs={0x080485c8}, expr=0x080485c9[32]} }
memory:
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 3[32])} value={defs={0x080485c8}, expr=(extract[8] 24[32] 32[32] v2625[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 2[32])} value={defs={0x080485c8}, expr=(extract[8] 16[32] 24[32] v2625[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 1[32])} value={defs={0x080485c8}, expr=(extract[8] 8[32] 16[32] v2625[32])}
    addr={defs={}, expr=v2574[32]} value={defs={0x080485c8}, expr=(extract[8] 0[32] 8[32] v2625[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 3[32])} value={defs={0x080485c7}, expr=(extract[8] 24[32] 32[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 2[32])} value={defs={0x080485c7}, expr=(extract[8] 16[32] 24[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 1[32])} value={defs={0x080485c7}, expr=(extract[8] 8[32] 16[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 4[32])} value={defs={0x080485c7}, expr=(extract[8] 0[32] 8[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 3[32])} value={defs={0x080485c6}, expr=(extract[8] 24[32] 32[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 2[32])} value={defs={0x080485c6}, expr=(extract[8] 16[32] 24[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 1[32])} value={defs={0x080485c6}, expr=(extract[8] 8[32] 16[32] v2615[32])}
    addr={defs={}, expr=v2573[32]} value={defs={0x080485c6}, expr=(extract[8] 0[32] 8[32] v2615[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { 0x080485c9[32] }
memory:
0x80485c9:ret    
== PartialSymbolic ==
registers:
    ax      = { v3521[32] }
    cx      = { v3476[32] }
    dx      = { v3477[32] }
    bx      = { v3523[32] }
    sp      = { v3480+0x8[32] }
    bp      = { v3525[32] }
    si      = { v3481[32] }
    di      = { v3482[32] }
    es      = { v3483[16] }
    cs      = { v3484[16] }
    ss      = { v3485[16] }
    ds      = { v3486[16] }
    fs      = { v3487[16] }
    gs      = { v3488[16] }
    cf      = { v3489[1] }
    ?1      = { v3490[1] }
    pf      = { v3491[1] }
    ?3      = { v3492[1] }
    af      = { v3493[1] }
    ?5      = { v3494[1] }
    zf      = { v3495[1] }
    sf      = { v3496[1] }
    tf      = { v3497[1] }
    if      = { v3498[1] }
    df      = { v3499[1] }
    of      = { v3500[1] }
    iopl0   = { v3501[1] }
    iopl1   = { v3502[1] }
    nt      = { v3503[1] }
    ?15     = { v3504[1] }
    rf      = { v3505[1] }
    vm      = { v3506[1] }
    ac      = { v3507[1] }
    vif     = { v3508[1] }
    vip     = { v3509[1] }
    id      = { v3510[1] }
    ?22     = { v3511[1] }
    ?23     = { v3512[1] }
    ?24     = { v3513[1] }
    ?25     = { v3514[1] }
    ?26     = { v3515[1] }
    ?27     = { v3516[1] }
    ?28     = { v3517[1] }
    ?29     = { v3518[1] }
    ?30     = { v3519[1] }
    ?31     = { v3520[1] }
    ip      = { v3587[32] }
memory:
    addr=v3480+0x4[32] value=v3587[32]
    addr=v3480[32] value=v3525[32]
    addr=v3479+0x4[32] value=v3523[32]
    addr=v3479[32] value=v3521[32]
== Symbolic ==
registers:
    ax      = { {defs={0x080485c6}, expr=v2615[32]} }
    cx      = { {defs={}, expr=v2570[32]} }
    dx      = { {defs={}, expr=v2571[32]} }
    bx      = { {defs={0x080485c7}, expr=v2620[32]} }
    sp      = { {defs={0x080485c8,0x080485c9}, expr=(add[32] (add[32] v2574[32] 4[32]) 4[32])} }
    bp      = { {defs={0x080485c8}, expr=v2625[32]} }
    si      = { {defs={}, expr=v2575[32]} }
    di      = { {defs={}, expr=v2576[32]} }
    es      = { {defs={}, expr=v2577[16]} }
    cs      = { {defs={}, expr=v2578[16]} }
    ss      = { {defs={}, expr=v2579[16]} }
    ds      = { {defs={}, expr=v2580[16]} }
    fs      = { {defs={}, expr=v2581[16]} }
    gs      = { {defs={}, expr=v2582[16]} }
    cf      = { {defs={}, expr=v2583[1]} }
    ?1      = { {defs={}, expr=v2584[1]} }
    pf      = { {defs={}, expr=v2585[1]} }
    ?3      = { {defs={}, expr=v2586[1]} }
    af      = { {defs={}, expr=v2587[1]} }
    ?5      = { {defs={}, expr=v2588[1]} }
    zf      = { {defs={}, expr=v2589[1]} }
    sf      = { {defs={}, expr=v2590[1]} }
    tf      = { {defs={}, expr=v2591[1]} }
    if      = { {defs={}, expr=v2592[1]} }
    df      = { {defs={}, expr=v2593[1]} }
    of      = { {defs={}, expr=v2594[1]} }
    iopl0   = { {defs={}, expr=v2595[1]} }
    iopl1   = { {defs={}, expr=v2596[1]} }
    nt      = { {defs={}, expr=v2597[1]} }
    ?15     = { {defs={}, expr=v2598[1]} }
    rf      = { {defs={}, expr=v2599[1]} }
    vm      = { {defs={}, expr=v2600[1]} }
    ac      = { {defs={}, expr=v2601[1]} }
    vif     = { {defs={}, expr=v2602[1]} }
    vip     = { {defs={}, expr=v2603[1]} }
    id      = { {defs={}, expr=v2604[1]} }
    ?22     = { {defs={}, expr=v2605[1]} }
    ?23     = { {defs={}, expr=v2606[1]} }
    ?24     = { {defs={}, expr=v2607[1]} }
    ?25     = { {defs={}, expr=v2608[1]} }
    ?26     = { {defs={}, expr=v2609[1]} }
    ?27     = { {defs={}, expr=v2610[1]} }
    ?28     = { {defs={}, expr=v2611[1]} }
    ?29     = { {defs={}, expr=v2612[1]} }
    ?30     = { {defs={}, expr=v2613[1]} }
    ?31     = { {defs={}, expr=v2614[1]} }
    ip      = { {defs={0x080485c9}, expr=v2630[32]} }
memory:
    addr={defs={0x080485c8,0x080485c9}, expr=(add[32] (add[32] v2574[32] 4[32]) 3[32])} value={defs={0x080485c9}, expr=(extract[8] 24[32] 32[32] v2630[32])}
    addr={defs={0x080485c8,0x080485c9}, expr=(add[32] (add[32] v2574[32] 4[32]) 2[32])} value={defs={0x080485c9}, expr=(extract[8] 16[32] 24[32] v2630[32])}
    addr={defs={0x080485c8,0x080485c9}, expr=(add[32] (add[32] v2574[32] 4[32]) 1[32])} value={defs={0x080485c9}, expr=(extract[8] 8[32] 16[32] v2630[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 4[32])} value={defs={0x080485c9}, expr=(extract[8] 0[32] 8[32] v2630[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 3[32])} value={defs={0x080485c8}, expr=(extract[8] 24[32] 32[32] v2625[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 2[32])} value={defs={0x080485c8}, expr=(extract[8] 16[32] 24[32] v2625[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 1[32])} value={defs={0x080485c8}, expr=(extract[8] 8[32] 16[32] v2625[32])}
    addr={defs={}, expr=v2574[32]} value={defs={0x080485c8}, expr=(extract[8] 0[32] 8[32] v2625[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 3[32])} value={defs={0x080485c7}, expr=(extract[8] 24[32] 32[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 2[32])} value={defs={0x080485c7}, expr=(extract[8] 16[32] 24[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 1[32])} value={defs={0x080485c7}, expr=(extract[8] 8[32] 16[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 4[32])} value={defs={0x080485c7}, expr=(extract[8] 0[32] 8[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 3[32])} value={defs={0x080485c6}, expr=(extract[8] 24[32] 32[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 2[32])} value={defs={0x080485c6}, expr=(extract[8] 16[32] 24[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 1[32])} value={defs={0x080485c6}, expr=(extract[8] 8[32] 16[32] v2615[32])}
    addr={defs={}, expr=v2573[32]} value={defs={0x080485c6}, expr=(extract[8] 0[32] 8[32] v2615[32])}
== Interval ==
registers:
    ax      = { doubleword[32] }
    cx      = { doubleword[32] }
    dx      = { doubleword[32] }
    bx      = { doubleword[32] }
    sp      = { doubleword[32] }
    bp      = { doubleword[32] }
    si      = { doubleword[32] }
    di      = { doubleword[32] }
    es      = { word[16] }
    cs      = { word[16] }
    ss      = { word[16] }
    ds      = { word[16] }
    fs      = { word[16] }
    gs      = { word[16] }
    cf      = { 0..1[1] }
    ?1      = { 0..1[1] }
    pf      = { 0..1[1] }
    ?3      = { 0..1[1] }
    af      = { 0..1[1] }
    ?5      = { 0..1[1] }
    zf      = { 0..1[1] }
    sf      = { 0..1[1] }
    tf      = { 0..1[1] }
    if      = { 0..1[1] }
    df      = { 0..1[1] }
    of      = { 0..1[1] }
    iopl0   = { 0..1[1] }
    iopl1   = { 0..1[1] }
    nt      = { 0..1[1] }
    ?15     = { 0..1[1] }
    rf      = { 0..1[1] }
    vm      = { 0..1[1] }
    ac      = { 0..1[1] }
    vif     = { 0..1[1] }
    vip     = { 0..1[1] }
    id      = { 0..1[1] }
    ?22     = { 0..1[1] }
    ?23     = { 0..1[1] }
    ?24     = { 0..1[1] }
    ?25     = { 0..1[1] }
    ?26     = { 0..1[1] }
    ?27     = { 0..1[1] }
    ?28     = { 0..1[1] }
    ?29     = { 0..1[1] }
    ?30     = { 0..1[1] }
    ?31     = { 0..1[1] }
    ip      = { doubleword[32] }
memory:
analyzed headers: 1
