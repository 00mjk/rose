=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
registers:
    ax      = { {defs={}, expr=v2[32]} }
    cx      = { {defs={}, expr=v3[32]} }
    dx      = { {defs={}, expr=v4[32]} }
    bx      = { {defs={}, expr=v5[32]} }
    sp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    bp      = { {defs={}, expr=v7[32]} }
    si      = { {defs={}, expr=v8[32]} }
    di      = { {defs={}, expr=v9[32]} }
    es      = { {defs={}, expr=v10[16]} }
    cs      = { {defs={}, expr=v11[16]} }
    ss      = { {defs={}, expr=v12[16]} }
    ds      = { {defs={}, expr=v13[16]} }
    fs      = { {defs={}, expr=v14[16]} }
    gs      = { {defs={}, expr=v15[16]} }
    cf      = { {defs={}, expr=v16[1]} }
    ?1      = { {defs={}, expr=v17[1]} }
    pf      = { {defs={}, expr=v18[1]} }
    ?3      = { {defs={}, expr=v19[1]} }
    af      = { {defs={}, expr=v20[1]} }
    ?5      = { {defs={}, expr=v21[1]} }
    zf      = { {defs={}, expr=v22[1]} }
    sf      = { {defs={}, expr=v23[1]} }
    tf      = { {defs={}, expr=v24[1]} }
    if      = { {defs={}, expr=v25[1]} }
    df      = { {defs={}, expr=v26[1]} }
    of      = { {defs={}, expr=v27[1]} }
    iopl0   = { {defs={}, expr=v28[1]} }
    iopl1   = { {defs={}, expr=v29[1]} }
    nt      = { {defs={}, expr=v30[1]} }
    ?15     = { {defs={}, expr=v31[1]} }
    rf      = { {defs={}, expr=v32[1]} }
    vm      = { {defs={}, expr=v33[1]} }
    ac      = { {defs={}, expr=v34[1]} }
    vif     = { {defs={}, expr=v35[1]} }
    vip     = { {defs={}, expr=v36[1]} }
    id      = { {defs={}, expr=v37[1]} }
    ?22     = { {defs={}, expr=v38[1]} }
    ?23     = { {defs={}, expr=v39[1]} }
    ?24     = { {defs={}, expr=v40[1]} }
    ?25     = { {defs={}, expr=v41[1]} }
    ?26     = { {defs={}, expr=v42[1]} }
    ?27     = { {defs={}, expr=v43[1]} }
    ?28     = { {defs={}, expr=v44[1]} }
    ?29     = { {defs={}, expr=v45[1]} }
    ?30     = { {defs={}, expr=v46[1]} }
    ?31     = { {defs={}, expr=v47[1]} }
    ip      = { {defs={0x080482c8}, expr=0x080482c9[32]} }
memory:
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 3[32])} value={defs={0x080482c8}, expr=(extract[8] 24[32] 32[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 2[32])} value={defs={0x080482c8}, expr=(extract[8] 16[32] 24[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 1[32])} value={defs={0x080482c8}, expr=(extract[8] 8[32] 16[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} value={defs={0x080482c8}, expr=(extract[8] 0[32] 8[32] v7[32])}
0x80482c9:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v2[32]} }
    cx      = { {defs={}, expr=v3[32]} }
    dx      = { {defs={}, expr=v4[32]} }
    bx      = { {defs={}, expr=v5[32]} }
    sp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    bp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    si      = { {defs={}, expr=v8[32]} }
    di      = { {defs={}, expr=v9[32]} }
    es      = { {defs={}, expr=v10[16]} }
    cs      = { {defs={}, expr=v11[16]} }
    ss      = { {defs={}, expr=v12[16]} }
    ds      = { {defs={}, expr=v13[16]} }
    fs      = { {defs={}, expr=v14[16]} }
    gs      = { {defs={}, expr=v15[16]} }
    cf      = { {defs={}, expr=v16[1]} }
    ?1      = { {defs={}, expr=v17[1]} }
    pf      = { {defs={}, expr=v18[1]} }
    ?3      = { {defs={}, expr=v19[1]} }
    af      = { {defs={}, expr=v20[1]} }
    ?5      = { {defs={}, expr=v21[1]} }
    zf      = { {defs={}, expr=v22[1]} }
    sf      = { {defs={}, expr=v23[1]} }
    tf      = { {defs={}, expr=v24[1]} }
    if      = { {defs={}, expr=v25[1]} }
    df      = { {defs={}, expr=v26[1]} }
    of      = { {defs={}, expr=v27[1]} }
    iopl0   = { {defs={}, expr=v28[1]} }
    iopl1   = { {defs={}, expr=v29[1]} }
    nt      = { {defs={}, expr=v30[1]} }
    ?15     = { {defs={}, expr=v31[1]} }
    rf      = { {defs={}, expr=v32[1]} }
    vm      = { {defs={}, expr=v33[1]} }
    ac      = { {defs={}, expr=v34[1]} }
    vif     = { {defs={}, expr=v35[1]} }
    vip     = { {defs={}, expr=v36[1]} }
    id      = { {defs={}, expr=v37[1]} }
    ?22     = { {defs={}, expr=v38[1]} }
    ?23     = { {defs={}, expr=v39[1]} }
    ?24     = { {defs={}, expr=v40[1]} }
    ?25     = { {defs={}, expr=v41[1]} }
    ?26     = { {defs={}, expr=v42[1]} }
    ?27     = { {defs={}, expr=v43[1]} }
    ?28     = { {defs={}, expr=v44[1]} }
    ?29     = { {defs={}, expr=v45[1]} }
    ?30     = { {defs={}, expr=v46[1]} }
    ?31     = { {defs={}, expr=v47[1]} }
    ip      = { {defs={0x080482c9}, expr=0x080482cb[32]} }
memory:
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 3[32])} value={defs={0x080482c8}, expr=(extract[8] 24[32] 32[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 2[32])} value={defs={0x080482c8}, expr=(extract[8] 16[32] 24[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 1[32])} value={defs={0x080482c8}, expr=(extract[8] 8[32] 16[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} value={defs={0x080482c8}, expr=(extract[8] 0[32] 8[32] v7[32])}
0x80482cb:sub    esp, 0x08
registers:
    ax      = { {defs={}, expr=v2[32]} }
    cx      = { {defs={}, expr=v3[32]} }
    dx      = { {defs={}, expr=v4[32]} }
    bx      = { {defs={}, expr=v5[32]} }
    sp      = { {defs={0x080482c8,0x080482cb}, expr=(add[32] (add[32] v6[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    si      = { {defs={}, expr=v8[32]} }
    di      = { {defs={}, expr=v9[32]} }
    es      = { {defs={}, expr=v10[16]} }
    cs      = { {defs={}, expr=v11[16]} }
    ss      = { {defs={}, expr=v12[16]} }
    ds      = { {defs={}, expr=v13[16]} }
    fs      = { {defs={}, expr=v14[16]} }
    gs      = { {defs={}, expr=v15[16]} }
    cf      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v17[1]} }
    pf      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v19[1]} }
    af      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v21[1]} }
    zf      = { {defs={0x080482c8,0x080482cb}, expr=(zerop[1] (add[32] (add[32] v6[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x080482c8,0x080482cb}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v24[1]} }
    if      = { {defs={}, expr=v25[1]} }
    df      = { {defs={}, expr=v26[1]} }
    of      = { {defs={0x080482c8,0x080482cb}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v28[1]} }
    iopl1   = { {defs={}, expr=v29[1]} }
    nt      = { {defs={}, expr=v30[1]} }
    ?15     = { {defs={}, expr=v31[1]} }
    rf      = { {defs={}, expr=v32[1]} }
    vm      = { {defs={}, expr=v33[1]} }
    ac      = { {defs={}, expr=v34[1]} }
    vif     = { {defs={}, expr=v35[1]} }
    vip     = { {defs={}, expr=v36[1]} }
    id      = { {defs={}, expr=v37[1]} }
    ?22     = { {defs={}, expr=v38[1]} }
    ?23     = { {defs={}, expr=v39[1]} }
    ?24     = { {defs={}, expr=v40[1]} }
    ?25     = { {defs={}, expr=v41[1]} }
    ?26     = { {defs={}, expr=v42[1]} }
    ?27     = { {defs={}, expr=v43[1]} }
    ?28     = { {defs={}, expr=v44[1]} }
    ?29     = { {defs={}, expr=v45[1]} }
    ?30     = { {defs={}, expr=v46[1]} }
    ?31     = { {defs={}, expr=v47[1]} }
    ip      = { {defs={0x080482cb}, expr=0x080482ce[32]} }
memory:
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 3[32])} value={defs={0x080482c8}, expr=(extract[8] 24[32] 32[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 2[32])} value={defs={0x080482c8}, expr=(extract[8] 16[32] 24[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 1[32])} value={defs={0x080482c8}, expr=(extract[8] 8[32] 16[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} value={defs={0x080482c8}, expr=(extract[8] 0[32] 8[32] v7[32])}
0x80482ce:call   0x08048364<call_gmon_start>
registers:
    ax      = { {defs={}, expr=v2[32]} }
    cx      = { {defs={}, expr=v3[32]} }
    dx      = { {defs={}, expr=v4[32]} }
    bx      = { {defs={}, expr=v5[32]} }
    sp      = { {defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32])} }
    bp      = { {defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} }
    si      = { {defs={}, expr=v8[32]} }
    di      = { {defs={}, expr=v9[32]} }
    es      = { {defs={}, expr=v10[16]} }
    cs      = { {defs={}, expr=v11[16]} }
    ss      = { {defs={}, expr=v12[16]} }
    ds      = { {defs={}, expr=v13[16]} }
    fs      = { {defs={}, expr=v14[16]} }
    gs      = { {defs={}, expr=v15[16]} }
    cf      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v17[1]} }
    pf      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v6[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v19[1]} }
    af      = { {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v21[1]} }
    zf      = { {defs={0x080482c8,0x080482cb}, expr=(zerop[1] (add[32] (add[32] v6[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x080482c8,0x080482cb}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v6[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v24[1]} }
    if      = { {defs={}, expr=v25[1]} }
    df      = { {defs={}, expr=v26[1]} }
    of      = { {defs={0x080482c8,0x080482cb}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v6[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v28[1]} }
    iopl1   = { {defs={}, expr=v29[1]} }
    nt      = { {defs={}, expr=v30[1]} }
    ?15     = { {defs={}, expr=v31[1]} }
    rf      = { {defs={}, expr=v32[1]} }
    vm      = { {defs={}, expr=v33[1]} }
    ac      = { {defs={}, expr=v34[1]} }
    vif     = { {defs={}, expr=v35[1]} }
    vip     = { {defs={}, expr=v36[1]} }
    id      = { {defs={}, expr=v37[1]} }
    ?22     = { {defs={}, expr=v38[1]} }
    ?23     = { {defs={}, expr=v39[1]} }
    ?24     = { {defs={}, expr=v40[1]} }
    ?25     = { {defs={}, expr=v41[1]} }
    ?26     = { {defs={}, expr=v42[1]} }
    ?27     = { {defs={}, expr=v43[1]} }
    ?28     = { {defs={}, expr=v44[1]} }
    ?29     = { {defs={}, expr=v45[1]} }
    ?30     = { {defs={}, expr=v46[1]} }
    ?31     = { {defs={}, expr=v47[1]} }
    ip      = { {defs={0x080482ce}, expr=0x08048364[32]} }
memory:
    addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32]) 3[32])} value={defs={0x080482ce}, expr=8[8]}
    addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32]) 2[32])} value={defs={0x080482ce}, expr=4[8]}
    addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32]) 1[32])} value={defs={0x080482ce}, expr=-126[8]}
    addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] (add[32] (add[32] v6[32] -4[32]) -8[32]) -4[32])} value={defs={0x080482ce}, expr=-45[8]}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 3[32])} value={defs={0x080482c8}, expr=(extract[8] 24[32] 32[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 2[32])} value={defs={0x080482c8}, expr=(extract[8] 16[32] 24[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] (add[32] v6[32] -4[32]) 1[32])} value={defs={0x080482c8}, expr=(extract[8] 8[32] 16[32] v7[32])}
    addr={defs={0x080482c8}, expr=(add[32] v6[32] -4[32])} value={defs={0x080482c8}, expr=(extract[8] 0[32] 8[32] v7[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0<frame_dummy>
registers:
    ax      = { {defs={}, expr=v50[32]} }
    cx      = { {defs={}, expr=v51[32]} }
    dx      = { {defs={}, expr=v52[32]} }
    bx      = { {defs={}, expr=v53[32]} }
    sp      = { {defs={0x080482d3}, expr=(add[32] v54[32] -4[32])} }
    bp      = { {defs={}, expr=v55[32]} }
    si      = { {defs={}, expr=v56[32]} }
    di      = { {defs={}, expr=v57[32]} }
    es      = { {defs={}, expr=v58[16]} }
    cs      = { {defs={}, expr=v59[16]} }
    ss      = { {defs={}, expr=v60[16]} }
    ds      = { {defs={}, expr=v61[16]} }
    fs      = { {defs={}, expr=v62[16]} }
    gs      = { {defs={}, expr=v63[16]} }
    cf      = { {defs={}, expr=v64[1]} }
    ?1      = { {defs={}, expr=v65[1]} }
    pf      = { {defs={}, expr=v66[1]} }
    ?3      = { {defs={}, expr=v67[1]} }
    af      = { {defs={}, expr=v68[1]} }
    ?5      = { {defs={}, expr=v69[1]} }
    zf      = { {defs={}, expr=v70[1]} }
    sf      = { {defs={}, expr=v71[1]} }
    tf      = { {defs={}, expr=v72[1]} }
    if      = { {defs={}, expr=v73[1]} }
    df      = { {defs={}, expr=v74[1]} }
    of      = { {defs={}, expr=v75[1]} }
    iopl0   = { {defs={}, expr=v76[1]} }
    iopl1   = { {defs={}, expr=v77[1]} }
    nt      = { {defs={}, expr=v78[1]} }
    ?15     = { {defs={}, expr=v79[1]} }
    rf      = { {defs={}, expr=v80[1]} }
    vm      = { {defs={}, expr=v81[1]} }
    ac      = { {defs={}, expr=v82[1]} }
    vif     = { {defs={}, expr=v83[1]} }
    vip     = { {defs={}, expr=v84[1]} }
    id      = { {defs={}, expr=v85[1]} }
    ?22     = { {defs={}, expr=v86[1]} }
    ?23     = { {defs={}, expr=v87[1]} }
    ?24     = { {defs={}, expr=v88[1]} }
    ?25     = { {defs={}, expr=v89[1]} }
    ?26     = { {defs={}, expr=v90[1]} }
    ?27     = { {defs={}, expr=v91[1]} }
    ?28     = { {defs={}, expr=v92[1]} }
    ?29     = { {defs={}, expr=v93[1]} }
    ?30     = { {defs={}, expr=v94[1]} }
    ?31     = { {defs={}, expr=v95[1]} }
    ip      = { {defs={0x080482d3}, expr=0x080483d0[32]} }
memory:
    addr={defs={0x080482d3}, expr=(add[32] (add[32] v54[32] -4[32]) 3[32])} value={defs={0x080482d3}, expr=8[8]}
    addr={defs={0x080482d3}, expr=(add[32] (add[32] v54[32] -4[32]) 2[32])} value={defs={0x080482d3}, expr=4[8]}
    addr={defs={0x080482d3}, expr=(add[32] (add[32] v54[32] -4[32]) 1[32])} value={defs={0x080482d3}, expr=-126[8]}
    addr={defs={0x080482d3}, expr=(add[32] v54[32] -4[32])} value={defs={0x080482d3}, expr=-40[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580<__do_global_ctors_aux>
registers:
    ax      = { {defs={}, expr=v98[32]} }
    cx      = { {defs={}, expr=v99[32]} }
    dx      = { {defs={}, expr=v100[32]} }
    bx      = { {defs={}, expr=v101[32]} }
    sp      = { {defs={0x080482d8}, expr=(add[32] v102[32] -4[32])} }
    bp      = { {defs={}, expr=v103[32]} }
    si      = { {defs={}, expr=v104[32]} }
    di      = { {defs={}, expr=v105[32]} }
    es      = { {defs={}, expr=v106[16]} }
    cs      = { {defs={}, expr=v107[16]} }
    ss      = { {defs={}, expr=v108[16]} }
    ds      = { {defs={}, expr=v109[16]} }
    fs      = { {defs={}, expr=v110[16]} }
    gs      = { {defs={}, expr=v111[16]} }
    cf      = { {defs={}, expr=v112[1]} }
    ?1      = { {defs={}, expr=v113[1]} }
    pf      = { {defs={}, expr=v114[1]} }
    ?3      = { {defs={}, expr=v115[1]} }
    af      = { {defs={}, expr=v116[1]} }
    ?5      = { {defs={}, expr=v117[1]} }
    zf      = { {defs={}, expr=v118[1]} }
    sf      = { {defs={}, expr=v119[1]} }
    tf      = { {defs={}, expr=v120[1]} }
    if      = { {defs={}, expr=v121[1]} }
    df      = { {defs={}, expr=v122[1]} }
    of      = { {defs={}, expr=v123[1]} }
    iopl0   = { {defs={}, expr=v124[1]} }
    iopl1   = { {defs={}, expr=v125[1]} }
    nt      = { {defs={}, expr=v126[1]} }
    ?15     = { {defs={}, expr=v127[1]} }
    rf      = { {defs={}, expr=v128[1]} }
    vm      = { {defs={}, expr=v129[1]} }
    ac      = { {defs={}, expr=v130[1]} }
    vif     = { {defs={}, expr=v131[1]} }
    vip     = { {defs={}, expr=v132[1]} }
    id      = { {defs={}, expr=v133[1]} }
    ?22     = { {defs={}, expr=v134[1]} }
    ?23     = { {defs={}, expr=v135[1]} }
    ?24     = { {defs={}, expr=v136[1]} }
    ?25     = { {defs={}, expr=v137[1]} }
    ?26     = { {defs={}, expr=v138[1]} }
    ?27     = { {defs={}, expr=v139[1]} }
    ?28     = { {defs={}, expr=v140[1]} }
    ?29     = { {defs={}, expr=v141[1]} }
    ?30     = { {defs={}, expr=v142[1]} }
    ?31     = { {defs={}, expr=v143[1]} }
    ip      = { {defs={0x080482d8}, expr=0x08048580[32]} }
memory:
    addr={defs={0x080482d8}, expr=(add[32] (add[32] v102[32] -4[32]) 3[32])} value={defs={0x080482d8}, expr=8[8]}
    addr={defs={0x080482d8}, expr=(add[32] (add[32] v102[32] -4[32]) 2[32])} value={defs={0x080482d8}, expr=4[8]}
    addr={defs={0x080482d8}, expr=(add[32] (add[32] v102[32] -4[32]) 1[32])} value={defs={0x080482d8}, expr=-126[8]}
    addr={defs={0x080482d8}, expr=(add[32] v102[32] -4[32])} value={defs={0x080482d8}, expr=-35[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
registers:
    ax      = { {defs={}, expr=v146[32]} }
    cx      = { {defs={}, expr=v147[32]} }
    dx      = { {defs={}, expr=v148[32]} }
    bx      = { {defs={}, expr=v149[32]} }
    sp      = { {defs={0x080482dd}, expr=(add[32] v151[32] 4[32])} }
    bp      = { {defs={0x080482dd}, expr=v192[32]} }
    si      = { {defs={}, expr=v152[32]} }
    di      = { {defs={}, expr=v153[32]} }
    es      = { {defs={}, expr=v154[16]} }
    cs      = { {defs={}, expr=v155[16]} }
    ss      = { {defs={}, expr=v156[16]} }
    ds      = { {defs={}, expr=v157[16]} }
    fs      = { {defs={}, expr=v158[16]} }
    gs      = { {defs={}, expr=v159[16]} }
    cf      = { {defs={}, expr=v160[1]} }
    ?1      = { {defs={}, expr=v161[1]} }
    pf      = { {defs={}, expr=v162[1]} }
    ?3      = { {defs={}, expr=v163[1]} }
    af      = { {defs={}, expr=v164[1]} }
    ?5      = { {defs={}, expr=v165[1]} }
    zf      = { {defs={}, expr=v166[1]} }
    sf      = { {defs={}, expr=v167[1]} }
    tf      = { {defs={}, expr=v168[1]} }
    if      = { {defs={}, expr=v169[1]} }
    df      = { {defs={}, expr=v170[1]} }
    of      = { {defs={}, expr=v171[1]} }
    iopl0   = { {defs={}, expr=v172[1]} }
    iopl1   = { {defs={}, expr=v173[1]} }
    nt      = { {defs={}, expr=v174[1]} }
    ?15     = { {defs={}, expr=v175[1]} }
    rf      = { {defs={}, expr=v176[1]} }
    vm      = { {defs={}, expr=v177[1]} }
    ac      = { {defs={}, expr=v178[1]} }
    vif     = { {defs={}, expr=v179[1]} }
    vip     = { {defs={}, expr=v180[1]} }
    id      = { {defs={}, expr=v181[1]} }
    ?22     = { {defs={}, expr=v182[1]} }
    ?23     = { {defs={}, expr=v183[1]} }
    ?24     = { {defs={}, expr=v184[1]} }
    ?25     = { {defs={}, expr=v185[1]} }
    ?26     = { {defs={}, expr=v186[1]} }
    ?27     = { {defs={}, expr=v187[1]} }
    ?28     = { {defs={}, expr=v188[1]} }
    ?29     = { {defs={}, expr=v189[1]} }
    ?30     = { {defs={}, expr=v190[1]} }
    ?31     = { {defs={}, expr=v191[1]} }
    ip      = { {defs={0x080482dd}, expr=0x080482de[32]} }
memory:
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 3[32])} value={defs={0x080482dd}, expr=(extract[8] 24[32] 32[32] v192[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 2[32])} value={defs={0x080482dd}, expr=(extract[8] 16[32] 24[32] v192[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 1[32])} value={defs={0x080482dd}, expr=(extract[8] 8[32] 16[32] v192[32])}
    addr={defs={}, expr=v151[32]} value={defs={0x080482dd}, expr=(extract[8] 0[32] 8[32] v192[32])}
0x80482de:ret    
registers:
    ax      = { {defs={}, expr=v146[32]} }
    cx      = { {defs={}, expr=v147[32]} }
    dx      = { {defs={}, expr=v148[32]} }
    bx      = { {defs={}, expr=v149[32]} }
    sp      = { {defs={0x080482dd,0x080482de}, expr=(add[32] (add[32] v151[32] 4[32]) 4[32])} }
    bp      = { {defs={0x080482dd}, expr=v192[32]} }
    si      = { {defs={}, expr=v152[32]} }
    di      = { {defs={}, expr=v153[32]} }
    es      = { {defs={}, expr=v154[16]} }
    cs      = { {defs={}, expr=v155[16]} }
    ss      = { {defs={}, expr=v156[16]} }
    ds      = { {defs={}, expr=v157[16]} }
    fs      = { {defs={}, expr=v158[16]} }
    gs      = { {defs={}, expr=v159[16]} }
    cf      = { {defs={}, expr=v160[1]} }
    ?1      = { {defs={}, expr=v161[1]} }
    pf      = { {defs={}, expr=v162[1]} }
    ?3      = { {defs={}, expr=v163[1]} }
    af      = { {defs={}, expr=v164[1]} }
    ?5      = { {defs={}, expr=v165[1]} }
    zf      = { {defs={}, expr=v166[1]} }
    sf      = { {defs={}, expr=v167[1]} }
    tf      = { {defs={}, expr=v168[1]} }
    if      = { {defs={}, expr=v169[1]} }
    df      = { {defs={}, expr=v170[1]} }
    of      = { {defs={}, expr=v171[1]} }
    iopl0   = { {defs={}, expr=v172[1]} }
    iopl1   = { {defs={}, expr=v173[1]} }
    nt      = { {defs={}, expr=v174[1]} }
    ?15     = { {defs={}, expr=v175[1]} }
    rf      = { {defs={}, expr=v176[1]} }
    vm      = { {defs={}, expr=v177[1]} }
    ac      = { {defs={}, expr=v178[1]} }
    vif     = { {defs={}, expr=v179[1]} }
    vip     = { {defs={}, expr=v180[1]} }
    id      = { {defs={}, expr=v181[1]} }
    ?22     = { {defs={}, expr=v182[1]} }
    ?23     = { {defs={}, expr=v183[1]} }
    ?24     = { {defs={}, expr=v184[1]} }
    ?25     = { {defs={}, expr=v185[1]} }
    ?26     = { {defs={}, expr=v186[1]} }
    ?27     = { {defs={}, expr=v187[1]} }
    ?28     = { {defs={}, expr=v188[1]} }
    ?29     = { {defs={}, expr=v189[1]} }
    ?30     = { {defs={}, expr=v190[1]} }
    ?31     = { {defs={}, expr=v191[1]} }
    ip      = { {defs={0x080482de}, expr=v197[32]} }
memory:
    addr={defs={0x080482dd,0x080482de}, expr=(add[32] (add[32] v151[32] 4[32]) 3[32])} value={defs={0x080482de}, expr=(extract[8] 24[32] 32[32] v197[32])}
    addr={defs={0x080482dd,0x080482de}, expr=(add[32] (add[32] v151[32] 4[32]) 2[32])} value={defs={0x080482de}, expr=(extract[8] 16[32] 24[32] v197[32])}
    addr={defs={0x080482dd,0x080482de}, expr=(add[32] (add[32] v151[32] 4[32]) 1[32])} value={defs={0x080482de}, expr=(extract[8] 8[32] 16[32] v197[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 4[32])} value={defs={0x080482de}, expr=(extract[8] 0[32] 8[32] v197[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 3[32])} value={defs={0x080482dd}, expr=(extract[8] 24[32] 32[32] v192[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 2[32])} value={defs={0x080482dd}, expr=(extract[8] 16[32] 24[32] v192[32])}
    addr={defs={0x080482dd}, expr=(add[32] v151[32] 1[32])} value={defs={0x080482dd}, expr=(extract[8] 8[32] 16[32] v192[32])}
    addr={defs={}, expr=v151[32]} value={defs={0x080482dd}, expr=(extract[8] 0[32] 8[32] v192[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]
registers:
    ax      = { {defs={}, expr=v204[32]} }
    cx      = { {defs={}, expr=v205[32]} }
    dx      = { {defs={}, expr=v206[32]} }
    bx      = { {defs={}, expr=v207[32]} }
    sp      = { {defs={}, expr=v208[32]} }
    bp      = { {defs={}, expr=v209[32]} }
    si      = { {defs={}, expr=v210[32]} }
    di      = { {defs={}, expr=v211[32]} }
    es      = { {defs={}, expr=v212[16]} }
    cs      = { {defs={}, expr=v213[16]} }
    ss      = { {defs={}, expr=v214[16]} }
    ds      = { {defs={}, expr=v215[16]} }
    fs      = { {defs={}, expr=v216[16]} }
    gs      = { {defs={}, expr=v217[16]} }
    cf      = { {defs={}, expr=v218[1]} }
    ?1      = { {defs={}, expr=v219[1]} }
    pf      = { {defs={}, expr=v220[1]} }
    ?3      = { {defs={}, expr=v221[1]} }
    af      = { {defs={}, expr=v222[1]} }
    ?5      = { {defs={}, expr=v223[1]} }
    zf      = { {defs={}, expr=v224[1]} }
    sf      = { {defs={}, expr=v225[1]} }
    tf      = { {defs={}, expr=v226[1]} }
    if      = { {defs={}, expr=v227[1]} }
    df      = { {defs={}, expr=v228[1]} }
    of      = { {defs={}, expr=v229[1]} }
    iopl0   = { {defs={}, expr=v230[1]} }
    iopl1   = { {defs={}, expr=v231[1]} }
    nt      = { {defs={}, expr=v232[1]} }
    ?15     = { {defs={}, expr=v233[1]} }
    rf      = { {defs={}, expr=v234[1]} }
    vm      = { {defs={}, expr=v235[1]} }
    ac      = { {defs={}, expr=v236[1]} }
    vif     = { {defs={}, expr=v237[1]} }
    vip     = { {defs={}, expr=v238[1]} }
    id      = { {defs={}, expr=v239[1]} }
    ?22     = { {defs={}, expr=v240[1]} }
    ?23     = { {defs={}, expr=v241[1]} }
    ?24     = { {defs={}, expr=v242[1]} }
    ?25     = { {defs={}, expr=v243[1]} }
    ?26     = { {defs={}, expr=v244[1]} }
    ?27     = { {defs={}, expr=v245[1]} }
    ?28     = { {defs={}, expr=v246[1]} }
    ?29     = { {defs={}, expr=v247[1]} }
    ?30     = { {defs={}, expr=v248[1]} }
    ?31     = { {defs={}, expr=v249[1]} }
    ip      = { {defs={0x080482f0}, expr=v250[32]} }
memory:
    addr={defs={0x080482f0}, expr=0x080496d7[32]} value={defs={0x080482f0}, expr=(extract[8] 24[32] 32[32] v250[32])}
    addr={defs={0x080482f0}, expr=0x080496d6[32]} value={defs={0x080482f0}, expr=(extract[8] 16[32] 24[32] v250[32])}
    addr={defs={0x080482f0}, expr=0x080496d5[32]} value={defs={0x080482f0}, expr=(extract[8] 8[32] 16[32] v250[32])}
    addr={defs={0x080482f0}, expr=0x080496d4[32]} value={defs={0x080482f0}, expr=(extract[8] 0[32] 8[32] v250[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]
registers:
    ax      = { {defs={}, expr=v257[32]} }
    cx      = { {defs={}, expr=v258[32]} }
    dx      = { {defs={}, expr=v259[32]} }
    bx      = { {defs={}, expr=v260[32]} }
    sp      = { {defs={}, expr=v261[32]} }
    bp      = { {defs={}, expr=v262[32]} }
    si      = { {defs={}, expr=v263[32]} }
    di      = { {defs={}, expr=v264[32]} }
    es      = { {defs={}, expr=v265[16]} }
    cs      = { {defs={}, expr=v266[16]} }
    ss      = { {defs={}, expr=v267[16]} }
    ds      = { {defs={}, expr=v268[16]} }
    fs      = { {defs={}, expr=v269[16]} }
    gs      = { {defs={}, expr=v270[16]} }
    cf      = { {defs={}, expr=v271[1]} }
    ?1      = { {defs={}, expr=v272[1]} }
    pf      = { {defs={}, expr=v273[1]} }
    ?3      = { {defs={}, expr=v274[1]} }
    af      = { {defs={}, expr=v275[1]} }
    ?5      = { {defs={}, expr=v276[1]} }
    zf      = { {defs={}, expr=v277[1]} }
    sf      = { {defs={}, expr=v278[1]} }
    tf      = { {defs={}, expr=v279[1]} }
    if      = { {defs={}, expr=v280[1]} }
    df      = { {defs={}, expr=v281[1]} }
    of      = { {defs={}, expr=v282[1]} }
    iopl0   = { {defs={}, expr=v283[1]} }
    iopl1   = { {defs={}, expr=v284[1]} }
    nt      = { {defs={}, expr=v285[1]} }
    ?15     = { {defs={}, expr=v286[1]} }
    rf      = { {defs={}, expr=v287[1]} }
    vm      = { {defs={}, expr=v288[1]} }
    ac      = { {defs={}, expr=v289[1]} }
    vif     = { {defs={}, expr=v290[1]} }
    vip     = { {defs={}, expr=v291[1]} }
    id      = { {defs={}, expr=v292[1]} }
    ?22     = { {defs={}, expr=v293[1]} }
    ?23     = { {defs={}, expr=v294[1]} }
    ?24     = { {defs={}, expr=v295[1]} }
    ?25     = { {defs={}, expr=v296[1]} }
    ?26     = { {defs={}, expr=v297[1]} }
    ?27     = { {defs={}, expr=v298[1]} }
    ?28     = { {defs={}, expr=v299[1]} }
    ?29     = { {defs={}, expr=v300[1]} }
    ?30     = { {defs={}, expr=v301[1]} }
    ?31     = { {defs={}, expr=v302[1]} }
    ip      = { {defs={0x08048300}, expr=v303[32]} }
memory:
    addr={defs={0x08048300}, expr=0x080496db[32]} value={defs={0x08048300}, expr=(extract[8] 24[32] 32[32] v303[32])}
    addr={defs={0x08048300}, expr=0x080496da[32]} value={defs={0x08048300}, expr=(extract[8] 16[32] 24[32] v303[32])}
    addr={defs={0x08048300}, expr=0x080496d9[32]} value={defs={0x08048300}, expr=(extract[8] 8[32] 16[32] v303[32])}
    addr={defs={0x08048300}, expr=0x080496d8[32]} value={defs={0x08048300}, expr=(extract[8] 0[32] 8[32] v303[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]
registers:
    ax      = { {defs={}, expr=v310[32]} }
    cx      = { {defs={}, expr=v311[32]} }
    dx      = { {defs={}, expr=v312[32]} }
    bx      = { {defs={}, expr=v313[32]} }
    sp      = { {defs={}, expr=v314[32]} }
    bp      = { {defs={}, expr=v315[32]} }
    si      = { {defs={}, expr=v316[32]} }
    di      = { {defs={}, expr=v317[32]} }
    es      = { {defs={}, expr=v318[16]} }
    cs      = { {defs={}, expr=v319[16]} }
    ss      = { {defs={}, expr=v320[16]} }
    ds      = { {defs={}, expr=v321[16]} }
    fs      = { {defs={}, expr=v322[16]} }
    gs      = { {defs={}, expr=v323[16]} }
    cf      = { {defs={}, expr=v324[1]} }
    ?1      = { {defs={}, expr=v325[1]} }
    pf      = { {defs={}, expr=v326[1]} }
    ?3      = { {defs={}, expr=v327[1]} }
    af      = { {defs={}, expr=v328[1]} }
    ?5      = { {defs={}, expr=v329[1]} }
    zf      = { {defs={}, expr=v330[1]} }
    sf      = { {defs={}, expr=v331[1]} }
    tf      = { {defs={}, expr=v332[1]} }
    if      = { {defs={}, expr=v333[1]} }
    df      = { {defs={}, expr=v334[1]} }
    of      = { {defs={}, expr=v335[1]} }
    iopl0   = { {defs={}, expr=v336[1]} }
    iopl1   = { {defs={}, expr=v337[1]} }
    nt      = { {defs={}, expr=v338[1]} }
    ?15     = { {defs={}, expr=v339[1]} }
    rf      = { {defs={}, expr=v340[1]} }
    vm      = { {defs={}, expr=v341[1]} }
    ac      = { {defs={}, expr=v342[1]} }
    vif     = { {defs={}, expr=v343[1]} }
    vip     = { {defs={}, expr=v344[1]} }
    id      = { {defs={}, expr=v345[1]} }
    ?22     = { {defs={}, expr=v346[1]} }
    ?23     = { {defs={}, expr=v347[1]} }
    ?24     = { {defs={}, expr=v348[1]} }
    ?25     = { {defs={}, expr=v349[1]} }
    ?26     = { {defs={}, expr=v350[1]} }
    ?27     = { {defs={}, expr=v351[1]} }
    ?28     = { {defs={}, expr=v352[1]} }
    ?29     = { {defs={}, expr=v353[1]} }
    ?30     = { {defs={}, expr=v354[1]} }
    ?31     = { {defs={}, expr=v355[1]} }
    ip      = { {defs={0x08048310}, expr=v356[32]} }
memory:
    addr={defs={0x08048310}, expr=0x080496df[32]} value={defs={0x08048310}, expr=(extract[8] 24[32] 32[32] v356[32])}
    addr={defs={0x08048310}, expr=0x080496de[32]} value={defs={0x08048310}, expr=(extract[8] 16[32] 24[32] v356[32])}
    addr={defs={0x08048310}, expr=0x080496dd[32]} value={defs={0x08048310}, expr=(extract[8] 8[32] 16[32] v356[32])}
    addr={defs={0x08048310}, expr=0x080496dc[32]} value={defs={0x08048310}, expr=(extract[8] 0[32] 8[32] v356[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]
registers:
    ax      = { {defs={}, expr=v363[32]} }
    cx      = { {defs={}, expr=v364[32]} }
    dx      = { {defs={}, expr=v365[32]} }
    bx      = { {defs={}, expr=v366[32]} }
    sp      = { {defs={}, expr=v367[32]} }
    bp      = { {defs={}, expr=v368[32]} }
    si      = { {defs={}, expr=v369[32]} }
    di      = { {defs={}, expr=v370[32]} }
    es      = { {defs={}, expr=v371[16]} }
    cs      = { {defs={}, expr=v372[16]} }
    ss      = { {defs={}, expr=v373[16]} }
    ds      = { {defs={}, expr=v374[16]} }
    fs      = { {defs={}, expr=v375[16]} }
    gs      = { {defs={}, expr=v376[16]} }
    cf      = { {defs={}, expr=v377[1]} }
    ?1      = { {defs={}, expr=v378[1]} }
    pf      = { {defs={}, expr=v379[1]} }
    ?3      = { {defs={}, expr=v380[1]} }
    af      = { {defs={}, expr=v381[1]} }
    ?5      = { {defs={}, expr=v382[1]} }
    zf      = { {defs={}, expr=v383[1]} }
    sf      = { {defs={}, expr=v384[1]} }
    tf      = { {defs={}, expr=v385[1]} }
    if      = { {defs={}, expr=v386[1]} }
    df      = { {defs={}, expr=v387[1]} }
    of      = { {defs={}, expr=v388[1]} }
    iopl0   = { {defs={}, expr=v389[1]} }
    iopl1   = { {defs={}, expr=v390[1]} }
    nt      = { {defs={}, expr=v391[1]} }
    ?15     = { {defs={}, expr=v392[1]} }
    rf      = { {defs={}, expr=v393[1]} }
    vm      = { {defs={}, expr=v394[1]} }
    ac      = { {defs={}, expr=v395[1]} }
    vif     = { {defs={}, expr=v396[1]} }
    vip     = { {defs={}, expr=v397[1]} }
    id      = { {defs={}, expr=v398[1]} }
    ?22     = { {defs={}, expr=v399[1]} }
    ?23     = { {defs={}, expr=v400[1]} }
    ?24     = { {defs={}, expr=v401[1]} }
    ?25     = { {defs={}, expr=v402[1]} }
    ?26     = { {defs={}, expr=v403[1]} }
    ?27     = { {defs={}, expr=v404[1]} }
    ?28     = { {defs={}, expr=v405[1]} }
    ?29     = { {defs={}, expr=v406[1]} }
    ?30     = { {defs={}, expr=v407[1]} }
    ?31     = { {defs={}, expr=v408[1]} }
    ip      = { {defs={0x08048320}, expr=v409[32]} }
memory:
    addr={defs={0x08048320}, expr=0x080496e3[32]} value={defs={0x08048320}, expr=(extract[8] 24[32] 32[32] v409[32])}
    addr={defs={0x08048320}, expr=0x080496e2[32]} value={defs={0x08048320}, expr=(extract[8] 16[32] 24[32] v409[32])}
    addr={defs={0x08048320}, expr=0x080496e1[32]} value={defs={0x08048320}, expr=(extract[8] 8[32] 16[32] v409[32])}
    addr={defs={0x08048320}, expr=0x080496e0[32]} value={defs={0x08048320}, expr=(extract[8] 0[32] 8[32] v409[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]
registers:
    ax      = { {defs={}, expr=v416[32]} }
    cx      = { {defs={}, expr=v417[32]} }
    dx      = { {defs={}, expr=v418[32]} }
    bx      = { {defs={}, expr=v419[32]} }
    sp      = { {defs={}, expr=v420[32]} }
    bp      = { {defs={}, expr=v421[32]} }
    si      = { {defs={}, expr=v422[32]} }
    di      = { {defs={}, expr=v423[32]} }
    es      = { {defs={}, expr=v424[16]} }
    cs      = { {defs={}, expr=v425[16]} }
    ss      = { {defs={}, expr=v426[16]} }
    ds      = { {defs={}, expr=v427[16]} }
    fs      = { {defs={}, expr=v428[16]} }
    gs      = { {defs={}, expr=v429[16]} }
    cf      = { {defs={}, expr=v430[1]} }
    ?1      = { {defs={}, expr=v431[1]} }
    pf      = { {defs={}, expr=v432[1]} }
    ?3      = { {defs={}, expr=v433[1]} }
    af      = { {defs={}, expr=v434[1]} }
    ?5      = { {defs={}, expr=v435[1]} }
    zf      = { {defs={}, expr=v436[1]} }
    sf      = { {defs={}, expr=v437[1]} }
    tf      = { {defs={}, expr=v438[1]} }
    if      = { {defs={}, expr=v439[1]} }
    df      = { {defs={}, expr=v440[1]} }
    of      = { {defs={}, expr=v441[1]} }
    iopl0   = { {defs={}, expr=v442[1]} }
    iopl1   = { {defs={}, expr=v443[1]} }
    nt      = { {defs={}, expr=v444[1]} }
    ?15     = { {defs={}, expr=v445[1]} }
    rf      = { {defs={}, expr=v446[1]} }
    vm      = { {defs={}, expr=v447[1]} }
    ac      = { {defs={}, expr=v448[1]} }
    vif     = { {defs={}, expr=v449[1]} }
    vip     = { {defs={}, expr=v450[1]} }
    id      = { {defs={}, expr=v451[1]} }
    ?22     = { {defs={}, expr=v452[1]} }
    ?23     = { {defs={}, expr=v453[1]} }
    ?24     = { {defs={}, expr=v454[1]} }
    ?25     = { {defs={}, expr=v455[1]} }
    ?26     = { {defs={}, expr=v456[1]} }
    ?27     = { {defs={}, expr=v457[1]} }
    ?28     = { {defs={}, expr=v458[1]} }
    ?29     = { {defs={}, expr=v459[1]} }
    ?30     = { {defs={}, expr=v460[1]} }
    ?31     = { {defs={}, expr=v461[1]} }
    ip      = { {defs={0x08048330}, expr=v462[32]} }
memory:
    addr={defs={0x08048330}, expr=0x080496e7[32]} value={defs={0x08048330}, expr=(extract[8] 24[32] 32[32] v462[32])}
    addr={defs={0x08048330}, expr=0x080496e6[32]} value={defs={0x08048330}, expr=(extract[8] 16[32] 24[32] v462[32])}
    addr={defs={0x08048330}, expr=0x080496e5[32]} value={defs={0x08048330}, expr=(extract[8] 8[32] 16[32] v462[32])}
    addr={defs={0x08048330}, expr=0x080496e4[32]} value={defs={0x08048330}, expr=(extract[8] 0[32] 8[32] v462[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={}, expr=v470[32]} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={}, expr=v473[32]} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={}, expr=v475[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048340}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048340}, expr=1[1]} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v515[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048340}, expr=1[1]} }
    sf      = { {defs={0x08048340}, expr=0[1]} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048340}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048340}, expr=0x08048342[32]} }
memory:
0x8048342:pop    esi
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={}, expr=v470[32]} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048340}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048340}, expr=1[1]} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v515[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048340}, expr=1[1]} }
    sf      = { {defs={0x08048340}, expr=0[1]} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048340}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048342}, expr=0x08048343[32]} }
memory:
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x8048343:mov    ecx, esp
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048340}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048340}, expr=1[1]} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v515[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048340}, expr=1[1]} }
    sf      = { {defs={0x08048340}, expr=0[1]} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048340}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048343}, expr=0x08048345[32]} }
memory:
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x8048345:and    esp, 0xf0<-0x10>
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345}, expr=(bv-and[32] (add[32] v473[32] 4[32]) -16[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048345}, expr=0x08048348[32]} }
memory:
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x8048348:push   eax
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048348}, expr=0x08048349[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x8048349:push   esp
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048349}, expr=0x0804834a[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x804834a:push   edx
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x0804834a}, expr=0x0804834b[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x804834b:push   0x08048520<__libc_csu_fini>
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x0804834b}, expr=0x08048350[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x8048350:push   0x080484b0<__libc_csu_init>
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048350}, expr=0x08048355[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x8048355:push   ecx
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048355}, expr=0x08048356[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 24[32] 32[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 16[32] 24[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 8[32] 16[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 0[32] 8[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x8048356:push   esi
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048356}, expr=0x08048357[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 0[32] 8[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 24[32] 32[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 16[32] 24[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 8[32] 16[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 0[32] 8[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x8048357:push   0x08048410<main>
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x08048357}, expr=0x0804835c[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048357}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048357}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048357}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048357}, expr=16[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 0[32] 8[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 24[32] 32[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 16[32] 24[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 8[32] 16[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 0[32] 8[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
0x804835c:call   0x08048310<__libc_start_main@plt>
registers:
    ax      = { {defs={}, expr=v469[32]} }
    cx      = { {defs={0x08048342}, expr=(add[32] v473[32] 4[32])} }
    dx      = { {defs={}, expr=v471[32]} }
    bx      = { {defs={}, expr=v472[32]} }
    sp      = { {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048340}, expr=0[32]} }
    si      = { {defs={0x08048342}, expr=v516[32]} }
    di      = { {defs={}, expr=v476[32]} }
    es      = { {defs={}, expr=v477[16]} }
    cs      = { {defs={}, expr=v478[16]} }
    ss      = { {defs={}, expr=v479[16]} }
    ds      = { {defs={}, expr=v480[16]} }
    fs      = { {defs={}, expr=v481[16]} }
    gs      = { {defs={}, expr=v482[16]} }
    cf      = { {defs={0x08048345}, expr=0[1]} }
    ?1      = { {defs={}, expr=v484[1]} }
    pf      = { {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v486[1]} }
    af      = { {defs={}, expr=v521[1]} }
    ?5      = { {defs={}, expr=v488[1]} }
    zf      = { {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    sf      = { {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]))} }
    tf      = { {defs={}, expr=v491[1]} }
    if      = { {defs={}, expr=v492[1]} }
    df      = { {defs={}, expr=v493[1]} }
    of      = { {defs={0x08048345}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v495[1]} }
    iopl1   = { {defs={}, expr=v496[1]} }
    nt      = { {defs={}, expr=v497[1]} }
    ?15     = { {defs={}, expr=v498[1]} }
    rf      = { {defs={}, expr=v499[1]} }
    vm      = { {defs={}, expr=v500[1]} }
    ac      = { {defs={}, expr=v501[1]} }
    vif     = { {defs={}, expr=v502[1]} }
    vip     = { {defs={}, expr=v503[1]} }
    id      = { {defs={}, expr=v504[1]} }
    ?22     = { {defs={}, expr=v505[1]} }
    ?23     = { {defs={}, expr=v506[1]} }
    ?24     = { {defs={}, expr=v507[1]} }
    ?25     = { {defs={}, expr=v508[1]} }
    ?26     = { {defs={}, expr=v509[1]} }
    ?27     = { {defs={}, expr=v510[1]} }
    ?28     = { {defs={}, expr=v511[1]} }
    ?29     = { {defs={}, expr=v512[1]} }
    ?30     = { {defs={}, expr=v513[1]} }
    ?31     = { {defs={}, expr=v514[1]} }
    ip      = { {defs={0x0804835c}, expr=0x08048310[32]} }
memory:
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804835c}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804835c}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804835c}, expr=-125[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804835c}, expr=97[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048357}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048357}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048357}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048357}, expr=16[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048356}, expr=(extract[8] 0[32] 8[32] v516[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 24[32] 32[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 16[32] 24[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 8[32] 16[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048355}, expr=(extract[8] 0[32] 8[32] (add[32] v473[32] 4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048350}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048350}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048350}, expr=-124[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048350}, expr=-80[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834b}, expr=8[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834b}, expr=4[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834b}, expr=-123[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834b}, expr=32[8]}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x0804834a}, expr=(extract[8] 24[32] 32[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x0804834a}, expr=(extract[8] 16[32] 24[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x0804834a}, expr=(extract[8] 8[32] 16[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])} value={defs={0x0804834a}, expr=(extract[8] 0[32] 8[32] v471[32])}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) -4[32])} value={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]))}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048348}, expr=(extract[8] 24[32] 32[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048348}, expr=(extract[8] 16[32] 24[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048348}, expr=(extract[8] 8[32] 16[32] v469[32])}
    addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] v473[32] 4[32]) -16[32]) -4[32])} value={defs={0x08048348}, expr=(extract[8] 0[32] 8[32] v469[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 3[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 2[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] v516[32])}
    addr={defs={0x08048342}, expr=(add[32] v473[32] 1[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] v516[32])}
    addr={defs={}, expr=v473[32]} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] v516[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
registers:
    ax      = { {defs={}, expr=v524[32]} }
    cx      = { {defs={}, expr=v525[32]} }
    dx      = { {defs={}, expr=v526[32]} }
    bx      = { {defs={}, expr=v527[32]} }
    sp      = { {defs={}, expr=v528[32]} }
    bp      = { {defs={}, expr=v529[32]} }
    si      = { {defs={}, expr=v530[32]} }
    di      = { {defs={}, expr=v531[32]} }
    es      = { {defs={}, expr=v532[16]} }
    cs      = { {defs={}, expr=v533[16]} }
    ss      = { {defs={}, expr=v534[16]} }
    ds      = { {defs={}, expr=v535[16]} }
    fs      = { {defs={}, expr=v536[16]} }
    gs      = { {defs={}, expr=v537[16]} }
    cf      = { {defs={}, expr=v538[1]} }
    ?1      = { {defs={}, expr=v539[1]} }
    pf      = { {defs={}, expr=v540[1]} }
    ?3      = { {defs={}, expr=v541[1]} }
    af      = { {defs={}, expr=v542[1]} }
    ?5      = { {defs={}, expr=v543[1]} }
    zf      = { {defs={}, expr=v544[1]} }
    sf      = { {defs={}, expr=v545[1]} }
    tf      = { {defs={}, expr=v546[1]} }
    if      = { {defs={}, expr=v547[1]} }
    df      = { {defs={}, expr=v548[1]} }
    of      = { {defs={}, expr=v549[1]} }
    iopl0   = { {defs={}, expr=v550[1]} }
    iopl1   = { {defs={}, expr=v551[1]} }
    nt      = { {defs={}, expr=v552[1]} }
    ?15     = { {defs={}, expr=v553[1]} }
    rf      = { {defs={}, expr=v554[1]} }
    vm      = { {defs={}, expr=v555[1]} }
    ac      = { {defs={}, expr=v556[1]} }
    vif     = { {defs={}, expr=v557[1]} }
    vip     = { {defs={}, expr=v558[1]} }
    id      = { {defs={}, expr=v559[1]} }
    ?22     = { {defs={}, expr=v560[1]} }
    ?23     = { {defs={}, expr=v561[1]} }
    ?24     = { {defs={}, expr=v562[1]} }
    ?25     = { {defs={}, expr=v563[1]} }
    ?26     = { {defs={}, expr=v564[1]} }
    ?27     = { {defs={}, expr=v565[1]} }
    ?28     = { {defs={}, expr=v566[1]} }
    ?29     = { {defs={}, expr=v567[1]} }
    ?30     = { {defs={}, expr=v568[1]} }
    ?31     = { {defs={}, expr=v569[1]} }
    ip      = { {defs={0x08048361}, expr=0x08048361[32]} }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    bp      = { {defs={}, expr=v577[32]} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048364}, expr=0x08048365[32]} }
memory:
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
0x8048365:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    bp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048365}, expr=0x08048367[32]} }
memory:
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
0x8048367:push   ebx
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364,0x08048367}, expr=(add[32] (add[32] v576[32] -4[32]) -4[32])} }
    bp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048367}, expr=0x08048368[32]} }
memory:
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048367}, expr=(extract[8] 24[32] 32[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048367}, expr=(extract[8] 16[32] 24[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048367}, expr=(extract[8] 8[32] 16[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] v576[32] -4[32]) -4[32])} value={defs={0x08048367}, expr=(extract[8] 0[32] 8[32] v575[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
0x8048368:push   ecx
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048368}, expr=0x08048369[32]} }
memory:
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048368}, expr=(extract[8] 24[32] 32[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048368}, expr=(extract[8] 16[32] 24[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048368}, expr=(extract[8] 8[32] 16[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048368}, expr=(extract[8] 0[32] 8[32] v573[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048367}, expr=(extract[8] 24[32] 32[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048367}, expr=(extract[8] 16[32] 24[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048367}, expr=(extract[8] 8[32] 16[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] v576[32] -4[32]) -4[32])} value={defs={0x08048367}, expr=(extract[8] 0[32] 8[32] v575[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
0x8048369:call   0x0804836e<<Insn>>
registers:
    ax      = { {defs={}, expr=v572[32]} }
    cx      = { {defs={}, expr=v573[32]} }
    dx      = { {defs={}, expr=v574[32]} }
    bx      = { {defs={}, expr=v575[32]} }
    sp      = { {defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048364}, expr=(add[32] v576[32] -4[32])} }
    si      = { {defs={}, expr=v578[32]} }
    di      = { {defs={}, expr=v579[32]} }
    es      = { {defs={}, expr=v580[16]} }
    cs      = { {defs={}, expr=v581[16]} }
    ss      = { {defs={}, expr=v582[16]} }
    ds      = { {defs={}, expr=v583[16]} }
    fs      = { {defs={}, expr=v584[16]} }
    gs      = { {defs={}, expr=v585[16]} }
    cf      = { {defs={}, expr=v586[1]} }
    ?1      = { {defs={}, expr=v587[1]} }
    pf      = { {defs={}, expr=v588[1]} }
    ?3      = { {defs={}, expr=v589[1]} }
    af      = { {defs={}, expr=v590[1]} }
    ?5      = { {defs={}, expr=v591[1]} }
    zf      = { {defs={}, expr=v592[1]} }
    sf      = { {defs={}, expr=v593[1]} }
    tf      = { {defs={}, expr=v594[1]} }
    if      = { {defs={}, expr=v595[1]} }
    df      = { {defs={}, expr=v596[1]} }
    of      = { {defs={}, expr=v597[1]} }
    iopl0   = { {defs={}, expr=v598[1]} }
    iopl1   = { {defs={}, expr=v599[1]} }
    nt      = { {defs={}, expr=v600[1]} }
    ?15     = { {defs={}, expr=v601[1]} }
    rf      = { {defs={}, expr=v602[1]} }
    vm      = { {defs={}, expr=v603[1]} }
    ac      = { {defs={}, expr=v604[1]} }
    vif     = { {defs={}, expr=v605[1]} }
    vip     = { {defs={}, expr=v606[1]} }
    id      = { {defs={}, expr=v607[1]} }
    ?22     = { {defs={}, expr=v608[1]} }
    ?23     = { {defs={}, expr=v609[1]} }
    ?24     = { {defs={}, expr=v610[1]} }
    ?25     = { {defs={}, expr=v611[1]} }
    ?26     = { {defs={}, expr=v612[1]} }
    ?27     = { {defs={}, expr=v613[1]} }
    ?28     = { {defs={}, expr=v614[1]} }
    ?29     = { {defs={}, expr=v615[1]} }
    ?30     = { {defs={}, expr=v616[1]} }
    ?31     = { {defs={}, expr=v617[1]} }
    ip      = { {defs={0x08048369}, expr=0x0804836e[32]} }
memory:
    addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048369}, expr=8[8]}
    addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048369}, expr=4[8]}
    addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048369}, expr=-125[8]}
    addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048369}, expr=110[8]}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048368}, expr=(extract[8] 24[32] 32[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048368}, expr=(extract[8] 16[32] 24[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048368}, expr=(extract[8] 8[32] 16[32] v573[32])}
    addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048368}, expr=(extract[8] 0[32] 8[32] v573[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048367}, expr=(extract[8] 24[32] 32[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048367}, expr=(extract[8] 16[32] 24[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] (add[32] v576[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048367}, expr=(extract[8] 8[32] 16[32] v575[32])}
    addr={defs={0x08048364,0x08048367}, expr=(add[32] (add[32] v576[32] -4[32]) -4[32])} value={defs={0x08048367}, expr=(extract[8] 0[32] 8[32] v575[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 3[32])} value={defs={0x08048364}, expr=(extract[8] 24[32] 32[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 2[32])} value={defs={0x08048364}, expr=(extract[8] 16[32] 24[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] (add[32] v576[32] -4[32]) 1[32])} value={defs={0x08048364}, expr=(extract[8] 8[32] 16[32] v577[32])}
    addr={defs={0x08048364}, expr=(add[32] v576[32] -4[32])} value={defs={0x08048364}, expr=(extract[8] 0[32] 8[32] v577[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={}, expr=v622[32]} }
    bx      = { {defs={0x0804836e}, expr=v666[32]} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={}, expr=v634[1]} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={}, expr=v636[1]} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={}, expr=v638[1]} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={}, expr=v640[1]} }
    sf      = { {defs={}, expr=v641[1]} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={}, expr=v645[1]} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x0804836e}, expr=0x0804836f[32]} }
memory:
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
0x804836f:add    ebx, 0x0000135a
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={}, expr=v622[32]} }
    bx      = { {defs={0x0804836e,0x0804836f}, expr=(add[32] v666[32] 4954[32])} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33])))))} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={0x0804836e,0x0804836f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))))))} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33])))))} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={0x0804836e,0x0804836f}, expr=(zerop[1] (add[32] v666[32] 4954[32]))} }
    sf      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 31[32] 32[32] (add[32] v666[32] 4954[32]))} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={0x0804836e,0x0804836f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33]))))))} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x0804836f}, expr=0x08048375[32]} }
memory:
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={0x08048375}, expr=v671[32]} }
    bx      = { {defs={0x0804836e,0x0804836f}, expr=(add[32] v666[32] 4954[32])} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33])))))} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={0x0804836e,0x0804836f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v666[32] 4954[32])))))))} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33])))))} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={0x0804836e,0x0804836f}, expr=(zerop[1] (add[32] v666[32] 4954[32]))} }
    sf      = { {defs={0x0804836e,0x0804836f}, expr=(extract[1] 31[32] 32[32] (add[32] v666[32] 4954[32]))} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={0x0804836e,0x0804836f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v666[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v666[32]) 4954[33]))))))} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x08048375}, expr=0x0804837b[32]} }
memory:
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 3[32])} value={defs={0x08048375}, expr=(extract[8] 24[32] 32[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 2[32])} value={defs={0x08048375}, expr=(extract[8] 16[32] 24[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 1[32])} value={defs={0x08048375}, expr=(extract[8] 8[32] 16[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] v666[32] 4954[32]) -4[32])} value={defs={0x08048375}, expr=(extract[8] 0[32] 8[32] v671[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
0x804837b:test   edx, edx
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={0x08048375}, expr=v671[32]} }
    bx      = { {defs={0x0804836e,0x0804836f}, expr=(add[32] v666[32] 4954[32])} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={0x0804837b}, expr=0[1]} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={0x08048375,0x0804837b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))))))} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={}, expr=v676[1]} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={0x08048375,0x0804837b}, expr=(zerop[1] (bv-and[32] v671[32] v671[32]))} }
    sf      = { {defs={0x08048375,0x0804837b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v671[32] v671[32]))} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={0x0804837b}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x0804837b}, expr=0x0804837d[32]} }
memory:
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 3[32])} value={defs={0x08048375}, expr=(extract[8] 24[32] 32[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 2[32])} value={defs={0x08048375}, expr=(extract[8] 16[32] 24[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 1[32])} value={defs={0x08048375}, expr=(extract[8] 8[32] 16[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] v666[32] 4954[32]) -4[32])} value={defs={0x08048375}, expr=(extract[8] 0[32] 8[32] v671[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
0x804837d:je     0x08048384<<Insn>>
registers:
    ax      = { {defs={}, expr=v620[32]} }
    cx      = { {defs={}, expr=v621[32]} }
    dx      = { {defs={0x08048375}, expr=v671[32]} }
    bx      = { {defs={0x0804836e,0x0804836f}, expr=(add[32] v666[32] 4954[32])} }
    sp      = { {defs={0x0804836e}, expr=(add[32] v624[32] 4[32])} }
    bp      = { {defs={}, expr=v625[32]} }
    si      = { {defs={}, expr=v626[32]} }
    di      = { {defs={}, expr=v627[32]} }
    es      = { {defs={}, expr=v628[16]} }
    cs      = { {defs={}, expr=v629[16]} }
    ss      = { {defs={}, expr=v630[16]} }
    ds      = { {defs={}, expr=v631[16]} }
    fs      = { {defs={}, expr=v632[16]} }
    gs      = { {defs={}, expr=v633[16]} }
    cf      = { {defs={0x0804837b}, expr=0[1]} }
    ?1      = { {defs={}, expr=v635[1]} }
    pf      = { {defs={0x08048375,0x0804837b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v671[32] v671[32])))))))} }
    ?3      = { {defs={}, expr=v637[1]} }
    af      = { {defs={}, expr=v676[1]} }
    ?5      = { {defs={}, expr=v639[1]} }
    zf      = { {defs={0x08048375,0x0804837b}, expr=(zerop[1] (bv-and[32] v671[32] v671[32]))} }
    sf      = { {defs={0x08048375,0x0804837b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v671[32] v671[32]))} }
    tf      = { {defs={}, expr=v642[1]} }
    if      = { {defs={}, expr=v643[1]} }
    df      = { {defs={}, expr=v644[1]} }
    of      = { {defs={0x0804837b}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v646[1]} }
    iopl1   = { {defs={}, expr=v647[1]} }
    nt      = { {defs={}, expr=v648[1]} }
    ?15     = { {defs={}, expr=v649[1]} }
    rf      = { {defs={}, expr=v650[1]} }
    vm      = { {defs={}, expr=v651[1]} }
    ac      = { {defs={}, expr=v652[1]} }
    vif     = { {defs={}, expr=v653[1]} }
    vip     = { {defs={}, expr=v654[1]} }
    id      = { {defs={}, expr=v655[1]} }
    ?22     = { {defs={}, expr=v656[1]} }
    ?23     = { {defs={}, expr=v657[1]} }
    ?24     = { {defs={}, expr=v658[1]} }
    ?25     = { {defs={}, expr=v659[1]} }
    ?26     = { {defs={}, expr=v660[1]} }
    ?27     = { {defs={}, expr=v661[1]} }
    ?28     = { {defs={}, expr=v662[1]} }
    ?29     = { {defs={}, expr=v663[1]} }
    ?30     = { {defs={}, expr=v664[1]} }
    ?31     = { {defs={}, expr=v665[1]} }
    ip      = { {defs={0x08048375,0x0804837b,0x0804837d}, expr=(ite[32] (zerop[1] (bv-and[32] v671[32] v671[32])) 0x08048384[32] 0x0804837f[32])} }
memory:
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 3[32])} value={defs={0x08048375}, expr=(extract[8] 24[32] 32[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 2[32])} value={defs={0x08048375}, expr=(extract[8] 16[32] 24[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] (add[32] v666[32] 4954[32]) -4[32]) 1[32])} value={defs={0x08048375}, expr=(extract[8] 8[32] 16[32] v671[32])}
    addr={defs={0x0804836e,0x0804836f,0x08048375}, expr=(add[32] (add[32] v666[32] 4954[32]) -4[32])} value={defs={0x08048375}, expr=(extract[8] 0[32] 8[32] v671[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 3[32])} value={defs={0x0804836e}, expr=(extract[8] 24[32] 32[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 2[32])} value={defs={0x0804836e}, expr=(extract[8] 16[32] 24[32] v666[32])}
    addr={defs={0x0804836e}, expr=(add[32] v624[32] 1[32])} value={defs={0x0804836e}, expr=(extract[8] 8[32] 16[32] v666[32])}
    addr={defs={}, expr=v624[32]} value={defs={0x0804836e}, expr=(extract[8] 0[32] 8[32] v666[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330<__gmon_start__@plt>
registers:
    ax      = { {defs={}, expr=v679[32]} }
    cx      = { {defs={}, expr=v680[32]} }
    dx      = { {defs={}, expr=v681[32]} }
    bx      = { {defs={}, expr=v682[32]} }
    sp      = { {defs={0x0804837f}, expr=(add[32] v683[32] -4[32])} }
    bp      = { {defs={}, expr=v684[32]} }
    si      = { {defs={}, expr=v685[32]} }
    di      = { {defs={}, expr=v686[32]} }
    es      = { {defs={}, expr=v687[16]} }
    cs      = { {defs={}, expr=v688[16]} }
    ss      = { {defs={}, expr=v689[16]} }
    ds      = { {defs={}, expr=v690[16]} }
    fs      = { {defs={}, expr=v691[16]} }
    gs      = { {defs={}, expr=v692[16]} }
    cf      = { {defs={}, expr=v693[1]} }
    ?1      = { {defs={}, expr=v694[1]} }
    pf      = { {defs={}, expr=v695[1]} }
    ?3      = { {defs={}, expr=v696[1]} }
    af      = { {defs={}, expr=v697[1]} }
    ?5      = { {defs={}, expr=v698[1]} }
    zf      = { {defs={}, expr=v699[1]} }
    sf      = { {defs={}, expr=v700[1]} }
    tf      = { {defs={}, expr=v701[1]} }
    if      = { {defs={}, expr=v702[1]} }
    df      = { {defs={}, expr=v703[1]} }
    of      = { {defs={}, expr=v704[1]} }
    iopl0   = { {defs={}, expr=v705[1]} }
    iopl1   = { {defs={}, expr=v706[1]} }
    nt      = { {defs={}, expr=v707[1]} }
    ?15     = { {defs={}, expr=v708[1]} }
    rf      = { {defs={}, expr=v709[1]} }
    vm      = { {defs={}, expr=v710[1]} }
    ac      = { {defs={}, expr=v711[1]} }
    vif     = { {defs={}, expr=v712[1]} }
    vip     = { {defs={}, expr=v713[1]} }
    id      = { {defs={}, expr=v714[1]} }
    ?22     = { {defs={}, expr=v715[1]} }
    ?23     = { {defs={}, expr=v716[1]} }
    ?24     = { {defs={}, expr=v717[1]} }
    ?25     = { {defs={}, expr=v718[1]} }
    ?26     = { {defs={}, expr=v719[1]} }
    ?27     = { {defs={}, expr=v720[1]} }
    ?28     = { {defs={}, expr=v721[1]} }
    ?29     = { {defs={}, expr=v722[1]} }
    ?30     = { {defs={}, expr=v723[1]} }
    ?31     = { {defs={}, expr=v724[1]} }
    ip      = { {defs={0x0804837f}, expr=0x08048330[32]} }
memory:
    addr={defs={0x0804837f}, expr=(add[32] (add[32] v683[32] -4[32]) 3[32])} value={defs={0x0804837f}, expr=8[8]}
    addr={defs={0x0804837f}, expr=(add[32] (add[32] v683[32] -4[32]) 2[32])} value={defs={0x0804837f}, expr=4[8]}
    addr={defs={0x0804837f}, expr=(add[32] (add[32] v683[32] -4[32]) 1[32])} value={defs={0x0804837f}, expr=-125[8]}
    addr={defs={0x0804837f}, expr=(add[32] v683[32] -4[32])} value={defs={0x0804837f}, expr=-124[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
registers:
    ax      = { {defs={0x08048384}, expr=v773[32]} }
    cx      = { {defs={}, expr=v728[32]} }
    dx      = { {defs={}, expr=v729[32]} }
    bx      = { {defs={}, expr=v730[32]} }
    sp      = { {defs={0x08048384}, expr=(add[32] v731[32] 4[32])} }
    bp      = { {defs={}, expr=v732[32]} }
    si      = { {defs={}, expr=v733[32]} }
    di      = { {defs={}, expr=v734[32]} }
    es      = { {defs={}, expr=v735[16]} }
    cs      = { {defs={}, expr=v736[16]} }
    ss      = { {defs={}, expr=v737[16]} }
    ds      = { {defs={}, expr=v738[16]} }
    fs      = { {defs={}, expr=v739[16]} }
    gs      = { {defs={}, expr=v740[16]} }
    cf      = { {defs={}, expr=v741[1]} }
    ?1      = { {defs={}, expr=v742[1]} }
    pf      = { {defs={}, expr=v743[1]} }
    ?3      = { {defs={}, expr=v744[1]} }
    af      = { {defs={}, expr=v745[1]} }
    ?5      = { {defs={}, expr=v746[1]} }
    zf      = { {defs={}, expr=v747[1]} }
    sf      = { {defs={}, expr=v748[1]} }
    tf      = { {defs={}, expr=v749[1]} }
    if      = { {defs={}, expr=v750[1]} }
    df      = { {defs={}, expr=v751[1]} }
    of      = { {defs={}, expr=v752[1]} }
    iopl0   = { {defs={}, expr=v753[1]} }
    iopl1   = { {defs={}, expr=v754[1]} }
    nt      = { {defs={}, expr=v755[1]} }
    ?15     = { {defs={}, expr=v756[1]} }
    rf      = { {defs={}, expr=v757[1]} }
    vm      = { {defs={}, expr=v758[1]} }
    ac      = { {defs={}, expr=v759[1]} }
    vif     = { {defs={}, expr=v760[1]} }
    vip     = { {defs={}, expr=v761[1]} }
    id      = { {defs={}, expr=v762[1]} }
    ?22     = { {defs={}, expr=v763[1]} }
    ?23     = { {defs={}, expr=v764[1]} }
    ?24     = { {defs={}, expr=v765[1]} }
    ?25     = { {defs={}, expr=v766[1]} }
    ?26     = { {defs={}, expr=v767[1]} }
    ?27     = { {defs={}, expr=v768[1]} }
    ?28     = { {defs={}, expr=v769[1]} }
    ?29     = { {defs={}, expr=v770[1]} }
    ?30     = { {defs={}, expr=v771[1]} }
    ?31     = { {defs={}, expr=v772[1]} }
    ip      = { {defs={0x08048384}, expr=0x08048385[32]} }
memory:
    addr={defs={0x08048384}, expr=(add[32] v731[32] 3[32])} value={defs={0x08048384}, expr=(extract[8] 24[32] 32[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 2[32])} value={defs={0x08048384}, expr=(extract[8] 16[32] 24[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 1[32])} value={defs={0x08048384}, expr=(extract[8] 8[32] 16[32] v773[32])}
    addr={defs={}, expr=v731[32]} value={defs={0x08048384}, expr=(extract[8] 0[32] 8[32] v773[32])}
0x8048385:pop    ebx
registers:
    ax      = { {defs={0x08048384}, expr=v773[32]} }
    cx      = { {defs={}, expr=v728[32]} }
    dx      = { {defs={}, expr=v729[32]} }
    bx      = { {defs={0x08048385}, expr=v778[32]} }
    sp      = { {defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v732[32]} }
    si      = { {defs={}, expr=v733[32]} }
    di      = { {defs={}, expr=v734[32]} }
    es      = { {defs={}, expr=v735[16]} }
    cs      = { {defs={}, expr=v736[16]} }
    ss      = { {defs={}, expr=v737[16]} }
    ds      = { {defs={}, expr=v738[16]} }
    fs      = { {defs={}, expr=v739[16]} }
    gs      = { {defs={}, expr=v740[16]} }
    cf      = { {defs={}, expr=v741[1]} }
    ?1      = { {defs={}, expr=v742[1]} }
    pf      = { {defs={}, expr=v743[1]} }
    ?3      = { {defs={}, expr=v744[1]} }
    af      = { {defs={}, expr=v745[1]} }
    ?5      = { {defs={}, expr=v746[1]} }
    zf      = { {defs={}, expr=v747[1]} }
    sf      = { {defs={}, expr=v748[1]} }
    tf      = { {defs={}, expr=v749[1]} }
    if      = { {defs={}, expr=v750[1]} }
    df      = { {defs={}, expr=v751[1]} }
    of      = { {defs={}, expr=v752[1]} }
    iopl0   = { {defs={}, expr=v753[1]} }
    iopl1   = { {defs={}, expr=v754[1]} }
    nt      = { {defs={}, expr=v755[1]} }
    ?15     = { {defs={}, expr=v756[1]} }
    rf      = { {defs={}, expr=v757[1]} }
    vm      = { {defs={}, expr=v758[1]} }
    ac      = { {defs={}, expr=v759[1]} }
    vif     = { {defs={}, expr=v760[1]} }
    vip     = { {defs={}, expr=v761[1]} }
    id      = { {defs={}, expr=v762[1]} }
    ?22     = { {defs={}, expr=v763[1]} }
    ?23     = { {defs={}, expr=v764[1]} }
    ?24     = { {defs={}, expr=v765[1]} }
    ?25     = { {defs={}, expr=v766[1]} }
    ?26     = { {defs={}, expr=v767[1]} }
    ?27     = { {defs={}, expr=v768[1]} }
    ?28     = { {defs={}, expr=v769[1]} }
    ?29     = { {defs={}, expr=v770[1]} }
    ?30     = { {defs={}, expr=v771[1]} }
    ?31     = { {defs={}, expr=v772[1]} }
    ip      = { {defs={0x08048385}, expr=0x08048386[32]} }
memory:
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 3[32])} value={defs={0x08048385}, expr=(extract[8] 24[32] 32[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 2[32])} value={defs={0x08048385}, expr=(extract[8] 16[32] 24[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 1[32])} value={defs={0x08048385}, expr=(extract[8] 8[32] 16[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 4[32])} value={defs={0x08048385}, expr=(extract[8] 0[32] 8[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 3[32])} value={defs={0x08048384}, expr=(extract[8] 24[32] 32[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 2[32])} value={defs={0x08048384}, expr=(extract[8] 16[32] 24[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 1[32])} value={defs={0x08048384}, expr=(extract[8] 8[32] 16[32] v773[32])}
    addr={defs={}, expr=v731[32]} value={defs={0x08048384}, expr=(extract[8] 0[32] 8[32] v773[32])}
0x8048386:leave  
registers:
    ax      = { {defs={0x08048384}, expr=v773[32]} }
    cx      = { {defs={}, expr=v728[32]} }
    dx      = { {defs={}, expr=v729[32]} }
    bx      = { {defs={0x08048385}, expr=v778[32]} }
    sp      = { {defs={0x08048386}, expr=(add[32] v732[32] 4[32])} }
    bp      = { {defs={0x08048386}, expr=v783[32]} }
    si      = { {defs={}, expr=v733[32]} }
    di      = { {defs={}, expr=v734[32]} }
    es      = { {defs={}, expr=v735[16]} }
    cs      = { {defs={}, expr=v736[16]} }
    ss      = { {defs={}, expr=v737[16]} }
    ds      = { {defs={}, expr=v738[16]} }
    fs      = { {defs={}, expr=v739[16]} }
    gs      = { {defs={}, expr=v740[16]} }
    cf      = { {defs={}, expr=v741[1]} }
    ?1      = { {defs={}, expr=v742[1]} }
    pf      = { {defs={}, expr=v743[1]} }
    ?3      = { {defs={}, expr=v744[1]} }
    af      = { {defs={}, expr=v745[1]} }
    ?5      = { {defs={}, expr=v746[1]} }
    zf      = { {defs={}, expr=v747[1]} }
    sf      = { {defs={}, expr=v748[1]} }
    tf      = { {defs={}, expr=v749[1]} }
    if      = { {defs={}, expr=v750[1]} }
    df      = { {defs={}, expr=v751[1]} }
    of      = { {defs={}, expr=v752[1]} }
    iopl0   = { {defs={}, expr=v753[1]} }
    iopl1   = { {defs={}, expr=v754[1]} }
    nt      = { {defs={}, expr=v755[1]} }
    ?15     = { {defs={}, expr=v756[1]} }
    rf      = { {defs={}, expr=v757[1]} }
    vm      = { {defs={}, expr=v758[1]} }
    ac      = { {defs={}, expr=v759[1]} }
    vif     = { {defs={}, expr=v760[1]} }
    vip     = { {defs={}, expr=v761[1]} }
    id      = { {defs={}, expr=v762[1]} }
    ?22     = { {defs={}, expr=v763[1]} }
    ?23     = { {defs={}, expr=v764[1]} }
    ?24     = { {defs={}, expr=v765[1]} }
    ?25     = { {defs={}, expr=v766[1]} }
    ?26     = { {defs={}, expr=v767[1]} }
    ?27     = { {defs={}, expr=v768[1]} }
    ?28     = { {defs={}, expr=v769[1]} }
    ?29     = { {defs={}, expr=v770[1]} }
    ?30     = { {defs={}, expr=v771[1]} }
    ?31     = { {defs={}, expr=v772[1]} }
    ip      = { {defs={0x08048386}, expr=0x08048387[32]} }
memory:
    addr={defs={0x08048386}, expr=(add[32] v732[32] 3[32])} value={defs={0x08048386}, expr=(extract[8] 24[32] 32[32] v783[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 2[32])} value={defs={0x08048386}, expr=(extract[8] 16[32] 24[32] v783[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 1[32])} value={defs={0x08048386}, expr=(extract[8] 8[32] 16[32] v783[32])}
    addr={defs={}, expr=v732[32]} value={defs={0x08048386}, expr=(extract[8] 0[32] 8[32] v783[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 3[32])} value={defs={0x08048385}, expr=(extract[8] 24[32] 32[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 2[32])} value={defs={0x08048385}, expr=(extract[8] 16[32] 24[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 1[32])} value={defs={0x08048385}, expr=(extract[8] 8[32] 16[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 4[32])} value={defs={0x08048385}, expr=(extract[8] 0[32] 8[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 3[32])} value={defs={0x08048384}, expr=(extract[8] 24[32] 32[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 2[32])} value={defs={0x08048384}, expr=(extract[8] 16[32] 24[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 1[32])} value={defs={0x08048384}, expr=(extract[8] 8[32] 16[32] v773[32])}
    addr={defs={}, expr=v731[32]} value={defs={0x08048384}, expr=(extract[8] 0[32] 8[32] v773[32])}
0x8048387:ret    
registers:
    ax      = { {defs={0x08048384}, expr=v773[32]} }
    cx      = { {defs={}, expr=v728[32]} }
    dx      = { {defs={}, expr=v729[32]} }
    bx      = { {defs={0x08048385}, expr=v778[32]} }
    sp      = { {defs={0x08048386,0x08048387}, expr=(add[32] (add[32] v732[32] 4[32]) 4[32])} }
    bp      = { {defs={0x08048386}, expr=v783[32]} }
    si      = { {defs={}, expr=v733[32]} }
    di      = { {defs={}, expr=v734[32]} }
    es      = { {defs={}, expr=v735[16]} }
    cs      = { {defs={}, expr=v736[16]} }
    ss      = { {defs={}, expr=v737[16]} }
    ds      = { {defs={}, expr=v738[16]} }
    fs      = { {defs={}, expr=v739[16]} }
    gs      = { {defs={}, expr=v740[16]} }
    cf      = { {defs={}, expr=v741[1]} }
    ?1      = { {defs={}, expr=v742[1]} }
    pf      = { {defs={}, expr=v743[1]} }
    ?3      = { {defs={}, expr=v744[1]} }
    af      = { {defs={}, expr=v745[1]} }
    ?5      = { {defs={}, expr=v746[1]} }
    zf      = { {defs={}, expr=v747[1]} }
    sf      = { {defs={}, expr=v748[1]} }
    tf      = { {defs={}, expr=v749[1]} }
    if      = { {defs={}, expr=v750[1]} }
    df      = { {defs={}, expr=v751[1]} }
    of      = { {defs={}, expr=v752[1]} }
    iopl0   = { {defs={}, expr=v753[1]} }
    iopl1   = { {defs={}, expr=v754[1]} }
    nt      = { {defs={}, expr=v755[1]} }
    ?15     = { {defs={}, expr=v756[1]} }
    rf      = { {defs={}, expr=v757[1]} }
    vm      = { {defs={}, expr=v758[1]} }
    ac      = { {defs={}, expr=v759[1]} }
    vif     = { {defs={}, expr=v760[1]} }
    vip     = { {defs={}, expr=v761[1]} }
    id      = { {defs={}, expr=v762[1]} }
    ?22     = { {defs={}, expr=v763[1]} }
    ?23     = { {defs={}, expr=v764[1]} }
    ?24     = { {defs={}, expr=v765[1]} }
    ?25     = { {defs={}, expr=v766[1]} }
    ?26     = { {defs={}, expr=v767[1]} }
    ?27     = { {defs={}, expr=v768[1]} }
    ?28     = { {defs={}, expr=v769[1]} }
    ?29     = { {defs={}, expr=v770[1]} }
    ?30     = { {defs={}, expr=v771[1]} }
    ?31     = { {defs={}, expr=v772[1]} }
    ip      = { {defs={0x08048387}, expr=v788[32]} }
memory:
    addr={defs={0x08048386,0x08048387}, expr=(add[32] (add[32] v732[32] 4[32]) 3[32])} value={defs={0x08048387}, expr=(extract[8] 24[32] 32[32] v788[32])}
    addr={defs={0x08048386,0x08048387}, expr=(add[32] (add[32] v732[32] 4[32]) 2[32])} value={defs={0x08048387}, expr=(extract[8] 16[32] 24[32] v788[32])}
    addr={defs={0x08048386,0x08048387}, expr=(add[32] (add[32] v732[32] 4[32]) 1[32])} value={defs={0x08048387}, expr=(extract[8] 8[32] 16[32] v788[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 4[32])} value={defs={0x08048387}, expr=(extract[8] 0[32] 8[32] v788[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 3[32])} value={defs={0x08048386}, expr=(extract[8] 24[32] 32[32] v783[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 2[32])} value={defs={0x08048386}, expr=(extract[8] 16[32] 24[32] v783[32])}
    addr={defs={0x08048386}, expr=(add[32] v732[32] 1[32])} value={defs={0x08048386}, expr=(extract[8] 8[32] 16[32] v783[32])}
    addr={defs={}, expr=v732[32]} value={defs={0x08048386}, expr=(extract[8] 0[32] 8[32] v783[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 3[32])} value={defs={0x08048385}, expr=(extract[8] 24[32] 32[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 2[32])} value={defs={0x08048385}, expr=(extract[8] 16[32] 24[32] v778[32])}
    addr={defs={0x08048384,0x08048385}, expr=(add[32] (add[32] v731[32] 4[32]) 1[32])} value={defs={0x08048385}, expr=(extract[8] 8[32] 16[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 4[32])} value={defs={0x08048385}, expr=(extract[8] 0[32] 8[32] v778[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 3[32])} value={defs={0x08048384}, expr=(extract[8] 24[32] 32[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 2[32])} value={defs={0x08048384}, expr=(extract[8] 16[32] 24[32] v773[32])}
    addr={defs={0x08048384}, expr=(add[32] v731[32] 1[32])} value={defs={0x08048384}, expr=(extract[8] 8[32] 16[32] v773[32])}
    addr={defs={}, expr=v731[32]} value={defs={0x08048384}, expr=(extract[8] 0[32] 8[32] v773[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    bp      = { {defs={}, expr=v800[32]} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={}, expr=v809[1]} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={}, expr=v811[1]} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={}, expr=v813[1]} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={}, expr=v815[1]} }
    sf      = { {defs={}, expr=v816[1]} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={}, expr=v820[1]} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048390}, expr=0x08048391[32]} }
memory:
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
0x8048391:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    bp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={}, expr=v809[1]} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={}, expr=v811[1]} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={}, expr=v813[1]} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={}, expr=v815[1]} }
    sf      = { {defs={}, expr=v816[1]} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={}, expr=v820[1]} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048391}, expr=0x08048393[32]} }
memory:
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
0x8048393:sub    esp, 0x08
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390,0x08048393}, expr=(add[32] (add[32] v799[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={0x08048390,0x08048393}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={0x08048390,0x08048393}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v799[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={0x08048390,0x08048393}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={0x08048390,0x08048393}, expr=(zerop[1] (add[32] (add[32] v799[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048390,0x08048393}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v799[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={0x08048390,0x08048393}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v799[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048393}, expr=0x08048396[32]} }
memory:
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390,0x08048393}, expr=(add[32] (add[32] v799[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={0x08048396}, expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={0x08048396}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] v841[8]) (extract[1] 1[32] 2[32] v841[8])) (bv-xor[1] (extract[1] 2[32] 3[32] v841[8]) (extract[1] 3[32] 4[32] v841[8]))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] v841[8]) (extract[1] 5[32] 6[32] v841[8])) (bv-xor[1] (extract[1] 6[32] 7[32] v841[8]) (extract[1] 7[32] 8[32] v841[8])))))} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={0x08048396}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={0x08048396}, expr=(zerop[1] v841[8])} }
    sf      = { {defs={0x08048396}, expr=(extract[1] 7[32] 8[32] v841[8])} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={0x08048396}, expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048396}, expr=0x0804839d[32]} }
memory:
    addr={defs={0x08048396}, expr=0x080496f4[32]} value={defs={}, expr=v841[8]}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
0x804839d:jne    0x080483cc<<Insn>>
registers:
    ax      = { {defs={}, expr=v795[32]} }
    cx      = { {defs={}, expr=v796[32]} }
    dx      = { {defs={}, expr=v797[32]} }
    bx      = { {defs={}, expr=v798[32]} }
    sp      = { {defs={0x08048390,0x08048393}, expr=(add[32] (add[32] v799[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048390}, expr=(add[32] v799[32] -4[32])} }
    si      = { {defs={}, expr=v801[32]} }
    di      = { {defs={}, expr=v802[32]} }
    es      = { {defs={}, expr=v803[16]} }
    cs      = { {defs={}, expr=v804[16]} }
    ss      = { {defs={}, expr=v805[16]} }
    ds      = { {defs={}, expr=v806[16]} }
    fs      = { {defs={}, expr=v807[16]} }
    gs      = { {defs={}, expr=v808[16]} }
    cf      = { {defs={0x08048396}, expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    ?1      = { {defs={}, expr=v810[1]} }
    pf      = { {defs={0x08048396}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] v841[8]) (extract[1] 1[32] 2[32] v841[8])) (bv-xor[1] (extract[1] 2[32] 3[32] v841[8]) (extract[1] 3[32] 4[32] v841[8]))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] v841[8]) (extract[1] 5[32] 6[32] v841[8])) (bv-xor[1] (extract[1] 6[32] 7[32] v841[8]) (extract[1] 7[32] 8[32] v841[8])))))} }
    ?3      = { {defs={}, expr=v812[1]} }
    af      = { {defs={0x08048396}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    ?5      = { {defs={}, expr=v814[1]} }
    zf      = { {defs={0x08048396}, expr=(zerop[1] v841[8])} }
    sf      = { {defs={0x08048396}, expr=(extract[1] 7[32] 8[32] v841[8])} }
    tf      = { {defs={}, expr=v817[1]} }
    if      = { {defs={}, expr=v818[1]} }
    df      = { {defs={}, expr=v819[1]} }
    of      = { {defs={0x08048396}, expr=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v841[8]) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] v841[8]) -256[9]))))))} }
    iopl0   = { {defs={}, expr=v821[1]} }
    iopl1   = { {defs={}, expr=v822[1]} }
    nt      = { {defs={}, expr=v823[1]} }
    ?15     = { {defs={}, expr=v824[1]} }
    rf      = { {defs={}, expr=v825[1]} }
    vm      = { {defs={}, expr=v826[1]} }
    ac      = { {defs={}, expr=v827[1]} }
    vif     = { {defs={}, expr=v828[1]} }
    vip     = { {defs={}, expr=v829[1]} }
    id      = { {defs={}, expr=v830[1]} }
    ?22     = { {defs={}, expr=v831[1]} }
    ?23     = { {defs={}, expr=v832[1]} }
    ?24     = { {defs={}, expr=v833[1]} }
    ?25     = { {defs={}, expr=v834[1]} }
    ?26     = { {defs={}, expr=v835[1]} }
    ?27     = { {defs={}, expr=v836[1]} }
    ?28     = { {defs={}, expr=v837[1]} }
    ?29     = { {defs={}, expr=v838[1]} }
    ?30     = { {defs={}, expr=v839[1]} }
    ?31     = { {defs={}, expr=v840[1]} }
    ip      = { {defs={0x08048396,0x0804839d}, expr=(ite[32] (invert[1] (zerop[1] v841[8])) 0x080483cc[32] 0x0804839f[32])} }
memory:
    addr={defs={0x08048396}, expr=0x080496f4[32]} value={defs={}, expr=v841[8]}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 3[32])} value={defs={0x08048390}, expr=(extract[8] 24[32] 32[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 2[32])} value={defs={0x08048390}, expr=(extract[8] 16[32] 24[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] (add[32] v799[32] -4[32]) 1[32])} value={defs={0x08048390}, expr=(extract[8] 8[32] 16[32] v800[32])}
    addr={defs={0x08048390}, expr=(add[32] v799[32] -4[32])} value={defs={0x08048390}, expr=(extract[8] 0[32] 8[32] v800[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
registers:
    ax      = { {defs={0x0804839f}, expr=v891[32]} }
    cx      = { {defs={}, expr=v846[32]} }
    dx      = { {defs={}, expr=v847[32]} }
    bx      = { {defs={}, expr=v848[32]} }
    sp      = { {defs={}, expr=v849[32]} }
    bp      = { {defs={}, expr=v850[32]} }
    si      = { {defs={}, expr=v851[32]} }
    di      = { {defs={}, expr=v852[32]} }
    es      = { {defs={}, expr=v853[16]} }
    cs      = { {defs={}, expr=v854[16]} }
    ss      = { {defs={}, expr=v855[16]} }
    ds      = { {defs={}, expr=v856[16]} }
    fs      = { {defs={}, expr=v857[16]} }
    gs      = { {defs={}, expr=v858[16]} }
    cf      = { {defs={}, expr=v859[1]} }
    ?1      = { {defs={}, expr=v860[1]} }
    pf      = { {defs={}, expr=v861[1]} }
    ?3      = { {defs={}, expr=v862[1]} }
    af      = { {defs={}, expr=v863[1]} }
    ?5      = { {defs={}, expr=v864[1]} }
    zf      = { {defs={}, expr=v865[1]} }
    sf      = { {defs={}, expr=v866[1]} }
    tf      = { {defs={}, expr=v867[1]} }
    if      = { {defs={}, expr=v868[1]} }
    df      = { {defs={}, expr=v869[1]} }
    of      = { {defs={}, expr=v870[1]} }
    iopl0   = { {defs={}, expr=v871[1]} }
    iopl1   = { {defs={}, expr=v872[1]} }
    nt      = { {defs={}, expr=v873[1]} }
    ?15     = { {defs={}, expr=v874[1]} }
    rf      = { {defs={}, expr=v875[1]} }
    vm      = { {defs={}, expr=v876[1]} }
    ac      = { {defs={}, expr=v877[1]} }
    vif     = { {defs={}, expr=v878[1]} }
    vip     = { {defs={}, expr=v879[1]} }
    id      = { {defs={}, expr=v880[1]} }
    ?22     = { {defs={}, expr=v881[1]} }
    ?23     = { {defs={}, expr=v882[1]} }
    ?24     = { {defs={}, expr=v883[1]} }
    ?25     = { {defs={}, expr=v884[1]} }
    ?26     = { {defs={}, expr=v885[1]} }
    ?27     = { {defs={}, expr=v886[1]} }
    ?28     = { {defs={}, expr=v887[1]} }
    ?29     = { {defs={}, expr=v888[1]} }
    ?30     = { {defs={}, expr=v889[1]} }
    ?31     = { {defs={}, expr=v890[1]} }
    ip      = { {defs={0x0804839f}, expr=0x080483a4[32]} }
memory:
    addr={defs={0x0804839f}, expr=0x080496f3[32]} value={defs={0x0804839f}, expr=(extract[8] 24[32] 32[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f2[32]} value={defs={0x0804839f}, expr=(extract[8] 16[32] 24[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f1[32]} value={defs={0x0804839f}, expr=(extract[8] 8[32] 16[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f0[32]} value={defs={0x0804839f}, expr=(extract[8] 0[32] 8[32] v891[32])}
0x80483a4:mov    edx, DWORD PTR ds:[eax]
registers:
    ax      = { {defs={0x0804839f}, expr=v891[32]} }
    cx      = { {defs={}, expr=v846[32]} }
    dx      = { {defs={0x080483a4}, expr=v896[32]} }
    bx      = { {defs={}, expr=v848[32]} }
    sp      = { {defs={}, expr=v849[32]} }
    bp      = { {defs={}, expr=v850[32]} }
    si      = { {defs={}, expr=v851[32]} }
    di      = { {defs={}, expr=v852[32]} }
    es      = { {defs={}, expr=v853[16]} }
    cs      = { {defs={}, expr=v854[16]} }
    ss      = { {defs={}, expr=v855[16]} }
    ds      = { {defs={}, expr=v856[16]} }
    fs      = { {defs={}, expr=v857[16]} }
    gs      = { {defs={}, expr=v858[16]} }
    cf      = { {defs={}, expr=v859[1]} }
    ?1      = { {defs={}, expr=v860[1]} }
    pf      = { {defs={}, expr=v861[1]} }
    ?3      = { {defs={}, expr=v862[1]} }
    af      = { {defs={}, expr=v863[1]} }
    ?5      = { {defs={}, expr=v864[1]} }
    zf      = { {defs={}, expr=v865[1]} }
    sf      = { {defs={}, expr=v866[1]} }
    tf      = { {defs={}, expr=v867[1]} }
    if      = { {defs={}, expr=v868[1]} }
    df      = { {defs={}, expr=v869[1]} }
    of      = { {defs={}, expr=v870[1]} }
    iopl0   = { {defs={}, expr=v871[1]} }
    iopl1   = { {defs={}, expr=v872[1]} }
    nt      = { {defs={}, expr=v873[1]} }
    ?15     = { {defs={}, expr=v874[1]} }
    rf      = { {defs={}, expr=v875[1]} }
    vm      = { {defs={}, expr=v876[1]} }
    ac      = { {defs={}, expr=v877[1]} }
    vif     = { {defs={}, expr=v878[1]} }
    vip     = { {defs={}, expr=v879[1]} }
    id      = { {defs={}, expr=v880[1]} }
    ?22     = { {defs={}, expr=v881[1]} }
    ?23     = { {defs={}, expr=v882[1]} }
    ?24     = { {defs={}, expr=v883[1]} }
    ?25     = { {defs={}, expr=v884[1]} }
    ?26     = { {defs={}, expr=v885[1]} }
    ?27     = { {defs={}, expr=v886[1]} }
    ?28     = { {defs={}, expr=v887[1]} }
    ?29     = { {defs={}, expr=v888[1]} }
    ?30     = { {defs={}, expr=v889[1]} }
    ?31     = { {defs={}, expr=v890[1]} }
    ip      = { {defs={0x080483a4}, expr=0x080483a6[32]} }
memory:
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 3[32])} value={defs={0x080483a4}, expr=(extract[8] 24[32] 32[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 2[32])} value={defs={0x080483a4}, expr=(extract[8] 16[32] 24[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 1[32])} value={defs={0x080483a4}, expr=(extract[8] 8[32] 16[32] v896[32])}
    addr={defs={0x0804839f}, expr=v891[32]} value={defs={0x080483a4}, expr=(extract[8] 0[32] 8[32] v896[32])}
    addr={defs={0x0804839f}, expr=0x080496f3[32]} value={defs={0x0804839f}, expr=(extract[8] 24[32] 32[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f2[32]} value={defs={0x0804839f}, expr=(extract[8] 16[32] 24[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f1[32]} value={defs={0x0804839f}, expr=(extract[8] 8[32] 16[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f0[32]} value={defs={0x0804839f}, expr=(extract[8] 0[32] 8[32] v891[32])}
0x80483a6:test   edx, edx
registers:
    ax      = { {defs={0x0804839f}, expr=v891[32]} }
    cx      = { {defs={}, expr=v846[32]} }
    dx      = { {defs={0x080483a4}, expr=v896[32]} }
    bx      = { {defs={}, expr=v848[32]} }
    sp      = { {defs={}, expr=v849[32]} }
    bp      = { {defs={}, expr=v850[32]} }
    si      = { {defs={}, expr=v851[32]} }
    di      = { {defs={}, expr=v852[32]} }
    es      = { {defs={}, expr=v853[16]} }
    cs      = { {defs={}, expr=v854[16]} }
    ss      = { {defs={}, expr=v855[16]} }
    ds      = { {defs={}, expr=v856[16]} }
    fs      = { {defs={}, expr=v857[16]} }
    gs      = { {defs={}, expr=v858[16]} }
    cf      = { {defs={0x080483a6}, expr=0[1]} }
    ?1      = { {defs={}, expr=v860[1]} }
    pf      = { {defs={0x080483a4,0x080483a6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))))))} }
    ?3      = { {defs={}, expr=v862[1]} }
    af      = { {defs={}, expr=v901[1]} }
    ?5      = { {defs={}, expr=v864[1]} }
    zf      = { {defs={0x080483a4,0x080483a6}, expr=(zerop[1] (bv-and[32] v896[32] v896[32]))} }
    sf      = { {defs={0x080483a4,0x080483a6}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v896[32] v896[32]))} }
    tf      = { {defs={}, expr=v867[1]} }
    if      = { {defs={}, expr=v868[1]} }
    df      = { {defs={}, expr=v869[1]} }
    of      = { {defs={0x080483a6}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v871[1]} }
    iopl1   = { {defs={}, expr=v872[1]} }
    nt      = { {defs={}, expr=v873[1]} }
    ?15     = { {defs={}, expr=v874[1]} }
    rf      = { {defs={}, expr=v875[1]} }
    vm      = { {defs={}, expr=v876[1]} }
    ac      = { {defs={}, expr=v877[1]} }
    vif     = { {defs={}, expr=v878[1]} }
    vip     = { {defs={}, expr=v879[1]} }
    id      = { {defs={}, expr=v880[1]} }
    ?22     = { {defs={}, expr=v881[1]} }
    ?23     = { {defs={}, expr=v882[1]} }
    ?24     = { {defs={}, expr=v883[1]} }
    ?25     = { {defs={}, expr=v884[1]} }
    ?26     = { {defs={}, expr=v885[1]} }
    ?27     = { {defs={}, expr=v886[1]} }
    ?28     = { {defs={}, expr=v887[1]} }
    ?29     = { {defs={}, expr=v888[1]} }
    ?30     = { {defs={}, expr=v889[1]} }
    ?31     = { {defs={}, expr=v890[1]} }
    ip      = { {defs={0x080483a6}, expr=0x080483a8[32]} }
memory:
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 3[32])} value={defs={0x080483a4}, expr=(extract[8] 24[32] 32[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 2[32])} value={defs={0x080483a4}, expr=(extract[8] 16[32] 24[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 1[32])} value={defs={0x080483a4}, expr=(extract[8] 8[32] 16[32] v896[32])}
    addr={defs={0x0804839f}, expr=v891[32]} value={defs={0x080483a4}, expr=(extract[8] 0[32] 8[32] v896[32])}
    addr={defs={0x0804839f}, expr=0x080496f3[32]} value={defs={0x0804839f}, expr=(extract[8] 24[32] 32[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f2[32]} value={defs={0x0804839f}, expr=(extract[8] 16[32] 24[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f1[32]} value={defs={0x0804839f}, expr=(extract[8] 8[32] 16[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f0[32]} value={defs={0x0804839f}, expr=(extract[8] 0[32] 8[32] v891[32])}
0x80483a8:je     0x080483c5<<Insn>>
registers:
    ax      = { {defs={0x0804839f}, expr=v891[32]} }
    cx      = { {defs={}, expr=v846[32]} }
    dx      = { {defs={0x080483a4}, expr=v896[32]} }
    bx      = { {defs={}, expr=v848[32]} }
    sp      = { {defs={}, expr=v849[32]} }
    bp      = { {defs={}, expr=v850[32]} }
    si      = { {defs={}, expr=v851[32]} }
    di      = { {defs={}, expr=v852[32]} }
    es      = { {defs={}, expr=v853[16]} }
    cs      = { {defs={}, expr=v854[16]} }
    ss      = { {defs={}, expr=v855[16]} }
    ds      = { {defs={}, expr=v856[16]} }
    fs      = { {defs={}, expr=v857[16]} }
    gs      = { {defs={}, expr=v858[16]} }
    cf      = { {defs={0x080483a6}, expr=0[1]} }
    ?1      = { {defs={}, expr=v860[1]} }
    pf      = { {defs={0x080483a4,0x080483a6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v896[32] v896[32])))))))} }
    ?3      = { {defs={}, expr=v862[1]} }
    af      = { {defs={}, expr=v901[1]} }
    ?5      = { {defs={}, expr=v864[1]} }
    zf      = { {defs={0x080483a4,0x080483a6}, expr=(zerop[1] (bv-and[32] v896[32] v896[32]))} }
    sf      = { {defs={0x080483a4,0x080483a6}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v896[32] v896[32]))} }
    tf      = { {defs={}, expr=v867[1]} }
    if      = { {defs={}, expr=v868[1]} }
    df      = { {defs={}, expr=v869[1]} }
    of      = { {defs={0x080483a6}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v871[1]} }
    iopl1   = { {defs={}, expr=v872[1]} }
    nt      = { {defs={}, expr=v873[1]} }
    ?15     = { {defs={}, expr=v874[1]} }
    rf      = { {defs={}, expr=v875[1]} }
    vm      = { {defs={}, expr=v876[1]} }
    ac      = { {defs={}, expr=v877[1]} }
    vif     = { {defs={}, expr=v878[1]} }
    vip     = { {defs={}, expr=v879[1]} }
    id      = { {defs={}, expr=v880[1]} }
    ?22     = { {defs={}, expr=v881[1]} }
    ?23     = { {defs={}, expr=v882[1]} }
    ?24     = { {defs={}, expr=v883[1]} }
    ?25     = { {defs={}, expr=v884[1]} }
    ?26     = { {defs={}, expr=v885[1]} }
    ?27     = { {defs={}, expr=v886[1]} }
    ?28     = { {defs={}, expr=v887[1]} }
    ?29     = { {defs={}, expr=v888[1]} }
    ?30     = { {defs={}, expr=v889[1]} }
    ?31     = { {defs={}, expr=v890[1]} }
    ip      = { {defs={0x080483a4,0x080483a6,0x080483a8}, expr=(ite[32] (zerop[1] (bv-and[32] v896[32] v896[32])) 0x080483c5[32] 0x080483aa[32])} }
memory:
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 3[32])} value={defs={0x080483a4}, expr=(extract[8] 24[32] 32[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 2[32])} value={defs={0x080483a4}, expr=(extract[8] 16[32] 24[32] v896[32])}
    addr={defs={0x0804839f,0x080483a4}, expr=(add[32] v891[32] 1[32])} value={defs={0x080483a4}, expr=(extract[8] 8[32] 16[32] v896[32])}
    addr={defs={0x0804839f}, expr=v891[32]} value={defs={0x080483a4}, expr=(extract[8] 0[32] 8[32] v896[32])}
    addr={defs={0x0804839f}, expr=0x080496f3[32]} value={defs={0x0804839f}, expr=(extract[8] 24[32] 32[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f2[32]} value={defs={0x0804839f}, expr=(extract[8] 16[32] 24[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f1[32]} value={defs={0x0804839f}, expr=(extract[8] 8[32] 16[32] v891[32])}
    addr={defs={0x0804839f}, expr=0x080496f0[32]} value={defs={0x0804839f}, expr=(extract[8] 0[32] 8[32] v891[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
registers:
    ax      = { {defs={}, expr=v904[32]} }
    cx      = { {defs={}, expr=v905[32]} }
    dx      = { {defs={}, expr=v906[32]} }
    bx      = { {defs={}, expr=v907[32]} }
    sp      = { {defs={}, expr=v908[32]} }
    bp      = { {defs={}, expr=v909[32]} }
    si      = { {defs={}, expr=v910[32]} }
    di      = { {defs={}, expr=v911[32]} }
    es      = { {defs={}, expr=v912[16]} }
    cs      = { {defs={}, expr=v913[16]} }
    ss      = { {defs={}, expr=v914[16]} }
    ds      = { {defs={}, expr=v915[16]} }
    fs      = { {defs={}, expr=v916[16]} }
    gs      = { {defs={}, expr=v917[16]} }
    cf      = { {defs={}, expr=v918[1]} }
    ?1      = { {defs={}, expr=v919[1]} }
    pf      = { {defs={}, expr=v920[1]} }
    ?3      = { {defs={}, expr=v921[1]} }
    af      = { {defs={}, expr=v922[1]} }
    ?5      = { {defs={}, expr=v923[1]} }
    zf      = { {defs={}, expr=v924[1]} }
    sf      = { {defs={}, expr=v925[1]} }
    tf      = { {defs={}, expr=v926[1]} }
    if      = { {defs={}, expr=v927[1]} }
    df      = { {defs={}, expr=v928[1]} }
    of      = { {defs={}, expr=v929[1]} }
    iopl0   = { {defs={}, expr=v930[1]} }
    iopl1   = { {defs={}, expr=v931[1]} }
    nt      = { {defs={}, expr=v932[1]} }
    ?15     = { {defs={}, expr=v933[1]} }
    rf      = { {defs={}, expr=v934[1]} }
    vm      = { {defs={}, expr=v935[1]} }
    ac      = { {defs={}, expr=v936[1]} }
    vif     = { {defs={}, expr=v937[1]} }
    vip     = { {defs={}, expr=v938[1]} }
    id      = { {defs={}, expr=v939[1]} }
    ?22     = { {defs={}, expr=v940[1]} }
    ?23     = { {defs={}, expr=v941[1]} }
    ?24     = { {defs={}, expr=v942[1]} }
    ?25     = { {defs={}, expr=v943[1]} }
    ?26     = { {defs={}, expr=v944[1]} }
    ?27     = { {defs={}, expr=v945[1]} }
    ?28     = { {defs={}, expr=v946[1]} }
    ?29     = { {defs={}, expr=v947[1]} }
    ?30     = { {defs={}, expr=v948[1]} }
    ?31     = { {defs={}, expr=v949[1]} }
    ip      = { {defs={0x080483aa}, expr=0x080483b0[32]} }
memory:
0x80483b0:add    eax, 0x04
registers:
    ax      = { {defs={0x080483b0}, expr=(add[32] v904[32] 4[32])} }
    cx      = { {defs={}, expr=v905[32]} }
    dx      = { {defs={}, expr=v906[32]} }
    bx      = { {defs={}, expr=v907[32]} }
    sp      = { {defs={}, expr=v908[32]} }
    bp      = { {defs={}, expr=v909[32]} }
    si      = { {defs={}, expr=v910[32]} }
    di      = { {defs={}, expr=v911[32]} }
    es      = { {defs={}, expr=v912[16]} }
    cs      = { {defs={}, expr=v913[16]} }
    ss      = { {defs={}, expr=v914[16]} }
    ds      = { {defs={}, expr=v915[16]} }
    fs      = { {defs={}, expr=v916[16]} }
    gs      = { {defs={}, expr=v917[16]} }
    cf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?1      = { {defs={}, expr=v919[1]} }
    pf      = { {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))))))} }
    ?3      = { {defs={}, expr=v921[1]} }
    af      = { {defs={0x080483b0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?5      = { {defs={}, expr=v923[1]} }
    zf      = { {defs={0x080483b0}, expr=(zerop[1] (add[32] v904[32] 4[32]))} }
    sf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] v904[32] 4[32]))} }
    tf      = { {defs={}, expr=v926[1]} }
    if      = { {defs={}, expr=v927[1]} }
    df      = { {defs={}, expr=v928[1]} }
    of      = { {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))))} }
    iopl0   = { {defs={}, expr=v930[1]} }
    iopl1   = { {defs={}, expr=v931[1]} }
    nt      = { {defs={}, expr=v932[1]} }
    ?15     = { {defs={}, expr=v933[1]} }
    rf      = { {defs={}, expr=v934[1]} }
    vm      = { {defs={}, expr=v935[1]} }
    ac      = { {defs={}, expr=v936[1]} }
    vif     = { {defs={}, expr=v937[1]} }
    vip     = { {defs={}, expr=v938[1]} }
    id      = { {defs={}, expr=v939[1]} }
    ?22     = { {defs={}, expr=v940[1]} }
    ?23     = { {defs={}, expr=v941[1]} }
    ?24     = { {defs={}, expr=v942[1]} }
    ?25     = { {defs={}, expr=v943[1]} }
    ?26     = { {defs={}, expr=v944[1]} }
    ?27     = { {defs={}, expr=v945[1]} }
    ?28     = { {defs={}, expr=v946[1]} }
    ?29     = { {defs={}, expr=v947[1]} }
    ?30     = { {defs={}, expr=v948[1]} }
    ?31     = { {defs={}, expr=v949[1]} }
    ip      = { {defs={0x080483b0}, expr=0x080483b3[32]} }
memory:
0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax
registers:
    ax      = { {defs={0x080483b0}, expr=(add[32] v904[32] 4[32])} }
    cx      = { {defs={}, expr=v905[32]} }
    dx      = { {defs={}, expr=v906[32]} }
    bx      = { {defs={}, expr=v907[32]} }
    sp      = { {defs={}, expr=v908[32]} }
    bp      = { {defs={}, expr=v909[32]} }
    si      = { {defs={}, expr=v910[32]} }
    di      = { {defs={}, expr=v911[32]} }
    es      = { {defs={}, expr=v912[16]} }
    cs      = { {defs={}, expr=v913[16]} }
    ss      = { {defs={}, expr=v914[16]} }
    ds      = { {defs={}, expr=v915[16]} }
    fs      = { {defs={}, expr=v916[16]} }
    gs      = { {defs={}, expr=v917[16]} }
    cf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?1      = { {defs={}, expr=v919[1]} }
    pf      = { {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))))))} }
    ?3      = { {defs={}, expr=v921[1]} }
    af      = { {defs={0x080483b0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?5      = { {defs={}, expr=v923[1]} }
    zf      = { {defs={0x080483b0}, expr=(zerop[1] (add[32] v904[32] 4[32]))} }
    sf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] v904[32] 4[32]))} }
    tf      = { {defs={}, expr=v926[1]} }
    if      = { {defs={}, expr=v927[1]} }
    df      = { {defs={}, expr=v928[1]} }
    of      = { {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))))} }
    iopl0   = { {defs={}, expr=v930[1]} }
    iopl1   = { {defs={}, expr=v931[1]} }
    nt      = { {defs={}, expr=v932[1]} }
    ?15     = { {defs={}, expr=v933[1]} }
    rf      = { {defs={}, expr=v934[1]} }
    vm      = { {defs={}, expr=v935[1]} }
    ac      = { {defs={}, expr=v936[1]} }
    vif     = { {defs={}, expr=v937[1]} }
    vip     = { {defs={}, expr=v938[1]} }
    id      = { {defs={}, expr=v939[1]} }
    ?22     = { {defs={}, expr=v940[1]} }
    ?23     = { {defs={}, expr=v941[1]} }
    ?24     = { {defs={}, expr=v942[1]} }
    ?25     = { {defs={}, expr=v943[1]} }
    ?26     = { {defs={}, expr=v944[1]} }
    ?27     = { {defs={}, expr=v945[1]} }
    ?28     = { {defs={}, expr=v946[1]} }
    ?29     = { {defs={}, expr=v947[1]} }
    ?30     = { {defs={}, expr=v948[1]} }
    ?31     = { {defs={}, expr=v949[1]} }
    ip      = { {defs={0x080483b3}, expr=0x080483b8[32]} }
memory:
    addr={defs={0x080483b3}, expr=0x080496f3[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 24[32] 32[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f2[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 16[32] 24[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f1[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 8[32] 16[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f0[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))}
0x80483b8:call   edx
registers:
    ax      = { {defs={0x080483b0}, expr=(add[32] v904[32] 4[32])} }
    cx      = { {defs={}, expr=v905[32]} }
    dx      = { {defs={}, expr=v906[32]} }
    bx      = { {defs={}, expr=v907[32]} }
    sp      = { {defs={0x080483b8}, expr=(add[32] v908[32] -4[32])} }
    bp      = { {defs={}, expr=v909[32]} }
    si      = { {defs={}, expr=v910[32]} }
    di      = { {defs={}, expr=v911[32]} }
    es      = { {defs={}, expr=v912[16]} }
    cs      = { {defs={}, expr=v913[16]} }
    ss      = { {defs={}, expr=v914[16]} }
    ds      = { {defs={}, expr=v915[16]} }
    fs      = { {defs={}, expr=v916[16]} }
    gs      = { {defs={}, expr=v917[16]} }
    cf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?1      = { {defs={}, expr=v919[1]} }
    pf      = { {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v904[32] 4[32])))))))} }
    ?3      = { {defs={}, expr=v921[1]} }
    af      = { {defs={0x080483b0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33])))))} }
    ?5      = { {defs={}, expr=v923[1]} }
    zf      = { {defs={0x080483b0}, expr=(zerop[1] (add[32] v904[32] 4[32]))} }
    sf      = { {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] v904[32] 4[32]))} }
    tf      = { {defs={}, expr=v926[1]} }
    if      = { {defs={}, expr=v927[1]} }
    df      = { {defs={}, expr=v928[1]} }
    of      = { {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v904[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v904[32]) 4[33]))))))} }
    iopl0   = { {defs={}, expr=v930[1]} }
    iopl1   = { {defs={}, expr=v931[1]} }
    nt      = { {defs={}, expr=v932[1]} }
    ?15     = { {defs={}, expr=v933[1]} }
    rf      = { {defs={}, expr=v934[1]} }
    vm      = { {defs={}, expr=v935[1]} }
    ac      = { {defs={}, expr=v936[1]} }
    vif     = { {defs={}, expr=v937[1]} }
    vip     = { {defs={}, expr=v938[1]} }
    id      = { {defs={}, expr=v939[1]} }
    ?22     = { {defs={}, expr=v940[1]} }
    ?23     = { {defs={}, expr=v941[1]} }
    ?24     = { {defs={}, expr=v942[1]} }
    ?25     = { {defs={}, expr=v943[1]} }
    ?26     = { {defs={}, expr=v944[1]} }
    ?27     = { {defs={}, expr=v945[1]} }
    ?28     = { {defs={}, expr=v946[1]} }
    ?29     = { {defs={}, expr=v947[1]} }
    ?30     = { {defs={}, expr=v948[1]} }
    ?31     = { {defs={}, expr=v949[1]} }
    ip      = { {defs={}, expr=v906[32]} }
memory:
    addr={defs={0x080483b8}, expr=(add[32] (add[32] v908[32] -4[32]) 3[32])} value={defs={0x080483b8}, expr=8[8]}
    addr={defs={0x080483b8}, expr=(add[32] (add[32] v908[32] -4[32]) 2[32])} value={defs={0x080483b8}, expr=4[8]}
    addr={defs={0x080483b8}, expr=(add[32] (add[32] v908[32] -4[32]) 1[32])} value={defs={0x080483b8}, expr=-125[8]}
    addr={defs={0x080483b8}, expr=(add[32] v908[32] -4[32])} value={defs={0x080483b8}, expr=-70[8]}
    addr={defs={0x080483b3}, expr=0x080496f3[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 24[32] 32[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f2[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 16[32] 24[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f1[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 8[32] 16[32] (add[32] v904[32] 4[32]))}
    addr={defs={0x080483b3}, expr=0x080496f0[32]} value={defs={0x080483b0,0x080483b3}, expr=(extract[8] 0[32] 8[32] (add[32] v904[32] 4[32]))}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
registers:
    ax      = { {defs={0x080483ba}, expr=v998[32]} }
    cx      = { {defs={}, expr=v953[32]} }
    dx      = { {defs={}, expr=v954[32]} }
    bx      = { {defs={}, expr=v955[32]} }
    sp      = { {defs={}, expr=v956[32]} }
    bp      = { {defs={}, expr=v957[32]} }
    si      = { {defs={}, expr=v958[32]} }
    di      = { {defs={}, expr=v959[32]} }
    es      = { {defs={}, expr=v960[16]} }
    cs      = { {defs={}, expr=v961[16]} }
    ss      = { {defs={}, expr=v962[16]} }
    ds      = { {defs={}, expr=v963[16]} }
    fs      = { {defs={}, expr=v964[16]} }
    gs      = { {defs={}, expr=v965[16]} }
    cf      = { {defs={}, expr=v966[1]} }
    ?1      = { {defs={}, expr=v967[1]} }
    pf      = { {defs={}, expr=v968[1]} }
    ?3      = { {defs={}, expr=v969[1]} }
    af      = { {defs={}, expr=v970[1]} }
    ?5      = { {defs={}, expr=v971[1]} }
    zf      = { {defs={}, expr=v972[1]} }
    sf      = { {defs={}, expr=v973[1]} }
    tf      = { {defs={}, expr=v974[1]} }
    if      = { {defs={}, expr=v975[1]} }
    df      = { {defs={}, expr=v976[1]} }
    of      = { {defs={}, expr=v977[1]} }
    iopl0   = { {defs={}, expr=v978[1]} }
    iopl1   = { {defs={}, expr=v979[1]} }
    nt      = { {defs={}, expr=v980[1]} }
    ?15     = { {defs={}, expr=v981[1]} }
    rf      = { {defs={}, expr=v982[1]} }
    vm      = { {defs={}, expr=v983[1]} }
    ac      = { {defs={}, expr=v984[1]} }
    vif     = { {defs={}, expr=v985[1]} }
    vip     = { {defs={}, expr=v986[1]} }
    id      = { {defs={}, expr=v987[1]} }
    ?22     = { {defs={}, expr=v988[1]} }
    ?23     = { {defs={}, expr=v989[1]} }
    ?24     = { {defs={}, expr=v990[1]} }
    ?25     = { {defs={}, expr=v991[1]} }
    ?26     = { {defs={}, expr=v992[1]} }
    ?27     = { {defs={}, expr=v993[1]} }
    ?28     = { {defs={}, expr=v994[1]} }
    ?29     = { {defs={}, expr=v995[1]} }
    ?30     = { {defs={}, expr=v996[1]} }
    ?31     = { {defs={}, expr=v997[1]} }
    ip      = { {defs={0x080483ba}, expr=0x080483bf[32]} }
memory:
    addr={defs={0x080483ba}, expr=0x080496f3[32]} value={defs={0x080483ba}, expr=(extract[8] 24[32] 32[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f2[32]} value={defs={0x080483ba}, expr=(extract[8] 16[32] 24[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f1[32]} value={defs={0x080483ba}, expr=(extract[8] 8[32] 16[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f0[32]} value={defs={0x080483ba}, expr=(extract[8] 0[32] 8[32] v998[32])}
0x80483bf:mov    edx, DWORD PTR ds:[eax]
registers:
    ax      = { {defs={0x080483ba}, expr=v998[32]} }
    cx      = { {defs={}, expr=v953[32]} }
    dx      = { {defs={0x080483bf}, expr=v1003[32]} }
    bx      = { {defs={}, expr=v955[32]} }
    sp      = { {defs={}, expr=v956[32]} }
    bp      = { {defs={}, expr=v957[32]} }
    si      = { {defs={}, expr=v958[32]} }
    di      = { {defs={}, expr=v959[32]} }
    es      = { {defs={}, expr=v960[16]} }
    cs      = { {defs={}, expr=v961[16]} }
    ss      = { {defs={}, expr=v962[16]} }
    ds      = { {defs={}, expr=v963[16]} }
    fs      = { {defs={}, expr=v964[16]} }
    gs      = { {defs={}, expr=v965[16]} }
    cf      = { {defs={}, expr=v966[1]} }
    ?1      = { {defs={}, expr=v967[1]} }
    pf      = { {defs={}, expr=v968[1]} }
    ?3      = { {defs={}, expr=v969[1]} }
    af      = { {defs={}, expr=v970[1]} }
    ?5      = { {defs={}, expr=v971[1]} }
    zf      = { {defs={}, expr=v972[1]} }
    sf      = { {defs={}, expr=v973[1]} }
    tf      = { {defs={}, expr=v974[1]} }
    if      = { {defs={}, expr=v975[1]} }
    df      = { {defs={}, expr=v976[1]} }
    of      = { {defs={}, expr=v977[1]} }
    iopl0   = { {defs={}, expr=v978[1]} }
    iopl1   = { {defs={}, expr=v979[1]} }
    nt      = { {defs={}, expr=v980[1]} }
    ?15     = { {defs={}, expr=v981[1]} }
    rf      = { {defs={}, expr=v982[1]} }
    vm      = { {defs={}, expr=v983[1]} }
    ac      = { {defs={}, expr=v984[1]} }
    vif     = { {defs={}, expr=v985[1]} }
    vip     = { {defs={}, expr=v986[1]} }
    id      = { {defs={}, expr=v987[1]} }
    ?22     = { {defs={}, expr=v988[1]} }
    ?23     = { {defs={}, expr=v989[1]} }
    ?24     = { {defs={}, expr=v990[1]} }
    ?25     = { {defs={}, expr=v991[1]} }
    ?26     = { {defs={}, expr=v992[1]} }
    ?27     = { {defs={}, expr=v993[1]} }
    ?28     = { {defs={}, expr=v994[1]} }
    ?29     = { {defs={}, expr=v995[1]} }
    ?30     = { {defs={}, expr=v996[1]} }
    ?31     = { {defs={}, expr=v997[1]} }
    ip      = { {defs={0x080483bf}, expr=0x080483c1[32]} }
memory:
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 3[32])} value={defs={0x080483bf}, expr=(extract[8] 24[32] 32[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 2[32])} value={defs={0x080483bf}, expr=(extract[8] 16[32] 24[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 1[32])} value={defs={0x080483bf}, expr=(extract[8] 8[32] 16[32] v1003[32])}
    addr={defs={0x080483ba}, expr=v998[32]} value={defs={0x080483bf}, expr=(extract[8] 0[32] 8[32] v1003[32])}
    addr={defs={0x080483ba}, expr=0x080496f3[32]} value={defs={0x080483ba}, expr=(extract[8] 24[32] 32[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f2[32]} value={defs={0x080483ba}, expr=(extract[8] 16[32] 24[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f1[32]} value={defs={0x080483ba}, expr=(extract[8] 8[32] 16[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f0[32]} value={defs={0x080483ba}, expr=(extract[8] 0[32] 8[32] v998[32])}
0x80483c1:test   edx, edx
registers:
    ax      = { {defs={0x080483ba}, expr=v998[32]} }
    cx      = { {defs={}, expr=v953[32]} }
    dx      = { {defs={0x080483bf}, expr=v1003[32]} }
    bx      = { {defs={}, expr=v955[32]} }
    sp      = { {defs={}, expr=v956[32]} }
    bp      = { {defs={}, expr=v957[32]} }
    si      = { {defs={}, expr=v958[32]} }
    di      = { {defs={}, expr=v959[32]} }
    es      = { {defs={}, expr=v960[16]} }
    cs      = { {defs={}, expr=v961[16]} }
    ss      = { {defs={}, expr=v962[16]} }
    ds      = { {defs={}, expr=v963[16]} }
    fs      = { {defs={}, expr=v964[16]} }
    gs      = { {defs={}, expr=v965[16]} }
    cf      = { {defs={0x080483c1}, expr=0[1]} }
    ?1      = { {defs={}, expr=v967[1]} }
    pf      = { {defs={0x080483bf,0x080483c1}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))))))} }
    ?3      = { {defs={}, expr=v969[1]} }
    af      = { {defs={}, expr=v1008[1]} }
    ?5      = { {defs={}, expr=v971[1]} }
    zf      = { {defs={0x080483bf,0x080483c1}, expr=(zerop[1] (bv-and[32] v1003[32] v1003[32]))} }
    sf      = { {defs={0x080483bf,0x080483c1}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v1003[32] v1003[32]))} }
    tf      = { {defs={}, expr=v974[1]} }
    if      = { {defs={}, expr=v975[1]} }
    df      = { {defs={}, expr=v976[1]} }
    of      = { {defs={0x080483c1}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v978[1]} }
    iopl1   = { {defs={}, expr=v979[1]} }
    nt      = { {defs={}, expr=v980[1]} }
    ?15     = { {defs={}, expr=v981[1]} }
    rf      = { {defs={}, expr=v982[1]} }
    vm      = { {defs={}, expr=v983[1]} }
    ac      = { {defs={}, expr=v984[1]} }
    vif     = { {defs={}, expr=v985[1]} }
    vip     = { {defs={}, expr=v986[1]} }
    id      = { {defs={}, expr=v987[1]} }
    ?22     = { {defs={}, expr=v988[1]} }
    ?23     = { {defs={}, expr=v989[1]} }
    ?24     = { {defs={}, expr=v990[1]} }
    ?25     = { {defs={}, expr=v991[1]} }
    ?26     = { {defs={}, expr=v992[1]} }
    ?27     = { {defs={}, expr=v993[1]} }
    ?28     = { {defs={}, expr=v994[1]} }
    ?29     = { {defs={}, expr=v995[1]} }
    ?30     = { {defs={}, expr=v996[1]} }
    ?31     = { {defs={}, expr=v997[1]} }
    ip      = { {defs={0x080483c1}, expr=0x080483c3[32]} }
memory:
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 3[32])} value={defs={0x080483bf}, expr=(extract[8] 24[32] 32[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 2[32])} value={defs={0x080483bf}, expr=(extract[8] 16[32] 24[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 1[32])} value={defs={0x080483bf}, expr=(extract[8] 8[32] 16[32] v1003[32])}
    addr={defs={0x080483ba}, expr=v998[32]} value={defs={0x080483bf}, expr=(extract[8] 0[32] 8[32] v1003[32])}
    addr={defs={0x080483ba}, expr=0x080496f3[32]} value={defs={0x080483ba}, expr=(extract[8] 24[32] 32[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f2[32]} value={defs={0x080483ba}, expr=(extract[8] 16[32] 24[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f1[32]} value={defs={0x080483ba}, expr=(extract[8] 8[32] 16[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f0[32]} value={defs={0x080483ba}, expr=(extract[8] 0[32] 8[32] v998[32])}
0x80483c3:jne    0x080483b0<<Insn>>
registers:
    ax      = { {defs={0x080483ba}, expr=v998[32]} }
    cx      = { {defs={}, expr=v953[32]} }
    dx      = { {defs={0x080483bf}, expr=v1003[32]} }
    bx      = { {defs={}, expr=v955[32]} }
    sp      = { {defs={}, expr=v956[32]} }
    bp      = { {defs={}, expr=v957[32]} }
    si      = { {defs={}, expr=v958[32]} }
    di      = { {defs={}, expr=v959[32]} }
    es      = { {defs={}, expr=v960[16]} }
    cs      = { {defs={}, expr=v961[16]} }
    ss      = { {defs={}, expr=v962[16]} }
    ds      = { {defs={}, expr=v963[16]} }
    fs      = { {defs={}, expr=v964[16]} }
    gs      = { {defs={}, expr=v965[16]} }
    cf      = { {defs={0x080483c1}, expr=0[1]} }
    ?1      = { {defs={}, expr=v967[1]} }
    pf      = { {defs={0x080483bf,0x080483c1}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1003[32] v1003[32])))))))} }
    ?3      = { {defs={}, expr=v969[1]} }
    af      = { {defs={}, expr=v1008[1]} }
    ?5      = { {defs={}, expr=v971[1]} }
    zf      = { {defs={0x080483bf,0x080483c1}, expr=(zerop[1] (bv-and[32] v1003[32] v1003[32]))} }
    sf      = { {defs={0x080483bf,0x080483c1}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v1003[32] v1003[32]))} }
    tf      = { {defs={}, expr=v974[1]} }
    if      = { {defs={}, expr=v975[1]} }
    df      = { {defs={}, expr=v976[1]} }
    of      = { {defs={0x080483c1}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v978[1]} }
    iopl1   = { {defs={}, expr=v979[1]} }
    nt      = { {defs={}, expr=v980[1]} }
    ?15     = { {defs={}, expr=v981[1]} }
    rf      = { {defs={}, expr=v982[1]} }
    vm      = { {defs={}, expr=v983[1]} }
    ac      = { {defs={}, expr=v984[1]} }
    vif     = { {defs={}, expr=v985[1]} }
    vip     = { {defs={}, expr=v986[1]} }
    id      = { {defs={}, expr=v987[1]} }
    ?22     = { {defs={}, expr=v988[1]} }
    ?23     = { {defs={}, expr=v989[1]} }
    ?24     = { {defs={}, expr=v990[1]} }
    ?25     = { {defs={}, expr=v991[1]} }
    ?26     = { {defs={}, expr=v992[1]} }
    ?27     = { {defs={}, expr=v993[1]} }
    ?28     = { {defs={}, expr=v994[1]} }
    ?29     = { {defs={}, expr=v995[1]} }
    ?30     = { {defs={}, expr=v996[1]} }
    ?31     = { {defs={}, expr=v997[1]} }
    ip      = { {defs={0x080483bf,0x080483c1,0x080483c3}, expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v1003[32] v1003[32]))) 0x080483b0[32] 0x080483c5[32])} }
memory:
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 3[32])} value={defs={0x080483bf}, expr=(extract[8] 24[32] 32[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 2[32])} value={defs={0x080483bf}, expr=(extract[8] 16[32] 24[32] v1003[32])}
    addr={defs={0x080483ba,0x080483bf}, expr=(add[32] v998[32] 1[32])} value={defs={0x080483bf}, expr=(extract[8] 8[32] 16[32] v1003[32])}
    addr={defs={0x080483ba}, expr=v998[32]} value={defs={0x080483bf}, expr=(extract[8] 0[32] 8[32] v1003[32])}
    addr={defs={0x080483ba}, expr=0x080496f3[32]} value={defs={0x080483ba}, expr=(extract[8] 24[32] 32[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f2[32]} value={defs={0x080483ba}, expr=(extract[8] 16[32] 24[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f1[32]} value={defs={0x080483ba}, expr=(extract[8] 8[32] 16[32] v998[32])}
    addr={defs={0x080483ba}, expr=0x080496f0[32]} value={defs={0x080483ba}, expr=(extract[8] 0[32] 8[32] v998[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01
registers:
    ax      = { {defs={}, expr=v1011[32]} }
    cx      = { {defs={}, expr=v1012[32]} }
    dx      = { {defs={}, expr=v1013[32]} }
    bx      = { {defs={}, expr=v1014[32]} }
    sp      = { {defs={}, expr=v1015[32]} }
    bp      = { {defs={}, expr=v1016[32]} }
    si      = { {defs={}, expr=v1017[32]} }
    di      = { {defs={}, expr=v1018[32]} }
    es      = { {defs={}, expr=v1019[16]} }
    cs      = { {defs={}, expr=v1020[16]} }
    ss      = { {defs={}, expr=v1021[16]} }
    ds      = { {defs={}, expr=v1022[16]} }
    fs      = { {defs={}, expr=v1023[16]} }
    gs      = { {defs={}, expr=v1024[16]} }
    cf      = { {defs={}, expr=v1025[1]} }
    ?1      = { {defs={}, expr=v1026[1]} }
    pf      = { {defs={}, expr=v1027[1]} }
    ?3      = { {defs={}, expr=v1028[1]} }
    af      = { {defs={}, expr=v1029[1]} }
    ?5      = { {defs={}, expr=v1030[1]} }
    zf      = { {defs={}, expr=v1031[1]} }
    sf      = { {defs={}, expr=v1032[1]} }
    tf      = { {defs={}, expr=v1033[1]} }
    if      = { {defs={}, expr=v1034[1]} }
    df      = { {defs={}, expr=v1035[1]} }
    of      = { {defs={}, expr=v1036[1]} }
    iopl0   = { {defs={}, expr=v1037[1]} }
    iopl1   = { {defs={}, expr=v1038[1]} }
    nt      = { {defs={}, expr=v1039[1]} }
    ?15     = { {defs={}, expr=v1040[1]} }
    rf      = { {defs={}, expr=v1041[1]} }
    vm      = { {defs={}, expr=v1042[1]} }
    ac      = { {defs={}, expr=v1043[1]} }
    vif     = { {defs={}, expr=v1044[1]} }
    vip     = { {defs={}, expr=v1045[1]} }
    id      = { {defs={}, expr=v1046[1]} }
    ?22     = { {defs={}, expr=v1047[1]} }
    ?23     = { {defs={}, expr=v1048[1]} }
    ?24     = { {defs={}, expr=v1049[1]} }
    ?25     = { {defs={}, expr=v1050[1]} }
    ?26     = { {defs={}, expr=v1051[1]} }
    ?27     = { {defs={}, expr=v1052[1]} }
    ?28     = { {defs={}, expr=v1053[1]} }
    ?29     = { {defs={}, expr=v1054[1]} }
    ?30     = { {defs={}, expr=v1055[1]} }
    ?31     = { {defs={}, expr=v1056[1]} }
    ip      = { {defs={0x080483c5}, expr=0x080483cc[32]} }
memory:
    addr={defs={0x080483c5}, expr=0x080496f4[32]} value={defs={0x080483c5}, expr=1[8]}
0x80483cc:leave  
registers:
    ax      = { {defs={}, expr=v1011[32]} }
    cx      = { {defs={}, expr=v1012[32]} }
    dx      = { {defs={}, expr=v1013[32]} }
    bx      = { {defs={}, expr=v1014[32]} }
    sp      = { {defs={0x080483cc}, expr=(add[32] v1016[32] 4[32])} }
    bp      = { {defs={0x080483cc}, expr=v1057[32]} }
    si      = { {defs={}, expr=v1017[32]} }
    di      = { {defs={}, expr=v1018[32]} }
    es      = { {defs={}, expr=v1019[16]} }
    cs      = { {defs={}, expr=v1020[16]} }
    ss      = { {defs={}, expr=v1021[16]} }
    ds      = { {defs={}, expr=v1022[16]} }
    fs      = { {defs={}, expr=v1023[16]} }
    gs      = { {defs={}, expr=v1024[16]} }
    cf      = { {defs={}, expr=v1025[1]} }
    ?1      = { {defs={}, expr=v1026[1]} }
    pf      = { {defs={}, expr=v1027[1]} }
    ?3      = { {defs={}, expr=v1028[1]} }
    af      = { {defs={}, expr=v1029[1]} }
    ?5      = { {defs={}, expr=v1030[1]} }
    zf      = { {defs={}, expr=v1031[1]} }
    sf      = { {defs={}, expr=v1032[1]} }
    tf      = { {defs={}, expr=v1033[1]} }
    if      = { {defs={}, expr=v1034[1]} }
    df      = { {defs={}, expr=v1035[1]} }
    of      = { {defs={}, expr=v1036[1]} }
    iopl0   = { {defs={}, expr=v1037[1]} }
    iopl1   = { {defs={}, expr=v1038[1]} }
    nt      = { {defs={}, expr=v1039[1]} }
    ?15     = { {defs={}, expr=v1040[1]} }
    rf      = { {defs={}, expr=v1041[1]} }
    vm      = { {defs={}, expr=v1042[1]} }
    ac      = { {defs={}, expr=v1043[1]} }
    vif     = { {defs={}, expr=v1044[1]} }
    vip     = { {defs={}, expr=v1045[1]} }
    id      = { {defs={}, expr=v1046[1]} }
    ?22     = { {defs={}, expr=v1047[1]} }
    ?23     = { {defs={}, expr=v1048[1]} }
    ?24     = { {defs={}, expr=v1049[1]} }
    ?25     = { {defs={}, expr=v1050[1]} }
    ?26     = { {defs={}, expr=v1051[1]} }
    ?27     = { {defs={}, expr=v1052[1]} }
    ?28     = { {defs={}, expr=v1053[1]} }
    ?29     = { {defs={}, expr=v1054[1]} }
    ?30     = { {defs={}, expr=v1055[1]} }
    ?31     = { {defs={}, expr=v1056[1]} }
    ip      = { {defs={0x080483cc}, expr=0x080483cd[32]} }
memory:
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 3[32])} value={defs={0x080483cc}, expr=(extract[8] 24[32] 32[32] v1057[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 2[32])} value={defs={0x080483cc}, expr=(extract[8] 16[32] 24[32] v1057[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 1[32])} value={defs={0x080483cc}, expr=(extract[8] 8[32] 16[32] v1057[32])}
    addr={defs={}, expr=v1016[32]} value={defs={0x080483cc}, expr=(extract[8] 0[32] 8[32] v1057[32])}
    addr={defs={0x080483c5}, expr=0x080496f4[32]} value={defs={0x080483c5}, expr=1[8]}
0x80483cd:ret    
registers:
    ax      = { {defs={}, expr=v1011[32]} }
    cx      = { {defs={}, expr=v1012[32]} }
    dx      = { {defs={}, expr=v1013[32]} }
    bx      = { {defs={}, expr=v1014[32]} }
    sp      = { {defs={0x080483cc,0x080483cd}, expr=(add[32] (add[32] v1016[32] 4[32]) 4[32])} }
    bp      = { {defs={0x080483cc}, expr=v1057[32]} }
    si      = { {defs={}, expr=v1017[32]} }
    di      = { {defs={}, expr=v1018[32]} }
    es      = { {defs={}, expr=v1019[16]} }
    cs      = { {defs={}, expr=v1020[16]} }
    ss      = { {defs={}, expr=v1021[16]} }
    ds      = { {defs={}, expr=v1022[16]} }
    fs      = { {defs={}, expr=v1023[16]} }
    gs      = { {defs={}, expr=v1024[16]} }
    cf      = { {defs={}, expr=v1025[1]} }
    ?1      = { {defs={}, expr=v1026[1]} }
    pf      = { {defs={}, expr=v1027[1]} }
    ?3      = { {defs={}, expr=v1028[1]} }
    af      = { {defs={}, expr=v1029[1]} }
    ?5      = { {defs={}, expr=v1030[1]} }
    zf      = { {defs={}, expr=v1031[1]} }
    sf      = { {defs={}, expr=v1032[1]} }
    tf      = { {defs={}, expr=v1033[1]} }
    if      = { {defs={}, expr=v1034[1]} }
    df      = { {defs={}, expr=v1035[1]} }
    of      = { {defs={}, expr=v1036[1]} }
    iopl0   = { {defs={}, expr=v1037[1]} }
    iopl1   = { {defs={}, expr=v1038[1]} }
    nt      = { {defs={}, expr=v1039[1]} }
    ?15     = { {defs={}, expr=v1040[1]} }
    rf      = { {defs={}, expr=v1041[1]} }
    vm      = { {defs={}, expr=v1042[1]} }
    ac      = { {defs={}, expr=v1043[1]} }
    vif     = { {defs={}, expr=v1044[1]} }
    vip     = { {defs={}, expr=v1045[1]} }
    id      = { {defs={}, expr=v1046[1]} }
    ?22     = { {defs={}, expr=v1047[1]} }
    ?23     = { {defs={}, expr=v1048[1]} }
    ?24     = { {defs={}, expr=v1049[1]} }
    ?25     = { {defs={}, expr=v1050[1]} }
    ?26     = { {defs={}, expr=v1051[1]} }
    ?27     = { {defs={}, expr=v1052[1]} }
    ?28     = { {defs={}, expr=v1053[1]} }
    ?29     = { {defs={}, expr=v1054[1]} }
    ?30     = { {defs={}, expr=v1055[1]} }
    ?31     = { {defs={}, expr=v1056[1]} }
    ip      = { {defs={0x080483cd}, expr=v1062[32]} }
memory:
    addr={defs={0x080483cc,0x080483cd}, expr=(add[32] (add[32] v1016[32] 4[32]) 3[32])} value={defs={0x080483cd}, expr=(extract[8] 24[32] 32[32] v1062[32])}
    addr={defs={0x080483cc,0x080483cd}, expr=(add[32] (add[32] v1016[32] 4[32]) 2[32])} value={defs={0x080483cd}, expr=(extract[8] 16[32] 24[32] v1062[32])}
    addr={defs={0x080483cc,0x080483cd}, expr=(add[32] (add[32] v1016[32] 4[32]) 1[32])} value={defs={0x080483cd}, expr=(extract[8] 8[32] 16[32] v1062[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 4[32])} value={defs={0x080483cd}, expr=(extract[8] 0[32] 8[32] v1062[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 3[32])} value={defs={0x080483cc}, expr=(extract[8] 24[32] 32[32] v1057[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 2[32])} value={defs={0x080483cc}, expr=(extract[8] 16[32] 24[32] v1057[32])}
    addr={defs={0x080483cc}, expr=(add[32] v1016[32] 1[32])} value={defs={0x080483cc}, expr=(extract[8] 8[32] 16[32] v1057[32])}
    addr={defs={}, expr=v1016[32]} value={defs={0x080483cc}, expr=(extract[8] 0[32] 8[32] v1057[32])}
    addr={defs={0x080483c5}, expr=0x080496f4[32]} value={defs={0x080483c5}, expr=1[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
registers:
    ax      = { {defs={}, expr=v1069[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    bp      = { {defs={}, expr=v1074[32]} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={}, expr=v1083[1]} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={}, expr=v1085[1]} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={}, expr=v1087[1]} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={}, expr=v1089[1]} }
    sf      = { {defs={}, expr=v1090[1]} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={}, expr=v1094[1]} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d0}, expr=0x080483d1[32]} }
memory:
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
0x80483d1:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v1069[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={}, expr=v1083[1]} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={}, expr=v1085[1]} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={}, expr=v1087[1]} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={}, expr=v1089[1]} }
    sf      = { {defs={}, expr=v1090[1]} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={}, expr=v1094[1]} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d1}, expr=0x080483d3[32]} }
memory:
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
0x80483d3:sub    esp, 0x08
registers:
    ax      = { {defs={}, expr=v1069[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0,0x080483d3}, expr=(add[32] (add[32] v1073[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={0x080483d0,0x080483d3}, expr=(zerop[1] (add[32] (add[32] v1073[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x080483d0,0x080483d3}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={0x080483d0,0x080483d3}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d3}, expr=0x080483d6[32]} }
memory:
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]
registers:
    ax      = { {defs={0x080483d6}, expr=v1115[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0,0x080483d3}, expr=(add[32] (add[32] v1073[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1073[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={0x080483d0,0x080483d3}, expr=(zerop[1] (add[32] (add[32] v1073[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x080483d0,0x080483d3}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1073[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={0x080483d0,0x080483d3}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1073[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d6}, expr=0x080483db[32]} }
memory:
    addr={defs={0x080483d6}, expr=0x080495fb[32]} value={defs={0x080483d6}, expr=(extract[8] 24[32] 32[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495fa[32]} value={defs={0x080483d6}, expr=(extract[8] 16[32] 24[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f9[32]} value={defs={0x080483d6}, expr=(extract[8] 8[32] 16[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f8[32]} value={defs={0x080483d6}, expr=(extract[8] 0[32] 8[32] v1115[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
0x80483db:test   eax, eax
registers:
    ax      = { {defs={0x080483d6}, expr=v1115[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0,0x080483d3}, expr=(add[32] (add[32] v1073[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={0x080483db}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={0x080483d6,0x080483db}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))))))} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={}, expr=v1120[1]} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={0x080483d6,0x080483db}, expr=(zerop[1] (bv-and[32] v1115[32] v1115[32]))} }
    sf      = { {defs={0x080483d6,0x080483db}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v1115[32] v1115[32]))} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={0x080483db}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483db}, expr=0x080483dd[32]} }
memory:
    addr={defs={0x080483d6}, expr=0x080495fb[32]} value={defs={0x080483d6}, expr=(extract[8] 24[32] 32[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495fa[32]} value={defs={0x080483d6}, expr=(extract[8] 16[32] 24[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f9[32]} value={defs={0x080483d6}, expr=(extract[8] 8[32] 16[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f8[32]} value={defs={0x080483d6}, expr=(extract[8] 0[32] 8[32] v1115[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
0x80483dd:je     0x08048400<<Insn>>
registers:
    ax      = { {defs={0x080483d6}, expr=v1115[32]} }
    cx      = { {defs={}, expr=v1070[32]} }
    dx      = { {defs={}, expr=v1071[32]} }
    bx      = { {defs={}, expr=v1072[32]} }
    sp      = { {defs={0x080483d0,0x080483d3}, expr=(add[32] (add[32] v1073[32] -4[32]) -8[32])} }
    bp      = { {defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} }
    si      = { {defs={}, expr=v1075[32]} }
    di      = { {defs={}, expr=v1076[32]} }
    es      = { {defs={}, expr=v1077[16]} }
    cs      = { {defs={}, expr=v1078[16]} }
    ss      = { {defs={}, expr=v1079[16]} }
    ds      = { {defs={}, expr=v1080[16]} }
    fs      = { {defs={}, expr=v1081[16]} }
    gs      = { {defs={}, expr=v1082[16]} }
    cf      = { {defs={0x080483db}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1084[1]} }
    pf      = { {defs={0x080483d6,0x080483db}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1115[32] v1115[32])))))))} }
    ?3      = { {defs={}, expr=v1086[1]} }
    af      = { {defs={}, expr=v1120[1]} }
    ?5      = { {defs={}, expr=v1088[1]} }
    zf      = { {defs={0x080483d6,0x080483db}, expr=(zerop[1] (bv-and[32] v1115[32] v1115[32]))} }
    sf      = { {defs={0x080483d6,0x080483db}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v1115[32] v1115[32]))} }
    tf      = { {defs={}, expr=v1091[1]} }
    if      = { {defs={}, expr=v1092[1]} }
    df      = { {defs={}, expr=v1093[1]} }
    of      = { {defs={0x080483db}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1095[1]} }
    iopl1   = { {defs={}, expr=v1096[1]} }
    nt      = { {defs={}, expr=v1097[1]} }
    ?15     = { {defs={}, expr=v1098[1]} }
    rf      = { {defs={}, expr=v1099[1]} }
    vm      = { {defs={}, expr=v1100[1]} }
    ac      = { {defs={}, expr=v1101[1]} }
    vif     = { {defs={}, expr=v1102[1]} }
    vip     = { {defs={}, expr=v1103[1]} }
    id      = { {defs={}, expr=v1104[1]} }
    ?22     = { {defs={}, expr=v1105[1]} }
    ?23     = { {defs={}, expr=v1106[1]} }
    ?24     = { {defs={}, expr=v1107[1]} }
    ?25     = { {defs={}, expr=v1108[1]} }
    ?26     = { {defs={}, expr=v1109[1]} }
    ?27     = { {defs={}, expr=v1110[1]} }
    ?28     = { {defs={}, expr=v1111[1]} }
    ?29     = { {defs={}, expr=v1112[1]} }
    ?30     = { {defs={}, expr=v1113[1]} }
    ?31     = { {defs={}, expr=v1114[1]} }
    ip      = { {defs={0x080483d6,0x080483db,0x080483dd}, expr=(ite[32] (zerop[1] (bv-and[32] v1115[32] v1115[32])) 0x08048400[32] 0x080483df[32])} }
memory:
    addr={defs={0x080483d6}, expr=0x080495fb[32]} value={defs={0x080483d6}, expr=(extract[8] 24[32] 32[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495fa[32]} value={defs={0x080483d6}, expr=(extract[8] 16[32] 24[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f9[32]} value={defs={0x080483d6}, expr=(extract[8] 8[32] 16[32] v1115[32])}
    addr={defs={0x080483d6}, expr=0x080495f8[32]} value={defs={0x080483d6}, expr=(extract[8] 0[32] 8[32] v1115[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 3[32])} value={defs={0x080483d0}, expr=(extract[8] 24[32] 32[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 2[32])} value={defs={0x080483d0}, expr=(extract[8] 16[32] 24[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] (add[32] v1073[32] -4[32]) 1[32])} value={defs={0x080483d0}, expr=(extract[8] 8[32] 16[32] v1074[32])}
    addr={defs={0x080483d0}, expr=(add[32] v1073[32] -4[32])} value={defs={0x080483d0}, expr=(extract[8] 0[32] 8[32] v1074[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
registers:
    ax      = { {defs={0x080483df}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={}, expr=v1127[32]} }
    bp      = { {defs={}, expr=v1128[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={}, expr=v1137[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={}, expr=v1139[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1141[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={}, expr=v1143[1]} }
    sf      = { {defs={}, expr=v1144[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={}, expr=v1148[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x080483df}, expr=0x080483e4[32]} }
memory:
0x80483e4:test   eax, eax
registers:
    ax      = { {defs={0x080483df}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={}, expr=v1127[32]} }
    bp      = { {defs={}, expr=v1128[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={0x080483e4}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483df,0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={0x080483e4}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x080483e4}, expr=0x080483e6[32]} }
memory:
0x80483e6:je     0x08048400<<Insn>>
registers:
    ax      = { {defs={0x080483df}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={}, expr=v1127[32]} }
    bp      = { {defs={}, expr=v1128[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={0x080483e4}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483df,0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={0x080483e4}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x080483df,0x080483e4,0x080483e6}, expr=0x08048400[32]} }
memory:
0x8048400:mov    esp, ebp
registers:
    ax      = { {defs={0x080483df}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={}, expr=v1128[32]} }
    bp      = { {defs={}, expr=v1128[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={0x080483e4}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483df,0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={0x080483e4}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x08048400}, expr=0x08048402[32]} }
memory:
0x8048402:pop    ebp
registers:
    ax      = { {defs={0x080483df}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={0x08048402}, expr=(add[32] v1128[32] 4[32])} }
    bp      = { {defs={0x08048402}, expr=v1170[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={0x080483e4}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483df,0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={0x080483e4}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x08048402}, expr=0x08048403[32]} }
memory:
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 3[32])} value={defs={0x08048402}, expr=(extract[8] 24[32] 32[32] v1170[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 2[32])} value={defs={0x08048402}, expr=(extract[8] 16[32] 24[32] v1170[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 1[32])} value={defs={0x08048402}, expr=(extract[8] 8[32] 16[32] v1170[32])}
    addr={defs={}, expr=v1128[32]} value={defs={0x08048402}, expr=(extract[8] 0[32] 8[32] v1170[32])}
0x8048403:ret    
registers:
    ax      = { {defs={0x080483df}, expr=0[32]} }
    cx      = { {defs={}, expr=v1124[32]} }
    dx      = { {defs={}, expr=v1125[32]} }
    bx      = { {defs={}, expr=v1126[32]} }
    sp      = { {defs={0x08048402,0x08048403}, expr=(add[32] (add[32] v1128[32] 4[32]) 4[32])} }
    bp      = { {defs={0x08048402}, expr=v1170[32]} }
    si      = { {defs={}, expr=v1129[32]} }
    di      = { {defs={}, expr=v1130[32]} }
    es      = { {defs={}, expr=v1131[16]} }
    cs      = { {defs={}, expr=v1132[16]} }
    ss      = { {defs={}, expr=v1133[16]} }
    ds      = { {defs={}, expr=v1134[16]} }
    fs      = { {defs={}, expr=v1135[16]} }
    gs      = { {defs={}, expr=v1136[16]} }
    cf      = { {defs={0x080483e4}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1138[1]} }
    pf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1140[1]} }
    af      = { {defs={}, expr=v1169[1]} }
    ?5      = { {defs={}, expr=v1142[1]} }
    zf      = { {defs={0x080483df,0x080483e4}, expr=1[1]} }
    sf      = { {defs={0x080483df,0x080483e4}, expr=0[1]} }
    tf      = { {defs={}, expr=v1145[1]} }
    if      = { {defs={}, expr=v1146[1]} }
    df      = { {defs={}, expr=v1147[1]} }
    of      = { {defs={0x080483e4}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1149[1]} }
    iopl1   = { {defs={}, expr=v1150[1]} }
    nt      = { {defs={}, expr=v1151[1]} }
    ?15     = { {defs={}, expr=v1152[1]} }
    rf      = { {defs={}, expr=v1153[1]} }
    vm      = { {defs={}, expr=v1154[1]} }
    ac      = { {defs={}, expr=v1155[1]} }
    vif     = { {defs={}, expr=v1156[1]} }
    vip     = { {defs={}, expr=v1157[1]} }
    id      = { {defs={}, expr=v1158[1]} }
    ?22     = { {defs={}, expr=v1159[1]} }
    ?23     = { {defs={}, expr=v1160[1]} }
    ?24     = { {defs={}, expr=v1161[1]} }
    ?25     = { {defs={}, expr=v1162[1]} }
    ?26     = { {defs={}, expr=v1163[1]} }
    ?27     = { {defs={}, expr=v1164[1]} }
    ?28     = { {defs={}, expr=v1165[1]} }
    ?29     = { {defs={}, expr=v1166[1]} }
    ?30     = { {defs={}, expr=v1167[1]} }
    ?31     = { {defs={}, expr=v1168[1]} }
    ip      = { {defs={0x08048403}, expr=v1175[32]} }
memory:
    addr={defs={0x08048402,0x08048403}, expr=(add[32] (add[32] v1128[32] 4[32]) 3[32])} value={defs={0x08048403}, expr=(extract[8] 24[32] 32[32] v1175[32])}
    addr={defs={0x08048402,0x08048403}, expr=(add[32] (add[32] v1128[32] 4[32]) 2[32])} value={defs={0x08048403}, expr=(extract[8] 16[32] 24[32] v1175[32])}
    addr={defs={0x08048402,0x08048403}, expr=(add[32] (add[32] v1128[32] 4[32]) 1[32])} value={defs={0x08048403}, expr=(extract[8] 8[32] 16[32] v1175[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 4[32])} value={defs={0x08048403}, expr=(extract[8] 0[32] 8[32] v1175[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 3[32])} value={defs={0x08048402}, expr=(extract[8] 24[32] 32[32] v1170[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 2[32])} value={defs={0x08048402}, expr=(extract[8] 16[32] 24[32] v1170[32])}
    addr={defs={0x08048402}, expr=(add[32] v1128[32] 1[32])} value={defs={0x08048402}, expr=(extract[8] 8[32] 16[32] v1170[32])}
    addr={defs={}, expr=v1128[32]} value={defs={0x08048402}, expr=(extract[8] 0[32] 8[32] v1170[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>
registers:
    ax      = { {defs={}, expr=v1182[32]} }
    cx      = { {defs={}, expr=v1183[32]} }
    dx      = { {defs={}, expr=v1184[32]} }
    bx      = { {defs={}, expr=v1185[32]} }
    sp      = { {defs={}, expr=v1186[32]} }
    bp      = { {defs={}, expr=v1187[32]} }
    si      = { {defs={}, expr=v1188[32]} }
    di      = { {defs={}, expr=v1189[32]} }
    es      = { {defs={}, expr=v1190[16]} }
    cs      = { {defs={}, expr=v1191[16]} }
    ss      = { {defs={}, expr=v1192[16]} }
    ds      = { {defs={}, expr=v1193[16]} }
    fs      = { {defs={}, expr=v1194[16]} }
    gs      = { {defs={}, expr=v1195[16]} }
    cf      = { {defs={}, expr=v1196[1]} }
    ?1      = { {defs={}, expr=v1197[1]} }
    pf      = { {defs={}, expr=v1198[1]} }
    ?3      = { {defs={}, expr=v1199[1]} }
    af      = { {defs={}, expr=v1200[1]} }
    ?5      = { {defs={}, expr=v1201[1]} }
    zf      = { {defs={}, expr=v1202[1]} }
    sf      = { {defs={}, expr=v1203[1]} }
    tf      = { {defs={}, expr=v1204[1]} }
    if      = { {defs={}, expr=v1205[1]} }
    df      = { {defs={}, expr=v1206[1]} }
    of      = { {defs={}, expr=v1207[1]} }
    iopl0   = { {defs={}, expr=v1208[1]} }
    iopl1   = { {defs={}, expr=v1209[1]} }
    nt      = { {defs={}, expr=v1210[1]} }
    ?15     = { {defs={}, expr=v1211[1]} }
    rf      = { {defs={}, expr=v1212[1]} }
    vm      = { {defs={}, expr=v1213[1]} }
    ac      = { {defs={}, expr=v1214[1]} }
    vif     = { {defs={}, expr=v1215[1]} }
    vip     = { {defs={}, expr=v1216[1]} }
    id      = { {defs={}, expr=v1217[1]} }
    ?22     = { {defs={}, expr=v1218[1]} }
    ?23     = { {defs={}, expr=v1219[1]} }
    ?24     = { {defs={}, expr=v1220[1]} }
    ?25     = { {defs={}, expr=v1221[1]} }
    ?26     = { {defs={}, expr=v1222[1]} }
    ?27     = { {defs={}, expr=v1223[1]} }
    ?28     = { {defs={}, expr=v1224[1]} }
    ?29     = { {defs={}, expr=v1225[1]} }
    ?30     = { {defs={}, expr=v1226[1]} }
    ?31     = { {defs={}, expr=v1227[1]} }
    ip      = { {defs={0x080483e8}, expr=0x080483ef[32]} }
memory:
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 3[32])} value={defs={0x080483e8}, expr=8[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 2[32])} value={defs={0x080483e8}, expr=4[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 1[32])} value={defs={0x080483e8}, expr=-107[8]}
    addr={defs={}, expr=v1186[32]} value={defs={0x080483e8}, expr=-8[8]}
0x80483ef:call   0x00000000
registers:
    ax      = { {defs={}, expr=v1182[32]} }
    cx      = { {defs={}, expr=v1183[32]} }
    dx      = { {defs={}, expr=v1184[32]} }
    bx      = { {defs={}, expr=v1185[32]} }
    sp      = { {defs={0x080483ef}, expr=(add[32] v1186[32] -4[32])} }
    bp      = { {defs={}, expr=v1187[32]} }
    si      = { {defs={}, expr=v1188[32]} }
    di      = { {defs={}, expr=v1189[32]} }
    es      = { {defs={}, expr=v1190[16]} }
    cs      = { {defs={}, expr=v1191[16]} }
    ss      = { {defs={}, expr=v1192[16]} }
    ds      = { {defs={}, expr=v1193[16]} }
    fs      = { {defs={}, expr=v1194[16]} }
    gs      = { {defs={}, expr=v1195[16]} }
    cf      = { {defs={}, expr=v1196[1]} }
    ?1      = { {defs={}, expr=v1197[1]} }
    pf      = { {defs={}, expr=v1198[1]} }
    ?3      = { {defs={}, expr=v1199[1]} }
    af      = { {defs={}, expr=v1200[1]} }
    ?5      = { {defs={}, expr=v1201[1]} }
    zf      = { {defs={}, expr=v1202[1]} }
    sf      = { {defs={}, expr=v1203[1]} }
    tf      = { {defs={}, expr=v1204[1]} }
    if      = { {defs={}, expr=v1205[1]} }
    df      = { {defs={}, expr=v1206[1]} }
    of      = { {defs={}, expr=v1207[1]} }
    iopl0   = { {defs={}, expr=v1208[1]} }
    iopl1   = { {defs={}, expr=v1209[1]} }
    nt      = { {defs={}, expr=v1210[1]} }
    ?15     = { {defs={}, expr=v1211[1]} }
    rf      = { {defs={}, expr=v1212[1]} }
    vm      = { {defs={}, expr=v1213[1]} }
    ac      = { {defs={}, expr=v1214[1]} }
    vif     = { {defs={}, expr=v1215[1]} }
    vip     = { {defs={}, expr=v1216[1]} }
    id      = { {defs={}, expr=v1217[1]} }
    ?22     = { {defs={}, expr=v1218[1]} }
    ?23     = { {defs={}, expr=v1219[1]} }
    ?24     = { {defs={}, expr=v1220[1]} }
    ?25     = { {defs={}, expr=v1221[1]} }
    ?26     = { {defs={}, expr=v1222[1]} }
    ?27     = { {defs={}, expr=v1223[1]} }
    ?28     = { {defs={}, expr=v1224[1]} }
    ?29     = { {defs={}, expr=v1225[1]} }
    ?30     = { {defs={}, expr=v1226[1]} }
    ?31     = { {defs={}, expr=v1227[1]} }
    ip      = { {defs={0x080483ef}, expr=0[32]} }
memory:
    addr={defs={0x080483ef}, expr=(add[32] (add[32] v1186[32] -4[32]) 3[32])} value={defs={0x080483ef}, expr=8[8]}
    addr={defs={0x080483ef}, expr=(add[32] (add[32] v1186[32] -4[32]) 2[32])} value={defs={0x080483ef}, expr=4[8]}
    addr={defs={0x080483ef}, expr=(add[32] (add[32] v1186[32] -4[32]) 1[32])} value={defs={0x080483ef}, expr=-125[8]}
    addr={defs={0x080483ef}, expr=(add[32] v1186[32] -4[32])} value={defs={0x080483ef}, expr=-12[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 3[32])} value={defs={0x080483e8}, expr=8[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 2[32])} value={defs={0x080483e8}, expr=4[8]}
    addr={defs={0x080483e8}, expr=(add[32] v1186[32] 1[32])} value={defs={0x080483e8}, expr=-107[8]}
    addr={defs={}, expr=v1186[32]} value={defs={0x080483e8}, expr=-8[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
registers:
    ax      = { {defs={}, expr=v1230[32]} }
    cx      = { {defs={}, expr=v1231[32]} }
    dx      = { {defs={}, expr=v1232[32]} }
    bx      = { {defs={}, expr=v1233[32]} }
    sp      = { {defs={}, expr=v1234[32]} }
    bp      = { {defs={}, expr=v1235[32]} }
    si      = { {defs={}, expr=v1236[32]} }
    di      = { {defs={}, expr=v1237[32]} }
    es      = { {defs={}, expr=v1238[16]} }
    cs      = { {defs={}, expr=v1239[16]} }
    ss      = { {defs={}, expr=v1240[16]} }
    ds      = { {defs={}, expr=v1241[16]} }
    fs      = { {defs={}, expr=v1242[16]} }
    gs      = { {defs={}, expr=v1243[16]} }
    cf      = { {defs={}, expr=v1244[1]} }
    ?1      = { {defs={}, expr=v1245[1]} }
    pf      = { {defs={}, expr=v1246[1]} }
    ?3      = { {defs={}, expr=v1247[1]} }
    af      = { {defs={}, expr=v1248[1]} }
    ?5      = { {defs={}, expr=v1249[1]} }
    zf      = { {defs={}, expr=v1250[1]} }
    sf      = { {defs={}, expr=v1251[1]} }
    tf      = { {defs={}, expr=v1252[1]} }
    if      = { {defs={}, expr=v1253[1]} }
    df      = { {defs={}, expr=v1254[1]} }
    of      = { {defs={}, expr=v1255[1]} }
    iopl0   = { {defs={}, expr=v1256[1]} }
    iopl1   = { {defs={}, expr=v1257[1]} }
    nt      = { {defs={}, expr=v1258[1]} }
    ?15     = { {defs={}, expr=v1259[1]} }
    rf      = { {defs={}, expr=v1260[1]} }
    vm      = { {defs={}, expr=v1261[1]} }
    ac      = { {defs={}, expr=v1262[1]} }
    vif     = { {defs={}, expr=v1263[1]} }
    vip     = { {defs={}, expr=v1264[1]} }
    id      = { {defs={}, expr=v1265[1]} }
    ?22     = { {defs={}, expr=v1266[1]} }
    ?23     = { {defs={}, expr=v1267[1]} }
    ?24     = { {defs={}, expr=v1268[1]} }
    ?25     = { {defs={}, expr=v1269[1]} }
    ?26     = { {defs={}, expr=v1270[1]} }
    ?27     = { {defs={}, expr=v1271[1]} }
    ?28     = { {defs={}, expr=v1272[1]} }
    ?29     = { {defs={}, expr=v1273[1]} }
    ?30     = { {defs={}, expr=v1274[1]} }
    ?31     = { {defs={}, expr=v1275[1]} }
    ip      = { {defs={0x080483f4}, expr=0x080483fa[32]} }
memory:
0x80483fa:lea    edi, [edi + 0x00000000]
registers:
    ax      = { {defs={}, expr=v1230[32]} }
    cx      = { {defs={}, expr=v1231[32]} }
    dx      = { {defs={}, expr=v1232[32]} }
    bx      = { {defs={}, expr=v1233[32]} }
    sp      = { {defs={}, expr=v1234[32]} }
    bp      = { {defs={}, expr=v1235[32]} }
    si      = { {defs={}, expr=v1236[32]} }
    di      = { {defs={}, expr=v1237[32]} }
    es      = { {defs={}, expr=v1238[16]} }
    cs      = { {defs={}, expr=v1239[16]} }
    ss      = { {defs={}, expr=v1240[16]} }
    ds      = { {defs={}, expr=v1241[16]} }
    fs      = { {defs={}, expr=v1242[16]} }
    gs      = { {defs={}, expr=v1243[16]} }
    cf      = { {defs={}, expr=v1244[1]} }
    ?1      = { {defs={}, expr=v1245[1]} }
    pf      = { {defs={}, expr=v1246[1]} }
    ?3      = { {defs={}, expr=v1247[1]} }
    af      = { {defs={}, expr=v1248[1]} }
    ?5      = { {defs={}, expr=v1249[1]} }
    zf      = { {defs={}, expr=v1250[1]} }
    sf      = { {defs={}, expr=v1251[1]} }
    tf      = { {defs={}, expr=v1252[1]} }
    if      = { {defs={}, expr=v1253[1]} }
    df      = { {defs={}, expr=v1254[1]} }
    of      = { {defs={}, expr=v1255[1]} }
    iopl0   = { {defs={}, expr=v1256[1]} }
    iopl1   = { {defs={}, expr=v1257[1]} }
    nt      = { {defs={}, expr=v1258[1]} }
    ?15     = { {defs={}, expr=v1259[1]} }
    rf      = { {defs={}, expr=v1260[1]} }
    vm      = { {defs={}, expr=v1261[1]} }
    ac      = { {defs={}, expr=v1262[1]} }
    vif     = { {defs={}, expr=v1263[1]} }
    vip     = { {defs={}, expr=v1264[1]} }
    id      = { {defs={}, expr=v1265[1]} }
    ?22     = { {defs={}, expr=v1266[1]} }
    ?23     = { {defs={}, expr=v1267[1]} }
    ?24     = { {defs={}, expr=v1268[1]} }
    ?25     = { {defs={}, expr=v1269[1]} }
    ?26     = { {defs={}, expr=v1270[1]} }
    ?27     = { {defs={}, expr=v1271[1]} }
    ?28     = { {defs={}, expr=v1272[1]} }
    ?29     = { {defs={}, expr=v1273[1]} }
    ?30     = { {defs={}, expr=v1274[1]} }
    ?31     = { {defs={}, expr=v1275[1]} }
    ip      = { {defs={0x080483fa}, expr=0x08048400[32]} }
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={}, expr=v1280[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    bp      = { {defs={}, expr=v1283[32]} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=v1292[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={}, expr=v1294[1]} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1296[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={}, expr=v1298[1]} }
    sf      = { {defs={}, expr=v1299[1]} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=v1303[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048410}, expr=0x08048411[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
0x8048411:mov    edx, 0x08048480<handler>
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={0x08048411}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    bp      = { {defs={}, expr=v1283[32]} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=v1292[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={}, expr=v1294[1]} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1296[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={}, expr=v1298[1]} }
    sf      = { {defs={}, expr=v1299[1]} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=v1303[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048411}, expr=0x08048416[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
0x8048416:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={0x08048411}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={}, expr=v1292[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={}, expr=v1294[1]} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1296[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={}, expr=v1298[1]} }
    sf      = { {defs={}, expr=v1299[1]} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={}, expr=v1303[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048416}, expr=0x08048418[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
0x8048418:sub    esp, 0x08
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={0x08048411}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418}, expr=(add[32] (add[32] v1282[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={0x08048410,0x08048418}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1282[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={0x08048410,0x08048418}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418}, expr=(zerop[1] (add[32] (add[32] v1282[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048410,0x08048418}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={0x08048410,0x08048418}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1282[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048418}, expr=0x0804841b[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
0x804841b:and    esp, 0xf0<-0x10>
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={0x08048411}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={0x0804841b}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1324[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    sf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={0x0804841b}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x0804841b}, expr=0x0804841e[32]} }
memory:
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={0x08048411}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={0x0804841b}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1324[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    sf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={0x0804841b}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x0804841e}, expr=0x08048422[32]} }
memory:
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32])} value={defs={0x08048411,0x0804841e}, expr=8[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32])} value={defs={0x08048411,0x0804841e}, expr=4[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32])} value={defs={0x08048411,0x0804841e}, expr=-124[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32])} value={defs={0x08048411,0x0804841e}, expr=-128[8]}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={0x08048411}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={0x0804841b}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1324[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    sf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={0x0804841b}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048422}, expr=0x08048429[32]} }
memory:
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 3[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 2[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 1[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} value={defs={0x08048422}, expr=10[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32])} value={defs={0x08048411,0x0804841e}, expr=8[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32])} value={defs={0x08048411,0x0804841e}, expr=4[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32])} value={defs={0x08048411,0x0804841e}, expr=-124[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32])} value={defs={0x08048411,0x0804841e}, expr=-128[8]}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
0x8048429:call   0x080482f0<signal@plt>
registers:
    ax      = { {defs={}, expr=v1278[32]} }
    cx      = { {defs={}, expr=v1279[32]} }
    dx      = { {defs={0x08048411}, expr=0x08048480[32]} }
    bx      = { {defs={}, expr=v1281[32]} }
    sp      = { {defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32])} }
    bp      = { {defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} }
    si      = { {defs={}, expr=v1284[32]} }
    di      = { {defs={}, expr=v1285[32]} }
    es      = { {defs={}, expr=v1286[16]} }
    cs      = { {defs={}, expr=v1287[16]} }
    ss      = { {defs={}, expr=v1288[16]} }
    ds      = { {defs={}, expr=v1289[16]} }
    fs      = { {defs={}, expr=v1290[16]} }
    gs      = { {defs={}, expr=v1291[16]} }
    cf      = { {defs={0x0804841b}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1293[1]} }
    pf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])))))))} }
    ?3      = { {defs={}, expr=v1295[1]} }
    af      = { {defs={}, expr=v1324[1]} }
    ?5      = { {defs={}, expr=v1297[1]} }
    zf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    sf      = { {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]))} }
    tf      = { {defs={}, expr=v1300[1]} }
    if      = { {defs={}, expr=v1301[1]} }
    df      = { {defs={}, expr=v1302[1]} }
    of      = { {defs={0x0804841b}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1304[1]} }
    iopl1   = { {defs={}, expr=v1305[1]} }
    nt      = { {defs={}, expr=v1306[1]} }
    ?15     = { {defs={}, expr=v1307[1]} }
    rf      = { {defs={}, expr=v1308[1]} }
    vm      = { {defs={}, expr=v1309[1]} }
    ac      = { {defs={}, expr=v1310[1]} }
    vif     = { {defs={}, expr=v1311[1]} }
    vip     = { {defs={}, expr=v1312[1]} }
    id      = { {defs={}, expr=v1313[1]} }
    ?22     = { {defs={}, expr=v1314[1]} }
    ?23     = { {defs={}, expr=v1315[1]} }
    ?24     = { {defs={}, expr=v1316[1]} }
    ?25     = { {defs={}, expr=v1317[1]} }
    ?26     = { {defs={}, expr=v1318[1]} }
    ?27     = { {defs={}, expr=v1319[1]} }
    ?28     = { {defs={}, expr=v1320[1]} }
    ?29     = { {defs={}, expr=v1321[1]} }
    ?30     = { {defs={}, expr=v1322[1]} }
    ?31     = { {defs={}, expr=v1323[1]} }
    ip      = { {defs={0x08048429}, expr=0x080482f0[32]} }
memory:
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32]) 3[32])} value={defs={0x08048429}, expr=8[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32]) 2[32])} value={defs={0x08048429}, expr=4[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32]) 1[32])} value={defs={0x08048429}, expr=-124[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) -4[32])} value={defs={0x08048429}, expr=46[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 3[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 2[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x08048422}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 1[32])} value={defs={0x08048422}, expr=0[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32])} value={defs={0x08048422}, expr=10[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 3[32])} value={defs={0x08048411,0x0804841e}, expr=8[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 2[32])} value={defs={0x08048411,0x0804841e}, expr=4[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32]) 1[32])} value={defs={0x08048411,0x0804841e}, expr=-124[8]}
    addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] (add[32] v1282[32] -4[32]) -8[32]) -16[32]) 4[32])} value={defs={0x08048411,0x0804841e}, expr=-128[8]}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 3[32])} value={defs={0x08048410}, expr=(extract[8] 24[32] 32[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 2[32])} value={defs={0x08048410}, expr=(extract[8] 16[32] 24[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] (add[32] v1282[32] -4[32]) 1[32])} value={defs={0x08048410}, expr=(extract[8] 8[32] 16[32] v1283[32])}
    addr={defs={0x08048410}, expr=(add[32] v1282[32] -4[32])} value={defs={0x08048410}, expr=(extract[8] 0[32] 8[32] v1283[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
registers:
    ax      = { {defs={}, expr=v1327[32]} }
    cx      = { {defs={}, expr=v1328[32]} }
    dx      = { {defs={}, expr=v1329[32]} }
    bx      = { {defs={}, expr=v1330[32]} }
    sp      = { {defs={}, expr=v1332[32]} }
    bp      = { {defs={}, expr=v1332[32]} }
    si      = { {defs={}, expr=v1333[32]} }
    di      = { {defs={}, expr=v1334[32]} }
    es      = { {defs={}, expr=v1335[16]} }
    cs      = { {defs={}, expr=v1336[16]} }
    ss      = { {defs={}, expr=v1337[16]} }
    ds      = { {defs={}, expr=v1338[16]} }
    fs      = { {defs={}, expr=v1339[16]} }
    gs      = { {defs={}, expr=v1340[16]} }
    cf      = { {defs={}, expr=v1341[1]} }
    ?1      = { {defs={}, expr=v1342[1]} }
    pf      = { {defs={}, expr=v1343[1]} }
    ?3      = { {defs={}, expr=v1344[1]} }
    af      = { {defs={}, expr=v1345[1]} }
    ?5      = { {defs={}, expr=v1346[1]} }
    zf      = { {defs={}, expr=v1347[1]} }
    sf      = { {defs={}, expr=v1348[1]} }
    tf      = { {defs={}, expr=v1349[1]} }
    if      = { {defs={}, expr=v1350[1]} }
    df      = { {defs={}, expr=v1351[1]} }
    of      = { {defs={}, expr=v1352[1]} }
    iopl0   = { {defs={}, expr=v1353[1]} }
    iopl1   = { {defs={}, expr=v1354[1]} }
    nt      = { {defs={}, expr=v1355[1]} }
    ?15     = { {defs={}, expr=v1356[1]} }
    rf      = { {defs={}, expr=v1357[1]} }
    vm      = { {defs={}, expr=v1358[1]} }
    ac      = { {defs={}, expr=v1359[1]} }
    vif     = { {defs={}, expr=v1360[1]} }
    vip     = { {defs={}, expr=v1361[1]} }
    id      = { {defs={}, expr=v1362[1]} }
    ?22     = { {defs={}, expr=v1363[1]} }
    ?23     = { {defs={}, expr=v1364[1]} }
    ?24     = { {defs={}, expr=v1365[1]} }
    ?25     = { {defs={}, expr=v1366[1]} }
    ?26     = { {defs={}, expr=v1367[1]} }
    ?27     = { {defs={}, expr=v1368[1]} }
    ?28     = { {defs={}, expr=v1369[1]} }
    ?29     = { {defs={}, expr=v1370[1]} }
    ?30     = { {defs={}, expr=v1371[1]} }
    ?31     = { {defs={}, expr=v1372[1]} }
    ip      = { {defs={0x0804842e}, expr=0x08048430[32]} }
memory:
0x8048430:xor    eax, eax
registers:
    ax      = { {defs={0x08048430}, expr=0[32]} }
    cx      = { {defs={}, expr=v1328[32]} }
    dx      = { {defs={}, expr=v1329[32]} }
    bx      = { {defs={}, expr=v1330[32]} }
    sp      = { {defs={}, expr=v1332[32]} }
    bp      = { {defs={}, expr=v1332[32]} }
    si      = { {defs={}, expr=v1333[32]} }
    di      = { {defs={}, expr=v1334[32]} }
    es      = { {defs={}, expr=v1335[16]} }
    cs      = { {defs={}, expr=v1336[16]} }
    ss      = { {defs={}, expr=v1337[16]} }
    ds      = { {defs={}, expr=v1338[16]} }
    fs      = { {defs={}, expr=v1339[16]} }
    gs      = { {defs={}, expr=v1340[16]} }
    cf      = { {defs={0x08048430}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1342[1]} }
    pf      = { {defs={0x08048430}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1344[1]} }
    af      = { {defs={}, expr=v1373[1]} }
    ?5      = { {defs={}, expr=v1346[1]} }
    zf      = { {defs={0x08048430}, expr=1[1]} }
    sf      = { {defs={0x08048430}, expr=0[1]} }
    tf      = { {defs={}, expr=v1349[1]} }
    if      = { {defs={}, expr=v1350[1]} }
    df      = { {defs={}, expr=v1351[1]} }
    of      = { {defs={0x08048430}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1353[1]} }
    iopl1   = { {defs={}, expr=v1354[1]} }
    nt      = { {defs={}, expr=v1355[1]} }
    ?15     = { {defs={}, expr=v1356[1]} }
    rf      = { {defs={}, expr=v1357[1]} }
    vm      = { {defs={}, expr=v1358[1]} }
    ac      = { {defs={}, expr=v1359[1]} }
    vif     = { {defs={}, expr=v1360[1]} }
    vip     = { {defs={}, expr=v1361[1]} }
    id      = { {defs={}, expr=v1362[1]} }
    ?22     = { {defs={}, expr=v1363[1]} }
    ?23     = { {defs={}, expr=v1364[1]} }
    ?24     = { {defs={}, expr=v1365[1]} }
    ?25     = { {defs={}, expr=v1366[1]} }
    ?26     = { {defs={}, expr=v1367[1]} }
    ?27     = { {defs={}, expr=v1368[1]} }
    ?28     = { {defs={}, expr=v1369[1]} }
    ?29     = { {defs={}, expr=v1370[1]} }
    ?30     = { {defs={}, expr=v1371[1]} }
    ?31     = { {defs={}, expr=v1372[1]} }
    ip      = { {defs={0x08048430}, expr=0x08048432[32]} }
memory:
0x8048432:pop    ebp
registers:
    ax      = { {defs={0x08048430}, expr=0[32]} }
    cx      = { {defs={}, expr=v1328[32]} }
    dx      = { {defs={}, expr=v1329[32]} }
    bx      = { {defs={}, expr=v1330[32]} }
    sp      = { {defs={0x08048432}, expr=(add[32] v1332[32] 4[32])} }
    bp      = { {defs={0x08048432}, expr=v1374[32]} }
    si      = { {defs={}, expr=v1333[32]} }
    di      = { {defs={}, expr=v1334[32]} }
    es      = { {defs={}, expr=v1335[16]} }
    cs      = { {defs={}, expr=v1336[16]} }
    ss      = { {defs={}, expr=v1337[16]} }
    ds      = { {defs={}, expr=v1338[16]} }
    fs      = { {defs={}, expr=v1339[16]} }
    gs      = { {defs={}, expr=v1340[16]} }
    cf      = { {defs={0x08048430}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1342[1]} }
    pf      = { {defs={0x08048430}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1344[1]} }
    af      = { {defs={}, expr=v1373[1]} }
    ?5      = { {defs={}, expr=v1346[1]} }
    zf      = { {defs={0x08048430}, expr=1[1]} }
    sf      = { {defs={0x08048430}, expr=0[1]} }
    tf      = { {defs={}, expr=v1349[1]} }
    if      = { {defs={}, expr=v1350[1]} }
    df      = { {defs={}, expr=v1351[1]} }
    of      = { {defs={0x08048430}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1353[1]} }
    iopl1   = { {defs={}, expr=v1354[1]} }
    nt      = { {defs={}, expr=v1355[1]} }
    ?15     = { {defs={}, expr=v1356[1]} }
    rf      = { {defs={}, expr=v1357[1]} }
    vm      = { {defs={}, expr=v1358[1]} }
    ac      = { {defs={}, expr=v1359[1]} }
    vif     = { {defs={}, expr=v1360[1]} }
    vip     = { {defs={}, expr=v1361[1]} }
    id      = { {defs={}, expr=v1362[1]} }
    ?22     = { {defs={}, expr=v1363[1]} }
    ?23     = { {defs={}, expr=v1364[1]} }
    ?24     = { {defs={}, expr=v1365[1]} }
    ?25     = { {defs={}, expr=v1366[1]} }
    ?26     = { {defs={}, expr=v1367[1]} }
    ?27     = { {defs={}, expr=v1368[1]} }
    ?28     = { {defs={}, expr=v1369[1]} }
    ?29     = { {defs={}, expr=v1370[1]} }
    ?30     = { {defs={}, expr=v1371[1]} }
    ?31     = { {defs={}, expr=v1372[1]} }
    ip      = { {defs={0x08048432}, expr=0x08048433[32]} }
memory:
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 3[32])} value={defs={0x08048432}, expr=(extract[8] 24[32] 32[32] v1374[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 2[32])} value={defs={0x08048432}, expr=(extract[8] 16[32] 24[32] v1374[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 1[32])} value={defs={0x08048432}, expr=(extract[8] 8[32] 16[32] v1374[32])}
    addr={defs={}, expr=v1332[32]} value={defs={0x08048432}, expr=(extract[8] 0[32] 8[32] v1374[32])}
0x8048433:ret    
registers:
    ax      = { {defs={0x08048430}, expr=0[32]} }
    cx      = { {defs={}, expr=v1328[32]} }
    dx      = { {defs={}, expr=v1329[32]} }
    bx      = { {defs={}, expr=v1330[32]} }
    sp      = { {defs={0x08048432,0x08048433}, expr=(add[32] (add[32] v1332[32] 4[32]) 4[32])} }
    bp      = { {defs={0x08048432}, expr=v1374[32]} }
    si      = { {defs={}, expr=v1333[32]} }
    di      = { {defs={}, expr=v1334[32]} }
    es      = { {defs={}, expr=v1335[16]} }
    cs      = { {defs={}, expr=v1336[16]} }
    ss      = { {defs={}, expr=v1337[16]} }
    ds      = { {defs={}, expr=v1338[16]} }
    fs      = { {defs={}, expr=v1339[16]} }
    gs      = { {defs={}, expr=v1340[16]} }
    cf      = { {defs={0x08048430}, expr=0[1]} }
    ?1      = { {defs={}, expr=v1342[1]} }
    pf      = { {defs={0x08048430}, expr=1[1]} }
    ?3      = { {defs={}, expr=v1344[1]} }
    af      = { {defs={}, expr=v1373[1]} }
    ?5      = { {defs={}, expr=v1346[1]} }
    zf      = { {defs={0x08048430}, expr=1[1]} }
    sf      = { {defs={0x08048430}, expr=0[1]} }
    tf      = { {defs={}, expr=v1349[1]} }
    if      = { {defs={}, expr=v1350[1]} }
    df      = { {defs={}, expr=v1351[1]} }
    of      = { {defs={0x08048430}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v1353[1]} }
    iopl1   = { {defs={}, expr=v1354[1]} }
    nt      = { {defs={}, expr=v1355[1]} }
    ?15     = { {defs={}, expr=v1356[1]} }
    rf      = { {defs={}, expr=v1357[1]} }
    vm      = { {defs={}, expr=v1358[1]} }
    ac      = { {defs={}, expr=v1359[1]} }
    vif     = { {defs={}, expr=v1360[1]} }
    vip     = { {defs={}, expr=v1361[1]} }
    id      = { {defs={}, expr=v1362[1]} }
    ?22     = { {defs={}, expr=v1363[1]} }
    ?23     = { {defs={}, expr=v1364[1]} }
    ?24     = { {defs={}, expr=v1365[1]} }
    ?25     = { {defs={}, expr=v1366[1]} }
    ?26     = { {defs={}, expr=v1367[1]} }
    ?27     = { {defs={}, expr=v1368[1]} }
    ?28     = { {defs={}, expr=v1369[1]} }
    ?29     = { {defs={}, expr=v1370[1]} }
    ?30     = { {defs={}, expr=v1371[1]} }
    ?31     = { {defs={}, expr=v1372[1]} }
    ip      = { {defs={0x08048433}, expr=v1379[32]} }
memory:
    addr={defs={0x08048432,0x08048433}, expr=(add[32] (add[32] v1332[32] 4[32]) 3[32])} value={defs={0x08048433}, expr=(extract[8] 24[32] 32[32] v1379[32])}
    addr={defs={0x08048432,0x08048433}, expr=(add[32] (add[32] v1332[32] 4[32]) 2[32])} value={defs={0x08048433}, expr=(extract[8] 16[32] 24[32] v1379[32])}
    addr={defs={0x08048432,0x08048433}, expr=(add[32] (add[32] v1332[32] 4[32]) 1[32])} value={defs={0x08048433}, expr=(extract[8] 8[32] 16[32] v1379[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 4[32])} value={defs={0x08048433}, expr=(extract[8] 0[32] 8[32] v1379[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 3[32])} value={defs={0x08048432}, expr=(extract[8] 24[32] 32[32] v1374[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 2[32])} value={defs={0x08048432}, expr=(extract[8] 16[32] 24[32] v1374[32])}
    addr={defs={0x08048432}, expr=(add[32] v1332[32] 1[32])} value={defs={0x08048432}, expr=(extract[8] 8[32] 16[32] v1374[32])}
    addr={defs={}, expr=v1332[32]} value={defs={0x08048432}, expr=(extract[8] 0[32] 8[32] v1374[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    bp      = { {defs={}, expr=v1391[32]} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={}, expr=v1400[1]} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={}, expr=v1402[1]} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={}, expr=v1404[1]} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={}, expr=v1406[1]} }
    sf      = { {defs={}, expr=v1407[1]} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={}, expr=v1411[1]} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x08048440}, expr=0x08048441[32]} }
memory:
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
0x8048441:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    bp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={}, expr=v1400[1]} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={}, expr=v1402[1]} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={}, expr=v1404[1]} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={}, expr=v1406[1]} }
    sf      = { {defs={}, expr=v1407[1]} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={}, expr=v1411[1]} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x08048441}, expr=0x08048443[32]} }
memory:
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
0x8048443:sub    esp, 0x08
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440,0x08048443}, expr=(add[32] (add[32] v1390[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x08048443}, expr=0x08048446[32]} }
memory:
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440,0x08048443}, expr=(add[32] (add[32] v1390[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x08048446}, expr=0x0804844d[32]} }
memory:
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 3[32])} value={defs={0x08048446}, expr=8[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 2[32])} value={defs={0x08048446}, expr=4[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 1[32])} value={defs={0x08048446}, expr=-123[8]}
    addr={defs={0x08048440,0x08048443}, expr=(add[32] (add[32] v1390[32] -4[32]) -8[32])} value={defs={0x08048446}, expr=-44[8]}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
0x804844d:call   0x08048300<puts@plt>
registers:
    ax      = { {defs={}, expr=v1386[32]} }
    cx      = { {defs={}, expr=v1387[32]} }
    dx      = { {defs={}, expr=v1388[32]} }
    bx      = { {defs={}, expr=v1389[32]} }
    sp      = { {defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32])} }
    bp      = { {defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} }
    si      = { {defs={}, expr=v1392[32]} }
    di      = { {defs={}, expr=v1393[32]} }
    es      = { {defs={}, expr=v1394[16]} }
    cs      = { {defs={}, expr=v1395[16]} }
    ss      = { {defs={}, expr=v1396[16]} }
    ds      = { {defs={}, expr=v1397[16]} }
    fs      = { {defs={}, expr=v1398[16]} }
    gs      = { {defs={}, expr=v1399[16]} }
    cf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1401[1]} }
    pf      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1390[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1403[1]} }
    af      = { {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1405[1]} }
    zf      = { {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1408[1]} }
    if      = { {defs={}, expr=v1409[1]} }
    df      = { {defs={}, expr=v1410[1]} }
    of      = { {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1390[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1412[1]} }
    iopl1   = { {defs={}, expr=v1413[1]} }
    nt      = { {defs={}, expr=v1414[1]} }
    ?15     = { {defs={}, expr=v1415[1]} }
    rf      = { {defs={}, expr=v1416[1]} }
    vm      = { {defs={}, expr=v1417[1]} }
    ac      = { {defs={}, expr=v1418[1]} }
    vif     = { {defs={}, expr=v1419[1]} }
    vip     = { {defs={}, expr=v1420[1]} }
    id      = { {defs={}, expr=v1421[1]} }
    ?22     = { {defs={}, expr=v1422[1]} }
    ?23     = { {defs={}, expr=v1423[1]} }
    ?24     = { {defs={}, expr=v1424[1]} }
    ?25     = { {defs={}, expr=v1425[1]} }
    ?26     = { {defs={}, expr=v1426[1]} }
    ?27     = { {defs={}, expr=v1427[1]} }
    ?28     = { {defs={}, expr=v1428[1]} }
    ?29     = { {defs={}, expr=v1429[1]} }
    ?30     = { {defs={}, expr=v1430[1]} }
    ?31     = { {defs={}, expr=v1431[1]} }
    ip      = { {defs={0x0804844d}, expr=0x08048300[32]} }
memory:
    addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32]) 3[32])} value={defs={0x0804844d}, expr=8[8]}
    addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32]) 2[32])} value={defs={0x0804844d}, expr=4[8]}
    addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32]) 1[32])} value={defs={0x0804844d}, expr=-124[8]}
    addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) -4[32])} value={defs={0x0804844d}, expr=82[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 3[32])} value={defs={0x08048446}, expr=8[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 2[32])} value={defs={0x08048446}, expr=4[8]}
    addr={defs={0x08048440,0x08048443,0x08048446}, expr=(add[32] (add[32] (add[32] v1390[32] -4[32]) -8[32]) 1[32])} value={defs={0x08048446}, expr=-123[8]}
    addr={defs={0x08048440,0x08048443}, expr=(add[32] (add[32] v1390[32] -4[32]) -8[32])} value={defs={0x08048446}, expr=-44[8]}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 3[32])} value={defs={0x08048440}, expr=(extract[8] 24[32] 32[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 2[32])} value={defs={0x08048440}, expr=(extract[8] 16[32] 24[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] (add[32] v1390[32] -4[32]) 1[32])} value={defs={0x08048440}, expr=(extract[8] 8[32] 16[32] v1391[32])}
    addr={defs={0x08048440}, expr=(add[32] v1390[32] -4[32])} value={defs={0x08048440}, expr=(extract[8] 0[32] 8[32] v1391[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
registers:
    ax      = { {defs={}, expr=v1434[32]} }
    cx      = { {defs={}, expr=v1435[32]} }
    dx      = { {defs={}, expr=v1436[32]} }
    bx      = { {defs={}, expr=v1437[32]} }
    sp      = { {defs={}, expr=v1439[32]} }
    bp      = { {defs={}, expr=v1439[32]} }
    si      = { {defs={}, expr=v1440[32]} }
    di      = { {defs={}, expr=v1441[32]} }
    es      = { {defs={}, expr=v1442[16]} }
    cs      = { {defs={}, expr=v1443[16]} }
    ss      = { {defs={}, expr=v1444[16]} }
    ds      = { {defs={}, expr=v1445[16]} }
    fs      = { {defs={}, expr=v1446[16]} }
    gs      = { {defs={}, expr=v1447[16]} }
    cf      = { {defs={}, expr=v1448[1]} }
    ?1      = { {defs={}, expr=v1449[1]} }
    pf      = { {defs={}, expr=v1450[1]} }
    ?3      = { {defs={}, expr=v1451[1]} }
    af      = { {defs={}, expr=v1452[1]} }
    ?5      = { {defs={}, expr=v1453[1]} }
    zf      = { {defs={}, expr=v1454[1]} }
    sf      = { {defs={}, expr=v1455[1]} }
    tf      = { {defs={}, expr=v1456[1]} }
    if      = { {defs={}, expr=v1457[1]} }
    df      = { {defs={}, expr=v1458[1]} }
    of      = { {defs={}, expr=v1459[1]} }
    iopl0   = { {defs={}, expr=v1460[1]} }
    iopl1   = { {defs={}, expr=v1461[1]} }
    nt      = { {defs={}, expr=v1462[1]} }
    ?15     = { {defs={}, expr=v1463[1]} }
    rf      = { {defs={}, expr=v1464[1]} }
    vm      = { {defs={}, expr=v1465[1]} }
    ac      = { {defs={}, expr=v1466[1]} }
    vif     = { {defs={}, expr=v1467[1]} }
    vip     = { {defs={}, expr=v1468[1]} }
    id      = { {defs={}, expr=v1469[1]} }
    ?22     = { {defs={}, expr=v1470[1]} }
    ?23     = { {defs={}, expr=v1471[1]} }
    ?24     = { {defs={}, expr=v1472[1]} }
    ?25     = { {defs={}, expr=v1473[1]} }
    ?26     = { {defs={}, expr=v1474[1]} }
    ?27     = { {defs={}, expr=v1475[1]} }
    ?28     = { {defs={}, expr=v1476[1]} }
    ?29     = { {defs={}, expr=v1477[1]} }
    ?30     = { {defs={}, expr=v1478[1]} }
    ?31     = { {defs={}, expr=v1479[1]} }
    ip      = { {defs={0x08048452}, expr=0x08048454[32]} }
memory:
0x8048454:pop    ebp
registers:
    ax      = { {defs={}, expr=v1434[32]} }
    cx      = { {defs={}, expr=v1435[32]} }
    dx      = { {defs={}, expr=v1436[32]} }
    bx      = { {defs={}, expr=v1437[32]} }
    sp      = { {defs={0x08048454}, expr=(add[32] v1439[32] 4[32])} }
    bp      = { {defs={0x08048454}, expr=v1480[32]} }
    si      = { {defs={}, expr=v1440[32]} }
    di      = { {defs={}, expr=v1441[32]} }
    es      = { {defs={}, expr=v1442[16]} }
    cs      = { {defs={}, expr=v1443[16]} }
    ss      = { {defs={}, expr=v1444[16]} }
    ds      = { {defs={}, expr=v1445[16]} }
    fs      = { {defs={}, expr=v1446[16]} }
    gs      = { {defs={}, expr=v1447[16]} }
    cf      = { {defs={}, expr=v1448[1]} }
    ?1      = { {defs={}, expr=v1449[1]} }
    pf      = { {defs={}, expr=v1450[1]} }
    ?3      = { {defs={}, expr=v1451[1]} }
    af      = { {defs={}, expr=v1452[1]} }
    ?5      = { {defs={}, expr=v1453[1]} }
    zf      = { {defs={}, expr=v1454[1]} }
    sf      = { {defs={}, expr=v1455[1]} }
    tf      = { {defs={}, expr=v1456[1]} }
    if      = { {defs={}, expr=v1457[1]} }
    df      = { {defs={}, expr=v1458[1]} }
    of      = { {defs={}, expr=v1459[1]} }
    iopl0   = { {defs={}, expr=v1460[1]} }
    iopl1   = { {defs={}, expr=v1461[1]} }
    nt      = { {defs={}, expr=v1462[1]} }
    ?15     = { {defs={}, expr=v1463[1]} }
    rf      = { {defs={}, expr=v1464[1]} }
    vm      = { {defs={}, expr=v1465[1]} }
    ac      = { {defs={}, expr=v1466[1]} }
    vif     = { {defs={}, expr=v1467[1]} }
    vip     = { {defs={}, expr=v1468[1]} }
    id      = { {defs={}, expr=v1469[1]} }
    ?22     = { {defs={}, expr=v1470[1]} }
    ?23     = { {defs={}, expr=v1471[1]} }
    ?24     = { {defs={}, expr=v1472[1]} }
    ?25     = { {defs={}, expr=v1473[1]} }
    ?26     = { {defs={}, expr=v1474[1]} }
    ?27     = { {defs={}, expr=v1475[1]} }
    ?28     = { {defs={}, expr=v1476[1]} }
    ?29     = { {defs={}, expr=v1477[1]} }
    ?30     = { {defs={}, expr=v1478[1]} }
    ?31     = { {defs={}, expr=v1479[1]} }
    ip      = { {defs={0x08048454}, expr=0x08048455[32]} }
memory:
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 3[32])} value={defs={0x08048454}, expr=(extract[8] 24[32] 32[32] v1480[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 2[32])} value={defs={0x08048454}, expr=(extract[8] 16[32] 24[32] v1480[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 1[32])} value={defs={0x08048454}, expr=(extract[8] 8[32] 16[32] v1480[32])}
    addr={defs={}, expr=v1439[32]} value={defs={0x08048454}, expr=(extract[8] 0[32] 8[32] v1480[32])}
0x8048455:ret    
registers:
    ax      = { {defs={}, expr=v1434[32]} }
    cx      = { {defs={}, expr=v1435[32]} }
    dx      = { {defs={}, expr=v1436[32]} }
    bx      = { {defs={}, expr=v1437[32]} }
    sp      = { {defs={0x08048454,0x08048455}, expr=(add[32] (add[32] v1439[32] 4[32]) 4[32])} }
    bp      = { {defs={0x08048454}, expr=v1480[32]} }
    si      = { {defs={}, expr=v1440[32]} }
    di      = { {defs={}, expr=v1441[32]} }
    es      = { {defs={}, expr=v1442[16]} }
    cs      = { {defs={}, expr=v1443[16]} }
    ss      = { {defs={}, expr=v1444[16]} }
    ds      = { {defs={}, expr=v1445[16]} }
    fs      = { {defs={}, expr=v1446[16]} }
    gs      = { {defs={}, expr=v1447[16]} }
    cf      = { {defs={}, expr=v1448[1]} }
    ?1      = { {defs={}, expr=v1449[1]} }
    pf      = { {defs={}, expr=v1450[1]} }
    ?3      = { {defs={}, expr=v1451[1]} }
    af      = { {defs={}, expr=v1452[1]} }
    ?5      = { {defs={}, expr=v1453[1]} }
    zf      = { {defs={}, expr=v1454[1]} }
    sf      = { {defs={}, expr=v1455[1]} }
    tf      = { {defs={}, expr=v1456[1]} }
    if      = { {defs={}, expr=v1457[1]} }
    df      = { {defs={}, expr=v1458[1]} }
    of      = { {defs={}, expr=v1459[1]} }
    iopl0   = { {defs={}, expr=v1460[1]} }
    iopl1   = { {defs={}, expr=v1461[1]} }
    nt      = { {defs={}, expr=v1462[1]} }
    ?15     = { {defs={}, expr=v1463[1]} }
    rf      = { {defs={}, expr=v1464[1]} }
    vm      = { {defs={}, expr=v1465[1]} }
    ac      = { {defs={}, expr=v1466[1]} }
    vif     = { {defs={}, expr=v1467[1]} }
    vip     = { {defs={}, expr=v1468[1]} }
    id      = { {defs={}, expr=v1469[1]} }
    ?22     = { {defs={}, expr=v1470[1]} }
    ?23     = { {defs={}, expr=v1471[1]} }
    ?24     = { {defs={}, expr=v1472[1]} }
    ?25     = { {defs={}, expr=v1473[1]} }
    ?26     = { {defs={}, expr=v1474[1]} }
    ?27     = { {defs={}, expr=v1475[1]} }
    ?28     = { {defs={}, expr=v1476[1]} }
    ?29     = { {defs={}, expr=v1477[1]} }
    ?30     = { {defs={}, expr=v1478[1]} }
    ?31     = { {defs={}, expr=v1479[1]} }
    ip      = { {defs={0x08048455}, expr=v1485[32]} }
memory:
    addr={defs={0x08048454,0x08048455}, expr=(add[32] (add[32] v1439[32] 4[32]) 3[32])} value={defs={0x08048455}, expr=(extract[8] 24[32] 32[32] v1485[32])}
    addr={defs={0x08048454,0x08048455}, expr=(add[32] (add[32] v1439[32] 4[32]) 2[32])} value={defs={0x08048455}, expr=(extract[8] 16[32] 24[32] v1485[32])}
    addr={defs={0x08048454,0x08048455}, expr=(add[32] (add[32] v1439[32] 4[32]) 1[32])} value={defs={0x08048455}, expr=(extract[8] 8[32] 16[32] v1485[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 4[32])} value={defs={0x08048455}, expr=(extract[8] 0[32] 8[32] v1485[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 3[32])} value={defs={0x08048454}, expr=(extract[8] 24[32] 32[32] v1480[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 2[32])} value={defs={0x08048454}, expr=(extract[8] 16[32] 24[32] v1480[32])}
    addr={defs={0x08048454}, expr=(add[32] v1439[32] 1[32])} value={defs={0x08048454}, expr=(extract[8] 8[32] 16[32] v1480[32])}
    addr={defs={}, expr=v1439[32]} value={defs={0x08048454}, expr=(extract[8] 0[32] 8[32] v1480[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    bp      = { {defs={}, expr=v1497[32]} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={}, expr=v1506[1]} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={}, expr=v1508[1]} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={}, expr=v1510[1]} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={}, expr=v1512[1]} }
    sf      = { {defs={}, expr=v1513[1]} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={}, expr=v1517[1]} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x08048460}, expr=0x08048461[32]} }
memory:
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
0x8048461:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    bp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={}, expr=v1506[1]} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={}, expr=v1508[1]} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={}, expr=v1510[1]} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={}, expr=v1512[1]} }
    sf      = { {defs={}, expr=v1513[1]} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={}, expr=v1517[1]} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x08048461}, expr=0x08048463[32]} }
memory:
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
0x8048463:sub    esp, 0x08
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460,0x08048463}, expr=(add[32] (add[32] v1496[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x08048463}, expr=0x08048466[32]} }
memory:
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460,0x08048463}, expr=(add[32] (add[32] v1496[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x08048466}, expr=0x0804846d[32]} }
memory:
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 3[32])} value={defs={0x08048466}, expr=8[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 2[32])} value={defs={0x08048466}, expr=4[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 1[32])} value={defs={0x08048466}, expr=-123[8]}
    addr={defs={0x08048460,0x08048463}, expr=(add[32] (add[32] v1496[32] -4[32]) -8[32])} value={defs={0x08048466}, expr=-44[8]}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
0x804846d:call   0x08048300<puts@plt>
registers:
    ax      = { {defs={}, expr=v1492[32]} }
    cx      = { {defs={}, expr=v1493[32]} }
    dx      = { {defs={}, expr=v1494[32]} }
    bx      = { {defs={}, expr=v1495[32]} }
    sp      = { {defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32])} }
    bp      = { {defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} }
    si      = { {defs={}, expr=v1498[32]} }
    di      = { {defs={}, expr=v1499[32]} }
    es      = { {defs={}, expr=v1500[16]} }
    cs      = { {defs={}, expr=v1501[16]} }
    ss      = { {defs={}, expr=v1502[16]} }
    ds      = { {defs={}, expr=v1503[16]} }
    fs      = { {defs={}, expr=v1504[16]} }
    gs      = { {defs={}, expr=v1505[16]} }
    cf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1507[1]} }
    pf      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1496[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1509[1]} }
    af      = { {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1511[1]} }
    zf      = { {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1514[1]} }
    if      = { {defs={}, expr=v1515[1]} }
    df      = { {defs={}, expr=v1516[1]} }
    of      = { {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1496[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1518[1]} }
    iopl1   = { {defs={}, expr=v1519[1]} }
    nt      = { {defs={}, expr=v1520[1]} }
    ?15     = { {defs={}, expr=v1521[1]} }
    rf      = { {defs={}, expr=v1522[1]} }
    vm      = { {defs={}, expr=v1523[1]} }
    ac      = { {defs={}, expr=v1524[1]} }
    vif     = { {defs={}, expr=v1525[1]} }
    vip     = { {defs={}, expr=v1526[1]} }
    id      = { {defs={}, expr=v1527[1]} }
    ?22     = { {defs={}, expr=v1528[1]} }
    ?23     = { {defs={}, expr=v1529[1]} }
    ?24     = { {defs={}, expr=v1530[1]} }
    ?25     = { {defs={}, expr=v1531[1]} }
    ?26     = { {defs={}, expr=v1532[1]} }
    ?27     = { {defs={}, expr=v1533[1]} }
    ?28     = { {defs={}, expr=v1534[1]} }
    ?29     = { {defs={}, expr=v1535[1]} }
    ?30     = { {defs={}, expr=v1536[1]} }
    ?31     = { {defs={}, expr=v1537[1]} }
    ip      = { {defs={0x0804846d}, expr=0x08048300[32]} }
memory:
    addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32]) 3[32])} value={defs={0x0804846d}, expr=8[8]}
    addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32]) 2[32])} value={defs={0x0804846d}, expr=4[8]}
    addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32]) 1[32])} value={defs={0x0804846d}, expr=-124[8]}
    addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) -4[32])} value={defs={0x0804846d}, expr=114[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 3[32])} value={defs={0x08048466}, expr=8[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 2[32])} value={defs={0x08048466}, expr=4[8]}
    addr={defs={0x08048460,0x08048463,0x08048466}, expr=(add[32] (add[32] (add[32] v1496[32] -4[32]) -8[32]) 1[32])} value={defs={0x08048466}, expr=-123[8]}
    addr={defs={0x08048460,0x08048463}, expr=(add[32] (add[32] v1496[32] -4[32]) -8[32])} value={defs={0x08048466}, expr=-44[8]}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 3[32])} value={defs={0x08048460}, expr=(extract[8] 24[32] 32[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 2[32])} value={defs={0x08048460}, expr=(extract[8] 16[32] 24[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] (add[32] v1496[32] -4[32]) 1[32])} value={defs={0x08048460}, expr=(extract[8] 8[32] 16[32] v1497[32])}
    addr={defs={0x08048460}, expr=(add[32] v1496[32] -4[32])} value={defs={0x08048460}, expr=(extract[8] 0[32] 8[32] v1497[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
registers:
    ax      = { {defs={}, expr=v1540[32]} }
    cx      = { {defs={}, expr=v1541[32]} }
    dx      = { {defs={}, expr=v1542[32]} }
    bx      = { {defs={}, expr=v1543[32]} }
    sp      = { {defs={}, expr=v1544[32]} }
    bp      = { {defs={}, expr=v1545[32]} }
    si      = { {defs={}, expr=v1546[32]} }
    di      = { {defs={}, expr=v1547[32]} }
    es      = { {defs={}, expr=v1548[16]} }
    cs      = { {defs={}, expr=v1549[16]} }
    ss      = { {defs={}, expr=v1550[16]} }
    ds      = { {defs={}, expr=v1551[16]} }
    fs      = { {defs={}, expr=v1552[16]} }
    gs      = { {defs={}, expr=v1553[16]} }
    cf      = { {defs={}, expr=v1554[1]} }
    ?1      = { {defs={}, expr=v1555[1]} }
    pf      = { {defs={}, expr=v1556[1]} }
    ?3      = { {defs={}, expr=v1557[1]} }
    af      = { {defs={}, expr=v1558[1]} }
    ?5      = { {defs={}, expr=v1559[1]} }
    zf      = { {defs={}, expr=v1560[1]} }
    sf      = { {defs={}, expr=v1561[1]} }
    tf      = { {defs={}, expr=v1562[1]} }
    if      = { {defs={}, expr=v1563[1]} }
    df      = { {defs={}, expr=v1564[1]} }
    of      = { {defs={}, expr=v1565[1]} }
    iopl0   = { {defs={}, expr=v1566[1]} }
    iopl1   = { {defs={}, expr=v1567[1]} }
    nt      = { {defs={}, expr=v1568[1]} }
    ?15     = { {defs={}, expr=v1569[1]} }
    rf      = { {defs={}, expr=v1570[1]} }
    vm      = { {defs={}, expr=v1571[1]} }
    ac      = { {defs={}, expr=v1572[1]} }
    vif     = { {defs={}, expr=v1573[1]} }
    vip     = { {defs={}, expr=v1574[1]} }
    id      = { {defs={}, expr=v1575[1]} }
    ?22     = { {defs={}, expr=v1576[1]} }
    ?23     = { {defs={}, expr=v1577[1]} }
    ?24     = { {defs={}, expr=v1578[1]} }
    ?25     = { {defs={}, expr=v1579[1]} }
    ?26     = { {defs={}, expr=v1580[1]} }
    ?27     = { {defs={}, expr=v1581[1]} }
    ?28     = { {defs={}, expr=v1582[1]} }
    ?29     = { {defs={}, expr=v1583[1]} }
    ?30     = { {defs={}, expr=v1584[1]} }
    ?31     = { {defs={}, expr=v1585[1]} }
    ip      = { {defs={0x08048472}, expr=0x08048479[32]} }
memory:
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 3[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 2[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 1[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={}, expr=v1544[32]} value={defs={0x08048472}, expr=0[8]}
0x8048479:call   0x08048320<_exit@plt>
registers:
    ax      = { {defs={}, expr=v1540[32]} }
    cx      = { {defs={}, expr=v1541[32]} }
    dx      = { {defs={}, expr=v1542[32]} }
    bx      = { {defs={}, expr=v1543[32]} }
    sp      = { {defs={0x08048479}, expr=(add[32] v1544[32] -4[32])} }
    bp      = { {defs={}, expr=v1545[32]} }
    si      = { {defs={}, expr=v1546[32]} }
    di      = { {defs={}, expr=v1547[32]} }
    es      = { {defs={}, expr=v1548[16]} }
    cs      = { {defs={}, expr=v1549[16]} }
    ss      = { {defs={}, expr=v1550[16]} }
    ds      = { {defs={}, expr=v1551[16]} }
    fs      = { {defs={}, expr=v1552[16]} }
    gs      = { {defs={}, expr=v1553[16]} }
    cf      = { {defs={}, expr=v1554[1]} }
    ?1      = { {defs={}, expr=v1555[1]} }
    pf      = { {defs={}, expr=v1556[1]} }
    ?3      = { {defs={}, expr=v1557[1]} }
    af      = { {defs={}, expr=v1558[1]} }
    ?5      = { {defs={}, expr=v1559[1]} }
    zf      = { {defs={}, expr=v1560[1]} }
    sf      = { {defs={}, expr=v1561[1]} }
    tf      = { {defs={}, expr=v1562[1]} }
    if      = { {defs={}, expr=v1563[1]} }
    df      = { {defs={}, expr=v1564[1]} }
    of      = { {defs={}, expr=v1565[1]} }
    iopl0   = { {defs={}, expr=v1566[1]} }
    iopl1   = { {defs={}, expr=v1567[1]} }
    nt      = { {defs={}, expr=v1568[1]} }
    ?15     = { {defs={}, expr=v1569[1]} }
    rf      = { {defs={}, expr=v1570[1]} }
    vm      = { {defs={}, expr=v1571[1]} }
    ac      = { {defs={}, expr=v1572[1]} }
    vif     = { {defs={}, expr=v1573[1]} }
    vip     = { {defs={}, expr=v1574[1]} }
    id      = { {defs={}, expr=v1575[1]} }
    ?22     = { {defs={}, expr=v1576[1]} }
    ?23     = { {defs={}, expr=v1577[1]} }
    ?24     = { {defs={}, expr=v1578[1]} }
    ?25     = { {defs={}, expr=v1579[1]} }
    ?26     = { {defs={}, expr=v1580[1]} }
    ?27     = { {defs={}, expr=v1581[1]} }
    ?28     = { {defs={}, expr=v1582[1]} }
    ?29     = { {defs={}, expr=v1583[1]} }
    ?30     = { {defs={}, expr=v1584[1]} }
    ?31     = { {defs={}, expr=v1585[1]} }
    ip      = { {defs={0x08048479}, expr=0x08048320[32]} }
memory:
    addr={defs={0x08048479}, expr=(add[32] (add[32] v1544[32] -4[32]) 3[32])} value={defs={0x08048479}, expr=8[8]}
    addr={defs={0x08048479}, expr=(add[32] (add[32] v1544[32] -4[32]) 2[32])} value={defs={0x08048479}, expr=4[8]}
    addr={defs={0x08048479}, expr=(add[32] (add[32] v1544[32] -4[32]) 1[32])} value={defs={0x08048479}, expr=-124[8]}
    addr={defs={0x08048479}, expr=(add[32] v1544[32] -4[32])} value={defs={0x08048479}, expr=126[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 3[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 2[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={0x08048472}, expr=(add[32] v1544[32] 1[32])} value={defs={0x08048472}, expr=0[8]}
    addr={defs={}, expr=v1544[32]} value={defs={0x08048472}, expr=0[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    bp      = { {defs={}, expr=v1593[32]} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={}, expr=v1602[1]} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={}, expr=v1604[1]} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={}, expr=v1606[1]} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={}, expr=v1608[1]} }
    sf      = { {defs={}, expr=v1609[1]} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={}, expr=v1613[1]} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048480}, expr=0x08048481[32]} }
memory:
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
0x8048481:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={}, expr=v1602[1]} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={}, expr=v1604[1]} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={}, expr=v1606[1]} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={}, expr=v1608[1]} }
    sf      = { {defs={}, expr=v1609[1]} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={}, expr=v1613[1]} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048481}, expr=0x08048483[32]} }
memory:
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
0x8048483:sub    esp, 0x08
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1592[32] -4[32]) -8[32])))))))} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={0x08048480,0x08048483}, expr=(zerop[1] (add[32] (add[32] v1592[32] -4[32]) -8[32]))} }
    sf      = { {defs={0x08048480,0x08048483}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]))} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={0x08048480,0x08048483}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048483}, expr=0x08048486[32]} }
memory:
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={0x08048486}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33])))))} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={0x08048486}, expr=(zerop[1] (add[32] v1634[32] 1[32]))} }
    sf      = { {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v1634[32] 1[32]))} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048486}, expr=0x0804848c[32]} }
memory:
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] v1634[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={0x08048486}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33])))))} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={0x08048486}, expr=(zerop[1] (add[32] v1634[32] 1[32]))} }
    sf      = { {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v1634[32] 1[32]))} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x0804848c}, expr=0x08048493[32]} }
memory:
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 3[32])} value={defs={0x0804848c}, expr=8[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 2[32])} value={defs={0x0804848c}, expr=4[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 1[32])} value={defs={0x0804848c}, expr=-123[8]}
    addr={defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} value={defs={0x0804848c}, expr=-44[8]}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] v1634[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
0x8048493:call   0x08048300<puts@plt>
registers:
    ax      = { {defs={}, expr=v1588[32]} }
    cx      = { {defs={}, expr=v1589[32]} }
    dx      = { {defs={}, expr=v1590[32]} }
    bx      = { {defs={}, expr=v1591[32]} }
    sp      = { {defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32])} }
    bp      = { {defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} }
    si      = { {defs={}, expr=v1594[32]} }
    di      = { {defs={}, expr=v1595[32]} }
    es      = { {defs={}, expr=v1596[16]} }
    cs      = { {defs={}, expr=v1597[16]} }
    ss      = { {defs={}, expr=v1598[16]} }
    ds      = { {defs={}, expr=v1599[16]} }
    fs      = { {defs={}, expr=v1600[16]} }
    gs      = { {defs={}, expr=v1601[16]} }
    cf      = { {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1592[32] -4[32])) 4294967288[33]))))))} }
    ?1      = { {defs={}, expr=v1603[1]} }
    pf      = { {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v1605[1]} }
    af      = { {defs={0x08048486}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33])))))} }
    ?5      = { {defs={}, expr=v1607[1]} }
    zf      = { {defs={0x08048486}, expr=(zerop[1] (add[32] v1634[32] 1[32]))} }
    sf      = { {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v1634[32] 1[32]))} }
    tf      = { {defs={}, expr=v1610[1]} }
    if      = { {defs={}, expr=v1611[1]} }
    df      = { {defs={}, expr=v1612[1]} }
    of      = { {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1634[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1634[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1614[1]} }
    iopl1   = { {defs={}, expr=v1615[1]} }
    nt      = { {defs={}, expr=v1616[1]} }
    ?15     = { {defs={}, expr=v1617[1]} }
    rf      = { {defs={}, expr=v1618[1]} }
    vm      = { {defs={}, expr=v1619[1]} }
    ac      = { {defs={}, expr=v1620[1]} }
    vif     = { {defs={}, expr=v1621[1]} }
    vip     = { {defs={}, expr=v1622[1]} }
    id      = { {defs={}, expr=v1623[1]} }
    ?22     = { {defs={}, expr=v1624[1]} }
    ?23     = { {defs={}, expr=v1625[1]} }
    ?24     = { {defs={}, expr=v1626[1]} }
    ?25     = { {defs={}, expr=v1627[1]} }
    ?26     = { {defs={}, expr=v1628[1]} }
    ?27     = { {defs={}, expr=v1629[1]} }
    ?28     = { {defs={}, expr=v1630[1]} }
    ?29     = { {defs={}, expr=v1631[1]} }
    ?30     = { {defs={}, expr=v1632[1]} }
    ?31     = { {defs={}, expr=v1633[1]} }
    ip      = { {defs={0x08048493}, expr=0x08048300[32]} }
memory:
    addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32]) 3[32])} value={defs={0x08048493}, expr=8[8]}
    addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32]) 2[32])} value={defs={0x08048493}, expr=4[8]}
    addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32]) 1[32])} value={defs={0x08048493}, expr=-124[8]}
    addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) -4[32])} value={defs={0x08048493}, expr=-104[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 3[32])} value={defs={0x0804848c}, expr=8[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 2[32])} value={defs={0x0804848c}, expr=4[8]}
    addr={defs={0x08048480,0x08048483,0x0804848c}, expr=(add[32] (add[32] (add[32] v1592[32] -4[32]) -8[32]) 1[32])} value={defs={0x0804848c}, expr=-123[8]}
    addr={defs={0x08048480,0x08048483}, expr=(add[32] (add[32] v1592[32] -4[32]) -8[32])} value={defs={0x0804848c}, expr=-44[8]}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v1634[32] 1[32]))}
    addr={defs={0x08048486}, expr=0x080496fb[32]} value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496fa[32]} value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f9[32]} value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] v1634[32])}
    addr={defs={0x08048486}, expr=0x080496f8[32]} value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] v1634[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 3[32])} value={defs={0x08048480}, expr=(extract[8] 24[32] 32[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 2[32])} value={defs={0x08048480}, expr=(extract[8] 16[32] 24[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] (add[32] v1592[32] -4[32]) 1[32])} value={defs={0x08048480}, expr=(extract[8] 8[32] 16[32] v1593[32])}
    addr={defs={0x08048480}, expr=(add[32] v1592[32] -4[32])} value={defs={0x08048480}, expr=(extract[8] 0[32] 8[32] v1593[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
registers:
    ax      = { {defs={}, expr=v1641[32]} }
    cx      = { {defs={}, expr=v1642[32]} }
    dx      = { {defs={}, expr=v1643[32]} }
    bx      = { {defs={}, expr=v1644[32]} }
    sp      = { {defs={}, expr=v1645[32]} }
    bp      = { {defs={}, expr=v1646[32]} }
    si      = { {defs={}, expr=v1647[32]} }
    di      = { {defs={}, expr=v1648[32]} }
    es      = { {defs={}, expr=v1649[16]} }
    cs      = { {defs={}, expr=v1650[16]} }
    ss      = { {defs={}, expr=v1651[16]} }
    ds      = { {defs={}, expr=v1652[16]} }
    fs      = { {defs={}, expr=v1653[16]} }
    gs      = { {defs={}, expr=v1654[16]} }
    cf      = { {defs={}, expr=v1655[1]} }
    ?1      = { {defs={}, expr=v1656[1]} }
    pf      = { {defs={}, expr=v1657[1]} }
    ?3      = { {defs={}, expr=v1658[1]} }
    af      = { {defs={}, expr=v1659[1]} }
    ?5      = { {defs={}, expr=v1660[1]} }
    zf      = { {defs={}, expr=v1661[1]} }
    sf      = { {defs={}, expr=v1662[1]} }
    tf      = { {defs={}, expr=v1663[1]} }
    if      = { {defs={}, expr=v1664[1]} }
    df      = { {defs={}, expr=v1665[1]} }
    of      = { {defs={}, expr=v1666[1]} }
    iopl0   = { {defs={}, expr=v1667[1]} }
    iopl1   = { {defs={}, expr=v1668[1]} }
    nt      = { {defs={}, expr=v1669[1]} }
    ?15     = { {defs={}, expr=v1670[1]} }
    rf      = { {defs={}, expr=v1671[1]} }
    vm      = { {defs={}, expr=v1672[1]} }
    ac      = { {defs={}, expr=v1673[1]} }
    vif     = { {defs={}, expr=v1674[1]} }
    vip     = { {defs={}, expr=v1675[1]} }
    id      = { {defs={}, expr=v1676[1]} }
    ?22     = { {defs={}, expr=v1677[1]} }
    ?23     = { {defs={}, expr=v1678[1]} }
    ?24     = { {defs={}, expr=v1679[1]} }
    ?25     = { {defs={}, expr=v1680[1]} }
    ?26     = { {defs={}, expr=v1681[1]} }
    ?27     = { {defs={}, expr=v1682[1]} }
    ?28     = { {defs={}, expr=v1683[1]} }
    ?29     = { {defs={}, expr=v1684[1]} }
    ?30     = { {defs={}, expr=v1685[1]} }
    ?31     = { {defs={}, expr=v1686[1]} }
    ip      = { {defs={0x08048498}, expr=0x0804849f[32]} }
memory:
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 3[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 2[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 1[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={}, expr=v1645[32]} value={defs={0x08048498}, expr=0[8]}
0x804849f:call   0x08048320<_exit@plt>
registers:
    ax      = { {defs={}, expr=v1641[32]} }
    cx      = { {defs={}, expr=v1642[32]} }
    dx      = { {defs={}, expr=v1643[32]} }
    bx      = { {defs={}, expr=v1644[32]} }
    sp      = { {defs={0x0804849f}, expr=(add[32] v1645[32] -4[32])} }
    bp      = { {defs={}, expr=v1646[32]} }
    si      = { {defs={}, expr=v1647[32]} }
    di      = { {defs={}, expr=v1648[32]} }
    es      = { {defs={}, expr=v1649[16]} }
    cs      = { {defs={}, expr=v1650[16]} }
    ss      = { {defs={}, expr=v1651[16]} }
    ds      = { {defs={}, expr=v1652[16]} }
    fs      = { {defs={}, expr=v1653[16]} }
    gs      = { {defs={}, expr=v1654[16]} }
    cf      = { {defs={}, expr=v1655[1]} }
    ?1      = { {defs={}, expr=v1656[1]} }
    pf      = { {defs={}, expr=v1657[1]} }
    ?3      = { {defs={}, expr=v1658[1]} }
    af      = { {defs={}, expr=v1659[1]} }
    ?5      = { {defs={}, expr=v1660[1]} }
    zf      = { {defs={}, expr=v1661[1]} }
    sf      = { {defs={}, expr=v1662[1]} }
    tf      = { {defs={}, expr=v1663[1]} }
    if      = { {defs={}, expr=v1664[1]} }
    df      = { {defs={}, expr=v1665[1]} }
    of      = { {defs={}, expr=v1666[1]} }
    iopl0   = { {defs={}, expr=v1667[1]} }
    iopl1   = { {defs={}, expr=v1668[1]} }
    nt      = { {defs={}, expr=v1669[1]} }
    ?15     = { {defs={}, expr=v1670[1]} }
    rf      = { {defs={}, expr=v1671[1]} }
    vm      = { {defs={}, expr=v1672[1]} }
    ac      = { {defs={}, expr=v1673[1]} }
    vif     = { {defs={}, expr=v1674[1]} }
    vip     = { {defs={}, expr=v1675[1]} }
    id      = { {defs={}, expr=v1676[1]} }
    ?22     = { {defs={}, expr=v1677[1]} }
    ?23     = { {defs={}, expr=v1678[1]} }
    ?24     = { {defs={}, expr=v1679[1]} }
    ?25     = { {defs={}, expr=v1680[1]} }
    ?26     = { {defs={}, expr=v1681[1]} }
    ?27     = { {defs={}, expr=v1682[1]} }
    ?28     = { {defs={}, expr=v1683[1]} }
    ?29     = { {defs={}, expr=v1684[1]} }
    ?30     = { {defs={}, expr=v1685[1]} }
    ?31     = { {defs={}, expr=v1686[1]} }
    ip      = { {defs={0x0804849f}, expr=0x08048320[32]} }
memory:
    addr={defs={0x0804849f}, expr=(add[32] (add[32] v1645[32] -4[32]) 3[32])} value={defs={0x0804849f}, expr=8[8]}
    addr={defs={0x0804849f}, expr=(add[32] (add[32] v1645[32] -4[32]) 2[32])} value={defs={0x0804849f}, expr=4[8]}
    addr={defs={0x0804849f}, expr=(add[32] (add[32] v1645[32] -4[32]) 1[32])} value={defs={0x0804849f}, expr=-124[8]}
    addr={defs={0x0804849f}, expr=(add[32] v1645[32] -4[32])} value={defs={0x0804849f}, expr=-92[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 3[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 2[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={0x08048498}, expr=(add[32] v1645[32] 1[32])} value={defs={0x08048498}, expr=0[8]}
    addr={defs={}, expr=v1645[32]} value={defs={0x08048498}, expr=0[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    bp      = { {defs={}, expr=v1694[32]} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b0}, expr=0x080484b1[32]} }
memory:
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
0x80484b1:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b1}, expr=0x080484b3[32]} }
memory:
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
0x80484b3:push   edi
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b3}, expr=0x080484b4[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
0x80484b4:push   esi
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b4}, expr=0x080484b5[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b4}, expr=(extract[8] 24[32] 32[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b4}, expr=(extract[8] 16[32] 24[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b4}, expr=(extract[8] 8[32] 16[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} value={defs={0x080484b4}, expr=(extract[8] 0[32] 8[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
0x80484b5:push   ebx
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={}, expr=v1703[1]} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={}, expr=v1705[1]} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={}, expr=v1707[1]} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={}, expr=v1709[1]} }
    sf      = { {defs={}, expr=v1710[1]} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={}, expr=v1714[1]} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b5}, expr=0x080484b6[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b5}, expr=(extract[8] 24[32] 32[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b5}, expr=(extract[8] 16[32] 24[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b5}, expr=(extract[8] 8[32] 16[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x080484b5}, expr=(extract[8] 0[32] 8[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b4}, expr=(extract[8] 24[32] 32[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b4}, expr=(extract[8] 16[32] 24[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b4}, expr=(extract[8] 8[32] 16[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} value={defs={0x080484b4}, expr=(extract[8] 0[32] 8[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
0x80484b6:sub    esp, 0x0c
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    sf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b6}, expr=0x080484b9[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b5}, expr=(extract[8] 24[32] 32[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b5}, expr=(extract[8] 16[32] 24[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b5}, expr=(extract[8] 8[32] 16[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x080484b5}, expr=(extract[8] 0[32] 8[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b4}, expr=(extract[8] 24[32] 32[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b4}, expr=(extract[8] 16[32] 24[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b4}, expr=(extract[8] 8[32] 16[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} value={defs={0x080484b4}, expr=(extract[8] 0[32] 8[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
0x80484b9:call   0x080484be<<Insn>>
registers:
    ax      = { {defs={}, expr=v1689[32]} }
    cx      = { {defs={}, expr=v1690[32]} }
    dx      = { {defs={}, expr=v1691[32]} }
    bx      = { {defs={}, expr=v1692[32]} }
    sp      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])} }
    bp      = { {defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} }
    si      = { {defs={}, expr=v1695[32]} }
    di      = { {defs={}, expr=v1696[32]} }
    es      = { {defs={}, expr=v1697[16]} }
    cs      = { {defs={}, expr=v1698[16]} }
    ss      = { {defs={}, expr=v1699[16]} }
    ds      = { {defs={}, expr=v1700[16]} }
    fs      = { {defs={}, expr=v1701[16]} }
    gs      = { {defs={}, expr=v1702[16]} }
    cf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?1      = { {defs={}, expr=v1704[1]} }
    pf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))} }
    ?3      = { {defs={}, expr=v1706[1]} }
    af      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?5      = { {defs={}, expr=v1708[1]} }
    zf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    sf      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    tf      = { {defs={}, expr=v1711[1]} }
    if      = { {defs={}, expr=v1712[1]} }
    df      = { {defs={}, expr=v1713[1]} }
    of      = { {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    iopl0   = { {defs={}, expr=v1715[1]} }
    iopl1   = { {defs={}, expr=v1716[1]} }
    nt      = { {defs={}, expr=v1717[1]} }
    ?15     = { {defs={}, expr=v1718[1]} }
    rf      = { {defs={}, expr=v1719[1]} }
    vm      = { {defs={}, expr=v1720[1]} }
    ac      = { {defs={}, expr=v1721[1]} }
    vif     = { {defs={}, expr=v1722[1]} }
    vip     = { {defs={}, expr=v1723[1]} }
    id      = { {defs={}, expr=v1724[1]} }
    ?22     = { {defs={}, expr=v1725[1]} }
    ?23     = { {defs={}, expr=v1726[1]} }
    ?24     = { {defs={}, expr=v1727[1]} }
    ?25     = { {defs={}, expr=v1728[1]} }
    ?26     = { {defs={}, expr=v1729[1]} }
    ?27     = { {defs={}, expr=v1730[1]} }
    ?28     = { {defs={}, expr=v1731[1]} }
    ?29     = { {defs={}, expr=v1732[1]} }
    ?30     = { {defs={}, expr=v1733[1]} }
    ?31     = { {defs={}, expr=v1734[1]} }
    ip      = { {defs={0x080484b9}, expr=0x080484be[32]} }
memory:
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 3[32])} value={defs={0x080484b9}, expr=8[8]}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 2[32])} value={defs={0x080484b9}, expr=4[8]}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 1[32])} value={defs={0x080484b9}, expr=-124[8]}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])} value={defs={0x080484b9}, expr=-66[8]}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b5}, expr=(extract[8] 24[32] 32[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b5}, expr=(extract[8] 16[32] 24[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b5}, expr=(extract[8] 8[32] 16[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x080484b5}, expr=(extract[8] 0[32] 8[32] v1692[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080484b4}, expr=(extract[8] 24[32] 32[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080484b4}, expr=(extract[8] 16[32] 24[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080484b4}, expr=(extract[8] 8[32] 16[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) -4[32])} value={defs={0x080484b4}, expr=(extract[8] 0[32] 8[32] v1695[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 3[32])} value={defs={0x080484b3}, expr=(extract[8] 24[32] 32[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 2[32])} value={defs={0x080484b3}, expr=(extract[8] 16[32] 24[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] (add[32] v1693[32] -4[32]) -4[32]) 1[32])} value={defs={0x080484b3}, expr=(extract[8] 8[32] 16[32] v1696[32])}
    addr={defs={0x080484b0,0x080484b3}, expr=(add[32] (add[32] v1693[32] -4[32]) -4[32])} value={defs={0x080484b3}, expr=(extract[8] 0[32] 8[32] v1696[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 3[32])} value={defs={0x080484b0}, expr=(extract[8] 24[32] 32[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 2[32])} value={defs={0x080484b0}, expr=(extract[8] 16[32] 24[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] (add[32] v1693[32] -4[32]) 1[32])} value={defs={0x080484b0}, expr=(extract[8] 8[32] 16[32] v1694[32])}
    addr={defs={0x080484b0}, expr=(add[32] v1693[32] -4[32])} value={defs={0x080484b0}, expr=(extract[8] 0[32] 8[32] v1694[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
registers:
    ax      = { {defs={}, expr=v1737[32]} }
    cx      = { {defs={}, expr=v1738[32]} }
    dx      = { {defs={}, expr=v1739[32]} }
    bx      = { {defs={0x080484be}, expr=v1783[32]} }
    sp      = { {defs={0x080484be}, expr=(add[32] v1741[32] 4[32])} }
    bp      = { {defs={}, expr=v1742[32]} }
    si      = { {defs={}, expr=v1743[32]} }
    di      = { {defs={}, expr=v1744[32]} }
    es      = { {defs={}, expr=v1745[16]} }
    cs      = { {defs={}, expr=v1746[16]} }
    ss      = { {defs={}, expr=v1747[16]} }
    ds      = { {defs={}, expr=v1748[16]} }
    fs      = { {defs={}, expr=v1749[16]} }
    gs      = { {defs={}, expr=v1750[16]} }
    cf      = { {defs={}, expr=v1751[1]} }
    ?1      = { {defs={}, expr=v1752[1]} }
    pf      = { {defs={}, expr=v1753[1]} }
    ?3      = { {defs={}, expr=v1754[1]} }
    af      = { {defs={}, expr=v1755[1]} }
    ?5      = { {defs={}, expr=v1756[1]} }
    zf      = { {defs={}, expr=v1757[1]} }
    sf      = { {defs={}, expr=v1758[1]} }
    tf      = { {defs={}, expr=v1759[1]} }
    if      = { {defs={}, expr=v1760[1]} }
    df      = { {defs={}, expr=v1761[1]} }
    of      = { {defs={}, expr=v1762[1]} }
    iopl0   = { {defs={}, expr=v1763[1]} }
    iopl1   = { {defs={}, expr=v1764[1]} }
    nt      = { {defs={}, expr=v1765[1]} }
    ?15     = { {defs={}, expr=v1766[1]} }
    rf      = { {defs={}, expr=v1767[1]} }
    vm      = { {defs={}, expr=v1768[1]} }
    ac      = { {defs={}, expr=v1769[1]} }
    vif     = { {defs={}, expr=v1770[1]} }
    vip     = { {defs={}, expr=v1771[1]} }
    id      = { {defs={}, expr=v1772[1]} }
    ?22     = { {defs={}, expr=v1773[1]} }
    ?23     = { {defs={}, expr=v1774[1]} }
    ?24     = { {defs={}, expr=v1775[1]} }
    ?25     = { {defs={}, expr=v1776[1]} }
    ?26     = { {defs={}, expr=v1777[1]} }
    ?27     = { {defs={}, expr=v1778[1]} }
    ?28     = { {defs={}, expr=v1779[1]} }
    ?29     = { {defs={}, expr=v1780[1]} }
    ?30     = { {defs={}, expr=v1781[1]} }
    ?31     = { {defs={}, expr=v1782[1]} }
    ip      = { {defs={0x080484be}, expr=0x080484bf[32]} }
memory:
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 3[32])} value={defs={0x080484be}, expr=(extract[8] 24[32] 32[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 2[32])} value={defs={0x080484be}, expr=(extract[8] 16[32] 24[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 1[32])} value={defs={0x080484be}, expr=(extract[8] 8[32] 16[32] v1783[32])}
    addr={defs={}, expr=v1741[32]} value={defs={0x080484be}, expr=(extract[8] 0[32] 8[32] v1783[32])}
0x80484bf:add    ebx, 0x0000120a
registers:
    ax      = { {defs={}, expr=v1737[32]} }
    cx      = { {defs={}, expr=v1738[32]} }
    dx      = { {defs={}, expr=v1739[32]} }
    bx      = { {defs={0x080484be,0x080484bf}, expr=(add[32] v1783[32] 4618[32])} }
    sp      = { {defs={0x080484be}, expr=(add[32] v1741[32] 4[32])} }
    bp      = { {defs={}, expr=v1742[32]} }
    si      = { {defs={}, expr=v1743[32]} }
    di      = { {defs={}, expr=v1744[32]} }
    es      = { {defs={}, expr=v1745[16]} }
    cs      = { {defs={}, expr=v1746[16]} }
    ss      = { {defs={}, expr=v1747[16]} }
    ds      = { {defs={}, expr=v1748[16]} }
    fs      = { {defs={}, expr=v1749[16]} }
    gs      = { {defs={}, expr=v1750[16]} }
    cf      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33])))))} }
    ?1      = { {defs={}, expr=v1752[1]} }
    pf      = { {defs={0x080484be,0x080484bf}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))))))} }
    ?3      = { {defs={}, expr=v1754[1]} }
    af      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33])))))} }
    ?5      = { {defs={}, expr=v1756[1]} }
    zf      = { {defs={0x080484be,0x080484bf}, expr=(zerop[1] (add[32] v1783[32] 4618[32]))} }
    sf      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 31[32] 32[32] (add[32] v1783[32] 4618[32]))} }
    tf      = { {defs={}, expr=v1759[1]} }
    if      = { {defs={}, expr=v1760[1]} }
    df      = { {defs={}, expr=v1761[1]} }
    of      = { {defs={0x080484be,0x080484bf}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33]))))))} }
    iopl0   = { {defs={}, expr=v1763[1]} }
    iopl1   = { {defs={}, expr=v1764[1]} }
    nt      = { {defs={}, expr=v1765[1]} }
    ?15     = { {defs={}, expr=v1766[1]} }
    rf      = { {defs={}, expr=v1767[1]} }
    vm      = { {defs={}, expr=v1768[1]} }
    ac      = { {defs={}, expr=v1769[1]} }
    vif     = { {defs={}, expr=v1770[1]} }
    vip     = { {defs={}, expr=v1771[1]} }
    id      = { {defs={}, expr=v1772[1]} }
    ?22     = { {defs={}, expr=v1773[1]} }
    ?23     = { {defs={}, expr=v1774[1]} }
    ?24     = { {defs={}, expr=v1775[1]} }
    ?25     = { {defs={}, expr=v1776[1]} }
    ?26     = { {defs={}, expr=v1777[1]} }
    ?27     = { {defs={}, expr=v1778[1]} }
    ?28     = { {defs={}, expr=v1779[1]} }
    ?29     = { {defs={}, expr=v1780[1]} }
    ?30     = { {defs={}, expr=v1781[1]} }
    ?31     = { {defs={}, expr=v1782[1]} }
    ip      = { {defs={0x080484bf}, expr=0x080484c5[32]} }
memory:
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 3[32])} value={defs={0x080484be}, expr=(extract[8] 24[32] 32[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 2[32])} value={defs={0x080484be}, expr=(extract[8] 16[32] 24[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 1[32])} value={defs={0x080484be}, expr=(extract[8] 8[32] 16[32] v1783[32])}
    addr={defs={}, expr=v1741[32]} value={defs={0x080484be}, expr=(extract[8] 0[32] 8[32] v1783[32])}
0x80484c5:call   0x080482c8<_init>
registers:
    ax      = { {defs={}, expr=v1737[32]} }
    cx      = { {defs={}, expr=v1738[32]} }
    dx      = { {defs={}, expr=v1739[32]} }
    bx      = { {defs={0x080484be,0x080484bf}, expr=(add[32] v1783[32] 4618[32])} }
    sp      = { {defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] v1741[32] 4[32]) -4[32])} }
    bp      = { {defs={}, expr=v1742[32]} }
    si      = { {defs={}, expr=v1743[32]} }
    di      = { {defs={}, expr=v1744[32]} }
    es      = { {defs={}, expr=v1745[16]} }
    cs      = { {defs={}, expr=v1746[16]} }
    ss      = { {defs={}, expr=v1747[16]} }
    ds      = { {defs={}, expr=v1748[16]} }
    fs      = { {defs={}, expr=v1749[16]} }
    gs      = { {defs={}, expr=v1750[16]} }
    cf      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33])))))} }
    ?1      = { {defs={}, expr=v1752[1]} }
    pf      = { {defs={0x080484be,0x080484bf}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1783[32] 4618[32])))))))} }
    ?3      = { {defs={}, expr=v1754[1]} }
    af      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33])))))} }
    ?5      = { {defs={}, expr=v1756[1]} }
    zf      = { {defs={0x080484be,0x080484bf}, expr=(zerop[1] (add[32] v1783[32] 4618[32]))} }
    sf      = { {defs={0x080484be,0x080484bf}, expr=(extract[1] 31[32] 32[32] (add[32] v1783[32] 4618[32]))} }
    tf      = { {defs={}, expr=v1759[1]} }
    if      = { {defs={}, expr=v1760[1]} }
    df      = { {defs={}, expr=v1761[1]} }
    of      = { {defs={0x080484be,0x080484bf}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1783[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v1783[32]) 4618[33]))))))} }
    iopl0   = { {defs={}, expr=v1763[1]} }
    iopl1   = { {defs={}, expr=v1764[1]} }
    nt      = { {defs={}, expr=v1765[1]} }
    ?15     = { {defs={}, expr=v1766[1]} }
    rf      = { {defs={}, expr=v1767[1]} }
    vm      = { {defs={}, expr=v1768[1]} }
    ac      = { {defs={}, expr=v1769[1]} }
    vif     = { {defs={}, expr=v1770[1]} }
    vip     = { {defs={}, expr=v1771[1]} }
    id      = { {defs={}, expr=v1772[1]} }
    ?22     = { {defs={}, expr=v1773[1]} }
    ?23     = { {defs={}, expr=v1774[1]} }
    ?24     = { {defs={}, expr=v1775[1]} }
    ?25     = { {defs={}, expr=v1776[1]} }
    ?26     = { {defs={}, expr=v1777[1]} }
    ?27     = { {defs={}, expr=v1778[1]} }
    ?28     = { {defs={}, expr=v1779[1]} }
    ?29     = { {defs={}, expr=v1780[1]} }
    ?30     = { {defs={}, expr=v1781[1]} }
    ?31     = { {defs={}, expr=v1782[1]} }
    ip      = { {defs={0x080484c5}, expr=0x080482c8[32]} }
memory:
    addr={defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] (add[32] v1741[32] 4[32]) -4[32]) 3[32])} value={defs={0x080484c5}, expr=8[8]}
    addr={defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] (add[32] v1741[32] 4[32]) -4[32]) 2[32])} value={defs={0x080484c5}, expr=4[8]}
    addr={defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] (add[32] v1741[32] 4[32]) -4[32]) 1[32])} value={defs={0x080484c5}, expr=-124[8]}
    addr={defs={0x080484be,0x080484c5}, expr=(add[32] (add[32] v1741[32] 4[32]) -4[32])} value={defs={0x080484c5}, expr=-54[8]}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 3[32])} value={defs={0x080484be}, expr=(extract[8] 24[32] 32[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 2[32])} value={defs={0x080484be}, expr=(extract[8] 16[32] 24[32] v1783[32])}
    addr={defs={0x080484be}, expr=(add[32] v1741[32] 1[32])} value={defs={0x080484be}, expr=(extract[8] 8[32] 16[32] v1783[32])}
    addr={defs={}, expr=v1741[32]} value={defs={0x080484be}, expr=(extract[8] 0[32] 8[32] v1783[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
registers:
    ax      = { {defs={0x080484ca}, expr=(add[32] v1793[32] -224[32])} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={}, expr=v1792[32]} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={}, expr=v1804[1]} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={}, expr=v1806[1]} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={}, expr=v1808[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={}, expr=v1810[1]} }
    sf      = { {defs={}, expr=v1811[1]} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={}, expr=v1815[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484ca}, expr=0x080484d0[32]} }
memory:
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
registers:
    ax      = { {defs={0x080484ca}, expr=(add[32] v1793[32] -224[32])} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={}, expr=v1804[1]} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={}, expr=v1806[1]} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={}, expr=v1808[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={}, expr=v1810[1]} }
    sf      = { {defs={}, expr=v1811[1]} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={}, expr=v1815[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484d0}, expr=0x080484d6[32]} }
memory:
0x80484d6:sub    eax, edx
registers:
    ax      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) 1[33])))))))} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))))))} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) 1[33])))))))} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(zerop[1] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    sf      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v1793[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v1793[32] -224[32]))) 1[33])))))))} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484d6}, expr=0x080484d8[32]} }
memory:
0x80484d8:sar    eax, 0x02
registers:
    ax      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={0x080484d8}, expr=v1837[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    sf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={0x080484d8}, expr=v1838[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484d8}, expr=0x080484db[32]} }
memory:
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
registers:
    ax      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={0x080484d8}, expr=v1837[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    sf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={0x080484d8}, expr=v1838[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484db}, expr=0x080484de[32]} }
memory:
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 3[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 2[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 1[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] v1795[32] -16[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>
registers:
    ax      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1791[32]} }
    dx      = { {defs={0x080484d0}, expr=(add[32] v1793[32] -224[32])} }
    bx      = { {defs={}, expr=v1793[32]} }
    sp      = { {defs={}, expr=v1794[32]} }
    bp      = { {defs={}, expr=v1795[32]} }
    si      = { {defs={}, expr=v1796[32]} }
    di      = { {defs={}, expr=v1797[32]} }
    es      = { {defs={}, expr=v1798[16]} }
    cs      = { {defs={}, expr=v1799[16]} }
    ss      = { {defs={}, expr=v1800[16]} }
    ds      = { {defs={}, expr=v1801[16]} }
    fs      = { {defs={}, expr=v1802[16]} }
    gs      = { {defs={}, expr=v1803[16]} }
    cf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1805[1]} }
    pf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1807[1]} }
    af      = { {defs={0x080484d8}, expr=v1837[1]} }
    ?5      = { {defs={}, expr=v1809[1]} }
    zf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    sf      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1812[1]} }
    if      = { {defs={}, expr=v1813[1]} }
    df      = { {defs={}, expr=v1814[1]} }
    of      = { {defs={0x080484d8}, expr=v1838[1]} }
    iopl0   = { {defs={}, expr=v1816[1]} }
    iopl1   = { {defs={}, expr=v1817[1]} }
    nt      = { {defs={}, expr=v1818[1]} }
    ?15     = { {defs={}, expr=v1819[1]} }
    rf      = { {defs={}, expr=v1820[1]} }
    vm      = { {defs={}, expr=v1821[1]} }
    ac      = { {defs={}, expr=v1822[1]} }
    vif     = { {defs={}, expr=v1823[1]} }
    vip     = { {defs={}, expr=v1824[1]} }
    id      = { {defs={}, expr=v1825[1]} }
    ?22     = { {defs={}, expr=v1826[1]} }
    ?23     = { {defs={}, expr=v1827[1]} }
    ?24     = { {defs={}, expr=v1828[1]} }
    ?25     = { {defs={}, expr=v1829[1]} }
    ?26     = { {defs={}, expr=v1830[1]} }
    ?27     = { {defs={}, expr=v1831[1]} }
    ?28     = { {defs={}, expr=v1832[1]} }
    ?29     = { {defs={}, expr=v1833[1]} }
    ?30     = { {defs={}, expr=v1834[1]} }
    ?31     = { {defs={}, expr=v1835[1]} }
    ip      = { {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484de}, expr=(ite[32] (invert[1] (zerop[1] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))) 0x080484f0[32] 0x080484e0[32])} }
memory:
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 3[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 2[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] (add[32] v1795[32] -16[32]) 1[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
    addr={defs={0x080484db}, expr=(add[32] v1795[32] -16[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v1793[32] -224[32]) (add[32] (invert[32] (add[32] v1793[32] -224[32])) 1[32]))))}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={}, expr=v1844[32]} }
    sp      = { {defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} }
    bp      = { {defs={}, expr=v1846[32]} }
    si      = { {defs={}, expr=v1847[32]} }
    di      = { {defs={}, expr=v1848[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e0}, expr=0x080484e3[32]} }
memory:
0x80484e3:pop    ebx
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} }
    bp      = { {defs={}, expr=v1846[32]} }
    si      = { {defs={}, expr=v1847[32]} }
    di      = { {defs={}, expr=v1848[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e3}, expr=0x080484e4[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
0x80484e4:pop    esi
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v1846[32]} }
    si      = { {defs={0x080484e4}, expr=v1892[32]} }
    di      = { {defs={}, expr=v1848[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e4}, expr=0x080484e5[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 3[32])} value={defs={0x080484e4}, expr=(extract[8] 24[32] 32[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 2[32])} value={defs={0x080484e4}, expr=(extract[8] 16[32] 24[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 1[32])} value={defs={0x080484e4}, expr=(extract[8] 8[32] 16[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} value={defs={0x080484e4}, expr=(extract[8] 0[32] 8[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
0x80484e5:pop    edi
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v1846[32]} }
    si      = { {defs={0x080484e4}, expr=v1892[32]} }
    di      = { {defs={0x080484e5}, expr=v1897[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e5}, expr=0x080484e6[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e5}, expr=(extract[8] 24[32] 32[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e5}, expr=(extract[8] 16[32] 24[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e5}, expr=(extract[8] 8[32] 16[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32])} value={defs={0x080484e5}, expr=(extract[8] 0[32] 8[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 3[32])} value={defs={0x080484e4}, expr=(extract[8] 24[32] 32[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 2[32])} value={defs={0x080484e4}, expr=(extract[8] 16[32] 24[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 1[32])} value={defs={0x080484e4}, expr=(extract[8] 8[32] 16[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} value={defs={0x080484e4}, expr=(extract[8] 0[32] 8[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
0x80484e6:pop    ebp
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x080484e6}, expr=v1902[32]} }
    si      = { {defs={0x080484e4}, expr=v1892[32]} }
    di      = { {defs={0x080484e5}, expr=v1897[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e6}, expr=0x080484e7[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e6}, expr=(extract[8] 24[32] 32[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e6}, expr=(extract[8] 16[32] 24[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e6}, expr=(extract[8] 8[32] 16[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32])} value={defs={0x080484e6}, expr=(extract[8] 0[32] 8[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e5}, expr=(extract[8] 24[32] 32[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e5}, expr=(extract[8] 16[32] 24[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e5}, expr=(extract[8] 8[32] 16[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32])} value={defs={0x080484e5}, expr=(extract[8] 0[32] 8[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 3[32])} value={defs={0x080484e4}, expr=(extract[8] 24[32] 32[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 2[32])} value={defs={0x080484e4}, expr=(extract[8] 16[32] 24[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 1[32])} value={defs={0x080484e4}, expr=(extract[8] 8[32] 16[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} value={defs={0x080484e4}, expr=(extract[8] 0[32] 8[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
0x80484e7:ret    
registers:
    ax      = { {defs={}, expr=v1841[32]} }
    cx      = { {defs={}, expr=v1842[32]} }
    dx      = { {defs={}, expr=v1843[32]} }
    bx      = { {defs={0x080484e3}, expr=v1887[32]} }
    sp      = { {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x080484e6}, expr=v1902[32]} }
    si      = { {defs={0x080484e4}, expr=v1892[32]} }
    di      = { {defs={0x080484e5}, expr=v1897[32]} }
    es      = { {defs={}, expr=v1849[16]} }
    cs      = { {defs={}, expr=v1850[16]} }
    ss      = { {defs={}, expr=v1851[16]} }
    ds      = { {defs={}, expr=v1852[16]} }
    fs      = { {defs={}, expr=v1853[16]} }
    gs      = { {defs={}, expr=v1854[16]} }
    cf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v1856[1]} }
    pf      = { {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1845[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v1858[1]} }
    af      = { {defs={0x080484e0}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v1860[1]} }
    zf      = { {defs={0x080484e0}, expr=(zerop[1] (add[32] v1845[32] 12[32]))} }
    sf      = { {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] v1845[32] 12[32]))} }
    tf      = { {defs={}, expr=v1863[1]} }
    if      = { {defs={}, expr=v1864[1]} }
    df      = { {defs={}, expr=v1865[1]} }
    of      = { {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1845[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v1845[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v1867[1]} }
    iopl1   = { {defs={}, expr=v1868[1]} }
    nt      = { {defs={}, expr=v1869[1]} }
    ?15     = { {defs={}, expr=v1870[1]} }
    rf      = { {defs={}, expr=v1871[1]} }
    vm      = { {defs={}, expr=v1872[1]} }
    ac      = { {defs={}, expr=v1873[1]} }
    vif     = { {defs={}, expr=v1874[1]} }
    vip     = { {defs={}, expr=v1875[1]} }
    id      = { {defs={}, expr=v1876[1]} }
    ?22     = { {defs={}, expr=v1877[1]} }
    ?23     = { {defs={}, expr=v1878[1]} }
    ?24     = { {defs={}, expr=v1879[1]} }
    ?25     = { {defs={}, expr=v1880[1]} }
    ?26     = { {defs={}, expr=v1881[1]} }
    ?27     = { {defs={}, expr=v1882[1]} }
    ?28     = { {defs={}, expr=v1883[1]} }
    ?29     = { {defs={}, expr=v1884[1]} }
    ?30     = { {defs={}, expr=v1885[1]} }
    ?31     = { {defs={}, expr=v1886[1]} }
    ip      = { {defs={0x080484e7}, expr=v1907[32]} }
memory:
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e7}, expr=(extract[8] 24[32] 32[32] v1907[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e7}, expr=(extract[8] 16[32] 24[32] v1907[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e7}, expr=(extract[8] 8[32] 16[32] v1907[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])} value={defs={0x080484e7}, expr=(extract[8] 0[32] 8[32] v1907[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e6}, expr=(extract[8] 24[32] 32[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e6}, expr=(extract[8] 16[32] 24[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e6}, expr=(extract[8] 8[32] 16[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 4[32])} value={defs={0x080484e6}, expr=(extract[8] 0[32] 8[32] v1902[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080484e5}, expr=(extract[8] 24[32] 32[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080484e5}, expr=(extract[8] 16[32] 24[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] (add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080484e5}, expr=(extract[8] 8[32] 16[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 4[32])} value={defs={0x080484e5}, expr=(extract[8] 0[32] 8[32] v1897[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 3[32])} value={defs={0x080484e4}, expr=(extract[8] 24[32] 32[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 2[32])} value={defs={0x080484e4}, expr=(extract[8] 16[32] 24[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] (add[32] (add[32] v1845[32] 12[32]) 4[32]) 1[32])} value={defs={0x080484e4}, expr=(extract[8] 8[32] 16[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 4[32])} value={defs={0x080484e4}, expr=(extract[8] 0[32] 8[32] v1892[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 3[32])} value={defs={0x080484e3}, expr=(extract[8] 24[32] 32[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 2[32])} value={defs={0x080484e3}, expr=(extract[8] 16[32] 24[32] v1887[32])}
    addr={defs={0x080484e0,0x080484e3}, expr=(add[32] (add[32] v1845[32] 12[32]) 1[32])} value={defs={0x080484e3}, expr=(extract[8] 8[32] 16[32] v1887[32])}
    addr={defs={0x080484e0}, expr=(add[32] v1845[32] 12[32])} value={defs={0x080484e3}, expr=(extract[8] 0[32] 8[32] v1887[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    bp      = { {defs={}, expr=v1919[32]} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048520}, expr=0x08048521[32]} }
memory:
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
0x8048521:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048521}, expr=0x08048523[32]} }
memory:
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
0x8048523:push   edi
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048523}, expr=0x08048524[32]} }
memory:
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
0x8048524:push   esi
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048524}, expr=0x08048525[32]} }
memory:
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048524}, expr=(extract[8] 24[32] 32[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048524}, expr=(extract[8] 16[32] 24[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048524}, expr=(extract[8] 8[32] 16[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048524}, expr=(extract[8] 0[32] 8[32] v1920[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
0x8048525:push   ebx
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={}, expr=v1928[1]} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={}, expr=v1930[1]} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={}, expr=v1932[1]} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={}, expr=v1934[1]} }
    sf      = { {defs={}, expr=v1935[1]} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={}, expr=v1939[1]} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048525}, expr=0x08048526[32]} }
memory:
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048525}, expr=(extract[8] 24[32] 32[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048525}, expr=(extract[8] 16[32] 24[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048525}, expr=(extract[8] 8[32] 16[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048525}, expr=(extract[8] 0[32] 8[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048524}, expr=(extract[8] 24[32] 32[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048524}, expr=(extract[8] 16[32] 24[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048524}, expr=(extract[8] 8[32] 16[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048524}, expr=(extract[8] 0[32] 8[32] v1920[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
0x8048526:sub    esp, 0x0c
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    sf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048526}, expr=0x08048529[32]} }
memory:
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048525}, expr=(extract[8] 24[32] 32[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048525}, expr=(extract[8] 16[32] 24[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048525}, expr=(extract[8] 8[32] 16[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048525}, expr=(extract[8] 0[32] 8[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048524}, expr=(extract[8] 24[32] 32[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048524}, expr=(extract[8] 16[32] 24[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048524}, expr=(extract[8] 8[32] 16[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048524}, expr=(extract[8] 0[32] 8[32] v1920[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
0x8048529:call   0x0804852e<<Insn>>
registers:
    ax      = { {defs={}, expr=v1914[32]} }
    cx      = { {defs={}, expr=v1915[32]} }
    dx      = { {defs={}, expr=v1916[32]} }
    bx      = { {defs={}, expr=v1917[32]} }
    sp      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])} }
    bp      = { {defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} }
    si      = { {defs={}, expr=v1920[32]} }
    di      = { {defs={}, expr=v1921[32]} }
    es      = { {defs={}, expr=v1922[16]} }
    cs      = { {defs={}, expr=v1923[16]} }
    ss      = { {defs={}, expr=v1924[16]} }
    ds      = { {defs={}, expr=v1925[16]} }
    fs      = { {defs={}, expr=v1926[16]} }
    gs      = { {defs={}, expr=v1927[16]} }
    cf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?1      = { {defs={}, expr=v1929[1]} }
    pf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))} }
    ?3      = { {defs={}, expr=v1931[1]} }
    af      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    ?5      = { {defs={}, expr=v1933[1]} }
    zf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    sf      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))} }
    tf      = { {defs={}, expr=v1936[1]} }
    if      = { {defs={}, expr=v1937[1]} }
    df      = { {defs={}, expr=v1938[1]} }
    of      = { {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))} }
    iopl0   = { {defs={}, expr=v1940[1]} }
    iopl1   = { {defs={}, expr=v1941[1]} }
    nt      = { {defs={}, expr=v1942[1]} }
    ?15     = { {defs={}, expr=v1943[1]} }
    rf      = { {defs={}, expr=v1944[1]} }
    vm      = { {defs={}, expr=v1945[1]} }
    ac      = { {defs={}, expr=v1946[1]} }
    vif     = { {defs={}, expr=v1947[1]} }
    vip     = { {defs={}, expr=v1948[1]} }
    id      = { {defs={}, expr=v1949[1]} }
    ?22     = { {defs={}, expr=v1950[1]} }
    ?23     = { {defs={}, expr=v1951[1]} }
    ?24     = { {defs={}, expr=v1952[1]} }
    ?25     = { {defs={}, expr=v1953[1]} }
    ?26     = { {defs={}, expr=v1954[1]} }
    ?27     = { {defs={}, expr=v1955[1]} }
    ?28     = { {defs={}, expr=v1956[1]} }
    ?29     = { {defs={}, expr=v1957[1]} }
    ?30     = { {defs={}, expr=v1958[1]} }
    ?31     = { {defs={}, expr=v1959[1]} }
    ip      = { {defs={0x08048529}, expr=0x0804852e[32]} }
memory:
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 3[32])} value={defs={0x08048529}, expr=8[8]}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 2[32])} value={defs={0x08048529}, expr=4[8]}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) 1[32])} value={defs={0x08048529}, expr=-123[8]}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])} value={defs={0x08048529}, expr=46[8]}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048525}, expr=(extract[8] 24[32] 32[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048525}, expr=(extract[8] 16[32] 24[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048525}, expr=(extract[8] 8[32] 16[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x08048525}, expr=(extract[8] 0[32] 8[32] v1917[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x08048524}, expr=(extract[8] 24[32] 32[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x08048524}, expr=(extract[8] 16[32] 24[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x08048524}, expr=(extract[8] 8[32] 16[32] v1920[32])}
    addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) -4[32])} value={defs={0x08048524}, expr=(extract[8] 0[32] 8[32] v1920[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048523}, expr=(extract[8] 24[32] 32[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048523}, expr=(extract[8] 16[32] 24[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] (add[32] v1918[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048523}, expr=(extract[8] 8[32] 16[32] v1921[32])}
    addr={defs={0x08048520,0x08048523}, expr=(add[32] (add[32] v1918[32] -4[32]) -4[32])} value={defs={0x08048523}, expr=(extract[8] 0[32] 8[32] v1921[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 3[32])} value={defs={0x08048520}, expr=(extract[8] 24[32] 32[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 2[32])} value={defs={0x08048520}, expr=(extract[8] 16[32] 24[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] (add[32] v1918[32] -4[32]) 1[32])} value={defs={0x08048520}, expr=(extract[8] 8[32] 16[32] v1919[32])}
    addr={defs={0x08048520}, expr=(add[32] v1918[32] -4[32])} value={defs={0x08048520}, expr=(extract[8] 0[32] 8[32] v1919[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
registers:
    ax      = { {defs={}, expr=v1962[32]} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={}, expr=v1964[32]} }
    bx      = { {defs={0x0804852e}, expr=v2008[32]} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={}, expr=v1976[1]} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={}, expr=v1978[1]} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={}, expr=v1980[1]} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={}, expr=v1982[1]} }
    sf      = { {defs={}, expr=v1983[1]} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={}, expr=v1987[1]} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804852e}, expr=0x0804852f[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x804852f:add    ebx, 0x0000119a
registers:
    ax      = { {defs={}, expr=v1962[32]} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={}, expr=v1964[32]} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f}, expr=(zerop[1] (add[32] v2008[32] 4506[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v2008[32] 4506[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804852f}, expr=0x08048535[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={}, expr=v1964[32]} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f}, expr=(zerop[1] (add[32] v2008[32] 4506[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v2008[32] 4506[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048535}, expr=0x0804853b[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2008[32] 4506[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33])))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f}, expr=(zerop[1] (add[32] v2008[32] 4506[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v2008[32] 4506[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2008[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2008[32]) 4506[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804853b}, expr=0x08048541[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x8048541:sub    eax, edx
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) 1[33])))))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) 1[33])))))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(zerop[1] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]))) 1[33])))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048541}, expr=0x08048543[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x8048543:sar    eax, 0x02
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x08048543}, expr=v2014[1]} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x08048543}, expr=v2015[1]} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048543}, expr=0x08048546[32]} }
memory:
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x08048543}, expr=v2014[1]} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x08048543}, expr=v2015[1]} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048546}, expr=0x08048549[32]} }
memory:
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 3[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 2[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 1[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] v1967[32] -16[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x8048549:dec    eax
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x08048549}, expr=0x0804854a[32]} }
memory:
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 3[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 2[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 1[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] v1967[32] -16[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x804854a:cmp    eax, 0xff<-0x01>
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804854a}, expr=0x0804854d[32]} }
memory:
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 3[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 2[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 1[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] v1967[32] -16[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
0x804854d:je     0x0804856b<<Insn>>
registers:
    ax      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])} }
    cx      = { {defs={}, expr=v1963[32]} }
    dx      = { {defs={0x0804852e,0x0804852f,0x0804853b}, expr=(add[32] (add[32] v2008[32] 4506[32]) -224[32])} }
    bx      = { {defs={0x0804852e,0x0804852f}, expr=(add[32] v2008[32] 4506[32])} }
    sp      = { {defs={0x0804852e}, expr=(add[32] v1966[32] 4[32])} }
    bp      = { {defs={}, expr=v1967[32]} }
    si      = { {defs={}, expr=v1968[32]} }
    di      = { {defs={}, expr=v1969[32]} }
    es      = { {defs={}, expr=v1970[16]} }
    cs      = { {defs={}, expr=v1971[16]} }
    ss      = { {defs={}, expr=v1972[16]} }
    ds      = { {defs={}, expr=v1973[16]} }
    fs      = { {defs={}, expr=v1974[16]} }
    gs      = { {defs={}, expr=v1975[16]} }
    cf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    ?1      = { {defs={}, expr=v1977[1]} }
    pf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))} }
    ?3      = { {defs={}, expr=v1979[1]} }
    af      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    ?5      = { {defs={}, expr=v1981[1]} }
    zf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))} }
    sf      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))} }
    tf      = { {defs={}, expr=v1984[1]} }
    if      = { {defs={}, expr=v1985[1]} }
    df      = { {defs={}, expr=v1986[1]} }
    of      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v1988[1]} }
    iopl1   = { {defs={}, expr=v1989[1]} }
    nt      = { {defs={}, expr=v1990[1]} }
    ?15     = { {defs={}, expr=v1991[1]} }
    rf      = { {defs={}, expr=v1992[1]} }
    vm      = { {defs={}, expr=v1993[1]} }
    ac      = { {defs={}, expr=v1994[1]} }
    vif     = { {defs={}, expr=v1995[1]} }
    vip     = { {defs={}, expr=v1996[1]} }
    id      = { {defs={}, expr=v1997[1]} }
    ?22     = { {defs={}, expr=v1998[1]} }
    ?23     = { {defs={}, expr=v1999[1]} }
    ?24     = { {defs={}, expr=v2000[1]} }
    ?25     = { {defs={}, expr=v2001[1]} }
    ?26     = { {defs={}, expr=v2002[1]} }
    ?27     = { {defs={}, expr=v2003[1]} }
    ?28     = { {defs={}, expr=v2004[1]} }
    ?29     = { {defs={}, expr=v2005[1]} }
    ?30     = { {defs={}, expr=v2006[1]} }
    ?31     = { {defs={}, expr=v2007[1]} }
    ip      = { {defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a,0x0804854d}, expr=(ite[32] (zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) 0x0804856b[32] 0x0804854f[32])} }
memory:
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 3[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 2[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] (add[32] v1967[32] -16[32]) 1[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x08048546}, expr=(add[32] v1967[32] -16[32])} value={defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2008[32] 4506[32]) -224[32])) 1[32]))))}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 3[32])} value={defs={0x0804852e}, expr=(extract[8] 24[32] 32[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 2[32])} value={defs={0x0804852e}, expr=(extract[8] 16[32] 24[32] v2008[32])}
    addr={defs={0x0804852e}, expr=(add[32] v1966[32] 1[32])} value={defs={0x0804852e}, expr=(extract[8] 8[32] 16[32] v2008[32])}
    addr={defs={}, expr=v1966[32]} value={defs={0x0804852e}, expr=(extract[8] 0[32] 8[32] v2008[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={}, expr=v2022[32]} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={}, expr=v2025[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={}, expr=v2032[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={}, expr=v2034[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2036[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={}, expr=v2038[1]} }
    sf      = { {defs={}, expr=v2039[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={}, expr=v2043[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x0804854f}, expr=0x08048552[32]} }
memory:
0x8048552:xor    edi, edi
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={}, expr=v2022[32]} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={0x08048552}, expr=0[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={0x08048552}, expr=0[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={0x08048552}, expr=1[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2064[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={0x08048552}, expr=1[1]} }
    sf      = { {defs={0x08048552}, expr=0[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={0x08048552}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x08048552}, expr=0x08048554[32]} }
memory:
0x8048554:lea    esi, [esi + 0x00000000]
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={}, expr=v2022[32]} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={0x08048552}, expr=0[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={0x08048552}, expr=0[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={0x08048552}, expr=1[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2064[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={0x08048552}, expr=1[1]} }
    sf      = { {defs={0x08048552}, expr=0[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={0x08048552}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x08048554}, expr=0x0804855a[32]} }
memory:
0x804855a:lea    edi, [edi + 0x00000000]
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={}, expr=v2022[32]} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={0x08048552,0x0804855a}, expr=0[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={0x08048552}, expr=0[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={0x08048552}, expr=1[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2064[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={0x08048552}, expr=1[1]} }
    sf      = { {defs={0x08048552}, expr=0[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={0x08048552}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x0804855a}, expr=0x08048560[32]} }
memory:
0x8048560:call   DWORD PTR ds:[esi]
registers:
    ax      = { {defs={}, expr=v2018[32]} }
    cx      = { {defs={}, expr=v2019[32]} }
    dx      = { {defs={}, expr=v2020[32]} }
    bx      = { {defs={}, expr=v2021[32]} }
    sp      = { {defs={0x08048560}, expr=(add[32] v2022[32] -4[32])} }
    bp      = { {defs={}, expr=v2023[32]} }
    si      = { {defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} }
    di      = { {defs={0x08048552,0x0804855a}, expr=0[32]} }
    es      = { {defs={}, expr=v2026[16]} }
    cs      = { {defs={}, expr=v2027[16]} }
    ss      = { {defs={}, expr=v2028[16]} }
    ds      = { {defs={}, expr=v2029[16]} }
    fs      = { {defs={}, expr=v2030[16]} }
    gs      = { {defs={}, expr=v2031[16]} }
    cf      = { {defs={0x08048552}, expr=0[1]} }
    ?1      = { {defs={}, expr=v2033[1]} }
    pf      = { {defs={0x08048552}, expr=1[1]} }
    ?3      = { {defs={}, expr=v2035[1]} }
    af      = { {defs={}, expr=v2064[1]} }
    ?5      = { {defs={}, expr=v2037[1]} }
    zf      = { {defs={0x08048552}, expr=1[1]} }
    sf      = { {defs={0x08048552}, expr=0[1]} }
    tf      = { {defs={}, expr=v2040[1]} }
    if      = { {defs={}, expr=v2041[1]} }
    df      = { {defs={}, expr=v2042[1]} }
    of      = { {defs={0x08048552}, expr=0[1]} }
    iopl0   = { {defs={}, expr=v2044[1]} }
    iopl1   = { {defs={}, expr=v2045[1]} }
    nt      = { {defs={}, expr=v2046[1]} }
    ?15     = { {defs={}, expr=v2047[1]} }
    rf      = { {defs={}, expr=v2048[1]} }
    vm      = { {defs={}, expr=v2049[1]} }
    ac      = { {defs={}, expr=v2050[1]} }
    vif     = { {defs={}, expr=v2051[1]} }
    vip     = { {defs={}, expr=v2052[1]} }
    id      = { {defs={}, expr=v2053[1]} }
    ?22     = { {defs={}, expr=v2054[1]} }
    ?23     = { {defs={}, expr=v2055[1]} }
    ?24     = { {defs={}, expr=v2056[1]} }
    ?25     = { {defs={}, expr=v2057[1]} }
    ?26     = { {defs={}, expr=v2058[1]} }
    ?27     = { {defs={}, expr=v2059[1]} }
    ?28     = { {defs={}, expr=v2060[1]} }
    ?29     = { {defs={}, expr=v2061[1]} }
    ?30     = { {defs={}, expr=v2062[1]} }
    ?31     = { {defs={}, expr=v2063[1]} }
    ip      = { {defs={0x08048560}, expr=v2065[32]} }
memory:
    addr={defs={0x0804854f,0x08048560}, expr=(add[32] (add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8]))) 3[32])} value={defs={0x08048560}, expr=(extract[8] 24[32] 32[32] v2065[32])}
    addr={defs={0x0804854f,0x08048560}, expr=(add[32] (add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8]))) 2[32])} value={defs={0x08048560}, expr=(extract[8] 16[32] 24[32] v2065[32])}
    addr={defs={0x0804854f,0x08048560}, expr=(add[32] (add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8]))) 1[32])} value={defs={0x08048560}, expr=(extract[8] 8[32] 16[32] v2065[32])}
    addr={defs={0x0804854f}, expr=(add[32] v2020[32] (extract[32] 0[32] 32[32] (umul[40] v2018[32] 4[8])))} value={defs={0x08048560}, expr=(extract[8] 0[32] 8[32] v2065[32])}
    addr={defs={0x08048560}, expr=(add[32] (add[32] v2022[32] -4[32]) 3[32])} value={defs={0x08048560}, expr=8[8]}
    addr={defs={0x08048560}, expr=(add[32] (add[32] v2022[32] -4[32]) 2[32])} value={defs={0x08048560}, expr=4[8]}
    addr={defs={0x08048560}, expr=(add[32] (add[32] v2022[32] -4[32]) 1[32])} value={defs={0x08048560}, expr=-123[8]}
    addr={defs={0x08048560}, expr=(add[32] v2022[32] -4[32])} value={defs={0x08048560}, expr=98[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
registers:
    ax      = { {defs={}, expr=v2072[32]} }
    cx      = { {defs={}, expr=v2073[32]} }
    dx      = { {defs={}, expr=v2074[32]} }
    bx      = { {defs={}, expr=v2075[32]} }
    sp      = { {defs={}, expr=v2076[32]} }
    bp      = { {defs={}, expr=v2077[32]} }
    si      = { {defs={}, expr=v2078[32]} }
    di      = { {defs={0x08048562}, expr=(add[32] v2079[32] 1[32])} }
    es      = { {defs={}, expr=v2080[16]} }
    cs      = { {defs={}, expr=v2081[16]} }
    ss      = { {defs={}, expr=v2082[16]} }
    ds      = { {defs={}, expr=v2083[16]} }
    fs      = { {defs={}, expr=v2084[16]} }
    gs      = { {defs={}, expr=v2085[16]} }
    cf      = { {defs={}, expr=v2086[1]} }
    ?1      = { {defs={}, expr=v2087[1]} }
    pf      = { {defs={0x08048562}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2079[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2089[1]} }
    af      = { {defs={0x08048562}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2079[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2079[32]) 1[33])))))} }
    ?5      = { {defs={}, expr=v2091[1]} }
    zf      = { {defs={0x08048562}, expr=(zerop[1] (add[32] v2079[32] 1[32]))} }
    sf      = { {defs={0x08048562}, expr=(extract[1] 31[32] 32[32] (add[32] v2079[32] 1[32]))} }
    tf      = { {defs={}, expr=v2094[1]} }
    if      = { {defs={}, expr=v2095[1]} }
    df      = { {defs={}, expr=v2096[1]} }
    of      = { {defs={0x08048562}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2079[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2079[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2079[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2079[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2098[1]} }
    iopl1   = { {defs={}, expr=v2099[1]} }
    nt      = { {defs={}, expr=v2100[1]} }
    ?15     = { {defs={}, expr=v2101[1]} }
    rf      = { {defs={}, expr=v2102[1]} }
    vm      = { {defs={}, expr=v2103[1]} }
    ac      = { {defs={}, expr=v2104[1]} }
    vif     = { {defs={}, expr=v2105[1]} }
    vip     = { {defs={}, expr=v2106[1]} }
    id      = { {defs={}, expr=v2107[1]} }
    ?22     = { {defs={}, expr=v2108[1]} }
    ?23     = { {defs={}, expr=v2109[1]} }
    ?24     = { {defs={}, expr=v2110[1]} }
    ?25     = { {defs={}, expr=v2111[1]} }
    ?26     = { {defs={}, expr=v2112[1]} }
    ?27     = { {defs={}, expr=v2113[1]} }
    ?28     = { {defs={}, expr=v2114[1]} }
    ?29     = { {defs={}, expr=v2115[1]} }
    ?30     = { {defs={}, expr=v2116[1]} }
    ?31     = { {defs={}, expr=v2117[1]} }
    ip      = { {defs={0x08048562}, expr=0x08048563[32]} }
memory:
0x8048563:sub    esi, 0x04
registers:
    ax      = { {defs={}, expr=v2072[32]} }
    cx      = { {defs={}, expr=v2073[32]} }
    dx      = { {defs={}, expr=v2074[32]} }
    bx      = { {defs={}, expr=v2075[32]} }
    sp      = { {defs={}, expr=v2076[32]} }
    bp      = { {defs={}, expr=v2077[32]} }
    si      = { {defs={0x08048563}, expr=(add[32] v2078[32] -4[32])} }
    di      = { {defs={0x08048562}, expr=(add[32] v2079[32] 1[32])} }
    es      = { {defs={}, expr=v2080[16]} }
    cs      = { {defs={}, expr=v2081[16]} }
    ss      = { {defs={}, expr=v2082[16]} }
    ds      = { {defs={}, expr=v2083[16]} }
    fs      = { {defs={}, expr=v2084[16]} }
    gs      = { {defs={}, expr=v2085[16]} }
    cf      = { {defs={0x08048563}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2078[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2078[32]) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2087[1]} }
    pf      = { {defs={0x08048563}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2078[32] -4[32])))))))} }
    ?3      = { {defs={}, expr=v2089[1]} }
    af      = { {defs={0x08048563}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2078[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2078[32]) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2091[1]} }
    zf      = { {defs={0x08048563}, expr=(zerop[1] (add[32] v2078[32] -4[32]))} }
    sf      = { {defs={0x08048563}, expr=(extract[1] 31[32] 32[32] (add[32] v2078[32] -4[32]))} }
    tf      = { {defs={}, expr=v2094[1]} }
    if      = { {defs={}, expr=v2095[1]} }
    df      = { {defs={}, expr=v2096[1]} }
    of      = { {defs={0x08048563}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2078[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2078[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2078[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2078[32]) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2098[1]} }
    iopl1   = { {defs={}, expr=v2099[1]} }
    nt      = { {defs={}, expr=v2100[1]} }
    ?15     = { {defs={}, expr=v2101[1]} }
    rf      = { {defs={}, expr=v2102[1]} }
    vm      = { {defs={}, expr=v2103[1]} }
    ac      = { {defs={}, expr=v2104[1]} }
    vif     = { {defs={}, expr=v2105[1]} }
    vip     = { {defs={}, expr=v2106[1]} }
    id      = { {defs={}, expr=v2107[1]} }
    ?22     = { {defs={}, expr=v2108[1]} }
    ?23     = { {defs={}, expr=v2109[1]} }
    ?24     = { {defs={}, expr=v2110[1]} }
    ?25     = { {defs={}, expr=v2111[1]} }
    ?26     = { {defs={}, expr=v2112[1]} }
    ?27     = { {defs={}, expr=v2113[1]} }
    ?28     = { {defs={}, expr=v2114[1]} }
    ?29     = { {defs={}, expr=v2115[1]} }
    ?30     = { {defs={}, expr=v2116[1]} }
    ?31     = { {defs={}, expr=v2117[1]} }
    ip      = { {defs={0x08048563}, expr=0x08048566[32]} }
memory:
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
registers:
    ax      = { {defs={}, expr=v2072[32]} }
    cx      = { {defs={}, expr=v2073[32]} }
    dx      = { {defs={}, expr=v2074[32]} }
    bx      = { {defs={}, expr=v2075[32]} }
    sp      = { {defs={}, expr=v2076[32]} }
    bp      = { {defs={}, expr=v2077[32]} }
    si      = { {defs={0x08048563}, expr=(add[32] v2078[32] -4[32])} }
    di      = { {defs={0x08048562}, expr=(add[32] v2079[32] 1[32])} }
    es      = { {defs={}, expr=v2080[16]} }
    cs      = { {defs={}, expr=v2081[16]} }
    ss      = { {defs={}, expr=v2082[16]} }
    ds      = { {defs={}, expr=v2083[16]} }
    fs      = { {defs={}, expr=v2084[16]} }
    gs      = { {defs={}, expr=v2085[16]} }
    cf      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    ?1      = { {defs={}, expr=v2087[1]} }
    pf      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))))))} }
    ?3      = { {defs={}, expr=v2089[1]} }
    af      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    ?5      = { {defs={}, expr=v2091[1]} }
    zf      = { {defs={0x08048562,0x08048566}, expr=(zerop[1] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))} }
    sf      = { {defs={0x08048562,0x08048566}, expr=(extract[1] 31[32] 32[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))} }
    tf      = { {defs={}, expr=v2094[1]} }
    if      = { {defs={}, expr=v2095[1]} }
    df      = { {defs={}, expr=v2096[1]} }
    of      = { {defs={0x08048562,0x08048566}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    iopl0   = { {defs={}, expr=v2098[1]} }
    iopl1   = { {defs={}, expr=v2099[1]} }
    nt      = { {defs={}, expr=v2100[1]} }
    ?15     = { {defs={}, expr=v2101[1]} }
    rf      = { {defs={}, expr=v2102[1]} }
    vm      = { {defs={}, expr=v2103[1]} }
    ac      = { {defs={}, expr=v2104[1]} }
    vif     = { {defs={}, expr=v2105[1]} }
    vip     = { {defs={}, expr=v2106[1]} }
    id      = { {defs={}, expr=v2107[1]} }
    ?22     = { {defs={}, expr=v2108[1]} }
    ?23     = { {defs={}, expr=v2109[1]} }
    ?24     = { {defs={}, expr=v2110[1]} }
    ?25     = { {defs={}, expr=v2111[1]} }
    ?26     = { {defs={}, expr=v2112[1]} }
    ?27     = { {defs={}, expr=v2113[1]} }
    ?28     = { {defs={}, expr=v2114[1]} }
    ?29     = { {defs={}, expr=v2115[1]} }
    ?30     = { {defs={}, expr=v2116[1]} }
    ?31     = { {defs={}, expr=v2117[1]} }
    ip      = { {defs={0x08048566}, expr=0x08048569[32]} }
memory:
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 3[32])} value={defs={0x08048566}, expr=(extract[8] 24[32] 32[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 2[32])} value={defs={0x08048566}, expr=(extract[8] 16[32] 24[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 1[32])} value={defs={0x08048566}, expr=(extract[8] 8[32] 16[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] v2077[32] -16[32])} value={defs={0x08048566}, expr=(extract[8] 0[32] 8[32] v2118[32])}
0x8048569:jne    0x08048560<<Insn>>
registers:
    ax      = { {defs={}, expr=v2072[32]} }
    cx      = { {defs={}, expr=v2073[32]} }
    dx      = { {defs={}, expr=v2074[32]} }
    bx      = { {defs={}, expr=v2075[32]} }
    sp      = { {defs={}, expr=v2076[32]} }
    bp      = { {defs={}, expr=v2077[32]} }
    si      = { {defs={0x08048563}, expr=(add[32] v2078[32] -4[32])} }
    di      = { {defs={0x08048562}, expr=(add[32] v2079[32] 1[32])} }
    es      = { {defs={}, expr=v2080[16]} }
    cs      = { {defs={}, expr=v2081[16]} }
    ss      = { {defs={}, expr=v2082[16]} }
    ds      = { {defs={}, expr=v2083[16]} }
    fs      = { {defs={}, expr=v2084[16]} }
    gs      = { {defs={}, expr=v2085[16]} }
    cf      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    ?1      = { {defs={}, expr=v2087[1]} }
    pf      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32]))))))))} }
    ?3      = { {defs={}, expr=v2089[1]} }
    af      = { {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    ?5      = { {defs={}, expr=v2091[1]} }
    zf      = { {defs={0x08048562,0x08048566}, expr=(zerop[1] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))} }
    sf      = { {defs={0x08048562,0x08048566}, expr=(extract[1] 31[32] 32[32] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))} }
    tf      = { {defs={}, expr=v2094[1]} }
    if      = { {defs={}, expr=v2095[1]} }
    df      = { {defs={}, expr=v2096[1]} }
    of      = { {defs={0x08048562,0x08048566}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2118[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) (add[33] (uextend[33] 33[32] v2118[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2079[32] 1[32]))) 1[33])))))))} }
    iopl0   = { {defs={}, expr=v2098[1]} }
    iopl1   = { {defs={}, expr=v2099[1]} }
    nt      = { {defs={}, expr=v2100[1]} }
    ?15     = { {defs={}, expr=v2101[1]} }
    rf      = { {defs={}, expr=v2102[1]} }
    vm      = { {defs={}, expr=v2103[1]} }
    ac      = { {defs={}, expr=v2104[1]} }
    vif     = { {defs={}, expr=v2105[1]} }
    vip     = { {defs={}, expr=v2106[1]} }
    id      = { {defs={}, expr=v2107[1]} }
    ?22     = { {defs={}, expr=v2108[1]} }
    ?23     = { {defs={}, expr=v2109[1]} }
    ?24     = { {defs={}, expr=v2110[1]} }
    ?25     = { {defs={}, expr=v2111[1]} }
    ?26     = { {defs={}, expr=v2112[1]} }
    ?27     = { {defs={}, expr=v2113[1]} }
    ?28     = { {defs={}, expr=v2114[1]} }
    ?29     = { {defs={}, expr=v2115[1]} }
    ?30     = { {defs={}, expr=v2116[1]} }
    ?31     = { {defs={}, expr=v2117[1]} }
    ip      = { {defs={0x08048562,0x08048566,0x08048569}, expr=(ite[32] (invert[1] (zerop[1] (add[32] v2118[32] (add[32] (invert[32] (add[32] v2079[32] 1[32])) 1[32])))) 0x08048560[32] 0x0804856b[32])} }
memory:
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 3[32])} value={defs={0x08048566}, expr=(extract[8] 24[32] 32[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 2[32])} value={defs={0x08048566}, expr=(extract[8] 16[32] 24[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] (add[32] v2077[32] -16[32]) 1[32])} value={defs={0x08048566}, expr=(extract[8] 8[32] 16[32] v2118[32])}
    addr={defs={0x08048566}, expr=(add[32] v2077[32] -16[32])} value={defs={0x08048566}, expr=(extract[8] 0[32] 8[32] v2118[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0<_fini>
registers:
    ax      = { {defs={}, expr=v2125[32]} }
    cx      = { {defs={}, expr=v2126[32]} }
    dx      = { {defs={}, expr=v2127[32]} }
    bx      = { {defs={}, expr=v2128[32]} }
    sp      = { {defs={0x0804856b}, expr=(add[32] v2129[32] -4[32])} }
    bp      = { {defs={}, expr=v2130[32]} }
    si      = { {defs={}, expr=v2131[32]} }
    di      = { {defs={}, expr=v2132[32]} }
    es      = { {defs={}, expr=v2133[16]} }
    cs      = { {defs={}, expr=v2134[16]} }
    ss      = { {defs={}, expr=v2135[16]} }
    ds      = { {defs={}, expr=v2136[16]} }
    fs      = { {defs={}, expr=v2137[16]} }
    gs      = { {defs={}, expr=v2138[16]} }
    cf      = { {defs={}, expr=v2139[1]} }
    ?1      = { {defs={}, expr=v2140[1]} }
    pf      = { {defs={}, expr=v2141[1]} }
    ?3      = { {defs={}, expr=v2142[1]} }
    af      = { {defs={}, expr=v2143[1]} }
    ?5      = { {defs={}, expr=v2144[1]} }
    zf      = { {defs={}, expr=v2145[1]} }
    sf      = { {defs={}, expr=v2146[1]} }
    tf      = { {defs={}, expr=v2147[1]} }
    if      = { {defs={}, expr=v2148[1]} }
    df      = { {defs={}, expr=v2149[1]} }
    of      = { {defs={}, expr=v2150[1]} }
    iopl0   = { {defs={}, expr=v2151[1]} }
    iopl1   = { {defs={}, expr=v2152[1]} }
    nt      = { {defs={}, expr=v2153[1]} }
    ?15     = { {defs={}, expr=v2154[1]} }
    rf      = { {defs={}, expr=v2155[1]} }
    vm      = { {defs={}, expr=v2156[1]} }
    ac      = { {defs={}, expr=v2157[1]} }
    vif     = { {defs={}, expr=v2158[1]} }
    vip     = { {defs={}, expr=v2159[1]} }
    id      = { {defs={}, expr=v2160[1]} }
    ?22     = { {defs={}, expr=v2161[1]} }
    ?23     = { {defs={}, expr=v2162[1]} }
    ?24     = { {defs={}, expr=v2163[1]} }
    ?25     = { {defs={}, expr=v2164[1]} }
    ?26     = { {defs={}, expr=v2165[1]} }
    ?27     = { {defs={}, expr=v2166[1]} }
    ?28     = { {defs={}, expr=v2167[1]} }
    ?29     = { {defs={}, expr=v2168[1]} }
    ?30     = { {defs={}, expr=v2169[1]} }
    ?31     = { {defs={}, expr=v2170[1]} }
    ip      = { {defs={0x0804856b}, expr=0x080485b0[32]} }
memory:
    addr={defs={0x0804856b}, expr=(add[32] (add[32] v2129[32] -4[32]) 3[32])} value={defs={0x0804856b}, expr=8[8]}
    addr={defs={0x0804856b}, expr=(add[32] (add[32] v2129[32] -4[32]) 2[32])} value={defs={0x0804856b}, expr=4[8]}
    addr={defs={0x0804856b}, expr=(add[32] (add[32] v2129[32] -4[32]) 1[32])} value={defs={0x0804856b}, expr=-123[8]}
    addr={defs={0x0804856b}, expr=(add[32] v2129[32] -4[32])} value={defs={0x0804856b}, expr=112[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={}, expr=v2176[32]} }
    sp      = { {defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} }
    bp      = { {defs={}, expr=v2178[32]} }
    si      = { {defs={}, expr=v2179[32]} }
    di      = { {defs={}, expr=v2180[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048570}, expr=0x08048573[32]} }
memory:
0x8048573:pop    ebx
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} }
    bp      = { {defs={}, expr=v2178[32]} }
    si      = { {defs={}, expr=v2179[32]} }
    di      = { {defs={}, expr=v2180[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048573}, expr=0x08048574[32]} }
memory:
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
0x8048574:pop    esi
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v2178[32]} }
    si      = { {defs={0x08048574}, expr=v2224[32]} }
    di      = { {defs={}, expr=v2180[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048574}, expr=0x08048575[32]} }
memory:
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 3[32])} value={defs={0x08048574}, expr=(extract[8] 24[32] 32[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 2[32])} value={defs={0x08048574}, expr=(extract[8] 16[32] 24[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 1[32])} value={defs={0x08048574}, expr=(extract[8] 8[32] 16[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} value={defs={0x08048574}, expr=(extract[8] 0[32] 8[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
0x8048575:pop    edi
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v2178[32]} }
    si      = { {defs={0x08048574}, expr=v2224[32]} }
    di      = { {defs={0x08048575}, expr=v2229[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048575}, expr=0x08048576[32]} }
memory:
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048575}, expr=(extract[8] 24[32] 32[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048575}, expr=(extract[8] 16[32] 24[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048575}, expr=(extract[8] 8[32] 16[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32])} value={defs={0x08048575}, expr=(extract[8] 0[32] 8[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 3[32])} value={defs={0x08048574}, expr=(extract[8] 24[32] 32[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 2[32])} value={defs={0x08048574}, expr=(extract[8] 16[32] 24[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 1[32])} value={defs={0x08048574}, expr=(extract[8] 8[32] 16[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} value={defs={0x08048574}, expr=(extract[8] 0[32] 8[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
0x8048576:pop    ebp
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x08048576}, expr=v2234[32]} }
    si      = { {defs={0x08048574}, expr=v2224[32]} }
    di      = { {defs={0x08048575}, expr=v2229[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048576}, expr=0x08048577[32]} }
memory:
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048576}, expr=(extract[8] 24[32] 32[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048576}, expr=(extract[8] 16[32] 24[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048576}, expr=(extract[8] 8[32] 16[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32])} value={defs={0x08048576}, expr=(extract[8] 0[32] 8[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048575}, expr=(extract[8] 24[32] 32[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048575}, expr=(extract[8] 16[32] 24[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048575}, expr=(extract[8] 8[32] 16[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32])} value={defs={0x08048575}, expr=(extract[8] 0[32] 8[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 3[32])} value={defs={0x08048574}, expr=(extract[8] 24[32] 32[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 2[32])} value={defs={0x08048574}, expr=(extract[8] 16[32] 24[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 1[32])} value={defs={0x08048574}, expr=(extract[8] 8[32] 16[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} value={defs={0x08048574}, expr=(extract[8] 0[32] 8[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
0x8048577:ret    
registers:
    ax      = { {defs={}, expr=v2173[32]} }
    cx      = { {defs={}, expr=v2174[32]} }
    dx      = { {defs={}, expr=v2175[32]} }
    bx      = { {defs={0x08048573}, expr=v2219[32]} }
    sp      = { {defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x08048576}, expr=v2234[32]} }
    si      = { {defs={0x08048574}, expr=v2224[32]} }
    di      = { {defs={0x08048575}, expr=v2229[32]} }
    es      = { {defs={}, expr=v2181[16]} }
    cs      = { {defs={}, expr=v2182[16]} }
    ss      = { {defs={}, expr=v2183[16]} }
    ds      = { {defs={}, expr=v2184[16]} }
    fs      = { {defs={}, expr=v2185[16]} }
    gs      = { {defs={}, expr=v2186[16]} }
    cf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?1      = { {defs={}, expr=v2188[1]} }
    pf      = { {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2177[32] 12[32])))))))} }
    ?3      = { {defs={}, expr=v2190[1]} }
    af      = { {defs={0x08048570}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33])))))} }
    ?5      = { {defs={}, expr=v2192[1]} }
    zf      = { {defs={0x08048570}, expr=(zerop[1] (add[32] v2177[32] 12[32]))} }
    sf      = { {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] v2177[32] 12[32]))} }
    tf      = { {defs={}, expr=v2195[1]} }
    if      = { {defs={}, expr=v2196[1]} }
    df      = { {defs={}, expr=v2197[1]} }
    of      = { {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2177[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2177[32]) 12[33]))))))} }
    iopl0   = { {defs={}, expr=v2199[1]} }
    iopl1   = { {defs={}, expr=v2200[1]} }
    nt      = { {defs={}, expr=v2201[1]} }
    ?15     = { {defs={}, expr=v2202[1]} }
    rf      = { {defs={}, expr=v2203[1]} }
    vm      = { {defs={}, expr=v2204[1]} }
    ac      = { {defs={}, expr=v2205[1]} }
    vif     = { {defs={}, expr=v2206[1]} }
    vip     = { {defs={}, expr=v2207[1]} }
    id      = { {defs={}, expr=v2208[1]} }
    ?22     = { {defs={}, expr=v2209[1]} }
    ?23     = { {defs={}, expr=v2210[1]} }
    ?24     = { {defs={}, expr=v2211[1]} }
    ?25     = { {defs={}, expr=v2212[1]} }
    ?26     = { {defs={}, expr=v2213[1]} }
    ?27     = { {defs={}, expr=v2214[1]} }
    ?28     = { {defs={}, expr=v2215[1]} }
    ?29     = { {defs={}, expr=v2216[1]} }
    ?30     = { {defs={}, expr=v2217[1]} }
    ?31     = { {defs={}, expr=v2218[1]} }
    ip      = { {defs={0x08048577}, expr=v2239[32]} }
memory:
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048577}, expr=(extract[8] 24[32] 32[32] v2239[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048577}, expr=(extract[8] 16[32] 24[32] v2239[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048577}, expr=(extract[8] 8[32] 16[32] v2239[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])} value={defs={0x08048577}, expr=(extract[8] 0[32] 8[32] v2239[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048576}, expr=(extract[8] 24[32] 32[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048576}, expr=(extract[8] 16[32] 24[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048576}, expr=(extract[8] 8[32] 16[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 4[32])} value={defs={0x08048576}, expr=(extract[8] 0[32] 8[32] v2234[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 3[32])} value={defs={0x08048575}, expr=(extract[8] 24[32] 32[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 2[32])} value={defs={0x08048575}, expr=(extract[8] 16[32] 24[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] (add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32]) 1[32])} value={defs={0x08048575}, expr=(extract[8] 8[32] 16[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 4[32])} value={defs={0x08048575}, expr=(extract[8] 0[32] 8[32] v2229[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 3[32])} value={defs={0x08048574}, expr=(extract[8] 24[32] 32[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 2[32])} value={defs={0x08048574}, expr=(extract[8] 16[32] 24[32] v2224[32])}
    addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] (add[32] (add[32] v2177[32] 12[32]) 4[32]) 1[32])} value={defs={0x08048574}, expr=(extract[8] 8[32] 16[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 4[32])} value={defs={0x08048574}, expr=(extract[8] 0[32] 8[32] v2224[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 3[32])} value={defs={0x08048573}, expr=(extract[8] 24[32] 32[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 2[32])} value={defs={0x08048573}, expr=(extract[8] 16[32] 24[32] v2219[32])}
    addr={defs={0x08048570,0x08048573}, expr=(add[32] (add[32] v2177[32] 12[32]) 1[32])} value={defs={0x08048573}, expr=(extract[8] 8[32] 16[32] v2219[32])}
    addr={defs={0x08048570}, expr=(add[32] v2177[32] 12[32])} value={defs={0x08048573}, expr=(extract[8] 0[32] 8[32] v2219[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=v2249[32]} }
    sp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    bp      = { {defs={}, expr=v2251[32]} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={}, expr=v2260[1]} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={}, expr=v2262[1]} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={}, expr=v2264[1]} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={}, expr=v2266[1]} }
    sf      = { {defs={}, expr=v2267[1]} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={}, expr=v2271[1]} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048580}, expr=0x08048581[32]} }
memory:
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
0x8048581:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=v2249[32]} }
    sp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={}, expr=v2260[1]} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={}, expr=v2262[1]} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={}, expr=v2264[1]} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={}, expr=v2266[1]} }
    sf      = { {defs={}, expr=v2267[1]} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={}, expr=v2271[1]} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048581}, expr=0x08048583[32]} }
memory:
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
0x8048583:push   ebx
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=v2249[32]} }
    sp      = { {defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={}, expr=v2260[1]} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={}, expr=v2262[1]} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={}, expr=v2264[1]} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={}, expr=v2266[1]} }
    sf      = { {defs={}, expr=v2267[1]} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={}, expr=v2271[1]} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048583}, expr=0x08048584[32]} }
memory:
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
0x8048584:sub    esp, 0x04
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={}, expr=v2249[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    sf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048584}, expr=0x08048587[32]} }
memory:
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
0x8048587:mov    ebx, 0x080495e8<.ctors>
registers:
    ax      = { {defs={}, expr=v2246[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={0x08048587}, expr=0x080495e8[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    sf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048587}, expr=0x0804858c[32]} }
memory:
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]
registers:
    ax      = { {defs={0x0804858c}, expr=v2292[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={0x08048587}, expr=0x080495e8[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    sf      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2250[32] -4[32]) -4[32])) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x0804858c}, expr=0x08048591[32]} }
memory:
    addr={defs={0x0804858c}, expr=0x080495eb[32]} value={defs={0x0804858c}, expr=(extract[8] 24[32] 32[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495ea[32]} value={defs={0x0804858c}, expr=(extract[8] 16[32] 24[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e9[32]} value={defs={0x0804858c}, expr=(extract[8] 8[32] 16[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e8[32]} value={defs={0x0804858c}, expr=(extract[8] 0[32] 8[32] v2292[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
0x8048591:cmp    eax, 0xff<-0x01>
registers:
    ax      = { {defs={0x0804858c}, expr=v2292[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={0x08048587}, expr=0x080495e8[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x0804858c,0x08048591}, expr=(zerop[1] (add[32] v2292[32] 1[32]))} }
    sf      = { {defs={0x0804858c,0x08048591}, expr=(extract[1] 31[32] 32[32] (add[32] v2292[32] 1[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x0804858c,0x08048591}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x08048591}, expr=0x08048594[32]} }
memory:
    addr={defs={0x0804858c}, expr=0x080495eb[32]} value={defs={0x0804858c}, expr=(extract[8] 24[32] 32[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495ea[32]} value={defs={0x0804858c}, expr=(extract[8] 16[32] 24[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e9[32]} value={defs={0x0804858c}, expr=(extract[8] 8[32] 16[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e8[32]} value={defs={0x0804858c}, expr=(extract[8] 0[32] 8[32] v2292[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
0x8048594:je     0x080485ac<<Insn>>
registers:
    ax      = { {defs={0x0804858c}, expr=v2292[32]} }
    cx      = { {defs={}, expr=v2247[32]} }
    dx      = { {defs={}, expr=v2248[32]} }
    bx      = { {defs={0x08048587}, expr=0x080495e8[32]} }
    sp      = { {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} }
    si      = { {defs={}, expr=v2252[32]} }
    di      = { {defs={}, expr=v2253[32]} }
    es      = { {defs={}, expr=v2254[16]} }
    cs      = { {defs={}, expr=v2255[16]} }
    ss      = { {defs={}, expr=v2256[16]} }
    ds      = { {defs={}, expr=v2257[16]} }
    fs      = { {defs={}, expr=v2258[16]} }
    gs      = { {defs={}, expr=v2259[16]} }
    cf      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    ?1      = { {defs={}, expr=v2261[1]} }
    pf      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2292[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2263[1]} }
    af      = { {defs={0x0804858c,0x08048591}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    ?5      = { {defs={}, expr=v2265[1]} }
    zf      = { {defs={0x0804858c,0x08048591}, expr=(zerop[1] (add[32] v2292[32] 1[32]))} }
    sf      = { {defs={0x0804858c,0x08048591}, expr=(extract[1] 31[32] 32[32] (add[32] v2292[32] 1[32]))} }
    tf      = { {defs={}, expr=v2268[1]} }
    if      = { {defs={}, expr=v2269[1]} }
    df      = { {defs={}, expr=v2270[1]} }
    of      = { {defs={0x0804858c,0x08048591}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2292[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2292[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2272[1]} }
    iopl1   = { {defs={}, expr=v2273[1]} }
    nt      = { {defs={}, expr=v2274[1]} }
    ?15     = { {defs={}, expr=v2275[1]} }
    rf      = { {defs={}, expr=v2276[1]} }
    vm      = { {defs={}, expr=v2277[1]} }
    ac      = { {defs={}, expr=v2278[1]} }
    vif     = { {defs={}, expr=v2279[1]} }
    vip     = { {defs={}, expr=v2280[1]} }
    id      = { {defs={}, expr=v2281[1]} }
    ?22     = { {defs={}, expr=v2282[1]} }
    ?23     = { {defs={}, expr=v2283[1]} }
    ?24     = { {defs={}, expr=v2284[1]} }
    ?25     = { {defs={}, expr=v2285[1]} }
    ?26     = { {defs={}, expr=v2286[1]} }
    ?27     = { {defs={}, expr=v2287[1]} }
    ?28     = { {defs={}, expr=v2288[1]} }
    ?29     = { {defs={}, expr=v2289[1]} }
    ?30     = { {defs={}, expr=v2290[1]} }
    ?31     = { {defs={}, expr=v2291[1]} }
    ip      = { {defs={0x0804858c,0x08048591,0x08048594}, expr=(ite[32] (zerop[1] (add[32] v2292[32] 1[32])) 0x080485ac[32] 0x08048596[32])} }
memory:
    addr={defs={0x0804858c}, expr=0x080495eb[32]} value={defs={0x0804858c}, expr=(extract[8] 24[32] 32[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495ea[32]} value={defs={0x0804858c}, expr=(extract[8] 16[32] 24[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e9[32]} value={defs={0x0804858c}, expr=(extract[8] 8[32] 16[32] v2292[32])}
    addr={defs={0x0804858c}, expr=0x080495e8[32]} value={defs={0x0804858c}, expr=(extract[8] 0[32] 8[32] v2292[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 3[32])} value={defs={0x08048583}, expr=(extract[8] 24[32] 32[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 2[32])} value={defs={0x08048583}, expr=(extract[8] 16[32] 24[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] (add[32] v2250[32] -4[32]) -4[32]) 1[32])} value={defs={0x08048583}, expr=(extract[8] 8[32] 16[32] v2249[32])}
    addr={defs={0x08048580,0x08048583}, expr=(add[32] (add[32] v2250[32] -4[32]) -4[32])} value={defs={0x08048583}, expr=(extract[8] 0[32] 8[32] v2249[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 3[32])} value={defs={0x08048580}, expr=(extract[8] 24[32] 32[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 2[32])} value={defs={0x08048580}, expr=(extract[8] 16[32] 24[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] (add[32] v2250[32] -4[32]) 1[32])} value={defs={0x08048580}, expr=(extract[8] 8[32] 16[32] v2251[32])}
    addr={defs={0x08048580}, expr=(add[32] v2250[32] -4[32])} value={defs={0x08048580}, expr=(extract[8] 0[32] 8[32] v2251[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
registers:
    ax      = { {defs={}, expr=v2299[32]} }
    cx      = { {defs={}, expr=v2300[32]} }
    dx      = { {defs={}, expr=v2301[32]} }
    bx      = { {defs={}, expr=v2302[32]} }
    sp      = { {defs={}, expr=v2303[32]} }
    bp      = { {defs={}, expr=v2304[32]} }
    si      = { {defs={}, expr=v2305[32]} }
    di      = { {defs={}, expr=v2306[32]} }
    es      = { {defs={}, expr=v2307[16]} }
    cs      = { {defs={}, expr=v2308[16]} }
    ss      = { {defs={}, expr=v2309[16]} }
    ds      = { {defs={}, expr=v2310[16]} }
    fs      = { {defs={}, expr=v2311[16]} }
    gs      = { {defs={}, expr=v2312[16]} }
    cf      = { {defs={}, expr=v2313[1]} }
    ?1      = { {defs={}, expr=v2314[1]} }
    pf      = { {defs={}, expr=v2315[1]} }
    ?3      = { {defs={}, expr=v2316[1]} }
    af      = { {defs={}, expr=v2317[1]} }
    ?5      = { {defs={}, expr=v2318[1]} }
    zf      = { {defs={}, expr=v2319[1]} }
    sf      = { {defs={}, expr=v2320[1]} }
    tf      = { {defs={}, expr=v2321[1]} }
    if      = { {defs={}, expr=v2322[1]} }
    df      = { {defs={}, expr=v2323[1]} }
    of      = { {defs={}, expr=v2324[1]} }
    iopl0   = { {defs={}, expr=v2325[1]} }
    iopl1   = { {defs={}, expr=v2326[1]} }
    nt      = { {defs={}, expr=v2327[1]} }
    ?15     = { {defs={}, expr=v2328[1]} }
    rf      = { {defs={}, expr=v2329[1]} }
    vm      = { {defs={}, expr=v2330[1]} }
    ac      = { {defs={}, expr=v2331[1]} }
    vif     = { {defs={}, expr=v2332[1]} }
    vip     = { {defs={}, expr=v2333[1]} }
    id      = { {defs={}, expr=v2334[1]} }
    ?22     = { {defs={}, expr=v2335[1]} }
    ?23     = { {defs={}, expr=v2336[1]} }
    ?24     = { {defs={}, expr=v2337[1]} }
    ?25     = { {defs={}, expr=v2338[1]} }
    ?26     = { {defs={}, expr=v2339[1]} }
    ?27     = { {defs={}, expr=v2340[1]} }
    ?28     = { {defs={}, expr=v2341[1]} }
    ?29     = { {defs={}, expr=v2342[1]} }
    ?30     = { {defs={}, expr=v2343[1]} }
    ?31     = { {defs={}, expr=v2344[1]} }
    ip      = { {defs={0x08048596}, expr=0x08048599[32]} }
memory:
0x8048599:lea    edi, [edi + 0x00000000]
registers:
    ax      = { {defs={}, expr=v2299[32]} }
    cx      = { {defs={}, expr=v2300[32]} }
    dx      = { {defs={}, expr=v2301[32]} }
    bx      = { {defs={}, expr=v2302[32]} }
    sp      = { {defs={}, expr=v2303[32]} }
    bp      = { {defs={}, expr=v2304[32]} }
    si      = { {defs={}, expr=v2305[32]} }
    di      = { {defs={}, expr=v2306[32]} }
    es      = { {defs={}, expr=v2307[16]} }
    cs      = { {defs={}, expr=v2308[16]} }
    ss      = { {defs={}, expr=v2309[16]} }
    ds      = { {defs={}, expr=v2310[16]} }
    fs      = { {defs={}, expr=v2311[16]} }
    gs      = { {defs={}, expr=v2312[16]} }
    cf      = { {defs={}, expr=v2313[1]} }
    ?1      = { {defs={}, expr=v2314[1]} }
    pf      = { {defs={}, expr=v2315[1]} }
    ?3      = { {defs={}, expr=v2316[1]} }
    af      = { {defs={}, expr=v2317[1]} }
    ?5      = { {defs={}, expr=v2318[1]} }
    zf      = { {defs={}, expr=v2319[1]} }
    sf      = { {defs={}, expr=v2320[1]} }
    tf      = { {defs={}, expr=v2321[1]} }
    if      = { {defs={}, expr=v2322[1]} }
    df      = { {defs={}, expr=v2323[1]} }
    of      = { {defs={}, expr=v2324[1]} }
    iopl0   = { {defs={}, expr=v2325[1]} }
    iopl1   = { {defs={}, expr=v2326[1]} }
    nt      = { {defs={}, expr=v2327[1]} }
    ?15     = { {defs={}, expr=v2328[1]} }
    rf      = { {defs={}, expr=v2329[1]} }
    vm      = { {defs={}, expr=v2330[1]} }
    ac      = { {defs={}, expr=v2331[1]} }
    vif     = { {defs={}, expr=v2332[1]} }
    vip     = { {defs={}, expr=v2333[1]} }
    id      = { {defs={}, expr=v2334[1]} }
    ?22     = { {defs={}, expr=v2335[1]} }
    ?23     = { {defs={}, expr=v2336[1]} }
    ?24     = { {defs={}, expr=v2337[1]} }
    ?25     = { {defs={}, expr=v2338[1]} }
    ?26     = { {defs={}, expr=v2339[1]} }
    ?27     = { {defs={}, expr=v2340[1]} }
    ?28     = { {defs={}, expr=v2341[1]} }
    ?29     = { {defs={}, expr=v2342[1]} }
    ?30     = { {defs={}, expr=v2343[1]} }
    ?31     = { {defs={}, expr=v2344[1]} }
    ip      = { {defs={0x08048599}, expr=0x080485a0[32]} }
memory:
0x80485a0:sub    ebx, 0x04
registers:
    ax      = { {defs={}, expr=v2299[32]} }
    cx      = { {defs={}, expr=v2300[32]} }
    dx      = { {defs={}, expr=v2301[32]} }
    bx      = { {defs={0x080485a0}, expr=(add[32] v2302[32] -4[32])} }
    sp      = { {defs={}, expr=v2303[32]} }
    bp      = { {defs={}, expr=v2304[32]} }
    si      = { {defs={}, expr=v2305[32]} }
    di      = { {defs={}, expr=v2306[32]} }
    es      = { {defs={}, expr=v2307[16]} }
    cs      = { {defs={}, expr=v2308[16]} }
    ss      = { {defs={}, expr=v2309[16]} }
    ds      = { {defs={}, expr=v2310[16]} }
    fs      = { {defs={}, expr=v2311[16]} }
    gs      = { {defs={}, expr=v2312[16]} }
    cf      = { {defs={0x080485a0}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2314[1]} }
    pf      = { {defs={0x080485a0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))))))} }
    ?3      = { {defs={}, expr=v2316[1]} }
    af      = { {defs={0x080485a0}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2318[1]} }
    zf      = { {defs={0x080485a0}, expr=(zerop[1] (add[32] v2302[32] -4[32]))} }
    sf      = { {defs={0x080485a0}, expr=(extract[1] 31[32] 32[32] (add[32] v2302[32] -4[32]))} }
    tf      = { {defs={}, expr=v2321[1]} }
    if      = { {defs={}, expr=v2322[1]} }
    df      = { {defs={}, expr=v2323[1]} }
    of      = { {defs={0x080485a0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2325[1]} }
    iopl1   = { {defs={}, expr=v2326[1]} }
    nt      = { {defs={}, expr=v2327[1]} }
    ?15     = { {defs={}, expr=v2328[1]} }
    rf      = { {defs={}, expr=v2329[1]} }
    vm      = { {defs={}, expr=v2330[1]} }
    ac      = { {defs={}, expr=v2331[1]} }
    vif     = { {defs={}, expr=v2332[1]} }
    vip     = { {defs={}, expr=v2333[1]} }
    id      = { {defs={}, expr=v2334[1]} }
    ?22     = { {defs={}, expr=v2335[1]} }
    ?23     = { {defs={}, expr=v2336[1]} }
    ?24     = { {defs={}, expr=v2337[1]} }
    ?25     = { {defs={}, expr=v2338[1]} }
    ?26     = { {defs={}, expr=v2339[1]} }
    ?27     = { {defs={}, expr=v2340[1]} }
    ?28     = { {defs={}, expr=v2341[1]} }
    ?29     = { {defs={}, expr=v2342[1]} }
    ?30     = { {defs={}, expr=v2343[1]} }
    ?31     = { {defs={}, expr=v2344[1]} }
    ip      = { {defs={0x080485a0}, expr=0x080485a3[32]} }
memory:
0x80485a3:call   eax
registers:
    ax      = { {defs={}, expr=v2299[32]} }
    cx      = { {defs={}, expr=v2300[32]} }
    dx      = { {defs={}, expr=v2301[32]} }
    bx      = { {defs={0x080485a0}, expr=(add[32] v2302[32] -4[32])} }
    sp      = { {defs={0x080485a3}, expr=(add[32] v2303[32] -4[32])} }
    bp      = { {defs={}, expr=v2304[32]} }
    si      = { {defs={}, expr=v2305[32]} }
    di      = { {defs={}, expr=v2306[32]} }
    es      = { {defs={}, expr=v2307[16]} }
    cs      = { {defs={}, expr=v2308[16]} }
    ss      = { {defs={}, expr=v2309[16]} }
    ds      = { {defs={}, expr=v2310[16]} }
    fs      = { {defs={}, expr=v2311[16]} }
    gs      = { {defs={}, expr=v2312[16]} }
    cf      = { {defs={0x080485a0}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    ?1      = { {defs={}, expr=v2314[1]} }
    pf      = { {defs={0x080485a0}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2302[32] -4[32])))))))} }
    ?3      = { {defs={}, expr=v2316[1]} }
    af      = { {defs={0x080485a0}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    ?5      = { {defs={}, expr=v2318[1]} }
    zf      = { {defs={0x080485a0}, expr=(zerop[1] (add[32] v2302[32] -4[32]))} }
    sf      = { {defs={0x080485a0}, expr=(extract[1] 31[32] 32[32] (add[32] v2302[32] -4[32]))} }
    tf      = { {defs={}, expr=v2321[1]} }
    if      = { {defs={}, expr=v2322[1]} }
    df      = { {defs={}, expr=v2323[1]} }
    of      = { {defs={0x080485a0}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2302[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2302[32]) 4294967292[33]))))))} }
    iopl0   = { {defs={}, expr=v2325[1]} }
    iopl1   = { {defs={}, expr=v2326[1]} }
    nt      = { {defs={}, expr=v2327[1]} }
    ?15     = { {defs={}, expr=v2328[1]} }
    rf      = { {defs={}, expr=v2329[1]} }
    vm      = { {defs={}, expr=v2330[1]} }
    ac      = { {defs={}, expr=v2331[1]} }
    vif     = { {defs={}, expr=v2332[1]} }
    vip     = { {defs={}, expr=v2333[1]} }
    id      = { {defs={}, expr=v2334[1]} }
    ?22     = { {defs={}, expr=v2335[1]} }
    ?23     = { {defs={}, expr=v2336[1]} }
    ?24     = { {defs={}, expr=v2337[1]} }
    ?25     = { {defs={}, expr=v2338[1]} }
    ?26     = { {defs={}, expr=v2339[1]} }
    ?27     = { {defs={}, expr=v2340[1]} }
    ?28     = { {defs={}, expr=v2341[1]} }
    ?29     = { {defs={}, expr=v2342[1]} }
    ?30     = { {defs={}, expr=v2343[1]} }
    ?31     = { {defs={}, expr=v2344[1]} }
    ip      = { {defs={}, expr=v2299[32]} }
memory:
    addr={defs={0x080485a3}, expr=(add[32] (add[32] v2303[32] -4[32]) 3[32])} value={defs={0x080485a3}, expr=8[8]}
    addr={defs={0x080485a3}, expr=(add[32] (add[32] v2303[32] -4[32]) 2[32])} value={defs={0x080485a3}, expr=4[8]}
    addr={defs={0x080485a3}, expr=(add[32] (add[32] v2303[32] -4[32]) 1[32])} value={defs={0x080485a3}, expr=-123[8]}
    addr={defs={0x080485a3}, expr=(add[32] v2303[32] -4[32])} value={defs={0x080485a3}, expr=-91[8]}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
registers:
    ax      = { {defs={0x080485a5}, expr=v2393[32]} }
    cx      = { {defs={}, expr=v2348[32]} }
    dx      = { {defs={}, expr=v2349[32]} }
    bx      = { {defs={}, expr=v2350[32]} }
    sp      = { {defs={}, expr=v2351[32]} }
    bp      = { {defs={}, expr=v2352[32]} }
    si      = { {defs={}, expr=v2353[32]} }
    di      = { {defs={}, expr=v2354[32]} }
    es      = { {defs={}, expr=v2355[16]} }
    cs      = { {defs={}, expr=v2356[16]} }
    ss      = { {defs={}, expr=v2357[16]} }
    ds      = { {defs={}, expr=v2358[16]} }
    fs      = { {defs={}, expr=v2359[16]} }
    gs      = { {defs={}, expr=v2360[16]} }
    cf      = { {defs={}, expr=v2361[1]} }
    ?1      = { {defs={}, expr=v2362[1]} }
    pf      = { {defs={}, expr=v2363[1]} }
    ?3      = { {defs={}, expr=v2364[1]} }
    af      = { {defs={}, expr=v2365[1]} }
    ?5      = { {defs={}, expr=v2366[1]} }
    zf      = { {defs={}, expr=v2367[1]} }
    sf      = { {defs={}, expr=v2368[1]} }
    tf      = { {defs={}, expr=v2369[1]} }
    if      = { {defs={}, expr=v2370[1]} }
    df      = { {defs={}, expr=v2371[1]} }
    of      = { {defs={}, expr=v2372[1]} }
    iopl0   = { {defs={}, expr=v2373[1]} }
    iopl1   = { {defs={}, expr=v2374[1]} }
    nt      = { {defs={}, expr=v2375[1]} }
    ?15     = { {defs={}, expr=v2376[1]} }
    rf      = { {defs={}, expr=v2377[1]} }
    vm      = { {defs={}, expr=v2378[1]} }
    ac      = { {defs={}, expr=v2379[1]} }
    vif     = { {defs={}, expr=v2380[1]} }
    vip     = { {defs={}, expr=v2381[1]} }
    id      = { {defs={}, expr=v2382[1]} }
    ?22     = { {defs={}, expr=v2383[1]} }
    ?23     = { {defs={}, expr=v2384[1]} }
    ?24     = { {defs={}, expr=v2385[1]} }
    ?25     = { {defs={}, expr=v2386[1]} }
    ?26     = { {defs={}, expr=v2387[1]} }
    ?27     = { {defs={}, expr=v2388[1]} }
    ?28     = { {defs={}, expr=v2389[1]} }
    ?29     = { {defs={}, expr=v2390[1]} }
    ?30     = { {defs={}, expr=v2391[1]} }
    ?31     = { {defs={}, expr=v2392[1]} }
    ip      = { {defs={0x080485a5}, expr=0x080485a7[32]} }
memory:
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 3[32])} value={defs={0x080485a5}, expr=(extract[8] 24[32] 32[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 2[32])} value={defs={0x080485a5}, expr=(extract[8] 16[32] 24[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 1[32])} value={defs={0x080485a5}, expr=(extract[8] 8[32] 16[32] v2393[32])}
    addr={defs={}, expr=v2350[32]} value={defs={0x080485a5}, expr=(extract[8] 0[32] 8[32] v2393[32])}
0x80485a7:cmp    eax, 0xff<-0x01>
registers:
    ax      = { {defs={0x080485a5}, expr=v2393[32]} }
    cx      = { {defs={}, expr=v2348[32]} }
    dx      = { {defs={}, expr=v2349[32]} }
    bx      = { {defs={}, expr=v2350[32]} }
    sp      = { {defs={}, expr=v2351[32]} }
    bp      = { {defs={}, expr=v2352[32]} }
    si      = { {defs={}, expr=v2353[32]} }
    di      = { {defs={}, expr=v2354[32]} }
    es      = { {defs={}, expr=v2355[16]} }
    cs      = { {defs={}, expr=v2356[16]} }
    ss      = { {defs={}, expr=v2357[16]} }
    ds      = { {defs={}, expr=v2358[16]} }
    fs      = { {defs={}, expr=v2359[16]} }
    gs      = { {defs={}, expr=v2360[16]} }
    cf      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    ?1      = { {defs={}, expr=v2362[1]} }
    pf      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2364[1]} }
    af      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    ?5      = { {defs={}, expr=v2366[1]} }
    zf      = { {defs={0x080485a5,0x080485a7}, expr=(zerop[1] (add[32] v2393[32] 1[32]))} }
    sf      = { {defs={0x080485a5,0x080485a7}, expr=(extract[1] 31[32] 32[32] (add[32] v2393[32] 1[32]))} }
    tf      = { {defs={}, expr=v2369[1]} }
    if      = { {defs={}, expr=v2370[1]} }
    df      = { {defs={}, expr=v2371[1]} }
    of      = { {defs={0x080485a5,0x080485a7}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2373[1]} }
    iopl1   = { {defs={}, expr=v2374[1]} }
    nt      = { {defs={}, expr=v2375[1]} }
    ?15     = { {defs={}, expr=v2376[1]} }
    rf      = { {defs={}, expr=v2377[1]} }
    vm      = { {defs={}, expr=v2378[1]} }
    ac      = { {defs={}, expr=v2379[1]} }
    vif     = { {defs={}, expr=v2380[1]} }
    vip     = { {defs={}, expr=v2381[1]} }
    id      = { {defs={}, expr=v2382[1]} }
    ?22     = { {defs={}, expr=v2383[1]} }
    ?23     = { {defs={}, expr=v2384[1]} }
    ?24     = { {defs={}, expr=v2385[1]} }
    ?25     = { {defs={}, expr=v2386[1]} }
    ?26     = { {defs={}, expr=v2387[1]} }
    ?27     = { {defs={}, expr=v2388[1]} }
    ?28     = { {defs={}, expr=v2389[1]} }
    ?29     = { {defs={}, expr=v2390[1]} }
    ?30     = { {defs={}, expr=v2391[1]} }
    ?31     = { {defs={}, expr=v2392[1]} }
    ip      = { {defs={0x080485a7}, expr=0x080485aa[32]} }
memory:
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 3[32])} value={defs={0x080485a5}, expr=(extract[8] 24[32] 32[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 2[32])} value={defs={0x080485a5}, expr=(extract[8] 16[32] 24[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 1[32])} value={defs={0x080485a5}, expr=(extract[8] 8[32] 16[32] v2393[32])}
    addr={defs={}, expr=v2350[32]} value={defs={0x080485a5}, expr=(extract[8] 0[32] 8[32] v2393[32])}
0x80485aa:jne    0x080485a0<<Insn>>
registers:
    ax      = { {defs={0x080485a5}, expr=v2393[32]} }
    cx      = { {defs={}, expr=v2348[32]} }
    dx      = { {defs={}, expr=v2349[32]} }
    bx      = { {defs={}, expr=v2350[32]} }
    sp      = { {defs={}, expr=v2351[32]} }
    bp      = { {defs={}, expr=v2352[32]} }
    si      = { {defs={}, expr=v2353[32]} }
    di      = { {defs={}, expr=v2354[32]} }
    es      = { {defs={}, expr=v2355[16]} }
    cs      = { {defs={}, expr=v2356[16]} }
    ss      = { {defs={}, expr=v2357[16]} }
    ds      = { {defs={}, expr=v2358[16]} }
    fs      = { {defs={}, expr=v2359[16]} }
    gs      = { {defs={}, expr=v2360[16]} }
    cf      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    ?1      = { {defs={}, expr=v2362[1]} }
    pf      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2393[32] 1[32])))))))} }
    ?3      = { {defs={}, expr=v2364[1]} }
    af      = { {defs={0x080485a5,0x080485a7}, expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    ?5      = { {defs={}, expr=v2366[1]} }
    zf      = { {defs={0x080485a5,0x080485a7}, expr=(zerop[1] (add[32] v2393[32] 1[32]))} }
    sf      = { {defs={0x080485a5,0x080485a7}, expr=(extract[1] 31[32] 32[32] (add[32] v2393[32] 1[32]))} }
    tf      = { {defs={}, expr=v2369[1]} }
    if      = { {defs={}, expr=v2370[1]} }
    df      = { {defs={}, expr=v2371[1]} }
    of      = { {defs={0x080485a5,0x080485a7}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2393[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2393[32]) 1[33]))))))} }
    iopl0   = { {defs={}, expr=v2373[1]} }
    iopl1   = { {defs={}, expr=v2374[1]} }
    nt      = { {defs={}, expr=v2375[1]} }
    ?15     = { {defs={}, expr=v2376[1]} }
    rf      = { {defs={}, expr=v2377[1]} }
    vm      = { {defs={}, expr=v2378[1]} }
    ac      = { {defs={}, expr=v2379[1]} }
    vif     = { {defs={}, expr=v2380[1]} }
    vip     = { {defs={}, expr=v2381[1]} }
    id      = { {defs={}, expr=v2382[1]} }
    ?22     = { {defs={}, expr=v2383[1]} }
    ?23     = { {defs={}, expr=v2384[1]} }
    ?24     = { {defs={}, expr=v2385[1]} }
    ?25     = { {defs={}, expr=v2386[1]} }
    ?26     = { {defs={}, expr=v2387[1]} }
    ?27     = { {defs={}, expr=v2388[1]} }
    ?28     = { {defs={}, expr=v2389[1]} }
    ?29     = { {defs={}, expr=v2390[1]} }
    ?30     = { {defs={}, expr=v2391[1]} }
    ?31     = { {defs={}, expr=v2392[1]} }
    ip      = { {defs={0x080485a5,0x080485a7,0x080485aa}, expr=(ite[32] (invert[1] (zerop[1] (add[32] v2393[32] 1[32]))) 0x080485a0[32] 0x080485ac[32])} }
memory:
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 3[32])} value={defs={0x080485a5}, expr=(extract[8] 24[32] 32[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 2[32])} value={defs={0x080485a5}, expr=(extract[8] 16[32] 24[32] v2393[32])}
    addr={defs={0x080485a5}, expr=(add[32] v2350[32] 1[32])} value={defs={0x080485a5}, expr=(extract[8] 8[32] 16[32] v2393[32])}
    addr={defs={}, expr=v2350[32]} value={defs={0x080485a5}, expr=(extract[8] 0[32] 8[32] v2393[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
registers:
    ax      = { {defs={0x080485ac}, expr=v2446[32]} }
    cx      = { {defs={}, expr=v2401[32]} }
    dx      = { {defs={}, expr=v2402[32]} }
    bx      = { {defs={}, expr=v2403[32]} }
    sp      = { {defs={0x080485ac}, expr=(add[32] v2404[32] 4[32])} }
    bp      = { {defs={}, expr=v2405[32]} }
    si      = { {defs={}, expr=v2406[32]} }
    di      = { {defs={}, expr=v2407[32]} }
    es      = { {defs={}, expr=v2408[16]} }
    cs      = { {defs={}, expr=v2409[16]} }
    ss      = { {defs={}, expr=v2410[16]} }
    ds      = { {defs={}, expr=v2411[16]} }
    fs      = { {defs={}, expr=v2412[16]} }
    gs      = { {defs={}, expr=v2413[16]} }
    cf      = { {defs={}, expr=v2414[1]} }
    ?1      = { {defs={}, expr=v2415[1]} }
    pf      = { {defs={}, expr=v2416[1]} }
    ?3      = { {defs={}, expr=v2417[1]} }
    af      = { {defs={}, expr=v2418[1]} }
    ?5      = { {defs={}, expr=v2419[1]} }
    zf      = { {defs={}, expr=v2420[1]} }
    sf      = { {defs={}, expr=v2421[1]} }
    tf      = { {defs={}, expr=v2422[1]} }
    if      = { {defs={}, expr=v2423[1]} }
    df      = { {defs={}, expr=v2424[1]} }
    of      = { {defs={}, expr=v2425[1]} }
    iopl0   = { {defs={}, expr=v2426[1]} }
    iopl1   = { {defs={}, expr=v2427[1]} }
    nt      = { {defs={}, expr=v2428[1]} }
    ?15     = { {defs={}, expr=v2429[1]} }
    rf      = { {defs={}, expr=v2430[1]} }
    vm      = { {defs={}, expr=v2431[1]} }
    ac      = { {defs={}, expr=v2432[1]} }
    vif     = { {defs={}, expr=v2433[1]} }
    vip     = { {defs={}, expr=v2434[1]} }
    id      = { {defs={}, expr=v2435[1]} }
    ?22     = { {defs={}, expr=v2436[1]} }
    ?23     = { {defs={}, expr=v2437[1]} }
    ?24     = { {defs={}, expr=v2438[1]} }
    ?25     = { {defs={}, expr=v2439[1]} }
    ?26     = { {defs={}, expr=v2440[1]} }
    ?27     = { {defs={}, expr=v2441[1]} }
    ?28     = { {defs={}, expr=v2442[1]} }
    ?29     = { {defs={}, expr=v2443[1]} }
    ?30     = { {defs={}, expr=v2444[1]} }
    ?31     = { {defs={}, expr=v2445[1]} }
    ip      = { {defs={0x080485ac}, expr=0x080485ad[32]} }
memory:
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 3[32])} value={defs={0x080485ac}, expr=(extract[8] 24[32] 32[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 2[32])} value={defs={0x080485ac}, expr=(extract[8] 16[32] 24[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 1[32])} value={defs={0x080485ac}, expr=(extract[8] 8[32] 16[32] v2446[32])}
    addr={defs={}, expr=v2404[32]} value={defs={0x080485ac}, expr=(extract[8] 0[32] 8[32] v2446[32])}
0x80485ad:pop    ebx
registers:
    ax      = { {defs={0x080485ac}, expr=v2446[32]} }
    cx      = { {defs={}, expr=v2401[32]} }
    dx      = { {defs={}, expr=v2402[32]} }
    bx      = { {defs={0x080485ad}, expr=v2451[32]} }
    sp      = { {defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v2405[32]} }
    si      = { {defs={}, expr=v2406[32]} }
    di      = { {defs={}, expr=v2407[32]} }
    es      = { {defs={}, expr=v2408[16]} }
    cs      = { {defs={}, expr=v2409[16]} }
    ss      = { {defs={}, expr=v2410[16]} }
    ds      = { {defs={}, expr=v2411[16]} }
    fs      = { {defs={}, expr=v2412[16]} }
    gs      = { {defs={}, expr=v2413[16]} }
    cf      = { {defs={}, expr=v2414[1]} }
    ?1      = { {defs={}, expr=v2415[1]} }
    pf      = { {defs={}, expr=v2416[1]} }
    ?3      = { {defs={}, expr=v2417[1]} }
    af      = { {defs={}, expr=v2418[1]} }
    ?5      = { {defs={}, expr=v2419[1]} }
    zf      = { {defs={}, expr=v2420[1]} }
    sf      = { {defs={}, expr=v2421[1]} }
    tf      = { {defs={}, expr=v2422[1]} }
    if      = { {defs={}, expr=v2423[1]} }
    df      = { {defs={}, expr=v2424[1]} }
    of      = { {defs={}, expr=v2425[1]} }
    iopl0   = { {defs={}, expr=v2426[1]} }
    iopl1   = { {defs={}, expr=v2427[1]} }
    nt      = { {defs={}, expr=v2428[1]} }
    ?15     = { {defs={}, expr=v2429[1]} }
    rf      = { {defs={}, expr=v2430[1]} }
    vm      = { {defs={}, expr=v2431[1]} }
    ac      = { {defs={}, expr=v2432[1]} }
    vif     = { {defs={}, expr=v2433[1]} }
    vip     = { {defs={}, expr=v2434[1]} }
    id      = { {defs={}, expr=v2435[1]} }
    ?22     = { {defs={}, expr=v2436[1]} }
    ?23     = { {defs={}, expr=v2437[1]} }
    ?24     = { {defs={}, expr=v2438[1]} }
    ?25     = { {defs={}, expr=v2439[1]} }
    ?26     = { {defs={}, expr=v2440[1]} }
    ?27     = { {defs={}, expr=v2441[1]} }
    ?28     = { {defs={}, expr=v2442[1]} }
    ?29     = { {defs={}, expr=v2443[1]} }
    ?30     = { {defs={}, expr=v2444[1]} }
    ?31     = { {defs={}, expr=v2445[1]} }
    ip      = { {defs={0x080485ad}, expr=0x080485ae[32]} }
memory:
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 3[32])} value={defs={0x080485ad}, expr=(extract[8] 24[32] 32[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 2[32])} value={defs={0x080485ad}, expr=(extract[8] 16[32] 24[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 1[32])} value={defs={0x080485ad}, expr=(extract[8] 8[32] 16[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 4[32])} value={defs={0x080485ad}, expr=(extract[8] 0[32] 8[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 3[32])} value={defs={0x080485ac}, expr=(extract[8] 24[32] 32[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 2[32])} value={defs={0x080485ac}, expr=(extract[8] 16[32] 24[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 1[32])} value={defs={0x080485ac}, expr=(extract[8] 8[32] 16[32] v2446[32])}
    addr={defs={}, expr=v2404[32]} value={defs={0x080485ac}, expr=(extract[8] 0[32] 8[32] v2446[32])}
0x80485ae:pop    ebp
registers:
    ax      = { {defs={0x080485ac}, expr=v2446[32]} }
    cx      = { {defs={}, expr=v2401[32]} }
    dx      = { {defs={}, expr=v2402[32]} }
    bx      = { {defs={0x080485ad}, expr=v2451[32]} }
    sp      = { {defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x080485ae}, expr=v2456[32]} }
    si      = { {defs={}, expr=v2406[32]} }
    di      = { {defs={}, expr=v2407[32]} }
    es      = { {defs={}, expr=v2408[16]} }
    cs      = { {defs={}, expr=v2409[16]} }
    ss      = { {defs={}, expr=v2410[16]} }
    ds      = { {defs={}, expr=v2411[16]} }
    fs      = { {defs={}, expr=v2412[16]} }
    gs      = { {defs={}, expr=v2413[16]} }
    cf      = { {defs={}, expr=v2414[1]} }
    ?1      = { {defs={}, expr=v2415[1]} }
    pf      = { {defs={}, expr=v2416[1]} }
    ?3      = { {defs={}, expr=v2417[1]} }
    af      = { {defs={}, expr=v2418[1]} }
    ?5      = { {defs={}, expr=v2419[1]} }
    zf      = { {defs={}, expr=v2420[1]} }
    sf      = { {defs={}, expr=v2421[1]} }
    tf      = { {defs={}, expr=v2422[1]} }
    if      = { {defs={}, expr=v2423[1]} }
    df      = { {defs={}, expr=v2424[1]} }
    of      = { {defs={}, expr=v2425[1]} }
    iopl0   = { {defs={}, expr=v2426[1]} }
    iopl1   = { {defs={}, expr=v2427[1]} }
    nt      = { {defs={}, expr=v2428[1]} }
    ?15     = { {defs={}, expr=v2429[1]} }
    rf      = { {defs={}, expr=v2430[1]} }
    vm      = { {defs={}, expr=v2431[1]} }
    ac      = { {defs={}, expr=v2432[1]} }
    vif     = { {defs={}, expr=v2433[1]} }
    vip     = { {defs={}, expr=v2434[1]} }
    id      = { {defs={}, expr=v2435[1]} }
    ?22     = { {defs={}, expr=v2436[1]} }
    ?23     = { {defs={}, expr=v2437[1]} }
    ?24     = { {defs={}, expr=v2438[1]} }
    ?25     = { {defs={}, expr=v2439[1]} }
    ?26     = { {defs={}, expr=v2440[1]} }
    ?27     = { {defs={}, expr=v2441[1]} }
    ?28     = { {defs={}, expr=v2442[1]} }
    ?29     = { {defs={}, expr=v2443[1]} }
    ?30     = { {defs={}, expr=v2444[1]} }
    ?31     = { {defs={}, expr=v2445[1]} }
    ip      = { {defs={0x080485ae}, expr=0x080485af[32]} }
memory:
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 3[32])} value={defs={0x080485ae}, expr=(extract[8] 24[32] 32[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 2[32])} value={defs={0x080485ae}, expr=(extract[8] 16[32] 24[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 1[32])} value={defs={0x080485ae}, expr=(extract[8] 8[32] 16[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 4[32])} value={defs={0x080485ae}, expr=(extract[8] 0[32] 8[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 3[32])} value={defs={0x080485ad}, expr=(extract[8] 24[32] 32[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 2[32])} value={defs={0x080485ad}, expr=(extract[8] 16[32] 24[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 1[32])} value={defs={0x080485ad}, expr=(extract[8] 8[32] 16[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 4[32])} value={defs={0x080485ad}, expr=(extract[8] 0[32] 8[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 3[32])} value={defs={0x080485ac}, expr=(extract[8] 24[32] 32[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 2[32])} value={defs={0x080485ac}, expr=(extract[8] 16[32] 24[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 1[32])} value={defs={0x080485ac}, expr=(extract[8] 8[32] 16[32] v2446[32])}
    addr={defs={}, expr=v2404[32]} value={defs={0x080485ac}, expr=(extract[8] 0[32] 8[32] v2446[32])}
0x80485af:ret    
registers:
    ax      = { {defs={0x080485ac}, expr=v2446[32]} }
    cx      = { {defs={}, expr=v2401[32]} }
    dx      = { {defs={}, expr=v2402[32]} }
    bx      = { {defs={0x080485ad}, expr=v2451[32]} }
    sp      = { {defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] (add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32]) 4[32])} }
    bp      = { {defs={0x080485ae}, expr=v2456[32]} }
    si      = { {defs={}, expr=v2406[32]} }
    di      = { {defs={}, expr=v2407[32]} }
    es      = { {defs={}, expr=v2408[16]} }
    cs      = { {defs={}, expr=v2409[16]} }
    ss      = { {defs={}, expr=v2410[16]} }
    ds      = { {defs={}, expr=v2411[16]} }
    fs      = { {defs={}, expr=v2412[16]} }
    gs      = { {defs={}, expr=v2413[16]} }
    cf      = { {defs={}, expr=v2414[1]} }
    ?1      = { {defs={}, expr=v2415[1]} }
    pf      = { {defs={}, expr=v2416[1]} }
    ?3      = { {defs={}, expr=v2417[1]} }
    af      = { {defs={}, expr=v2418[1]} }
    ?5      = { {defs={}, expr=v2419[1]} }
    zf      = { {defs={}, expr=v2420[1]} }
    sf      = { {defs={}, expr=v2421[1]} }
    tf      = { {defs={}, expr=v2422[1]} }
    if      = { {defs={}, expr=v2423[1]} }
    df      = { {defs={}, expr=v2424[1]} }
    of      = { {defs={}, expr=v2425[1]} }
    iopl0   = { {defs={}, expr=v2426[1]} }
    iopl1   = { {defs={}, expr=v2427[1]} }
    nt      = { {defs={}, expr=v2428[1]} }
    ?15     = { {defs={}, expr=v2429[1]} }
    rf      = { {defs={}, expr=v2430[1]} }
    vm      = { {defs={}, expr=v2431[1]} }
    ac      = { {defs={}, expr=v2432[1]} }
    vif     = { {defs={}, expr=v2433[1]} }
    vip     = { {defs={}, expr=v2434[1]} }
    id      = { {defs={}, expr=v2435[1]} }
    ?22     = { {defs={}, expr=v2436[1]} }
    ?23     = { {defs={}, expr=v2437[1]} }
    ?24     = { {defs={}, expr=v2438[1]} }
    ?25     = { {defs={}, expr=v2439[1]} }
    ?26     = { {defs={}, expr=v2440[1]} }
    ?27     = { {defs={}, expr=v2441[1]} }
    ?28     = { {defs={}, expr=v2442[1]} }
    ?29     = { {defs={}, expr=v2443[1]} }
    ?30     = { {defs={}, expr=v2444[1]} }
    ?31     = { {defs={}, expr=v2445[1]} }
    ip      = { {defs={0x080485af}, expr=v2461[32]} }
memory:
    addr={defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] (add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32]) 3[32])} value={defs={0x080485af}, expr=(extract[8] 24[32] 32[32] v2461[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] (add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32]) 2[32])} value={defs={0x080485af}, expr=(extract[8] 16[32] 24[32] v2461[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] (add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32]) 1[32])} value={defs={0x080485af}, expr=(extract[8] 8[32] 16[32] v2461[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 4[32])} value={defs={0x080485af}, expr=(extract[8] 0[32] 8[32] v2461[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 3[32])} value={defs={0x080485ae}, expr=(extract[8] 24[32] 32[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 2[32])} value={defs={0x080485ae}, expr=(extract[8] 16[32] 24[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] (add[32] (add[32] v2404[32] 4[32]) 4[32]) 1[32])} value={defs={0x080485ae}, expr=(extract[8] 8[32] 16[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 4[32])} value={defs={0x080485ae}, expr=(extract[8] 0[32] 8[32] v2456[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 3[32])} value={defs={0x080485ad}, expr=(extract[8] 24[32] 32[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 2[32])} value={defs={0x080485ad}, expr=(extract[8] 16[32] 24[32] v2451[32])}
    addr={defs={0x080485ac,0x080485ad}, expr=(add[32] (add[32] v2404[32] 4[32]) 1[32])} value={defs={0x080485ad}, expr=(extract[8] 8[32] 16[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 4[32])} value={defs={0x080485ad}, expr=(extract[8] 0[32] 8[32] v2451[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 3[32])} value={defs={0x080485ac}, expr=(extract[8] 24[32] 32[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 2[32])} value={defs={0x080485ac}, expr=(extract[8] 16[32] 24[32] v2446[32])}
    addr={defs={0x080485ac}, expr=(add[32] v2404[32] 1[32])} value={defs={0x080485ac}, expr=(extract[8] 8[32] 16[32] v2446[32])}
    addr={defs={}, expr=v2404[32]} value={defs={0x080485ac}, expr=(extract[8] 0[32] 8[32] v2446[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    bp      = { {defs={}, expr=v2473[32]} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b0}, expr=0x080485b1[32]} }
memory:
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
0x80485b1:mov    ebp, esp
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    bp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b1}, expr=0x080485b3[32]} }
memory:
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
0x80485b3:push   ebx
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] v2472[32] -4[32]) -4[32])} }
    bp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b3}, expr=0x080485b4[32]} }
memory:
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 3[32])} value={defs={0x080485b3}, expr=(extract[8] 24[32] 32[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 2[32])} value={defs={0x080485b3}, expr=(extract[8] 16[32] 24[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 1[32])} value={defs={0x080485b3}, expr=(extract[8] 8[32] 16[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] v2472[32] -4[32]) -4[32])} value={defs={0x080485b3}, expr=(extract[8] 0[32] 8[32] v2471[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
0x80485b4:push   eax
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b4}, expr=0x080485b5[32]} }
memory:
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080485b4}, expr=(extract[8] 24[32] 32[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080485b4}, expr=(extract[8] 16[32] 24[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080485b4}, expr=(extract[8] 8[32] 16[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32])} value={defs={0x080485b4}, expr=(extract[8] 0[32] 8[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 3[32])} value={defs={0x080485b3}, expr=(extract[8] 24[32] 32[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 2[32])} value={defs={0x080485b3}, expr=(extract[8] 16[32] 24[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 1[32])} value={defs={0x080485b3}, expr=(extract[8] 8[32] 16[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] v2472[32] -4[32]) -4[32])} value={defs={0x080485b3}, expr=(extract[8] 0[32] 8[32] v2471[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
0x80485b5:call   0x080485ba<<Insn>>
registers:
    ax      = { {defs={}, expr=v2468[32]} }
    cx      = { {defs={}, expr=v2469[32]} }
    dx      = { {defs={}, expr=v2470[32]} }
    bx      = { {defs={}, expr=v2471[32]} }
    sp      = { {defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32])} }
    bp      = { {defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} }
    si      = { {defs={}, expr=v2474[32]} }
    di      = { {defs={}, expr=v2475[32]} }
    es      = { {defs={}, expr=v2476[16]} }
    cs      = { {defs={}, expr=v2477[16]} }
    ss      = { {defs={}, expr=v2478[16]} }
    ds      = { {defs={}, expr=v2479[16]} }
    fs      = { {defs={}, expr=v2480[16]} }
    gs      = { {defs={}, expr=v2481[16]} }
    cf      = { {defs={}, expr=v2482[1]} }
    ?1      = { {defs={}, expr=v2483[1]} }
    pf      = { {defs={}, expr=v2484[1]} }
    ?3      = { {defs={}, expr=v2485[1]} }
    af      = { {defs={}, expr=v2486[1]} }
    ?5      = { {defs={}, expr=v2487[1]} }
    zf      = { {defs={}, expr=v2488[1]} }
    sf      = { {defs={}, expr=v2489[1]} }
    tf      = { {defs={}, expr=v2490[1]} }
    if      = { {defs={}, expr=v2491[1]} }
    df      = { {defs={}, expr=v2492[1]} }
    of      = { {defs={}, expr=v2493[1]} }
    iopl0   = { {defs={}, expr=v2494[1]} }
    iopl1   = { {defs={}, expr=v2495[1]} }
    nt      = { {defs={}, expr=v2496[1]} }
    ?15     = { {defs={}, expr=v2497[1]} }
    rf      = { {defs={}, expr=v2498[1]} }
    vm      = { {defs={}, expr=v2499[1]} }
    ac      = { {defs={}, expr=v2500[1]} }
    vif     = { {defs={}, expr=v2501[1]} }
    vip     = { {defs={}, expr=v2502[1]} }
    id      = { {defs={}, expr=v2503[1]} }
    ?22     = { {defs={}, expr=v2504[1]} }
    ?23     = { {defs={}, expr=v2505[1]} }
    ?24     = { {defs={}, expr=v2506[1]} }
    ?25     = { {defs={}, expr=v2507[1]} }
    ?26     = { {defs={}, expr=v2508[1]} }
    ?27     = { {defs={}, expr=v2509[1]} }
    ?28     = { {defs={}, expr=v2510[1]} }
    ?29     = { {defs={}, expr=v2511[1]} }
    ?30     = { {defs={}, expr=v2512[1]} }
    ?31     = { {defs={}, expr=v2513[1]} }
    ip      = { {defs={0x080485b5}, expr=0x080485ba[32]} }
memory:
    addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080485b5}, expr=8[8]}
    addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080485b5}, expr=4[8]}
    addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080485b5}, expr=-123[8]}
    addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) -4[32])} value={defs={0x080485b5}, expr=-70[8]}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 3[32])} value={defs={0x080485b4}, expr=(extract[8] 24[32] 32[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 2[32])} value={defs={0x080485b4}, expr=(extract[8] 16[32] 24[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32]) 1[32])} value={defs={0x080485b4}, expr=(extract[8] 8[32] 16[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) -4[32])} value={defs={0x080485b4}, expr=(extract[8] 0[32] 8[32] v2468[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 3[32])} value={defs={0x080485b3}, expr=(extract[8] 24[32] 32[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 2[32])} value={defs={0x080485b3}, expr=(extract[8] 16[32] 24[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] (add[32] v2472[32] -4[32]) -4[32]) 1[32])} value={defs={0x080485b3}, expr=(extract[8] 8[32] 16[32] v2471[32])}
    addr={defs={0x080485b0,0x080485b3}, expr=(add[32] (add[32] v2472[32] -4[32]) -4[32])} value={defs={0x080485b3}, expr=(extract[8] 0[32] 8[32] v2471[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 3[32])} value={defs={0x080485b0}, expr=(extract[8] 24[32] 32[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 2[32])} value={defs={0x080485b0}, expr=(extract[8] 16[32] 24[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] (add[32] v2472[32] -4[32]) 1[32])} value={defs={0x080485b0}, expr=(extract[8] 8[32] 16[32] v2473[32])}
    addr={defs={0x080485b0}, expr=(add[32] v2472[32] -4[32])} value={defs={0x080485b0}, expr=(extract[8] 0[32] 8[32] v2473[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
registers:
    ax      = { {defs={}, expr=v2516[32]} }
    cx      = { {defs={}, expr=v2517[32]} }
    dx      = { {defs={}, expr=v2518[32]} }
    bx      = { {defs={0x080485ba}, expr=v2562[32]} }
    sp      = { {defs={0x080485ba}, expr=(add[32] v2520[32] 4[32])} }
    bp      = { {defs={}, expr=v2521[32]} }
    si      = { {defs={}, expr=v2522[32]} }
    di      = { {defs={}, expr=v2523[32]} }
    es      = { {defs={}, expr=v2524[16]} }
    cs      = { {defs={}, expr=v2525[16]} }
    ss      = { {defs={}, expr=v2526[16]} }
    ds      = { {defs={}, expr=v2527[16]} }
    fs      = { {defs={}, expr=v2528[16]} }
    gs      = { {defs={}, expr=v2529[16]} }
    cf      = { {defs={}, expr=v2530[1]} }
    ?1      = { {defs={}, expr=v2531[1]} }
    pf      = { {defs={}, expr=v2532[1]} }
    ?3      = { {defs={}, expr=v2533[1]} }
    af      = { {defs={}, expr=v2534[1]} }
    ?5      = { {defs={}, expr=v2535[1]} }
    zf      = { {defs={}, expr=v2536[1]} }
    sf      = { {defs={}, expr=v2537[1]} }
    tf      = { {defs={}, expr=v2538[1]} }
    if      = { {defs={}, expr=v2539[1]} }
    df      = { {defs={}, expr=v2540[1]} }
    of      = { {defs={}, expr=v2541[1]} }
    iopl0   = { {defs={}, expr=v2542[1]} }
    iopl1   = { {defs={}, expr=v2543[1]} }
    nt      = { {defs={}, expr=v2544[1]} }
    ?15     = { {defs={}, expr=v2545[1]} }
    rf      = { {defs={}, expr=v2546[1]} }
    vm      = { {defs={}, expr=v2547[1]} }
    ac      = { {defs={}, expr=v2548[1]} }
    vif     = { {defs={}, expr=v2549[1]} }
    vip     = { {defs={}, expr=v2550[1]} }
    id      = { {defs={}, expr=v2551[1]} }
    ?22     = { {defs={}, expr=v2552[1]} }
    ?23     = { {defs={}, expr=v2553[1]} }
    ?24     = { {defs={}, expr=v2554[1]} }
    ?25     = { {defs={}, expr=v2555[1]} }
    ?26     = { {defs={}, expr=v2556[1]} }
    ?27     = { {defs={}, expr=v2557[1]} }
    ?28     = { {defs={}, expr=v2558[1]} }
    ?29     = { {defs={}, expr=v2559[1]} }
    ?30     = { {defs={}, expr=v2560[1]} }
    ?31     = { {defs={}, expr=v2561[1]} }
    ip      = { {defs={0x080485ba}, expr=0x080485bb[32]} }
memory:
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 3[32])} value={defs={0x080485ba}, expr=(extract[8] 24[32] 32[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 2[32])} value={defs={0x080485ba}, expr=(extract[8] 16[32] 24[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 1[32])} value={defs={0x080485ba}, expr=(extract[8] 8[32] 16[32] v2562[32])}
    addr={defs={}, expr=v2520[32]} value={defs={0x080485ba}, expr=(extract[8] 0[32] 8[32] v2562[32])}
0x80485bb:add    ebx, 0x0000110e
registers:
    ax      = { {defs={}, expr=v2516[32]} }
    cx      = { {defs={}, expr=v2517[32]} }
    dx      = { {defs={}, expr=v2518[32]} }
    bx      = { {defs={0x080485ba,0x080485bb}, expr=(add[32] v2562[32] 4366[32])} }
    sp      = { {defs={0x080485ba}, expr=(add[32] v2520[32] 4[32])} }
    bp      = { {defs={}, expr=v2521[32]} }
    si      = { {defs={}, expr=v2522[32]} }
    di      = { {defs={}, expr=v2523[32]} }
    es      = { {defs={}, expr=v2524[16]} }
    cs      = { {defs={}, expr=v2525[16]} }
    ss      = { {defs={}, expr=v2526[16]} }
    ds      = { {defs={}, expr=v2527[16]} }
    fs      = { {defs={}, expr=v2528[16]} }
    gs      = { {defs={}, expr=v2529[16]} }
    cf      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33])))))} }
    ?1      = { {defs={}, expr=v2531[1]} }
    pf      = { {defs={0x080485ba,0x080485bb}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))))))} }
    ?3      = { {defs={}, expr=v2533[1]} }
    af      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33])))))} }
    ?5      = { {defs={}, expr=v2535[1]} }
    zf      = { {defs={0x080485ba,0x080485bb}, expr=(zerop[1] (add[32] v2562[32] 4366[32]))} }
    sf      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 31[32] 32[32] (add[32] v2562[32] 4366[32]))} }
    tf      = { {defs={}, expr=v2538[1]} }
    if      = { {defs={}, expr=v2539[1]} }
    df      = { {defs={}, expr=v2540[1]} }
    of      = { {defs={0x080485ba,0x080485bb}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33]))))))} }
    iopl0   = { {defs={}, expr=v2542[1]} }
    iopl1   = { {defs={}, expr=v2543[1]} }
    nt      = { {defs={}, expr=v2544[1]} }
    ?15     = { {defs={}, expr=v2545[1]} }
    rf      = { {defs={}, expr=v2546[1]} }
    vm      = { {defs={}, expr=v2547[1]} }
    ac      = { {defs={}, expr=v2548[1]} }
    vif     = { {defs={}, expr=v2549[1]} }
    vip     = { {defs={}, expr=v2550[1]} }
    id      = { {defs={}, expr=v2551[1]} }
    ?22     = { {defs={}, expr=v2552[1]} }
    ?23     = { {defs={}, expr=v2553[1]} }
    ?24     = { {defs={}, expr=v2554[1]} }
    ?25     = { {defs={}, expr=v2555[1]} }
    ?26     = { {defs={}, expr=v2556[1]} }
    ?27     = { {defs={}, expr=v2557[1]} }
    ?28     = { {defs={}, expr=v2558[1]} }
    ?29     = { {defs={}, expr=v2559[1]} }
    ?30     = { {defs={}, expr=v2560[1]} }
    ?31     = { {defs={}, expr=v2561[1]} }
    ip      = { {defs={0x080485bb}, expr=0x080485c1[32]} }
memory:
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 3[32])} value={defs={0x080485ba}, expr=(extract[8] 24[32] 32[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 2[32])} value={defs={0x080485ba}, expr=(extract[8] 16[32] 24[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 1[32])} value={defs={0x080485ba}, expr=(extract[8] 8[32] 16[32] v2562[32])}
    addr={defs={}, expr=v2520[32]} value={defs={0x080485ba}, expr=(extract[8] 0[32] 8[32] v2562[32])}
0x80485c1:call   0x08048390<__do_global_dtors_aux>
registers:
    ax      = { {defs={}, expr=v2516[32]} }
    cx      = { {defs={}, expr=v2517[32]} }
    dx      = { {defs={}, expr=v2518[32]} }
    bx      = { {defs={0x080485ba,0x080485bb}, expr=(add[32] v2562[32] 4366[32])} }
    sp      = { {defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] v2520[32] 4[32]) -4[32])} }
    bp      = { {defs={}, expr=v2521[32]} }
    si      = { {defs={}, expr=v2522[32]} }
    di      = { {defs={}, expr=v2523[32]} }
    es      = { {defs={}, expr=v2524[16]} }
    cs      = { {defs={}, expr=v2525[16]} }
    ss      = { {defs={}, expr=v2526[16]} }
    ds      = { {defs={}, expr=v2527[16]} }
    fs      = { {defs={}, expr=v2528[16]} }
    gs      = { {defs={}, expr=v2529[16]} }
    cf      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33])))))} }
    ?1      = { {defs={}, expr=v2531[1]} }
    pf      = { {defs={0x080485ba,0x080485bb}, expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2562[32] 4366[32])))))))} }
    ?3      = { {defs={}, expr=v2533[1]} }
    af      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33])))))} }
    ?5      = { {defs={}, expr=v2535[1]} }
    zf      = { {defs={0x080485ba,0x080485bb}, expr=(zerop[1] (add[32] v2562[32] 4366[32]))} }
    sf      = { {defs={0x080485ba,0x080485bb}, expr=(extract[1] 31[32] 32[32] (add[32] v2562[32] 4366[32]))} }
    tf      = { {defs={}, expr=v2538[1]} }
    if      = { {defs={}, expr=v2539[1]} }
    df      = { {defs={}, expr=v2540[1]} }
    of      = { {defs={0x080485ba,0x080485bb}, expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2562[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2562[32]) 4366[33]))))))} }
    iopl0   = { {defs={}, expr=v2542[1]} }
    iopl1   = { {defs={}, expr=v2543[1]} }
    nt      = { {defs={}, expr=v2544[1]} }
    ?15     = { {defs={}, expr=v2545[1]} }
    rf      = { {defs={}, expr=v2546[1]} }
    vm      = { {defs={}, expr=v2547[1]} }
    ac      = { {defs={}, expr=v2548[1]} }
    vif     = { {defs={}, expr=v2549[1]} }
    vip     = { {defs={}, expr=v2550[1]} }
    id      = { {defs={}, expr=v2551[1]} }
    ?22     = { {defs={}, expr=v2552[1]} }
    ?23     = { {defs={}, expr=v2553[1]} }
    ?24     = { {defs={}, expr=v2554[1]} }
    ?25     = { {defs={}, expr=v2555[1]} }
    ?26     = { {defs={}, expr=v2556[1]} }
    ?27     = { {defs={}, expr=v2557[1]} }
    ?28     = { {defs={}, expr=v2558[1]} }
    ?29     = { {defs={}, expr=v2559[1]} }
    ?30     = { {defs={}, expr=v2560[1]} }
    ?31     = { {defs={}, expr=v2561[1]} }
    ip      = { {defs={0x080485c1}, expr=0x08048390[32]} }
memory:
    addr={defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] (add[32] v2520[32] 4[32]) -4[32]) 3[32])} value={defs={0x080485c1}, expr=8[8]}
    addr={defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] (add[32] v2520[32] 4[32]) -4[32]) 2[32])} value={defs={0x080485c1}, expr=4[8]}
    addr={defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] (add[32] v2520[32] 4[32]) -4[32]) 1[32])} value={defs={0x080485c1}, expr=-123[8]}
    addr={defs={0x080485ba,0x080485c1}, expr=(add[32] (add[32] v2520[32] 4[32]) -4[32])} value={defs={0x080485c1}, expr=-58[8]}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 3[32])} value={defs={0x080485ba}, expr=(extract[8] 24[32] 32[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 2[32])} value={defs={0x080485ba}, expr=(extract[8] 16[32] 24[32] v2562[32])}
    addr={defs={0x080485ba}, expr=(add[32] v2520[32] 1[32])} value={defs={0x080485ba}, expr=(extract[8] 8[32] 16[32] v2562[32])}
    addr={defs={}, expr=v2520[32]} value={defs={0x080485ba}, expr=(extract[8] 0[32] 8[32] v2562[32])}
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
registers:
    ax      = { {defs={0x080485c6}, expr=v2615[32]} }
    cx      = { {defs={}, expr=v2570[32]} }
    dx      = { {defs={}, expr=v2571[32]} }
    bx      = { {defs={}, expr=v2572[32]} }
    sp      = { {defs={0x080485c6}, expr=(add[32] v2573[32] 4[32])} }
    bp      = { {defs={}, expr=v2574[32]} }
    si      = { {defs={}, expr=v2575[32]} }
    di      = { {defs={}, expr=v2576[32]} }
    es      = { {defs={}, expr=v2577[16]} }
    cs      = { {defs={}, expr=v2578[16]} }
    ss      = { {defs={}, expr=v2579[16]} }
    ds      = { {defs={}, expr=v2580[16]} }
    fs      = { {defs={}, expr=v2581[16]} }
    gs      = { {defs={}, expr=v2582[16]} }
    cf      = { {defs={}, expr=v2583[1]} }
    ?1      = { {defs={}, expr=v2584[1]} }
    pf      = { {defs={}, expr=v2585[1]} }
    ?3      = { {defs={}, expr=v2586[1]} }
    af      = { {defs={}, expr=v2587[1]} }
    ?5      = { {defs={}, expr=v2588[1]} }
    zf      = { {defs={}, expr=v2589[1]} }
    sf      = { {defs={}, expr=v2590[1]} }
    tf      = { {defs={}, expr=v2591[1]} }
    if      = { {defs={}, expr=v2592[1]} }
    df      = { {defs={}, expr=v2593[1]} }
    of      = { {defs={}, expr=v2594[1]} }
    iopl0   = { {defs={}, expr=v2595[1]} }
    iopl1   = { {defs={}, expr=v2596[1]} }
    nt      = { {defs={}, expr=v2597[1]} }
    ?15     = { {defs={}, expr=v2598[1]} }
    rf      = { {defs={}, expr=v2599[1]} }
    vm      = { {defs={}, expr=v2600[1]} }
    ac      = { {defs={}, expr=v2601[1]} }
    vif     = { {defs={}, expr=v2602[1]} }
    vip     = { {defs={}, expr=v2603[1]} }
    id      = { {defs={}, expr=v2604[1]} }
    ?22     = { {defs={}, expr=v2605[1]} }
    ?23     = { {defs={}, expr=v2606[1]} }
    ?24     = { {defs={}, expr=v2607[1]} }
    ?25     = { {defs={}, expr=v2608[1]} }
    ?26     = { {defs={}, expr=v2609[1]} }
    ?27     = { {defs={}, expr=v2610[1]} }
    ?28     = { {defs={}, expr=v2611[1]} }
    ?29     = { {defs={}, expr=v2612[1]} }
    ?30     = { {defs={}, expr=v2613[1]} }
    ?31     = { {defs={}, expr=v2614[1]} }
    ip      = { {defs={0x080485c6}, expr=0x080485c7[32]} }
memory:
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 3[32])} value={defs={0x080485c6}, expr=(extract[8] 24[32] 32[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 2[32])} value={defs={0x080485c6}, expr=(extract[8] 16[32] 24[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 1[32])} value={defs={0x080485c6}, expr=(extract[8] 8[32] 16[32] v2615[32])}
    addr={defs={}, expr=v2573[32]} value={defs={0x080485c6}, expr=(extract[8] 0[32] 8[32] v2615[32])}
0x80485c7:pop    ebx
registers:
    ax      = { {defs={0x080485c6}, expr=v2615[32]} }
    cx      = { {defs={}, expr=v2570[32]} }
    dx      = { {defs={}, expr=v2571[32]} }
    bx      = { {defs={0x080485c7}, expr=v2620[32]} }
    sp      = { {defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 4[32])} }
    bp      = { {defs={}, expr=v2574[32]} }
    si      = { {defs={}, expr=v2575[32]} }
    di      = { {defs={}, expr=v2576[32]} }
    es      = { {defs={}, expr=v2577[16]} }
    cs      = { {defs={}, expr=v2578[16]} }
    ss      = { {defs={}, expr=v2579[16]} }
    ds      = { {defs={}, expr=v2580[16]} }
    fs      = { {defs={}, expr=v2581[16]} }
    gs      = { {defs={}, expr=v2582[16]} }
    cf      = { {defs={}, expr=v2583[1]} }
    ?1      = { {defs={}, expr=v2584[1]} }
    pf      = { {defs={}, expr=v2585[1]} }
    ?3      = { {defs={}, expr=v2586[1]} }
    af      = { {defs={}, expr=v2587[1]} }
    ?5      = { {defs={}, expr=v2588[1]} }
    zf      = { {defs={}, expr=v2589[1]} }
    sf      = { {defs={}, expr=v2590[1]} }
    tf      = { {defs={}, expr=v2591[1]} }
    if      = { {defs={}, expr=v2592[1]} }
    df      = { {defs={}, expr=v2593[1]} }
    of      = { {defs={}, expr=v2594[1]} }
    iopl0   = { {defs={}, expr=v2595[1]} }
    iopl1   = { {defs={}, expr=v2596[1]} }
    nt      = { {defs={}, expr=v2597[1]} }
    ?15     = { {defs={}, expr=v2598[1]} }
    rf      = { {defs={}, expr=v2599[1]} }
    vm      = { {defs={}, expr=v2600[1]} }
    ac      = { {defs={}, expr=v2601[1]} }
    vif     = { {defs={}, expr=v2602[1]} }
    vip     = { {defs={}, expr=v2603[1]} }
    id      = { {defs={}, expr=v2604[1]} }
    ?22     = { {defs={}, expr=v2605[1]} }
    ?23     = { {defs={}, expr=v2606[1]} }
    ?24     = { {defs={}, expr=v2607[1]} }
    ?25     = { {defs={}, expr=v2608[1]} }
    ?26     = { {defs={}, expr=v2609[1]} }
    ?27     = { {defs={}, expr=v2610[1]} }
    ?28     = { {defs={}, expr=v2611[1]} }
    ?29     = { {defs={}, expr=v2612[1]} }
    ?30     = { {defs={}, expr=v2613[1]} }
    ?31     = { {defs={}, expr=v2614[1]} }
    ip      = { {defs={0x080485c7}, expr=0x080485c8[32]} }
memory:
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 3[32])} value={defs={0x080485c7}, expr=(extract[8] 24[32] 32[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 2[32])} value={defs={0x080485c7}, expr=(extract[8] 16[32] 24[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 1[32])} value={defs={0x080485c7}, expr=(extract[8] 8[32] 16[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 4[32])} value={defs={0x080485c7}, expr=(extract[8] 0[32] 8[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 3[32])} value={defs={0x080485c6}, expr=(extract[8] 24[32] 32[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 2[32])} value={defs={0x080485c6}, expr=(extract[8] 16[32] 24[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 1[32])} value={defs={0x080485c6}, expr=(extract[8] 8[32] 16[32] v2615[32])}
    addr={defs={}, expr=v2573[32]} value={defs={0x080485c6}, expr=(extract[8] 0[32] 8[32] v2615[32])}
0x80485c8:leave  
registers:
    ax      = { {defs={0x080485c6}, expr=v2615[32]} }
    cx      = { {defs={}, expr=v2570[32]} }
    dx      = { {defs={}, expr=v2571[32]} }
    bx      = { {defs={0x080485c7}, expr=v2620[32]} }
    sp      = { {defs={0x080485c8}, expr=(add[32] v2574[32] 4[32])} }
    bp      = { {defs={0x080485c8}, expr=v2625[32]} }
    si      = { {defs={}, expr=v2575[32]} }
    di      = { {defs={}, expr=v2576[32]} }
    es      = { {defs={}, expr=v2577[16]} }
    cs      = { {defs={}, expr=v2578[16]} }
    ss      = { {defs={}, expr=v2579[16]} }
    ds      = { {defs={}, expr=v2580[16]} }
    fs      = { {defs={}, expr=v2581[16]} }
    gs      = { {defs={}, expr=v2582[16]} }
    cf      = { {defs={}, expr=v2583[1]} }
    ?1      = { {defs={}, expr=v2584[1]} }
    pf      = { {defs={}, expr=v2585[1]} }
    ?3      = { {defs={}, expr=v2586[1]} }
    af      = { {defs={}, expr=v2587[1]} }
    ?5      = { {defs={}, expr=v2588[1]} }
    zf      = { {defs={}, expr=v2589[1]} }
    sf      = { {defs={}, expr=v2590[1]} }
    tf      = { {defs={}, expr=v2591[1]} }
    if      = { {defs={}, expr=v2592[1]} }
    df      = { {defs={}, expr=v2593[1]} }
    of      = { {defs={}, expr=v2594[1]} }
    iopl0   = { {defs={}, expr=v2595[1]} }
    iopl1   = { {defs={}, expr=v2596[1]} }
    nt      = { {defs={}, expr=v2597[1]} }
    ?15     = { {defs={}, expr=v2598[1]} }
    rf      = { {defs={}, expr=v2599[1]} }
    vm      = { {defs={}, expr=v2600[1]} }
    ac      = { {defs={}, expr=v2601[1]} }
    vif     = { {defs={}, expr=v2602[1]} }
    vip     = { {defs={}, expr=v2603[1]} }
    id      = { {defs={}, expr=v2604[1]} }
    ?22     = { {defs={}, expr=v2605[1]} }
    ?23     = { {defs={}, expr=v2606[1]} }
    ?24     = { {defs={}, expr=v2607[1]} }
    ?25     = { {defs={}, expr=v2608[1]} }
    ?26     = { {defs={}, expr=v2609[1]} }
    ?27     = { {defs={}, expr=v2610[1]} }
    ?28     = { {defs={}, expr=v2611[1]} }
    ?29     = { {defs={}, expr=v2612[1]} }
    ?30     = { {defs={}, expr=v2613[1]} }
    ?31     = { {defs={}, expr=v2614[1]} }
    ip      = { {defs={0x080485c8}, expr=0x080485c9[32]} }
memory:
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 3[32])} value={defs={0x080485c8}, expr=(extract[8] 24[32] 32[32] v2625[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 2[32])} value={defs={0x080485c8}, expr=(extract[8] 16[32] 24[32] v2625[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 1[32])} value={defs={0x080485c8}, expr=(extract[8] 8[32] 16[32] v2625[32])}
    addr={defs={}, expr=v2574[32]} value={defs={0x080485c8}, expr=(extract[8] 0[32] 8[32] v2625[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 3[32])} value={defs={0x080485c7}, expr=(extract[8] 24[32] 32[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 2[32])} value={defs={0x080485c7}, expr=(extract[8] 16[32] 24[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 1[32])} value={defs={0x080485c7}, expr=(extract[8] 8[32] 16[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 4[32])} value={defs={0x080485c7}, expr=(extract[8] 0[32] 8[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 3[32])} value={defs={0x080485c6}, expr=(extract[8] 24[32] 32[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 2[32])} value={defs={0x080485c6}, expr=(extract[8] 16[32] 24[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 1[32])} value={defs={0x080485c6}, expr=(extract[8] 8[32] 16[32] v2615[32])}
    addr={defs={}, expr=v2573[32]} value={defs={0x080485c6}, expr=(extract[8] 0[32] 8[32] v2615[32])}
0x80485c9:ret    
registers:
    ax      = { {defs={0x080485c6}, expr=v2615[32]} }
    cx      = { {defs={}, expr=v2570[32]} }
    dx      = { {defs={}, expr=v2571[32]} }
    bx      = { {defs={0x080485c7}, expr=v2620[32]} }
    sp      = { {defs={0x080485c8,0x080485c9}, expr=(add[32] (add[32] v2574[32] 4[32]) 4[32])} }
    bp      = { {defs={0x080485c8}, expr=v2625[32]} }
    si      = { {defs={}, expr=v2575[32]} }
    di      = { {defs={}, expr=v2576[32]} }
    es      = { {defs={}, expr=v2577[16]} }
    cs      = { {defs={}, expr=v2578[16]} }
    ss      = { {defs={}, expr=v2579[16]} }
    ds      = { {defs={}, expr=v2580[16]} }
    fs      = { {defs={}, expr=v2581[16]} }
    gs      = { {defs={}, expr=v2582[16]} }
    cf      = { {defs={}, expr=v2583[1]} }
    ?1      = { {defs={}, expr=v2584[1]} }
    pf      = { {defs={}, expr=v2585[1]} }
    ?3      = { {defs={}, expr=v2586[1]} }
    af      = { {defs={}, expr=v2587[1]} }
    ?5      = { {defs={}, expr=v2588[1]} }
    zf      = { {defs={}, expr=v2589[1]} }
    sf      = { {defs={}, expr=v2590[1]} }
    tf      = { {defs={}, expr=v2591[1]} }
    if      = { {defs={}, expr=v2592[1]} }
    df      = { {defs={}, expr=v2593[1]} }
    of      = { {defs={}, expr=v2594[1]} }
    iopl0   = { {defs={}, expr=v2595[1]} }
    iopl1   = { {defs={}, expr=v2596[1]} }
    nt      = { {defs={}, expr=v2597[1]} }
    ?15     = { {defs={}, expr=v2598[1]} }
    rf      = { {defs={}, expr=v2599[1]} }
    vm      = { {defs={}, expr=v2600[1]} }
    ac      = { {defs={}, expr=v2601[1]} }
    vif     = { {defs={}, expr=v2602[1]} }
    vip     = { {defs={}, expr=v2603[1]} }
    id      = { {defs={}, expr=v2604[1]} }
    ?22     = { {defs={}, expr=v2605[1]} }
    ?23     = { {defs={}, expr=v2606[1]} }
    ?24     = { {defs={}, expr=v2607[1]} }
    ?25     = { {defs={}, expr=v2608[1]} }
    ?26     = { {defs={}, expr=v2609[1]} }
    ?27     = { {defs={}, expr=v2610[1]} }
    ?28     = { {defs={}, expr=v2611[1]} }
    ?29     = { {defs={}, expr=v2612[1]} }
    ?30     = { {defs={}, expr=v2613[1]} }
    ?31     = { {defs={}, expr=v2614[1]} }
    ip      = { {defs={0x080485c9}, expr=v2630[32]} }
memory:
    addr={defs={0x080485c8,0x080485c9}, expr=(add[32] (add[32] v2574[32] 4[32]) 3[32])} value={defs={0x080485c9}, expr=(extract[8] 24[32] 32[32] v2630[32])}
    addr={defs={0x080485c8,0x080485c9}, expr=(add[32] (add[32] v2574[32] 4[32]) 2[32])} value={defs={0x080485c9}, expr=(extract[8] 16[32] 24[32] v2630[32])}
    addr={defs={0x080485c8,0x080485c9}, expr=(add[32] (add[32] v2574[32] 4[32]) 1[32])} value={defs={0x080485c9}, expr=(extract[8] 8[32] 16[32] v2630[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 4[32])} value={defs={0x080485c9}, expr=(extract[8] 0[32] 8[32] v2630[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 3[32])} value={defs={0x080485c8}, expr=(extract[8] 24[32] 32[32] v2625[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 2[32])} value={defs={0x080485c8}, expr=(extract[8] 16[32] 24[32] v2625[32])}
    addr={defs={0x080485c8}, expr=(add[32] v2574[32] 1[32])} value={defs={0x080485c8}, expr=(extract[8] 8[32] 16[32] v2625[32])}
    addr={defs={}, expr=v2574[32]} value={defs={0x080485c8}, expr=(extract[8] 0[32] 8[32] v2625[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 3[32])} value={defs={0x080485c7}, expr=(extract[8] 24[32] 32[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 2[32])} value={defs={0x080485c7}, expr=(extract[8] 16[32] 24[32] v2620[32])}
    addr={defs={0x080485c6,0x080485c7}, expr=(add[32] (add[32] v2573[32] 4[32]) 1[32])} value={defs={0x080485c7}, expr=(extract[8] 8[32] 16[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 4[32])} value={defs={0x080485c7}, expr=(extract[8] 0[32] 8[32] v2620[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 3[32])} value={defs={0x080485c6}, expr=(extract[8] 24[32] 32[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 2[32])} value={defs={0x080485c6}, expr=(extract[8] 16[32] 24[32] v2615[32])}
    addr={defs={0x080485c6}, expr=(add[32] v2573[32] 1[32])} value={defs={0x080485c6}, expr=(extract[8] 8[32] 16[32] v2615[32])}
    addr={defs={}, expr=v2573[32]} value={defs={0x080485c6}, expr=(extract[8] 0[32] 8[32] v2615[32])}
analyzed headers: 1
