=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    registers:
        ax      = { defs={} expr=v32[32] }
        cx      = { defs={} expr=v33[32] }
        dx      = { defs={} expr=v34[32] }
        bx      = { defs={} expr=v35[32] }
        sp      = { defs={0x080482c8} expr=(add[32] v36[32] -4[32]) }
        bp      = { defs={} expr=v37[32] }
        si      = { defs={} expr=v38[32] }
        di      = { defs={} expr=v39[32] }
        es      = { defs={} expr=v40[16] }
        cs      = { defs={} expr=v41[16] }
        ss      = { defs={} expr=v42[16] }
        ds      = { defs={} expr=v43[16] }
        fs      = { defs={} expr=v44[16] }
        gs      = { defs={} expr=v45[16] }
        cf      = { defs={} expr=v46[1] }
        ?1      = { defs={} expr=v47[1] }
        pf      = { defs={} expr=v48[1] }
        ?3      = { defs={} expr=v49[1] }
        af      = { defs={} expr=v50[1] }
        ?5      = { defs={} expr=v51[1] }
        zf      = { defs={} expr=v52[1] }
        sf      = { defs={} expr=v53[1] }
        tf      = { defs={} expr=v54[1] }
        if      = { defs={} expr=v55[1] }
        df      = { defs={} expr=v56[1] }
        of      = { defs={} expr=v57[1] }
        iopl0   = { defs={} expr=v58[1] }
        iopl1   = { defs={} expr=v59[1] }
        nt      = { defs={} expr=v60[1] }
        ?15     = { defs={} expr=v61[1] }
        ip      = { defs={0x080482c8} expr=0x080482c9[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] v36[32] -4[32]) }
          value = { defs={0x080482c8} expr=v37[32] }
          flags = { size=4 }
    ip = defs={0x080482c8} expr=0x080482c9[32]
0x80482c9:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v32[32] }
        cx      = { defs={} expr=v33[32] }
        dx      = { defs={} expr=v34[32] }
        bx      = { defs={} expr=v35[32] }
        sp      = { defs={0x080482c8} expr=(add[32] v36[32] -4[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v36[32] -4[32]) }
        si      = { defs={} expr=v38[32] }
        di      = { defs={} expr=v39[32] }
        es      = { defs={} expr=v40[16] }
        cs      = { defs={} expr=v41[16] }
        ss      = { defs={} expr=v42[16] }
        ds      = { defs={} expr=v43[16] }
        fs      = { defs={} expr=v44[16] }
        gs      = { defs={} expr=v45[16] }
        cf      = { defs={} expr=v46[1] }
        ?1      = { defs={} expr=v47[1] }
        pf      = { defs={} expr=v48[1] }
        ?3      = { defs={} expr=v49[1] }
        af      = { defs={} expr=v50[1] }
        ?5      = { defs={} expr=v51[1] }
        zf      = { defs={} expr=v52[1] }
        sf      = { defs={} expr=v53[1] }
        tf      = { defs={} expr=v54[1] }
        if      = { defs={} expr=v55[1] }
        df      = { defs={} expr=v56[1] }
        of      = { defs={} expr=v57[1] }
        iopl0   = { defs={} expr=v58[1] }
        iopl1   = { defs={} expr=v59[1] }
        nt      = { defs={} expr=v60[1] }
        ?15     = { defs={} expr=v61[1] }
        ip      = { defs={0x080482c8,0x080482c9} expr=0x080482cb[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] v36[32] -4[32]) }
          value = { defs={0x080482c8} expr=v37[32] }
          flags = { size=4 }
    ip = defs={0x080482c8,0x080482c9} expr=0x080482cb[32]
0x80482cb:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v32[32] }
        cx      = { defs={} expr=v33[32] }
        dx      = { defs={} expr=v34[32] }
        bx      = { defs={} expr=v35[32] }
        sp      = { defs={0x080482c8,0x080482cb} expr=(add[32] (add[32] v36[32] -4[32]) -8[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v36[32] -4[32]) }
        si      = { defs={} expr=v38[32] }
        di      = { defs={} expr=v39[32] }
        es      = { defs={} expr=v40[16] }
        cs      = { defs={} expr=v41[16] }
        ss      = { defs={} expr=v42[16] }
        ds      = { defs={} expr=v43[16] }
        fs      = { defs={} expr=v44[16] }
        gs      = { defs={} expr=v45[16] }
        cf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v47[1] }
        pf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v49[1] }
        af      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v51[1] }
        zf      = { defs={0x080482c8,0x080482cb} expr=(zerop[1] (add[32] (add[32] v36[32] -4[32]) -8[32])) }
        sf      = { defs={0x080482c8,0x080482cb} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v36[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v54[1] }
        if      = { defs={} expr=v55[1] }
        df      = { defs={} expr=v56[1] }
        of      = { defs={0x080482c8,0x080482cb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v58[1] }
        iopl1   = { defs={} expr=v59[1] }
        nt      = { defs={} expr=v60[1] }
        ?15     = { defs={} expr=v61[1] }
        ip      = { defs={0x080482c8,0x080482c9,0x080482cb} expr=0x080482ce[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] v36[32] -4[32]) }
          value = { defs={0x080482c8} expr=v37[32] }
          flags = { size=4 }
    ip = defs={0x080482c8,0x080482c9,0x080482cb} expr=0x080482ce[32]
0x80482ce:call   0x08048364
    registers:
        ax      = { defs={} expr=v32[32] }
        cx      = { defs={} expr=v33[32] }
        dx      = { defs={} expr=v34[32] }
        bx      = { defs={} expr=v35[32] }
        sp      = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] v36[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x080482c8,0x080482c9} expr=(add[32] v36[32] -4[32]) }
        si      = { defs={} expr=v38[32] }
        di      = { defs={} expr=v39[32] }
        es      = { defs={} expr=v40[16] }
        cs      = { defs={} expr=v41[16] }
        ss      = { defs={} expr=v42[16] }
        ds      = { defs={} expr=v43[16] }
        fs      = { defs={} expr=v44[16] }
        gs      = { defs={} expr=v45[16] }
        cf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v47[1] }
        pf      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v49[1] }
        af      = { defs={0x080482c8,0x080482cb} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v51[1] }
        zf      = { defs={0x080482c8,0x080482cb} expr=(zerop[1] (add[32] (add[32] v36[32] -4[32]) -8[32])) }
        sf      = { defs={0x080482c8,0x080482cb} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v36[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v54[1] }
        if      = { defs={} expr=v55[1] }
        df      = { defs={} expr=v56[1] }
        of      = { defs={0x080482c8,0x080482cb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v58[1] }
        iopl1   = { defs={} expr=v59[1] }
        nt      = { defs={} expr=v60[1] }
        ?15     = { defs={} expr=v61[1] }
        ip      = { defs={0x080482ce} expr=0x08048364[32] }
    memory:
        address = { defs={0x080482c8} expr=(add[32] v36[32] -4[32]) }
          value = { defs={0x080482c8} expr=v37[32] }
          flags = { size=4 }
        address = { defs={0x080482c8,0x080482cb,0x080482ce} expr=(add[32] (add[32] (add[32] v36[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x080482c8,0x080482c9,0x080482cb,0x080482ce} expr=0x080482d3[32] }
          flags = { size=4 }
    ip = defs={0x080482ce} expr=0x08048364[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    registers:
        ax      = { defs={} expr=v94[32] }
        cx      = { defs={} expr=v95[32] }
        dx      = { defs={} expr=v96[32] }
        bx      = { defs={} expr=v97[32] }
        sp      = { defs={0x080482d3} expr=(add[32] v98[32] -4[32]) }
        bp      = { defs={} expr=v99[32] }
        si      = { defs={} expr=v100[32] }
        di      = { defs={} expr=v101[32] }
        es      = { defs={} expr=v102[16] }
        cs      = { defs={} expr=v103[16] }
        ss      = { defs={} expr=v104[16] }
        ds      = { defs={} expr=v105[16] }
        fs      = { defs={} expr=v106[16] }
        gs      = { defs={} expr=v107[16] }
        cf      = { defs={} expr=v108[1] }
        ?1      = { defs={} expr=v109[1] }
        pf      = { defs={} expr=v110[1] }
        ?3      = { defs={} expr=v111[1] }
        af      = { defs={} expr=v112[1] }
        ?5      = { defs={} expr=v113[1] }
        zf      = { defs={} expr=v114[1] }
        sf      = { defs={} expr=v115[1] }
        tf      = { defs={} expr=v116[1] }
        if      = { defs={} expr=v117[1] }
        df      = { defs={} expr=v118[1] }
        of      = { defs={} expr=v119[1] }
        iopl0   = { defs={} expr=v120[1] }
        iopl1   = { defs={} expr=v121[1] }
        nt      = { defs={} expr=v122[1] }
        ?15     = { defs={} expr=v123[1] }
        ip      = { defs={0x080482d3} expr=0x080483d0[32] }
    memory:
        address = { defs={0x080482d3} expr=(add[32] v98[32] -4[32]) }
          value = { defs={0x080482d3} expr=0x080482d8[32] }
          flags = { size=4 }
    ip = defs={0x080482d3} expr=0x080483d0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    registers:
        ax      = { defs={} expr=v156[32] }
        cx      = { defs={} expr=v157[32] }
        dx      = { defs={} expr=v158[32] }
        bx      = { defs={} expr=v159[32] }
        sp      = { defs={0x080482d8} expr=(add[32] v160[32] -4[32]) }
        bp      = { defs={} expr=v161[32] }
        si      = { defs={} expr=v162[32] }
        di      = { defs={} expr=v163[32] }
        es      = { defs={} expr=v164[16] }
        cs      = { defs={} expr=v165[16] }
        ss      = { defs={} expr=v166[16] }
        ds      = { defs={} expr=v167[16] }
        fs      = { defs={} expr=v168[16] }
        gs      = { defs={} expr=v169[16] }
        cf      = { defs={} expr=v170[1] }
        ?1      = { defs={} expr=v171[1] }
        pf      = { defs={} expr=v172[1] }
        ?3      = { defs={} expr=v173[1] }
        af      = { defs={} expr=v174[1] }
        ?5      = { defs={} expr=v175[1] }
        zf      = { defs={} expr=v176[1] }
        sf      = { defs={} expr=v177[1] }
        tf      = { defs={} expr=v178[1] }
        if      = { defs={} expr=v179[1] }
        df      = { defs={} expr=v180[1] }
        of      = { defs={} expr=v181[1] }
        iopl0   = { defs={} expr=v182[1] }
        iopl1   = { defs={} expr=v183[1] }
        nt      = { defs={} expr=v184[1] }
        ?15     = { defs={} expr=v185[1] }
        ip      = { defs={0x080482d8} expr=0x08048580[32] }
    memory:
        address = { defs={0x080482d8} expr=(add[32] v160[32] -4[32]) }
          value = { defs={0x080482d8} expr=0x080482dd[32] }
          flags = { size=4 }
    ip = defs={0x080482d8} expr=0x08048580[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    registers:
        ax      = { defs={} expr=v218[32] }
        cx      = { defs={} expr=v219[32] }
        dx      = { defs={} expr=v220[32] }
        bx      = { defs={} expr=v221[32] }
        sp      = { defs={0x080482dd} expr=(add[32] v223[32] 4[32]) }
        bp      = { defs={0x080482dd} expr=v248[32] }
        si      = { defs={} expr=v224[32] }
        di      = { defs={} expr=v225[32] }
        es      = { defs={} expr=v226[16] }
        cs      = { defs={} expr=v227[16] }
        ss      = { defs={} expr=v228[16] }
        ds      = { defs={} expr=v229[16] }
        fs      = { defs={} expr=v230[16] }
        gs      = { defs={} expr=v231[16] }
        cf      = { defs={} expr=v232[1] }
        ?1      = { defs={} expr=v233[1] }
        pf      = { defs={} expr=v234[1] }
        ?3      = { defs={} expr=v235[1] }
        af      = { defs={} expr=v236[1] }
        ?5      = { defs={} expr=v237[1] }
        zf      = { defs={} expr=v238[1] }
        sf      = { defs={} expr=v239[1] }
        tf      = { defs={} expr=v240[1] }
        if      = { defs={} expr=v241[1] }
        df      = { defs={} expr=v242[1] }
        of      = { defs={} expr=v243[1] }
        iopl0   = { defs={} expr=v244[1] }
        iopl1   = { defs={} expr=v245[1] }
        nt      = { defs={} expr=v246[1] }
        ?15     = { defs={} expr=v247[1] }
        ip      = { defs={0x080482dd} expr=0x080482de[32] }
    memory:
        address = { defs={0x080482dd} expr=v223[32] }
          value = { defs={} expr=v248[32] }
          flags = { size=4; read-only }
    ip = defs={0x080482dd} expr=0x080482de[32]
0x80482de:ret    
    registers:
        ax      = { defs={} expr=v218[32] }
        cx      = { defs={} expr=v219[32] }
        dx      = { defs={} expr=v220[32] }
        bx      = { defs={} expr=v221[32] }
        sp      = { defs={0x080482dd,0x080482de} expr=(add[32] (add[32] v223[32] 4[32]) 4[32]) }
        bp      = { defs={0x080482dd} expr=v248[32] }
        si      = { defs={} expr=v224[32] }
        di      = { defs={} expr=v225[32] }
        es      = { defs={} expr=v226[16] }
        cs      = { defs={} expr=v227[16] }
        ss      = { defs={} expr=v228[16] }
        ds      = { defs={} expr=v229[16] }
        fs      = { defs={} expr=v230[16] }
        gs      = { defs={} expr=v231[16] }
        cf      = { defs={} expr=v232[1] }
        ?1      = { defs={} expr=v233[1] }
        pf      = { defs={} expr=v234[1] }
        ?3      = { defs={} expr=v235[1] }
        af      = { defs={} expr=v236[1] }
        ?5      = { defs={} expr=v237[1] }
        zf      = { defs={} expr=v238[1] }
        sf      = { defs={} expr=v239[1] }
        tf      = { defs={} expr=v240[1] }
        if      = { defs={} expr=v241[1] }
        df      = { defs={} expr=v242[1] }
        of      = { defs={} expr=v243[1] }
        iopl0   = { defs={} expr=v244[1] }
        iopl1   = { defs={} expr=v245[1] }
        nt      = { defs={} expr=v246[1] }
        ?15     = { defs={} expr=v247[1] }
        ip      = { defs={0x080482de} expr=v249[32] }
    memory:
        address = { defs={0x080482dd} expr=v223[32] }
          value = { defs={} expr=v248[32] }
          flags = { size=4; read-only }
        address = { defs={0x080482dd} expr=(add[32] v223[32] 4[32]) }
          value = { defs={} expr=v249[32] }
          flags = { size=4; read-only }
    ip = defs={0x080482de} expr=v249[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    registers:
        ax      = { defs={} expr=v282[32] }
        cx      = { defs={} expr=v283[32] }
        dx      = { defs={} expr=v284[32] }
        bx      = { defs={} expr=v285[32] }
        sp      = { defs={} expr=v286[32] }
        bp      = { defs={} expr=v287[32] }
        si      = { defs={} expr=v288[32] }
        di      = { defs={} expr=v289[32] }
        es      = { defs={} expr=v290[16] }
        cs      = { defs={} expr=v291[16] }
        ss      = { defs={} expr=v292[16] }
        ds      = { defs={} expr=v293[16] }
        fs      = { defs={} expr=v294[16] }
        gs      = { defs={} expr=v295[16] }
        cf      = { defs={} expr=v296[1] }
        ?1      = { defs={} expr=v297[1] }
        pf      = { defs={} expr=v298[1] }
        ?3      = { defs={} expr=v299[1] }
        af      = { defs={} expr=v300[1] }
        ?5      = { defs={} expr=v301[1] }
        zf      = { defs={} expr=v302[1] }
        sf      = { defs={} expr=v303[1] }
        tf      = { defs={} expr=v304[1] }
        if      = { defs={} expr=v305[1] }
        df      = { defs={} expr=v306[1] }
        of      = { defs={} expr=v307[1] }
        iopl0   = { defs={} expr=v308[1] }
        iopl1   = { defs={} expr=v309[1] }
        nt      = { defs={} expr=v310[1] }
        ?15     = { defs={} expr=v311[1] }
        ip      = { defs={0x080482f0} expr=v312[32] }
    memory:
        address = { defs={0x080482f0} expr=0x080496d4[32] }
          value = { defs={} expr=v312[32] }
          flags = { size=4; read-only }
    ip = defs={0x080482f0} expr=v312[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    registers:
        ax      = { defs={} expr=v345[32] }
        cx      = { defs={} expr=v346[32] }
        dx      = { defs={} expr=v347[32] }
        bx      = { defs={} expr=v348[32] }
        sp      = { defs={} expr=v349[32] }
        bp      = { defs={} expr=v350[32] }
        si      = { defs={} expr=v351[32] }
        di      = { defs={} expr=v352[32] }
        es      = { defs={} expr=v353[16] }
        cs      = { defs={} expr=v354[16] }
        ss      = { defs={} expr=v355[16] }
        ds      = { defs={} expr=v356[16] }
        fs      = { defs={} expr=v357[16] }
        gs      = { defs={} expr=v358[16] }
        cf      = { defs={} expr=v359[1] }
        ?1      = { defs={} expr=v360[1] }
        pf      = { defs={} expr=v361[1] }
        ?3      = { defs={} expr=v362[1] }
        af      = { defs={} expr=v363[1] }
        ?5      = { defs={} expr=v364[1] }
        zf      = { defs={} expr=v365[1] }
        sf      = { defs={} expr=v366[1] }
        tf      = { defs={} expr=v367[1] }
        if      = { defs={} expr=v368[1] }
        df      = { defs={} expr=v369[1] }
        of      = { defs={} expr=v370[1] }
        iopl0   = { defs={} expr=v371[1] }
        iopl1   = { defs={} expr=v372[1] }
        nt      = { defs={} expr=v373[1] }
        ?15     = { defs={} expr=v374[1] }
        ip      = { defs={0x08048300} expr=v375[32] }
    memory:
        address = { defs={0x08048300} expr=0x080496d8[32] }
          value = { defs={} expr=v375[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048300} expr=v375[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    registers:
        ax      = { defs={} expr=v408[32] }
        cx      = { defs={} expr=v409[32] }
        dx      = { defs={} expr=v410[32] }
        bx      = { defs={} expr=v411[32] }
        sp      = { defs={} expr=v412[32] }
        bp      = { defs={} expr=v413[32] }
        si      = { defs={} expr=v414[32] }
        di      = { defs={} expr=v415[32] }
        es      = { defs={} expr=v416[16] }
        cs      = { defs={} expr=v417[16] }
        ss      = { defs={} expr=v418[16] }
        ds      = { defs={} expr=v419[16] }
        fs      = { defs={} expr=v420[16] }
        gs      = { defs={} expr=v421[16] }
        cf      = { defs={} expr=v422[1] }
        ?1      = { defs={} expr=v423[1] }
        pf      = { defs={} expr=v424[1] }
        ?3      = { defs={} expr=v425[1] }
        af      = { defs={} expr=v426[1] }
        ?5      = { defs={} expr=v427[1] }
        zf      = { defs={} expr=v428[1] }
        sf      = { defs={} expr=v429[1] }
        tf      = { defs={} expr=v430[1] }
        if      = { defs={} expr=v431[1] }
        df      = { defs={} expr=v432[1] }
        of      = { defs={} expr=v433[1] }
        iopl0   = { defs={} expr=v434[1] }
        iopl1   = { defs={} expr=v435[1] }
        nt      = { defs={} expr=v436[1] }
        ?15     = { defs={} expr=v437[1] }
        ip      = { defs={0x08048310} expr=v438[32] }
    memory:
        address = { defs={0x08048310} expr=0x080496dc[32] }
          value = { defs={} expr=v438[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048310} expr=v438[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    registers:
        ax      = { defs={} expr=v471[32] }
        cx      = { defs={} expr=v472[32] }
        dx      = { defs={} expr=v473[32] }
        bx      = { defs={} expr=v474[32] }
        sp      = { defs={} expr=v475[32] }
        bp      = { defs={} expr=v476[32] }
        si      = { defs={} expr=v477[32] }
        di      = { defs={} expr=v478[32] }
        es      = { defs={} expr=v479[16] }
        cs      = { defs={} expr=v480[16] }
        ss      = { defs={} expr=v481[16] }
        ds      = { defs={} expr=v482[16] }
        fs      = { defs={} expr=v483[16] }
        gs      = { defs={} expr=v484[16] }
        cf      = { defs={} expr=v485[1] }
        ?1      = { defs={} expr=v486[1] }
        pf      = { defs={} expr=v487[1] }
        ?3      = { defs={} expr=v488[1] }
        af      = { defs={} expr=v489[1] }
        ?5      = { defs={} expr=v490[1] }
        zf      = { defs={} expr=v491[1] }
        sf      = { defs={} expr=v492[1] }
        tf      = { defs={} expr=v493[1] }
        if      = { defs={} expr=v494[1] }
        df      = { defs={} expr=v495[1] }
        of      = { defs={} expr=v496[1] }
        iopl0   = { defs={} expr=v497[1] }
        iopl1   = { defs={} expr=v498[1] }
        nt      = { defs={} expr=v499[1] }
        ?15     = { defs={} expr=v500[1] }
        ip      = { defs={0x08048320} expr=v501[32] }
    memory:
        address = { defs={0x08048320} expr=0x080496e0[32] }
          value = { defs={} expr=v501[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048320} expr=v501[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    registers:
        ax      = { defs={} expr=v534[32] }
        cx      = { defs={} expr=v535[32] }
        dx      = { defs={} expr=v536[32] }
        bx      = { defs={} expr=v537[32] }
        sp      = { defs={} expr=v538[32] }
        bp      = { defs={} expr=v539[32] }
        si      = { defs={} expr=v540[32] }
        di      = { defs={} expr=v541[32] }
        es      = { defs={} expr=v542[16] }
        cs      = { defs={} expr=v543[16] }
        ss      = { defs={} expr=v544[16] }
        ds      = { defs={} expr=v545[16] }
        fs      = { defs={} expr=v546[16] }
        gs      = { defs={} expr=v547[16] }
        cf      = { defs={} expr=v548[1] }
        ?1      = { defs={} expr=v549[1] }
        pf      = { defs={} expr=v550[1] }
        ?3      = { defs={} expr=v551[1] }
        af      = { defs={} expr=v552[1] }
        ?5      = { defs={} expr=v553[1] }
        zf      = { defs={} expr=v554[1] }
        sf      = { defs={} expr=v555[1] }
        tf      = { defs={} expr=v556[1] }
        if      = { defs={} expr=v557[1] }
        df      = { defs={} expr=v558[1] }
        of      = { defs={} expr=v559[1] }
        iopl0   = { defs={} expr=v560[1] }
        iopl1   = { defs={} expr=v561[1] }
        nt      = { defs={} expr=v562[1] }
        ?15     = { defs={} expr=v563[1] }
        ip      = { defs={0x08048330} expr=v564[32] }
    memory:
        address = { defs={0x08048330} expr=0x080496e4[32] }
          value = { defs={} expr=v564[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048330} expr=v564[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={} expr=v598[32] }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={} expr=v601[32] }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={} expr=v603[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048340} expr=v627[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340} expr=0x08048342[32] }
    memory:
        (empty)
    ip = defs={0x08048340} expr=0x08048342[32]
0x8048342:pop    esi
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={} expr=v598[32] }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342} expr=(add[32] v601[32] 4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048340} expr=v627[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342} expr=0x08048343[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048340,0x08048342} expr=0x08048343[32]
0x8048343:mov    ecx, esp
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342} expr=(add[32] v601[32] 4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048340} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048340} expr=1[1] }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048340} expr=v627[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048340} expr=1[1] }
        sf      = { defs={0x08048340} expr=0[1] }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048340} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343} expr=0x08048345[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048340,0x08048342,0x08048343} expr=0x08048345[32]
0x8048345:and    esp, 0xf0<-0x10>
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345} expr=(bv-and[32] (add[32] v601[32] 4[32]) -16[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345} expr=0x08048348[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345} expr=0x08048348[32]
0x8048348:push   eax
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348} expr=0x08048349[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348} expr=0x08048349[32]
0x8048349:push   esp
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349} expr=0x0804834a[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349} expr=0x0804834a[32]
0x804834a:push   edx
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a} expr=0x0804834b[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v599[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a} expr=0x0804834b[32]
0x804834b:push   0x08048520
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=0x08048350[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v599[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=0x08048350[32]
0x8048350:push   0x080484b0
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=0x08048355[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v599[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=0x08048355[32]
0x8048355:push   ecx
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=0x08048356[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v599[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(add[32] v601[32] 4[32]) }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=0x08048356[32]
0x8048356:push   esi
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=0x08048357[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v599[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(add[32] v601[32] 4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=v628[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=0x08048357[32]
0x8048357:push   0x08048410
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=0x0804835c[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v599[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(add[32] v601[32] 4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=v628[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048357} expr=0x08048410[32] }
          flags = { size=4 }
    ip = defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=0x0804835c[32]
0x804835c:call   0x08048310
    registers:
        ax      = { defs={} expr=v597[32] }
        cx      = { defs={0x08048342,0x08048343} expr=(add[32] v601[32] 4[32]) }
        dx      = { defs={} expr=v599[32] }
        bx      = { defs={} expr=v600[32] }
        sp      = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048340} expr=0[32] }
        si      = { defs={0x08048342} expr=v628[32] }
        di      = { defs={} expr=v604[32] }
        es      = { defs={} expr=v605[16] }
        cs      = { defs={} expr=v606[16] }
        ss      = { defs={} expr=v607[16] }
        ds      = { defs={} expr=v608[16] }
        fs      = { defs={} expr=v609[16] }
        gs      = { defs={} expr=v610[16] }
        cf      = { defs={0x08048345} expr=0[1] }
        ?1      = { defs={} expr=v612[1] }
        pf      = { defs={0x08048342,0x08048345} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v614[1] }
        af      = { defs={0x08048345} expr=v629[1] }
        ?5      = { defs={} expr=v616[1] }
        zf      = { defs={0x08048342,0x08048345} expr=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        sf      = { defs={0x08048342,0x08048345} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])) }
        tf      = { defs={} expr=v619[1] }
        if      = { defs={} expr=v620[1] }
        df      = { defs={} expr=v621[1] }
        of      = { defs={0x08048345} expr=0[1] }
        iopl0   = { defs={} expr=v623[1] }
        iopl1   = { defs={} expr=v624[1] }
        nt      = { defs={} expr=v625[1] }
        ?15     = { defs={} expr=v626[1] }
        ip      = { defs={0x0804835c} expr=0x08048310[32] }
    memory:
        address = { defs={} expr=v601[32] }
          value = { defs={} expr=v628[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048342,0x08048345,0x08048348} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          value = { defs={0x08048348} expr=v597[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048345,0x08048348,0x08048349} expr=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a} expr=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834a} expr=v599[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b} expr=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x0804834b} expr=0x08048520[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048350} expr=0x080484b0[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048343,0x08048355} expr=(add[32] v601[32] 4[32]) }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048342,0x08048356} expr=v628[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048357} expr=0x08048410[32] }
          flags = { size=4 }
        address = { defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048340,0x08048342,0x08048343,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c} expr=0x08048361[32] }
          flags = { size=4 }
    ip = defs={0x0804835c} expr=0x08048310[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    registers:
        ax      = { defs={} expr=v662[32] }
        cx      = { defs={} expr=v663[32] }
        dx      = { defs={} expr=v664[32] }
        bx      = { defs={} expr=v665[32] }
        sp      = { defs={} expr=v666[32] }
        bp      = { defs={} expr=v667[32] }
        si      = { defs={} expr=v668[32] }
        di      = { defs={} expr=v669[32] }
        es      = { defs={} expr=v670[16] }
        cs      = { defs={} expr=v671[16] }
        ss      = { defs={} expr=v672[16] }
        ds      = { defs={} expr=v673[16] }
        fs      = { defs={} expr=v674[16] }
        gs      = { defs={} expr=v675[16] }
        cf      = { defs={} expr=v676[1] }
        ?1      = { defs={} expr=v677[1] }
        pf      = { defs={} expr=v678[1] }
        ?3      = { defs={} expr=v679[1] }
        af      = { defs={} expr=v680[1] }
        ?5      = { defs={} expr=v681[1] }
        zf      = { defs={} expr=v682[1] }
        sf      = { defs={} expr=v683[1] }
        tf      = { defs={} expr=v684[1] }
        if      = { defs={} expr=v685[1] }
        df      = { defs={} expr=v686[1] }
        of      = { defs={} expr=v687[1] }
        iopl0   = { defs={} expr=v688[1] }
        iopl1   = { defs={} expr=v689[1] }
        nt      = { defs={} expr=v690[1] }
        ?15     = { defs={} expr=v691[1] }
        ip      = { defs={0x08048361} expr=0x08048361[32] }
    memory:
        (empty)
    ip = defs={0x08048361} expr=0x08048361[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048364:push   ebp
    registers:
        ax      = { defs={} expr=v724[32] }
        cx      = { defs={} expr=v725[32] }
        dx      = { defs={} expr=v726[32] }
        bx      = { defs={} expr=v727[32] }
        sp      = { defs={0x08048364} expr=(add[32] v728[32] -4[32]) }
        bp      = { defs={} expr=v729[32] }
        si      = { defs={} expr=v730[32] }
        di      = { defs={} expr=v731[32] }
        es      = { defs={} expr=v732[16] }
        cs      = { defs={} expr=v733[16] }
        ss      = { defs={} expr=v734[16] }
        ds      = { defs={} expr=v735[16] }
        fs      = { defs={} expr=v736[16] }
        gs      = { defs={} expr=v737[16] }
        cf      = { defs={} expr=v738[1] }
        ?1      = { defs={} expr=v739[1] }
        pf      = { defs={} expr=v740[1] }
        ?3      = { defs={} expr=v741[1] }
        af      = { defs={} expr=v742[1] }
        ?5      = { defs={} expr=v743[1] }
        zf      = { defs={} expr=v744[1] }
        sf      = { defs={} expr=v745[1] }
        tf      = { defs={} expr=v746[1] }
        if      = { defs={} expr=v747[1] }
        df      = { defs={} expr=v748[1] }
        of      = { defs={} expr=v749[1] }
        iopl0   = { defs={} expr=v750[1] }
        iopl1   = { defs={} expr=v751[1] }
        nt      = { defs={} expr=v752[1] }
        ?15     = { defs={} expr=v753[1] }
        ip      = { defs={0x08048364} expr=0x08048365[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v728[32] -4[32]) }
          value = { defs={0x08048364} expr=v729[32] }
          flags = { size=4 }
    ip = defs={0x08048364} expr=0x08048365[32]
0x8048365:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v724[32] }
        cx      = { defs={} expr=v725[32] }
        dx      = { defs={} expr=v726[32] }
        bx      = { defs={} expr=v727[32] }
        sp      = { defs={0x08048364} expr=(add[32] v728[32] -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v728[32] -4[32]) }
        si      = { defs={} expr=v730[32] }
        di      = { defs={} expr=v731[32] }
        es      = { defs={} expr=v732[16] }
        cs      = { defs={} expr=v733[16] }
        ss      = { defs={} expr=v734[16] }
        ds      = { defs={} expr=v735[16] }
        fs      = { defs={} expr=v736[16] }
        gs      = { defs={} expr=v737[16] }
        cf      = { defs={} expr=v738[1] }
        ?1      = { defs={} expr=v739[1] }
        pf      = { defs={} expr=v740[1] }
        ?3      = { defs={} expr=v741[1] }
        af      = { defs={} expr=v742[1] }
        ?5      = { defs={} expr=v743[1] }
        zf      = { defs={} expr=v744[1] }
        sf      = { defs={} expr=v745[1] }
        tf      = { defs={} expr=v746[1] }
        if      = { defs={} expr=v747[1] }
        df      = { defs={} expr=v748[1] }
        of      = { defs={} expr=v749[1] }
        iopl0   = { defs={} expr=v750[1] }
        iopl1   = { defs={} expr=v751[1] }
        nt      = { defs={} expr=v752[1] }
        ?15     = { defs={} expr=v753[1] }
        ip      = { defs={0x08048364,0x08048365} expr=0x08048367[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v728[32] -4[32]) }
          value = { defs={0x08048364} expr=v729[32] }
          flags = { size=4 }
    ip = defs={0x08048364,0x08048365} expr=0x08048367[32]
0x8048367:push   ebx
    registers:
        ax      = { defs={} expr=v724[32] }
        cx      = { defs={} expr=v725[32] }
        dx      = { defs={} expr=v726[32] }
        bx      = { defs={} expr=v727[32] }
        sp      = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v728[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v728[32] -4[32]) }
        si      = { defs={} expr=v730[32] }
        di      = { defs={} expr=v731[32] }
        es      = { defs={} expr=v732[16] }
        cs      = { defs={} expr=v733[16] }
        ss      = { defs={} expr=v734[16] }
        ds      = { defs={} expr=v735[16] }
        fs      = { defs={} expr=v736[16] }
        gs      = { defs={} expr=v737[16] }
        cf      = { defs={} expr=v738[1] }
        ?1      = { defs={} expr=v739[1] }
        pf      = { defs={} expr=v740[1] }
        ?3      = { defs={} expr=v741[1] }
        af      = { defs={} expr=v742[1] }
        ?5      = { defs={} expr=v743[1] }
        zf      = { defs={} expr=v744[1] }
        sf      = { defs={} expr=v745[1] }
        tf      = { defs={} expr=v746[1] }
        if      = { defs={} expr=v747[1] }
        df      = { defs={} expr=v748[1] }
        of      = { defs={} expr=v749[1] }
        iopl0   = { defs={} expr=v750[1] }
        iopl1   = { defs={} expr=v751[1] }
        nt      = { defs={} expr=v752[1] }
        ?15     = { defs={} expr=v753[1] }
        ip      = { defs={0x08048364,0x08048365,0x08048367} expr=0x08048368[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v728[32] -4[32]) }
          value = { defs={0x08048364} expr=v729[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v728[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=v727[32] }
          flags = { size=4 }
    ip = defs={0x08048364,0x08048365,0x08048367} expr=0x08048368[32]
0x8048368:push   ecx
    registers:
        ax      = { defs={} expr=v724[32] }
        cx      = { defs={} expr=v725[32] }
        dx      = { defs={} expr=v726[32] }
        bx      = { defs={} expr=v727[32] }
        sp      = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v728[32] -4[32]) }
        si      = { defs={} expr=v730[32] }
        di      = { defs={} expr=v731[32] }
        es      = { defs={} expr=v732[16] }
        cs      = { defs={} expr=v733[16] }
        ss      = { defs={} expr=v734[16] }
        ds      = { defs={} expr=v735[16] }
        fs      = { defs={} expr=v736[16] }
        gs      = { defs={} expr=v737[16] }
        cf      = { defs={} expr=v738[1] }
        ?1      = { defs={} expr=v739[1] }
        pf      = { defs={} expr=v740[1] }
        ?3      = { defs={} expr=v741[1] }
        af      = { defs={} expr=v742[1] }
        ?5      = { defs={} expr=v743[1] }
        zf      = { defs={} expr=v744[1] }
        sf      = { defs={} expr=v745[1] }
        tf      = { defs={} expr=v746[1] }
        if      = { defs={} expr=v747[1] }
        df      = { defs={} expr=v748[1] }
        of      = { defs={} expr=v749[1] }
        iopl0   = { defs={} expr=v750[1] }
        iopl1   = { defs={} expr=v751[1] }
        nt      = { defs={} expr=v752[1] }
        ?15     = { defs={} expr=v753[1] }
        ip      = { defs={0x08048364,0x08048365,0x08048367,0x08048368} expr=0x08048369[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v728[32] -4[32]) }
          value = { defs={0x08048364} expr=v729[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v728[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=v727[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048368} expr=v725[32] }
          flags = { size=4 }
    ip = defs={0x08048364,0x08048365,0x08048367,0x08048368} expr=0x08048369[32]
0x8048369:call   0x0804836e
    registers:
        ax      = { defs={} expr=v724[32] }
        cx      = { defs={} expr=v725[32] }
        dx      = { defs={} expr=v726[32] }
        bx      = { defs={} expr=v727[32] }
        sp      = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048364,0x08048365} expr=(add[32] v728[32] -4[32]) }
        si      = { defs={} expr=v730[32] }
        di      = { defs={} expr=v731[32] }
        es      = { defs={} expr=v732[16] }
        cs      = { defs={} expr=v733[16] }
        ss      = { defs={} expr=v734[16] }
        ds      = { defs={} expr=v735[16] }
        fs      = { defs={} expr=v736[16] }
        gs      = { defs={} expr=v737[16] }
        cf      = { defs={} expr=v738[1] }
        ?1      = { defs={} expr=v739[1] }
        pf      = { defs={} expr=v740[1] }
        ?3      = { defs={} expr=v741[1] }
        af      = { defs={} expr=v742[1] }
        ?5      = { defs={} expr=v743[1] }
        zf      = { defs={} expr=v744[1] }
        sf      = { defs={} expr=v745[1] }
        tf      = { defs={} expr=v746[1] }
        if      = { defs={} expr=v747[1] }
        df      = { defs={} expr=v748[1] }
        of      = { defs={} expr=v749[1] }
        iopl0   = { defs={} expr=v750[1] }
        iopl1   = { defs={} expr=v751[1] }
        nt      = { defs={} expr=v752[1] }
        ?15     = { defs={} expr=v753[1] }
        ip      = { defs={0x08048369} expr=0x0804836e[32] }
    memory:
        address = { defs={0x08048364} expr=(add[32] v728[32] -4[32]) }
          value = { defs={0x08048364} expr=v729[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367} expr=(add[32] (add[32] v728[32] -4[32]) -4[32]) }
          value = { defs={0x08048367} expr=v727[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367,0x08048368} expr=(add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048368} expr=v725[32] }
          flags = { size=4 }
        address = { defs={0x08048364,0x08048367,0x08048368,0x08048369} expr=(add[32] (add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048364,0x08048365,0x08048367,0x08048368,0x08048369} expr=0x0804836e[32] }
          flags = { size=4 }
    ip = defs={0x08048369} expr=0x0804836e[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    registers:
        ax      = { defs={} expr=v786[32] }
        cx      = { defs={} expr=v787[32] }
        dx      = { defs={} expr=v788[32] }
        bx      = { defs={0x0804836e} expr=v816[32] }
        sp      = { defs={0x0804836e} expr=(add[32] v790[32] 4[32]) }
        bp      = { defs={} expr=v791[32] }
        si      = { defs={} expr=v792[32] }
        di      = { defs={} expr=v793[32] }
        es      = { defs={} expr=v794[16] }
        cs      = { defs={} expr=v795[16] }
        ss      = { defs={} expr=v796[16] }
        ds      = { defs={} expr=v797[16] }
        fs      = { defs={} expr=v798[16] }
        gs      = { defs={} expr=v799[16] }
        cf      = { defs={} expr=v800[1] }
        ?1      = { defs={} expr=v801[1] }
        pf      = { defs={} expr=v802[1] }
        ?3      = { defs={} expr=v803[1] }
        af      = { defs={} expr=v804[1] }
        ?5      = { defs={} expr=v805[1] }
        zf      = { defs={} expr=v806[1] }
        sf      = { defs={} expr=v807[1] }
        tf      = { defs={} expr=v808[1] }
        if      = { defs={} expr=v809[1] }
        df      = { defs={} expr=v810[1] }
        of      = { defs={} expr=v811[1] }
        iopl0   = { defs={} expr=v812[1] }
        iopl1   = { defs={} expr=v813[1] }
        nt      = { defs={} expr=v814[1] }
        ?15     = { defs={} expr=v815[1] }
        ip      = { defs={0x0804836e} expr=0x0804836f[32] }
    memory:
        address = { defs={} expr=v790[32] }
          value = { defs={} expr=v816[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e} expr=0x0804836f[32]
0x804836f:add    ebx, 0x0000135a
    registers:
        ax      = { defs={} expr=v786[32] }
        cx      = { defs={} expr=v787[32] }
        dx      = { defs={} expr=v788[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v816[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v790[32] 4[32]) }
        bp      = { defs={} expr=v791[32] }
        si      = { defs={} expr=v792[32] }
        di      = { defs={} expr=v793[32] }
        es      = { defs={} expr=v794[16] }
        cs      = { defs={} expr=v795[16] }
        ss      = { defs={} expr=v796[16] }
        ds      = { defs={} expr=v797[16] }
        fs      = { defs={} expr=v798[16] }
        gs      = { defs={} expr=v799[16] }
        cf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))) }
        ?1      = { defs={} expr=v801[1] }
        pf      = { defs={0x0804836e,0x0804836f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))))))) }
        ?3      = { defs={} expr=v803[1] }
        af      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))) }
        ?5      = { defs={} expr=v805[1] }
        zf      = { defs={0x0804836e,0x0804836f} expr=(zerop[1] (add[32] v816[32] 4954[32])) }
        sf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (add[32] v816[32] 4954[32])) }
        tf      = { defs={} expr=v808[1] }
        if      = { defs={} expr=v809[1] }
        df      = { defs={} expr=v810[1] }
        of      = { defs={0x0804836e,0x0804836f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33])))))) }
        iopl0   = { defs={} expr=v812[1] }
        iopl1   = { defs={} expr=v813[1] }
        nt      = { defs={} expr=v814[1] }
        ?15     = { defs={} expr=v815[1] }
        ip      = { defs={0x0804836e,0x0804836f} expr=0x08048375[32] }
    memory:
        address = { defs={} expr=v790[32] }
          value = { defs={} expr=v816[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e,0x0804836f} expr=0x08048375[32]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    registers:
        ax      = { defs={} expr=v786[32] }
        cx      = { defs={} expr=v787[32] }
        dx      = { defs={0x08048375} expr=v817[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v816[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v790[32] 4[32]) }
        bp      = { defs={} expr=v791[32] }
        si      = { defs={} expr=v792[32] }
        di      = { defs={} expr=v793[32] }
        es      = { defs={} expr=v794[16] }
        cs      = { defs={} expr=v795[16] }
        ss      = { defs={} expr=v796[16] }
        ds      = { defs={} expr=v797[16] }
        fs      = { defs={} expr=v798[16] }
        gs      = { defs={} expr=v799[16] }
        cf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))) }
        ?1      = { defs={} expr=v801[1] }
        pf      = { defs={0x0804836e,0x0804836f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))))))) }
        ?3      = { defs={} expr=v803[1] }
        af      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))) }
        ?5      = { defs={} expr=v805[1] }
        zf      = { defs={0x0804836e,0x0804836f} expr=(zerop[1] (add[32] v816[32] 4954[32])) }
        sf      = { defs={0x0804836e,0x0804836f} expr=(extract[1] 31[32] 32[32] (add[32] v816[32] 4954[32])) }
        tf      = { defs={} expr=v808[1] }
        if      = { defs={} expr=v809[1] }
        df      = { defs={} expr=v810[1] }
        of      = { defs={0x0804836e,0x0804836f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33])))))) }
        iopl0   = { defs={} expr=v812[1] }
        iopl1   = { defs={} expr=v813[1] }
        nt      = { defs={} expr=v814[1] }
        ?15     = { defs={} expr=v815[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375} expr=0x0804837b[32] }
    memory:
        address = { defs={} expr=v790[32] }
          value = { defs={} expr=v816[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v816[32] 4954[32]) -4[32]) }
          value = { defs={} expr=v817[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e,0x0804836f,0x08048375} expr=0x0804837b[32]
0x804837b:test   edx, edx
    registers:
        ax      = { defs={} expr=v786[32] }
        cx      = { defs={} expr=v787[32] }
        dx      = { defs={0x08048375} expr=v817[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v816[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v790[32] 4[32]) }
        bp      = { defs={} expr=v791[32] }
        si      = { defs={} expr=v792[32] }
        di      = { defs={} expr=v793[32] }
        es      = { defs={} expr=v794[16] }
        cs      = { defs={} expr=v795[16] }
        ss      = { defs={} expr=v796[16] }
        ds      = { defs={} expr=v797[16] }
        fs      = { defs={} expr=v798[16] }
        gs      = { defs={} expr=v799[16] }
        cf      = { defs={0x0804837b} expr=0[1] }
        ?1      = { defs={} expr=v801[1] }
        pf      = { defs={0x08048375,0x0804837b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))))))) }
        ?3      = { defs={} expr=v803[1] }
        af      = { defs={0x0804837b} expr=v818[1] }
        ?5      = { defs={} expr=v805[1] }
        zf      = { defs={0x08048375,0x0804837b} expr=(zerop[1] (bv-and[32] v817[32] v817[32])) }
        sf      = { defs={0x08048375,0x0804837b} expr=(extract[1] 31[32] 32[32] (bv-and[32] v817[32] v817[32])) }
        tf      = { defs={} expr=v808[1] }
        if      = { defs={} expr=v809[1] }
        df      = { defs={} expr=v810[1] }
        of      = { defs={0x0804837b} expr=0[1] }
        iopl0   = { defs={} expr=v812[1] }
        iopl1   = { defs={} expr=v813[1] }
        nt      = { defs={} expr=v814[1] }
        ?15     = { defs={} expr=v815[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375,0x0804837b} expr=0x0804837d[32] }
    memory:
        address = { defs={} expr=v790[32] }
          value = { defs={} expr=v816[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v816[32] 4954[32]) -4[32]) }
          value = { defs={} expr=v817[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e,0x0804836f,0x08048375,0x0804837b} expr=0x0804837d[32]
0x804837d:je     0x08048384
    registers:
        ax      = { defs={} expr=v786[32] }
        cx      = { defs={} expr=v787[32] }
        dx      = { defs={0x08048375} expr=v817[32] }
        bx      = { defs={0x0804836e,0x0804836f} expr=(add[32] v816[32] 4954[32]) }
        sp      = { defs={0x0804836e} expr=(add[32] v790[32] 4[32]) }
        bp      = { defs={} expr=v791[32] }
        si      = { defs={} expr=v792[32] }
        di      = { defs={} expr=v793[32] }
        es      = { defs={} expr=v794[16] }
        cs      = { defs={} expr=v795[16] }
        ss      = { defs={} expr=v796[16] }
        ds      = { defs={} expr=v797[16] }
        fs      = { defs={} expr=v798[16] }
        gs      = { defs={} expr=v799[16] }
        cf      = { defs={0x0804837b} expr=0[1] }
        ?1      = { defs={} expr=v801[1] }
        pf      = { defs={0x08048375,0x0804837b} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))))))) }
        ?3      = { defs={} expr=v803[1] }
        af      = { defs={0x0804837b} expr=v818[1] }
        ?5      = { defs={} expr=v805[1] }
        zf      = { defs={0x08048375,0x0804837b} expr=(zerop[1] (bv-and[32] v817[32] v817[32])) }
        sf      = { defs={0x08048375,0x0804837b} expr=(extract[1] 31[32] 32[32] (bv-and[32] v817[32] v817[32])) }
        tf      = { defs={} expr=v808[1] }
        if      = { defs={} expr=v809[1] }
        df      = { defs={} expr=v810[1] }
        of      = { defs={0x0804837b} expr=0[1] }
        iopl0   = { defs={} expr=v812[1] }
        iopl1   = { defs={} expr=v813[1] }
        nt      = { defs={} expr=v814[1] }
        ?15     = { defs={} expr=v815[1] }
        ip      = { defs={0x0804836e,0x0804836f,0x08048375,0x0804837b,0x0804837d} expr=(ite[32] (zerop[1] (bv-and[32] v817[32] v817[32])) 0x08048384[32] 0x0804837f[32]) }
    memory:
        address = { defs={} expr=v790[32] }
          value = { defs={} expr=v816[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804836e,0x0804836f,0x08048375} expr=(add[32] (add[32] v816[32] 4954[32]) -4[32]) }
          value = { defs={} expr=v817[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804836e,0x0804836f,0x08048375,0x0804837b,0x0804837d} expr=(ite[32] (zerop[1] (bv-and[32] v817[32] v817[32])) 0x08048384[32] 0x0804837f[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    registers:
        ax      = { defs={} expr=v851[32] }
        cx      = { defs={} expr=v852[32] }
        dx      = { defs={} expr=v853[32] }
        bx      = { defs={} expr=v854[32] }
        sp      = { defs={0x0804837f} expr=(add[32] v855[32] -4[32]) }
        bp      = { defs={} expr=v856[32] }
        si      = { defs={} expr=v857[32] }
        di      = { defs={} expr=v858[32] }
        es      = { defs={} expr=v859[16] }
        cs      = { defs={} expr=v860[16] }
        ss      = { defs={} expr=v861[16] }
        ds      = { defs={} expr=v862[16] }
        fs      = { defs={} expr=v863[16] }
        gs      = { defs={} expr=v864[16] }
        cf      = { defs={} expr=v865[1] }
        ?1      = { defs={} expr=v866[1] }
        pf      = { defs={} expr=v867[1] }
        ?3      = { defs={} expr=v868[1] }
        af      = { defs={} expr=v869[1] }
        ?5      = { defs={} expr=v870[1] }
        zf      = { defs={} expr=v871[1] }
        sf      = { defs={} expr=v872[1] }
        tf      = { defs={} expr=v873[1] }
        if      = { defs={} expr=v874[1] }
        df      = { defs={} expr=v875[1] }
        of      = { defs={} expr=v876[1] }
        iopl0   = { defs={} expr=v877[1] }
        iopl1   = { defs={} expr=v878[1] }
        nt      = { defs={} expr=v879[1] }
        ?15     = { defs={} expr=v880[1] }
        ip      = { defs={0x0804837f} expr=0x08048330[32] }
    memory:
        address = { defs={0x0804837f} expr=(add[32] v855[32] -4[32]) }
          value = { defs={0x0804837f} expr=0x08048384[32] }
          flags = { size=4 }
    ip = defs={0x0804837f} expr=0x08048330[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    registers:
        ax      = { defs={0x08048384} expr=v943[32] }
        cx      = { defs={} expr=v914[32] }
        dx      = { defs={} expr=v915[32] }
        bx      = { defs={} expr=v916[32] }
        sp      = { defs={0x08048384} expr=(add[32] v917[32] 4[32]) }
        bp      = { defs={} expr=v918[32] }
        si      = { defs={} expr=v919[32] }
        di      = { defs={} expr=v920[32] }
        es      = { defs={} expr=v921[16] }
        cs      = { defs={} expr=v922[16] }
        ss      = { defs={} expr=v923[16] }
        ds      = { defs={} expr=v924[16] }
        fs      = { defs={} expr=v925[16] }
        gs      = { defs={} expr=v926[16] }
        cf      = { defs={} expr=v927[1] }
        ?1      = { defs={} expr=v928[1] }
        pf      = { defs={} expr=v929[1] }
        ?3      = { defs={} expr=v930[1] }
        af      = { defs={} expr=v931[1] }
        ?5      = { defs={} expr=v932[1] }
        zf      = { defs={} expr=v933[1] }
        sf      = { defs={} expr=v934[1] }
        tf      = { defs={} expr=v935[1] }
        if      = { defs={} expr=v936[1] }
        df      = { defs={} expr=v937[1] }
        of      = { defs={} expr=v938[1] }
        iopl0   = { defs={} expr=v939[1] }
        iopl1   = { defs={} expr=v940[1] }
        nt      = { defs={} expr=v941[1] }
        ?15     = { defs={} expr=v942[1] }
        ip      = { defs={0x08048384} expr=0x08048385[32] }
    memory:
        address = { defs={} expr=v917[32] }
          value = { defs={} expr=v943[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048384} expr=0x08048385[32]
0x8048385:pop    ebx
    registers:
        ax      = { defs={0x08048384} expr=v943[32] }
        cx      = { defs={} expr=v914[32] }
        dx      = { defs={} expr=v915[32] }
        bx      = { defs={0x08048385} expr=v944[32] }
        sp      = { defs={0x08048384,0x08048385} expr=(add[32] (add[32] v917[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v918[32] }
        si      = { defs={} expr=v919[32] }
        di      = { defs={} expr=v920[32] }
        es      = { defs={} expr=v921[16] }
        cs      = { defs={} expr=v922[16] }
        ss      = { defs={} expr=v923[16] }
        ds      = { defs={} expr=v924[16] }
        fs      = { defs={} expr=v925[16] }
        gs      = { defs={} expr=v926[16] }
        cf      = { defs={} expr=v927[1] }
        ?1      = { defs={} expr=v928[1] }
        pf      = { defs={} expr=v929[1] }
        ?3      = { defs={} expr=v930[1] }
        af      = { defs={} expr=v931[1] }
        ?5      = { defs={} expr=v932[1] }
        zf      = { defs={} expr=v933[1] }
        sf      = { defs={} expr=v934[1] }
        tf      = { defs={} expr=v935[1] }
        if      = { defs={} expr=v936[1] }
        df      = { defs={} expr=v937[1] }
        of      = { defs={} expr=v938[1] }
        iopl0   = { defs={} expr=v939[1] }
        iopl1   = { defs={} expr=v940[1] }
        nt      = { defs={} expr=v941[1] }
        ?15     = { defs={} expr=v942[1] }
        ip      = { defs={0x08048384,0x08048385} expr=0x08048386[32] }
    memory:
        address = { defs={} expr=v917[32] }
          value = { defs={} expr=v943[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048384} expr=(add[32] v917[32] 4[32]) }
          value = { defs={} expr=v944[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048384,0x08048385} expr=0x08048386[32]
0x8048386:leave  
    registers:
        ax      = { defs={0x08048384} expr=v943[32] }
        cx      = { defs={} expr=v914[32] }
        dx      = { defs={} expr=v915[32] }
        bx      = { defs={0x08048385} expr=v944[32] }
        sp      = { defs={0x08048386} expr=(add[32] v918[32] 4[32]) }
        bp      = { defs={0x08048386} expr=v945[32] }
        si      = { defs={} expr=v919[32] }
        di      = { defs={} expr=v920[32] }
        es      = { defs={} expr=v921[16] }
        cs      = { defs={} expr=v922[16] }
        ss      = { defs={} expr=v923[16] }
        ds      = { defs={} expr=v924[16] }
        fs      = { defs={} expr=v925[16] }
        gs      = { defs={} expr=v926[16] }
        cf      = { defs={} expr=v927[1] }
        ?1      = { defs={} expr=v928[1] }
        pf      = { defs={} expr=v929[1] }
        ?3      = { defs={} expr=v930[1] }
        af      = { defs={} expr=v931[1] }
        ?5      = { defs={} expr=v932[1] }
        zf      = { defs={} expr=v933[1] }
        sf      = { defs={} expr=v934[1] }
        tf      = { defs={} expr=v935[1] }
        if      = { defs={} expr=v936[1] }
        df      = { defs={} expr=v937[1] }
        of      = { defs={} expr=v938[1] }
        iopl0   = { defs={} expr=v939[1] }
        iopl1   = { defs={} expr=v940[1] }
        nt      = { defs={} expr=v941[1] }
        ?15     = { defs={} expr=v942[1] }
        ip      = { defs={0x08048384,0x08048385,0x08048386} expr=0x08048387[32] }
    memory:
        address = { defs={} expr=v917[32] }
          value = { defs={} expr=v943[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048384} expr=(add[32] v917[32] 4[32]) }
          value = { defs={} expr=v944[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048386} expr=v918[32] }
          value = { defs={} expr=v945[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048384,0x08048385,0x08048386} expr=0x08048387[32]
0x8048387:ret    
    registers:
        ax      = { defs={0x08048384} expr=v943[32] }
        cx      = { defs={} expr=v914[32] }
        dx      = { defs={} expr=v915[32] }
        bx      = { defs={0x08048385} expr=v944[32] }
        sp      = { defs={0x08048386,0x08048387} expr=(add[32] (add[32] v918[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048386} expr=v945[32] }
        si      = { defs={} expr=v919[32] }
        di      = { defs={} expr=v920[32] }
        es      = { defs={} expr=v921[16] }
        cs      = { defs={} expr=v922[16] }
        ss      = { defs={} expr=v923[16] }
        ds      = { defs={} expr=v924[16] }
        fs      = { defs={} expr=v925[16] }
        gs      = { defs={} expr=v926[16] }
        cf      = { defs={} expr=v927[1] }
        ?1      = { defs={} expr=v928[1] }
        pf      = { defs={} expr=v929[1] }
        ?3      = { defs={} expr=v930[1] }
        af      = { defs={} expr=v931[1] }
        ?5      = { defs={} expr=v932[1] }
        zf      = { defs={} expr=v933[1] }
        sf      = { defs={} expr=v934[1] }
        tf      = { defs={} expr=v935[1] }
        if      = { defs={} expr=v936[1] }
        df      = { defs={} expr=v937[1] }
        of      = { defs={} expr=v938[1] }
        iopl0   = { defs={} expr=v939[1] }
        iopl1   = { defs={} expr=v940[1] }
        nt      = { defs={} expr=v941[1] }
        ?15     = { defs={} expr=v942[1] }
        ip      = { defs={0x08048387} expr=v946[32] }
    memory:
        address = { defs={} expr=v917[32] }
          value = { defs={} expr=v943[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048384} expr=(add[32] v917[32] 4[32]) }
          value = { defs={} expr=v944[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048386} expr=v918[32] }
          value = { defs={} expr=v945[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048386} expr=(add[32] v918[32] 4[32]) }
          value = { defs={} expr=v946[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048387} expr=v946[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048390:push   ebp
    registers:
        ax      = { defs={} expr=v979[32] }
        cx      = { defs={} expr=v980[32] }
        dx      = { defs={} expr=v981[32] }
        bx      = { defs={} expr=v982[32] }
        sp      = { defs={0x08048390} expr=(add[32] v983[32] -4[32]) }
        bp      = { defs={} expr=v984[32] }
        si      = { defs={} expr=v985[32] }
        di      = { defs={} expr=v986[32] }
        es      = { defs={} expr=v987[16] }
        cs      = { defs={} expr=v988[16] }
        ss      = { defs={} expr=v989[16] }
        ds      = { defs={} expr=v990[16] }
        fs      = { defs={} expr=v991[16] }
        gs      = { defs={} expr=v992[16] }
        cf      = { defs={} expr=v993[1] }
        ?1      = { defs={} expr=v994[1] }
        pf      = { defs={} expr=v995[1] }
        ?3      = { defs={} expr=v996[1] }
        af      = { defs={} expr=v997[1] }
        ?5      = { defs={} expr=v998[1] }
        zf      = { defs={} expr=v999[1] }
        sf      = { defs={} expr=v1000[1] }
        tf      = { defs={} expr=v1001[1] }
        if      = { defs={} expr=v1002[1] }
        df      = { defs={} expr=v1003[1] }
        of      = { defs={} expr=v1004[1] }
        iopl0   = { defs={} expr=v1005[1] }
        iopl1   = { defs={} expr=v1006[1] }
        nt      = { defs={} expr=v1007[1] }
        ?15     = { defs={} expr=v1008[1] }
        ip      = { defs={0x08048390} expr=0x08048391[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] v983[32] -4[32]) }
          value = { defs={0x08048390} expr=v984[32] }
          flags = { size=4 }
    ip = defs={0x08048390} expr=0x08048391[32]
0x8048391:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v979[32] }
        cx      = { defs={} expr=v980[32] }
        dx      = { defs={} expr=v981[32] }
        bx      = { defs={} expr=v982[32] }
        sp      = { defs={0x08048390} expr=(add[32] v983[32] -4[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v983[32] -4[32]) }
        si      = { defs={} expr=v985[32] }
        di      = { defs={} expr=v986[32] }
        es      = { defs={} expr=v987[16] }
        cs      = { defs={} expr=v988[16] }
        ss      = { defs={} expr=v989[16] }
        ds      = { defs={} expr=v990[16] }
        fs      = { defs={} expr=v991[16] }
        gs      = { defs={} expr=v992[16] }
        cf      = { defs={} expr=v993[1] }
        ?1      = { defs={} expr=v994[1] }
        pf      = { defs={} expr=v995[1] }
        ?3      = { defs={} expr=v996[1] }
        af      = { defs={} expr=v997[1] }
        ?5      = { defs={} expr=v998[1] }
        zf      = { defs={} expr=v999[1] }
        sf      = { defs={} expr=v1000[1] }
        tf      = { defs={} expr=v1001[1] }
        if      = { defs={} expr=v1002[1] }
        df      = { defs={} expr=v1003[1] }
        of      = { defs={} expr=v1004[1] }
        iopl0   = { defs={} expr=v1005[1] }
        iopl1   = { defs={} expr=v1006[1] }
        nt      = { defs={} expr=v1007[1] }
        ?15     = { defs={} expr=v1008[1] }
        ip      = { defs={0x08048390,0x08048391} expr=0x08048393[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] v983[32] -4[32]) }
          value = { defs={0x08048390} expr=v984[32] }
          flags = { size=4 }
    ip = defs={0x08048390,0x08048391} expr=0x08048393[32]
0x8048393:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v979[32] }
        cx      = { defs={} expr=v980[32] }
        dx      = { defs={} expr=v981[32] }
        bx      = { defs={} expr=v982[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v983[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v983[32] -4[32]) }
        si      = { defs={} expr=v985[32] }
        di      = { defs={} expr=v986[32] }
        es      = { defs={} expr=v987[16] }
        cs      = { defs={} expr=v988[16] }
        ss      = { defs={} expr=v989[16] }
        ds      = { defs={} expr=v990[16] }
        fs      = { defs={} expr=v991[16] }
        gs      = { defs={} expr=v992[16] }
        cf      = { defs={0x08048390,0x08048393} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v994[1] }
        pf      = { defs={0x08048390,0x08048393} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v996[1] }
        af      = { defs={0x08048390,0x08048393} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v998[1] }
        zf      = { defs={0x08048390,0x08048393} expr=(zerop[1] (add[32] (add[32] v983[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048390,0x08048393} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v983[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1001[1] }
        if      = { defs={} expr=v1002[1] }
        df      = { defs={} expr=v1003[1] }
        of      = { defs={0x08048390,0x08048393} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1005[1] }
        iopl1   = { defs={} expr=v1006[1] }
        nt      = { defs={} expr=v1007[1] }
        ?15     = { defs={} expr=v1008[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393} expr=0x08048396[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] v983[32] -4[32]) }
          value = { defs={0x08048390} expr=v984[32] }
          flags = { size=4 }
    ip = defs={0x08048390,0x08048391,0x08048393} expr=0x08048396[32]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    registers:
        ax      = { defs={} expr=v979[32] }
        cx      = { defs={} expr=v980[32] }
        dx      = { defs={} expr=v981[32] }
        bx      = { defs={} expr=v982[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v983[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v983[32] -4[32]) }
        si      = { defs={} expr=v985[32] }
        di      = { defs={} expr=v986[32] }
        es      = { defs={} expr=v987[16] }
        cs      = { defs={} expr=v988[16] }
        ss      = { defs={} expr=v989[16] }
        ds      = { defs={} expr=v990[16] }
        fs      = { defs={} expr=v991[16] }
        gs      = { defs={} expr=v992[16] }
        cf      = { defs={0x08048396} expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9])))))) }
        ?1      = { defs={} expr=v994[1] }
        pf      = { defs={0x08048396} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] v1009[32]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] v1009[32])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] v1009[32]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v1009[32])))))) }
        ?3      = { defs={} expr=v996[1] }
        af      = { defs={0x08048396} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9])))))) }
        ?5      = { defs={} expr=v998[1] }
        zf      = { defs={0x08048396} expr=(zerop[1] (extract[8] 0[32] 8[32] v1009[32])) }
        sf      = { defs={0x08048396} expr=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v1009[32])) }
        tf      = { defs={} expr=v1001[1] }
        if      = { defs={} expr=v1002[1] }
        df      = { defs={} expr=v1003[1] }
        of      = { defs={0x08048396} expr=0[1] }
        iopl0   = { defs={} expr=v1005[1] }
        iopl1   = { defs={} expr=v1006[1] }
        nt      = { defs={} expr=v1007[1] }
        ?15     = { defs={} expr=v1008[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393,0x08048396} expr=0x0804839d[32] }
    memory:
        address = { defs={0x08048390} expr=(add[32] v983[32] -4[32]) }
          value = { defs={0x08048390} expr=v984[32] }
          flags = { size=4 }
        address = { defs={0x08048396} expr=0x080496f4[32] }
          value = { defs={} expr=v1009[32] }
          flags = { size=1; read-only }
    ip = defs={0x08048390,0x08048391,0x08048393,0x08048396} expr=0x0804839d[32]
0x804839d:jne    0x080483cc
    registers:
        ax      = { defs={} expr=v979[32] }
        cx      = { defs={} expr=v980[32] }
        dx      = { defs={} expr=v981[32] }
        bx      = { defs={} expr=v982[32] }
        sp      = { defs={0x08048390,0x08048393} expr=(add[32] (add[32] v983[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048390,0x08048391} expr=(add[32] v983[32] -4[32]) }
        si      = { defs={} expr=v985[32] }
        di      = { defs={} expr=v986[32] }
        es      = { defs={} expr=v987[16] }
        cs      = { defs={} expr=v988[16] }
        ss      = { defs={} expr=v989[16] }
        ds      = { defs={} expr=v990[16] }
        fs      = { defs={} expr=v991[16] }
        gs      = { defs={} expr=v992[16] }
        cf      = { defs={0x08048396} expr=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9])))))) }
        ?1      = { defs={} expr=v994[1] }
        pf      = { defs={0x08048396} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] v1009[32]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] v1009[32])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] v1009[32]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v1009[32])))))) }
        ?3      = { defs={} expr=v996[1] }
        af      = { defs={0x08048396} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9])))))) }
        ?5      = { defs={} expr=v998[1] }
        zf      = { defs={0x08048396} expr=(zerop[1] (extract[8] 0[32] 8[32] v1009[32])) }
        sf      = { defs={0x08048396} expr=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v1009[32])) }
        tf      = { defs={} expr=v1001[1] }
        if      = { defs={} expr=v1002[1] }
        df      = { defs={} expr=v1003[1] }
        of      = { defs={0x08048396} expr=0[1] }
        iopl0   = { defs={} expr=v1005[1] }
        iopl1   = { defs={} expr=v1006[1] }
        nt      = { defs={} expr=v1007[1] }
        ?15     = { defs={} expr=v1008[1] }
        ip      = { defs={0x08048390,0x08048391,0x08048393,0x08048396,0x0804839d} expr=(ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] v1009[32]))) 0x080483cc[32] 0x0804839f[32]) }
    memory:
        address = { defs={0x08048390} expr=(add[32] v983[32] -4[32]) }
          value = { defs={0x08048390} expr=v984[32] }
          flags = { size=4 }
        address = { defs={0x08048396} expr=0x080496f4[32] }
          value = { defs={} expr=v1009[32] }
          flags = { size=1; read-only }
    ip = defs={0x08048390,0x08048391,0x08048393,0x08048396,0x0804839d} expr=(ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] v1009[32]))) 0x080483cc[32] 0x0804839f[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    registers:
        ax      = { defs={0x0804839f} expr=v1072[32] }
        cx      = { defs={} expr=v1043[32] }
        dx      = { defs={} expr=v1044[32] }
        bx      = { defs={} expr=v1045[32] }
        sp      = { defs={} expr=v1046[32] }
        bp      = { defs={} expr=v1047[32] }
        si      = { defs={} expr=v1048[32] }
        di      = { defs={} expr=v1049[32] }
        es      = { defs={} expr=v1050[16] }
        cs      = { defs={} expr=v1051[16] }
        ss      = { defs={} expr=v1052[16] }
        ds      = { defs={} expr=v1053[16] }
        fs      = { defs={} expr=v1054[16] }
        gs      = { defs={} expr=v1055[16] }
        cf      = { defs={} expr=v1056[1] }
        ?1      = { defs={} expr=v1057[1] }
        pf      = { defs={} expr=v1058[1] }
        ?3      = { defs={} expr=v1059[1] }
        af      = { defs={} expr=v1060[1] }
        ?5      = { defs={} expr=v1061[1] }
        zf      = { defs={} expr=v1062[1] }
        sf      = { defs={} expr=v1063[1] }
        tf      = { defs={} expr=v1064[1] }
        if      = { defs={} expr=v1065[1] }
        df      = { defs={} expr=v1066[1] }
        of      = { defs={} expr=v1067[1] }
        iopl0   = { defs={} expr=v1068[1] }
        iopl1   = { defs={} expr=v1069[1] }
        nt      = { defs={} expr=v1070[1] }
        ?15     = { defs={} expr=v1071[1] }
        ip      = { defs={0x0804839f} expr=0x080483a4[32] }
    memory:
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=v1072[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804839f} expr=0x080483a4[32]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    registers:
        ax      = { defs={0x0804839f} expr=v1072[32] }
        cx      = { defs={} expr=v1043[32] }
        dx      = { defs={0x080483a4} expr=v1073[32] }
        bx      = { defs={} expr=v1045[32] }
        sp      = { defs={} expr=v1046[32] }
        bp      = { defs={} expr=v1047[32] }
        si      = { defs={} expr=v1048[32] }
        di      = { defs={} expr=v1049[32] }
        es      = { defs={} expr=v1050[16] }
        cs      = { defs={} expr=v1051[16] }
        ss      = { defs={} expr=v1052[16] }
        ds      = { defs={} expr=v1053[16] }
        fs      = { defs={} expr=v1054[16] }
        gs      = { defs={} expr=v1055[16] }
        cf      = { defs={} expr=v1056[1] }
        ?1      = { defs={} expr=v1057[1] }
        pf      = { defs={} expr=v1058[1] }
        ?3      = { defs={} expr=v1059[1] }
        af      = { defs={} expr=v1060[1] }
        ?5      = { defs={} expr=v1061[1] }
        zf      = { defs={} expr=v1062[1] }
        sf      = { defs={} expr=v1063[1] }
        tf      = { defs={} expr=v1064[1] }
        if      = { defs={} expr=v1065[1] }
        df      = { defs={} expr=v1066[1] }
        of      = { defs={} expr=v1067[1] }
        iopl0   = { defs={} expr=v1068[1] }
        iopl1   = { defs={} expr=v1069[1] }
        nt      = { defs={} expr=v1070[1] }
        ?15     = { defs={} expr=v1071[1] }
        ip      = { defs={0x0804839f,0x080483a4} expr=0x080483a6[32] }
    memory:
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=v1072[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804839f} expr=v1072[32] }
          value = { defs={} expr=v1073[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804839f,0x080483a4} expr=0x080483a6[32]
0x80483a6:test   edx, edx
    registers:
        ax      = { defs={0x0804839f} expr=v1072[32] }
        cx      = { defs={} expr=v1043[32] }
        dx      = { defs={0x080483a4} expr=v1073[32] }
        bx      = { defs={} expr=v1045[32] }
        sp      = { defs={} expr=v1046[32] }
        bp      = { defs={} expr=v1047[32] }
        si      = { defs={} expr=v1048[32] }
        di      = { defs={} expr=v1049[32] }
        es      = { defs={} expr=v1050[16] }
        cs      = { defs={} expr=v1051[16] }
        ss      = { defs={} expr=v1052[16] }
        ds      = { defs={} expr=v1053[16] }
        fs      = { defs={} expr=v1054[16] }
        gs      = { defs={} expr=v1055[16] }
        cf      = { defs={0x080483a6} expr=0[1] }
        ?1      = { defs={} expr=v1057[1] }
        pf      = { defs={0x080483a4,0x080483a6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))))))) }
        ?3      = { defs={} expr=v1059[1] }
        af      = { defs={0x080483a6} expr=v1074[1] }
        ?5      = { defs={} expr=v1061[1] }
        zf      = { defs={0x080483a4,0x080483a6} expr=(zerop[1] (bv-and[32] v1073[32] v1073[32])) }
        sf      = { defs={0x080483a4,0x080483a6} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1073[32] v1073[32])) }
        tf      = { defs={} expr=v1064[1] }
        if      = { defs={} expr=v1065[1] }
        df      = { defs={} expr=v1066[1] }
        of      = { defs={0x080483a6} expr=0[1] }
        iopl0   = { defs={} expr=v1068[1] }
        iopl1   = { defs={} expr=v1069[1] }
        nt      = { defs={} expr=v1070[1] }
        ?15     = { defs={} expr=v1071[1] }
        ip      = { defs={0x0804839f,0x080483a4,0x080483a6} expr=0x080483a8[32] }
    memory:
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=v1072[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804839f} expr=v1072[32] }
          value = { defs={} expr=v1073[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804839f,0x080483a4,0x080483a6} expr=0x080483a8[32]
0x80483a8:je     0x080483c5
    registers:
        ax      = { defs={0x0804839f} expr=v1072[32] }
        cx      = { defs={} expr=v1043[32] }
        dx      = { defs={0x080483a4} expr=v1073[32] }
        bx      = { defs={} expr=v1045[32] }
        sp      = { defs={} expr=v1046[32] }
        bp      = { defs={} expr=v1047[32] }
        si      = { defs={} expr=v1048[32] }
        di      = { defs={} expr=v1049[32] }
        es      = { defs={} expr=v1050[16] }
        cs      = { defs={} expr=v1051[16] }
        ss      = { defs={} expr=v1052[16] }
        ds      = { defs={} expr=v1053[16] }
        fs      = { defs={} expr=v1054[16] }
        gs      = { defs={} expr=v1055[16] }
        cf      = { defs={0x080483a6} expr=0[1] }
        ?1      = { defs={} expr=v1057[1] }
        pf      = { defs={0x080483a4,0x080483a6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))))))) }
        ?3      = { defs={} expr=v1059[1] }
        af      = { defs={0x080483a6} expr=v1074[1] }
        ?5      = { defs={} expr=v1061[1] }
        zf      = { defs={0x080483a4,0x080483a6} expr=(zerop[1] (bv-and[32] v1073[32] v1073[32])) }
        sf      = { defs={0x080483a4,0x080483a6} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1073[32] v1073[32])) }
        tf      = { defs={} expr=v1064[1] }
        if      = { defs={} expr=v1065[1] }
        df      = { defs={} expr=v1066[1] }
        of      = { defs={0x080483a6} expr=0[1] }
        iopl0   = { defs={} expr=v1068[1] }
        iopl1   = { defs={} expr=v1069[1] }
        nt      = { defs={} expr=v1070[1] }
        ?15     = { defs={} expr=v1071[1] }
        ip      = { defs={0x0804839f,0x080483a4,0x080483a6,0x080483a8} expr=(ite[32] (zerop[1] (bv-and[32] v1073[32] v1073[32])) 0x080483c5[32] 0x080483aa[32]) }
    memory:
        address = { defs={0x0804839f} expr=0x080496f0[32] }
          value = { defs={} expr=v1072[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804839f} expr=v1072[32] }
          value = { defs={} expr=v1073[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804839f,0x080483a4,0x080483a6,0x080483a8} expr=(ite[32] (zerop[1] (bv-and[32] v1073[32] v1073[32])) 0x080483c5[32] 0x080483aa[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v1107[32] }
        cx      = { defs={} expr=v1108[32] }
        dx      = { defs={} expr=v1109[32] }
        bx      = { defs={} expr=v1110[32] }
        sp      = { defs={} expr=v1111[32] }
        bp      = { defs={} expr=v1112[32] }
        si      = { defs={0x080483aa} expr=v1113[32] }
        di      = { defs={} expr=v1114[32] }
        es      = { defs={} expr=v1115[16] }
        cs      = { defs={} expr=v1116[16] }
        ss      = { defs={} expr=v1117[16] }
        ds      = { defs={} expr=v1118[16] }
        fs      = { defs={} expr=v1119[16] }
        gs      = { defs={} expr=v1120[16] }
        cf      = { defs={} expr=v1121[1] }
        ?1      = { defs={} expr=v1122[1] }
        pf      = { defs={} expr=v1123[1] }
        ?3      = { defs={} expr=v1124[1] }
        af      = { defs={} expr=v1125[1] }
        ?5      = { defs={} expr=v1126[1] }
        zf      = { defs={} expr=v1127[1] }
        sf      = { defs={} expr=v1128[1] }
        tf      = { defs={} expr=v1129[1] }
        if      = { defs={} expr=v1130[1] }
        df      = { defs={} expr=v1131[1] }
        of      = { defs={} expr=v1132[1] }
        iopl0   = { defs={} expr=v1133[1] }
        iopl1   = { defs={} expr=v1134[1] }
        nt      = { defs={} expr=v1135[1] }
        ?15     = { defs={} expr=v1136[1] }
        ip      = { defs={0x080483aa} expr=0x080483b0[32] }
    memory:
        (empty)
    ip = defs={0x080483aa} expr=0x080483b0[32]
0x80483b0:add    eax, 0x04
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v1107[32] 4[32]) }
        cx      = { defs={} expr=v1108[32] }
        dx      = { defs={} expr=v1109[32] }
        bx      = { defs={} expr=v1110[32] }
        sp      = { defs={} expr=v1111[32] }
        bp      = { defs={} expr=v1112[32] }
        si      = { defs={0x080483aa} expr=v1113[32] }
        di      = { defs={} expr=v1114[32] }
        es      = { defs={} expr=v1115[16] }
        cs      = { defs={} expr=v1116[16] }
        ss      = { defs={} expr=v1117[16] }
        ds      = { defs={} expr=v1118[16] }
        fs      = { defs={} expr=v1119[16] }
        gs      = { defs={} expr=v1120[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) }
        ?1      = { defs={} expr=v1122[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))))) }
        ?3      = { defs={} expr=v1124[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) }
        ?5      = { defs={} expr=v1126[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v1107[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v1107[32] 4[32])) }
        tf      = { defs={} expr=v1129[1] }
        if      = { defs={} expr=v1130[1] }
        df      = { defs={} expr=v1131[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v1133[1] }
        iopl1   = { defs={} expr=v1134[1] }
        nt      = { defs={} expr=v1135[1] }
        ?15     = { defs={} expr=v1136[1] }
        ip      = { defs={0x080483aa,0x080483b0} expr=0x080483b3[32] }
    memory:
        (empty)
    ip = defs={0x080483aa,0x080483b0} expr=0x080483b3[32]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v1107[32] 4[32]) }
        cx      = { defs={} expr=v1108[32] }
        dx      = { defs={} expr=v1109[32] }
        bx      = { defs={} expr=v1110[32] }
        sp      = { defs={} expr=v1111[32] }
        bp      = { defs={} expr=v1112[32] }
        si      = { defs={0x080483aa} expr=v1113[32] }
        di      = { defs={} expr=v1114[32] }
        es      = { defs={} expr=v1115[16] }
        cs      = { defs={} expr=v1116[16] }
        ss      = { defs={} expr=v1117[16] }
        ds      = { defs={} expr=v1118[16] }
        fs      = { defs={} expr=v1119[16] }
        gs      = { defs={} expr=v1120[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) }
        ?1      = { defs={} expr=v1122[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))))) }
        ?3      = { defs={} expr=v1124[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) }
        ?5      = { defs={} expr=v1126[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v1107[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v1107[32] 4[32])) }
        tf      = { defs={} expr=v1129[1] }
        if      = { defs={} expr=v1130[1] }
        df      = { defs={} expr=v1131[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v1133[1] }
        iopl1   = { defs={} expr=v1134[1] }
        nt      = { defs={} expr=v1135[1] }
        ?15     = { defs={} expr=v1136[1] }
        ip      = { defs={0x080483aa,0x080483b0,0x080483b3} expr=0x080483b8[32] }
    memory:
        address = { defs={0x080483b3} expr=0x080496f0[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(add[32] v1107[32] 4[32]) }
          flags = { size=4 }
    ip = defs={0x080483aa,0x080483b0,0x080483b3} expr=0x080483b8[32]
0x80483b8:call   edx
    registers:
        ax      = { defs={0x080483b0} expr=(add[32] v1107[32] 4[32]) }
        cx      = { defs={} expr=v1108[32] }
        dx      = { defs={} expr=v1109[32] }
        bx      = { defs={} expr=v1110[32] }
        sp      = { defs={0x080483b8} expr=(add[32] v1111[32] -4[32]) }
        bp      = { defs={} expr=v1112[32] }
        si      = { defs={0x080483aa} expr=v1113[32] }
        di      = { defs={} expr=v1114[32] }
        es      = { defs={} expr=v1115[16] }
        cs      = { defs={} expr=v1116[16] }
        ss      = { defs={} expr=v1117[16] }
        ds      = { defs={} expr=v1118[16] }
        fs      = { defs={} expr=v1119[16] }
        gs      = { defs={} expr=v1120[16] }
        cf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) }
        ?1      = { defs={} expr=v1122[1] }
        pf      = { defs={0x080483b0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))))) }
        ?3      = { defs={} expr=v1124[1] }
        af      = { defs={0x080483b0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) }
        ?5      = { defs={} expr=v1126[1] }
        zf      = { defs={0x080483b0} expr=(zerop[1] (add[32] v1107[32] 4[32])) }
        sf      = { defs={0x080483b0} expr=(extract[1] 31[32] 32[32] (add[32] v1107[32] 4[32])) }
        tf      = { defs={} expr=v1129[1] }
        if      = { defs={} expr=v1130[1] }
        df      = { defs={} expr=v1131[1] }
        of      = { defs={0x080483b0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))) }
        iopl0   = { defs={} expr=v1133[1] }
        iopl1   = { defs={} expr=v1134[1] }
        nt      = { defs={} expr=v1135[1] }
        ?15     = { defs={} expr=v1136[1] }
        ip      = { defs={0x080483b8} expr=v1109[32] }
    memory:
        address = { defs={0x080483b3} expr=0x080496f0[32] }
          value = { defs={0x080483b0,0x080483b3} expr=(add[32] v1107[32] 4[32]) }
          flags = { size=4; clobbered }
        address = { defs={0x080483b8} expr=(add[32] v1111[32] -4[32]) }
          value = { defs={0x080483aa,0x080483b0,0x080483b3,0x080483b8} expr=0x080483ba[32] }
          flags = { size=4 }
    ip = defs={0x080483b8} expr=v1109[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    registers:
        ax      = { defs={0x080483ba} expr=v1199[32] }
        cx      = { defs={} expr=v1170[32] }
        dx      = { defs={} expr=v1171[32] }
        bx      = { defs={} expr=v1172[32] }
        sp      = { defs={} expr=v1173[32] }
        bp      = { defs={} expr=v1174[32] }
        si      = { defs={} expr=v1175[32] }
        di      = { defs={} expr=v1176[32] }
        es      = { defs={} expr=v1177[16] }
        cs      = { defs={} expr=v1178[16] }
        ss      = { defs={} expr=v1179[16] }
        ds      = { defs={} expr=v1180[16] }
        fs      = { defs={} expr=v1181[16] }
        gs      = { defs={} expr=v1182[16] }
        cf      = { defs={} expr=v1183[1] }
        ?1      = { defs={} expr=v1184[1] }
        pf      = { defs={} expr=v1185[1] }
        ?3      = { defs={} expr=v1186[1] }
        af      = { defs={} expr=v1187[1] }
        ?5      = { defs={} expr=v1188[1] }
        zf      = { defs={} expr=v1189[1] }
        sf      = { defs={} expr=v1190[1] }
        tf      = { defs={} expr=v1191[1] }
        if      = { defs={} expr=v1192[1] }
        df      = { defs={} expr=v1193[1] }
        of      = { defs={} expr=v1194[1] }
        iopl0   = { defs={} expr=v1195[1] }
        iopl1   = { defs={} expr=v1196[1] }
        nt      = { defs={} expr=v1197[1] }
        ?15     = { defs={} expr=v1198[1] }
        ip      = { defs={0x080483ba} expr=0x080483bf[32] }
    memory:
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=v1199[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483ba} expr=0x080483bf[32]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    registers:
        ax      = { defs={0x080483ba} expr=v1199[32] }
        cx      = { defs={} expr=v1170[32] }
        dx      = { defs={0x080483bf} expr=v1200[32] }
        bx      = { defs={} expr=v1172[32] }
        sp      = { defs={} expr=v1173[32] }
        bp      = { defs={} expr=v1174[32] }
        si      = { defs={} expr=v1175[32] }
        di      = { defs={} expr=v1176[32] }
        es      = { defs={} expr=v1177[16] }
        cs      = { defs={} expr=v1178[16] }
        ss      = { defs={} expr=v1179[16] }
        ds      = { defs={} expr=v1180[16] }
        fs      = { defs={} expr=v1181[16] }
        gs      = { defs={} expr=v1182[16] }
        cf      = { defs={} expr=v1183[1] }
        ?1      = { defs={} expr=v1184[1] }
        pf      = { defs={} expr=v1185[1] }
        ?3      = { defs={} expr=v1186[1] }
        af      = { defs={} expr=v1187[1] }
        ?5      = { defs={} expr=v1188[1] }
        zf      = { defs={} expr=v1189[1] }
        sf      = { defs={} expr=v1190[1] }
        tf      = { defs={} expr=v1191[1] }
        if      = { defs={} expr=v1192[1] }
        df      = { defs={} expr=v1193[1] }
        of      = { defs={} expr=v1194[1] }
        iopl0   = { defs={} expr=v1195[1] }
        iopl1   = { defs={} expr=v1196[1] }
        nt      = { defs={} expr=v1197[1] }
        ?15     = { defs={} expr=v1198[1] }
        ip      = { defs={0x080483ba,0x080483bf} expr=0x080483c1[32] }
    memory:
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=v1199[32] }
          flags = { size=4; read-only }
        address = { defs={0x080483ba} expr=v1199[32] }
          value = { defs={} expr=v1200[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483ba,0x080483bf} expr=0x080483c1[32]
0x80483c1:test   edx, edx
    registers:
        ax      = { defs={0x080483ba} expr=v1199[32] }
        cx      = { defs={} expr=v1170[32] }
        dx      = { defs={0x080483bf} expr=v1200[32] }
        bx      = { defs={} expr=v1172[32] }
        sp      = { defs={} expr=v1173[32] }
        bp      = { defs={} expr=v1174[32] }
        si      = { defs={} expr=v1175[32] }
        di      = { defs={} expr=v1176[32] }
        es      = { defs={} expr=v1177[16] }
        cs      = { defs={} expr=v1178[16] }
        ss      = { defs={} expr=v1179[16] }
        ds      = { defs={} expr=v1180[16] }
        fs      = { defs={} expr=v1181[16] }
        gs      = { defs={} expr=v1182[16] }
        cf      = { defs={0x080483c1} expr=0[1] }
        ?1      = { defs={} expr=v1184[1] }
        pf      = { defs={0x080483bf,0x080483c1} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))))))) }
        ?3      = { defs={} expr=v1186[1] }
        af      = { defs={0x080483c1} expr=v1201[1] }
        ?5      = { defs={} expr=v1188[1] }
        zf      = { defs={0x080483bf,0x080483c1} expr=(zerop[1] (bv-and[32] v1200[32] v1200[32])) }
        sf      = { defs={0x080483bf,0x080483c1} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1200[32] v1200[32])) }
        tf      = { defs={} expr=v1191[1] }
        if      = { defs={} expr=v1192[1] }
        df      = { defs={} expr=v1193[1] }
        of      = { defs={0x080483c1} expr=0[1] }
        iopl0   = { defs={} expr=v1195[1] }
        iopl1   = { defs={} expr=v1196[1] }
        nt      = { defs={} expr=v1197[1] }
        ?15     = { defs={} expr=v1198[1] }
        ip      = { defs={0x080483ba,0x080483bf,0x080483c1} expr=0x080483c3[32] }
    memory:
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=v1199[32] }
          flags = { size=4; read-only }
        address = { defs={0x080483ba} expr=v1199[32] }
          value = { defs={} expr=v1200[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483ba,0x080483bf,0x080483c1} expr=0x080483c3[32]
0x80483c3:jne    0x080483b0
    registers:
        ax      = { defs={0x080483ba} expr=v1199[32] }
        cx      = { defs={} expr=v1170[32] }
        dx      = { defs={0x080483bf} expr=v1200[32] }
        bx      = { defs={} expr=v1172[32] }
        sp      = { defs={} expr=v1173[32] }
        bp      = { defs={} expr=v1174[32] }
        si      = { defs={} expr=v1175[32] }
        di      = { defs={} expr=v1176[32] }
        es      = { defs={} expr=v1177[16] }
        cs      = { defs={} expr=v1178[16] }
        ss      = { defs={} expr=v1179[16] }
        ds      = { defs={} expr=v1180[16] }
        fs      = { defs={} expr=v1181[16] }
        gs      = { defs={} expr=v1182[16] }
        cf      = { defs={0x080483c1} expr=0[1] }
        ?1      = { defs={} expr=v1184[1] }
        pf      = { defs={0x080483bf,0x080483c1} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))))))) }
        ?3      = { defs={} expr=v1186[1] }
        af      = { defs={0x080483c1} expr=v1201[1] }
        ?5      = { defs={} expr=v1188[1] }
        zf      = { defs={0x080483bf,0x080483c1} expr=(zerop[1] (bv-and[32] v1200[32] v1200[32])) }
        sf      = { defs={0x080483bf,0x080483c1} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1200[32] v1200[32])) }
        tf      = { defs={} expr=v1191[1] }
        if      = { defs={} expr=v1192[1] }
        df      = { defs={} expr=v1193[1] }
        of      = { defs={0x080483c1} expr=0[1] }
        iopl0   = { defs={} expr=v1195[1] }
        iopl1   = { defs={} expr=v1196[1] }
        nt      = { defs={} expr=v1197[1] }
        ?15     = { defs={} expr=v1198[1] }
        ip      = { defs={0x080483ba,0x080483bf,0x080483c1,0x080483c3} expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v1200[32] v1200[32]))) 0x080483b0[32] 0x080483c5[32]) }
    memory:
        address = { defs={0x080483ba} expr=0x080496f0[32] }
          value = { defs={} expr=v1199[32] }
          flags = { size=4; read-only }
        address = { defs={0x080483ba} expr=v1199[32] }
          value = { defs={} expr=v1200[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483ba,0x080483bf,0x080483c1,0x080483c3} expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v1200[32] v1200[32]))) 0x080483b0[32] 0x080483c5[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    registers:
        ax      = { defs={} expr=v1234[32] }
        cx      = { defs={} expr=v1235[32] }
        dx      = { defs={} expr=v1236[32] }
        bx      = { defs={} expr=v1237[32] }
        sp      = { defs={} expr=v1238[32] }
        bp      = { defs={} expr=v1239[32] }
        si      = { defs={} expr=v1240[32] }
        di      = { defs={} expr=v1241[32] }
        es      = { defs={} expr=v1242[16] }
        cs      = { defs={} expr=v1243[16] }
        ss      = { defs={} expr=v1244[16] }
        ds      = { defs={} expr=v1245[16] }
        fs      = { defs={} expr=v1246[16] }
        gs      = { defs={} expr=v1247[16] }
        cf      = { defs={} expr=v1248[1] }
        ?1      = { defs={} expr=v1249[1] }
        pf      = { defs={} expr=v1250[1] }
        ?3      = { defs={} expr=v1251[1] }
        af      = { defs={} expr=v1252[1] }
        ?5      = { defs={} expr=v1253[1] }
        zf      = { defs={} expr=v1254[1] }
        sf      = { defs={} expr=v1255[1] }
        tf      = { defs={} expr=v1256[1] }
        if      = { defs={} expr=v1257[1] }
        df      = { defs={} expr=v1258[1] }
        of      = { defs={} expr=v1259[1] }
        iopl0   = { defs={} expr=v1260[1] }
        iopl1   = { defs={} expr=v1261[1] }
        nt      = { defs={} expr=v1262[1] }
        ?15     = { defs={} expr=v1263[1] }
        ip      = { defs={0x080483c5} expr=0x080483cc[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[32] }
          flags = { size=1 }
    ip = defs={0x080483c5} expr=0x080483cc[32]
0x80483cc:leave  
    registers:
        ax      = { defs={} expr=v1234[32] }
        cx      = { defs={} expr=v1235[32] }
        dx      = { defs={} expr=v1236[32] }
        bx      = { defs={} expr=v1237[32] }
        sp      = { defs={0x080483cc} expr=(add[32] v1239[32] 4[32]) }
        bp      = { defs={0x080483cc} expr=v1264[32] }
        si      = { defs={} expr=v1240[32] }
        di      = { defs={} expr=v1241[32] }
        es      = { defs={} expr=v1242[16] }
        cs      = { defs={} expr=v1243[16] }
        ss      = { defs={} expr=v1244[16] }
        ds      = { defs={} expr=v1245[16] }
        fs      = { defs={} expr=v1246[16] }
        gs      = { defs={} expr=v1247[16] }
        cf      = { defs={} expr=v1248[1] }
        ?1      = { defs={} expr=v1249[1] }
        pf      = { defs={} expr=v1250[1] }
        ?3      = { defs={} expr=v1251[1] }
        af      = { defs={} expr=v1252[1] }
        ?5      = { defs={} expr=v1253[1] }
        zf      = { defs={} expr=v1254[1] }
        sf      = { defs={} expr=v1255[1] }
        tf      = { defs={} expr=v1256[1] }
        if      = { defs={} expr=v1257[1] }
        df      = { defs={} expr=v1258[1] }
        of      = { defs={} expr=v1259[1] }
        iopl0   = { defs={} expr=v1260[1] }
        iopl1   = { defs={} expr=v1261[1] }
        nt      = { defs={} expr=v1262[1] }
        ?15     = { defs={} expr=v1263[1] }
        ip      = { defs={0x080483c5,0x080483cc} expr=0x080483cd[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[32] }
          flags = { size=1 }
        address = { defs={0x080483cc} expr=v1239[32] }
          value = { defs={} expr=v1264[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483c5,0x080483cc} expr=0x080483cd[32]
0x80483cd:ret    
    registers:
        ax      = { defs={} expr=v1234[32] }
        cx      = { defs={} expr=v1235[32] }
        dx      = { defs={} expr=v1236[32] }
        bx      = { defs={} expr=v1237[32] }
        sp      = { defs={0x080483cc,0x080483cd} expr=(add[32] (add[32] v1239[32] 4[32]) 4[32]) }
        bp      = { defs={0x080483cc} expr=v1264[32] }
        si      = { defs={} expr=v1240[32] }
        di      = { defs={} expr=v1241[32] }
        es      = { defs={} expr=v1242[16] }
        cs      = { defs={} expr=v1243[16] }
        ss      = { defs={} expr=v1244[16] }
        ds      = { defs={} expr=v1245[16] }
        fs      = { defs={} expr=v1246[16] }
        gs      = { defs={} expr=v1247[16] }
        cf      = { defs={} expr=v1248[1] }
        ?1      = { defs={} expr=v1249[1] }
        pf      = { defs={} expr=v1250[1] }
        ?3      = { defs={} expr=v1251[1] }
        af      = { defs={} expr=v1252[1] }
        ?5      = { defs={} expr=v1253[1] }
        zf      = { defs={} expr=v1254[1] }
        sf      = { defs={} expr=v1255[1] }
        tf      = { defs={} expr=v1256[1] }
        if      = { defs={} expr=v1257[1] }
        df      = { defs={} expr=v1258[1] }
        of      = { defs={} expr=v1259[1] }
        iopl0   = { defs={} expr=v1260[1] }
        iopl1   = { defs={} expr=v1261[1] }
        nt      = { defs={} expr=v1262[1] }
        ?15     = { defs={} expr=v1263[1] }
        ip      = { defs={0x080483cd} expr=v1265[32] }
    memory:
        address = { defs={0x080483c5} expr=0x080496f4[32] }
          value = { defs={0x080483c5} expr=1[32] }
          flags = { size=1 }
        address = { defs={0x080483cc} expr=v1239[32] }
          value = { defs={} expr=v1264[32] }
          flags = { size=4; read-only }
        address = { defs={0x080483cc} expr=(add[32] v1239[32] 4[32]) }
          value = { defs={} expr=v1265[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483cd} expr=v1265[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    registers:
        ax      = { defs={} expr=v1298[32] }
        cx      = { defs={} expr=v1299[32] }
        dx      = { defs={} expr=v1300[32] }
        bx      = { defs={} expr=v1301[32] }
        sp      = { defs={0x080483d0} expr=(add[32] v1302[32] -4[32]) }
        bp      = { defs={} expr=v1303[32] }
        si      = { defs={} expr=v1304[32] }
        di      = { defs={} expr=v1305[32] }
        es      = { defs={} expr=v1306[16] }
        cs      = { defs={} expr=v1307[16] }
        ss      = { defs={} expr=v1308[16] }
        ds      = { defs={} expr=v1309[16] }
        fs      = { defs={} expr=v1310[16] }
        gs      = { defs={} expr=v1311[16] }
        cf      = { defs={} expr=v1312[1] }
        ?1      = { defs={} expr=v1313[1] }
        pf      = { defs={} expr=v1314[1] }
        ?3      = { defs={} expr=v1315[1] }
        af      = { defs={} expr=v1316[1] }
        ?5      = { defs={} expr=v1317[1] }
        zf      = { defs={} expr=v1318[1] }
        sf      = { defs={} expr=v1319[1] }
        tf      = { defs={} expr=v1320[1] }
        if      = { defs={} expr=v1321[1] }
        df      = { defs={} expr=v1322[1] }
        of      = { defs={} expr=v1323[1] }
        iopl0   = { defs={} expr=v1324[1] }
        iopl1   = { defs={} expr=v1325[1] }
        nt      = { defs={} expr=v1326[1] }
        ?15     = { defs={} expr=v1327[1] }
        ip      = { defs={0x080483d0} expr=0x080483d1[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1302[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1303[32] }
          flags = { size=4 }
    ip = defs={0x080483d0} expr=0x080483d1[32]
0x80483d1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1298[32] }
        cx      = { defs={} expr=v1299[32] }
        dx      = { defs={} expr=v1300[32] }
        bx      = { defs={} expr=v1301[32] }
        sp      = { defs={0x080483d0} expr=(add[32] v1302[32] -4[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1302[32] -4[32]) }
        si      = { defs={} expr=v1304[32] }
        di      = { defs={} expr=v1305[32] }
        es      = { defs={} expr=v1306[16] }
        cs      = { defs={} expr=v1307[16] }
        ss      = { defs={} expr=v1308[16] }
        ds      = { defs={} expr=v1309[16] }
        fs      = { defs={} expr=v1310[16] }
        gs      = { defs={} expr=v1311[16] }
        cf      = { defs={} expr=v1312[1] }
        ?1      = { defs={} expr=v1313[1] }
        pf      = { defs={} expr=v1314[1] }
        ?3      = { defs={} expr=v1315[1] }
        af      = { defs={} expr=v1316[1] }
        ?5      = { defs={} expr=v1317[1] }
        zf      = { defs={} expr=v1318[1] }
        sf      = { defs={} expr=v1319[1] }
        tf      = { defs={} expr=v1320[1] }
        if      = { defs={} expr=v1321[1] }
        df      = { defs={} expr=v1322[1] }
        of      = { defs={} expr=v1323[1] }
        iopl0   = { defs={} expr=v1324[1] }
        iopl1   = { defs={} expr=v1325[1] }
        nt      = { defs={} expr=v1326[1] }
        ?15     = { defs={} expr=v1327[1] }
        ip      = { defs={0x080483d0,0x080483d1} expr=0x080483d3[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1302[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1303[32] }
          flags = { size=4 }
    ip = defs={0x080483d0,0x080483d1} expr=0x080483d3[32]
0x80483d3:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v1298[32] }
        cx      = { defs={} expr=v1299[32] }
        dx      = { defs={} expr=v1300[32] }
        bx      = { defs={} expr=v1301[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v1302[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1302[32] -4[32]) }
        si      = { defs={} expr=v1304[32] }
        di      = { defs={} expr=v1305[32] }
        es      = { defs={} expr=v1306[16] }
        cs      = { defs={} expr=v1307[16] }
        ss      = { defs={} expr=v1308[16] }
        ds      = { defs={} expr=v1309[16] }
        fs      = { defs={} expr=v1310[16] }
        gs      = { defs={} expr=v1311[16] }
        cf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1313[1] }
        pf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1315[1] }
        af      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1317[1] }
        zf      = { defs={0x080483d0,0x080483d3} expr=(zerop[1] (add[32] (add[32] v1302[32] -4[32]) -8[32])) }
        sf      = { defs={0x080483d0,0x080483d3} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1320[1] }
        if      = { defs={} expr=v1321[1] }
        df      = { defs={} expr=v1322[1] }
        of      = { defs={0x080483d0,0x080483d3} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1324[1] }
        iopl1   = { defs={} expr=v1325[1] }
        nt      = { defs={} expr=v1326[1] }
        ?15     = { defs={} expr=v1327[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3} expr=0x080483d6[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1302[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1303[32] }
          flags = { size=4 }
    ip = defs={0x080483d0,0x080483d1,0x080483d3} expr=0x080483d6[32]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    registers:
        ax      = { defs={0x080483d6} expr=v1328[32] }
        cx      = { defs={} expr=v1299[32] }
        dx      = { defs={} expr=v1300[32] }
        bx      = { defs={} expr=v1301[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v1302[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1302[32] -4[32]) }
        si      = { defs={} expr=v1304[32] }
        di      = { defs={} expr=v1305[32] }
        es      = { defs={} expr=v1306[16] }
        cs      = { defs={} expr=v1307[16] }
        ss      = { defs={} expr=v1308[16] }
        ds      = { defs={} expr=v1309[16] }
        fs      = { defs={} expr=v1310[16] }
        gs      = { defs={} expr=v1311[16] }
        cf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1313[1] }
        pf      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1315[1] }
        af      = { defs={0x080483d0,0x080483d3} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1317[1] }
        zf      = { defs={0x080483d0,0x080483d3} expr=(zerop[1] (add[32] (add[32] v1302[32] -4[32]) -8[32])) }
        sf      = { defs={0x080483d0,0x080483d3} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1320[1] }
        if      = { defs={} expr=v1321[1] }
        df      = { defs={} expr=v1322[1] }
        of      = { defs={0x080483d0,0x080483d3} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1324[1] }
        iopl1   = { defs={} expr=v1325[1] }
        nt      = { defs={} expr=v1326[1] }
        ?15     = { defs={} expr=v1327[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6} expr=0x080483db[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1302[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1303[32] }
          flags = { size=4 }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=v1328[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6} expr=0x080483db[32]
0x80483db:test   eax, eax
    registers:
        ax      = { defs={0x080483d6} expr=v1328[32] }
        cx      = { defs={} expr=v1299[32] }
        dx      = { defs={} expr=v1300[32] }
        bx      = { defs={} expr=v1301[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v1302[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1302[32] -4[32]) }
        si      = { defs={} expr=v1304[32] }
        di      = { defs={} expr=v1305[32] }
        es      = { defs={} expr=v1306[16] }
        cs      = { defs={} expr=v1307[16] }
        ss      = { defs={} expr=v1308[16] }
        ds      = { defs={} expr=v1309[16] }
        fs      = { defs={} expr=v1310[16] }
        gs      = { defs={} expr=v1311[16] }
        cf      = { defs={0x080483db} expr=0[1] }
        ?1      = { defs={} expr=v1313[1] }
        pf      = { defs={0x080483d6,0x080483db} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))))))) }
        ?3      = { defs={} expr=v1315[1] }
        af      = { defs={0x080483db} expr=v1329[1] }
        ?5      = { defs={} expr=v1317[1] }
        zf      = { defs={0x080483d6,0x080483db} expr=(zerop[1] (bv-and[32] v1328[32] v1328[32])) }
        sf      = { defs={0x080483d6,0x080483db} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1328[32] v1328[32])) }
        tf      = { defs={} expr=v1320[1] }
        if      = { defs={} expr=v1321[1] }
        df      = { defs={} expr=v1322[1] }
        of      = { defs={0x080483db} expr=0[1] }
        iopl0   = { defs={} expr=v1324[1] }
        iopl1   = { defs={} expr=v1325[1] }
        nt      = { defs={} expr=v1326[1] }
        ?15     = { defs={} expr=v1327[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db} expr=0x080483dd[32] }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1302[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1303[32] }
          flags = { size=4 }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=v1328[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db} expr=0x080483dd[32]
0x80483dd:je     0x08048400
    registers:
        ax      = { defs={0x080483d6} expr=v1328[32] }
        cx      = { defs={} expr=v1299[32] }
        dx      = { defs={} expr=v1300[32] }
        bx      = { defs={} expr=v1301[32] }
        sp      = { defs={0x080483d0,0x080483d3} expr=(add[32] (add[32] v1302[32] -4[32]) -8[32]) }
        bp      = { defs={0x080483d0,0x080483d1} expr=(add[32] v1302[32] -4[32]) }
        si      = { defs={} expr=v1304[32] }
        di      = { defs={} expr=v1305[32] }
        es      = { defs={} expr=v1306[16] }
        cs      = { defs={} expr=v1307[16] }
        ss      = { defs={} expr=v1308[16] }
        ds      = { defs={} expr=v1309[16] }
        fs      = { defs={} expr=v1310[16] }
        gs      = { defs={} expr=v1311[16] }
        cf      = { defs={0x080483db} expr=0[1] }
        ?1      = { defs={} expr=v1313[1] }
        pf      = { defs={0x080483d6,0x080483db} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))))))) }
        ?3      = { defs={} expr=v1315[1] }
        af      = { defs={0x080483db} expr=v1329[1] }
        ?5      = { defs={} expr=v1317[1] }
        zf      = { defs={0x080483d6,0x080483db} expr=(zerop[1] (bv-and[32] v1328[32] v1328[32])) }
        sf      = { defs={0x080483d6,0x080483db} expr=(extract[1] 31[32] 32[32] (bv-and[32] v1328[32] v1328[32])) }
        tf      = { defs={} expr=v1320[1] }
        if      = { defs={} expr=v1321[1] }
        df      = { defs={} expr=v1322[1] }
        of      = { defs={0x080483db} expr=0[1] }
        iopl0   = { defs={} expr=v1324[1] }
        iopl1   = { defs={} expr=v1325[1] }
        nt      = { defs={} expr=v1326[1] }
        ?15     = { defs={} expr=v1327[1] }
        ip      = { defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db,0x080483dd} expr=(ite[32] (zerop[1] (bv-and[32] v1328[32] v1328[32])) 0x08048400[32] 0x080483df[32]) }
    memory:
        address = { defs={0x080483d0} expr=(add[32] v1302[32] -4[32]) }
          value = { defs={0x080483d0} expr=v1303[32] }
          flags = { size=4 }
        address = { defs={0x080483d6} expr=0x080495f8[32] }
          value = { defs={} expr=v1328[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483d0,0x080483d1,0x080483d3,0x080483d6,0x080483db,0x080483dd} expr=(ite[32] (zerop[1] (bv-and[32] v1328[32] v1328[32])) 0x08048400[32] 0x080483df[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v1363[32] }
        dx      = { defs={} expr=v1364[32] }
        bx      = { defs={} expr=v1365[32] }
        sp      = { defs={} expr=v1366[32] }
        bp      = { defs={} expr=v1367[32] }
        si      = { defs={} expr=v1368[32] }
        di      = { defs={} expr=v1369[32] }
        es      = { defs={} expr=v1370[16] }
        cs      = { defs={} expr=v1371[16] }
        ss      = { defs={} expr=v1372[16] }
        ds      = { defs={} expr=v1373[16] }
        fs      = { defs={} expr=v1374[16] }
        gs      = { defs={} expr=v1375[16] }
        cf      = { defs={} expr=v1376[1] }
        ?1      = { defs={} expr=v1377[1] }
        pf      = { defs={} expr=v1378[1] }
        ?3      = { defs={} expr=v1379[1] }
        af      = { defs={} expr=v1380[1] }
        ?5      = { defs={} expr=v1381[1] }
        zf      = { defs={} expr=v1382[1] }
        sf      = { defs={} expr=v1383[1] }
        tf      = { defs={} expr=v1384[1] }
        if      = { defs={} expr=v1385[1] }
        df      = { defs={} expr=v1386[1] }
        of      = { defs={} expr=v1387[1] }
        iopl0   = { defs={} expr=v1388[1] }
        iopl1   = { defs={} expr=v1389[1] }
        nt      = { defs={} expr=v1390[1] }
        ?15     = { defs={} expr=v1391[1] }
        ip      = { defs={0x080483df} expr=0x080483e4[32] }
    memory:
        (empty)
    ip = defs={0x080483df} expr=0x080483e4[32]
0x80483e4:test   eax, eax
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v1363[32] }
        dx      = { defs={} expr=v1364[32] }
        bx      = { defs={} expr=v1365[32] }
        sp      = { defs={} expr=v1366[32] }
        bp      = { defs={} expr=v1367[32] }
        si      = { defs={} expr=v1368[32] }
        di      = { defs={} expr=v1369[32] }
        es      = { defs={} expr=v1370[16] }
        cs      = { defs={} expr=v1371[16] }
        ss      = { defs={} expr=v1372[16] }
        ds      = { defs={} expr=v1373[16] }
        fs      = { defs={} expr=v1374[16] }
        gs      = { defs={} expr=v1375[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v1377[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v1379[1] }
        af      = { defs={0x080483e4} expr=v1392[1] }
        ?5      = { defs={} expr=v1381[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v1384[1] }
        if      = { defs={} expr=v1385[1] }
        df      = { defs={} expr=v1386[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v1388[1] }
        iopl1   = { defs={} expr=v1389[1] }
        nt      = { defs={} expr=v1390[1] }
        ?15     = { defs={} expr=v1391[1] }
        ip      = { defs={0x080483df,0x080483e4} expr=0x080483e6[32] }
    memory:
        (empty)
    ip = defs={0x080483df,0x080483e4} expr=0x080483e6[32]
0x80483e6:je     0x08048400
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v1363[32] }
        dx      = { defs={} expr=v1364[32] }
        bx      = { defs={} expr=v1365[32] }
        sp      = { defs={} expr=v1366[32] }
        bp      = { defs={} expr=v1367[32] }
        si      = { defs={} expr=v1368[32] }
        di      = { defs={} expr=v1369[32] }
        es      = { defs={} expr=v1370[16] }
        cs      = { defs={} expr=v1371[16] }
        ss      = { defs={} expr=v1372[16] }
        ds      = { defs={} expr=v1373[16] }
        fs      = { defs={} expr=v1374[16] }
        gs      = { defs={} expr=v1375[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v1377[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v1379[1] }
        af      = { defs={0x080483e4} expr=v1392[1] }
        ?5      = { defs={} expr=v1381[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v1384[1] }
        if      = { defs={} expr=v1385[1] }
        df      = { defs={} expr=v1386[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v1388[1] }
        iopl1   = { defs={} expr=v1389[1] }
        nt      = { defs={} expr=v1390[1] }
        ?15     = { defs={} expr=v1391[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6} expr=0x08048400[32] }
    memory:
        (empty)
    ip = defs={0x080483df,0x080483e4,0x080483e6} expr=0x08048400[32]
0x8048400:mov    esp, ebp
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v1363[32] }
        dx      = { defs={} expr=v1364[32] }
        bx      = { defs={} expr=v1365[32] }
        sp      = { defs={0x08048400} expr=v1367[32] }
        bp      = { defs={} expr=v1367[32] }
        si      = { defs={} expr=v1368[32] }
        di      = { defs={} expr=v1369[32] }
        es      = { defs={} expr=v1370[16] }
        cs      = { defs={} expr=v1371[16] }
        ss      = { defs={} expr=v1372[16] }
        ds      = { defs={} expr=v1373[16] }
        fs      = { defs={} expr=v1374[16] }
        gs      = { defs={} expr=v1375[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v1377[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v1379[1] }
        af      = { defs={0x080483e4} expr=v1392[1] }
        ?5      = { defs={} expr=v1381[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v1384[1] }
        if      = { defs={} expr=v1385[1] }
        df      = { defs={} expr=v1386[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v1388[1] }
        iopl1   = { defs={} expr=v1389[1] }
        nt      = { defs={} expr=v1390[1] }
        ?15     = { defs={} expr=v1391[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6,0x08048400} expr=0x08048402[32] }
    memory:
        (empty)
    ip = defs={0x080483df,0x080483e4,0x080483e6,0x08048400} expr=0x08048402[32]
0x8048402:pop    ebp
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v1363[32] }
        dx      = { defs={} expr=v1364[32] }
        bx      = { defs={} expr=v1365[32] }
        sp      = { defs={0x08048400,0x08048402} expr=(add[32] v1367[32] 4[32]) }
        bp      = { defs={0x08048402} expr=v1393[32] }
        si      = { defs={} expr=v1368[32] }
        di      = { defs={} expr=v1369[32] }
        es      = { defs={} expr=v1370[16] }
        cs      = { defs={} expr=v1371[16] }
        ss      = { defs={} expr=v1372[16] }
        ds      = { defs={} expr=v1373[16] }
        fs      = { defs={} expr=v1374[16] }
        gs      = { defs={} expr=v1375[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v1377[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v1379[1] }
        af      = { defs={0x080483e4} expr=v1392[1] }
        ?5      = { defs={} expr=v1381[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v1384[1] }
        if      = { defs={} expr=v1385[1] }
        df      = { defs={} expr=v1386[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v1388[1] }
        iopl1   = { defs={} expr=v1389[1] }
        nt      = { defs={} expr=v1390[1] }
        ?15     = { defs={} expr=v1391[1] }
        ip      = { defs={0x080483df,0x080483e4,0x080483e6,0x08048400,0x08048402} expr=0x08048403[32] }
    memory:
        address = { defs={0x08048400} expr=v1367[32] }
          value = { defs={} expr=v1393[32] }
          flags = { size=4; read-only }
    ip = defs={0x080483df,0x080483e4,0x080483e6,0x08048400,0x08048402} expr=0x08048403[32]
0x8048403:ret    
    registers:
        ax      = { defs={0x080483df} expr=0[32] }
        cx      = { defs={} expr=v1363[32] }
        dx      = { defs={} expr=v1364[32] }
        bx      = { defs={} expr=v1365[32] }
        sp      = { defs={0x08048400,0x08048402,0x08048403} expr=(add[32] (add[32] v1367[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048402} expr=v1393[32] }
        si      = { defs={} expr=v1368[32] }
        di      = { defs={} expr=v1369[32] }
        es      = { defs={} expr=v1370[16] }
        cs      = { defs={} expr=v1371[16] }
        ss      = { defs={} expr=v1372[16] }
        ds      = { defs={} expr=v1373[16] }
        fs      = { defs={} expr=v1374[16] }
        gs      = { defs={} expr=v1375[16] }
        cf      = { defs={0x080483e4} expr=0[1] }
        ?1      = { defs={} expr=v1377[1] }
        pf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        ?3      = { defs={} expr=v1379[1] }
        af      = { defs={0x080483e4} expr=v1392[1] }
        ?5      = { defs={} expr=v1381[1] }
        zf      = { defs={0x080483df,0x080483e4} expr=1[1] }
        sf      = { defs={0x080483df,0x080483e4} expr=0[1] }
        tf      = { defs={} expr=v1384[1] }
        if      = { defs={} expr=v1385[1] }
        df      = { defs={} expr=v1386[1] }
        of      = { defs={0x080483e4} expr=0[1] }
        iopl0   = { defs={} expr=v1388[1] }
        iopl1   = { defs={} expr=v1389[1] }
        nt      = { defs={} expr=v1390[1] }
        ?15     = { defs={} expr=v1391[1] }
        ip      = { defs={0x08048403} expr=v1394[32] }
    memory:
        address = { defs={0x08048400} expr=v1367[32] }
          value = { defs={} expr=v1393[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048400,0x08048402} expr=(add[32] v1367[32] 4[32]) }
          value = { defs={} expr=v1394[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048403} expr=v1394[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    registers:
        ax      = { defs={} expr=v1427[32] }
        cx      = { defs={} expr=v1428[32] }
        dx      = { defs={} expr=v1429[32] }
        bx      = { defs={} expr=v1430[32] }
        sp      = { defs={} expr=v1431[32] }
        bp      = { defs={} expr=v1432[32] }
        si      = { defs={} expr=v1433[32] }
        di      = { defs={} expr=v1434[32] }
        es      = { defs={} expr=v1435[16] }
        cs      = { defs={} expr=v1436[16] }
        ss      = { defs={} expr=v1437[16] }
        ds      = { defs={} expr=v1438[16] }
        fs      = { defs={} expr=v1439[16] }
        gs      = { defs={} expr=v1440[16] }
        cf      = { defs={} expr=v1441[1] }
        ?1      = { defs={} expr=v1442[1] }
        pf      = { defs={} expr=v1443[1] }
        ?3      = { defs={} expr=v1444[1] }
        af      = { defs={} expr=v1445[1] }
        ?5      = { defs={} expr=v1446[1] }
        zf      = { defs={} expr=v1447[1] }
        sf      = { defs={} expr=v1448[1] }
        tf      = { defs={} expr=v1449[1] }
        if      = { defs={} expr=v1450[1] }
        df      = { defs={} expr=v1451[1] }
        of      = { defs={} expr=v1452[1] }
        iopl0   = { defs={} expr=v1453[1] }
        iopl1   = { defs={} expr=v1454[1] }
        nt      = { defs={} expr=v1455[1] }
        ?15     = { defs={} expr=v1456[1] }
        ip      = { defs={0x080483e8} expr=0x080483ef[32] }
    memory:
        address = { defs={} expr=v1431[32] }
          value = { defs={0x080483e8} expr=0x080495f8[32] }
          flags = { size=4 }
    ip = defs={0x080483e8} expr=0x080483ef[32]
0x80483ef:call   0x00000000
    registers:
        ax      = { defs={} expr=v1427[32] }
        cx      = { defs={} expr=v1428[32] }
        dx      = { defs={} expr=v1429[32] }
        bx      = { defs={} expr=v1430[32] }
        sp      = { defs={0x080483ef} expr=(add[32] v1431[32] -4[32]) }
        bp      = { defs={} expr=v1432[32] }
        si      = { defs={} expr=v1433[32] }
        di      = { defs={} expr=v1434[32] }
        es      = { defs={} expr=v1435[16] }
        cs      = { defs={} expr=v1436[16] }
        ss      = { defs={} expr=v1437[16] }
        ds      = { defs={} expr=v1438[16] }
        fs      = { defs={} expr=v1439[16] }
        gs      = { defs={} expr=v1440[16] }
        cf      = { defs={} expr=v1441[1] }
        ?1      = { defs={} expr=v1442[1] }
        pf      = { defs={} expr=v1443[1] }
        ?3      = { defs={} expr=v1444[1] }
        af      = { defs={} expr=v1445[1] }
        ?5      = { defs={} expr=v1446[1] }
        zf      = { defs={} expr=v1447[1] }
        sf      = { defs={} expr=v1448[1] }
        tf      = { defs={} expr=v1449[1] }
        if      = { defs={} expr=v1450[1] }
        df      = { defs={} expr=v1451[1] }
        of      = { defs={} expr=v1452[1] }
        iopl0   = { defs={} expr=v1453[1] }
        iopl1   = { defs={} expr=v1454[1] }
        nt      = { defs={} expr=v1455[1] }
        ?15     = { defs={} expr=v1456[1] }
        ip      = { defs={0x080483ef} expr=0[32] }
    memory:
        address = { defs={} expr=v1431[32] }
          value = { defs={0x080483e8} expr=0x080495f8[32] }
          flags = { size=4 }
        address = { defs={0x080483ef} expr=(add[32] v1431[32] -4[32]) }
          value = { defs={0x080483e8,0x080483ef} expr=0x080483f4[32] }
          flags = { size=4 }
    ip = defs={0x080483ef} expr=0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v1489[32] }
        cx      = { defs={} expr=v1490[32] }
        dx      = { defs={} expr=v1491[32] }
        bx      = { defs={} expr=v1492[32] }
        sp      = { defs={} expr=v1493[32] }
        bp      = { defs={} expr=v1494[32] }
        si      = { defs={0x080483f4} expr=v1495[32] }
        di      = { defs={} expr=v1496[32] }
        es      = { defs={} expr=v1497[16] }
        cs      = { defs={} expr=v1498[16] }
        ss      = { defs={} expr=v1499[16] }
        ds      = { defs={} expr=v1500[16] }
        fs      = { defs={} expr=v1501[16] }
        gs      = { defs={} expr=v1502[16] }
        cf      = { defs={} expr=v1503[1] }
        ?1      = { defs={} expr=v1504[1] }
        pf      = { defs={} expr=v1505[1] }
        ?3      = { defs={} expr=v1506[1] }
        af      = { defs={} expr=v1507[1] }
        ?5      = { defs={} expr=v1508[1] }
        zf      = { defs={} expr=v1509[1] }
        sf      = { defs={} expr=v1510[1] }
        tf      = { defs={} expr=v1511[1] }
        if      = { defs={} expr=v1512[1] }
        df      = { defs={} expr=v1513[1] }
        of      = { defs={} expr=v1514[1] }
        iopl0   = { defs={} expr=v1515[1] }
        iopl1   = { defs={} expr=v1516[1] }
        nt      = { defs={} expr=v1517[1] }
        ?15     = { defs={} expr=v1518[1] }
        ip      = { defs={0x080483f4} expr=0x080483fa[32] }
    memory:
        (empty)
    ip = defs={0x080483f4} expr=0x080483fa[32]
0x80483fa:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v1489[32] }
        cx      = { defs={} expr=v1490[32] }
        dx      = { defs={} expr=v1491[32] }
        bx      = { defs={} expr=v1492[32] }
        sp      = { defs={} expr=v1493[32] }
        bp      = { defs={} expr=v1494[32] }
        si      = { defs={0x080483f4} expr=v1495[32] }
        di      = { defs={0x080483fa} expr=v1496[32] }
        es      = { defs={} expr=v1497[16] }
        cs      = { defs={} expr=v1498[16] }
        ss      = { defs={} expr=v1499[16] }
        ds      = { defs={} expr=v1500[16] }
        fs      = { defs={} expr=v1501[16] }
        gs      = { defs={} expr=v1502[16] }
        cf      = { defs={} expr=v1503[1] }
        ?1      = { defs={} expr=v1504[1] }
        pf      = { defs={} expr=v1505[1] }
        ?3      = { defs={} expr=v1506[1] }
        af      = { defs={} expr=v1507[1] }
        ?5      = { defs={} expr=v1508[1] }
        zf      = { defs={} expr=v1509[1] }
        sf      = { defs={} expr=v1510[1] }
        tf      = { defs={} expr=v1511[1] }
        if      = { defs={} expr=v1512[1] }
        df      = { defs={} expr=v1513[1] }
        of      = { defs={} expr=v1514[1] }
        iopl0   = { defs={} expr=v1515[1] }
        iopl1   = { defs={} expr=v1516[1] }
        nt      = { defs={} expr=v1517[1] }
        ?15     = { defs={} expr=v1518[1] }
        ip      = { defs={0x080483f4,0x080483fa} expr=0x08048400[32] }
    memory:
        (empty)
    ip = defs={0x080483f4,0x080483fa} expr=0x08048400[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048410:push   ebp
    registers:
        ax      = { defs={} expr=v1551[32] }
        cx      = { defs={} expr=v1552[32] }
        dx      = { defs={} expr=v1553[32] }
        bx      = { defs={} expr=v1554[32] }
        sp      = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
        bp      = { defs={} expr=v1556[32] }
        si      = { defs={} expr=v1557[32] }
        di      = { defs={} expr=v1558[32] }
        es      = { defs={} expr=v1559[16] }
        cs      = { defs={} expr=v1560[16] }
        ss      = { defs={} expr=v1561[16] }
        ds      = { defs={} expr=v1562[16] }
        fs      = { defs={} expr=v1563[16] }
        gs      = { defs={} expr=v1564[16] }
        cf      = { defs={} expr=v1565[1] }
        ?1      = { defs={} expr=v1566[1] }
        pf      = { defs={} expr=v1567[1] }
        ?3      = { defs={} expr=v1568[1] }
        af      = { defs={} expr=v1569[1] }
        ?5      = { defs={} expr=v1570[1] }
        zf      = { defs={} expr=v1571[1] }
        sf      = { defs={} expr=v1572[1] }
        tf      = { defs={} expr=v1573[1] }
        if      = { defs={} expr=v1574[1] }
        df      = { defs={} expr=v1575[1] }
        of      = { defs={} expr=v1576[1] }
        iopl0   = { defs={} expr=v1577[1] }
        iopl1   = { defs={} expr=v1578[1] }
        nt      = { defs={} expr=v1579[1] }
        ?15     = { defs={} expr=v1580[1] }
        ip      = { defs={0x08048410} expr=0x08048411[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
          value = { defs={0x08048410} expr=v1556[32] }
          flags = { size=4 }
    ip = defs={0x08048410} expr=0x08048411[32]
0x8048411:mov    edx, 0x08048480
    registers:
        ax      = { defs={} expr=v1551[32] }
        cx      = { defs={} expr=v1552[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v1554[32] }
        sp      = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
        bp      = { defs={} expr=v1556[32] }
        si      = { defs={} expr=v1557[32] }
        di      = { defs={} expr=v1558[32] }
        es      = { defs={} expr=v1559[16] }
        cs      = { defs={} expr=v1560[16] }
        ss      = { defs={} expr=v1561[16] }
        ds      = { defs={} expr=v1562[16] }
        fs      = { defs={} expr=v1563[16] }
        gs      = { defs={} expr=v1564[16] }
        cf      = { defs={} expr=v1565[1] }
        ?1      = { defs={} expr=v1566[1] }
        pf      = { defs={} expr=v1567[1] }
        ?3      = { defs={} expr=v1568[1] }
        af      = { defs={} expr=v1569[1] }
        ?5      = { defs={} expr=v1570[1] }
        zf      = { defs={} expr=v1571[1] }
        sf      = { defs={} expr=v1572[1] }
        tf      = { defs={} expr=v1573[1] }
        if      = { defs={} expr=v1574[1] }
        df      = { defs={} expr=v1575[1] }
        of      = { defs={} expr=v1576[1] }
        iopl0   = { defs={} expr=v1577[1] }
        iopl1   = { defs={} expr=v1578[1] }
        nt      = { defs={} expr=v1579[1] }
        ?15     = { defs={} expr=v1580[1] }
        ip      = { defs={0x08048410,0x08048411} expr=0x08048416[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
          value = { defs={0x08048410} expr=v1556[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411} expr=0x08048416[32]
0x8048416:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1551[32] }
        cx      = { defs={} expr=v1552[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v1554[32] }
        sp      = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v1555[32] -4[32]) }
        si      = { defs={} expr=v1557[32] }
        di      = { defs={} expr=v1558[32] }
        es      = { defs={} expr=v1559[16] }
        cs      = { defs={} expr=v1560[16] }
        ss      = { defs={} expr=v1561[16] }
        ds      = { defs={} expr=v1562[16] }
        fs      = { defs={} expr=v1563[16] }
        gs      = { defs={} expr=v1564[16] }
        cf      = { defs={} expr=v1565[1] }
        ?1      = { defs={} expr=v1566[1] }
        pf      = { defs={} expr=v1567[1] }
        ?3      = { defs={} expr=v1568[1] }
        af      = { defs={} expr=v1569[1] }
        ?5      = { defs={} expr=v1570[1] }
        zf      = { defs={} expr=v1571[1] }
        sf      = { defs={} expr=v1572[1] }
        tf      = { defs={} expr=v1573[1] }
        if      = { defs={} expr=v1574[1] }
        df      = { defs={} expr=v1575[1] }
        of      = { defs={} expr=v1576[1] }
        iopl0   = { defs={} expr=v1577[1] }
        iopl1   = { defs={} expr=v1578[1] }
        nt      = { defs={} expr=v1579[1] }
        ?15     = { defs={} expr=v1580[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416} expr=0x08048418[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
          value = { defs={0x08048410} expr=v1556[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416} expr=0x08048418[32]
0x8048418:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v1551[32] }
        cx      = { defs={} expr=v1552[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v1554[32] }
        sp      = { defs={0x08048410,0x08048418} expr=(add[32] (add[32] v1555[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v1555[32] -4[32]) }
        si      = { defs={} expr=v1557[32] }
        di      = { defs={} expr=v1558[32] }
        es      = { defs={} expr=v1559[16] }
        cs      = { defs={} expr=v1560[16] }
        ss      = { defs={} expr=v1561[16] }
        ds      = { defs={} expr=v1562[16] }
        fs      = { defs={} expr=v1563[16] }
        gs      = { defs={} expr=v1564[16] }
        cf      = { defs={0x08048410,0x08048418} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1555[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1555[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1566[1] }
        pf      = { defs={0x08048410,0x08048418} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1555[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1555[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1568[1] }
        af      = { defs={0x08048410,0x08048418} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1555[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1555[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1570[1] }
        zf      = { defs={0x08048410,0x08048418} expr=(zerop[1] (add[32] (add[32] v1555[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048410,0x08048418} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1555[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1573[1] }
        if      = { defs={} expr=v1574[1] }
        df      = { defs={} expr=v1575[1] }
        of      = { defs={0x08048410,0x08048418} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1555[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1555[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1555[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1555[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1577[1] }
        iopl1   = { defs={} expr=v1578[1] }
        nt      = { defs={} expr=v1579[1] }
        ?15     = { defs={} expr=v1580[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418} expr=0x0804841b[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
          value = { defs={0x08048410} expr=v1556[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416,0x08048418} expr=0x0804841b[32]
0x804841b:and    esp, 0xf0<-0x10>
    registers:
        ax      = { defs={} expr=v1551[32] }
        cx      = { defs={} expr=v1552[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v1554[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v1555[32] -4[32]) }
        si      = { defs={} expr=v1557[32] }
        di      = { defs={} expr=v1558[32] }
        es      = { defs={} expr=v1559[16] }
        cs      = { defs={} expr=v1560[16] }
        ss      = { defs={} expr=v1561[16] }
        ds      = { defs={} expr=v1562[16] }
        fs      = { defs={} expr=v1563[16] }
        gs      = { defs={} expr=v1564[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v1566[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1568[1] }
        af      = { defs={0x0804841b} expr=v1581[1] }
        ?5      = { defs={} expr=v1570[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v1573[1] }
        if      = { defs={} expr=v1574[1] }
        df      = { defs={} expr=v1575[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v1577[1] }
        iopl1   = { defs={} expr=v1578[1] }
        nt      = { defs={} expr=v1579[1] }
        ?15     = { defs={} expr=v1580[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b} expr=0x0804841e[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
          value = { defs={0x08048410} expr=v1556[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b} expr=0x0804841e[32]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    registers:
        ax      = { defs={} expr=v1551[32] }
        cx      = { defs={} expr=v1552[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v1554[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v1555[32] -4[32]) }
        si      = { defs={} expr=v1557[32] }
        di      = { defs={} expr=v1558[32] }
        es      = { defs={} expr=v1559[16] }
        cs      = { defs={} expr=v1560[16] }
        ss      = { defs={} expr=v1561[16] }
        ds      = { defs={} expr=v1562[16] }
        fs      = { defs={} expr=v1563[16] }
        gs      = { defs={} expr=v1564[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v1566[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1568[1] }
        af      = { defs={0x0804841b} expr=v1581[1] }
        ?5      = { defs={} expr=v1570[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v1573[1] }
        if      = { defs={} expr=v1574[1] }
        df      = { defs={} expr=v1575[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v1577[1] }
        iopl1   = { defs={} expr=v1578[1] }
        nt      = { defs={} expr=v1579[1] }
        ?15     = { defs={} expr=v1580[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e} expr=0x08048422[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
          value = { defs={0x08048410} expr=v1556[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=0x08048480[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e} expr=0x08048422[32]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    registers:
        ax      = { defs={} expr=v1551[32] }
        cx      = { defs={} expr=v1552[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v1554[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v1555[32] -4[32]) }
        si      = { defs={} expr=v1557[32] }
        di      = { defs={} expr=v1558[32] }
        es      = { defs={} expr=v1559[16] }
        cs      = { defs={} expr=v1560[16] }
        ss      = { defs={} expr=v1561[16] }
        ds      = { defs={} expr=v1562[16] }
        fs      = { defs={} expr=v1563[16] }
        gs      = { defs={} expr=v1564[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v1566[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1568[1] }
        af      = { defs={0x0804841b} expr=v1581[1] }
        ?5      = { defs={} expr=v1570[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v1573[1] }
        if      = { defs={} expr=v1574[1] }
        df      = { defs={} expr=v1575[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v1577[1] }
        iopl1   = { defs={} expr=v1578[1] }
        nt      = { defs={} expr=v1579[1] }
        ?15     = { defs={} expr=v1580[1] }
        ip      = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422} expr=0x08048429[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
          value = { defs={0x08048410} expr=v1556[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=0x08048480[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) }
          value = { defs={0x08048422} expr=10[32] }
          flags = { size=4 }
    ip = defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422} expr=0x08048429[32]
0x8048429:call   0x080482f0
    registers:
        ax      = { defs={} expr=v1551[32] }
        cx      = { defs={} expr=v1552[32] }
        dx      = { defs={0x08048411} expr=0x08048480[32] }
        bx      = { defs={} expr=v1554[32] }
        sp      = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) -4[32]) }
        bp      = { defs={0x08048410,0x08048416} expr=(add[32] v1555[32] -4[32]) }
        si      = { defs={} expr=v1557[32] }
        di      = { defs={} expr=v1558[32] }
        es      = { defs={} expr=v1559[16] }
        cs      = { defs={} expr=v1560[16] }
        ss      = { defs={} expr=v1561[16] }
        ds      = { defs={} expr=v1562[16] }
        fs      = { defs={} expr=v1563[16] }
        gs      = { defs={} expr=v1564[16] }
        cf      = { defs={0x0804841b} expr=0[1] }
        ?1      = { defs={} expr=v1566[1] }
        pf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(invert[1] (bv-xor[1] 0[1] (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]))))))) }
        ?3      = { defs={} expr=v1568[1] }
        af      = { defs={0x0804841b} expr=v1581[1] }
        ?5      = { defs={} expr=v1570[1] }
        zf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(zerop[1] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])) }
        sf      = { defs={0x08048410,0x08048418,0x0804841b} expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32])) }
        tf      = { defs={} expr=v1573[1] }
        if      = { defs={} expr=v1574[1] }
        df      = { defs={} expr=v1575[1] }
        of      = { defs={0x0804841b} expr=0[1] }
        iopl0   = { defs={} expr=v1577[1] }
        iopl1   = { defs={} expr=v1578[1] }
        nt      = { defs={} expr=v1579[1] }
        ?15     = { defs={} expr=v1580[1] }
        ip      = { defs={0x08048429} expr=0x080482f0[32] }
    memory:
        address = { defs={0x08048410} expr=(add[32] v1555[32] -4[32]) }
          value = { defs={0x08048410} expr=v1556[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x0804841e} expr=(add[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) 4[32]) }
          value = { defs={0x08048411,0x0804841e} expr=0x08048480[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b} expr=(bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) }
          value = { defs={0x08048422} expr=10[32] }
          flags = { size=4 }
        address = { defs={0x08048410,0x08048418,0x0804841b,0x08048429} expr=(add[32] (bv-and[32] (add[32] (add[32] v1555[32] -4[32]) -8[32]) -16[32]) -4[32]) }
          value = { defs={0x08048410,0x08048411,0x08048416,0x08048418,0x0804841b,0x0804841e,0x08048422,0x08048429} expr=0x0804842e[32] }
          flags = { size=4 }
    ip = defs={0x08048429} expr=0x080482f0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    registers:
        ax      = { defs={} expr=v1614[32] }
        cx      = { defs={} expr=v1615[32] }
        dx      = { defs={} expr=v1616[32] }
        bx      = { defs={} expr=v1617[32] }
        sp      = { defs={0x0804842e} expr=v1619[32] }
        bp      = { defs={} expr=v1619[32] }
        si      = { defs={} expr=v1620[32] }
        di      = { defs={} expr=v1621[32] }
        es      = { defs={} expr=v1622[16] }
        cs      = { defs={} expr=v1623[16] }
        ss      = { defs={} expr=v1624[16] }
        ds      = { defs={} expr=v1625[16] }
        fs      = { defs={} expr=v1626[16] }
        gs      = { defs={} expr=v1627[16] }
        cf      = { defs={} expr=v1628[1] }
        ?1      = { defs={} expr=v1629[1] }
        pf      = { defs={} expr=v1630[1] }
        ?3      = { defs={} expr=v1631[1] }
        af      = { defs={} expr=v1632[1] }
        ?5      = { defs={} expr=v1633[1] }
        zf      = { defs={} expr=v1634[1] }
        sf      = { defs={} expr=v1635[1] }
        tf      = { defs={} expr=v1636[1] }
        if      = { defs={} expr=v1637[1] }
        df      = { defs={} expr=v1638[1] }
        of      = { defs={} expr=v1639[1] }
        iopl0   = { defs={} expr=v1640[1] }
        iopl1   = { defs={} expr=v1641[1] }
        nt      = { defs={} expr=v1642[1] }
        ?15     = { defs={} expr=v1643[1] }
        ip      = { defs={0x0804842e} expr=0x08048430[32] }
    memory:
        (empty)
    ip = defs={0x0804842e} expr=0x08048430[32]
0x8048430:xor    eax, eax
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v1615[32] }
        dx      = { defs={} expr=v1616[32] }
        bx      = { defs={} expr=v1617[32] }
        sp      = { defs={0x0804842e} expr=v1619[32] }
        bp      = { defs={} expr=v1619[32] }
        si      = { defs={} expr=v1620[32] }
        di      = { defs={} expr=v1621[32] }
        es      = { defs={} expr=v1622[16] }
        cs      = { defs={} expr=v1623[16] }
        ss      = { defs={} expr=v1624[16] }
        ds      = { defs={} expr=v1625[16] }
        fs      = { defs={} expr=v1626[16] }
        gs      = { defs={} expr=v1627[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v1629[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v1631[1] }
        af      = { defs={0x08048430} expr=v1644[1] }
        ?5      = { defs={} expr=v1633[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v1636[1] }
        if      = { defs={} expr=v1637[1] }
        df      = { defs={} expr=v1638[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v1640[1] }
        iopl1   = { defs={} expr=v1641[1] }
        nt      = { defs={} expr=v1642[1] }
        ?15     = { defs={} expr=v1643[1] }
        ip      = { defs={0x0804842e,0x08048430} expr=0x08048432[32] }
    memory:
        (empty)
    ip = defs={0x0804842e,0x08048430} expr=0x08048432[32]
0x8048432:pop    ebp
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v1615[32] }
        dx      = { defs={} expr=v1616[32] }
        bx      = { defs={} expr=v1617[32] }
        sp      = { defs={0x0804842e,0x08048432} expr=(add[32] v1619[32] 4[32]) }
        bp      = { defs={0x08048432} expr=v1645[32] }
        si      = { defs={} expr=v1620[32] }
        di      = { defs={} expr=v1621[32] }
        es      = { defs={} expr=v1622[16] }
        cs      = { defs={} expr=v1623[16] }
        ss      = { defs={} expr=v1624[16] }
        ds      = { defs={} expr=v1625[16] }
        fs      = { defs={} expr=v1626[16] }
        gs      = { defs={} expr=v1627[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v1629[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v1631[1] }
        af      = { defs={0x08048430} expr=v1644[1] }
        ?5      = { defs={} expr=v1633[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v1636[1] }
        if      = { defs={} expr=v1637[1] }
        df      = { defs={} expr=v1638[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v1640[1] }
        iopl1   = { defs={} expr=v1641[1] }
        nt      = { defs={} expr=v1642[1] }
        ?15     = { defs={} expr=v1643[1] }
        ip      = { defs={0x0804842e,0x08048430,0x08048432} expr=0x08048433[32] }
    memory:
        address = { defs={0x0804842e} expr=v1619[32] }
          value = { defs={} expr=v1645[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804842e,0x08048430,0x08048432} expr=0x08048433[32]
0x8048433:ret    
    registers:
        ax      = { defs={0x08048430} expr=0[32] }
        cx      = { defs={} expr=v1615[32] }
        dx      = { defs={} expr=v1616[32] }
        bx      = { defs={} expr=v1617[32] }
        sp      = { defs={0x0804842e,0x08048432,0x08048433} expr=(add[32] (add[32] v1619[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048432} expr=v1645[32] }
        si      = { defs={} expr=v1620[32] }
        di      = { defs={} expr=v1621[32] }
        es      = { defs={} expr=v1622[16] }
        cs      = { defs={} expr=v1623[16] }
        ss      = { defs={} expr=v1624[16] }
        ds      = { defs={} expr=v1625[16] }
        fs      = { defs={} expr=v1626[16] }
        gs      = { defs={} expr=v1627[16] }
        cf      = { defs={0x08048430} expr=0[1] }
        ?1      = { defs={} expr=v1629[1] }
        pf      = { defs={0x08048430} expr=1[1] }
        ?3      = { defs={} expr=v1631[1] }
        af      = { defs={0x08048430} expr=v1644[1] }
        ?5      = { defs={} expr=v1633[1] }
        zf      = { defs={0x08048430} expr=1[1] }
        sf      = { defs={0x08048430} expr=0[1] }
        tf      = { defs={} expr=v1636[1] }
        if      = { defs={} expr=v1637[1] }
        df      = { defs={} expr=v1638[1] }
        of      = { defs={0x08048430} expr=0[1] }
        iopl0   = { defs={} expr=v1640[1] }
        iopl1   = { defs={} expr=v1641[1] }
        nt      = { defs={} expr=v1642[1] }
        ?15     = { defs={} expr=v1643[1] }
        ip      = { defs={0x08048433} expr=v1646[32] }
    memory:
        address = { defs={0x0804842e} expr=v1619[32] }
          value = { defs={} expr=v1645[32] }
          flags = { size=4; read-only }
        address = { defs={0x0804842e,0x08048432} expr=(add[32] v1619[32] 4[32]) }
          value = { defs={} expr=v1646[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048433} expr=v1646[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    registers:
        ax      = { defs={} expr=v1679[32] }
        cx      = { defs={} expr=v1680[32] }
        dx      = { defs={} expr=v1681[32] }
        bx      = { defs={} expr=v1682[32] }
        sp      = { defs={0x08048440} expr=(add[32] v1683[32] -4[32]) }
        bp      = { defs={} expr=v1684[32] }
        si      = { defs={} expr=v1685[32] }
        di      = { defs={} expr=v1686[32] }
        es      = { defs={} expr=v1687[16] }
        cs      = { defs={} expr=v1688[16] }
        ss      = { defs={} expr=v1689[16] }
        ds      = { defs={} expr=v1690[16] }
        fs      = { defs={} expr=v1691[16] }
        gs      = { defs={} expr=v1692[16] }
        cf      = { defs={} expr=v1693[1] }
        ?1      = { defs={} expr=v1694[1] }
        pf      = { defs={} expr=v1695[1] }
        ?3      = { defs={} expr=v1696[1] }
        af      = { defs={} expr=v1697[1] }
        ?5      = { defs={} expr=v1698[1] }
        zf      = { defs={} expr=v1699[1] }
        sf      = { defs={} expr=v1700[1] }
        tf      = { defs={} expr=v1701[1] }
        if      = { defs={} expr=v1702[1] }
        df      = { defs={} expr=v1703[1] }
        of      = { defs={} expr=v1704[1] }
        iopl0   = { defs={} expr=v1705[1] }
        iopl1   = { defs={} expr=v1706[1] }
        nt      = { defs={} expr=v1707[1] }
        ?15     = { defs={} expr=v1708[1] }
        ip      = { defs={0x08048440} expr=0x08048441[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v1683[32] -4[32]) }
          value = { defs={0x08048440} expr=v1684[32] }
          flags = { size=4 }
    ip = defs={0x08048440} expr=0x08048441[32]
0x8048441:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1679[32] }
        cx      = { defs={} expr=v1680[32] }
        dx      = { defs={} expr=v1681[32] }
        bx      = { defs={} expr=v1682[32] }
        sp      = { defs={0x08048440} expr=(add[32] v1683[32] -4[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v1683[32] -4[32]) }
        si      = { defs={} expr=v1685[32] }
        di      = { defs={} expr=v1686[32] }
        es      = { defs={} expr=v1687[16] }
        cs      = { defs={} expr=v1688[16] }
        ss      = { defs={} expr=v1689[16] }
        ds      = { defs={} expr=v1690[16] }
        fs      = { defs={} expr=v1691[16] }
        gs      = { defs={} expr=v1692[16] }
        cf      = { defs={} expr=v1693[1] }
        ?1      = { defs={} expr=v1694[1] }
        pf      = { defs={} expr=v1695[1] }
        ?3      = { defs={} expr=v1696[1] }
        af      = { defs={} expr=v1697[1] }
        ?5      = { defs={} expr=v1698[1] }
        zf      = { defs={} expr=v1699[1] }
        sf      = { defs={} expr=v1700[1] }
        tf      = { defs={} expr=v1701[1] }
        if      = { defs={} expr=v1702[1] }
        df      = { defs={} expr=v1703[1] }
        of      = { defs={} expr=v1704[1] }
        iopl0   = { defs={} expr=v1705[1] }
        iopl1   = { defs={} expr=v1706[1] }
        nt      = { defs={} expr=v1707[1] }
        ?15     = { defs={} expr=v1708[1] }
        ip      = { defs={0x08048440,0x08048441} expr=0x08048443[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v1683[32] -4[32]) }
          value = { defs={0x08048440} expr=v1684[32] }
          flags = { size=4 }
    ip = defs={0x08048440,0x08048441} expr=0x08048443[32]
0x8048443:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v1679[32] }
        cx      = { defs={} expr=v1680[32] }
        dx      = { defs={} expr=v1681[32] }
        bx      = { defs={} expr=v1682[32] }
        sp      = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v1683[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v1683[32] -4[32]) }
        si      = { defs={} expr=v1685[32] }
        di      = { defs={} expr=v1686[32] }
        es      = { defs={} expr=v1687[16] }
        cs      = { defs={} expr=v1688[16] }
        ss      = { defs={} expr=v1689[16] }
        ds      = { defs={} expr=v1690[16] }
        fs      = { defs={} expr=v1691[16] }
        gs      = { defs={} expr=v1692[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1694[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1696[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1698[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v1683[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1701[1] }
        if      = { defs={} expr=v1702[1] }
        df      = { defs={} expr=v1703[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1705[1] }
        iopl1   = { defs={} expr=v1706[1] }
        nt      = { defs={} expr=v1707[1] }
        ?15     = { defs={} expr=v1708[1] }
        ip      = { defs={0x08048440,0x08048441,0x08048443} expr=0x08048446[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v1683[32] -4[32]) }
          value = { defs={0x08048440} expr=v1684[32] }
          flags = { size=4 }
    ip = defs={0x08048440,0x08048441,0x08048443} expr=0x08048446[32]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    registers:
        ax      = { defs={} expr=v1679[32] }
        cx      = { defs={} expr=v1680[32] }
        dx      = { defs={} expr=v1681[32] }
        bx      = { defs={} expr=v1682[32] }
        sp      = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v1683[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v1683[32] -4[32]) }
        si      = { defs={} expr=v1685[32] }
        di      = { defs={} expr=v1686[32] }
        es      = { defs={} expr=v1687[16] }
        cs      = { defs={} expr=v1688[16] }
        ss      = { defs={} expr=v1689[16] }
        ds      = { defs={} expr=v1690[16] }
        fs      = { defs={} expr=v1691[16] }
        gs      = { defs={} expr=v1692[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1694[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1696[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1698[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v1683[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1701[1] }
        if      = { defs={} expr=v1702[1] }
        df      = { defs={} expr=v1703[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1705[1] }
        iopl1   = { defs={} expr=v1706[1] }
        nt      = { defs={} expr=v1707[1] }
        ?15     = { defs={} expr=v1708[1] }
        ip      = { defs={0x08048440,0x08048441,0x08048443,0x08048446} expr=0x0804844d[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v1683[32] -4[32]) }
          value = { defs={0x08048440} expr=v1684[32] }
          flags = { size=4 }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v1683[32] -4[32]) -8[32]) }
          value = { defs={0x08048446} expr=0x080485d4[32] }
          flags = { size=4 }
    ip = defs={0x08048440,0x08048441,0x08048443,0x08048446} expr=0x0804844d[32]
0x804844d:call   0x08048300
    registers:
        ax      = { defs={} expr=v1679[32] }
        cx      = { defs={} expr=v1680[32] }
        dx      = { defs={} expr=v1681[32] }
        bx      = { defs={} expr=v1682[32] }
        sp      = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048440,0x08048441} expr=(add[32] v1683[32] -4[32]) }
        si      = { defs={} expr=v1685[32] }
        di      = { defs={} expr=v1686[32] }
        es      = { defs={} expr=v1687[16] }
        cs      = { defs={} expr=v1688[16] }
        ss      = { defs={} expr=v1689[16] }
        ds      = { defs={} expr=v1690[16] }
        fs      = { defs={} expr=v1691[16] }
        gs      = { defs={} expr=v1692[16] }
        cf      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1694[1] }
        pf      = { defs={0x08048440,0x08048443} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1696[1] }
        af      = { defs={0x08048440,0x08048443} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1698[1] }
        zf      = { defs={0x08048440,0x08048443} expr=(zerop[1] (add[32] (add[32] v1683[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048440,0x08048443} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1683[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1701[1] }
        if      = { defs={} expr=v1702[1] }
        df      = { defs={} expr=v1703[1] }
        of      = { defs={0x08048440,0x08048443} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1683[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1705[1] }
        iopl1   = { defs={} expr=v1706[1] }
        nt      = { defs={} expr=v1707[1] }
        ?15     = { defs={} expr=v1708[1] }
        ip      = { defs={0x0804844d} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048440} expr=(add[32] v1683[32] -4[32]) }
          value = { defs={0x08048440} expr=v1684[32] }
          flags = { size=4 }
        address = { defs={0x08048440,0x08048443} expr=(add[32] (add[32] v1683[32] -4[32]) -8[32]) }
          value = { defs={0x08048446} expr=0x080485d4[32] }
          flags = { size=4 }
        address = { defs={0x08048440,0x08048443,0x0804844d} expr=(add[32] (add[32] (add[32] v1683[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048440,0x08048441,0x08048443,0x08048446,0x0804844d} expr=0x08048452[32] }
          flags = { size=4 }
    ip = defs={0x0804844d} expr=0x08048300[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    registers:
        ax      = { defs={} expr=v1741[32] }
        cx      = { defs={} expr=v1742[32] }
        dx      = { defs={} expr=v1743[32] }
        bx      = { defs={} expr=v1744[32] }
        sp      = { defs={0x08048452} expr=v1746[32] }
        bp      = { defs={} expr=v1746[32] }
        si      = { defs={} expr=v1747[32] }
        di      = { defs={} expr=v1748[32] }
        es      = { defs={} expr=v1749[16] }
        cs      = { defs={} expr=v1750[16] }
        ss      = { defs={} expr=v1751[16] }
        ds      = { defs={} expr=v1752[16] }
        fs      = { defs={} expr=v1753[16] }
        gs      = { defs={} expr=v1754[16] }
        cf      = { defs={} expr=v1755[1] }
        ?1      = { defs={} expr=v1756[1] }
        pf      = { defs={} expr=v1757[1] }
        ?3      = { defs={} expr=v1758[1] }
        af      = { defs={} expr=v1759[1] }
        ?5      = { defs={} expr=v1760[1] }
        zf      = { defs={} expr=v1761[1] }
        sf      = { defs={} expr=v1762[1] }
        tf      = { defs={} expr=v1763[1] }
        if      = { defs={} expr=v1764[1] }
        df      = { defs={} expr=v1765[1] }
        of      = { defs={} expr=v1766[1] }
        iopl0   = { defs={} expr=v1767[1] }
        iopl1   = { defs={} expr=v1768[1] }
        nt      = { defs={} expr=v1769[1] }
        ?15     = { defs={} expr=v1770[1] }
        ip      = { defs={0x08048452} expr=0x08048454[32] }
    memory:
        (empty)
    ip = defs={0x08048452} expr=0x08048454[32]
0x8048454:pop    ebp
    registers:
        ax      = { defs={} expr=v1741[32] }
        cx      = { defs={} expr=v1742[32] }
        dx      = { defs={} expr=v1743[32] }
        bx      = { defs={} expr=v1744[32] }
        sp      = { defs={0x08048452,0x08048454} expr=(add[32] v1746[32] 4[32]) }
        bp      = { defs={0x08048454} expr=v1771[32] }
        si      = { defs={} expr=v1747[32] }
        di      = { defs={} expr=v1748[32] }
        es      = { defs={} expr=v1749[16] }
        cs      = { defs={} expr=v1750[16] }
        ss      = { defs={} expr=v1751[16] }
        ds      = { defs={} expr=v1752[16] }
        fs      = { defs={} expr=v1753[16] }
        gs      = { defs={} expr=v1754[16] }
        cf      = { defs={} expr=v1755[1] }
        ?1      = { defs={} expr=v1756[1] }
        pf      = { defs={} expr=v1757[1] }
        ?3      = { defs={} expr=v1758[1] }
        af      = { defs={} expr=v1759[1] }
        ?5      = { defs={} expr=v1760[1] }
        zf      = { defs={} expr=v1761[1] }
        sf      = { defs={} expr=v1762[1] }
        tf      = { defs={} expr=v1763[1] }
        if      = { defs={} expr=v1764[1] }
        df      = { defs={} expr=v1765[1] }
        of      = { defs={} expr=v1766[1] }
        iopl0   = { defs={} expr=v1767[1] }
        iopl1   = { defs={} expr=v1768[1] }
        nt      = { defs={} expr=v1769[1] }
        ?15     = { defs={} expr=v1770[1] }
        ip      = { defs={0x08048452,0x08048454} expr=0x08048455[32] }
    memory:
        address = { defs={0x08048452} expr=v1746[32] }
          value = { defs={} expr=v1771[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048452,0x08048454} expr=0x08048455[32]
0x8048455:ret    
    registers:
        ax      = { defs={} expr=v1741[32] }
        cx      = { defs={} expr=v1742[32] }
        dx      = { defs={} expr=v1743[32] }
        bx      = { defs={} expr=v1744[32] }
        sp      = { defs={0x08048452,0x08048454,0x08048455} expr=(add[32] (add[32] v1746[32] 4[32]) 4[32]) }
        bp      = { defs={0x08048454} expr=v1771[32] }
        si      = { defs={} expr=v1747[32] }
        di      = { defs={} expr=v1748[32] }
        es      = { defs={} expr=v1749[16] }
        cs      = { defs={} expr=v1750[16] }
        ss      = { defs={} expr=v1751[16] }
        ds      = { defs={} expr=v1752[16] }
        fs      = { defs={} expr=v1753[16] }
        gs      = { defs={} expr=v1754[16] }
        cf      = { defs={} expr=v1755[1] }
        ?1      = { defs={} expr=v1756[1] }
        pf      = { defs={} expr=v1757[1] }
        ?3      = { defs={} expr=v1758[1] }
        af      = { defs={} expr=v1759[1] }
        ?5      = { defs={} expr=v1760[1] }
        zf      = { defs={} expr=v1761[1] }
        sf      = { defs={} expr=v1762[1] }
        tf      = { defs={} expr=v1763[1] }
        if      = { defs={} expr=v1764[1] }
        df      = { defs={} expr=v1765[1] }
        of      = { defs={} expr=v1766[1] }
        iopl0   = { defs={} expr=v1767[1] }
        iopl1   = { defs={} expr=v1768[1] }
        nt      = { defs={} expr=v1769[1] }
        ?15     = { defs={} expr=v1770[1] }
        ip      = { defs={0x08048455} expr=v1772[32] }
    memory:
        address = { defs={0x08048452} expr=v1746[32] }
          value = { defs={} expr=v1771[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048452,0x08048454} expr=(add[32] v1746[32] 4[32]) }
          value = { defs={} expr=v1772[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048455} expr=v1772[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    registers:
        ax      = { defs={} expr=v1805[32] }
        cx      = { defs={} expr=v1806[32] }
        dx      = { defs={} expr=v1807[32] }
        bx      = { defs={} expr=v1808[32] }
        sp      = { defs={0x08048460} expr=(add[32] v1809[32] -4[32]) }
        bp      = { defs={} expr=v1810[32] }
        si      = { defs={} expr=v1811[32] }
        di      = { defs={} expr=v1812[32] }
        es      = { defs={} expr=v1813[16] }
        cs      = { defs={} expr=v1814[16] }
        ss      = { defs={} expr=v1815[16] }
        ds      = { defs={} expr=v1816[16] }
        fs      = { defs={} expr=v1817[16] }
        gs      = { defs={} expr=v1818[16] }
        cf      = { defs={} expr=v1819[1] }
        ?1      = { defs={} expr=v1820[1] }
        pf      = { defs={} expr=v1821[1] }
        ?3      = { defs={} expr=v1822[1] }
        af      = { defs={} expr=v1823[1] }
        ?5      = { defs={} expr=v1824[1] }
        zf      = { defs={} expr=v1825[1] }
        sf      = { defs={} expr=v1826[1] }
        tf      = { defs={} expr=v1827[1] }
        if      = { defs={} expr=v1828[1] }
        df      = { defs={} expr=v1829[1] }
        of      = { defs={} expr=v1830[1] }
        iopl0   = { defs={} expr=v1831[1] }
        iopl1   = { defs={} expr=v1832[1] }
        nt      = { defs={} expr=v1833[1] }
        ?15     = { defs={} expr=v1834[1] }
        ip      = { defs={0x08048460} expr=0x08048461[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v1809[32] -4[32]) }
          value = { defs={0x08048460} expr=v1810[32] }
          flags = { size=4 }
    ip = defs={0x08048460} expr=0x08048461[32]
0x8048461:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1805[32] }
        cx      = { defs={} expr=v1806[32] }
        dx      = { defs={} expr=v1807[32] }
        bx      = { defs={} expr=v1808[32] }
        sp      = { defs={0x08048460} expr=(add[32] v1809[32] -4[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v1809[32] -4[32]) }
        si      = { defs={} expr=v1811[32] }
        di      = { defs={} expr=v1812[32] }
        es      = { defs={} expr=v1813[16] }
        cs      = { defs={} expr=v1814[16] }
        ss      = { defs={} expr=v1815[16] }
        ds      = { defs={} expr=v1816[16] }
        fs      = { defs={} expr=v1817[16] }
        gs      = { defs={} expr=v1818[16] }
        cf      = { defs={} expr=v1819[1] }
        ?1      = { defs={} expr=v1820[1] }
        pf      = { defs={} expr=v1821[1] }
        ?3      = { defs={} expr=v1822[1] }
        af      = { defs={} expr=v1823[1] }
        ?5      = { defs={} expr=v1824[1] }
        zf      = { defs={} expr=v1825[1] }
        sf      = { defs={} expr=v1826[1] }
        tf      = { defs={} expr=v1827[1] }
        if      = { defs={} expr=v1828[1] }
        df      = { defs={} expr=v1829[1] }
        of      = { defs={} expr=v1830[1] }
        iopl0   = { defs={} expr=v1831[1] }
        iopl1   = { defs={} expr=v1832[1] }
        nt      = { defs={} expr=v1833[1] }
        ?15     = { defs={} expr=v1834[1] }
        ip      = { defs={0x08048460,0x08048461} expr=0x08048463[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v1809[32] -4[32]) }
          value = { defs={0x08048460} expr=v1810[32] }
          flags = { size=4 }
    ip = defs={0x08048460,0x08048461} expr=0x08048463[32]
0x8048463:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v1805[32] }
        cx      = { defs={} expr=v1806[32] }
        dx      = { defs={} expr=v1807[32] }
        bx      = { defs={} expr=v1808[32] }
        sp      = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v1809[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v1809[32] -4[32]) }
        si      = { defs={} expr=v1811[32] }
        di      = { defs={} expr=v1812[32] }
        es      = { defs={} expr=v1813[16] }
        cs      = { defs={} expr=v1814[16] }
        ss      = { defs={} expr=v1815[16] }
        ds      = { defs={} expr=v1816[16] }
        fs      = { defs={} expr=v1817[16] }
        gs      = { defs={} expr=v1818[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1820[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1822[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1824[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v1809[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1827[1] }
        if      = { defs={} expr=v1828[1] }
        df      = { defs={} expr=v1829[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1831[1] }
        iopl1   = { defs={} expr=v1832[1] }
        nt      = { defs={} expr=v1833[1] }
        ?15     = { defs={} expr=v1834[1] }
        ip      = { defs={0x08048460,0x08048461,0x08048463} expr=0x08048466[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v1809[32] -4[32]) }
          value = { defs={0x08048460} expr=v1810[32] }
          flags = { size=4 }
    ip = defs={0x08048460,0x08048461,0x08048463} expr=0x08048466[32]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    registers:
        ax      = { defs={} expr=v1805[32] }
        cx      = { defs={} expr=v1806[32] }
        dx      = { defs={} expr=v1807[32] }
        bx      = { defs={} expr=v1808[32] }
        sp      = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v1809[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v1809[32] -4[32]) }
        si      = { defs={} expr=v1811[32] }
        di      = { defs={} expr=v1812[32] }
        es      = { defs={} expr=v1813[16] }
        cs      = { defs={} expr=v1814[16] }
        ss      = { defs={} expr=v1815[16] }
        ds      = { defs={} expr=v1816[16] }
        fs      = { defs={} expr=v1817[16] }
        gs      = { defs={} expr=v1818[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1820[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1822[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1824[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v1809[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1827[1] }
        if      = { defs={} expr=v1828[1] }
        df      = { defs={} expr=v1829[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1831[1] }
        iopl1   = { defs={} expr=v1832[1] }
        nt      = { defs={} expr=v1833[1] }
        ?15     = { defs={} expr=v1834[1] }
        ip      = { defs={0x08048460,0x08048461,0x08048463,0x08048466} expr=0x0804846d[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v1809[32] -4[32]) }
          value = { defs={0x08048460} expr=v1810[32] }
          flags = { size=4 }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v1809[32] -4[32]) -8[32]) }
          value = { defs={0x08048466} expr=0x080485d4[32] }
          flags = { size=4 }
    ip = defs={0x08048460,0x08048461,0x08048463,0x08048466} expr=0x0804846d[32]
0x804846d:call   0x08048300
    registers:
        ax      = { defs={} expr=v1805[32] }
        cx      = { defs={} expr=v1806[32] }
        dx      = { defs={} expr=v1807[32] }
        bx      = { defs={} expr=v1808[32] }
        sp      = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048460,0x08048461} expr=(add[32] v1809[32] -4[32]) }
        si      = { defs={} expr=v1811[32] }
        di      = { defs={} expr=v1812[32] }
        es      = { defs={} expr=v1813[16] }
        cs      = { defs={} expr=v1814[16] }
        ss      = { defs={} expr=v1815[16] }
        ds      = { defs={} expr=v1816[16] }
        fs      = { defs={} expr=v1817[16] }
        gs      = { defs={} expr=v1818[16] }
        cf      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1820[1] }
        pf      = { defs={0x08048460,0x08048463} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1822[1] }
        af      = { defs={0x08048460,0x08048463} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1824[1] }
        zf      = { defs={0x08048460,0x08048463} expr=(zerop[1] (add[32] (add[32] v1809[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048460,0x08048463} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1827[1] }
        if      = { defs={} expr=v1828[1] }
        df      = { defs={} expr=v1829[1] }
        of      = { defs={0x08048460,0x08048463} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1831[1] }
        iopl1   = { defs={} expr=v1832[1] }
        nt      = { defs={} expr=v1833[1] }
        ?15     = { defs={} expr=v1834[1] }
        ip      = { defs={0x0804846d} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048460} expr=(add[32] v1809[32] -4[32]) }
          value = { defs={0x08048460} expr=v1810[32] }
          flags = { size=4 }
        address = { defs={0x08048460,0x08048463} expr=(add[32] (add[32] v1809[32] -4[32]) -8[32]) }
          value = { defs={0x08048466} expr=0x080485d4[32] }
          flags = { size=4 }
        address = { defs={0x08048460,0x08048463,0x0804846d} expr=(add[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048460,0x08048461,0x08048463,0x08048466,0x0804846d} expr=0x08048472[32] }
          flags = { size=4 }
    ip = defs={0x0804846d} expr=0x08048300[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    registers:
        ax      = { defs={} expr=v1867[32] }
        cx      = { defs={} expr=v1868[32] }
        dx      = { defs={} expr=v1869[32] }
        bx      = { defs={} expr=v1870[32] }
        sp      = { defs={} expr=v1871[32] }
        bp      = { defs={} expr=v1872[32] }
        si      = { defs={} expr=v1873[32] }
        di      = { defs={} expr=v1874[32] }
        es      = { defs={} expr=v1875[16] }
        cs      = { defs={} expr=v1876[16] }
        ss      = { defs={} expr=v1877[16] }
        ds      = { defs={} expr=v1878[16] }
        fs      = { defs={} expr=v1879[16] }
        gs      = { defs={} expr=v1880[16] }
        cf      = { defs={} expr=v1881[1] }
        ?1      = { defs={} expr=v1882[1] }
        pf      = { defs={} expr=v1883[1] }
        ?3      = { defs={} expr=v1884[1] }
        af      = { defs={} expr=v1885[1] }
        ?5      = { defs={} expr=v1886[1] }
        zf      = { defs={} expr=v1887[1] }
        sf      = { defs={} expr=v1888[1] }
        tf      = { defs={} expr=v1889[1] }
        if      = { defs={} expr=v1890[1] }
        df      = { defs={} expr=v1891[1] }
        of      = { defs={} expr=v1892[1] }
        iopl0   = { defs={} expr=v1893[1] }
        iopl1   = { defs={} expr=v1894[1] }
        nt      = { defs={} expr=v1895[1] }
        ?15     = { defs={} expr=v1896[1] }
        ip      = { defs={0x08048472} expr=0x08048479[32] }
    memory:
        address = { defs={} expr=v1871[32] }
          value = { defs={0x08048472} expr=0[32] }
          flags = { size=4 }
    ip = defs={0x08048472} expr=0x08048479[32]
0x8048479:call   0x08048320
    registers:
        ax      = { defs={} expr=v1867[32] }
        cx      = { defs={} expr=v1868[32] }
        dx      = { defs={} expr=v1869[32] }
        bx      = { defs={} expr=v1870[32] }
        sp      = { defs={0x08048479} expr=(add[32] v1871[32] -4[32]) }
        bp      = { defs={} expr=v1872[32] }
        si      = { defs={} expr=v1873[32] }
        di      = { defs={} expr=v1874[32] }
        es      = { defs={} expr=v1875[16] }
        cs      = { defs={} expr=v1876[16] }
        ss      = { defs={} expr=v1877[16] }
        ds      = { defs={} expr=v1878[16] }
        fs      = { defs={} expr=v1879[16] }
        gs      = { defs={} expr=v1880[16] }
        cf      = { defs={} expr=v1881[1] }
        ?1      = { defs={} expr=v1882[1] }
        pf      = { defs={} expr=v1883[1] }
        ?3      = { defs={} expr=v1884[1] }
        af      = { defs={} expr=v1885[1] }
        ?5      = { defs={} expr=v1886[1] }
        zf      = { defs={} expr=v1887[1] }
        sf      = { defs={} expr=v1888[1] }
        tf      = { defs={} expr=v1889[1] }
        if      = { defs={} expr=v1890[1] }
        df      = { defs={} expr=v1891[1] }
        of      = { defs={} expr=v1892[1] }
        iopl0   = { defs={} expr=v1893[1] }
        iopl1   = { defs={} expr=v1894[1] }
        nt      = { defs={} expr=v1895[1] }
        ?15     = { defs={} expr=v1896[1] }
        ip      = { defs={0x08048479} expr=0x08048320[32] }
    memory:
        address = { defs={} expr=v1871[32] }
          value = { defs={0x08048472} expr=0[32] }
          flags = { size=4 }
        address = { defs={0x08048479} expr=(add[32] v1871[32] -4[32]) }
          value = { defs={0x08048472,0x08048479} expr=0x0804847e[32] }
          flags = { size=4 }
    ip = defs={0x08048479} expr=0x08048320[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    registers:
        ax      = { defs={} expr=v1929[32] }
        cx      = { defs={} expr=v1930[32] }
        dx      = { defs={} expr=v1931[32] }
        bx      = { defs={} expr=v1932[32] }
        sp      = { defs={0x08048480} expr=(add[32] v1933[32] -4[32]) }
        bp      = { defs={} expr=v1934[32] }
        si      = { defs={} expr=v1935[32] }
        di      = { defs={} expr=v1936[32] }
        es      = { defs={} expr=v1937[16] }
        cs      = { defs={} expr=v1938[16] }
        ss      = { defs={} expr=v1939[16] }
        ds      = { defs={} expr=v1940[16] }
        fs      = { defs={} expr=v1941[16] }
        gs      = { defs={} expr=v1942[16] }
        cf      = { defs={} expr=v1943[1] }
        ?1      = { defs={} expr=v1944[1] }
        pf      = { defs={} expr=v1945[1] }
        ?3      = { defs={} expr=v1946[1] }
        af      = { defs={} expr=v1947[1] }
        ?5      = { defs={} expr=v1948[1] }
        zf      = { defs={} expr=v1949[1] }
        sf      = { defs={} expr=v1950[1] }
        tf      = { defs={} expr=v1951[1] }
        if      = { defs={} expr=v1952[1] }
        df      = { defs={} expr=v1953[1] }
        of      = { defs={} expr=v1954[1] }
        iopl0   = { defs={} expr=v1955[1] }
        iopl1   = { defs={} expr=v1956[1] }
        nt      = { defs={} expr=v1957[1] }
        ?15     = { defs={} expr=v1958[1] }
        ip      = { defs={0x08048480} expr=0x08048481[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v1933[32] -4[32]) }
          value = { defs={0x08048480} expr=v1934[32] }
          flags = { size=4 }
    ip = defs={0x08048480} expr=0x08048481[32]
0x8048481:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v1929[32] }
        cx      = { defs={} expr=v1930[32] }
        dx      = { defs={} expr=v1931[32] }
        bx      = { defs={} expr=v1932[32] }
        sp      = { defs={0x08048480} expr=(add[32] v1933[32] -4[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v1933[32] -4[32]) }
        si      = { defs={} expr=v1935[32] }
        di      = { defs={} expr=v1936[32] }
        es      = { defs={} expr=v1937[16] }
        cs      = { defs={} expr=v1938[16] }
        ss      = { defs={} expr=v1939[16] }
        ds      = { defs={} expr=v1940[16] }
        fs      = { defs={} expr=v1941[16] }
        gs      = { defs={} expr=v1942[16] }
        cf      = { defs={} expr=v1943[1] }
        ?1      = { defs={} expr=v1944[1] }
        pf      = { defs={} expr=v1945[1] }
        ?3      = { defs={} expr=v1946[1] }
        af      = { defs={} expr=v1947[1] }
        ?5      = { defs={} expr=v1948[1] }
        zf      = { defs={} expr=v1949[1] }
        sf      = { defs={} expr=v1950[1] }
        tf      = { defs={} expr=v1951[1] }
        if      = { defs={} expr=v1952[1] }
        df      = { defs={} expr=v1953[1] }
        of      = { defs={} expr=v1954[1] }
        iopl0   = { defs={} expr=v1955[1] }
        iopl1   = { defs={} expr=v1956[1] }
        nt      = { defs={} expr=v1957[1] }
        ?15     = { defs={} expr=v1958[1] }
        ip      = { defs={0x08048480,0x08048481} expr=0x08048483[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v1933[32] -4[32]) }
          value = { defs={0x08048480} expr=v1934[32] }
          flags = { size=4 }
    ip = defs={0x08048480,0x08048481} expr=0x08048483[32]
0x8048483:sub    esp, 0x08
    registers:
        ax      = { defs={} expr=v1929[32] }
        cx      = { defs={} expr=v1930[32] }
        dx      = { defs={} expr=v1931[32] }
        bx      = { defs={} expr=v1932[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v1933[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v1933[32] -4[32]) }
        si      = { defs={} expr=v1935[32] }
        di      = { defs={} expr=v1936[32] }
        es      = { defs={} expr=v1937[16] }
        cs      = { defs={} expr=v1938[16] }
        ss      = { defs={} expr=v1939[16] }
        ds      = { defs={} expr=v1940[16] }
        fs      = { defs={} expr=v1941[16] }
        gs      = { defs={} expr=v1942[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1944[1] }
        pf      = { defs={0x08048480,0x08048483} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1933[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1933[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1933[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1933[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1933[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1933[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1933[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1933[32] -4[32]) -8[32]))))))) }
        ?3      = { defs={} expr=v1946[1] }
        af      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) 4294967288[33])))))) }
        ?5      = { defs={} expr=v1948[1] }
        zf      = { defs={0x08048480,0x08048483} expr=(zerop[1] (add[32] (add[32] v1933[32] -4[32]) -8[32])) }
        sf      = { defs={0x08048480,0x08048483} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v1933[32] -4[32]) -8[32])) }
        tf      = { defs={} expr=v1951[1] }
        if      = { defs={} expr=v1952[1] }
        df      = { defs={} expr=v1953[1] }
        of      = { defs={0x08048480,0x08048483} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) 4294967288[33])))))) }
        iopl0   = { defs={} expr=v1955[1] }
        iopl1   = { defs={} expr=v1956[1] }
        nt      = { defs={} expr=v1957[1] }
        ?15     = { defs={} expr=v1958[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483} expr=0x08048486[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v1933[32] -4[32]) }
          value = { defs={0x08048480} expr=v1934[32] }
          flags = { size=4 }
    ip = defs={0x08048480,0x08048481,0x08048483} expr=0x08048486[32]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    registers:
        ax      = { defs={} expr=v1929[32] }
        cx      = { defs={} expr=v1930[32] }
        dx      = { defs={} expr=v1931[32] }
        bx      = { defs={} expr=v1932[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v1933[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v1933[32] -4[32]) }
        si      = { defs={} expr=v1935[32] }
        di      = { defs={} expr=v1936[32] }
        es      = { defs={} expr=v1937[16] }
        cs      = { defs={} expr=v1938[16] }
        ss      = { defs={} expr=v1939[16] }
        ds      = { defs={} expr=v1940[16] }
        fs      = { defs={} expr=v1941[16] }
        gs      = { defs={} expr=v1942[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1944[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))))))) }
        ?3      = { defs={} expr=v1946[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33]))))) }
        ?5      = { defs={} expr=v1948[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v1959[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v1959[32] 1[32])) }
        tf      = { defs={} expr=v1951[1] }
        if      = { defs={} expr=v1952[1] }
        df      = { defs={} expr=v1953[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v1955[1] }
        iopl1   = { defs={} expr=v1956[1] }
        nt      = { defs={} expr=v1957[1] }
        ?15     = { defs={} expr=v1958[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483,0x08048486} expr=0x0804848c[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v1933[32] -4[32]) }
          value = { defs={0x08048480} expr=v1934[32] }
          flags = { size=4; clobbered }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(add[32] v1959[32] 1[32]) }
          flags = { size=4 }
    ip = defs={0x08048480,0x08048481,0x08048483,0x08048486} expr=0x0804848c[32]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    registers:
        ax      = { defs={} expr=v1929[32] }
        cx      = { defs={} expr=v1930[32] }
        dx      = { defs={} expr=v1931[32] }
        bx      = { defs={} expr=v1932[32] }
        sp      = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v1933[32] -4[32]) -8[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v1933[32] -4[32]) }
        si      = { defs={} expr=v1935[32] }
        di      = { defs={} expr=v1936[32] }
        es      = { defs={} expr=v1937[16] }
        cs      = { defs={} expr=v1938[16] }
        ss      = { defs={} expr=v1939[16] }
        ds      = { defs={} expr=v1940[16] }
        fs      = { defs={} expr=v1941[16] }
        gs      = { defs={} expr=v1942[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1944[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))))))) }
        ?3      = { defs={} expr=v1946[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33]))))) }
        ?5      = { defs={} expr=v1948[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v1959[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v1959[32] 1[32])) }
        tf      = { defs={} expr=v1951[1] }
        if      = { defs={} expr=v1952[1] }
        df      = { defs={} expr=v1953[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v1955[1] }
        iopl1   = { defs={} expr=v1956[1] }
        nt      = { defs={} expr=v1957[1] }
        ?15     = { defs={} expr=v1958[1] }
        ip      = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c} expr=0x08048493[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v1933[32] -4[32]) }
          value = { defs={0x08048480} expr=v1934[32] }
          flags = { size=4; clobbered }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(add[32] v1959[32] 1[32]) }
          flags = { size=4; clobbered }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v1933[32] -4[32]) -8[32]) }
          value = { defs={0x0804848c} expr=0x080485d4[32] }
          flags = { size=4 }
    ip = defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c} expr=0x08048493[32]
0x8048493:call   0x08048300
    registers:
        ax      = { defs={} expr=v1929[32] }
        cx      = { defs={} expr=v1930[32] }
        dx      = { defs={} expr=v1931[32] }
        bx      = { defs={} expr=v1932[32] }
        sp      = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] v1933[32] -4[32]) -8[32]) -4[32]) }
        bp      = { defs={0x08048480,0x08048481} expr=(add[32] v1933[32] -4[32]) }
        si      = { defs={} expr=v1935[32] }
        di      = { defs={} expr=v1936[32] }
        es      = { defs={} expr=v1937[16] }
        cs      = { defs={} expr=v1938[16] }
        ss      = { defs={} expr=v1939[16] }
        ds      = { defs={} expr=v1940[16] }
        fs      = { defs={} expr=v1941[16] }
        gs      = { defs={} expr=v1942[16] }
        cf      = { defs={0x08048480,0x08048483} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1933[32] -4[32])) 4294967288[33])))))) }
        ?1      = { defs={} expr=v1944[1] }
        pf      = { defs={0x08048486} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1959[32] 1[32]))))))) }
        ?3      = { defs={} expr=v1946[1] }
        af      = { defs={0x08048486} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33]))))) }
        ?5      = { defs={} expr=v1948[1] }
        zf      = { defs={0x08048486} expr=(zerop[1] (add[32] v1959[32] 1[32])) }
        sf      = { defs={0x08048486} expr=(extract[1] 31[32] 32[32] (add[32] v1959[32] 1[32])) }
        tf      = { defs={} expr=v1951[1] }
        if      = { defs={} expr=v1952[1] }
        df      = { defs={} expr=v1953[1] }
        of      = { defs={0x08048486} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1959[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1959[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v1955[1] }
        iopl1   = { defs={} expr=v1956[1] }
        nt      = { defs={} expr=v1957[1] }
        ?15     = { defs={} expr=v1958[1] }
        ip      = { defs={0x08048493} expr=0x08048300[32] }
    memory:
        address = { defs={0x08048480} expr=(add[32] v1933[32] -4[32]) }
          value = { defs={0x08048480} expr=v1934[32] }
          flags = { size=4; clobbered }
        address = { defs={0x08048486} expr=0x080496f8[32] }
          value = { defs={0x08048486} expr=(add[32] v1959[32] 1[32]) }
          flags = { size=4; clobbered }
        address = { defs={0x08048480,0x08048483} expr=(add[32] (add[32] v1933[32] -4[32]) -8[32]) }
          value = { defs={0x0804848c} expr=0x080485d4[32] }
          flags = { size=4 }
        address = { defs={0x08048480,0x08048483,0x08048493} expr=(add[32] (add[32] (add[32] v1933[32] -4[32]) -8[32]) -4[32]) }
          value = { defs={0x08048480,0x08048481,0x08048483,0x08048486,0x0804848c,0x08048493} expr=0x08048498[32] }
          flags = { size=4 }
    ip = defs={0x08048493} expr=0x08048300[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    registers:
        ax      = { defs={} expr=v1992[32] }
        cx      = { defs={} expr=v1993[32] }
        dx      = { defs={} expr=v1994[32] }
        bx      = { defs={} expr=v1995[32] }
        sp      = { defs={} expr=v1996[32] }
        bp      = { defs={} expr=v1997[32] }
        si      = { defs={} expr=v1998[32] }
        di      = { defs={} expr=v1999[32] }
        es      = { defs={} expr=v2000[16] }
        cs      = { defs={} expr=v2001[16] }
        ss      = { defs={} expr=v2002[16] }
        ds      = { defs={} expr=v2003[16] }
        fs      = { defs={} expr=v2004[16] }
        gs      = { defs={} expr=v2005[16] }
        cf      = { defs={} expr=v2006[1] }
        ?1      = { defs={} expr=v2007[1] }
        pf      = { defs={} expr=v2008[1] }
        ?3      = { defs={} expr=v2009[1] }
        af      = { defs={} expr=v2010[1] }
        ?5      = { defs={} expr=v2011[1] }
        zf      = { defs={} expr=v2012[1] }
        sf      = { defs={} expr=v2013[1] }
        tf      = { defs={} expr=v2014[1] }
        if      = { defs={} expr=v2015[1] }
        df      = { defs={} expr=v2016[1] }
        of      = { defs={} expr=v2017[1] }
        iopl0   = { defs={} expr=v2018[1] }
        iopl1   = { defs={} expr=v2019[1] }
        nt      = { defs={} expr=v2020[1] }
        ?15     = { defs={} expr=v2021[1] }
        ip      = { defs={0x08048498} expr=0x0804849f[32] }
    memory:
        address = { defs={} expr=v1996[32] }
          value = { defs={0x08048498} expr=0[32] }
          flags = { size=4 }
    ip = defs={0x08048498} expr=0x0804849f[32]
0x804849f:call   0x08048320
    registers:
        ax      = { defs={} expr=v1992[32] }
        cx      = { defs={} expr=v1993[32] }
        dx      = { defs={} expr=v1994[32] }
        bx      = { defs={} expr=v1995[32] }
        sp      = { defs={0x0804849f} expr=(add[32] v1996[32] -4[32]) }
        bp      = { defs={} expr=v1997[32] }
        si      = { defs={} expr=v1998[32] }
        di      = { defs={} expr=v1999[32] }
        es      = { defs={} expr=v2000[16] }
        cs      = { defs={} expr=v2001[16] }
        ss      = { defs={} expr=v2002[16] }
        ds      = { defs={} expr=v2003[16] }
        fs      = { defs={} expr=v2004[16] }
        gs      = { defs={} expr=v2005[16] }
        cf      = { defs={} expr=v2006[1] }
        ?1      = { defs={} expr=v2007[1] }
        pf      = { defs={} expr=v2008[1] }
        ?3      = { defs={} expr=v2009[1] }
        af      = { defs={} expr=v2010[1] }
        ?5      = { defs={} expr=v2011[1] }
        zf      = { defs={} expr=v2012[1] }
        sf      = { defs={} expr=v2013[1] }
        tf      = { defs={} expr=v2014[1] }
        if      = { defs={} expr=v2015[1] }
        df      = { defs={} expr=v2016[1] }
        of      = { defs={} expr=v2017[1] }
        iopl0   = { defs={} expr=v2018[1] }
        iopl1   = { defs={} expr=v2019[1] }
        nt      = { defs={} expr=v2020[1] }
        ?15     = { defs={} expr=v2021[1] }
        ip      = { defs={0x0804849f} expr=0x08048320[32] }
    memory:
        address = { defs={} expr=v1996[32] }
          value = { defs={0x08048498} expr=0[32] }
          flags = { size=4 }
        address = { defs={0x0804849f} expr=(add[32] v1996[32] -4[32]) }
          value = { defs={0x08048498,0x0804849f} expr=0x080484a4[32] }
          flags = { size=4 }
    ip = defs={0x0804849f} expr=0x08048320[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484b0:push   ebp
    registers:
        ax      = { defs={} expr=v2054[32] }
        cx      = { defs={} expr=v2055[32] }
        dx      = { defs={} expr=v2056[32] }
        bx      = { defs={} expr=v2057[32] }
        sp      = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
        bp      = { defs={} expr=v2059[32] }
        si      = { defs={} expr=v2060[32] }
        di      = { defs={} expr=v2061[32] }
        es      = { defs={} expr=v2062[16] }
        cs      = { defs={} expr=v2063[16] }
        ss      = { defs={} expr=v2064[16] }
        ds      = { defs={} expr=v2065[16] }
        fs      = { defs={} expr=v2066[16] }
        gs      = { defs={} expr=v2067[16] }
        cf      = { defs={} expr=v2068[1] }
        ?1      = { defs={} expr=v2069[1] }
        pf      = { defs={} expr=v2070[1] }
        ?3      = { defs={} expr=v2071[1] }
        af      = { defs={} expr=v2072[1] }
        ?5      = { defs={} expr=v2073[1] }
        zf      = { defs={} expr=v2074[1] }
        sf      = { defs={} expr=v2075[1] }
        tf      = { defs={} expr=v2076[1] }
        if      = { defs={} expr=v2077[1] }
        df      = { defs={} expr=v2078[1] }
        of      = { defs={} expr=v2079[1] }
        iopl0   = { defs={} expr=v2080[1] }
        iopl1   = { defs={} expr=v2081[1] }
        nt      = { defs={} expr=v2082[1] }
        ?15     = { defs={} expr=v2083[1] }
        ip      = { defs={0x080484b0} expr=0x080484b1[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
          value = { defs={0x080484b0} expr=v2059[32] }
          flags = { size=4 }
    ip = defs={0x080484b0} expr=0x080484b1[32]
0x80484b1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2054[32] }
        cx      = { defs={} expr=v2055[32] }
        dx      = { defs={} expr=v2056[32] }
        bx      = { defs={} expr=v2057[32] }
        sp      = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v2058[32] -4[32]) }
        si      = { defs={} expr=v2060[32] }
        di      = { defs={} expr=v2061[32] }
        es      = { defs={} expr=v2062[16] }
        cs      = { defs={} expr=v2063[16] }
        ss      = { defs={} expr=v2064[16] }
        ds      = { defs={} expr=v2065[16] }
        fs      = { defs={} expr=v2066[16] }
        gs      = { defs={} expr=v2067[16] }
        cf      = { defs={} expr=v2068[1] }
        ?1      = { defs={} expr=v2069[1] }
        pf      = { defs={} expr=v2070[1] }
        ?3      = { defs={} expr=v2071[1] }
        af      = { defs={} expr=v2072[1] }
        ?5      = { defs={} expr=v2073[1] }
        zf      = { defs={} expr=v2074[1] }
        sf      = { defs={} expr=v2075[1] }
        tf      = { defs={} expr=v2076[1] }
        if      = { defs={} expr=v2077[1] }
        df      = { defs={} expr=v2078[1] }
        of      = { defs={} expr=v2079[1] }
        iopl0   = { defs={} expr=v2080[1] }
        iopl1   = { defs={} expr=v2081[1] }
        nt      = { defs={} expr=v2082[1] }
        ?15     = { defs={} expr=v2083[1] }
        ip      = { defs={0x080484b0,0x080484b1} expr=0x080484b3[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
          value = { defs={0x080484b0} expr=v2059[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1} expr=0x080484b3[32]
0x80484b3:push   edi
    registers:
        ax      = { defs={} expr=v2054[32] }
        cx      = { defs={} expr=v2055[32] }
        dx      = { defs={} expr=v2056[32] }
        bx      = { defs={} expr=v2057[32] }
        sp      = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v2058[32] -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v2058[32] -4[32]) }
        si      = { defs={} expr=v2060[32] }
        di      = { defs={} expr=v2061[32] }
        es      = { defs={} expr=v2062[16] }
        cs      = { defs={} expr=v2063[16] }
        ss      = { defs={} expr=v2064[16] }
        ds      = { defs={} expr=v2065[16] }
        fs      = { defs={} expr=v2066[16] }
        gs      = { defs={} expr=v2067[16] }
        cf      = { defs={} expr=v2068[1] }
        ?1      = { defs={} expr=v2069[1] }
        pf      = { defs={} expr=v2070[1] }
        ?3      = { defs={} expr=v2071[1] }
        af      = { defs={} expr=v2072[1] }
        ?5      = { defs={} expr=v2073[1] }
        zf      = { defs={} expr=v2074[1] }
        sf      = { defs={} expr=v2075[1] }
        tf      = { defs={} expr=v2076[1] }
        if      = { defs={} expr=v2077[1] }
        df      = { defs={} expr=v2078[1] }
        of      = { defs={} expr=v2079[1] }
        iopl0   = { defs={} expr=v2080[1] }
        iopl1   = { defs={} expr=v2081[1] }
        nt      = { defs={} expr=v2082[1] }
        ?15     = { defs={} expr=v2083[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3} expr=0x080484b4[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
          value = { defs={0x080484b0} expr=v2059[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v2058[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v2061[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1,0x080484b3} expr=0x080484b4[32]
0x80484b4:push   esi
    registers:
        ax      = { defs={} expr=v2054[32] }
        cx      = { defs={} expr=v2055[32] }
        dx      = { defs={} expr=v2056[32] }
        bx      = { defs={} expr=v2057[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v2058[32] -4[32]) }
        si      = { defs={} expr=v2060[32] }
        di      = { defs={} expr=v2061[32] }
        es      = { defs={} expr=v2062[16] }
        cs      = { defs={} expr=v2063[16] }
        ss      = { defs={} expr=v2064[16] }
        ds      = { defs={} expr=v2065[16] }
        fs      = { defs={} expr=v2066[16] }
        gs      = { defs={} expr=v2067[16] }
        cf      = { defs={} expr=v2068[1] }
        ?1      = { defs={} expr=v2069[1] }
        pf      = { defs={} expr=v2070[1] }
        ?3      = { defs={} expr=v2071[1] }
        af      = { defs={} expr=v2072[1] }
        ?5      = { defs={} expr=v2073[1] }
        zf      = { defs={} expr=v2074[1] }
        sf      = { defs={} expr=v2075[1] }
        tf      = { defs={} expr=v2076[1] }
        if      = { defs={} expr=v2077[1] }
        df      = { defs={} expr=v2078[1] }
        of      = { defs={} expr=v2079[1] }
        iopl0   = { defs={} expr=v2080[1] }
        iopl1   = { defs={} expr=v2081[1] }
        nt      = { defs={} expr=v2082[1] }
        ?15     = { defs={} expr=v2083[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4} expr=0x080484b5[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
          value = { defs={0x080484b0} expr=v2059[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v2058[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v2061[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=v2060[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4} expr=0x080484b5[32]
0x80484b5:push   ebx
    registers:
        ax      = { defs={} expr=v2054[32] }
        cx      = { defs={} expr=v2055[32] }
        dx      = { defs={} expr=v2056[32] }
        bx      = { defs={} expr=v2057[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v2058[32] -4[32]) }
        si      = { defs={} expr=v2060[32] }
        di      = { defs={} expr=v2061[32] }
        es      = { defs={} expr=v2062[16] }
        cs      = { defs={} expr=v2063[16] }
        ss      = { defs={} expr=v2064[16] }
        ds      = { defs={} expr=v2065[16] }
        fs      = { defs={} expr=v2066[16] }
        gs      = { defs={} expr=v2067[16] }
        cf      = { defs={} expr=v2068[1] }
        ?1      = { defs={} expr=v2069[1] }
        pf      = { defs={} expr=v2070[1] }
        ?3      = { defs={} expr=v2071[1] }
        af      = { defs={} expr=v2072[1] }
        ?5      = { defs={} expr=v2073[1] }
        zf      = { defs={} expr=v2074[1] }
        sf      = { defs={} expr=v2075[1] }
        tf      = { defs={} expr=v2076[1] }
        if      = { defs={} expr=v2077[1] }
        df      = { defs={} expr=v2078[1] }
        of      = { defs={} expr=v2079[1] }
        iopl0   = { defs={} expr=v2080[1] }
        iopl1   = { defs={} expr=v2081[1] }
        nt      = { defs={} expr=v2082[1] }
        ?15     = { defs={} expr=v2083[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5} expr=0x080484b6[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
          value = { defs={0x080484b0} expr=v2059[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v2058[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v2061[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=v2060[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=v2057[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5} expr=0x080484b6[32]
0x80484b6:sub    esp, 0x0c
    registers:
        ax      = { defs={} expr=v2054[32] }
        cx      = { defs={} expr=v2055[32] }
        dx      = { defs={} expr=v2056[32] }
        bx      = { defs={} expr=v2057[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v2058[32] -4[32]) }
        si      = { defs={} expr=v2060[32] }
        di      = { defs={} expr=v2061[32] }
        es      = { defs={} expr=v2062[16] }
        cs      = { defs={} expr=v2063[16] }
        ss      = { defs={} expr=v2064[16] }
        ds      = { defs={} expr=v2065[16] }
        fs      = { defs={} expr=v2066[16] }
        gs      = { defs={} expr=v2067[16] }
        cf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v2069[1] }
        pf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v2071[1] }
        af      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v2073[1] }
        zf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v2076[1] }
        if      = { defs={} expr=v2077[1] }
        df      = { defs={} expr=v2078[1] }
        of      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v2080[1] }
        iopl1   = { defs={} expr=v2081[1] }
        nt      = { defs={} expr=v2082[1] }
        ?15     = { defs={} expr=v2083[1] }
        ip      = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=0x080484b9[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
          value = { defs={0x080484b0} expr=v2059[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v2058[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v2061[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=v2060[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=v2057[32] }
          flags = { size=4 }
    ip = defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=0x080484b9[32]
0x80484b9:call   0x080484be
    registers:
        ax      = { defs={} expr=v2054[32] }
        cx      = { defs={} expr=v2055[32] }
        dx      = { defs={} expr=v2056[32] }
        bx      = { defs={} expr=v2057[32] }
        sp      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
        bp      = { defs={0x080484b0,0x080484b1} expr=(add[32] v2058[32] -4[32]) }
        si      = { defs={} expr=v2060[32] }
        di      = { defs={} expr=v2061[32] }
        es      = { defs={} expr=v2062[16] }
        cs      = { defs={} expr=v2063[16] }
        ss      = { defs={} expr=v2064[16] }
        ds      = { defs={} expr=v2065[16] }
        fs      = { defs={} expr=v2066[16] }
        gs      = { defs={} expr=v2067[16] }
        cf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v2069[1] }
        pf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v2071[1] }
        af      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v2073[1] }
        zf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v2076[1] }
        if      = { defs={} expr=v2077[1] }
        df      = { defs={} expr=v2078[1] }
        of      = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v2080[1] }
        iopl1   = { defs={} expr=v2081[1] }
        nt      = { defs={} expr=v2082[1] }
        ?15     = { defs={} expr=v2083[1] }
        ip      = { defs={0x080484b9} expr=0x080484be[32] }
    memory:
        address = { defs={0x080484b0} expr=(add[32] v2058[32] -4[32]) }
          value = { defs={0x080484b0} expr=v2059[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3} expr=(add[32] (add[32] v2058[32] -4[32]) -4[32]) }
          value = { defs={0x080484b3} expr=v2061[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4} expr=(add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b4} expr=v2060[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5} expr=(add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080484b5} expr=v2057[32] }
          flags = { size=4 }
        address = { defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2058[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
          value = { defs={0x080484b0,0x080484b1,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9} expr=0x080484be[32] }
          flags = { size=4 }
    ip = defs={0x080484b9} expr=0x080484be[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    registers:
        ax      = { defs={} expr=v2116[32] }
        cx      = { defs={} expr=v2117[32] }
        dx      = { defs={} expr=v2118[32] }
        bx      = { defs={0x080484be} expr=v2146[32] }
        sp      = { defs={0x080484be} expr=(add[32] v2120[32] 4[32]) }
        bp      = { defs={} expr=v2121[32] }
        si      = { defs={} expr=v2122[32] }
        di      = { defs={} expr=v2123[32] }
        es      = { defs={} expr=v2124[16] }
        cs      = { defs={} expr=v2125[16] }
        ss      = { defs={} expr=v2126[16] }
        ds      = { defs={} expr=v2127[16] }
        fs      = { defs={} expr=v2128[16] }
        gs      = { defs={} expr=v2129[16] }
        cf      = { defs={} expr=v2130[1] }
        ?1      = { defs={} expr=v2131[1] }
        pf      = { defs={} expr=v2132[1] }
        ?3      = { defs={} expr=v2133[1] }
        af      = { defs={} expr=v2134[1] }
        ?5      = { defs={} expr=v2135[1] }
        zf      = { defs={} expr=v2136[1] }
        sf      = { defs={} expr=v2137[1] }
        tf      = { defs={} expr=v2138[1] }
        if      = { defs={} expr=v2139[1] }
        df      = { defs={} expr=v2140[1] }
        of      = { defs={} expr=v2141[1] }
        iopl0   = { defs={} expr=v2142[1] }
        iopl1   = { defs={} expr=v2143[1] }
        nt      = { defs={} expr=v2144[1] }
        ?15     = { defs={} expr=v2145[1] }
        ip      = { defs={0x080484be} expr=0x080484bf[32] }
    memory:
        address = { defs={} expr=v2120[32] }
          value = { defs={} expr=v2146[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484be} expr=0x080484bf[32]
0x80484bf:add    ebx, 0x0000120a
    registers:
        ax      = { defs={} expr=v2116[32] }
        cx      = { defs={} expr=v2117[32] }
        dx      = { defs={} expr=v2118[32] }
        bx      = { defs={0x080484be,0x080484bf} expr=(add[32] v2146[32] 4618[32]) }
        sp      = { defs={0x080484be} expr=(add[32] v2120[32] 4[32]) }
        bp      = { defs={} expr=v2121[32] }
        si      = { defs={} expr=v2122[32] }
        di      = { defs={} expr=v2123[32] }
        es      = { defs={} expr=v2124[16] }
        cs      = { defs={} expr=v2125[16] }
        ss      = { defs={} expr=v2126[16] }
        ds      = { defs={} expr=v2127[16] }
        fs      = { defs={} expr=v2128[16] }
        gs      = { defs={} expr=v2129[16] }
        cf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2146[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2146[32]) 4618[33]))))) }
        ?1      = { defs={} expr=v2131[1] }
        pf      = { defs={0x080484be,0x080484bf} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))))))) }
        ?3      = { defs={} expr=v2133[1] }
        af      = { defs={0x080484be,0x080484bf} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2146[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2146[32]) 4618[33]))))) }
        ?5      = { defs={} expr=v2135[1] }
        zf      = { defs={0x080484be,0x080484bf} expr=(zerop[1] (add[32] v2146[32] 4618[32])) }
        sf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (add[32] v2146[32] 4618[32])) }
        tf      = { defs={} expr=v2138[1] }
        if      = { defs={} expr=v2139[1] }
        df      = { defs={} expr=v2140[1] }
        of      = { defs={0x080484be,0x080484bf} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2146[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2146[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2146[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2146[32]) 4618[33])))))) }
        iopl0   = { defs={} expr=v2142[1] }
        iopl1   = { defs={} expr=v2143[1] }
        nt      = { defs={} expr=v2144[1] }
        ?15     = { defs={} expr=v2145[1] }
        ip      = { defs={0x080484be,0x080484bf} expr=0x080484c5[32] }
    memory:
        address = { defs={} expr=v2120[32] }
          value = { defs={} expr=v2146[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484be,0x080484bf} expr=0x080484c5[32]
0x80484c5:call   0x080482c8
    registers:
        ax      = { defs={} expr=v2116[32] }
        cx      = { defs={} expr=v2117[32] }
        dx      = { defs={} expr=v2118[32] }
        bx      = { defs={0x080484be,0x080484bf} expr=(add[32] v2146[32] 4618[32]) }
        sp      = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] v2120[32] 4[32]) -4[32]) }
        bp      = { defs={} expr=v2121[32] }
        si      = { defs={} expr=v2122[32] }
        di      = { defs={} expr=v2123[32] }
        es      = { defs={} expr=v2124[16] }
        cs      = { defs={} expr=v2125[16] }
        ss      = { defs={} expr=v2126[16] }
        ds      = { defs={} expr=v2127[16] }
        fs      = { defs={} expr=v2128[16] }
        gs      = { defs={} expr=v2129[16] }
        cf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2146[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2146[32]) 4618[33]))))) }
        ?1      = { defs={} expr=v2131[1] }
        pf      = { defs={0x080484be,0x080484bf} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2146[32] 4618[32]))))))) }
        ?3      = { defs={} expr=v2133[1] }
        af      = { defs={0x080484be,0x080484bf} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2146[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2146[32]) 4618[33]))))) }
        ?5      = { defs={} expr=v2135[1] }
        zf      = { defs={0x080484be,0x080484bf} expr=(zerop[1] (add[32] v2146[32] 4618[32])) }
        sf      = { defs={0x080484be,0x080484bf} expr=(extract[1] 31[32] 32[32] (add[32] v2146[32] 4618[32])) }
        tf      = { defs={} expr=v2138[1] }
        if      = { defs={} expr=v2139[1] }
        df      = { defs={} expr=v2140[1] }
        of      = { defs={0x080484be,0x080484bf} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2146[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2146[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2146[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2146[32]) 4618[33])))))) }
        iopl0   = { defs={} expr=v2142[1] }
        iopl1   = { defs={} expr=v2143[1] }
        nt      = { defs={} expr=v2144[1] }
        ?15     = { defs={} expr=v2145[1] }
        ip      = { defs={0x080484c5} expr=0x080482c8[32] }
    memory:
        address = { defs={0x080484be,0x080484c5} expr=(add[32] (add[32] v2120[32] 4[32]) -4[32]) }
          value = { defs={0x080484be,0x080484bf,0x080484c5} expr=0x080484ca[32] }
          flags = { size=4 }
    ip = defs={0x080484c5} expr=0x080482c8[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x080484ca} expr=(add[32] v2182[32] -224[32]) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={} expr=v2181[32] }
        bx      = { defs={} expr=v2182[32] }
        sp      = { defs={} expr=v2183[32] }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={} expr=v2185[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={} expr=v2193[1] }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={} expr=v2195[1] }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={} expr=v2197[1] }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={} expr=v2199[1] }
        sf      = { defs={} expr=v2200[1] }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={} expr=v2204[1] }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca} expr=0x080484d0[32] }
    memory:
        (empty)
    ip = defs={0x080484ca} expr=0x080484d0[32]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x080484ca} expr=(add[32] v2182[32] -224[32]) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={} expr=v2182[32] }
        sp      = { defs={} expr=v2183[32] }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={} expr=v2185[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={} expr=v2193[1] }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={} expr=v2195[1] }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={} expr=v2197[1] }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={} expr=v2199[1] }
        sf      = { defs={} expr=v2200[1] }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={} expr=v2204[1] }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0} expr=0x080484d6[32] }
    memory:
        (empty)
    ip = defs={0x080484ca,0x080484d0} expr=0x080484d6[32]
0x80484d6:sub    eax, edx
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={} expr=v2182[32] }
        sp      = { defs={} expr=v2183[32] }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={} expr=v2185[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2182[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2182[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v2182[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2182[32] -224[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=1[1] }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2182[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2182[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v2182[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2182[32] -224[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(zerop[1] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=0[1] }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6} expr=0x080484d8[32] }
    memory:
        (empty)
    ip = defs={0x080484ca,0x080484d0,0x080484d6} expr=0x080484d8[32]
0x80484d8:sar    eax, 0x02
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={} expr=v2182[32] }
        sp      = { defs={} expr=v2183[32] }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={} expr=v2185[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=1[1] }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484d8} expr=v2209[1] }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484d8} expr=0[1] }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=0x080484db[32] }
    memory:
        (empty)
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=0x080484db[32]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={} expr=v2182[32] }
        sp      = { defs={} expr=v2183[32] }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={} expr=v2185[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=1[1] }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484d8} expr=v2209[1] }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484d8} expr=0[1] }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=0x080484de[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v2184[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=0x080484de[32]
0x80484de:jne    0x080484f0
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={} expr=v2182[32] }
        sp      = { defs={} expr=v2183[32] }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={} expr=v2185[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=1[1] }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484d8} expr=v2209[1] }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        sf      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32])))) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484d8} expr=0[1] }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de} expr=0x080484e0[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v2184[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de} expr=0x080484e0[32]
0x80484e0:add    esp, 0x0c
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={} expr=v2182[32] }
        sp      = { defs={0x080484e0} expr=(add[32] v2183[32] 12[32]) }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={} expr=v2185[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v2183[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v2183[32] 12[32])) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0} expr=0x080484e3[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v2184[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0} expr=0x080484e3[32]
0x80484e3:pop    ebx
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={0x080484e3} expr=v2210[32] }
        sp      = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v2183[32] 12[32]) 4[32]) }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={} expr=v2185[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v2183[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v2183[32] 12[32])) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0,0x080484e3} expr=0x080484e4[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v2184[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
          flags = { size=4 }
        address = { defs={0x080484e0} expr=(add[32] v2183[32] 12[32]) }
          value = { defs={} expr=v2210[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0,0x080484e3} expr=0x080484e4[32]
0x80484e4:pop    esi
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={0x080484e3} expr=v2210[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={0x080484e4} expr=v2211[32] }
        di      = { defs={} expr=v2186[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v2183[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v2183[32] 12[32])) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0,0x080484e3,0x080484e4} expr=0x080484e5[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v2184[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
          flags = { size=4 }
        address = { defs={0x080484e0} expr=(add[32] v2183[32] 12[32]) }
          value = { defs={} expr=v2210[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v2183[32] 12[32]) 4[32]) }
          value = { defs={} expr=v2211[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0,0x080484e3,0x080484e4} expr=0x080484e5[32]
0x80484e5:pop    edi
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={0x080484e3} expr=v2210[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v2184[32] }
        si      = { defs={0x080484e4} expr=v2211[32] }
        di      = { defs={0x080484e5} expr=v2212[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v2183[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v2183[32] 12[32])) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=0x080484e6[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v2184[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
          flags = { size=4 }
        address = { defs={0x080484e0} expr=(add[32] v2183[32] 12[32]) }
          value = { defs={} expr=v2210[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v2183[32] 12[32]) 4[32]) }
          value = { defs={} expr=v2211[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2212[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=0x080484e6[32]
0x80484e6:pop    ebp
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={0x080484e3} expr=v2210[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080484e6} expr=v2213[32] }
        si      = { defs={0x080484e4} expr=v2211[32] }
        di      = { defs={0x080484e5} expr=v2212[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v2183[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v2183[32] 12[32])) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=0x080484e7[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v2184[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
          flags = { size=4 }
        address = { defs={0x080484e0} expr=(add[32] v2183[32] 12[32]) }
          value = { defs={} expr=v2210[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v2183[32] 12[32]) 4[32]) }
          value = { defs={} expr=v2211[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2212[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2213[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db,0x080484de,0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=0x080484e7[32]
0x80484e7:ret    
    registers:
        ax      = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2180[32] }
        dx      = { defs={0x080484d0} expr=(add[32] v2182[32] -224[32]) }
        bx      = { defs={0x080484e3} expr=v2210[32] }
        sp      = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080484e6} expr=v2213[32] }
        si      = { defs={0x080484e4} expr=v2211[32] }
        di      = { defs={0x080484e5} expr=v2212[32] }
        es      = { defs={} expr=v2187[16] }
        cs      = { defs={} expr=v2188[16] }
        ss      = { defs={} expr=v2189[16] }
        ds      = { defs={} expr=v2190[16] }
        fs      = { defs={} expr=v2191[16] }
        gs      = { defs={} expr=v2192[16] }
        cf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2194[1] }
        pf      = { defs={0x080484e0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2183[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2196[1] }
        af      = { defs={0x080484e0} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2198[1] }
        zf      = { defs={0x080484e0} expr=(zerop[1] (add[32] v2183[32] 12[32])) }
        sf      = { defs={0x080484e0} expr=(extract[1] 31[32] 32[32] (add[32] v2183[32] 12[32])) }
        tf      = { defs={} expr=v2201[1] }
        if      = { defs={} expr=v2202[1] }
        df      = { defs={} expr=v2203[1] }
        of      = { defs={0x080484e0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2183[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2183[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2205[1] }
        iopl1   = { defs={} expr=v2206[1] }
        nt      = { defs={} expr=v2207[1] }
        ?15     = { defs={} expr=v2208[1] }
        ip      = { defs={0x080484e7} expr=v2214[32] }
    memory:
        address = { defs={0x080484db} expr=(add[32] v2184[32] -16[32]) }
          value = { defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484db} expr=(asr[32] 2[5] (add[32] (add[32] v2182[32] -224[32]) (add[32] (invert[32] (add[32] v2182[32] -224[32])) 1[32]))) }
          flags = { size=4 }
        address = { defs={0x080484e0} expr=(add[32] v2183[32] 12[32]) }
          value = { defs={} expr=v2210[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3} expr=(add[32] (add[32] v2183[32] 12[32]) 4[32]) }
          value = { defs={} expr=v2211[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4} expr=(add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2212[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5} expr=(add[32] (add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2213[32] }
          flags = { size=4; read-only }
        address = { defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2183[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2214[32] }
          flags = { size=4; read-only }
    ip = defs={0x080484e7} expr=v2214[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    registers:
        ax      = { defs={} expr=v2247[32] }
        cx      = { defs={} expr=v2248[32] }
        dx      = { defs={} expr=v2249[32] }
        bx      = { defs={} expr=v2250[32] }
        sp      = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
        bp      = { defs={} expr=v2252[32] }
        si      = { defs={} expr=v2253[32] }
        di      = { defs={} expr=v2254[32] }
        es      = { defs={} expr=v2255[16] }
        cs      = { defs={} expr=v2256[16] }
        ss      = { defs={} expr=v2257[16] }
        ds      = { defs={} expr=v2258[16] }
        fs      = { defs={} expr=v2259[16] }
        gs      = { defs={} expr=v2260[16] }
        cf      = { defs={} expr=v2261[1] }
        ?1      = { defs={} expr=v2262[1] }
        pf      = { defs={} expr=v2263[1] }
        ?3      = { defs={} expr=v2264[1] }
        af      = { defs={} expr=v2265[1] }
        ?5      = { defs={} expr=v2266[1] }
        zf      = { defs={} expr=v2267[1] }
        sf      = { defs={} expr=v2268[1] }
        tf      = { defs={} expr=v2269[1] }
        if      = { defs={} expr=v2270[1] }
        df      = { defs={} expr=v2271[1] }
        of      = { defs={} expr=v2272[1] }
        iopl0   = { defs={} expr=v2273[1] }
        iopl1   = { defs={} expr=v2274[1] }
        nt      = { defs={} expr=v2275[1] }
        ?15     = { defs={} expr=v2276[1] }
        ip      = { defs={0x08048520} expr=0x08048521[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
          value = { defs={0x08048520} expr=v2252[32] }
          flags = { size=4 }
    ip = defs={0x08048520} expr=0x08048521[32]
0x8048521:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2247[32] }
        cx      = { defs={} expr=v2248[32] }
        dx      = { defs={} expr=v2249[32] }
        bx      = { defs={} expr=v2250[32] }
        sp      = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v2251[32] -4[32]) }
        si      = { defs={} expr=v2253[32] }
        di      = { defs={} expr=v2254[32] }
        es      = { defs={} expr=v2255[16] }
        cs      = { defs={} expr=v2256[16] }
        ss      = { defs={} expr=v2257[16] }
        ds      = { defs={} expr=v2258[16] }
        fs      = { defs={} expr=v2259[16] }
        gs      = { defs={} expr=v2260[16] }
        cf      = { defs={} expr=v2261[1] }
        ?1      = { defs={} expr=v2262[1] }
        pf      = { defs={} expr=v2263[1] }
        ?3      = { defs={} expr=v2264[1] }
        af      = { defs={} expr=v2265[1] }
        ?5      = { defs={} expr=v2266[1] }
        zf      = { defs={} expr=v2267[1] }
        sf      = { defs={} expr=v2268[1] }
        tf      = { defs={} expr=v2269[1] }
        if      = { defs={} expr=v2270[1] }
        df      = { defs={} expr=v2271[1] }
        of      = { defs={} expr=v2272[1] }
        iopl0   = { defs={} expr=v2273[1] }
        iopl1   = { defs={} expr=v2274[1] }
        nt      = { defs={} expr=v2275[1] }
        ?15     = { defs={} expr=v2276[1] }
        ip      = { defs={0x08048520,0x08048521} expr=0x08048523[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
          value = { defs={0x08048520} expr=v2252[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521} expr=0x08048523[32]
0x8048523:push   edi
    registers:
        ax      = { defs={} expr=v2247[32] }
        cx      = { defs={} expr=v2248[32] }
        dx      = { defs={} expr=v2249[32] }
        bx      = { defs={} expr=v2250[32] }
        sp      = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v2251[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v2251[32] -4[32]) }
        si      = { defs={} expr=v2253[32] }
        di      = { defs={} expr=v2254[32] }
        es      = { defs={} expr=v2255[16] }
        cs      = { defs={} expr=v2256[16] }
        ss      = { defs={} expr=v2257[16] }
        ds      = { defs={} expr=v2258[16] }
        fs      = { defs={} expr=v2259[16] }
        gs      = { defs={} expr=v2260[16] }
        cf      = { defs={} expr=v2261[1] }
        ?1      = { defs={} expr=v2262[1] }
        pf      = { defs={} expr=v2263[1] }
        ?3      = { defs={} expr=v2264[1] }
        af      = { defs={} expr=v2265[1] }
        ?5      = { defs={} expr=v2266[1] }
        zf      = { defs={} expr=v2267[1] }
        sf      = { defs={} expr=v2268[1] }
        tf      = { defs={} expr=v2269[1] }
        if      = { defs={} expr=v2270[1] }
        df      = { defs={} expr=v2271[1] }
        of      = { defs={} expr=v2272[1] }
        iopl0   = { defs={} expr=v2273[1] }
        iopl1   = { defs={} expr=v2274[1] }
        nt      = { defs={} expr=v2275[1] }
        ?15     = { defs={} expr=v2276[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523} expr=0x08048524[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
          value = { defs={0x08048520} expr=v2252[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v2251[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v2254[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521,0x08048523} expr=0x08048524[32]
0x8048524:push   esi
    registers:
        ax      = { defs={} expr=v2247[32] }
        cx      = { defs={} expr=v2248[32] }
        dx      = { defs={} expr=v2249[32] }
        bx      = { defs={} expr=v2250[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v2251[32] -4[32]) }
        si      = { defs={} expr=v2253[32] }
        di      = { defs={} expr=v2254[32] }
        es      = { defs={} expr=v2255[16] }
        cs      = { defs={} expr=v2256[16] }
        ss      = { defs={} expr=v2257[16] }
        ds      = { defs={} expr=v2258[16] }
        fs      = { defs={} expr=v2259[16] }
        gs      = { defs={} expr=v2260[16] }
        cf      = { defs={} expr=v2261[1] }
        ?1      = { defs={} expr=v2262[1] }
        pf      = { defs={} expr=v2263[1] }
        ?3      = { defs={} expr=v2264[1] }
        af      = { defs={} expr=v2265[1] }
        ?5      = { defs={} expr=v2266[1] }
        zf      = { defs={} expr=v2267[1] }
        sf      = { defs={} expr=v2268[1] }
        tf      = { defs={} expr=v2269[1] }
        if      = { defs={} expr=v2270[1] }
        df      = { defs={} expr=v2271[1] }
        of      = { defs={} expr=v2272[1] }
        iopl0   = { defs={} expr=v2273[1] }
        iopl1   = { defs={} expr=v2274[1] }
        nt      = { defs={} expr=v2275[1] }
        ?15     = { defs={} expr=v2276[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524} expr=0x08048525[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
          value = { defs={0x08048520} expr=v2252[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v2251[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v2254[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=v2253[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521,0x08048523,0x08048524} expr=0x08048525[32]
0x8048525:push   ebx
    registers:
        ax      = { defs={} expr=v2247[32] }
        cx      = { defs={} expr=v2248[32] }
        dx      = { defs={} expr=v2249[32] }
        bx      = { defs={} expr=v2250[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v2251[32] -4[32]) }
        si      = { defs={} expr=v2253[32] }
        di      = { defs={} expr=v2254[32] }
        es      = { defs={} expr=v2255[16] }
        cs      = { defs={} expr=v2256[16] }
        ss      = { defs={} expr=v2257[16] }
        ds      = { defs={} expr=v2258[16] }
        fs      = { defs={} expr=v2259[16] }
        gs      = { defs={} expr=v2260[16] }
        cf      = { defs={} expr=v2261[1] }
        ?1      = { defs={} expr=v2262[1] }
        pf      = { defs={} expr=v2263[1] }
        ?3      = { defs={} expr=v2264[1] }
        af      = { defs={} expr=v2265[1] }
        ?5      = { defs={} expr=v2266[1] }
        zf      = { defs={} expr=v2267[1] }
        sf      = { defs={} expr=v2268[1] }
        tf      = { defs={} expr=v2269[1] }
        if      = { defs={} expr=v2270[1] }
        df      = { defs={} expr=v2271[1] }
        of      = { defs={} expr=v2272[1] }
        iopl0   = { defs={} expr=v2273[1] }
        iopl1   = { defs={} expr=v2274[1] }
        nt      = { defs={} expr=v2275[1] }
        ?15     = { defs={} expr=v2276[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525} expr=0x08048526[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
          value = { defs={0x08048520} expr=v2252[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v2251[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v2254[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=v2253[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=v2250[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525} expr=0x08048526[32]
0x8048526:sub    esp, 0x0c
    registers:
        ax      = { defs={} expr=v2247[32] }
        cx      = { defs={} expr=v2248[32] }
        dx      = { defs={} expr=v2249[32] }
        bx      = { defs={} expr=v2250[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v2251[32] -4[32]) }
        si      = { defs={} expr=v2253[32] }
        di      = { defs={} expr=v2254[32] }
        es      = { defs={} expr=v2255[16] }
        cs      = { defs={} expr=v2256[16] }
        ss      = { defs={} expr=v2257[16] }
        ds      = { defs={} expr=v2258[16] }
        fs      = { defs={} expr=v2259[16] }
        gs      = { defs={} expr=v2260[16] }
        cf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v2262[1] }
        pf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v2264[1] }
        af      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v2266[1] }
        zf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v2269[1] }
        if      = { defs={} expr=v2270[1] }
        df      = { defs={} expr=v2271[1] }
        of      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v2273[1] }
        iopl1   = { defs={} expr=v2274[1] }
        nt      = { defs={} expr=v2275[1] }
        ?15     = { defs={} expr=v2276[1] }
        ip      = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526} expr=0x08048529[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
          value = { defs={0x08048520} expr=v2252[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v2251[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v2254[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=v2253[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=v2250[32] }
          flags = { size=4 }
    ip = defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526} expr=0x08048529[32]
0x8048529:call   0x0804852e
    registers:
        ax      = { defs={} expr=v2247[32] }
        cx      = { defs={} expr=v2248[32] }
        dx      = { defs={} expr=v2249[32] }
        bx      = { defs={} expr=v2250[32] }
        sp      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
        bp      = { defs={0x08048520,0x08048521} expr=(add[32] v2251[32] -4[32]) }
        si      = { defs={} expr=v2253[32] }
        di      = { defs={} expr=v2254[32] }
        es      = { defs={} expr=v2255[16] }
        cs      = { defs={} expr=v2256[16] }
        ss      = { defs={} expr=v2257[16] }
        ds      = { defs={} expr=v2258[16] }
        fs      = { defs={} expr=v2259[16] }
        gs      = { defs={} expr=v2260[16] }
        cf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?1      = { defs={} expr=v2262[1] }
        pf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))))) }
        ?3      = { defs={} expr=v2264[1] }
        af      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        ?5      = { defs={} expr=v2266[1] }
        zf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        sf      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])) }
        tf      = { defs={} expr=v2269[1] }
        if      = { defs={} expr=v2270[1] }
        df      = { defs={} expr=v2271[1] }
        of      = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33])))))) }
        iopl0   = { defs={} expr=v2273[1] }
        iopl1   = { defs={} expr=v2274[1] }
        nt      = { defs={} expr=v2275[1] }
        ?15     = { defs={} expr=v2276[1] }
        ip      = { defs={0x08048529} expr=0x0804852e[32] }
    memory:
        address = { defs={0x08048520} expr=(add[32] v2251[32] -4[32]) }
          value = { defs={0x08048520} expr=v2252[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523} expr=(add[32] (add[32] v2251[32] -4[32]) -4[32]) }
          value = { defs={0x08048523} expr=v2254[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524} expr=(add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048524} expr=v2253[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525} expr=(add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x08048525} expr=v2250[32] }
          flags = { size=4 }
        address = { defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2251[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]) }
          value = { defs={0x08048520,0x08048521,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529} expr=0x0804852e[32] }
          flags = { size=4 }
    ip = defs={0x08048529} expr=0x0804852e[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    registers:
        ax      = { defs={} expr=v2309[32] }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={} expr=v2311[32] }
        bx      = { defs={0x0804852e} expr=v2339[32] }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={} expr=v2323[1] }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={} expr=v2325[1] }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={} expr=v2327[1] }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={} expr=v2329[1] }
        sf      = { defs={} expr=v2330[1] }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={} expr=v2334[1] }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e} expr=0x0804852f[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e} expr=0x0804852f[32]
0x804852f:add    ebx, 0x0000119a
    registers:
        ax      = { defs={} expr=v2309[32] }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={} expr=v2311[32] }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v2339[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v2339[32] 4506[32])) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f} expr=0x08048535[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f} expr=0x08048535[32]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={} expr=v2311[32] }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v2339[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v2339[32] 4506[32])) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535} expr=0x0804853b[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f,0x08048535} expr=0x0804853b[32]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2339[32] 4506[32]))))))) }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f} expr=(zerop[1] (add[32] v2339[32] 4506[32])) }
        sf      = { defs={0x0804852e,0x0804852f} expr=(extract[1] 31[32] 32[32] (add[32] v2339[32] 4506[32])) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x0804852e,0x0804852f} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2339[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2339[32]) 4506[33])))))) }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b} expr=0x08048541[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b} expr=0x08048541[32]
0x8048541:sub    eax, edx
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32])) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=1[1] }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(zerop[1] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=0[1] }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=0x08048543[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541} expr=0x08048543[32]
0x8048543:sar    eax, 0x02
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=1[1] }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x08048543} expr=v2340[1] }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32])))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32])))) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x08048543} expr=0[1] }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=0x08048546[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=0x08048546[32]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=1[1] }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x08048543} expr=v2340[1] }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32])))) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32])))) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x08048543} expr=0[1] }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=0x08048549[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048546} expr=(add[32] v2314[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=0x08048549[32]
0x8048549:dec    eax
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543} expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32])))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=1[1] }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=1[1] }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=0[1] }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549} expr=0x0804854a[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048546} expr=(add[32] v2314[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549} expr=0x0804854a[32]
0x804854a:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=1[1] }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=0[1] }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a} expr=0x0804854d[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048546} expr=(add[32] v2314[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546,0x08048549,0x0804854a} expr=0x0804854d[32]
0x804854d:je     0x0804856b
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e} expr=(add[32] v2313[32] 4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=1[1] }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=0[1] }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a,0x0804854d} expr=0x0804856b[32] }
    memory:
        address = { defs={} expr=v2313[32] }
          value = { defs={} expr=v2339[32] }
          flags = { size=4; read-only; clobbered }
        address = { defs={0x08048546} expr=(add[32] v2314[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4 }
    ip = defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a,0x0804854d} expr=0x0804856b[32]
0x804856b:call   0x080485b0
    registers:
        ax      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549} expr=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) }
        cx      = { defs={} expr=v2310[32] }
        dx      = { defs={0x0804852e,0x0804852f,0x0804853b} expr=(add[32] (add[32] v2339[32] 4506[32]) -224[32]) }
        bx      = { defs={0x0804852e,0x0804852f} expr=(add[32] v2339[32] 4506[32]) }
        sp      = { defs={0x0804852e,0x0804856b} expr=(add[32] (add[32] v2313[32] 4[32]) -4[32]) }
        bp      = { defs={} expr=v2314[32] }
        si      = { defs={} expr=v2315[32] }
        di      = { defs={} expr=v2316[32] }
        es      = { defs={} expr=v2317[16] }
        cs      = { defs={} expr=v2318[16] }
        ss      = { defs={} expr=v2319[16] }
        ds      = { defs={} expr=v2320[16] }
        fs      = { defs={} expr=v2321[16] }
        gs      = { defs={} expr=v2322[16] }
        cf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?1      = { defs={} expr=v2324[1] }
        pf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=1[1] }
        ?3      = { defs={} expr=v2326[1] }
        af      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33])))))) }
        ?5      = { defs={} expr=v2328[1] }
        zf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        sf      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) }
        tf      = { defs={} expr=v2331[1] }
        if      = { defs={} expr=v2332[1] }
        df      = { defs={} expr=v2333[1] }
        of      = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a} expr=0[1] }
        iopl0   = { defs={} expr=v2335[1] }
        iopl1   = { defs={} expr=v2336[1] }
        nt      = { defs={} expr=v2337[1] }
        ?15     = { defs={} expr=v2338[1] }
        ip      = { defs={0x0804856b} expr=0x080485b0[32] }
    memory:
        address = { defs={0x0804852e,0x0804856b} expr=(add[32] (add[32] v2313[32] 4[32]) -4[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a,0x0804854d,0x0804856b} expr=0x08048570[32] }
          flags = { size=4 }
        address = { defs={0x08048546} expr=(add[32] v2314[32] -16[32]) }
          value = { defs={0x0804852e,0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048546} expr=(asr[32] 2[5] (add[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2339[32] 4506[32]) -224[32])) 1[32]))) }
          flags = { size=4; clobbered }
    ip = defs={0x0804856b} expr=0x080485b0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    registers:
        ax      = { defs={} expr=v2373[32] }
        cx      = { defs={} expr=v2374[32] }
        dx      = { defs={} expr=v2375[32] }
        bx      = { defs={} expr=v2376[32] }
        sp      = { defs={} expr=v2377[32] }
        bp      = { defs={} expr=v2378[32] }
        si      = { defs={0x0804854f} expr=(add[32] v2375[32] (extract[32] 0[32] 32[32] (umul[40] v2373[32] 4[8]))) }
        di      = { defs={} expr=v2380[32] }
        es      = { defs={} expr=v2381[16] }
        cs      = { defs={} expr=v2382[16] }
        ss      = { defs={} expr=v2383[16] }
        ds      = { defs={} expr=v2384[16] }
        fs      = { defs={} expr=v2385[16] }
        gs      = { defs={} expr=v2386[16] }
        cf      = { defs={} expr=v2387[1] }
        ?1      = { defs={} expr=v2388[1] }
        pf      = { defs={} expr=v2389[1] }
        ?3      = { defs={} expr=v2390[1] }
        af      = { defs={} expr=v2391[1] }
        ?5      = { defs={} expr=v2392[1] }
        zf      = { defs={} expr=v2393[1] }
        sf      = { defs={} expr=v2394[1] }
        tf      = { defs={} expr=v2395[1] }
        if      = { defs={} expr=v2396[1] }
        df      = { defs={} expr=v2397[1] }
        of      = { defs={} expr=v2398[1] }
        iopl0   = { defs={} expr=v2399[1] }
        iopl1   = { defs={} expr=v2400[1] }
        nt      = { defs={} expr=v2401[1] }
        ?15     = { defs={} expr=v2402[1] }
        ip      = { defs={0x0804854f} expr=0x08048552[32] }
    memory:
        (empty)
    ip = defs={0x0804854f} expr=0x08048552[32]
0x8048552:xor    edi, edi
    registers:
        ax      = { defs={} expr=v2373[32] }
        cx      = { defs={} expr=v2374[32] }
        dx      = { defs={} expr=v2375[32] }
        bx      = { defs={} expr=v2376[32] }
        sp      = { defs={} expr=v2377[32] }
        bp      = { defs={} expr=v2378[32] }
        si      = { defs={0x0804854f} expr=(add[32] v2375[32] (extract[32] 0[32] 32[32] (umul[40] v2373[32] 4[8]))) }
        di      = { defs={0x08048552} expr=0[32] }
        es      = { defs={} expr=v2381[16] }
        cs      = { defs={} expr=v2382[16] }
        ss      = { defs={} expr=v2383[16] }
        ds      = { defs={} expr=v2384[16] }
        fs      = { defs={} expr=v2385[16] }
        gs      = { defs={} expr=v2386[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v2388[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v2390[1] }
        af      = { defs={0x08048552} expr=v2403[1] }
        ?5      = { defs={} expr=v2392[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v2395[1] }
        if      = { defs={} expr=v2396[1] }
        df      = { defs={} expr=v2397[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v2399[1] }
        iopl1   = { defs={} expr=v2400[1] }
        nt      = { defs={} expr=v2401[1] }
        ?15     = { defs={} expr=v2402[1] }
        ip      = { defs={0x0804854f,0x08048552} expr=0x08048554[32] }
    memory:
        (empty)
    ip = defs={0x0804854f,0x08048552} expr=0x08048554[32]
0x8048554:lea    esi, [esi + 0x00000000]
    registers:
        ax      = { defs={} expr=v2373[32] }
        cx      = { defs={} expr=v2374[32] }
        dx      = { defs={} expr=v2375[32] }
        bx      = { defs={} expr=v2376[32] }
        sp      = { defs={} expr=v2377[32] }
        bp      = { defs={} expr=v2378[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v2375[32] (extract[32] 0[32] 32[32] (umul[40] v2373[32] 4[8]))) }
        di      = { defs={0x08048552} expr=0[32] }
        es      = { defs={} expr=v2381[16] }
        cs      = { defs={} expr=v2382[16] }
        ss      = { defs={} expr=v2383[16] }
        ds      = { defs={} expr=v2384[16] }
        fs      = { defs={} expr=v2385[16] }
        gs      = { defs={} expr=v2386[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v2388[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v2390[1] }
        af      = { defs={0x08048552} expr=v2403[1] }
        ?5      = { defs={} expr=v2392[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v2395[1] }
        if      = { defs={} expr=v2396[1] }
        df      = { defs={} expr=v2397[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v2399[1] }
        iopl1   = { defs={} expr=v2400[1] }
        nt      = { defs={} expr=v2401[1] }
        ?15     = { defs={} expr=v2402[1] }
        ip      = { defs={0x0804854f,0x08048552,0x08048554} expr=0x0804855a[32] }
    memory:
        (empty)
    ip = defs={0x0804854f,0x08048552,0x08048554} expr=0x0804855a[32]
0x804855a:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v2373[32] }
        cx      = { defs={} expr=v2374[32] }
        dx      = { defs={} expr=v2375[32] }
        bx      = { defs={} expr=v2376[32] }
        sp      = { defs={} expr=v2377[32] }
        bp      = { defs={} expr=v2378[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v2375[32] (extract[32] 0[32] 32[32] (umul[40] v2373[32] 4[8]))) }
        di      = { defs={0x08048552,0x0804855a} expr=0[32] }
        es      = { defs={} expr=v2381[16] }
        cs      = { defs={} expr=v2382[16] }
        ss      = { defs={} expr=v2383[16] }
        ds      = { defs={} expr=v2384[16] }
        fs      = { defs={} expr=v2385[16] }
        gs      = { defs={} expr=v2386[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v2388[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v2390[1] }
        af      = { defs={0x08048552} expr=v2403[1] }
        ?5      = { defs={} expr=v2392[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v2395[1] }
        if      = { defs={} expr=v2396[1] }
        df      = { defs={} expr=v2397[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v2399[1] }
        iopl1   = { defs={} expr=v2400[1] }
        nt      = { defs={} expr=v2401[1] }
        ?15     = { defs={} expr=v2402[1] }
        ip      = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a} expr=0x08048560[32] }
    memory:
        (empty)
    ip = defs={0x0804854f,0x08048552,0x08048554,0x0804855a} expr=0x08048560[32]
0x8048560:call   DWORD PTR ds:[esi]
    registers:
        ax      = { defs={} expr=v2373[32] }
        cx      = { defs={} expr=v2374[32] }
        dx      = { defs={} expr=v2375[32] }
        bx      = { defs={} expr=v2376[32] }
        sp      = { defs={0x08048560} expr=(add[32] v2377[32] -4[32]) }
        bp      = { defs={} expr=v2378[32] }
        si      = { defs={0x0804854f,0x08048554} expr=(add[32] v2375[32] (extract[32] 0[32] 32[32] (umul[40] v2373[32] 4[8]))) }
        di      = { defs={0x08048552,0x0804855a} expr=0[32] }
        es      = { defs={} expr=v2381[16] }
        cs      = { defs={} expr=v2382[16] }
        ss      = { defs={} expr=v2383[16] }
        ds      = { defs={} expr=v2384[16] }
        fs      = { defs={} expr=v2385[16] }
        gs      = { defs={} expr=v2386[16] }
        cf      = { defs={0x08048552} expr=0[1] }
        ?1      = { defs={} expr=v2388[1] }
        pf      = { defs={0x08048552} expr=1[1] }
        ?3      = { defs={} expr=v2390[1] }
        af      = { defs={0x08048552} expr=v2403[1] }
        ?5      = { defs={} expr=v2392[1] }
        zf      = { defs={0x08048552} expr=1[1] }
        sf      = { defs={0x08048552} expr=0[1] }
        tf      = { defs={} expr=v2395[1] }
        if      = { defs={} expr=v2396[1] }
        df      = { defs={} expr=v2397[1] }
        of      = { defs={0x08048552} expr=0[1] }
        iopl0   = { defs={} expr=v2399[1] }
        iopl1   = { defs={} expr=v2400[1] }
        nt      = { defs={} expr=v2401[1] }
        ?15     = { defs={} expr=v2402[1] }
        ip      = { defs={0x08048560} expr=v2404[32] }
    memory:
        address = { defs={0x08048560} expr=(add[32] v2377[32] -4[32]) }
          value = { defs={0x0804854f,0x08048552,0x08048554,0x0804855a,0x08048560} expr=0x08048562[32] }
          flags = { size=4 }
        address = { defs={0x0804854f,0x08048554} expr=(add[32] v2375[32] (extract[32] 0[32] 32[32] (umul[40] v2373[32] 4[8]))) }
          value = { defs={} expr=v2404[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048560} expr=v2404[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    registers:
        ax      = { defs={} expr=v2437[32] }
        cx      = { defs={} expr=v2438[32] }
        dx      = { defs={} expr=v2439[32] }
        bx      = { defs={} expr=v2440[32] }
        sp      = { defs={} expr=v2441[32] }
        bp      = { defs={} expr=v2442[32] }
        si      = { defs={} expr=v2443[32] }
        di      = { defs={0x08048562} expr=(add[32] v2444[32] 1[32]) }
        es      = { defs={} expr=v2445[16] }
        cs      = { defs={} expr=v2446[16] }
        ss      = { defs={} expr=v2447[16] }
        ds      = { defs={} expr=v2448[16] }
        fs      = { defs={} expr=v2449[16] }
        gs      = { defs={} expr=v2450[16] }
        cf      = { defs={} expr=v2451[1] }
        ?1      = { defs={} expr=v2452[1] }
        pf      = { defs={0x08048562} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2444[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2444[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2444[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2444[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2444[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2444[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2444[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2444[32] 1[32]))))))) }
        ?3      = { defs={} expr=v2454[1] }
        af      = { defs={0x08048562} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2444[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2444[32]) 1[33]))))) }
        ?5      = { defs={} expr=v2456[1] }
        zf      = { defs={0x08048562} expr=(zerop[1] (add[32] v2444[32] 1[32])) }
        sf      = { defs={0x08048562} expr=(extract[1] 31[32] 32[32] (add[32] v2444[32] 1[32])) }
        tf      = { defs={} expr=v2459[1] }
        if      = { defs={} expr=v2460[1] }
        df      = { defs={} expr=v2461[1] }
        of      = { defs={0x08048562} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2444[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2444[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2444[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v2444[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v2463[1] }
        iopl1   = { defs={} expr=v2464[1] }
        nt      = { defs={} expr=v2465[1] }
        ?15     = { defs={} expr=v2466[1] }
        ip      = { defs={0x08048562} expr=0x08048563[32] }
    memory:
        (empty)
    ip = defs={0x08048562} expr=0x08048563[32]
0x8048563:sub    esi, 0x04
    registers:
        ax      = { defs={} expr=v2437[32] }
        cx      = { defs={} expr=v2438[32] }
        dx      = { defs={} expr=v2439[32] }
        bx      = { defs={} expr=v2440[32] }
        sp      = { defs={} expr=v2441[32] }
        bp      = { defs={} expr=v2442[32] }
        si      = { defs={0x08048563} expr=(add[32] v2443[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v2444[32] 1[32]) }
        es      = { defs={} expr=v2445[16] }
        cs      = { defs={} expr=v2446[16] }
        ss      = { defs={} expr=v2447[16] }
        ds      = { defs={} expr=v2448[16] }
        fs      = { defs={} expr=v2449[16] }
        gs      = { defs={} expr=v2450[16] }
        cf      = { defs={0x08048563} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2443[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2443[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v2452[1] }
        pf      = { defs={0x08048563} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2443[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2443[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2443[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2443[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2443[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2443[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2443[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2443[32] -4[32]))))))) }
        ?3      = { defs={} expr=v2454[1] }
        af      = { defs={0x08048563} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2443[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2443[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v2456[1] }
        zf      = { defs={0x08048563} expr=(zerop[1] (add[32] v2443[32] -4[32])) }
        sf      = { defs={0x08048563} expr=(extract[1] 31[32] 32[32] (add[32] v2443[32] -4[32])) }
        tf      = { defs={} expr=v2459[1] }
        if      = { defs={} expr=v2460[1] }
        df      = { defs={} expr=v2461[1] }
        of      = { defs={0x08048563} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2443[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2443[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2443[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2443[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v2463[1] }
        iopl1   = { defs={} expr=v2464[1] }
        nt      = { defs={} expr=v2465[1] }
        ?15     = { defs={} expr=v2466[1] }
        ip      = { defs={0x08048562,0x08048563} expr=0x08048566[32] }
    memory:
        (empty)
    ip = defs={0x08048562,0x08048563} expr=0x08048566[32]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    registers:
        ax      = { defs={} expr=v2437[32] }
        cx      = { defs={} expr=v2438[32] }
        dx      = { defs={} expr=v2439[32] }
        bx      = { defs={} expr=v2440[32] }
        sp      = { defs={} expr=v2441[32] }
        bp      = { defs={} expr=v2442[32] }
        si      = { defs={0x08048563} expr=(add[32] v2443[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v2444[32] 1[32]) }
        es      = { defs={} expr=v2445[16] }
        cs      = { defs={} expr=v2446[16] }
        ss      = { defs={} expr=v2447[16] }
        ds      = { defs={} expr=v2448[16] }
        fs      = { defs={} expr=v2449[16] }
        gs      = { defs={} expr=v2450[16] }
        cf      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2467[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) (add[33] (uextend[33] 33[32] v2467[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v2452[1] }
        pf      = { defs={0x08048562,0x08048566} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v2454[1] }
        af      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2467[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) (add[33] (uextend[33] 33[32] v2467[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v2456[1] }
        zf      = { defs={0x08048562,0x08048566} expr=(zerop[1] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32]))) }
        sf      = { defs={0x08048562,0x08048566} expr=(extract[1] 31[32] 32[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32]))) }
        tf      = { defs={} expr=v2459[1] }
        if      = { defs={} expr=v2460[1] }
        df      = { defs={} expr=v2461[1] }
        of      = { defs={0x08048562,0x08048566} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2467[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) (add[33] (uextend[33] 33[32] v2467[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2467[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) (add[33] (uextend[33] 33[32] v2467[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v2463[1] }
        iopl1   = { defs={} expr=v2464[1] }
        nt      = { defs={} expr=v2465[1] }
        ?15     = { defs={} expr=v2466[1] }
        ip      = { defs={0x08048562,0x08048563,0x08048566} expr=0x08048569[32] }
    memory:
        address = { defs={0x08048566} expr=(add[32] v2442[32] -16[32]) }
          value = { defs={} expr=v2467[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048562,0x08048563,0x08048566} expr=0x08048569[32]
0x8048569:jne    0x08048560
    registers:
        ax      = { defs={} expr=v2437[32] }
        cx      = { defs={} expr=v2438[32] }
        dx      = { defs={} expr=v2439[32] }
        bx      = { defs={} expr=v2440[32] }
        sp      = { defs={} expr=v2441[32] }
        bp      = { defs={} expr=v2442[32] }
        si      = { defs={0x08048563} expr=(add[32] v2443[32] -4[32]) }
        di      = { defs={0x08048562} expr=(add[32] v2444[32] 1[32]) }
        es      = { defs={} expr=v2445[16] }
        cs      = { defs={} expr=v2446[16] }
        ss      = { defs={} expr=v2447[16] }
        ds      = { defs={} expr=v2448[16] }
        fs      = { defs={} expr=v2449[16] }
        gs      = { defs={} expr=v2450[16] }
        cf      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2467[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) (add[33] (uextend[33] 33[32] v2467[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) 1[33]))))))) }
        ?1      = { defs={} expr=v2452[1] }
        pf      = { defs={0x08048562,0x08048566} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))))))) }
        ?3      = { defs={} expr=v2454[1] }
        af      = { defs={0x08048562,0x08048566} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2467[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) (add[33] (uextend[33] 33[32] v2467[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) 1[33]))))))) }
        ?5      = { defs={} expr=v2456[1] }
        zf      = { defs={0x08048562,0x08048566} expr=(zerop[1] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32]))) }
        sf      = { defs={0x08048562,0x08048566} expr=(extract[1] 31[32] 32[32] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32]))) }
        tf      = { defs={} expr=v2459[1] }
        if      = { defs={} expr=v2460[1] }
        df      = { defs={} expr=v2461[1] }
        of      = { defs={0x08048562,0x08048566} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2467[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) (add[33] (uextend[33] 33[32] v2467[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2467[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) (add[33] (uextend[33] 33[32] v2467[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2444[32] 1[32]))) 1[33]))))))) }
        iopl0   = { defs={} expr=v2463[1] }
        iopl1   = { defs={} expr=v2464[1] }
        nt      = { defs={} expr=v2465[1] }
        ?15     = { defs={} expr=v2466[1] }
        ip      = { defs={0x08048562,0x08048563,0x08048566,0x08048569} expr=(ite[32] (invert[1] (zerop[1] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) 0x08048560[32] 0x0804856b[32]) }
    memory:
        address = { defs={0x08048566} expr=(add[32] v2442[32] -16[32]) }
          value = { defs={} expr=v2467[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048562,0x08048563,0x08048566,0x08048569} expr=(ite[32] (invert[1] (zerop[1] (add[32] v2467[32] (add[32] (invert[32] (add[32] v2444[32] 1[32])) 1[32])))) 0x08048560[32] 0x0804856b[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    registers:
        ax      = { defs={} expr=v2500[32] }
        cx      = { defs={} expr=v2501[32] }
        dx      = { defs={} expr=v2502[32] }
        bx      = { defs={} expr=v2503[32] }
        sp      = { defs={0x08048570} expr=(add[32] v2504[32] 12[32]) }
        bp      = { defs={} expr=v2505[32] }
        si      = { defs={} expr=v2506[32] }
        di      = { defs={} expr=v2507[32] }
        es      = { defs={} expr=v2508[16] }
        cs      = { defs={} expr=v2509[16] }
        ss      = { defs={} expr=v2510[16] }
        ds      = { defs={} expr=v2511[16] }
        fs      = { defs={} expr=v2512[16] }
        gs      = { defs={} expr=v2513[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2515[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2517[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2519[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v2504[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v2504[32] 12[32])) }
        tf      = { defs={} expr=v2522[1] }
        if      = { defs={} expr=v2523[1] }
        df      = { defs={} expr=v2524[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2526[1] }
        iopl1   = { defs={} expr=v2527[1] }
        nt      = { defs={} expr=v2528[1] }
        ?15     = { defs={} expr=v2529[1] }
        ip      = { defs={0x08048570} expr=0x08048573[32] }
    memory:
        (empty)
    ip = defs={0x08048570} expr=0x08048573[32]
0x8048573:pop    ebx
    registers:
        ax      = { defs={} expr=v2500[32] }
        cx      = { defs={} expr=v2501[32] }
        dx      = { defs={} expr=v2502[32] }
        bx      = { defs={0x08048573} expr=v2530[32] }
        sp      = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v2504[32] 12[32]) 4[32]) }
        bp      = { defs={} expr=v2505[32] }
        si      = { defs={} expr=v2506[32] }
        di      = { defs={} expr=v2507[32] }
        es      = { defs={} expr=v2508[16] }
        cs      = { defs={} expr=v2509[16] }
        ss      = { defs={} expr=v2510[16] }
        ds      = { defs={} expr=v2511[16] }
        fs      = { defs={} expr=v2512[16] }
        gs      = { defs={} expr=v2513[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2515[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2517[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2519[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v2504[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v2504[32] 12[32])) }
        tf      = { defs={} expr=v2522[1] }
        if      = { defs={} expr=v2523[1] }
        df      = { defs={} expr=v2524[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2526[1] }
        iopl1   = { defs={} expr=v2527[1] }
        nt      = { defs={} expr=v2528[1] }
        ?15     = { defs={} expr=v2529[1] }
        ip      = { defs={0x08048570,0x08048573} expr=0x08048574[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v2504[32] 12[32]) }
          value = { defs={} expr=v2530[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048570,0x08048573} expr=0x08048574[32]
0x8048574:pop    esi
    registers:
        ax      = { defs={} expr=v2500[32] }
        cx      = { defs={} expr=v2501[32] }
        dx      = { defs={} expr=v2502[32] }
        bx      = { defs={0x08048573} expr=v2530[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v2505[32] }
        si      = { defs={0x08048574} expr=v2531[32] }
        di      = { defs={} expr=v2507[32] }
        es      = { defs={} expr=v2508[16] }
        cs      = { defs={} expr=v2509[16] }
        ss      = { defs={} expr=v2510[16] }
        ds      = { defs={} expr=v2511[16] }
        fs      = { defs={} expr=v2512[16] }
        gs      = { defs={} expr=v2513[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2515[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2517[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2519[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v2504[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v2504[32] 12[32])) }
        tf      = { defs={} expr=v2522[1] }
        if      = { defs={} expr=v2523[1] }
        df      = { defs={} expr=v2524[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2526[1] }
        iopl1   = { defs={} expr=v2527[1] }
        nt      = { defs={} expr=v2528[1] }
        ?15     = { defs={} expr=v2529[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574} expr=0x08048575[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v2504[32] 12[32]) }
          value = { defs={} expr=v2530[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v2504[32] 12[32]) 4[32]) }
          value = { defs={} expr=v2531[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048570,0x08048573,0x08048574} expr=0x08048575[32]
0x8048575:pop    edi
    registers:
        ax      = { defs={} expr=v2500[32] }
        cx      = { defs={} expr=v2501[32] }
        dx      = { defs={} expr=v2502[32] }
        bx      = { defs={0x08048573} expr=v2530[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={} expr=v2505[32] }
        si      = { defs={0x08048574} expr=v2531[32] }
        di      = { defs={0x08048575} expr=v2532[32] }
        es      = { defs={} expr=v2508[16] }
        cs      = { defs={} expr=v2509[16] }
        ss      = { defs={} expr=v2510[16] }
        ds      = { defs={} expr=v2511[16] }
        fs      = { defs={} expr=v2512[16] }
        gs      = { defs={} expr=v2513[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2515[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2517[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2519[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v2504[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v2504[32] 12[32])) }
        tf      = { defs={} expr=v2522[1] }
        if      = { defs={} expr=v2523[1] }
        df      = { defs={} expr=v2524[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2526[1] }
        iopl1   = { defs={} expr=v2527[1] }
        nt      = { defs={} expr=v2528[1] }
        ?15     = { defs={} expr=v2529[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=0x08048576[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v2504[32] 12[32]) }
          value = { defs={} expr=v2530[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v2504[32] 12[32]) 4[32]) }
          value = { defs={} expr=v2531[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2532[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=0x08048576[32]
0x8048576:pop    ebp
    registers:
        ax      = { defs={} expr=v2500[32] }
        cx      = { defs={} expr=v2501[32] }
        dx      = { defs={} expr=v2502[32] }
        bx      = { defs={0x08048573} expr=v2530[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x08048576} expr=v2533[32] }
        si      = { defs={0x08048574} expr=v2531[32] }
        di      = { defs={0x08048575} expr=v2532[32] }
        es      = { defs={} expr=v2508[16] }
        cs      = { defs={} expr=v2509[16] }
        ss      = { defs={} expr=v2510[16] }
        ds      = { defs={} expr=v2511[16] }
        fs      = { defs={} expr=v2512[16] }
        gs      = { defs={} expr=v2513[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2515[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2517[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2519[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v2504[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v2504[32] 12[32])) }
        tf      = { defs={} expr=v2522[1] }
        if      = { defs={} expr=v2523[1] }
        df      = { defs={} expr=v2524[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2526[1] }
        iopl1   = { defs={} expr=v2527[1] }
        nt      = { defs={} expr=v2528[1] }
        ?15     = { defs={} expr=v2529[1] }
        ip      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=0x08048577[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v2504[32] 12[32]) }
          value = { defs={} expr=v2530[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v2504[32] 12[32]) 4[32]) }
          value = { defs={} expr=v2531[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2532[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2533[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=0x08048577[32]
0x8048577:ret    
    registers:
        ax      = { defs={} expr=v2500[32] }
        cx      = { defs={} expr=v2501[32] }
        dx      = { defs={} expr=v2502[32] }
        bx      = { defs={0x08048573} expr=v2530[32] }
        sp      = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577} expr=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x08048576} expr=v2533[32] }
        si      = { defs={0x08048574} expr=v2531[32] }
        di      = { defs={0x08048575} expr=v2532[32] }
        es      = { defs={} expr=v2508[16] }
        cs      = { defs={} expr=v2509[16] }
        ss      = { defs={} expr=v2510[16] }
        ds      = { defs={} expr=v2511[16] }
        fs      = { defs={} expr=v2512[16] }
        gs      = { defs={} expr=v2513[16] }
        cf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?1      = { defs={} expr=v2515[1] }
        pf      = { defs={0x08048570} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2504[32] 12[32]))))))) }
        ?3      = { defs={} expr=v2517[1] }
        af      = { defs={0x08048570} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) }
        ?5      = { defs={} expr=v2519[1] }
        zf      = { defs={0x08048570} expr=(zerop[1] (add[32] v2504[32] 12[32])) }
        sf      = { defs={0x08048570} expr=(extract[1] 31[32] 32[32] (add[32] v2504[32] 12[32])) }
        tf      = { defs={} expr=v2522[1] }
        if      = { defs={} expr=v2523[1] }
        df      = { defs={} expr=v2524[1] }
        of      = { defs={0x08048570} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2504[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2504[32]) 12[33])))))) }
        iopl0   = { defs={} expr=v2526[1] }
        iopl1   = { defs={} expr=v2527[1] }
        nt      = { defs={} expr=v2528[1] }
        ?15     = { defs={} expr=v2529[1] }
        ip      = { defs={0x08048577} expr=v2534[32] }
    memory:
        address = { defs={0x08048570} expr=(add[32] v2504[32] 12[32]) }
          value = { defs={} expr=v2530[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573} expr=(add[32] (add[32] v2504[32] 12[32]) 4[32]) }
          value = { defs={} expr=v2531[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574} expr=(add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2532[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575} expr=(add[32] (add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2533[32] }
          flags = { size=4; read-only }
        address = { defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576} expr=(add[32] (add[32] (add[32] (add[32] (add[32] v2504[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2534[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048577} expr=v2534[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048580:push   ebp
    registers:
        ax      = { defs={} expr=v2567[32] }
        cx      = { defs={} expr=v2568[32] }
        dx      = { defs={} expr=v2569[32] }
        bx      = { defs={} expr=v2570[32] }
        sp      = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
        bp      = { defs={} expr=v2572[32] }
        si      = { defs={} expr=v2573[32] }
        di      = { defs={} expr=v2574[32] }
        es      = { defs={} expr=v2575[16] }
        cs      = { defs={} expr=v2576[16] }
        ss      = { defs={} expr=v2577[16] }
        ds      = { defs={} expr=v2578[16] }
        fs      = { defs={} expr=v2579[16] }
        gs      = { defs={} expr=v2580[16] }
        cf      = { defs={} expr=v2581[1] }
        ?1      = { defs={} expr=v2582[1] }
        pf      = { defs={} expr=v2583[1] }
        ?3      = { defs={} expr=v2584[1] }
        af      = { defs={} expr=v2585[1] }
        ?5      = { defs={} expr=v2586[1] }
        zf      = { defs={} expr=v2587[1] }
        sf      = { defs={} expr=v2588[1] }
        tf      = { defs={} expr=v2589[1] }
        if      = { defs={} expr=v2590[1] }
        df      = { defs={} expr=v2591[1] }
        of      = { defs={} expr=v2592[1] }
        iopl0   = { defs={} expr=v2593[1] }
        iopl1   = { defs={} expr=v2594[1] }
        nt      = { defs={} expr=v2595[1] }
        ?15     = { defs={} expr=v2596[1] }
        ip      = { defs={0x08048580} expr=0x08048581[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
          value = { defs={0x08048580} expr=v2572[32] }
          flags = { size=4 }
    ip = defs={0x08048580} expr=0x08048581[32]
0x8048581:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2567[32] }
        cx      = { defs={} expr=v2568[32] }
        dx      = { defs={} expr=v2569[32] }
        bx      = { defs={} expr=v2570[32] }
        sp      = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v2571[32] -4[32]) }
        si      = { defs={} expr=v2573[32] }
        di      = { defs={} expr=v2574[32] }
        es      = { defs={} expr=v2575[16] }
        cs      = { defs={} expr=v2576[16] }
        ss      = { defs={} expr=v2577[16] }
        ds      = { defs={} expr=v2578[16] }
        fs      = { defs={} expr=v2579[16] }
        gs      = { defs={} expr=v2580[16] }
        cf      = { defs={} expr=v2581[1] }
        ?1      = { defs={} expr=v2582[1] }
        pf      = { defs={} expr=v2583[1] }
        ?3      = { defs={} expr=v2584[1] }
        af      = { defs={} expr=v2585[1] }
        ?5      = { defs={} expr=v2586[1] }
        zf      = { defs={} expr=v2587[1] }
        sf      = { defs={} expr=v2588[1] }
        tf      = { defs={} expr=v2589[1] }
        if      = { defs={} expr=v2590[1] }
        df      = { defs={} expr=v2591[1] }
        of      = { defs={} expr=v2592[1] }
        iopl0   = { defs={} expr=v2593[1] }
        iopl1   = { defs={} expr=v2594[1] }
        nt      = { defs={} expr=v2595[1] }
        ?15     = { defs={} expr=v2596[1] }
        ip      = { defs={0x08048580,0x08048581} expr=0x08048583[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
          value = { defs={0x08048580} expr=v2572[32] }
          flags = { size=4 }
    ip = defs={0x08048580,0x08048581} expr=0x08048583[32]
0x8048583:push   ebx
    registers:
        ax      = { defs={} expr=v2567[32] }
        cx      = { defs={} expr=v2568[32] }
        dx      = { defs={} expr=v2569[32] }
        bx      = { defs={} expr=v2570[32] }
        sp      = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v2571[32] -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v2571[32] -4[32]) }
        si      = { defs={} expr=v2573[32] }
        di      = { defs={} expr=v2574[32] }
        es      = { defs={} expr=v2575[16] }
        cs      = { defs={} expr=v2576[16] }
        ss      = { defs={} expr=v2577[16] }
        ds      = { defs={} expr=v2578[16] }
        fs      = { defs={} expr=v2579[16] }
        gs      = { defs={} expr=v2580[16] }
        cf      = { defs={} expr=v2581[1] }
        ?1      = { defs={} expr=v2582[1] }
        pf      = { defs={} expr=v2583[1] }
        ?3      = { defs={} expr=v2584[1] }
        af      = { defs={} expr=v2585[1] }
        ?5      = { defs={} expr=v2586[1] }
        zf      = { defs={} expr=v2587[1] }
        sf      = { defs={} expr=v2588[1] }
        tf      = { defs={} expr=v2589[1] }
        if      = { defs={} expr=v2590[1] }
        df      = { defs={} expr=v2591[1] }
        of      = { defs={} expr=v2592[1] }
        iopl0   = { defs={} expr=v2593[1] }
        iopl1   = { defs={} expr=v2594[1] }
        nt      = { defs={} expr=v2595[1] }
        ?15     = { defs={} expr=v2596[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583} expr=0x08048584[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
          value = { defs={0x08048580} expr=v2572[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v2571[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v2570[32] }
          flags = { size=4 }
    ip = defs={0x08048580,0x08048581,0x08048583} expr=0x08048584[32]
0x8048584:sub    esp, 0x04
    registers:
        ax      = { defs={} expr=v2567[32] }
        cx      = { defs={} expr=v2568[32] }
        dx      = { defs={} expr=v2569[32] }
        bx      = { defs={} expr=v2570[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v2571[32] -4[32]) }
        si      = { defs={} expr=v2573[32] }
        di      = { defs={} expr=v2574[32] }
        es      = { defs={} expr=v2575[16] }
        cs      = { defs={} expr=v2576[16] }
        ss      = { defs={} expr=v2577[16] }
        ds      = { defs={} expr=v2578[16] }
        fs      = { defs={} expr=v2579[16] }
        gs      = { defs={} expr=v2580[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v2582[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v2584[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v2586[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v2589[1] }
        if      = { defs={} expr=v2590[1] }
        df      = { defs={} expr=v2591[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v2593[1] }
        iopl1   = { defs={} expr=v2594[1] }
        nt      = { defs={} expr=v2595[1] }
        ?15     = { defs={} expr=v2596[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584} expr=0x08048587[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
          value = { defs={0x08048580} expr=v2572[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v2571[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v2570[32] }
          flags = { size=4 }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584} expr=0x08048587[32]
0x8048587:mov    ebx, 0x080495e8
    registers:
        ax      = { defs={} expr=v2567[32] }
        cx      = { defs={} expr=v2568[32] }
        dx      = { defs={} expr=v2569[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v2571[32] -4[32]) }
        si      = { defs={} expr=v2573[32] }
        di      = { defs={} expr=v2574[32] }
        es      = { defs={} expr=v2575[16] }
        cs      = { defs={} expr=v2576[16] }
        ss      = { defs={} expr=v2577[16] }
        ds      = { defs={} expr=v2578[16] }
        fs      = { defs={} expr=v2579[16] }
        gs      = { defs={} expr=v2580[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v2582[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v2584[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v2586[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v2589[1] }
        if      = { defs={} expr=v2590[1] }
        df      = { defs={} expr=v2591[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v2593[1] }
        iopl1   = { defs={} expr=v2594[1] }
        nt      = { defs={} expr=v2595[1] }
        ?15     = { defs={} expr=v2596[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587} expr=0x0804858c[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
          value = { defs={0x08048580} expr=v2572[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v2571[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v2570[32] }
          flags = { size=4 }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587} expr=0x0804858c[32]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    registers:
        ax      = { defs={0x0804858c} expr=v2597[32] }
        cx      = { defs={} expr=v2568[32] }
        dx      = { defs={} expr=v2569[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v2571[32] -4[32]) }
        si      = { defs={} expr=v2573[32] }
        di      = { defs={} expr=v2574[32] }
        es      = { defs={} expr=v2575[16] }
        cs      = { defs={} expr=v2576[16] }
        ss      = { defs={} expr=v2577[16] }
        ds      = { defs={} expr=v2578[16] }
        fs      = { defs={} expr=v2579[16] }
        gs      = { defs={} expr=v2580[16] }
        cf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?1      = { defs={} expr=v2582[1] }
        pf      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]))))))) }
        ?3      = { defs={} expr=v2584[1] }
        af      = { defs={0x08048580,0x08048583,0x08048584} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        ?5      = { defs={} expr=v2586[1] }
        zf      = { defs={0x08048580,0x08048583,0x08048584} expr=(zerop[1] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])) }
        sf      = { defs={0x08048580,0x08048583,0x08048584} expr=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32])) }
        tf      = { defs={} expr=v2589[1] }
        if      = { defs={} expr=v2590[1] }
        df      = { defs={} expr=v2591[1] }
        of      = { defs={0x08048580,0x08048583,0x08048584} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2571[32] -4[32]) -4[32])) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v2593[1] }
        iopl1   = { defs={} expr=v2594[1] }
        nt      = { defs={} expr=v2595[1] }
        ?15     = { defs={} expr=v2596[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c} expr=0x08048591[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
          value = { defs={0x08048580} expr=v2572[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v2571[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v2570[32] }
          flags = { size=4 }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=v2597[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c} expr=0x08048591[32]
0x8048591:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x0804858c} expr=v2597[32] }
        cx      = { defs={} expr=v2568[32] }
        dx      = { defs={} expr=v2569[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v2571[32] -4[32]) }
        si      = { defs={} expr=v2573[32] }
        di      = { defs={} expr=v2574[32] }
        es      = { defs={} expr=v2575[16] }
        cs      = { defs={} expr=v2576[16] }
        ss      = { defs={} expr=v2577[16] }
        ds      = { defs={} expr=v2578[16] }
        fs      = { defs={} expr=v2579[16] }
        gs      = { defs={} expr=v2580[16] }
        cf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2597[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2597[32]) 1[33])))))) }
        ?1      = { defs={} expr=v2582[1] }
        pf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))))))) }
        ?3      = { defs={} expr=v2584[1] }
        af      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2597[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2597[32]) 1[33])))))) }
        ?5      = { defs={} expr=v2586[1] }
        zf      = { defs={0x0804858c,0x08048591} expr=(zerop[1] (add[32] v2597[32] 1[32])) }
        sf      = { defs={0x0804858c,0x08048591} expr=(extract[1] 31[32] 32[32] (add[32] v2597[32] 1[32])) }
        tf      = { defs={} expr=v2589[1] }
        if      = { defs={} expr=v2590[1] }
        df      = { defs={} expr=v2591[1] }
        of      = { defs={0x0804858c,0x08048591} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2597[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2597[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2597[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2597[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v2593[1] }
        iopl1   = { defs={} expr=v2594[1] }
        nt      = { defs={} expr=v2595[1] }
        ?15     = { defs={} expr=v2596[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591} expr=0x08048594[32] }
    memory:
        address = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
          value = { defs={0x08048580} expr=v2572[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v2571[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v2570[32] }
          flags = { size=4 }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=v2597[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591} expr=0x08048594[32]
0x8048594:je     0x080485ac
    registers:
        ax      = { defs={0x0804858c} expr=v2597[32] }
        cx      = { defs={} expr=v2568[32] }
        dx      = { defs={} expr=v2569[32] }
        bx      = { defs={0x08048587} expr=0x080495e8[32] }
        sp      = { defs={0x08048580,0x08048583,0x08048584} expr=(add[32] (add[32] (add[32] v2571[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x08048580,0x08048581} expr=(add[32] v2571[32] -4[32]) }
        si      = { defs={} expr=v2573[32] }
        di      = { defs={} expr=v2574[32] }
        es      = { defs={} expr=v2575[16] }
        cs      = { defs={} expr=v2576[16] }
        ss      = { defs={} expr=v2577[16] }
        ds      = { defs={} expr=v2578[16] }
        fs      = { defs={} expr=v2579[16] }
        gs      = { defs={} expr=v2580[16] }
        cf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2597[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2597[32]) 1[33])))))) }
        ?1      = { defs={} expr=v2582[1] }
        pf      = { defs={0x0804858c,0x08048591} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2597[32] 1[32]))))))) }
        ?3      = { defs={} expr=v2584[1] }
        af      = { defs={0x0804858c,0x08048591} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2597[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2597[32]) 1[33])))))) }
        ?5      = { defs={} expr=v2586[1] }
        zf      = { defs={0x0804858c,0x08048591} expr=(zerop[1] (add[32] v2597[32] 1[32])) }
        sf      = { defs={0x0804858c,0x08048591} expr=(extract[1] 31[32] 32[32] (add[32] v2597[32] 1[32])) }
        tf      = { defs={} expr=v2589[1] }
        if      = { defs={} expr=v2590[1] }
        df      = { defs={} expr=v2591[1] }
        of      = { defs={0x0804858c,0x08048591} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2597[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2597[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2597[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2597[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v2593[1] }
        iopl1   = { defs={} expr=v2594[1] }
        nt      = { defs={} expr=v2595[1] }
        ?15     = { defs={} expr=v2596[1] }
        ip      = { defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591,0x08048594} expr=(ite[32] (zerop[1] (add[32] v2597[32] 1[32])) 0x080485ac[32] 0x08048596[32]) }
    memory:
        address = { defs={0x08048580} expr=(add[32] v2571[32] -4[32]) }
          value = { defs={0x08048580} expr=v2572[32] }
          flags = { size=4 }
        address = { defs={0x08048580,0x08048583} expr=(add[32] (add[32] v2571[32] -4[32]) -4[32]) }
          value = { defs={0x08048583} expr=v2570[32] }
          flags = { size=4 }
        address = { defs={0x0804858c} expr=0x080495e8[32] }
          value = { defs={} expr=v2597[32] }
          flags = { size=4; read-only }
    ip = defs={0x08048580,0x08048581,0x08048583,0x08048584,0x08048587,0x0804858c,0x08048591,0x08048594} expr=(ite[32] (zerop[1] (add[32] v2597[32] 1[32])) 0x080485ac[32] 0x08048596[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    registers:
        ax      = { defs={} expr=v2630[32] }
        cx      = { defs={} expr=v2631[32] }
        dx      = { defs={} expr=v2632[32] }
        bx      = { defs={} expr=v2633[32] }
        sp      = { defs={} expr=v2634[32] }
        bp      = { defs={} expr=v2635[32] }
        si      = { defs={0x08048596} expr=v2636[32] }
        di      = { defs={} expr=v2637[32] }
        es      = { defs={} expr=v2638[16] }
        cs      = { defs={} expr=v2639[16] }
        ss      = { defs={} expr=v2640[16] }
        ds      = { defs={} expr=v2641[16] }
        fs      = { defs={} expr=v2642[16] }
        gs      = { defs={} expr=v2643[16] }
        cf      = { defs={} expr=v2644[1] }
        ?1      = { defs={} expr=v2645[1] }
        pf      = { defs={} expr=v2646[1] }
        ?3      = { defs={} expr=v2647[1] }
        af      = { defs={} expr=v2648[1] }
        ?5      = { defs={} expr=v2649[1] }
        zf      = { defs={} expr=v2650[1] }
        sf      = { defs={} expr=v2651[1] }
        tf      = { defs={} expr=v2652[1] }
        if      = { defs={} expr=v2653[1] }
        df      = { defs={} expr=v2654[1] }
        of      = { defs={} expr=v2655[1] }
        iopl0   = { defs={} expr=v2656[1] }
        iopl1   = { defs={} expr=v2657[1] }
        nt      = { defs={} expr=v2658[1] }
        ?15     = { defs={} expr=v2659[1] }
        ip      = { defs={0x08048596} expr=0x08048599[32] }
    memory:
        (empty)
    ip = defs={0x08048596} expr=0x08048599[32]
0x8048599:lea    edi, [edi + 0x00000000]
    registers:
        ax      = { defs={} expr=v2630[32] }
        cx      = { defs={} expr=v2631[32] }
        dx      = { defs={} expr=v2632[32] }
        bx      = { defs={} expr=v2633[32] }
        sp      = { defs={} expr=v2634[32] }
        bp      = { defs={} expr=v2635[32] }
        si      = { defs={0x08048596} expr=v2636[32] }
        di      = { defs={0x08048599} expr=v2637[32] }
        es      = { defs={} expr=v2638[16] }
        cs      = { defs={} expr=v2639[16] }
        ss      = { defs={} expr=v2640[16] }
        ds      = { defs={} expr=v2641[16] }
        fs      = { defs={} expr=v2642[16] }
        gs      = { defs={} expr=v2643[16] }
        cf      = { defs={} expr=v2644[1] }
        ?1      = { defs={} expr=v2645[1] }
        pf      = { defs={} expr=v2646[1] }
        ?3      = { defs={} expr=v2647[1] }
        af      = { defs={} expr=v2648[1] }
        ?5      = { defs={} expr=v2649[1] }
        zf      = { defs={} expr=v2650[1] }
        sf      = { defs={} expr=v2651[1] }
        tf      = { defs={} expr=v2652[1] }
        if      = { defs={} expr=v2653[1] }
        df      = { defs={} expr=v2654[1] }
        of      = { defs={} expr=v2655[1] }
        iopl0   = { defs={} expr=v2656[1] }
        iopl1   = { defs={} expr=v2657[1] }
        nt      = { defs={} expr=v2658[1] }
        ?15     = { defs={} expr=v2659[1] }
        ip      = { defs={0x08048596,0x08048599} expr=0x080485a0[32] }
    memory:
        (empty)
    ip = defs={0x08048596,0x08048599} expr=0x080485a0[32]
0x80485a0:sub    ebx, 0x04
    registers:
        ax      = { defs={} expr=v2630[32] }
        cx      = { defs={} expr=v2631[32] }
        dx      = { defs={} expr=v2632[32] }
        bx      = { defs={0x080485a0} expr=(add[32] v2633[32] -4[32]) }
        sp      = { defs={} expr=v2634[32] }
        bp      = { defs={} expr=v2635[32] }
        si      = { defs={0x08048596} expr=v2636[32] }
        di      = { defs={0x08048599} expr=v2637[32] }
        es      = { defs={} expr=v2638[16] }
        cs      = { defs={} expr=v2639[16] }
        ss      = { defs={} expr=v2640[16] }
        ds      = { defs={} expr=v2641[16] }
        fs      = { defs={} expr=v2642[16] }
        gs      = { defs={} expr=v2643[16] }
        cf      = { defs={0x080485a0} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2633[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2633[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v2645[1] }
        pf      = { defs={0x080485a0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))))))) }
        ?3      = { defs={} expr=v2647[1] }
        af      = { defs={0x080485a0} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2633[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2633[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v2649[1] }
        zf      = { defs={0x080485a0} expr=(zerop[1] (add[32] v2633[32] -4[32])) }
        sf      = { defs={0x080485a0} expr=(extract[1] 31[32] 32[32] (add[32] v2633[32] -4[32])) }
        tf      = { defs={} expr=v2652[1] }
        if      = { defs={} expr=v2653[1] }
        df      = { defs={} expr=v2654[1] }
        of      = { defs={0x080485a0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2633[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2633[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2633[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2633[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v2656[1] }
        iopl1   = { defs={} expr=v2657[1] }
        nt      = { defs={} expr=v2658[1] }
        ?15     = { defs={} expr=v2659[1] }
        ip      = { defs={0x08048596,0x08048599,0x080485a0} expr=0x080485a3[32] }
    memory:
        (empty)
    ip = defs={0x08048596,0x08048599,0x080485a0} expr=0x080485a3[32]
0x80485a3:call   eax
    registers:
        ax      = { defs={} expr=v2630[32] }
        cx      = { defs={} expr=v2631[32] }
        dx      = { defs={} expr=v2632[32] }
        bx      = { defs={0x080485a0} expr=(add[32] v2633[32] -4[32]) }
        sp      = { defs={0x080485a3} expr=(add[32] v2634[32] -4[32]) }
        bp      = { defs={} expr=v2635[32] }
        si      = { defs={0x08048596} expr=v2636[32] }
        di      = { defs={0x08048599} expr=v2637[32] }
        es      = { defs={} expr=v2638[16] }
        cs      = { defs={} expr=v2639[16] }
        ss      = { defs={} expr=v2640[16] }
        ds      = { defs={} expr=v2641[16] }
        fs      = { defs={} expr=v2642[16] }
        gs      = { defs={} expr=v2643[16] }
        cf      = { defs={0x080485a0} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2633[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2633[32]) 4294967292[33])))))) }
        ?1      = { defs={} expr=v2645[1] }
        pf      = { defs={0x080485a0} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2633[32] -4[32]))))))) }
        ?3      = { defs={} expr=v2647[1] }
        af      = { defs={0x080485a0} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2633[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2633[32]) 4294967292[33])))))) }
        ?5      = { defs={} expr=v2649[1] }
        zf      = { defs={0x080485a0} expr=(zerop[1] (add[32] v2633[32] -4[32])) }
        sf      = { defs={0x080485a0} expr=(extract[1] 31[32] 32[32] (add[32] v2633[32] -4[32])) }
        tf      = { defs={} expr=v2652[1] }
        if      = { defs={} expr=v2653[1] }
        df      = { defs={} expr=v2654[1] }
        of      = { defs={0x080485a0} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2633[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2633[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2633[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2633[32]) 4294967292[33])))))) }
        iopl0   = { defs={} expr=v2656[1] }
        iopl1   = { defs={} expr=v2657[1] }
        nt      = { defs={} expr=v2658[1] }
        ?15     = { defs={} expr=v2659[1] }
        ip      = { defs={0x080485a3} expr=v2630[32] }
    memory:
        address = { defs={0x080485a3} expr=(add[32] v2634[32] -4[32]) }
          value = { defs={0x08048596,0x08048599,0x080485a0,0x080485a3} expr=0x080485a5[32] }
          flags = { size=4 }
    ip = defs={0x080485a3} expr=v2630[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    registers:
        ax      = { defs={0x080485a5} expr=v2722[32] }
        cx      = { defs={} expr=v2693[32] }
        dx      = { defs={} expr=v2694[32] }
        bx      = { defs={} expr=v2695[32] }
        sp      = { defs={} expr=v2696[32] }
        bp      = { defs={} expr=v2697[32] }
        si      = { defs={} expr=v2698[32] }
        di      = { defs={} expr=v2699[32] }
        es      = { defs={} expr=v2700[16] }
        cs      = { defs={} expr=v2701[16] }
        ss      = { defs={} expr=v2702[16] }
        ds      = { defs={} expr=v2703[16] }
        fs      = { defs={} expr=v2704[16] }
        gs      = { defs={} expr=v2705[16] }
        cf      = { defs={} expr=v2706[1] }
        ?1      = { defs={} expr=v2707[1] }
        pf      = { defs={} expr=v2708[1] }
        ?3      = { defs={} expr=v2709[1] }
        af      = { defs={} expr=v2710[1] }
        ?5      = { defs={} expr=v2711[1] }
        zf      = { defs={} expr=v2712[1] }
        sf      = { defs={} expr=v2713[1] }
        tf      = { defs={} expr=v2714[1] }
        if      = { defs={} expr=v2715[1] }
        df      = { defs={} expr=v2716[1] }
        of      = { defs={} expr=v2717[1] }
        iopl0   = { defs={} expr=v2718[1] }
        iopl1   = { defs={} expr=v2719[1] }
        nt      = { defs={} expr=v2720[1] }
        ?15     = { defs={} expr=v2721[1] }
        ip      = { defs={0x080485a5} expr=0x080485a7[32] }
    memory:
        address = { defs={} expr=v2695[32] }
          value = { defs={} expr=v2722[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485a5} expr=0x080485a7[32]
0x80485a7:cmp    eax, 0xff<-0x01>
    registers:
        ax      = { defs={0x080485a5} expr=v2722[32] }
        cx      = { defs={} expr=v2693[32] }
        dx      = { defs={} expr=v2694[32] }
        bx      = { defs={} expr=v2695[32] }
        sp      = { defs={} expr=v2696[32] }
        bp      = { defs={} expr=v2697[32] }
        si      = { defs={} expr=v2698[32] }
        di      = { defs={} expr=v2699[32] }
        es      = { defs={} expr=v2700[16] }
        cs      = { defs={} expr=v2701[16] }
        ss      = { defs={} expr=v2702[16] }
        ds      = { defs={} expr=v2703[16] }
        fs      = { defs={} expr=v2704[16] }
        gs      = { defs={} expr=v2705[16] }
        cf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2722[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2722[32]) 1[33])))))) }
        ?1      = { defs={} expr=v2707[1] }
        pf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))))))) }
        ?3      = { defs={} expr=v2709[1] }
        af      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2722[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2722[32]) 1[33])))))) }
        ?5      = { defs={} expr=v2711[1] }
        zf      = { defs={0x080485a5,0x080485a7} expr=(zerop[1] (add[32] v2722[32] 1[32])) }
        sf      = { defs={0x080485a5,0x080485a7} expr=(extract[1] 31[32] 32[32] (add[32] v2722[32] 1[32])) }
        tf      = { defs={} expr=v2714[1] }
        if      = { defs={} expr=v2715[1] }
        df      = { defs={} expr=v2716[1] }
        of      = { defs={0x080485a5,0x080485a7} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2722[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2722[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2722[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2722[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v2718[1] }
        iopl1   = { defs={} expr=v2719[1] }
        nt      = { defs={} expr=v2720[1] }
        ?15     = { defs={} expr=v2721[1] }
        ip      = { defs={0x080485a5,0x080485a7} expr=0x080485aa[32] }
    memory:
        address = { defs={} expr=v2695[32] }
          value = { defs={} expr=v2722[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485a5,0x080485a7} expr=0x080485aa[32]
0x80485aa:jne    0x080485a0
    registers:
        ax      = { defs={0x080485a5} expr=v2722[32] }
        cx      = { defs={} expr=v2693[32] }
        dx      = { defs={} expr=v2694[32] }
        bx      = { defs={} expr=v2695[32] }
        sp      = { defs={} expr=v2696[32] }
        bp      = { defs={} expr=v2697[32] }
        si      = { defs={} expr=v2698[32] }
        di      = { defs={} expr=v2699[32] }
        es      = { defs={} expr=v2700[16] }
        cs      = { defs={} expr=v2701[16] }
        ss      = { defs={} expr=v2702[16] }
        ds      = { defs={} expr=v2703[16] }
        fs      = { defs={} expr=v2704[16] }
        gs      = { defs={} expr=v2705[16] }
        cf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2722[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2722[32]) 1[33])))))) }
        ?1      = { defs={} expr=v2707[1] }
        pf      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2722[32] 1[32]))))))) }
        ?3      = { defs={} expr=v2709[1] }
        af      = { defs={0x080485a5,0x080485a7} expr=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2722[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2722[32]) 1[33])))))) }
        ?5      = { defs={} expr=v2711[1] }
        zf      = { defs={0x080485a5,0x080485a7} expr=(zerop[1] (add[32] v2722[32] 1[32])) }
        sf      = { defs={0x080485a5,0x080485a7} expr=(extract[1] 31[32] 32[32] (add[32] v2722[32] 1[32])) }
        tf      = { defs={} expr=v2714[1] }
        if      = { defs={} expr=v2715[1] }
        df      = { defs={} expr=v2716[1] }
        of      = { defs={0x080485a5,0x080485a7} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2722[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2722[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2722[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2722[32]) 1[33])))))) }
        iopl0   = { defs={} expr=v2718[1] }
        iopl1   = { defs={} expr=v2719[1] }
        nt      = { defs={} expr=v2720[1] }
        ?15     = { defs={} expr=v2721[1] }
        ip      = { defs={0x080485a5,0x080485a7,0x080485aa} expr=(ite[32] (invert[1] (zerop[1] (add[32] v2722[32] 1[32]))) 0x080485a0[32] 0x080485ac[32]) }
    memory:
        address = { defs={} expr=v2695[32] }
          value = { defs={} expr=v2722[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485a5,0x080485a7,0x080485aa} expr=(ite[32] (invert[1] (zerop[1] (add[32] v2722[32] 1[32]))) 0x080485a0[32] 0x080485ac[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    registers:
        ax      = { defs={0x080485ac} expr=v2785[32] }
        cx      = { defs={} expr=v2756[32] }
        dx      = { defs={} expr=v2757[32] }
        bx      = { defs={} expr=v2758[32] }
        sp      = { defs={0x080485ac} expr=(add[32] v2759[32] 4[32]) }
        bp      = { defs={} expr=v2760[32] }
        si      = { defs={} expr=v2761[32] }
        di      = { defs={} expr=v2762[32] }
        es      = { defs={} expr=v2763[16] }
        cs      = { defs={} expr=v2764[16] }
        ss      = { defs={} expr=v2765[16] }
        ds      = { defs={} expr=v2766[16] }
        fs      = { defs={} expr=v2767[16] }
        gs      = { defs={} expr=v2768[16] }
        cf      = { defs={} expr=v2769[1] }
        ?1      = { defs={} expr=v2770[1] }
        pf      = { defs={} expr=v2771[1] }
        ?3      = { defs={} expr=v2772[1] }
        af      = { defs={} expr=v2773[1] }
        ?5      = { defs={} expr=v2774[1] }
        zf      = { defs={} expr=v2775[1] }
        sf      = { defs={} expr=v2776[1] }
        tf      = { defs={} expr=v2777[1] }
        if      = { defs={} expr=v2778[1] }
        df      = { defs={} expr=v2779[1] }
        of      = { defs={} expr=v2780[1] }
        iopl0   = { defs={} expr=v2781[1] }
        iopl1   = { defs={} expr=v2782[1] }
        nt      = { defs={} expr=v2783[1] }
        ?15     = { defs={} expr=v2784[1] }
        ip      = { defs={0x080485ac} expr=0x080485ad[32] }
    memory:
        address = { defs={} expr=v2759[32] }
          value = { defs={} expr=v2785[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ac} expr=0x080485ad[32]
0x80485ad:pop    ebx
    registers:
        ax      = { defs={0x080485ac} expr=v2785[32] }
        cx      = { defs={} expr=v2756[32] }
        dx      = { defs={} expr=v2757[32] }
        bx      = { defs={0x080485ad} expr=v2786[32] }
        sp      = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v2759[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v2760[32] }
        si      = { defs={} expr=v2761[32] }
        di      = { defs={} expr=v2762[32] }
        es      = { defs={} expr=v2763[16] }
        cs      = { defs={} expr=v2764[16] }
        ss      = { defs={} expr=v2765[16] }
        ds      = { defs={} expr=v2766[16] }
        fs      = { defs={} expr=v2767[16] }
        gs      = { defs={} expr=v2768[16] }
        cf      = { defs={} expr=v2769[1] }
        ?1      = { defs={} expr=v2770[1] }
        pf      = { defs={} expr=v2771[1] }
        ?3      = { defs={} expr=v2772[1] }
        af      = { defs={} expr=v2773[1] }
        ?5      = { defs={} expr=v2774[1] }
        zf      = { defs={} expr=v2775[1] }
        sf      = { defs={} expr=v2776[1] }
        tf      = { defs={} expr=v2777[1] }
        if      = { defs={} expr=v2778[1] }
        df      = { defs={} expr=v2779[1] }
        of      = { defs={} expr=v2780[1] }
        iopl0   = { defs={} expr=v2781[1] }
        iopl1   = { defs={} expr=v2782[1] }
        nt      = { defs={} expr=v2783[1] }
        ?15     = { defs={} expr=v2784[1] }
        ip      = { defs={0x080485ac,0x080485ad} expr=0x080485ae[32] }
    memory:
        address = { defs={} expr=v2759[32] }
          value = { defs={} expr=v2785[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac} expr=(add[32] v2759[32] 4[32]) }
          value = { defs={} expr=v2786[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ac,0x080485ad} expr=0x080485ae[32]
0x80485ae:pop    ebp
    registers:
        ax      = { defs={0x080485ac} expr=v2785[32] }
        cx      = { defs={} expr=v2756[32] }
        dx      = { defs={} expr=v2757[32] }
        bx      = { defs={0x080485ad} expr=v2786[32] }
        sp      = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] v2759[32] 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080485ae} expr=v2787[32] }
        si      = { defs={} expr=v2761[32] }
        di      = { defs={} expr=v2762[32] }
        es      = { defs={} expr=v2763[16] }
        cs      = { defs={} expr=v2764[16] }
        ss      = { defs={} expr=v2765[16] }
        ds      = { defs={} expr=v2766[16] }
        fs      = { defs={} expr=v2767[16] }
        gs      = { defs={} expr=v2768[16] }
        cf      = { defs={} expr=v2769[1] }
        ?1      = { defs={} expr=v2770[1] }
        pf      = { defs={} expr=v2771[1] }
        ?3      = { defs={} expr=v2772[1] }
        af      = { defs={} expr=v2773[1] }
        ?5      = { defs={} expr=v2774[1] }
        zf      = { defs={} expr=v2775[1] }
        sf      = { defs={} expr=v2776[1] }
        tf      = { defs={} expr=v2777[1] }
        if      = { defs={} expr=v2778[1] }
        df      = { defs={} expr=v2779[1] }
        of      = { defs={} expr=v2780[1] }
        iopl0   = { defs={} expr=v2781[1] }
        iopl1   = { defs={} expr=v2782[1] }
        nt      = { defs={} expr=v2783[1] }
        ?15     = { defs={} expr=v2784[1] }
        ip      = { defs={0x080485ac,0x080485ad,0x080485ae} expr=0x080485af[32] }
    memory:
        address = { defs={} expr=v2759[32] }
          value = { defs={} expr=v2785[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac} expr=(add[32] v2759[32] 4[32]) }
          value = { defs={} expr=v2786[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v2759[32] 4[32]) 4[32]) }
          value = { defs={} expr=v2787[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ac,0x080485ad,0x080485ae} expr=0x080485af[32]
0x80485af:ret    
    registers:
        ax      = { defs={0x080485ac} expr=v2785[32] }
        cx      = { defs={} expr=v2756[32] }
        dx      = { defs={} expr=v2757[32] }
        bx      = { defs={0x080485ad} expr=v2786[32] }
        sp      = { defs={0x080485ac,0x080485ad,0x080485ae,0x080485af} expr=(add[32] (add[32] (add[32] (add[32] v2759[32] 4[32]) 4[32]) 4[32]) 4[32]) }
        bp      = { defs={0x080485ae} expr=v2787[32] }
        si      = { defs={} expr=v2761[32] }
        di      = { defs={} expr=v2762[32] }
        es      = { defs={} expr=v2763[16] }
        cs      = { defs={} expr=v2764[16] }
        ss      = { defs={} expr=v2765[16] }
        ds      = { defs={} expr=v2766[16] }
        fs      = { defs={} expr=v2767[16] }
        gs      = { defs={} expr=v2768[16] }
        cf      = { defs={} expr=v2769[1] }
        ?1      = { defs={} expr=v2770[1] }
        pf      = { defs={} expr=v2771[1] }
        ?3      = { defs={} expr=v2772[1] }
        af      = { defs={} expr=v2773[1] }
        ?5      = { defs={} expr=v2774[1] }
        zf      = { defs={} expr=v2775[1] }
        sf      = { defs={} expr=v2776[1] }
        tf      = { defs={} expr=v2777[1] }
        if      = { defs={} expr=v2778[1] }
        df      = { defs={} expr=v2779[1] }
        of      = { defs={} expr=v2780[1] }
        iopl0   = { defs={} expr=v2781[1] }
        iopl1   = { defs={} expr=v2782[1] }
        nt      = { defs={} expr=v2783[1] }
        ?15     = { defs={} expr=v2784[1] }
        ip      = { defs={0x080485af} expr=v2788[32] }
    memory:
        address = { defs={} expr=v2759[32] }
          value = { defs={} expr=v2785[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac} expr=(add[32] v2759[32] 4[32]) }
          value = { defs={} expr=v2786[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac,0x080485ad} expr=(add[32] (add[32] v2759[32] 4[32]) 4[32]) }
          value = { defs={} expr=v2787[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485ac,0x080485ad,0x080485ae} expr=(add[32] (add[32] (add[32] v2759[32] 4[32]) 4[32]) 4[32]) }
          value = { defs={} expr=v2788[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485af} expr=v2788[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    registers:
        ax      = { defs={} expr=v2821[32] }
        cx      = { defs={} expr=v2822[32] }
        dx      = { defs={} expr=v2823[32] }
        bx      = { defs={} expr=v2824[32] }
        sp      = { defs={0x080485b0} expr=(add[32] v2825[32] -4[32]) }
        bp      = { defs={} expr=v2826[32] }
        si      = { defs={} expr=v2827[32] }
        di      = { defs={} expr=v2828[32] }
        es      = { defs={} expr=v2829[16] }
        cs      = { defs={} expr=v2830[16] }
        ss      = { defs={} expr=v2831[16] }
        ds      = { defs={} expr=v2832[16] }
        fs      = { defs={} expr=v2833[16] }
        gs      = { defs={} expr=v2834[16] }
        cf      = { defs={} expr=v2835[1] }
        ?1      = { defs={} expr=v2836[1] }
        pf      = { defs={} expr=v2837[1] }
        ?3      = { defs={} expr=v2838[1] }
        af      = { defs={} expr=v2839[1] }
        ?5      = { defs={} expr=v2840[1] }
        zf      = { defs={} expr=v2841[1] }
        sf      = { defs={} expr=v2842[1] }
        tf      = { defs={} expr=v2843[1] }
        if      = { defs={} expr=v2844[1] }
        df      = { defs={} expr=v2845[1] }
        of      = { defs={} expr=v2846[1] }
        iopl0   = { defs={} expr=v2847[1] }
        iopl1   = { defs={} expr=v2848[1] }
        nt      = { defs={} expr=v2849[1] }
        ?15     = { defs={} expr=v2850[1] }
        ip      = { defs={0x080485b0} expr=0x080485b1[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v2825[32] -4[32]) }
          value = { defs={0x080485b0} expr=v2826[32] }
          flags = { size=4 }
    ip = defs={0x080485b0} expr=0x080485b1[32]
0x80485b1:mov    ebp, esp
    registers:
        ax      = { defs={} expr=v2821[32] }
        cx      = { defs={} expr=v2822[32] }
        dx      = { defs={} expr=v2823[32] }
        bx      = { defs={} expr=v2824[32] }
        sp      = { defs={0x080485b0} expr=(add[32] v2825[32] -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v2825[32] -4[32]) }
        si      = { defs={} expr=v2827[32] }
        di      = { defs={} expr=v2828[32] }
        es      = { defs={} expr=v2829[16] }
        cs      = { defs={} expr=v2830[16] }
        ss      = { defs={} expr=v2831[16] }
        ds      = { defs={} expr=v2832[16] }
        fs      = { defs={} expr=v2833[16] }
        gs      = { defs={} expr=v2834[16] }
        cf      = { defs={} expr=v2835[1] }
        ?1      = { defs={} expr=v2836[1] }
        pf      = { defs={} expr=v2837[1] }
        ?3      = { defs={} expr=v2838[1] }
        af      = { defs={} expr=v2839[1] }
        ?5      = { defs={} expr=v2840[1] }
        zf      = { defs={} expr=v2841[1] }
        sf      = { defs={} expr=v2842[1] }
        tf      = { defs={} expr=v2843[1] }
        if      = { defs={} expr=v2844[1] }
        df      = { defs={} expr=v2845[1] }
        of      = { defs={} expr=v2846[1] }
        iopl0   = { defs={} expr=v2847[1] }
        iopl1   = { defs={} expr=v2848[1] }
        nt      = { defs={} expr=v2849[1] }
        ?15     = { defs={} expr=v2850[1] }
        ip      = { defs={0x080485b0,0x080485b1} expr=0x080485b3[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v2825[32] -4[32]) }
          value = { defs={0x080485b0} expr=v2826[32] }
          flags = { size=4 }
    ip = defs={0x080485b0,0x080485b1} expr=0x080485b3[32]
0x80485b3:push   ebx
    registers:
        ax      = { defs={} expr=v2821[32] }
        cx      = { defs={} expr=v2822[32] }
        dx      = { defs={} expr=v2823[32] }
        bx      = { defs={} expr=v2824[32] }
        sp      = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v2825[32] -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v2825[32] -4[32]) }
        si      = { defs={} expr=v2827[32] }
        di      = { defs={} expr=v2828[32] }
        es      = { defs={} expr=v2829[16] }
        cs      = { defs={} expr=v2830[16] }
        ss      = { defs={} expr=v2831[16] }
        ds      = { defs={} expr=v2832[16] }
        fs      = { defs={} expr=v2833[16] }
        gs      = { defs={} expr=v2834[16] }
        cf      = { defs={} expr=v2835[1] }
        ?1      = { defs={} expr=v2836[1] }
        pf      = { defs={} expr=v2837[1] }
        ?3      = { defs={} expr=v2838[1] }
        af      = { defs={} expr=v2839[1] }
        ?5      = { defs={} expr=v2840[1] }
        zf      = { defs={} expr=v2841[1] }
        sf      = { defs={} expr=v2842[1] }
        tf      = { defs={} expr=v2843[1] }
        if      = { defs={} expr=v2844[1] }
        df      = { defs={} expr=v2845[1] }
        of      = { defs={} expr=v2846[1] }
        iopl0   = { defs={} expr=v2847[1] }
        iopl1   = { defs={} expr=v2848[1] }
        nt      = { defs={} expr=v2849[1] }
        ?15     = { defs={} expr=v2850[1] }
        ip      = { defs={0x080485b0,0x080485b1,0x080485b3} expr=0x080485b4[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v2825[32] -4[32]) }
          value = { defs={0x080485b0} expr=v2826[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v2825[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=v2824[32] }
          flags = { size=4 }
    ip = defs={0x080485b0,0x080485b1,0x080485b3} expr=0x080485b4[32]
0x80485b4:push   eax
    registers:
        ax      = { defs={} expr=v2821[32] }
        cx      = { defs={} expr=v2822[32] }
        dx      = { defs={} expr=v2823[32] }
        bx      = { defs={} expr=v2824[32] }
        sp      = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v2825[32] -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v2825[32] -4[32]) }
        si      = { defs={} expr=v2827[32] }
        di      = { defs={} expr=v2828[32] }
        es      = { defs={} expr=v2829[16] }
        cs      = { defs={} expr=v2830[16] }
        ss      = { defs={} expr=v2831[16] }
        ds      = { defs={} expr=v2832[16] }
        fs      = { defs={} expr=v2833[16] }
        gs      = { defs={} expr=v2834[16] }
        cf      = { defs={} expr=v2835[1] }
        ?1      = { defs={} expr=v2836[1] }
        pf      = { defs={} expr=v2837[1] }
        ?3      = { defs={} expr=v2838[1] }
        af      = { defs={} expr=v2839[1] }
        ?5      = { defs={} expr=v2840[1] }
        zf      = { defs={} expr=v2841[1] }
        sf      = { defs={} expr=v2842[1] }
        tf      = { defs={} expr=v2843[1] }
        if      = { defs={} expr=v2844[1] }
        df      = { defs={} expr=v2845[1] }
        of      = { defs={} expr=v2846[1] }
        iopl0   = { defs={} expr=v2847[1] }
        iopl1   = { defs={} expr=v2848[1] }
        nt      = { defs={} expr=v2849[1] }
        ?15     = { defs={} expr=v2850[1] }
        ip      = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4} expr=0x080485b5[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v2825[32] -4[32]) }
          value = { defs={0x080485b0} expr=v2826[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v2825[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=v2824[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v2825[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b4} expr=v2821[32] }
          flags = { size=4 }
    ip = defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4} expr=0x080485b5[32]
0x80485b5:call   0x080485ba
    registers:
        ax      = { defs={} expr=v2821[32] }
        cx      = { defs={} expr=v2822[32] }
        dx      = { defs={} expr=v2823[32] }
        bx      = { defs={} expr=v2824[32] }
        sp      = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] v2825[32] -4[32]) -4[32]) -4[32]) -4[32]) }
        bp      = { defs={0x080485b0,0x080485b1} expr=(add[32] v2825[32] -4[32]) }
        si      = { defs={} expr=v2827[32] }
        di      = { defs={} expr=v2828[32] }
        es      = { defs={} expr=v2829[16] }
        cs      = { defs={} expr=v2830[16] }
        ss      = { defs={} expr=v2831[16] }
        ds      = { defs={} expr=v2832[16] }
        fs      = { defs={} expr=v2833[16] }
        gs      = { defs={} expr=v2834[16] }
        cf      = { defs={} expr=v2835[1] }
        ?1      = { defs={} expr=v2836[1] }
        pf      = { defs={} expr=v2837[1] }
        ?3      = { defs={} expr=v2838[1] }
        af      = { defs={} expr=v2839[1] }
        ?5      = { defs={} expr=v2840[1] }
        zf      = { defs={} expr=v2841[1] }
        sf      = { defs={} expr=v2842[1] }
        tf      = { defs={} expr=v2843[1] }
        if      = { defs={} expr=v2844[1] }
        df      = { defs={} expr=v2845[1] }
        of      = { defs={} expr=v2846[1] }
        iopl0   = { defs={} expr=v2847[1] }
        iopl1   = { defs={} expr=v2848[1] }
        nt      = { defs={} expr=v2849[1] }
        ?15     = { defs={} expr=v2850[1] }
        ip      = { defs={0x080485b5} expr=0x080485ba[32] }
    memory:
        address = { defs={0x080485b0} expr=(add[32] v2825[32] -4[32]) }
          value = { defs={0x080485b0} expr=v2826[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3} expr=(add[32] (add[32] v2825[32] -4[32]) -4[32]) }
          value = { defs={0x080485b3} expr=v2824[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3,0x080485b4} expr=(add[32] (add[32] (add[32] v2825[32] -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b4} expr=v2821[32] }
          flags = { size=4 }
        address = { defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5} expr=(add[32] (add[32] (add[32] (add[32] v2825[32] -4[32]) -4[32]) -4[32]) -4[32]) }
          value = { defs={0x080485b0,0x080485b1,0x080485b3,0x080485b4,0x080485b5} expr=0x080485ba[32] }
          flags = { size=4 }
    ip = defs={0x080485b5} expr=0x080485ba[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    registers:
        ax      = { defs={} expr=v2883[32] }
        cx      = { defs={} expr=v2884[32] }
        dx      = { defs={} expr=v2885[32] }
        bx      = { defs={0x080485ba} expr=v2913[32] }
        sp      = { defs={0x080485ba} expr=(add[32] v2887[32] 4[32]) }
        bp      = { defs={} expr=v2888[32] }
        si      = { defs={} expr=v2889[32] }
        di      = { defs={} expr=v2890[32] }
        es      = { defs={} expr=v2891[16] }
        cs      = { defs={} expr=v2892[16] }
        ss      = { defs={} expr=v2893[16] }
        ds      = { defs={} expr=v2894[16] }
        fs      = { defs={} expr=v2895[16] }
        gs      = { defs={} expr=v2896[16] }
        cf      = { defs={} expr=v2897[1] }
        ?1      = { defs={} expr=v2898[1] }
        pf      = { defs={} expr=v2899[1] }
        ?3      = { defs={} expr=v2900[1] }
        af      = { defs={} expr=v2901[1] }
        ?5      = { defs={} expr=v2902[1] }
        zf      = { defs={} expr=v2903[1] }
        sf      = { defs={} expr=v2904[1] }
        tf      = { defs={} expr=v2905[1] }
        if      = { defs={} expr=v2906[1] }
        df      = { defs={} expr=v2907[1] }
        of      = { defs={} expr=v2908[1] }
        iopl0   = { defs={} expr=v2909[1] }
        iopl1   = { defs={} expr=v2910[1] }
        nt      = { defs={} expr=v2911[1] }
        ?15     = { defs={} expr=v2912[1] }
        ip      = { defs={0x080485ba} expr=0x080485bb[32] }
    memory:
        address = { defs={} expr=v2887[32] }
          value = { defs={} expr=v2913[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ba} expr=0x080485bb[32]
0x80485bb:add    ebx, 0x0000110e
    registers:
        ax      = { defs={} expr=v2883[32] }
        cx      = { defs={} expr=v2884[32] }
        dx      = { defs={} expr=v2885[32] }
        bx      = { defs={0x080485ba,0x080485bb} expr=(add[32] v2913[32] 4366[32]) }
        sp      = { defs={0x080485ba} expr=(add[32] v2887[32] 4[32]) }
        bp      = { defs={} expr=v2888[32] }
        si      = { defs={} expr=v2889[32] }
        di      = { defs={} expr=v2890[32] }
        es      = { defs={} expr=v2891[16] }
        cs      = { defs={} expr=v2892[16] }
        ss      = { defs={} expr=v2893[16] }
        ds      = { defs={} expr=v2894[16] }
        fs      = { defs={} expr=v2895[16] }
        gs      = { defs={} expr=v2896[16] }
        cf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2913[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2913[32]) 4366[33]))))) }
        ?1      = { defs={} expr=v2898[1] }
        pf      = { defs={0x080485ba,0x080485bb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))))))) }
        ?3      = { defs={} expr=v2900[1] }
        af      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2913[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2913[32]) 4366[33]))))) }
        ?5      = { defs={} expr=v2902[1] }
        zf      = { defs={0x080485ba,0x080485bb} expr=(zerop[1] (add[32] v2913[32] 4366[32])) }
        sf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (add[32] v2913[32] 4366[32])) }
        tf      = { defs={} expr=v2905[1] }
        if      = { defs={} expr=v2906[1] }
        df      = { defs={} expr=v2907[1] }
        of      = { defs={0x080485ba,0x080485bb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2913[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2913[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2913[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2913[32]) 4366[33])))))) }
        iopl0   = { defs={} expr=v2909[1] }
        iopl1   = { defs={} expr=v2910[1] }
        nt      = { defs={} expr=v2911[1] }
        ?15     = { defs={} expr=v2912[1] }
        ip      = { defs={0x080485ba,0x080485bb} expr=0x080485c1[32] }
    memory:
        address = { defs={} expr=v2887[32] }
          value = { defs={} expr=v2913[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485ba,0x080485bb} expr=0x080485c1[32]
0x80485c1:call   0x08048390
    registers:
        ax      = { defs={} expr=v2883[32] }
        cx      = { defs={} expr=v2884[32] }
        dx      = { defs={} expr=v2885[32] }
        bx      = { defs={0x080485ba,0x080485bb} expr=(add[32] v2913[32] 4366[32]) }
        sp      = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] v2887[32] 4[32]) -4[32]) }
        bp      = { defs={} expr=v2888[32] }
        si      = { defs={} expr=v2889[32] }
        di      = { defs={} expr=v2890[32] }
        es      = { defs={} expr=v2891[16] }
        cs      = { defs={} expr=v2892[16] }
        ss      = { defs={} expr=v2893[16] }
        ds      = { defs={} expr=v2894[16] }
        fs      = { defs={} expr=v2895[16] }
        gs      = { defs={} expr=v2896[16] }
        cf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2913[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2913[32]) 4366[33]))))) }
        ?1      = { defs={} expr=v2898[1] }
        pf      = { defs={0x080485ba,0x080485bb} expr=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2913[32] 4366[32]))))))) }
        ?3      = { defs={} expr=v2900[1] }
        af      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2913[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2913[32]) 4366[33]))))) }
        ?5      = { defs={} expr=v2902[1] }
        zf      = { defs={0x080485ba,0x080485bb} expr=(zerop[1] (add[32] v2913[32] 4366[32])) }
        sf      = { defs={0x080485ba,0x080485bb} expr=(extract[1] 31[32] 32[32] (add[32] v2913[32] 4366[32])) }
        tf      = { defs={} expr=v2905[1] }
        if      = { defs={} expr=v2906[1] }
        df      = { defs={} expr=v2907[1] }
        of      = { defs={0x080485ba,0x080485bb} expr=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2913[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2913[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2913[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2913[32]) 4366[33])))))) }
        iopl0   = { defs={} expr=v2909[1] }
        iopl1   = { defs={} expr=v2910[1] }
        nt      = { defs={} expr=v2911[1] }
        ?15     = { defs={} expr=v2912[1] }
        ip      = { defs={0x080485c1} expr=0x08048390[32] }
    memory:
        address = { defs={0x080485ba,0x080485c1} expr=(add[32] (add[32] v2887[32] 4[32]) -4[32]) }
          value = { defs={0x080485ba,0x080485bb,0x080485c1} expr=0x080485c6[32] }
          flags = { size=4 }
    ip = defs={0x080485c1} expr=0x08048390[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    registers:
        ax      = { defs={0x080485c6} expr=v2976[32] }
        cx      = { defs={} expr=v2947[32] }
        dx      = { defs={} expr=v2948[32] }
        bx      = { defs={} expr=v2949[32] }
        sp      = { defs={0x080485c6} expr=(add[32] v2950[32] 4[32]) }
        bp      = { defs={} expr=v2951[32] }
        si      = { defs={} expr=v2952[32] }
        di      = { defs={} expr=v2953[32] }
        es      = { defs={} expr=v2954[16] }
        cs      = { defs={} expr=v2955[16] }
        ss      = { defs={} expr=v2956[16] }
        ds      = { defs={} expr=v2957[16] }
        fs      = { defs={} expr=v2958[16] }
        gs      = { defs={} expr=v2959[16] }
        cf      = { defs={} expr=v2960[1] }
        ?1      = { defs={} expr=v2961[1] }
        pf      = { defs={} expr=v2962[1] }
        ?3      = { defs={} expr=v2963[1] }
        af      = { defs={} expr=v2964[1] }
        ?5      = { defs={} expr=v2965[1] }
        zf      = { defs={} expr=v2966[1] }
        sf      = { defs={} expr=v2967[1] }
        tf      = { defs={} expr=v2968[1] }
        if      = { defs={} expr=v2969[1] }
        df      = { defs={} expr=v2970[1] }
        of      = { defs={} expr=v2971[1] }
        iopl0   = { defs={} expr=v2972[1] }
        iopl1   = { defs={} expr=v2973[1] }
        nt      = { defs={} expr=v2974[1] }
        ?15     = { defs={} expr=v2975[1] }
        ip      = { defs={0x080485c6} expr=0x080485c7[32] }
    memory:
        address = { defs={} expr=v2950[32] }
          value = { defs={} expr=v2976[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485c6} expr=0x080485c7[32]
0x80485c7:pop    ebx
    registers:
        ax      = { defs={0x080485c6} expr=v2976[32] }
        cx      = { defs={} expr=v2947[32] }
        dx      = { defs={} expr=v2948[32] }
        bx      = { defs={0x080485c7} expr=v2977[32] }
        sp      = { defs={0x080485c6,0x080485c7} expr=(add[32] (add[32] v2950[32] 4[32]) 4[32]) }
        bp      = { defs={} expr=v2951[32] }
        si      = { defs={} expr=v2952[32] }
        di      = { defs={} expr=v2953[32] }
        es      = { defs={} expr=v2954[16] }
        cs      = { defs={} expr=v2955[16] }
        ss      = { defs={} expr=v2956[16] }
        ds      = { defs={} expr=v2957[16] }
        fs      = { defs={} expr=v2958[16] }
        gs      = { defs={} expr=v2959[16] }
        cf      = { defs={} expr=v2960[1] }
        ?1      = { defs={} expr=v2961[1] }
        pf      = { defs={} expr=v2962[1] }
        ?3      = { defs={} expr=v2963[1] }
        af      = { defs={} expr=v2964[1] }
        ?5      = { defs={} expr=v2965[1] }
        zf      = { defs={} expr=v2966[1] }
        sf      = { defs={} expr=v2967[1] }
        tf      = { defs={} expr=v2968[1] }
        if      = { defs={} expr=v2969[1] }
        df      = { defs={} expr=v2970[1] }
        of      = { defs={} expr=v2971[1] }
        iopl0   = { defs={} expr=v2972[1] }
        iopl1   = { defs={} expr=v2973[1] }
        nt      = { defs={} expr=v2974[1] }
        ?15     = { defs={} expr=v2975[1] }
        ip      = { defs={0x080485c6,0x080485c7} expr=0x080485c8[32] }
    memory:
        address = { defs={} expr=v2950[32] }
          value = { defs={} expr=v2976[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c6} expr=(add[32] v2950[32] 4[32]) }
          value = { defs={} expr=v2977[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485c6,0x080485c7} expr=0x080485c8[32]
0x80485c8:leave  
    registers:
        ax      = { defs={0x080485c6} expr=v2976[32] }
        cx      = { defs={} expr=v2947[32] }
        dx      = { defs={} expr=v2948[32] }
        bx      = { defs={0x080485c7} expr=v2977[32] }
        sp      = { defs={0x080485c8} expr=(add[32] v2951[32] 4[32]) }
        bp      = { defs={0x080485c8} expr=v2978[32] }
        si      = { defs={} expr=v2952[32] }
        di      = { defs={} expr=v2953[32] }
        es      = { defs={} expr=v2954[16] }
        cs      = { defs={} expr=v2955[16] }
        ss      = { defs={} expr=v2956[16] }
        ds      = { defs={} expr=v2957[16] }
        fs      = { defs={} expr=v2958[16] }
        gs      = { defs={} expr=v2959[16] }
        cf      = { defs={} expr=v2960[1] }
        ?1      = { defs={} expr=v2961[1] }
        pf      = { defs={} expr=v2962[1] }
        ?3      = { defs={} expr=v2963[1] }
        af      = { defs={} expr=v2964[1] }
        ?5      = { defs={} expr=v2965[1] }
        zf      = { defs={} expr=v2966[1] }
        sf      = { defs={} expr=v2967[1] }
        tf      = { defs={} expr=v2968[1] }
        if      = { defs={} expr=v2969[1] }
        df      = { defs={} expr=v2970[1] }
        of      = { defs={} expr=v2971[1] }
        iopl0   = { defs={} expr=v2972[1] }
        iopl1   = { defs={} expr=v2973[1] }
        nt      = { defs={} expr=v2974[1] }
        ?15     = { defs={} expr=v2975[1] }
        ip      = { defs={0x080485c6,0x080485c7,0x080485c8} expr=0x080485c9[32] }
    memory:
        address = { defs={} expr=v2950[32] }
          value = { defs={} expr=v2976[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c6} expr=(add[32] v2950[32] 4[32]) }
          value = { defs={} expr=v2977[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c8} expr=v2951[32] }
          value = { defs={} expr=v2978[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485c6,0x080485c7,0x080485c8} expr=0x080485c9[32]
0x80485c9:ret    
    registers:
        ax      = { defs={0x080485c6} expr=v2976[32] }
        cx      = { defs={} expr=v2947[32] }
        dx      = { defs={} expr=v2948[32] }
        bx      = { defs={0x080485c7} expr=v2977[32] }
        sp      = { defs={0x080485c8,0x080485c9} expr=(add[32] (add[32] v2951[32] 4[32]) 4[32]) }
        bp      = { defs={0x080485c8} expr=v2978[32] }
        si      = { defs={} expr=v2952[32] }
        di      = { defs={} expr=v2953[32] }
        es      = { defs={} expr=v2954[16] }
        cs      = { defs={} expr=v2955[16] }
        ss      = { defs={} expr=v2956[16] }
        ds      = { defs={} expr=v2957[16] }
        fs      = { defs={} expr=v2958[16] }
        gs      = { defs={} expr=v2959[16] }
        cf      = { defs={} expr=v2960[1] }
        ?1      = { defs={} expr=v2961[1] }
        pf      = { defs={} expr=v2962[1] }
        ?3      = { defs={} expr=v2963[1] }
        af      = { defs={} expr=v2964[1] }
        ?5      = { defs={} expr=v2965[1] }
        zf      = { defs={} expr=v2966[1] }
        sf      = { defs={} expr=v2967[1] }
        tf      = { defs={} expr=v2968[1] }
        if      = { defs={} expr=v2969[1] }
        df      = { defs={} expr=v2970[1] }
        of      = { defs={} expr=v2971[1] }
        iopl0   = { defs={} expr=v2972[1] }
        iopl1   = { defs={} expr=v2973[1] }
        nt      = { defs={} expr=v2974[1] }
        ?15     = { defs={} expr=v2975[1] }
        ip      = { defs={0x080485c9} expr=v2979[32] }
    memory:
        address = { defs={} expr=v2950[32] }
          value = { defs={} expr=v2976[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c6} expr=(add[32] v2950[32] 4[32]) }
          value = { defs={} expr=v2977[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c8} expr=v2951[32] }
          value = { defs={} expr=v2978[32] }
          flags = { size=4; read-only }
        address = { defs={0x080485c8} expr=(add[32] v2951[32] 4[32]) }
          value = { defs={} expr=v2979[32] }
          flags = { size=4; read-only }
    ip = defs={0x080485c9} expr=v2979[32]
analyzed headers: 1
