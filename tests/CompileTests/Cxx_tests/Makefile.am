include $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs

# Import list of C++ test cases that should pass:
#   EXAMPLE_TESTCODES_REQUIRED_TO_PASS
#   EXAMPLE_TESTCODES_REQUIRED_TO_PASS_SHORT
#



if ROSE_USE_EDG_VERSION_4_3

# EXAMPLE_TESTCODES_REQUIRED_TO_PASS = \
#  $(TESTCODE_CURRENTLY_FAILING)


EXAMPLE_TESTCODES_REQUIRED_TO_PASS = \
test_CplusplusMacro_Cpp.C \
test2001_01.C \
test2001_02.C \
test2001_03.C \
test2001_04.C \
test2001_05.C \
test2001_06.C \
test2001_07.C \
test2001_08.C \
test2001_09.C \
test2001_10.C \
test2001_11.C \
test2001_12.C \
test2001_13.C \
test2001_14.C \
test2001_15.C \
test2001_16.C \
test2001_17.C \
test2001_18.C \
test2001_19.C \
test2001_20.C \
test2001_21.C \
test2001_22.C \
test2001_23.C \
test2001_24.C \
test2001_25.C \
test2001_26.C \
test2001_27.C \
test2001_28.C \
test2001_29.C \
test2002_01.C \
test2003_01.C \
test2003_02.C \
test2003_03.C \
test2003_04.C \
test2003_05.C \
test2003_06.C \
test2003_08.C \
test2003_09.C \
test2003_10.C \
test2003_11.C \
test2003_12.C \
test2003_13.C \
test2003_14.C \
test2003_15.C \
test2003_16.C \
test2003_17.C \
test2003_18.C \
test2003_19.C \
test2003_20.C \
test2003_21.C \
test2003_23.C \
test2003_25.C \
test2003_26.C \
test2003_27.C \
test2003_28.C \
test2003_29.C \
test2003_30.C \
test2003_31.C \
test2003_32.C \
test2003_35.C \
test2003_36.C \
test2003_37.C \
test2003_38.C \
test2004_01.C \
test2004_02.C \
test2004_03.C \
test2004_04.C \
test2004_05.C \
test2004_06.C \
test2004_07.C \
test2004_08.C \
test2004_09.C \
test2004_10.C \
test2004_11.C \
test2004_12.C \
test2004_13.C \
test2004_14.C \
test2004_15.C \
test2004_16.C \
test2004_17.C \
test2004_18.C \
test2004_19.C \
test2004_23.C \
test2004_24.C \
test2004_26.C \
test2004_27.C \
test2004_28.C \
test2004_29.C \
test2004_30.C \
test2004_31.C \
test2004_32.C \
test2004_33.C \
test2004_34.C \
test2004_36.C \
test2004_37.C \
test2004_38.C \
test2004_39.C \
test2004_40.C \
test2004_42.C \
test2004_43.C \
test2004_44.C \
test2004_45.C \
test2004_47.C \
test2004_48.C \
test2004_49.C \
test2004_50.C \
test2004_51.C \
test2004_52.C \
test2004_53.C \
test2004_54.C \
test2004_55.C \
test2004_56.C \
test2004_58.C \
test2004_59.C \
test2004_60.C \
test2004_61.C \
test2004_62.C \
test2004_63.C \
test2004_64.C \
test2004_65.C \
test2004_67.C \
test2004_68.C \
test2004_69.C \
test2004_70.C \
test2004_71.C \
test2004_72.C \
test2004_73.C \
test2004_74.C \
test2004_75.C \
test2004_76.C \
test2004_77.C \
test2004_78.C \
test2004_79.C \
test2004_80.C \
test2004_81.C \
test2004_83.C \
test2004_84.C \
test2004_85.C \
test2004_86.C \
test2004_87.C \
test2004_88.C \
test2004_89.C \
test2004_90.C \
test2004_91.C \
test2004_93.C \
test2004_94.C \
test2004_95.C \
test2004_96.C \
test2004_97.C \
test2004_98.C \
test2004_99.C \
test2004_100.C \
test2004_101.C \
test2004_102.C \
test2004_103.C \
test2004_104.C \
test2004_105.C \
test2004_106.C \
test2004_107.C \
test2004_108.C \
test2004_109.C \
test2004_110.C \
test2004_111.C \
test2004_112.C \
test2004_113.C \
test2004_114.C \
test2004_115.C \
test2004_116.C \
test2004_117.C \
test2004_118.C \
test2004_119.C \
test2004_120.C \
test2004_121.C \
test2004_122.C \
test2004_123.C \
test2004_124.C \
test2004_125.C \
test2004_127.C \
test2004_128.C \
test2004_129.C \
test2004_130.C \
test2004_131.C \
test2004_132.C \
test2004_133.C \
test2004_134.C \
test2004_135.C \
test2004_136.C \
test2004_137.C \
test2004_138.C \
test2004_139.C \
test2004_140.C \
test2004_141.C \
test2004_142.C \
test2004_143.C \
test2004_144.C \
test2004_145.C \
test2004_146.C \
test2004_147.C \
test2004_148.C \
test2004_149.C \
test2004_150.C \
test2004_151.C \
test2004_152.C \
test2004_153.C \
test2004_154.C \
test2004_155.C \
test2004_156.C \
test2004_157.C \
test2004_158.C \
test2004_159.C \
test2004_160.C \
test2004_161.C \
test2004_162.C \
test2004_163.C \
test2004_164.C \
test2005_01.C \
test2005_02.C \
test2005_03.C \
test2005_04.C \
test2005_05.C \
test2005_06.C \
test2005_07.C \
test2005_08.C \
test2005_09.C \
test2005_10.C \
test2005_11.C \
test2005_12.C \
test2005_13.C \
test2005_14.C \
test2005_15.C \
test2005_16.C \
test2005_17.C \
test2005_19.C \
test2005_20.C \
test2005_21.C \
test2005_22.C \
test2005_23.C \
test2005_24.C \
test2005_25.C \
test2005_26.C \
test2005_27.C \
test2005_28.C \
test2005_29.C \
test2005_30.C \
test2005_31.C \
test2005_32.C \
test2005_33.C \
test2005_34.C \
test2005_35.C \
test2005_36.C \
test2005_37.C \
test2005_38.C \
test2005_39.C \
test2005_40.C \
test2005_41.C \
test2005_42.C \
test2005_43.C \
test2005_44.C \
test2005_45.C \
test2005_46.C \
test2005_47.C \
test2005_48.C \
test2005_49.C \
test2005_50.C \
test2005_51.C \
test2005_52.C \
test2005_53.C \
test2005_55.C \
test2005_57.C \
test2005_58.C \
test2005_59.C \
test2005_61.C \
test2005_62.C \
test2005_63.C \
test2005_64.C \
test2005_65.C \
test2005_66.C \
test2005_67.C \
test2005_68.C \
test2005_70.C \
test2005_71.C \
test2005_72.C \
test2005_73.C \
test2005_74.C \
test2005_75a.C \
test2005_75b.C \
test2005_76.C \
test2005_77.C \
test2005_78.C \
test2005_79.C \
test2005_80.C \
test2005_81.C \
test2005_82.C \
test2005_83.C \
test2005_84.C \
test2005_86.C \
test2005_87.C \
test2005_88.C \
test2005_89.C \
test2005_90.C \
test2005_91.C \
test2005_92.C \
test2005_93.C \
test2005_94.C \
test2005_95.C \
test2005_96.C \
test2005_97.C \
test2005_98.C \
test2005_99.C \
test2005_100.C \
test2005_101.C \
test2005_102.C \
test2005_103.C \
test2005_104.C \
test2005_105.C \
test2005_106.C \
test2005_107.C \
test2005_108.C \
test2005_109.C \
test2005_110.C \
test2005_111.C \
test2005_112.C \
test2005_113.C \
test2005_114.C \
test2005_116.C \
test2005_117.C \
test2005_118.C \
test2005_119.C \
test2005_120.C \
test2005_121.C \
test2005_122.C \
test2005_123.C \
test2005_124.C \
test2005_125.C \
test2005_126.C \
test2005_127.C \
test2005_128.C \
test2005_129.C \
test2005_130.C \
test2005_131.C \
test2005_132.C \
test2005_133.C \
test2005_134.C \
test2005_135.C \
test2005_136.C \
test2005_137.C \
test2005_138.C \
test2005_139.C \
test2005_140.C \
test2005_141.C \
test2005_142.C \
test2005_143.C \
test2005_144.C \
test2005_145.C \
test2005_146.C \
test2005_147.C \
test2005_148.C \
test2005_149.C \
test2005_150.C \
test2005_152.C \
test2005_153.C \
test2005_154.C \
test2005_155.C \
test2005_156.C \
test2005_157.C \
test2005_158.C \
test2005_159.C \
test2005_160.C \
test2005_161.C \
test2005_162.C \
test2005_163.C \
test2005_164.C \
test2005_165.C \
test2005_166.C \
test2005_167.C \
test2005_168.C \
test2005_169.C \
test2005_170.C \
test2005_171.C \
test2005_172.C \
test2005_173.C \
test2005_174.C \
test2005_175.C \
test2005_176.C \
test2005_177.C \
test2005_178.C \
test2005_179.C \
test2005_180.C \
test2005_181.C \
test2005_182.C \
test2005_183.C \
test2005_184.C \
test2005_185.C \
test2005_187.C \
test2005_189.C \
test2005_190.C \
test2005_191.C \
test2005_192.C \
test2005_193.C \
test2005_194.C \
test2005_195.C \
test2005_196.C \
test2005_197.C \
test2005_198.C \
test2005_199.C \
test2005_202.C \
test2005_203.C \
test2005_206.C \
test2005_207.C \
test2005_208.C \
test2005_209.C \
test2006_01.C \
test2006_02.C \
test2006_03.C \
test2006_04.C \
test2006_05.C \
test2006_06.C \
test2006_07.C \
test2006_08.C \
test2006_10.C \
test2006_12.C \
test2006_13.C \
test2006_14.C \
test2006_16.C \
test2006_17.C \
test2006_18.C \
test2006_19.C \
test2006_20.C \
test2006_22.C \
test2006_23.C \
test2006_25.C \
test2006_26.C \
test2006_28.C \
test2006_34.C \
test2006_37.C \
test2006_38.C \
test2006_39.C \
test2006_40.C \
test2006_41.C \
test2006_42.C \
test2006_44.C \
test2006_46.C \
test2006_47.C \
test2006_50.C \
test2006_52.C \
test2006_53.C \
test2006_54.C \
test2006_55.C \
test2006_56.C \
test2006_57.C \
test2006_58.C \
test2006_59.C \
test2005_60.C \
test2006_61.C \
test2006_62.C \
test2006_63.C \
test2006_66.C \
test2006_67.C \
test2006_68.C \
test2006_69.C \
test2006_70.C \
test2006_71.C \
test2006_72.C \
test2006_73.C \
test2006_74.C \
test2006_75.C \
test2006_76.C \
test2006_77.C \
test2006_78.C \
test2006_79.C \
test2006_80.C \
test2006_81.C \
test2006_82.C \
test2006_83.C \
test2006_84.C \
test2006_85.C \
test2006_86.C \
test2006_87.C \
test2006_88.C \
test2006_89.C \
test2006_91.C \
test2006_92.C \
test2006_93.C \
test2006_94.C \
test2006_95.C \
test2006_96.C \
test2006_97.C \
test2006_98.C \
test2006_99.C \
test2006_101.C \
test2006_102.C \
test2006_103.C \
test2006_104.C \
test2006_105.C \
test2006_106.C \
test2006_107.C \
test2006_108.C \
test2006_109.C \
test2006_111.C \
test2006_113.C \
test2006_114.C \
test2006_115.C \
test2006_116.C \
test2006_117.C \
test2006_118.C \
test2006_119.C \
test2006_120.C \
test2006_121.C \
test2006_123.C \
test2006_124.C \
test2006_125.C \
test2006_126.C  \
test2006_129.C \
test2006_139.C \
test2006_140.C \
test2006_141.C \
test2006_142.C \
test2006_143.C \
test2006_144.C \
test2006_145.C \
test2006_146.C \
test2006_147.C \
test2006_148.C \
test2006_149.C \
test2006_150.C \
test2006_152.C \
test2006_153.C \
test2006_154.C \
test2006_155.C \
test2006_156.C \
test2006_157.C \
test2006_158.C \
test2006_159.C \
test2006_160.C \
test2006_161.C \
test2006_162.C \
test2006_163.C \
test2006_164.C \
test2006_165.C \
test2006_166.C \
test2006_177.C \
test2006_178.C \
test2006_179.C \
test2006_181.C \
test2006_183.C \
test2006_185.C \
test2006_189.C \
test2007_01.C \
test2007_02.C \
test2007_03.C \
test2007_04.C \
test2007_05.C \
test2007_06.C \
test2007_07.C \
test2007_08.C \
test2007_09.C \
test2007_10.C \
test2007_11.C \
test2007_12.C \
test2007_13.C \
test2007_14.C \
test2007_15.C \
test2007_16.C \
test2007_17.C \
test2007_21.C \
test2007_23.C \
test2007_24.C \
test2007_25.C \
test2007_26.C \
test2007_28.C \
test2007_29.C \
test2007_40.C \
test2007_41.C \
test2007_43.C \
test2007_44.C \
test2007_46.C \
test2007_47.C \
test2007_48.C \
test2007_49.C \
test2007_50.C \
test2007_51.C \
test2007_52.C \
test2007_53.C \
test2007_55.C \
test2007_57.C \
test2007_59.C \
test2007_70.C \
test2007_72.C \
test2007_75.C \
test2007_77.C \
test2007_78.C \
test2007_81.C \
test2007_82.C \
test2007_83.C \
test2007_84.C \
test2007_85.C \
test2007_90.C \
test2007_94.C \
test2007_98.C \
test2007_102.C \
test2007_103.C \
test2007_128.C \
test2007_130.C \
test2007_133.C \
test2007_135.C \
test2007_140.C \
test2007_142.C \
test2007_147.C \
test2007_150.C \
test2007_151.C \
test2007_152.C \
test2007_154.C \
test2007_155.C \
test2007_157.C \
test2007_158.C \
test2007_159.C \
test2007_160.C \
test2007_161.C \
test2007_162.C \
test2007_163.C \
test2007_164.C \
test2007_165.C \
test2007_166.C \
test2007_167.C \
test2007_169.C \
test2007_170.C \
test2007_171.C \
test2007_172.C \
test2007_173.C \
test2008_01.C \
test2008_03.C \
test2008_04.C \
test2008_05.C \
test2008_06.C \
test2008_08.C \
test2008_09.C \
test2008_10.C \
test2008_11.C \
test2008_12.C \
test2008_13.C \
test2008_14.C \
test2008_16.C \
test2009_01.C \
test2009_02.C \
test2009_03.C \
test2009_04.C \
test2009_05.C \
test2009_06.C \
test2009_08.C \
test2009_09.C \
test2009_10.C \
test2009_11.C \
test2009_12.C \
test2009_14.C \
test2009_15.C \
test2009_18.C \
test2009_19.C \
test2009_20.C \
test2009_27.C \
test2009_28.C \
test2009_31.C \
test2009_40.C \
test2009_41.C \
test2009_42.C \
test2010_03.C \
test2010_04.C \
test2010_05.C \
test2010_06.C \
test2010_18.C \
test2010_19.C \
test2011_01.C \
test2011_02.C \
test2011_05.C \
test2011_07.C \
test2011_19.C \
test2011_20.C \
test2011_21.C \
test2011_22.C \
test2011_23.C \
test2011_24.C \
test2011_25.C \
test2011_26.C \
test2011_27.C \
test2011_28.C \
test2011_29.C \
test2011_30.C \
test2011_33.C \
test2011_34.C \
test2011_35.C \
test2011_36.C \
test2011_37.C \
test2011_38.C \
test2011_39.C \
test2011_40.C \
test2011_41.C \
test2011_42.C \
test2011_43.C \
test2011_44.C \
test2011_45.C \
test2011_46.C \
test2011_47.C \
test2011_48.C \
test2011_49.C \
test2011_50.C \
test2011_51.C \
test2011_52.C \
test2011_53.C \
test2011_54.C \
test2011_55.C \
test2011_56.C \
test2011_57.C \
test2011_58.C \
test2011_59.C \
test2011_60.C \
test2011_61.C \
test2011_62.C \
test2011_63.C \
test2011_64.C \
test2011_66.C \
test2011_67.C \
test2011_68.C \
test2011_69.C \
test2011_70.C \
test2011_71.C \
test2011_72.C \
test2011_73.C \
test2011_74.C \
test2011_75.C \
test2011_76.C \
test2011_77.C \
test2011_78.C \
test2011_79.C \
test2011_81.C \
test2011_82.C \
test2011_83.C \
test2011_84.C \
test2011_85.C \
test2011_86.C \
test2011_87.C \
test2011_88.C \
test2011_89.C \
test2011_90.C \
test2011_91.C \
test2011_92.C \
test2011_93.C \
test2011_94.C \
test2011_95.C \
test2011_96.C \
test2011_97.C \
test2011_98.C \
test2011_99.C \
test2011_100.C \
test2011_101.C \
test2011_110.C \
test2011_111.C \
test2011_115.C \
test2011_117.C \
test2011_118.C \
test2011_119.C \
test2011_120.C \
test2011_121.C \
test2011_133.C \
test2011_135.C \
test2011_136.C \
test2011_137.C \
test2011_138.C \
test2011_139.C \
test2011_140.C \
test2011_141.C \
test2011_142.C \
test2011_143.C \
test2011_146.C \
test2011_147.C \
test2011_149.C \
test2011_150.C \
test2011_151.C \
test2011_152.C \
test2011_153.C \
test2011_154.C \
test2011_155.C \
test2011_156.C \
test2011_157.C \
test2011_158.C \
test2011_159.C \
test2011_160.C \
test2011_161.C \
test2011_162.C \
test2011_163.C \
test2011_164.C \
test2011_165.C \
test2011_166.C \
test2011_167.C \
test2011_168.C \
test2011_169.C \
test2011_170.C \
test2011_171.C \
test2011_172.C \
test2011_173.C \
test2011_174.C \
test2011_175.C \
test2011_176.C \
test2011_177.C \
test2011_179.C \
test2011_180.C \
test2011_181.C \
test2011_182.C \
test2011_183.C \
test2011_184.C \
test2011_185.C \
test2011_186.C \
test2011_187.C \
test2011_188.C \
test2011_189.C \
test2011_190.C \
test2011_191.C \
test2011_192.C \
test2011_193.C \
test2011_194.C \
test2011_195.C \
test2012_01.C \
test2012_02.C \
test2012_03.C \
test2012_04.C \
test2012_05.C \
test2012_06.C \
test2012_07.C \
test2012_08.C \
test2012_09.C \
test2012_10.C \
test2012_11.C \
test2012_12.C \
test2012_13.C \
test2012_14.C \
test2012_15.C \
test2012_16.C \
test2012_17.C \
test2012_18.C \
test2012_19.C \
test2012_20.C \
test2012_21.C \
test2012_22.C \
test2012_23.C \
test2012_24.C \
test2012_25.C \
test2012_26.C \
test2012_27.C \
test2012_28.C \
test2012_29.C \
test2012_30.C \
test2012_31.C \
test2012_32.C \
test2012_34.C \
test2012_36.C \
test2012_37.C \
test2012_38.C \
test2012_39.C \
test2012_40.C \
test2012_41.C \
test2012_42.C \
test2012_43.C \
test2012_44.C \
test2012_45.C \
test2012_46.C \
test2012_47.C \
test2012_48.C \
test2012_49.C \
test2012_50.C \
test2012_51.C \
test2012_52.C \
test2012_53.C \
test2012_54.C \
test2012_55.C \
test2012_56.C \
test2012_57.C \
test2012_58.C \
test2012_59.C \
test2012_60.C \
test2012_61.C \
test2012_62.C \
test2012_63.C \
test2012_64.C \
test2012_65.C \
test2012_66.C \
test2012_67.C \
test2012_68.C \
test2012_69.C \
test2012_70.C \
test2012_71.C \
test2012_72.C \
test2012_73.C \
test2012_74.C \
test2012_75.C \
test2012_76.C \
test2012_77.C \
test2012_78.C \
test2012_80.C \
test2012_81.C \
test2012_82.C \
test2012_83.C \
test2012_84.C \
test2012_85.C \
test2012_87.C \
test2012_88.C \
test2012_89.C \
test2012_90.C \
test2012_91.C \
test2012_92.C \
test2012_93.C \
test2012_94.C \
test2012_95.C \
test2012_96.C \
test2012_97.C \
test2012_98.C \
test2012_99.C \
test2012_100.C \
test2012_101.C \
test2012_102.C \
test2012_103.C \
test2012_104.C \
test2012_105.C \
test2012_106.C \
test2012_107.C \
test2012_108.C \
test2012_109.C \
test2012_110.C \
test2012_111.C \
test2012_112.C \
test2012_113.C \
test2012_114.C \
test2012_115.C \
test2012_116.C \
test2012_117.C \
test2012_118.C \
test2012_119.C \
test2012_120.C \
test2012_121.C \
test2012_122.C \
test2012_123.C \
test2012_124.C \
test2012_125.C \
test2012_126.C \
test2012_127.C \
test2012_128.C \
test2012_129.C \
test2012_130.C \
test2012_131.C \
test2012_132.C \
test2012_136.C \
test2012_137.C \
test2012_138.C \
test2012_141.C \
test2012_142.C \
test2012_143.C \
test2012_144.C \
test2012_145.C \
test2012_146.C \
test2012_147.C \
test2012_148.C \
test2012_149.C \
test2012_150.C \
test2012_151.C \
test2012_152.C \
test2012_153.C \
test2012_154.C \
test2012_155.C \
test2012_156.C \
test2012_157.C \
test2012_158.C \
test2012_159.C \
test2012_160.C \
test2012_161.C \
test_int_lexemes.C \
test_int_lexemes_donot_pass.C \
test_simple_int.C \
test_wchars.C \
lexPhase2003_01.C \
inputForLoopLocator.C \
inputBug317.C \
X.C \
$(NEW_PASSING_FILES)

# DQ (3/23/2012): New passing files
NEW_PASSING_FILES = 

# $(TESTCODE_CURRENTLY_FAILING)
# DQ (2/15/2012): These test codes fail on OSX only.
TESTCODE_CURRENTLY_FAILING_ON_OSX = \
test2011_06.C \
test2004_35.C 

# DQ (12/29/2011): This passes but I had to handle a template constant parameter incorrectly in the AST to get past a problem in EDG (or my lack of understanding of an aspect of EDG).
# test2011_191.C 
# test2012_79.C 
# test2012_81.C 

else
include $(srcdir)/Makefile-pass.inc
endif





# Import list of C++ test cases that are known to fail:
#   TESTCODE_CURRENTLY_FAILING
#
if ROSE_USE_EDG_VERSION_4_3
TESTCODE_CURRENTLY_FAILING = \
test2006_90.C \
test2006_122.C \
 test2006_151.C \
test2007_38.C \
test2007_137.C \
test2007_141.C \
test2009_21.C \
test2009_24.C \
test2009_30.C \
 test2009_37.C \
test2009_39.C \
test2010_24.C \
test2011_31.C \
test2011_32.C \
 test2011_65.C \
test2011_80.C \
 test2012_33.C \
inputBug327.C 


# DQ (2/19/2012): These appear to fail only sometimes and were noticed just before going on travel (test with valgrind).
STATISTICALLY_FAILING_TESTS = \
test2007_62.C \
math.C 

# DQ (5/17/2012): These are new tests which I deamed up and which fail.
# they likely failed in the older version of EDG support, but were not 
# tested there.  Since the current focus is on the previous level of
# robustness. These are considered to be NEW failing tests to work on 
# later (when the previously passing tests are fixed in the newer EDG 
# support).
NEW_FAILING_TESTS = \
test2012_86.C


else
include $(srcdir)/Makefile-fail.inc
endif

# Configure-time automake conditional
if ROSE_USE_LONG_MAKE_CHECK_RULE

# This is the long test of ROSE (takes a while!)
TESTCODES_REQUIRED_TO_PASS = $(EXAMPLE_TESTCODES_REQUIRED_TO_PASS)

else # !ROSE_USE_LONG_MAKE_CHECK_RULE

# Shorten the list of code to compile to simplify checks using "make distcheck"
# Note that the tests test2001_02.C and test2001_03.C are required because the
# tests in ../C_subset_of_Cxx use them and that test2004_116.C is required 
# because the tests in ROSE/tests/roseTests/programTransformationTests use it.
TESTCODES_REQUIRED_TO_PASS = $(EXAMPLE_TESTCODES_REQUIRED_TO_PASS_SHORT)

endif # ROSE_USE_LONG_MAKE_CHECK_RULE

# Automake's testing mechanism (which defines the "make check" rule) requires passing tests.
TESTCODES = \
$(TESTCODES_REQUIRED_TO_PASS) 

# QMTest allows both passing and failing tests.
ALL_TESTCODES = \
$(TESTCODES_REQUIRED_TO_PASS) \
$(TESTCODE_CURRENTLY_FAILING)

SKIP_UNPARSE_C_ASM_STATEMENTS = -rose:skip_unparse_asm_commands

# DQ (5/8/2011): Adding -rose:skipfinalCompileStep so that we can test the new name qualification support that is not yet hooked up to the unparser.
ROSE_FLAGS = --edg:no_warnings -w -rose:verbose 0 $(SKIP_UNPARSE_C_ASM_STATEMENTS)
# ROSE_FLAGS = --edg:no_warnings -w -rose:verbose 0 -rose:skipfinalCompileStep $(SKIP_UNPARSE_C_ASM_STATEMENTS)

# Some of these test codes reference A++ header fiels as part of their tests
# Include the path to A++ and the transformation specification
TESTCODE_INCLUDES = -I$(top_srcdir)/tests/CompileTests/A++Code

PASSING_TEST_Objects = ${TESTCODES:.C=.o}
TEST_Objects = ${ALL_TESTCODES:.C=.o}

# DQ (9/18/2011): Added testing for new option to use folded constants or the original express trees.
TEST_Objects_FoldedConstants = ${EXAMPLE_TESTCODES_REQUIRED_TO_PASS_FOLDED_CONSTANTS:.C=.foldedConstants-o}
TEST_Objects_UnfoldedConstants = ${ALL_TESTCODES:.C=.unfoldedConstants-o}

# VALGRIND_OPTIONS = -v --num-callers=12 --leak-check=yes --error-limit=no --show-reachable=yes
VALGRIND_OPTIONS = --tool=memcheck -v --num-callers=30 --leak-check=no --error-limit=no --show-reachable=yes --trace-children=yes --suppressions=$(top_srcdir)/scripts/rose-suppressions-for-valgrind
# VALGRIND = valgrind $(VALGRIND_OPTIONS)
VALGRIND =

# A number of tests require the path to the A++ include directory 
# and a number of other tests require a path to the source directory.
# Add the dependence upon the source file to trigger recompilation each time the makefile is run!
# $(TEST_Objects): ../../testTranslator $(srcdir)/$(@:.o=.C)
$(TEST_Objects): ../../testTranslator
if !ROSE_USE_INSURE
	$(VALGRIND) ../../testTranslator $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.o=.C)
#	$(VALGRIND) ../../testParser $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.o=.C)
#	$(VALGRIND) ../../testFrontEnd $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.o=.C)
else
#	DQ (4/22/2011): For Insure++ we want to get the filename into the names used for the report files.
#	@if test ! -f "../../.libs/lt-testTranslator"; then echo "Can NOT find ../../.libs/lt-testTranslator"; ../../testTranslator --help > /dev/null; echo "Fixed"; fi
#	cp ../../.libs/lt-testTranslator testTranslator_$(@:.o=)
#	./testTranslator_$(@:.o=) $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.o=.C)
#	echo "Removing the just built copy of lt-testTranslator to save space..."
#	rm -f testTranslator_$(@:.o=)
	$(VALGRIND) ../../testTranslator $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.o=.C)
endif

# DQ (9/18/2011): This is testing the option to process the AST to use the constant folded values (contained in the AST).
$(TEST_Objects_FoldedConstants): ../../testTranslatorFoldedConstants
	$(VALGRIND) ../../testTranslatorFoldedConstants $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.foldedConstants-o=.C) && touch $@
#	$(VALGRIND) ../../testFrontEnd $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.o=.C)

# DQ (9/18/2011): This is the equivalent to the default using testTranslator (so not critical to run this).
$(TEST_Objects_UnfoldedConstants): ../../testTranslatorUnfoldedConstants
	$(VALGRIND) ../../testTranslatorUnfoldedConstants $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.unfoldedConstants-o=.C) && touch $@

# DQ (4/6/2010): Added test for parsing only (tested here for C++ code)
testParser:../../testParser
	$(VALGRIND) ../../testParser $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/test2001_01.C

# This requires a special makefile rule
test2005_56.o: ../../testTranslator
	../../testTranslator $(ROSE_FLAGS) -DTEST_STRING_MACRO=\""Thu Apr 14 08:18:33 PDT 2005"\" -c $(srcdir)/test2005_56.C -o test2005_56.o

test2010_01.o: ../../testTranslator
	echo "Running boost specific test."
	../../testTranslator $(ROSE_FLAGS) $(ROSE_INCLUDES) -c $(srcdir)/test2010_01.C -o test2010_01.o

test2010_02.o: ../../testTranslator
	echo "Running boost specific test."
	../../testTranslator $(ROSE_FLAGS) -I$(top_builddir) $(ROSE_INCLUDES) -c $(srcdir)/test2010_02.C -o test2010_02.o

test2010_07.o: ../../testTranslator
	echo "Running boost specific test."
#	../../testTranslator $(ROSE_FLAGS) -I$(top_builddir) $(ROSE_INCLUDES) -c $(srcdir)/test2010_07.C -o test2010_07.o
	../../testTranslator $(ROSE_FLAGS) -I$(top_builddir) -I$(top_srcdir)/src -I$(top_srcdir)/src/util -c $(srcdir)/test2010_07.C -o test2010_07.o

test2010_08.o: ../../testTranslator
	echo "Running boost specific test."
	../../testTranslator $(ROSE_FLAGS) -I$(top_builddir) $(ROSE_INCLUDES) -c $(srcdir)/test2010_08.C -o test2010_08.o

cpp_test2010_07: ../../testTranslator
	echo "Running boost specific test."
	g++ -E -I$(top_builddir) $(ROSE_INCLUDES) -c $(srcdir)/test2010_07.C

../../testTranslator:
	cd ../..; $(MAKE) testTranslator

../../testTranslatorFoldedConstants:
	cd ../..; $(MAKE) testTranslatorFoldedConstants

../../testTranslatorUnfoldedConstants:
	cd ../..; $(MAKE) testTranslatorUnfoldedConstants


CURRENT_DIRECTORY = `pwd`
QMTEST_Objects = ${ALL_TESTCODES:.C=.qmt}

$(QMTEST_Objects): ../../testTranslator
	qm.sh f rose.RoseTest $(CURRENT_DIRECTORY)/../../testTranslator NULL $(ROSE_FLAGS) $(TESTCODE_INCLUDES) -I$(srcdir) -c $(srcdir)/$(@:.qmt=.C)

# This must be placed after the more general rule to work properly!
test2005_56.qmt: ../../testTranslator
	qm.sh f rose.RoseTest $(CURRENT_DIRECTORY)/../../testTranslator NULL $(ROSE_FLAGS) -DTEST_STRING_MACRO=\""Thu Apr 14 08:18:33 PDT 2005"\" -I$(srcdir) -c $(srcdir)/$(@:.qmt=.C)

# Include makefile rules specific to QMTest
include $(top_srcdir)/config/QMTest_makefile.inc

# Make sure that all the test codes end up in the distribution
EXTRA_DIST = $(EXAMPLE_TESTCODES_REQUIRED_TO_PASS) $(TESTCODE_CURRENTLY_FAILING) test_CplusplusMacro_C.C test2006_137.C \
     confdefs.h  test2001_05.h  test2001_11.h test2001_18A.h  test2003_08.h  test2003_12.h  test2003_24.h  test2004_40.h \
     test2005_154.h  test2005_158.h  test2005_15.h   test2005_26.h  test2005_81.h  test2006_33.h foo.h \
     test2001_15.h  test2001_18B.h  test2003_09.h  test2003_14.h  test2003_25.h  test2005_133.h  test2005_157.h \
     test2005_159.h  test2005_160.h  test2005_75.h  test2005_88.h  test2006_36.h test2006_42.h test2006_187a.h \
     test2006_187b.h test2007_08.h test2007_41.h \
     test2007_42.h test2007_47.h test2007_48.h test2007_97.h test2007_101.h test2007_136.h test2007_137.h test2007_160.h test2007_160a.h test2007_167.h \
     test2008_11.h LogicalPath.cpp test2005_56.C test2010_25.h

# DQ (6/18/2008): All of these should be present...
# confdefs.h     test2001_11.h   test2001_18B.h  test2003_12.h  test2003_25.h   test2005_154.h  test2005_159.h  test2005_26.h  test2005_88.h    test2006_187b.h  test2006_42.h   test2007_113.h  test2007_137.h   test2007_167.h  test2007_42.h  test2007_97.h
# foo.h          test2001_15.h   test2003_08.h   test2003_14.h  test2004_40.h   test2005_157.h  test2005_15.h   test2005_75.h  test2006_136.h   test2006_33.h    test2007_08.h   test2007_114.h  test2007_160a.h  test2007_40.h   test2007_47.h
# test2001_05.h  test2001_18A.h  test2003_09.h   test2003_24.h  test2005_133.h  test2005_158.h  test2005_160.h  test2005_81.h  test2006_187a.h  test2006_36.h    test2007_101.h  test2007_136.h  test2007_160.h   test2007_41.h   test2007_48.h

# This was a bug specific to the normalization of source file names to absolute paths
# DQ (12/11/2009): At the moment it is an failing test because "thisIsAnError" will be 
# interpreted to be a file.
testUsingBadCommandline: ../../testTranslator
	echo "class A { int x; float y;}; int main() { int x=0; return x; }" > roseTestProgram.C; \
	../../testTranslator -DthisIsOK -D thisIsAnError -rose:verbose 0 roseTestProgram.C

# This was a bug specific to the normalization of source file names to absolute paths
testBuildUsingNoPath: ../../testTranslator
	echo "class A { int x; float y;}; int main() { int x=0; return x; }" > roseTestProgram.C; \
	../../testTranslator -rose:verbose 0 roseTestProgram.C

# This was a bug specific to the normalization of source file names to absolute paths
testBuildUsingRelativePath: ../../testTranslator
	echo "class A { int x; float y;}; int main() { int x=0; return x; }" > roseTestProgram.C; \
	../../testTranslator -rose:verbose 0 ../Cxx_tests/roseTestProgram.C

# This was always worked but is the alternative to the normalization of source file names to absolute paths
testBuildUsingAbsolutePath: ../../testTranslator
	echo "class A { int x; float y;}; int main() { int x=0; return x; }" > roseTestProgram.C; \
	../../testTranslator -rose:verbose 0 `pwd`/roseTestProgram.C

# DQ (10/23/2010): Added MPI tests that I can at least run locally to debug when Hudson MPI tests fail.
MPI_LOCATION = /home/dquinlan/ROSE/ROSE_TESTS/MPI_header_tests/MPI_header_tests_64bit
test_MPI_LAM:
	../../testTranslator -rose:verbose 0 -I$(MPI_LOCATION)/LAM_MPI/include -c $(MPI_LOCATION)/tests/input.C

# DQ (7/24/2011): These test fail the AST IO but pass the compilation tests.  Debug these for AST File I/O separately.
failingAST_IO_tests: test2011_113.o test2011_114.o test2011_116.o

print_testcodes:
	echo $(TESTCODES)

check-local:
if !ROSE_USE_NEW_EDG_INTERFACE
#	@$(MAKE) testUsingBadCommandline
	@$(MAKE) testBuildUsingNoPath
	@$(MAKE) testBuildUsingRelativePath
	@$(MAKE) testBuildUsingAbsolutePath
	@echo "Tests of C++."
	@$(MAKE) failingAST_IO_tests
endif
	@$(MAKE) $(PASSING_TEST_Objects)
if !ROSE_USE_NEW_EDG_INTERFACE
#	DQ (9/18/2011): Added tests for folded constant option.
	@$(MAKE) $(TEST_Objects_FoldedConstants)
#	DQ (4/6/2010): This fails on Hudson, but I don't know why!
#	@$(MAKE) testParser
#	DQ (5/8/2011): Special tests are now moved to the end.
	@$(MAKE) test2005_56.o
	@$(MAKE) test2010_07.o
endif
	@echo "***********************************************************************************************"
	@echo "****** ROSE/tests/CompileTests/Cxx_tests: make check rule complete (terminated normally) ******"
	@echo "***********************************************************************************************"

clean-local:
	rm -f a.out *.o rose_*.[cC] roseTestProgram.C *.dot
	rm -f *.foldedConstants-o
	rm -f *.unfoldedConstants-o
	rm -rf QMTest
	rm -f *.int.c
