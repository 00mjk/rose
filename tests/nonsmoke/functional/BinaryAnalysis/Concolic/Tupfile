include_rules

ifeq (@(ENABLE_BINARY_ANALYSIS) @(WITH_SQLITE),yes yes)

#------------------------------------------------------------------------------------------------------------------------
# Database tests

# a.1) sample program to load and store in DB
run $(support_compile_linkexe) sampleExecutable.C

# a.2) sample program to test the execution monitor
run $(support_compile_linkexe) test-execution-monitor.C

# a.3) execution monitor to produce quality score
run $(tool_compile_linkexe) ExecutionMonitor.C

# a.4) test compiled programs
run $(tool_compile_linkexe) testConcolicDB.C
run $(test) testConcolicDB

# b) test various executions
run $(test) ./crsh/crsh -o testOpenDB \
    --extra=openDB.db \
    ./crsh/crsh openDB.crsh

run $(test) ./crsh/crsh -o testDefineTests \
    --extra=defineTests.db \
    ./crsh/crsh defineTests.crsh

run $(test) ./crsh/crsh -o testRun1 \
    --extra=run1.db \
    ./crsh/crsh run1.crsh

run $(test) ./crsh/crsh -o testRun10 \
    --extra=run10.db \
    ./crsh/crsh run10.crsh

run $(test) ./crsh/crsh -o testDefineFail \
    --extra=defineFail.db \
    ./crsh/crsh defineFail.crsh

run $(test) ./crsh/crsh -o testCombined \
    --extra=combined.db \
    ./crsh/crsh combined.crsh

run $(test) ./crsh/crsh -o testExport \
    --input=sampleExecutable \
    --extra=testExport.db \
    ./crsh/crsh testExport.crsh

run $(test) ./crsh/crsh -o testAddressRandomization \
    --input=sampleExecutable \
    ./crsh/crsh testAddressRandomization.crsh
    
run $(test) ./crsh/crsh -o testExecutionMonitor \
    --input=ExecutionMonitor test-execution-monitor \
    ./crsh/crsh testExecutionMonitor.crsh

run $(test) ./crsh/crsh -o testConnectNonExisting \
    ./crsh/crsh testConnectNonExisting.crsh

run $(test) ./crsh/crsh -o testCreateOverwrites \
    ./crsh/crsh testCreateOverwrites.crsh

run $(test) ./crsh/crsh -o testConnect \
    ./crsh/crsh testConnect.crsh

#------------------------------------------------------------------------------------------------------------------------
# Concolic executor tests

run $(tool_compile_linkexe) testConcolicExecutor.C
run $(test) testConcolicExecutor \
    ./testConcolicExecutor --log 'Rose::BinaryAnalysis::Concolic\(debug\)' \
    $(ROSE)/tests/nonsmoke/specimens/binary/concolic-specimen-01

endif
